[
  {
    "label": "FReadSurfaceDataFlags",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReadSurfaceDataFlags"
  },
  {
    "label": "FUpdateTextureRegion2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateTextureRegion2D"
  },
  {
    "label": "FUpdateTextureRegion3D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateTextureRegion3D"
  },
  {
    "label": "FReadSurfaceDataFlags()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RHIDefinitions . h \" # include \" Math / PerspectiveMatrix . h \" # include \" Math / IntVector . h \" class FReadSurfaceDataFlags { public :)",
    "insertText": "FReadSurfaceDataFlags(ERangeCompressionMode InCompressionMode = RCM_UNorm, ECubeFace InCubeFace = CubeFace_MAX) :CubeFace(InCubeFace), CompressionMode(InCompressionMode)"
  },
  {
    "label": "GetCubeFace()",
    "kind": "Method",
    "detail": "Function (} ECubeFace)",
    "insertText": "GetCubeFace()"
  },
  {
    "label": "GetCompressionMode()",
    "kind": "Method",
    "detail": "Function (CubeFace = InCubeFace ; } ERangeCompressionMode)",
    "insertText": "GetCompressionMode()"
  },
  {
    "label": "GetLinearToGamma()",
    "kind": "Method",
    "detail": "Function (bLinearToGamma = Value ; } bool)",
    "insertText": "GetLinearToGamma()"
  },
  {
    "label": "GetOutputStencil()",
    "kind": "Method",
    "detail": "Function (bOutputStencil = Value ; } bool)",
    "insertText": "GetOutputStencil()"
  },
  {
    "label": "GetMip()",
    "kind": "Method",
    "detail": "Function (MipLevel = InMipLevel ; } uint8)",
    "insertText": "GetMip()"
  },
  {
    "label": "ComputeNormalizedDepth()",
    "kind": "Method",
    "detail": "Function (MaxDepthRange = Value ; } float)",
    "insertText": "ComputeNormalizedDepth(float DeviceZ)"
  },
  {
    "label": "SetGPUIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetGPUIndex(uint32 InGPUIndex)"
  },
  {
    "label": "GetGPUIndex()",
    "kind": "Method",
    "detail": "Function (GPUIndex = InGPUIndex ; } uint32)",
    "insertText": "GetGPUIndex()"
  },
  {
    "label": "GetArrayIndex()",
    "kind": "Method",
    "detail": "Function (ArrayIndex = InArrayIndex ; } int32)",
    "insertText": "GetArrayIndex()"
  },
  {
    "label": "Min()",
    "kind": "Method",
    "detail": "Function (DeviceZ =)",
    "insertText": "Min(DeviceZ, 1 - Z_PRECISION)"
  },
  {
    "label": "InvDeviceZToWorldZ()",
    "kind": "Method",
    "detail": "Function (const FVector2f)",
    "insertText": "InvDeviceZToWorldZ(0.1f, 0.1f)"
  },
  {
    "label": "FUpdateTextureRegion2D()",
    "kind": "Method",
    "detail": "Function (} ECubeFace CubeFace = CubeFace_MAX ; ERangeCompressionMode CompressionMode = RCM_UNorm ; bool bLinearToGamma = true ; float MaxDepthRange = 1 6 0 0 0 . 0 f ; bool bOutputStencil = false ; uint8 MipLevel = 0 ; int32 ArrayIndex = 0 ; uint32 GPUIndex = 0 ; } ; struct FUpdateTextureRegion2D { uint32 DestX ; uint32 DestY ; int32 SrcX ; int32 SrcY ; uint32 Width ; uint32 Height ;)",
    "insertText": "FUpdateTextureRegion2D()"
  },
  {
    "label": "FUpdateTextureRegion2D()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FUpdateTextureRegion2D(uint32 InDestX, uint32 InDestY, int32 InSrcX, int32 InSrcY, uint32 InWidth, uint32 InHeight) : DestX(InDestX) , DestY(InDestY) , SrcX(InSrcX) , SrcY(InSrcY) , Width(InWidth) , Height(InHeight)"
  },
  {
    "label": "FUpdateTextureRegion3D()",
    "kind": "Method",
    "detail": "Function (} } ; struct FUpdateTextureRegion3D { uint32 DestX ; uint32 DestY ; uint32 DestZ ; int32 SrcX ; int32 SrcY ; int32 SrcZ ; uint32 Width ; uint32 Height ; uint32 Depth ;)",
    "insertText": "FUpdateTextureRegion3D()"
  },
  {
    "label": "FUpdateTextureRegion3D()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FUpdateTextureRegion3D(uint32 InDestX, uint32 InDestY, uint32 InDestZ, int32 InSrcX, int32 InSrcY, int32 InSrcZ, uint32 InWidth, uint32 InHeight, uint32 InDepth) : DestX(InDestX) , DestY(InDestY) , DestZ(InDestZ) , SrcX(InSrcX) , SrcY(InSrcY) , SrcZ(InSrcZ) , Width(InWidth) , Height(InHeight) , Depth(InDepth)"
  },
  {
    "label": "FUpdateTextureRegion3D()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FUpdateTextureRegion3D(FIntVector InDest, FIntVector InSource, FIntVector InSourceSize) : DestX(InDest.X) , DestY(InDest.Y) , DestZ(InDest.Z) , SrcX(InSource.X) , SrcY(InSource.Y) , SrcZ(InSource.Z) , Width(InSourceSize.X) , Height(InSourceSize.Y) , Depth(InSourceSize.Z)"
  }
]