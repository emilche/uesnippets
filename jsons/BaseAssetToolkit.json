[
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "SEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditorViewport"
  },
  {
    "label": "FLayoutExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayoutExtender"
  },
  {
    "label": "FPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewScene"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "UAssetEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetEditor"
  },
  {
    "label": "FBaseAssetToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseAssetToolkit"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "FEditorViewportTabContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportTabContent"
  },
  {
    "label": "FBaseAssetToolkit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / Object . h \" # include \" Toolkits / AssetEditorToolkit . h \" # include \" Templates / SharedPointer . h \" # include \" Framework / Docking / TabManager . h \" # include \" AssetEditorViewportLayout . h \" class SDockTab ; class FSpawnTabArgs ; class SEditorViewport ; class FLayoutExtender ; class FPreviewScene ; class FEditorViewportClient ; class UAssetEditor ; class FBaseAssetToolkit : public FAssetEditorToolkit { public :)",
    "insertText": "FBaseAssetToolkit(UAssetEditor* InOwningAssetEditor)"
  },
  {
    "label": "FBaseAssetToolkit()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FBaseAssetToolkit()"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (} FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<FTabManager>& InTabManager)"
  },
  {
    "label": "GetDefaultLayout()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<FTabManager::FLayout>)",
    "insertText": "GetDefaultLayout()"
  },
  {
    "label": "CreateWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateWidgets()"
  },
  {
    "label": "SetEditingObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditingObject(class UObject* InObject)"
  },
  {
    "label": "CreateEditorModeManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEditorModeManager()"
  },
  {
    "label": "RegisterToolbar()",
    "kind": "Method",
    "detail": "Function (public : const FName ViewportTabID ; const FName DetailsTabID ; protected : void)",
    "insertText": "RegisterToolbar()"
  },
  {
    "label": "GetViewportDelegate()",
    "kind": "Method",
    "detail": "Function (AssetEditorViewportFactoryFunction)",
    "insertText": "GetViewportDelegate()"
  },
  {
    "label": "CreateEditorViewportClient()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FEditorViewportClient>)",
    "insertText": "CreateEditorViewportClient()"
  },
  {
    "label": "SpawnTab_Viewport()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Viewport(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_Details()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Details(const FSpawnTabArgs& Args)"
  },
  {
    "label": "CreateDetailsView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDetailsView>)",
    "insertText": "CreateDetailsView()"
  }
]