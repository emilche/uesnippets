[
  {
    "label": "FNavigationRelevantData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationRelevantData"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UNavModifierComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavModifierComponent"
  },
  {
    "label": "FRotatedBox",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRotatedBox"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" CoreMinimal . h \" # endif # include \" UObject / ObjectMacros . h \" # include \" Templates / SubclassOf . h \" # include \" NavAreas / NavArea . h \" # include \" NavRelevantComponent . h \" # include \" NavModifierComponent . generated . h \" struct FNavigationRelevantData ; class UBodySetup ; enum class ENavigationDataResolution : uint8 ;)",
    "insertText": "UCLASS(ClassGroup = (Navigation), meta = (BlueprintSpawnableComponent), hidecategories = (Activation), config = Engine, defaultconfig, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = Navigation)"
  },
  {
    "label": "CalculateBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateBounds()"
  },
  {
    "label": "CalcAndCacheBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalcAndCacheBounds()"
  },
  {
    "label": "GetNavigationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNavigationData(FNavigationRelevantData& Data)"
  },
  {
    "label": "OnTransformUpdated()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnTransformUpdated(USceneComponent* RootComponent, EUpdateTransformFlags UpdateTransformFlags, ETeleportType Teleport)"
  },
  {
    "label": "OnNavAreaRegistered()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "OnNavAreaRegistered(const UWorld& World, const UClass* NavAreaClass)"
  },
  {
    "label": "OnNavAreaUnregistered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNavAreaUnregistered(const UWorld& World, const UClass* NavAreaClass)"
  },
  {
    "label": "OnRegister()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "OnRegister()"
  },
  {
    "label": "OnUnregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnregister()"
  },
  {
    "label": "PopulateComponentBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateComponentBounds(FTransform InParentTransform, const UBodySetup& InBodySetup)"
  },
  {
    "label": "FRotatedBox()",
    "kind": "Method",
    "detail": "Function (struct FRotatedBox { FBox Box ; FQuat Quat ;)",
    "insertText": "FRotatedBox()"
  },
  {
    "label": "FRotatedBox()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRotatedBox(const FBox& InBox, const FQuat& InQuat) : Box(InBox), Quat(InQuat)"
  }
]