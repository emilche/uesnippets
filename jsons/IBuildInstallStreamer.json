[
  {
    "label": "FBuildInstallStreamerConfiguration",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildInstallStreamerConfiguration"
  },
  {
    "label": "FBuildInstallStreamerStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildInstallStreamerStats"
  },
  {
    "label": "IBuildInstallStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildInstallStreamer"
  },
  {
    "label": "FBuildPatchStreamResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildPatchStreamResult"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BuildPatchState . h \" # include \" BuildPatchMessage . h \" # include \" Interfaces / IBuildInstaller . h \" namespace BuildPatchServices { struct FBuildInstallStreamerConfiguration ; struct FBuildInstallStreamerStats ; } typedef TSharedPtr<class IBuildInstallStreamer,ESPMode::ThreadSafe> IBuildInstallStreamerPtr ; typedef TSharedRef<class IBuildInstallStreamer,ESPMode::ThreadSafe> IBuildInstallStreamerRef ; typedef TWeakPtr<class IBuildInstallStreamer,ESPMode::ThreadSafe> IBuildInstallStreamerWeakPtr ; struct FBuildPatchStreamResult { public : TSet<FString> Request ; EBuildPatchInstallError ErrorType ; FString ErrorCode ; int64 TotalDownloaded ; } ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FBuildPatchStreamCompleteDelegate, FBuildPatchStreamResult)"
  },
  {
    "label": "IBuildInstallStreamer()",
    "kind": "Method",
    "detail": "Function (class IBuildInstallStreamer { public : ~)",
    "insertText": "IBuildInstallStreamer()"
  },
  {
    "label": "QueueFilesByTag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "QueueFilesByTag(TSet<FString> Tags, FBuildPatchStreamCompleteDelegate OnComplete)"
  },
  {
    "label": "QueueFilesByName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueFilesByName(TSet<FString> Files, FBuildPatchStreamCompleteDelegate OnComplete)"
  },
  {
    "label": "CancelAllRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAllRequests()"
  },
  {
    "label": "RegisterMessageHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMessageHandler(BuildPatchServices::FMessageHandler* MessageHandler)"
  },
  {
    "label": "UnregisterMessageHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterMessageHandler(BuildPatchServices::FMessageHandler* MessageHandler)"
  },
  {
    "label": "GetConfiguration()",
    "kind": "Method",
    "detail": "Function (const BuildPatchServices::FBuildInstallStreamerConfiguration&)",
    "insertText": "GetConfiguration()"
  },
  {
    "label": "GetInstallStreamerStatistics()",
    "kind": "Method",
    "detail": "Function (const BuildPatchServices::FBuildInstallStreamerStats&)",
    "insertText": "GetInstallStreamerStatistics()"
  },
  {
    "label": "GetInstallStreamerSessionStatistics()",
    "kind": "Method",
    "detail": "Function (const BuildPatchServices::FBuildInstallStreamerStats&)",
    "insertText": "GetInstallStreamerSessionStatistics()"
  },
  {
    "label": "ResetSessionStatistics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSessionStatistics()"
  }
]