[
  {
    "label": "BlockProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockProcessor"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_BLOCK_PROCESSOR_H_ # define MODULES_AUDIO_PROCESSING_AEC3_BLOCK_PROCESSOR_H_ # include<stddef . h> # include<memory> # include<vector> # include \" api / audio / echo_canceller3_config . h \" # include \" api / audio / echo_control . h \" # include \" modules / audio_processing / aec3 / block . h \" # include \" modules / audio_processing / aec3 / echo_remover . h \" # include \" modules / audio_processing / aec3 / render_delay_buffer . h \" # include \" modules / audio_processing / aec3 / render_delay_controller . h \" namespace webrtc { class BlockProcessor { public : BlockProcessor*)",
    "insertText": "Create(const EchoCanceller3Config& config, int sample_rate_hz, size_t num_render_channels, size_t num_capture_channels)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (BlockProcessor*)",
    "insertText": "Create(const EchoCanceller3Config& config, int sample_rate_hz, size_t num_render_channels, size_t num_capture_channels, std::unique_ptr<RenderDelayBuffer> render_buffer)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (BlockProcessor*)",
    "insertText": "Create(const EchoCanceller3Config& config, int sample_rate_hz, size_t num_render_channels, size_t num_capture_channels, std::unique_ptr<RenderDelayBuffer> render_buffer, std::unique_ptr<RenderDelayController> delay_controller, std::unique_ptr<EchoRemover> echo_remover)"
  },
  {
    "label": "BlockProcessor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "BlockProcessor()"
  },
  {
    "label": "GetMetrics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMetrics(EchoControl::Metrics* metrics)"
  },
  {
    "label": "SetAudioBufferDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAudioBufferDelay(int delay_ms)"
  },
  {
    "label": "ProcessCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCapture(bool echo_path_gain_change, bool capture_signal_saturation, Block* linear_output, Block* capture_block)"
  },
  {
    "label": "BufferRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferRender(const Block& render_block)"
  },
  {
    "label": "UpdateEchoLeakageStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEchoLeakageStatus(bool leakage_detected)"
  },
  {
    "label": "SetCaptureOutputUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCaptureOutputUsage(bool capture_output_used)"
  }
]