[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "dtRotation",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "dtRotation"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "floorf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "floorf(x)"
  },
  {
    "label": "floor()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "floor(x)"
  },
  {
    "label": "ceilf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ceilf(x)"
  },
  {
    "label": "ceil()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ceil(x)"
  },
  {
    "label": "sinf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sinf(x)"
  },
  {
    "label": "sin()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sin(x)"
  },
  {
    "label": "cosf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cosf(x)"
  },
  {
    "label": "cos()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cos(x)"
  },
  {
    "label": "atan2f()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "atan2f(x, y)"
  },
  {
    "label": "atan2()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "atan2(x, y)"
  },
  {
    "label": "sqrtf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sqrtf(x)"
  },
  {
    "label": "sqrt()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sqrt(x)"
  },
  {
    "label": "fmodf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "fmodf(x, y)"
  },
  {
    "label": "fmod()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "fmod(x, y)"
  },
  {
    "label": "dtSqrt()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "dtSqrt(v[0]*v[0] + v[1]*v[1] + v[2]*v[2])"
  },
  {
    "label": "dtSqrt()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "dtSqrt(dx*dx + dy*dy + dz*dz)"
  },
  {
    "label": "dtSqrt()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "dtSqrt(dx*dx + dz*dz)"
  },
  {
    "label": "dtClosestPtPointTriangle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtClosestPtPointTriangle(dtReal* closest, const dtReal* p,\n\t\t\t\t\t\t\t  const dtReal* a, const dtReal* b, const dtReal* c)"
  },
  {
    "label": "dtClosestHeightPointTriangle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "dtClosestHeightPointTriangle(const dtReal* p, const dtReal* a, const dtReal* b, const dtReal* c, dtReal& h)"
  },
  {
    "label": "dtIntersectSegmentPoly2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "dtIntersectSegmentPoly2D(const dtReal* p0, const dtReal* p1,\n\t\t\t\t\t\t\t  const dtReal* verts, int nverts,\n\t\t\t\t\t\t\t  dtReal& tmin, dtReal& tmax,\n\t\t\t\t\t\t\t  int& segMin, int& segMax)"
  },
  {
    "label": "dtIntersectSegSeg2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "dtIntersectSegSeg2D(const dtReal* ap, const dtReal* aq,\n\t\t\t\t\t\t const dtReal* bp, const dtReal* bq,\n\t\t\t\t\t\t dtReal& s, dtReal& t)"
  },
  {
    "label": "dtPointInPolygon()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "dtPointInPolygon(const dtReal* pt, const dtReal* verts, const int nverts)"
  },
  {
    "label": "dtDistancePtPolyEdgesSqr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "dtDistancePtPolyEdgesSqr(const dtReal* pt, const dtReal* verts, const int nverts,\n\t\t\t\t\t\t\tdtReal* ed, dtReal* et)"
  },
  {
    "label": "dtDistancePtSegSqr2D()",
    "kind": "Method",
    "detail": "Function (dtReal)",
    "insertText": "dtDistancePtSegSqr2D(const dtReal* pt, const dtReal* p, const dtReal* q, dtReal& t)"
  },
  {
    "label": "dtDistancePtSegSqr()",
    "kind": "Method",
    "detail": "Function (dtReal)",
    "insertText": "dtDistancePtSegSqr(const dtReal* pt, const dtReal* p, const dtReal* q)"
  },
  {
    "label": "dtCalcPolyCenter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtCalcPolyCenter(dtReal* tc, const unsigned short* idx, int nidx, const dtReal* verts)"
  },
  {
    "label": "dtOverlapPolyPoly2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "dtOverlapPolyPoly2D(const dtReal* polya, const int npolya,\n\t\t\t\t\t\t const dtReal* polyb, const int npolyb)"
  },
  {
    "label": "dtRandomPointInConvexPoly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtRandomPointInConvexPoly(const dtReal* pts, const int npts, dtReal* areas,\n\t\t\t\t\t\t\t   const dtReal s, const dtReal t, dtReal* out)"
  },
  {
    "label": "dtSelectRotation()",
    "kind": "Method",
    "detail": "Function (dtRotation)",
    "insertText": "dtSelectRotation(dtReal rotationDeg)"
  },
  {
    "label": "dtVRot90()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtVRot90(dtReal* dest, const dtReal* v, const dtRotation rot)"
  },
  {
    "label": "dtVRot90()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtVRot90(unsigned short* dest, const unsigned short* v, const dtRotation rot)"
  },
  {
    "label": "dtRotate90()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtRotate90(dtReal* dest, const dtReal* v, const dtReal* center, const dtRotation rot)"
  },
  {
    "label": "dtRotate90()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtRotate90(unsigned short* dest, const unsigned short* v, const unsigned short* center, const dtRotation rot)"
  }
]