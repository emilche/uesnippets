[
  {
    "label": "_D3DVECTOR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_D3DVECTOR"
  },
  {
    "label": "IDirectSound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSound"
  },
  {
    "label": "IDirectSoundBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundBuffer"
  },
  {
    "label": "IDirectSound3DListener",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSound3DListener"
  },
  {
    "label": "IDirectSound3DBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSound3DBuffer"
  },
  {
    "label": "IDirectSoundCapture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundCapture"
  },
  {
    "label": "IDirectSoundCaptureBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundCaptureBuffer"
  },
  {
    "label": "IDirectSoundNotify",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundNotify"
  },
  {
    "label": "IDirectSound8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSound8"
  },
  {
    "label": "IDirectSoundBuffer8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundBuffer8"
  },
  {
    "label": "IDirectSoundCaptureBuffer8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundCaptureBuffer8"
  },
  {
    "label": "IDirectSoundFXGargle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXGargle"
  },
  {
    "label": "IDirectSoundFXChorus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXChorus"
  },
  {
    "label": "IDirectSoundFXFlanger",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXFlanger"
  },
  {
    "label": "IDirectSoundFXEcho",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXEcho"
  },
  {
    "label": "IDirectSoundFXDistortion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXDistortion"
  },
  {
    "label": "IDirectSoundFXCompressor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXCompressor"
  },
  {
    "label": "IDirectSoundFXParamEq",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXParamEq"
  },
  {
    "label": "IDirectSoundFXWavesReverb",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXWavesReverb"
  },
  {
    "label": "IDirectSoundFXI3DL2Reverb",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXI3DL2Reverb"
  },
  {
    "label": "IDirectSoundCaptureFXAec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundCaptureFXAec"
  },
  {
    "label": "IDirectSoundCaptureFXNoiseSuppress",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundCaptureFXNoiseSuppress"
  },
  {
    "label": "IDirectSoundFullDuplex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFullDuplex"
  },
  {
    "label": "IDirectSound3DListener8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSound3DListener8"
  },
  {
    "label": "IDirectSound3DBuffer8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSound3DBuffer8"
  },
  {
    "label": "IDirectSoundCapture8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundCapture8"
  },
  {
    "label": "IDirectSoundNotify8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundNotify8"
  },
  {
    "label": "IDirectSoundFXGargle8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXGargle8"
  },
  {
    "label": "IDirectSoundFXChorus8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXChorus8"
  },
  {
    "label": "IDirectSoundFXFlanger8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXFlanger8"
  },
  {
    "label": "IDirectSoundFXEcho8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXEcho8"
  },
  {
    "label": "IDirectSoundFXDistortion8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXDistortion8"
  },
  {
    "label": "IDirectSoundFXCompressor8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXCompressor8"
  },
  {
    "label": "IDirectSoundFXParamEq8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXParamEq8"
  },
  {
    "label": "IDirectSoundFXWavesReverb8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXWavesReverb8"
  },
  {
    "label": "IDirectSoundFXI3DL2Reverb8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFXI3DL2Reverb8"
  },
  {
    "label": "IDirectSoundCaptureFXAec8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundCaptureFXAec8"
  },
  {
    "label": "IDirectSoundCaptureFXNoiseSuppress8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundCaptureFXNoiseSuppress8"
  },
  {
    "label": "IDirectSoundFullDuplex8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectSoundFullDuplex8"
  },
  {
    "label": "_DSCAPS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSCAPS"
  },
  {
    "label": "_DSBCAPS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSBCAPS"
  },
  {
    "label": "_DSEFFECTDESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSEFFECTDESC"
  },
  {
    "label": "_DSCEFFECTDESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSCEFFECTDESC"
  },
  {
    "label": "_DSBUFFERDESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSBUFFERDESC"
  },
  {
    "label": "_DSBUFFERDESC1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSBUFFERDESC1"
  },
  {
    "label": "_DS3DBUFFER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DS3DBUFFER"
  },
  {
    "label": "_DS3DLISTENER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DS3DLISTENER"
  },
  {
    "label": "_DSCCAPS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSCCAPS"
  },
  {
    "label": "_DSCBUFFERDESC1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSCBUFFERDESC1"
  },
  {
    "label": "_DSCBUFFERDESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSCBUFFERDESC"
  },
  {
    "label": "_DSCBCAPS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSCBCAPS"
  },
  {
    "label": "_DSBPOSITIONNOTIFY",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSBPOSITIONNOTIFY"
  },
  {
    "label": "IKsPropertySet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IKsPropertySet"
  },
  {
    "label": "_DSFXGargle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSFXGargle"
  },
  {
    "label": "_DSFXChorus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSFXChorus"
  },
  {
    "label": "_DSFXFlanger",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSFXFlanger"
  },
  {
    "label": "_DSFXEcho",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSFXEcho"
  },
  {
    "label": "_DSFXDistortion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSFXDistortion"
  },
  {
    "label": "_DSFXCompressor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSFXCompressor"
  },
  {
    "label": "_DSFXParamEq",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSFXParamEq"
  },
  {
    "label": "_DSFXI3DL2Reverb",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSFXI3DL2Reverb"
  },
  {
    "label": "_DSFXWavesReverb",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSFXWavesReverb"
  },
  {
    "label": "_DSCFXAec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSCFXAec"
  },
  {
    "label": "_DSCFXNoiseSuppress",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DSCFXNoiseSuppress"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# define COM_NO_WINDOWS_H # include<objbase . h> # include<float . h> # include<sal . h> # ifndef DIRECTSOUND_VERSION #)",
    "insertText": "if(NTDDI_VERSION < NTDDI_WINXP) #define DIRECTSOUND_VERSION 0x0700 #elif (NTDDI_VERSION < NTDDI_WINXPSP2 || NTDDI_VERSION == NTDDI_WS03)"
  },
  {
    "label": "MAKE_DSHRESULT()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef __DSOUND_INCLUDED__ # define __DSOUND_INCLUDED__ # ifndef DX_SHARED_DEFINES typedef float D3DVALUE,* LPD3DVALUE ; # ifndef D3DCOLOR_DEFINED typedef DWORD D3DCOLOR ; # define D3DCOLOR_DEFINED # endif # ifndef LPD3DCOLOR_DEFINED typedef DWORD* LPD3DCOLOR ; # define LPD3DCOLOR_DEFINED # endif # ifndef D3DVECTOR_DEFINED typedef struct _D3DVECTOR { float x ; float y ; float z ; } D3DVECTOR ; # define D3DVECTOR_DEFINED # endif # ifndef LPD3DVECTOR_DEFINED typedef D3DVECTOR* LPD3DVECTOR ; # define LPD3DVECTOR_DEFINED # endif # define DX_SHARED_DEFINES # endif # define _FACDS 0 x878 # define)",
    "insertText": "MAKE_DSHRESULT(code) MAKE_HRESULT(1, _FACDS, code) DEFINE_GUID(CLSID_DirectSound, 0x47d4d946, 0x62e8, 0x11cf, 0x93, 0xbc, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(CLSID_DirectSound8, 0x3901cc3f, 0x84b5, 0x4fa4, 0xba, 0x35, 0xaa, 0x81, 0x72, 0xb8, 0xa0, 0x9b)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(CLSID_DirectSoundCapture, 0xb0210780, 0x89cd, 0x11d0, 0xaf, 0x8, 0x0, 0xa0, 0xc9, 0x25, 0xcd, 0x16)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(CLSID_DirectSoundCapture8, 0xe4bcac13, 0x7f99, 0x4908, 0x9a, 0x8e, 0x74, 0xe3, 0xbf, 0x24, 0xb6, 0xe1)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(CLSID_DirectSoundFullDuplex, 0xfea4300c, 0x7959, 0x4147, 0xb2, 0x6a, 0x23, 0x77, 0xb9, 0xe7, 0xa9, 0x1d)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(DSDEVID_DefaultPlayback, 0xdef00000, 0x9c6d, 0x47ed, 0xaa, 0xf1, 0x4d, 0xda, 0x8f, 0x2b, 0x5c, 0x03)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(DSDEVID_DefaultCapture, 0xdef00001, 0x9c6d, 0x47ed, 0xaa, 0xf1, 0x4d, 0xda, 0x8f, 0x2b, 0x5c, 0x03)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(DSDEVID_DefaultVoicePlayback, 0xdef00002, 0x9c6d, 0x47ed, 0xaa, 0xf1, 0x4d, 0xda, 0x8f, 0x2b, 0x5c, 0x03)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(DSDEVID_DefaultVoiceCapture, 0xdef00003, 0x9c6d, 0x47ed, 0xaa, 0xf1, 0x4d, 0xda, 0x8f, 0x2b, 0x5c, 0x03)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (# ifdef __cplusplus struct IDirectSound ; struct IDirectSoundBuffer ; struct IDirectSound3DListener ; struct IDirectSound3DBuffer ; struct IDirectSoundCapture ; struct IDirectSoundCaptureBuffer ; struct IDirectSoundNotify ; # endif # if DIRECTSOUND_VERSION> = 0 x0800 # ifdef __cplusplus struct IDirectSound8 ; struct IDirectSoundBuffer8 ; struct IDirectSoundCaptureBuffer8 ; struct IDirectSoundFXGargle ; struct IDirectSoundFXChorus ; struct IDirectSoundFXFlanger ; struct IDirectSoundFXEcho ; struct IDirectSoundFXDistortion ; struct IDirectSoundFXCompressor ; struct IDirectSoundFXParamEq ; struct IDirectSoundFXWavesReverb ; struct IDirectSoundFXI3DL2Reverb ; struct IDirectSoundCaptureFXAec ; struct IDirectSoundCaptureFXNoiseSuppress ; struct IDirectSoundFullDuplex ; # endif # define IDirectSoundCapture8 IDirectSoundCapture # define IDirectSound3DListener8 IDirectSound3DListener # define IDirectSound3DBuffer8 IDirectSound3DBuffer # define IDirectSoundNotify8 IDirectSoundNotify # define IDirectSoundFXGargle8 IDirectSoundFXGargle # define IDirectSoundFXChorus8 IDirectSoundFXChorus # define IDirectSoundFXFlanger8 IDirectSoundFXFlanger # define IDirectSoundFXEcho8 IDirectSoundFXEcho # define IDirectSoundFXDistortion8 IDirectSoundFXDistortion # define IDirectSoundFXCompressor8 IDirectSoundFXCompressor # define IDirectSoundFXParamEq8 IDirectSoundFXParamEq # define IDirectSoundFXWavesReverb8 IDirectSoundFXWavesReverb # define IDirectSoundFXI3DL2Reverb8 IDirectSoundFXI3DL2Reverb # define IDirectSoundCaptureFXAec8 IDirectSoundCaptureFXAec # define IDirectSoundCaptureFXNoiseSuppress8 IDirectSoundCaptureFXNoiseSuppress # define IDirectSoundFullDuplex8 IDirectSoundFullDuplex # endif typedef struct IDirectSound* LPDIRECTSOUND ; typedef struct IDirectSoundBuffer* LPDIRECTSOUNDBUFFER ; typedef struct IDirectSound3DListener* LPDIRECTSOUND3DLISTENER ; typedef struct IDirectSound3DBuffer* LPDIRECTSOUND3DBUFFER ; typedef struct IDirectSoundCapture* LPDIRECTSOUNDCAPTURE ; typedef struct IDirectSoundCaptureBuffer* LPDIRECTSOUNDCAPTUREBUFFER ; typedef struct IDirectSoundNotify* LPDIRECTSOUNDNOTIFY ; # if DIRECTSOUND_VERSION> = 0 x0800 typedef struct IDirectSoundFXGargle* LPDIRECTSOUNDFXGARGLE ; typedef struct IDirectSoundFXChorus* LPDIRECTSOUNDFXCHORUS ; typedef struct IDirectSoundFXFlanger* LPDIRECTSOUNDFXFLANGER ; typedef struct IDirectSoundFXEcho* LPDIRECTSOUNDFXECHO ; typedef struct IDirectSoundFXDistortion* LPDIRECTSOUNDFXDISTORTION ; typedef struct IDirectSoundFXCompressor* LPDIRECTSOUNDFXCOMPRESSOR ; typedef struct IDirectSoundFXParamEq* LPDIRECTSOUNDFXPARAMEQ ; typedef struct IDirectSoundFXWavesReverb* LPDIRECTSOUNDFXWAVESREVERB ; typedef struct IDirectSoundFXI3DL2Reverb* LPDIRECTSOUNDFXI3DL2REVERB ; typedef struct IDirectSoundCaptureFXAec* LPDIRECTSOUNDCAPTUREFXAEC ; typedef struct IDirectSoundCaptureFXNoiseSuppress* LPDIRECTSOUNDCAPTUREFXNOISESUPPRESS ; typedef struct IDirectSoundFullDuplex* LPDIRECTSOUNDFULLDUPLEX ; typedef struct IDirectSound8* LPDIRECTSOUND8 ; typedef struct IDirectSoundBuffer8* LPDIRECTSOUNDBUFFER8 ; typedef struct IDirectSound3DListener8* LPDIRECTSOUND3DLISTENER8 ; typedef struct IDirectSound3DBuffer8* LPDIRECTSOUND3DBUFFER8 ; typedef struct IDirectSoundCapture8* LPDIRECTSOUNDCAPTURE8 ; typedef struct IDirectSoundCaptureBuffer8* LPDIRECTSOUNDCAPTUREBUFFER8 ; typedef struct IDirectSoundNotify8* LPDIRECTSOUNDNOTIFY8 ; typedef struct IDirectSoundFXGargle8* LPDIRECTSOUNDFXGARGLE8 ; typedef struct IDirectSoundFXChorus8* LPDIRECTSOUNDFXCHORUS8 ; typedef struct IDirectSoundFXFlanger8* LPDIRECTSOUNDFXFLANGER8 ; typedef struct IDirectSoundFXEcho8* LPDIRECTSOUNDFXECHO8 ; typedef struct IDirectSoundFXDistortion8* LPDIRECTSOUNDFXDISTORTION8 ; typedef struct IDirectSoundFXCompressor8* LPDIRECTSOUNDFXCOMPRESSOR8 ; typedef struct IDirectSoundFXParamEq8* LPDIRECTSOUNDFXPARAMEQ8 ; typedef struct IDirectSoundFXWavesReverb8* LPDIRECTSOUNDFXWAVESREVERB8 ; typedef struct IDirectSoundFXI3DL2Reverb8* LPDIRECTSOUNDFXI3DL2REVERB8 ; typedef struct IDirectSoundCaptureFXAec8* LPDIRECTSOUNDCAPTUREFXAEC8 ; typedef struct IDirectSoundCaptureFXNoiseSuppress8* LPDIRECTSOUNDCAPTUREFXNOISESUPPRESS8 ; typedef struct IDirectSoundFullDuplex8* LPDIRECTSOUNDFULLDUPLEX8 ; # endif # if DIRECTSOUND_VERSION> = 0 x0800 # define IID_IDirectSoundCapture8 IID_IDirectSoundCapture # define IID_IDirectSound3DListener8 IID_IDirectSound3DListener # define IID_IDirectSound3DBuffer8 IID_IDirectSound3DBuffer # define IID_IDirectSoundNotify8 IID_IDirectSoundNotify # define IID_IDirectSoundFXGargle8 IID_IDirectSoundFXGargle # define IID_IDirectSoundFXChorus8 IID_IDirectSoundFXChorus # define IID_IDirectSoundFXFlanger8 IID_IDirectSoundFXFlanger # define IID_IDirectSoundFXEcho8 IID_IDirectSoundFXEcho # define IID_IDirectSoundFXDistortion8 IID_IDirectSoundFXDistortion # define IID_IDirectSoundFXCompressor8 IID_IDirectSoundFXCompressor # define IID_IDirectSoundFXParamEq8 IID_IDirectSoundFXParamEq # define IID_IDirectSoundFXWavesReverb8 IID_IDirectSoundFXWavesReverb # define IID_IDirectSoundFXI3DL2Reverb8 IID_IDirectSoundFXI3DL2Reverb # define IID_IDirectSoundCaptureFXAec8 IID_IDirectSoundCaptureFXAec # define IID_IDirectSoundCaptureFXNoiseSuppress8 IID_IDirectSoundCaptureFXNoiseSuppress # define IID_IDirectSoundFullDuplex8 IID_IDirectSoundFullDuplex # endif # ifndef _LPCWAVEFORMATEX_DEFINED # define _LPCWAVEFORMATEX_DEFINED typedef const WAVEFORMATEX* LPCWAVEFORMATEX ; # endif # ifndef __LPCGUID_DEFINED__ # define __LPCGUID_DEFINED__ typedef const GUID* LPCGUID ; # endif typedef LPDIRECTSOUND* LPLPDIRECTSOUND ; typedef LPDIRECTSOUNDBUFFER* LPLPDIRECTSOUNDBUFFER ; typedef LPDIRECTSOUND3DLISTENER* LPLPDIRECTSOUND3DLISTENER ; typedef LPDIRECTSOUND3DBUFFER* LPLPDIRECTSOUND3DBUFFER ; typedef LPDIRECTSOUNDCAPTURE* LPLPDIRECTSOUNDCAPTURE ; typedef LPDIRECTSOUNDCAPTUREBUFFER* LPLPDIRECTSOUNDCAPTUREBUFFER ; typedef LPDIRECTSOUNDNOTIFY* LPLPDIRECTSOUNDNOTIFY ; # if DIRECTSOUND_VERSION> = 0 x0800 typedef LPDIRECTSOUND8* LPLPDIRECTSOUND8 ; typedef LPDIRECTSOUNDBUFFER8* LPLPDIRECTSOUNDBUFFER8 ; typedef LPDIRECTSOUNDCAPTURE8* LPLPDIRECTSOUNDCAPTURE8 ; typedef LPDIRECTSOUNDCAPTUREBUFFER8* LPLPDIRECTSOUNDCAPTUREBUFFER8 ; # endif typedef struct _DSCAPS { DWORD dwSize ; DWORD dwFlags ; DWORD dwMinSecondarySampleRate ; DWORD dwMaxSecondarySampleRate ; DWORD dwPrimaryBuffers ; DWORD dwMaxHwMixingAllBuffers ; DWORD dwMaxHwMixingStaticBuffers ; DWORD dwMaxHwMixingStreamingBuffers ; DWORD dwFreeHwMixingAllBuffers ; DWORD dwFreeHwMixingStaticBuffers ; DWORD dwFreeHwMixingStreamingBuffers ; DWORD dwMaxHw3DAllBuffers ; DWORD dwMaxHw3DStaticBuffers ; DWORD dwMaxHw3DStreamingBuffers ; DWORD dwFreeHw3DAllBuffers ; DWORD dwFreeHw3DStaticBuffers ; DWORD dwFreeHw3DStreamingBuffers ; DWORD dwTotalHwMemBytes ; DWORD dwFreeHwMemBytes ; DWORD dwMaxContigFreeHwMemBytes ; DWORD dwUnlockTransferRateHwBuffers ; DWORD dwPlayCpuOverheadSwBuffers ; DWORD dwReserved1 ; DWORD dwReserved2 ; } DSCAPS,* LPDSCAPS ; typedef const DSCAPS* LPCDSCAPS ; typedef struct _DSBCAPS { DWORD dwSize ; DWORD dwFlags ; DWORD dwBufferBytes ; DWORD dwUnlockTransferRate ; DWORD dwPlayCpuOverhead ; } DSBCAPS,* LPDSBCAPS ; typedef const DSBCAPS* LPCDSBCAPS ; # if DIRECTSOUND_VERSION> = 0 x0800 typedef struct _DSEFFECTDESC { DWORD dwSize ; DWORD dwFlags ; GUID guidDSFXClass ; DWORD_PTR dwReserved1 ; DWORD_PTR dwReserved2 ; } DSEFFECTDESC,* LPDSEFFECTDESC ; typedef const DSEFFECTDESC* LPCDSEFFECTDESC ; # define DSFX_LOCHARDWARE 0 x00000001 # define DSFX_LOCSOFTWARE 0 x00000002 enum { DSFXR_PRESENT,DSFXR_LOCHARDWARE,DSFXR_LOCSOFTWARE,DSFXR_UNALLOCATED,DSFXR_FAILED,DSFXR_UNKNOWN,DSFXR_SENDLOOP } ; typedef struct _DSCEFFECTDESC { DWORD dwSize ; DWORD dwFlags ; GUID guidDSCFXClass ; GUID guidDSCFXInstance ; DWORD dwReserved1 ; DWORD dwReserved2 ; } DSCEFFECTDESC,* LPDSCEFFECTDESC ; typedef const DSCEFFECTDESC* LPCDSCEFFECTDESC ; # define DSCFX_LOCHARDWARE 0 x00000001 # define DSCFX_LOCSOFTWARE 0 x00000002 # define DSCFXR_LOCHARDWARE 0 x00000010 # define DSCFXR_LOCSOFTWARE 0 x00000020 # endif typedef struct _DSBUFFERDESC { DWORD dwSize ; DWORD dwFlags ; DWORD dwBufferBytes ; DWORD dwReserved ; LPWAVEFORMATEX lpwfxFormat ; # if DIRECTSOUND_VERSION> = 0 x0700 GUID guid3DAlgorithm ; # endif } DSBUFFERDESC,* LPDSBUFFERDESC ; typedef const DSBUFFERDESC* LPCDSBUFFERDESC ; typedef struct _DSBUFFERDESC1 { DWORD dwSize ; DWORD dwFlags ; DWORD dwBufferBytes ; DWORD dwReserved ; LPWAVEFORMATEX lpwfxFormat ; } DSBUFFERDESC1,* LPDSBUFFERDESC1 ; typedef const DSBUFFERDESC1* LPCDSBUFFERDESC1 ; typedef struct _DS3DBUFFER { DWORD dwSize ; D3DVECTOR vPosition ; D3DVECTOR vVelocity ; DWORD dwInsideConeAngle ; DWORD dwOutsideConeAngle ; D3DVECTOR vConeOrientation ; LONG lConeOutsideVolume ; D3DVALUE flMinDistance ; D3DVALUE flMaxDistance ; DWORD dwMode ; } DS3DBUFFER,* LPDS3DBUFFER ; typedef const DS3DBUFFER* LPCDS3DBUFFER ; typedef struct _DS3DLISTENER { DWORD dwSize ; D3DVECTOR vPosition ; D3DVECTOR vVelocity ; D3DVECTOR vOrientFront ; D3DVECTOR vOrientTop ; D3DVALUE flDistanceFactor ; D3DVALUE flRolloffFactor ; D3DVALUE flDopplerFactor ; } DS3DLISTENER,* LPDS3DLISTENER ; typedef const DS3DLISTENER* LPCDS3DLISTENER ; typedef struct _DSCCAPS { DWORD dwSize ; DWORD dwFlags ; DWORD dwFormats ; DWORD dwChannels ; } DSCCAPS,* LPDSCCAPS ; typedef const DSCCAPS* LPCDSCCAPS ; typedef struct _DSCBUFFERDESC1 { DWORD dwSize ; DWORD dwFlags ; DWORD dwBufferBytes ; DWORD dwReserved ; LPWAVEFORMATEX lpwfxFormat ; } DSCBUFFERDESC1,* LPDSCBUFFERDESC1 ; typedef struct _DSCBUFFERDESC { DWORD dwSize ; DWORD dwFlags ; DWORD dwBufferBytes ; DWORD dwReserved ; LPWAVEFORMATEX lpwfxFormat ; # if DIRECTSOUND_VERSION> = 0 x0800 DWORD dwFXCount ; LPDSCEFFECTDESC lpDSCFXDesc ; # endif } DSCBUFFERDESC,* LPDSCBUFFERDESC ; typedef const DSCBUFFERDESC* LPCDSCBUFFERDESC ; typedef struct _DSCBCAPS { DWORD dwSize ; DWORD dwFlags ; DWORD dwBufferBytes ; DWORD dwReserved ; } DSCBCAPS,* LPDSCBCAPS ; typedef const DSCBCAPS* LPCDSCBCAPS ; typedef struct _DSBPOSITIONNOTIFY { DWORD dwOffset ; HANDLE hEventNotify ; } DSBPOSITIONNOTIFY,* LPDSBPOSITIONNOTIFY ; typedef const DSBPOSITIONNOTIFY* LPCDSBPOSITIONNOTIFY ; typedef)",
    "insertText": "BOOL(CALLBACK *LPDSENUMCALLBACKA)(LPGUID, LPCSTR, LPCSTR, LPVOID)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "BOOL(CALLBACK *LPDSENUMCALLBACKW)(LPGUID, LPCWSTR, LPCWSTR, LPVOID)"
  },
  {
    "label": "DirectSoundCreate()",
    "kind": "Method",
    "detail": "Function (HRESULT WINAPI)",
    "insertText": "DirectSoundCreate(__in_opt LPCGUID pcGuidDevice, __deref_out LPDIRECTSOUND *ppDS, __null LPUNKNOWN pUnkOuter)"
  },
  {
    "label": "DirectSoundEnumerateA()",
    "kind": "Method",
    "detail": "Function (HRESULT WINAPI)",
    "insertText": "DirectSoundEnumerateA(__in LPDSENUMCALLBACKA pDSEnumCallback, __in_opt LPVOID pContext)"
  },
  {
    "label": "DirectSoundEnumerateW()",
    "kind": "Method",
    "detail": "Function (HRESULT WINAPI)",
    "insertText": "DirectSoundEnumerateW(__in LPDSENUMCALLBACKW pDSEnumCallback, __in_opt LPVOID pContext)"
  },
  {
    "label": "DirectSoundCaptureCreate()",
    "kind": "Method",
    "detail": "Function (HRESULT WINAPI)",
    "insertText": "DirectSoundCaptureCreate(__in_opt LPCGUID pcGuidDevice, __deref_out LPDIRECTSOUNDCAPTURE *ppDSC, __null LPUNKNOWN pUnkOuter)"
  },
  {
    "label": "DirectSoundCaptureEnumerateA()",
    "kind": "Method",
    "detail": "Function (HRESULT WINAPI)",
    "insertText": "DirectSoundCaptureEnumerateA(__in LPDSENUMCALLBACKA pDSEnumCallback, __in_opt LPVOID pContext)"
  },
  {
    "label": "DirectSoundCaptureEnumerateW()",
    "kind": "Method",
    "detail": "Function (HRESULT WINAPI)",
    "insertText": "DirectSoundCaptureEnumerateW(__in LPDSENUMCALLBACKW pDSEnumCallback, __in_opt LPVOID pContext)"
  },
  {
    "label": "DirectSoundCreate8()",
    "kind": "Method",
    "detail": "Function (# if DIRECTSOUND_VERSION> = 0 x0800 HRESULT WINAPI)",
    "insertText": "DirectSoundCreate8(__in_opt LPCGUID pcGuidDevice, __deref_out LPDIRECTSOUND8 *ppDS8, __null LPUNKNOWN pUnkOuter)"
  },
  {
    "label": "DirectSoundCaptureCreate8()",
    "kind": "Method",
    "detail": "Function (HRESULT WINAPI)",
    "insertText": "DirectSoundCaptureCreate8(__in_opt LPCGUID pcGuidDevice, __deref_out LPDIRECTSOUNDCAPTURE8 *ppDSC8, __null LPUNKNOWN pUnkOuter)"
  },
  {
    "label": "DirectSoundFullDuplexCreate()",
    "kind": "Method",
    "detail": "Function (HRESULT WINAPI)",
    "insertText": "DirectSoundFullDuplexCreate(__in_opt LPCGUID pcGuidCaptureDevice, __in_opt LPCGUID pcGuidRenderDevice, __in LPCDSCBUFFERDESC pcDSCBufferDesc, __in LPCDSBUFFERDESC pcDSBufferDesc, HWND hWnd, DWORD dwLevel, __deref_out LPDIRECTSOUNDFULLDUPLEX* ppDSFD, __deref_out LPDIRECTSOUNDCAPTUREBUFFER8 *ppDSCBuffer8, __deref_out LPDIRECTSOUNDBUFFER8 *ppDSBuffer8, __null LPUNKNOWN pUnkOuter)"
  },
  {
    "label": "GetDeviceID()",
    "kind": "Method",
    "detail": "Function (# define DirectSoundFullDuplexCreate8 DirectSoundFullDuplexCreate HRESULT WINAPI)",
    "insertText": "GetDeviceID(__in_opt LPCGUID pGuidSrc, __out LPGUID pGuidDest)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef UNICODE # define LPDSENUMCALLBACK LPDSENUMCALLBACKW # define DirectSoundEnumerate DirectSoundEnumerateW # define DirectSoundCaptureEnumerate DirectSoundCaptureEnumerateW # else # define LPDSENUMCALLBACK LPDSENUMCALLBACKA # define DirectSoundEnumerate DirectSoundEnumerateA # define DirectSoundCaptureEnumerate DirectSoundCaptureEnumerateA # endif # if !)",
    "insertText": "defined(__cplusplus) || defined(CINTERFACE) #ifndef IUnknown_QueryInterface #define IUnknown_QueryInterface(p,a,b) (p)->lpVtbl->QueryInterface(p,a,b) #endif #ifndef IUnknown_AddRef #define IUnknown_AddRef(p) (p)->lpVtbl->AddRef(p) #endif #ifndef IUnknown_Release #define IUnknown_Release(p) (p)->lpVtbl->Release(p) #endif #else #ifndef IUnknown_QueryInterface #define IUnknown_QueryInterface(p,a,b) (p)->QueryInterface(a,b) #endif #ifndef IUnknown_AddRef #define IUnknown_AddRef(p) (p)->AddRef() #endif #ifndef IUnknown_Release #define IUnknown_Release(p) (p)->Release()"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (typedef REFERENCE_TIME* LPREFERENCE_TIME ;)",
    "insertText": "DEFINE_GUID(IID_IReferenceClock, 0x56a86897, 0x0ad4, 0x11ce, 0xb0, 0x3a, 0x00, 0x20, 0xaf, 0x0b, 0xa7, 0x70)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IReferenceClock)",
    "insertText": "DECLARE_INTERFACE_(IReferenceClock, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(QueryInterface) (THIS_ __in REFIID, __deref_out LPVOID*)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(ULONG,AddRef) (THIS)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(ULONG,Release) (THIS)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetTime) (THIS_ __out REFERENCE_TIME *pTime)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(AdviseTime) (THIS_ REFERENCE_TIME rtBaseTime, REFERENCE_TIME rtStreamTime, HANDLE hEvent, __out LPDWORD pdwAdviseCookie)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(AdvisePeriodic) (THIS_ REFERENCE_TIME rtStartTime, REFERENCE_TIME rtPeriodTime, HANDLE hSemaphore, __out LPDWORD pdwAdviseCookie)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Unadvise) (THIS_ DWORD dwAdviseCookie)"
  },
  {
    "label": "IReferenceClock_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # endif # ifndef IReferenceClock_QueryInterface # define)",
    "insertText": "IReferenceClock_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IReferenceClock_AddRef(p) IUnknown_AddRef(p) #define IReferenceClock_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IReferenceClock_GetTime(p,a) (p)->lpVtbl->GetTime(p,a) #define IReferenceClock_AdviseTime(p,a,b,c,d) (p)->lpVtbl->AdviseTime(p,a,b,c,d) #define IReferenceClock_AdvisePeriodic(p,a,b,c,d) (p)->lpVtbl->AdvisePeriodic(p,a,b,c,d) #define IReferenceClock_Unadvise(p,a) (p)->lpVtbl->Unadvise(p,a) #else #define IReferenceClock_GetTime(p,a) (p)->GetTime(a) #define IReferenceClock_AdviseTime(p,a,b,c,d) (p)->AdviseTime(a,b,c,d) #define IReferenceClock_AdvisePeriodic(p,a,b,c,d) (p)->AdvisePeriodic(a,b,c,d) #define IReferenceClock_Unadvise(p,a) (p)->Unadvise(a) #endif #endif DEFINE_GUID(IID_IDirectSound, 0x279AFA83, 0x4981, 0x11CE, 0xA5, 0x21, 0x00, 0x20, 0xAF, 0x0B, 0xE5, 0x60)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSound)",
    "insertText": "DECLARE_INTERFACE_(IDirectSound, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(CreateSoundBuffer) (THIS_ __in LPCDSBUFFERDESC pcDSBufferDesc, __deref_out LPDIRECTSOUNDBUFFER *ppDSBuffer, __null LPUNKNOWN pUnkOuter)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetCaps) (THIS_ __out LPDSCAPS pDSCaps)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(DuplicateSoundBuffer) (THIS_ __in LPDIRECTSOUNDBUFFER pDSBufferOriginal, __deref_out LPDIRECTSOUNDBUFFER *ppDSBufferDuplicate)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetCooperativeLevel) (THIS_ HWND hwnd, DWORD dwLevel)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Compact) (THIS)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetSpeakerConfig) (THIS_ __out LPDWORD pdwSpeakerConfig)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetSpeakerConfig) (THIS_ DWORD dwSpeakerConfig)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Initialize) (THIS_ __in_opt LPCGUID pcGuidDevice)"
  },
  {
    "label": "IDirectSound_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSound_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSound_AddRef(p) IUnknown_AddRef(p) #define IDirectSound_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSound_CreateSoundBuffer(p,a,b,c) (p)->lpVtbl->CreateSoundBuffer(p,a,b,c) #define IDirectSound_GetCaps(p,a) (p)->lpVtbl->GetCaps(p,a) #define IDirectSound_DuplicateSoundBuffer(p,a,b) (p)->lpVtbl->DuplicateSoundBuffer(p,a,b) #define IDirectSound_SetCooperativeLevel(p,a,b) (p)->lpVtbl->SetCooperativeLevel(p,a,b) #define IDirectSound_Compact(p) (p)->lpVtbl->Compact(p) #define IDirectSound_GetSpeakerConfig(p,a) (p)->lpVtbl->GetSpeakerConfig(p,a) #define IDirectSound_SetSpeakerConfig(p,b) (p)->lpVtbl->SetSpeakerConfig(p,b) #define IDirectSound_Initialize(p,a) (p)->lpVtbl->Initialize(p,a) #else #define IDirectSound_CreateSoundBuffer(p,a,b,c) (p)->CreateSoundBuffer(a,b,c) #define IDirectSound_GetCaps(p,a) (p)->GetCaps(a) #define IDirectSound_DuplicateSoundBuffer(p,a,b) (p)->DuplicateSoundBuffer(a,b) #define IDirectSound_SetCooperativeLevel(p,a,b) (p)->SetCooperativeLevel(a,b) #define IDirectSound_Compact(p) (p)->Compact() #define IDirectSound_GetSpeakerConfig(p,a) (p)->GetSpeakerConfig(a) #define IDirectSound_SetSpeakerConfig(p,b) (p)->SetSpeakerConfig(b) #define IDirectSound_Initialize(p,a) (p)->Initialize(a) #endif #if DIRECTSOUND_VERSION >= 0x0800 DEFINE_GUID(IID_IDirectSound8, 0xC50A7E93, 0xF395, 0x4834, 0x9E, 0xF6, 0x7F, 0xA9, 0x9D, 0xE5, 0x09, 0x66)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSound8)",
    "insertText": "DECLARE_INTERFACE_(IDirectSound8, IDirectSound)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(CreateSoundBuffer) (THIS_ __in LPCDSBUFFERDESC pcDSBufferDesc, __out LPDIRECTSOUNDBUFFER *ppDSBuffer, __null LPUNKNOWN pUnkOuter)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(DuplicateSoundBuffer) (THIS_ __in LPDIRECTSOUNDBUFFER pDSBufferOriginal, __out LPDIRECTSOUNDBUFFER *ppDSBufferDuplicate)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(VerifyCertification) (THIS_ __out LPDWORD pdwCertified)"
  },
  {
    "label": "IDirectSound8_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSound8_QueryInterface(p,a,b) IDirectSound_QueryInterface(p,a,b) #define IDirectSound8_AddRef(p) IDirectSound_AddRef(p) #define IDirectSound8_Release(p) IDirectSound_Release(p) #define IDirectSound8_CreateSoundBuffer(p,a,b,c) IDirectSound_CreateSoundBuffer(p,a,b,c) #define IDirectSound8_GetCaps(p,a) IDirectSound_GetCaps(p,a) #define IDirectSound8_DuplicateSoundBuffer(p,a,b) IDirectSound_DuplicateSoundBuffer(p,a,b) #define IDirectSound8_SetCooperativeLevel(p,a,b) IDirectSound_SetCooperativeLevel(p,a,b) #define IDirectSound8_Compact(p) IDirectSound_Compact(p) #define IDirectSound8_GetSpeakerConfig(p,a) IDirectSound_GetSpeakerConfig(p,a) #define IDirectSound8_SetSpeakerConfig(p,a) IDirectSound_SetSpeakerConfig(p,a) #define IDirectSound8_Initialize(p,a) IDirectSound_Initialize(p,a) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSound8_VerifyCertification(p,a) (p)->lpVtbl->VerifyCertification(p,a) #else #define IDirectSound8_VerifyCertification(p,a) (p)->VerifyCertification(a) #endif #endif DEFINE_GUID(IID_IDirectSoundBuffer, 0x279AFA85, 0x4981, 0x11CE, 0xA5, 0x21, 0x00, 0x20, 0xAF, 0x0B, 0xE5, 0x60)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSoundBuffer)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundBuffer, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetCaps) (THIS_ __out LPDSBCAPS pDSBufferCaps)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetCurrentPosition) (THIS_ __out_opt LPDWORD pdwCurrentPlayCursor, __out_opt LPDWORD pdwCurrentWriteCursor)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetFormat) (THIS_ __out_bcount_opt(dwSizeAllocated) LPWAVEFORMATEX pwfxFormat, DWORD dwSizeAllocated, __out_opt LPDWORD pdwSizeWritten)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetVolume) (THIS_ __out LPLONG plVolume)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetPan) (THIS_ __out LPLONG plPan)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetFrequency) (THIS_ __out LPDWORD pdwFrequency)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetStatus) (THIS_ __out LPDWORD pdwStatus)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Initialize) (THIS_ __in LPDIRECTSOUND pDirectSound, __in LPCDSBUFFERDESC pcDSBufferDesc)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Lock) (THIS_ DWORD dwOffset, DWORD dwBytes, __deref_out_bcount(*pdwAudioBytes1) LPVOID *ppvAudioPtr1, __out LPDWORD pdwAudioBytes1, __deref_opt_out_bcount(*pdwAudioBytes2) LPVOID *ppvAudioPtr2, __out_opt LPDWORD pdwAudioBytes2, DWORD dwFlags)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Play) (THIS_ DWORD dwReserved1, DWORD dwPriority, DWORD dwFlags)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetCurrentPosition) (THIS_ DWORD dwNewPosition)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetFormat) (THIS_ __in LPCWAVEFORMATEX pcfxFormat)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetVolume) (THIS_ LONG lVolume)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetPan) (THIS_ LONG lPan)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetFrequency) (THIS_ DWORD dwFrequency)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Stop) (THIS)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Unlock) (THIS_ __in_bcount(dwAudioBytes1) LPVOID pvAudioPtr1, DWORD dwAudioBytes1, __in_bcount_opt(dwAudioBytes2) LPVOID pvAudioPtr2, DWORD dwAudioBytes2)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Restore) (THIS)"
  },
  {
    "label": "IDirectSoundBuffer_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundBuffer_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundBuffer_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundBuffer_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundBuffer_GetCaps(p,a) (p)->lpVtbl->GetCaps(p,a) #define IDirectSoundBuffer_GetCurrentPosition(p,a,b) (p)->lpVtbl->GetCurrentPosition(p,a,b) #define IDirectSoundBuffer_GetFormat(p,a,b,c) (p)->lpVtbl->GetFormat(p,a,b,c) #define IDirectSoundBuffer_GetVolume(p,a) (p)->lpVtbl->GetVolume(p,a) #define IDirectSoundBuffer_GetPan(p,a) (p)->lpVtbl->GetPan(p,a) #define IDirectSoundBuffer_GetFrequency(p,a) (p)->lpVtbl->GetFrequency(p,a) #define IDirectSoundBuffer_GetStatus(p,a) (p)->lpVtbl->GetStatus(p,a) #define IDirectSoundBuffer_Initialize(p,a,b) (p)->lpVtbl->Initialize(p,a,b) #define IDirectSoundBuffer_Lock(p,a,b,c,d,e,f,g) (p)->lpVtbl->Lock(p,a,b,c,d,e,f,g) #define IDirectSoundBuffer_Play(p,a,b,c) (p)->lpVtbl->Play(p,a,b,c) #define IDirectSoundBuffer_SetCurrentPosition(p,a) (p)->lpVtbl->SetCurrentPosition(p,a) #define IDirectSoundBuffer_SetFormat(p,a) (p)->lpVtbl->SetFormat(p,a) #define IDirectSoundBuffer_SetVolume(p,a) (p)->lpVtbl->SetVolume(p,a) #define IDirectSoundBuffer_SetPan(p,a) (p)->lpVtbl->SetPan(p,a) #define IDirectSoundBuffer_SetFrequency(p,a) (p)->lpVtbl->SetFrequency(p,a) #define IDirectSoundBuffer_Stop(p) (p)->lpVtbl->Stop(p) #define IDirectSoundBuffer_Unlock(p,a,b,c,d) (p)->lpVtbl->Unlock(p,a,b,c,d) #define IDirectSoundBuffer_Restore(p) (p)->lpVtbl->Restore(p) #else #define IDirectSoundBuffer_GetCaps(p,a) (p)->GetCaps(a) #define IDirectSoundBuffer_GetCurrentPosition(p,a,b) (p)->GetCurrentPosition(a,b) #define IDirectSoundBuffer_GetFormat(p,a,b,c) (p)->GetFormat(a,b,c) #define IDirectSoundBuffer_GetVolume(p,a) (p)->GetVolume(a) #define IDirectSoundBuffer_GetPan(p,a) (p)->GetPan(a) #define IDirectSoundBuffer_GetFrequency(p,a) (p)->GetFrequency(a) #define IDirectSoundBuffer_GetStatus(p,a) (p)->GetStatus(a) #define IDirectSoundBuffer_Initialize(p,a,b) (p)->Initialize(a,b) #define IDirectSoundBuffer_Lock(p,a,b,c,d,e,f,g) (p)->Lock(a,b,c,d,e,f,g) #define IDirectSoundBuffer_Play(p,a,b,c) (p)->Play(a,b,c) #define IDirectSoundBuffer_SetCurrentPosition(p,a) (p)->SetCurrentPosition(a) #define IDirectSoundBuffer_SetFormat(p,a) (p)->SetFormat(a) #define IDirectSoundBuffer_SetVolume(p,a) (p)->SetVolume(a) #define IDirectSoundBuffer_SetPan(p,a) (p)->SetPan(a) #define IDirectSoundBuffer_SetFrequency(p,a) (p)->SetFrequency(a) #define IDirectSoundBuffer_Stop(p) (p)->Stop() #define IDirectSoundBuffer_Unlock(p,a,b,c,d) (p)->Unlock(a,b,c,d) #define IDirectSoundBuffer_Restore(p) (p)->Restore() #endif #if DIRECTSOUND_VERSION >= 0x0800 DEFINE_GUID(IID_IDirectSoundBuffer8, 0x6825a449, 0x7524, 0x4d82, 0x92, 0x0f, 0x50, 0xe3, 0x6a, 0xb3, 0xab, 0x1e)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSoundBuffer8)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundBuffer8, IDirectSoundBuffer)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetFX) (THIS_ DWORD dwEffectsCount, __in_ecount_opt(dwEffectsCount) LPDSEFFECTDESC pDSFXDesc, __out_ecount_opt(dwEffectsCount) LPDWORD pdwResultCodes)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(AcquireResources) (THIS_ DWORD dwFlags, DWORD dwEffectsCount, __out_ecount(dwEffectsCount) LPDWORD pdwResultCodes)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetObjectInPath) (THIS_ __in REFGUID rguidObject, DWORD dwIndex, __in REFGUID rguidInterface, __deref_out LPVOID *ppObject)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "DEFINE_GUID(GUID_All_Objects, 0xaa114de5, 0xc262, 0x4169, 0xa1, 0xc8, 0x23, 0xd6, 0x98, 0xcc, 0x73, 0xb5)"
  },
  {
    "label": "IDirectSoundBuffer8_QueryInterface()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "IDirectSoundBuffer8_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundBuffer8_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundBuffer8_Release(p) IUnknown_Release(p) #define IDirectSoundBuffer8_GetCaps(p,a) IDirectSoundBuffer_GetCaps(p,a) #define IDirectSoundBuffer8_GetCurrentPosition(p,a,b) IDirectSoundBuffer_GetCurrentPosition(p,a,b) #define IDirectSoundBuffer8_GetFormat(p,a,b,c) IDirectSoundBuffer_GetFormat(p,a,b,c) #define IDirectSoundBuffer8_GetVolume(p,a) IDirectSoundBuffer_GetVolume(p,a) #define IDirectSoundBuffer8_GetPan(p,a) IDirectSoundBuffer_GetPan(p,a) #define IDirectSoundBuffer8_GetFrequency(p,a) IDirectSoundBuffer_GetFrequency(p,a) #define IDirectSoundBuffer8_GetStatus(p,a) IDirectSoundBuffer_GetStatus(p,a) #define IDirectSoundBuffer8_Initialize(p,a,b) IDirectSoundBuffer_Initialize(p,a,b) #define IDirectSoundBuffer8_Lock(p,a,b,c,d,e,f,g) IDirectSoundBuffer_Lock(p,a,b,c,d,e,f,g) #define IDirectSoundBuffer8_Play(p,a,b,c) IDirectSoundBuffer_Play(p,a,b,c) #define IDirectSoundBuffer8_SetCurrentPosition(p,a) IDirectSoundBuffer_SetCurrentPosition(p,a) #define IDirectSoundBuffer8_SetFormat(p,a) IDirectSoundBuffer_SetFormat(p,a) #define IDirectSoundBuffer8_SetVolume(p,a) IDirectSoundBuffer_SetVolume(p,a) #define IDirectSoundBuffer8_SetPan(p,a) IDirectSoundBuffer_SetPan(p,a) #define IDirectSoundBuffer8_SetFrequency(p,a) IDirectSoundBuffer_SetFrequency(p,a) #define IDirectSoundBuffer8_Stop(p) IDirectSoundBuffer_Stop(p) #define IDirectSoundBuffer8_Unlock(p,a,b,c,d) IDirectSoundBuffer_Unlock(p,a,b,c,d) #define IDirectSoundBuffer8_Restore(p) IDirectSoundBuffer_Restore(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundBuffer8_SetFX(p,a,b,c) (p)->lpVtbl->SetFX(p,a,b,c) #define IDirectSoundBuffer8_AcquireResources(p,a,b,c) (p)->lpVtbl->AcquireResources(p,a,b,c) #define IDirectSoundBuffer8_GetObjectInPath(p,a,b,c,d) (p)->lpVtbl->GetObjectInPath(p,a,b,c,d) #else #define IDirectSoundBuffer8_SetFX(p,a,b,c) (p)->SetFX(a,b,c) #define IDirectSoundBuffer8_AcquireResources(p,a,b,c) (p)->AcquireResources(a,b,c) #define IDirectSoundBuffer8_GetObjectInPath(p,a,b,c,d) (p)->GetObjectInPath(a,b,c,d) #endif #endif DEFINE_GUID(IID_IDirectSound3DListener, 0x279AFA84, 0x4981, 0x11CE, 0xA5, 0x21, 0x00, 0x20, 0xAF, 0x0B, 0xE5, 0x60)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSound3DListener)",
    "insertText": "DECLARE_INTERFACE_(IDirectSound3DListener, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDS3DLISTENER pListener)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetDistanceFactor) (THIS_ __out D3DVALUE* pflDistanceFactor)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetDopplerFactor) (THIS_ __out D3DVALUE* pflDopplerFactor)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetOrientation) (THIS_ __out D3DVECTOR* pvOrientFront, __out D3DVECTOR* pvOrientTop)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetPosition) (THIS_ __out D3DVECTOR* pvPosition)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetRolloffFactor) (THIS_ __out D3DVALUE* pflRolloffFactor)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetVelocity) (THIS_ __out D3DVECTOR* pvVelocity)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDS3DLISTENER pcListener, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetDistanceFactor) (THIS_ D3DVALUE flDistanceFactor, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetDopplerFactor) (THIS_ D3DVALUE flDopplerFactor, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetOrientation) (THIS_ D3DVALUE xFront, D3DVALUE yFront, D3DVALUE zFront, D3DVALUE xTop, D3DVALUE yTop, D3DVALUE zTop, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetPosition) (THIS_ D3DVALUE x, D3DVALUE y, D3DVALUE z, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetRolloffFactor) (THIS_ D3DVALUE flRolloffFactor, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetVelocity) (THIS_ D3DVALUE x, D3DVALUE y, D3DVALUE z, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(CommitDeferredSettings) (THIS)"
  },
  {
    "label": "IDirectSound3DListener_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSound3DListener_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSound3DListener_AddRef(p) IUnknown_AddRef(p) #define IDirectSound3DListener_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSound3DListener_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #define IDirectSound3DListener_GetDistanceFactor(p,a) (p)->lpVtbl->GetDistanceFactor(p,a) #define IDirectSound3DListener_GetDopplerFactor(p,a) (p)->lpVtbl->GetDopplerFactor(p,a) #define IDirectSound3DListener_GetOrientation(p,a,b) (p)->lpVtbl->GetOrientation(p,a,b) #define IDirectSound3DListener_GetPosition(p,a) (p)->lpVtbl->GetPosition(p,a) #define IDirectSound3DListener_GetRolloffFactor(p,a) (p)->lpVtbl->GetRolloffFactor(p,a) #define IDirectSound3DListener_GetVelocity(p,a) (p)->lpVtbl->GetVelocity(p,a) #define IDirectSound3DListener_SetAllParameters(p,a,b) (p)->lpVtbl->SetAllParameters(p,a,b) #define IDirectSound3DListener_SetDistanceFactor(p,a,b) (p)->lpVtbl->SetDistanceFactor(p,a,b) #define IDirectSound3DListener_SetDopplerFactor(p,a,b) (p)->lpVtbl->SetDopplerFactor(p,a,b) #define IDirectSound3DListener_SetOrientation(p,a,b,c,d,e,f,g) (p)->lpVtbl->SetOrientation(p,a,b,c,d,e,f,g) #define IDirectSound3DListener_SetPosition(p,a,b,c,d) (p)->lpVtbl->SetPosition(p,a,b,c,d) #define IDirectSound3DListener_SetRolloffFactor(p,a,b) (p)->lpVtbl->SetRolloffFactor(p,a,b) #define IDirectSound3DListener_SetVelocity(p,a,b,c,d) (p)->lpVtbl->SetVelocity(p,a,b,c,d) #define IDirectSound3DListener_CommitDeferredSettings(p) (p)->lpVtbl->CommitDeferredSettings(p) #else #define IDirectSound3DListener_GetAllParameters(p,a) (p)->GetAllParameters(a) #define IDirectSound3DListener_GetDistanceFactor(p,a) (p)->GetDistanceFactor(a) #define IDirectSound3DListener_GetDopplerFactor(p,a) (p)->GetDopplerFactor(a) #define IDirectSound3DListener_GetOrientation(p,a,b) (p)->GetOrientation(a,b) #define IDirectSound3DListener_GetPosition(p,a) (p)->GetPosition(a) #define IDirectSound3DListener_GetRolloffFactor(p,a) (p)->GetRolloffFactor(a) #define IDirectSound3DListener_GetVelocity(p,a) (p)->GetVelocity(a) #define IDirectSound3DListener_SetAllParameters(p,a,b) (p)->SetAllParameters(a,b) #define IDirectSound3DListener_SetDistanceFactor(p,a,b) (p)->SetDistanceFactor(a,b) #define IDirectSound3DListener_SetDopplerFactor(p,a,b) (p)->SetDopplerFactor(a,b) #define IDirectSound3DListener_SetOrientation(p,a,b,c,d,e,f,g) (p)->SetOrientation(a,b,c,d,e,f,g) #define IDirectSound3DListener_SetPosition(p,a,b,c,d) (p)->SetPosition(a,b,c,d) #define IDirectSound3DListener_SetRolloffFactor(p,a,b) (p)->SetRolloffFactor(a,b) #define IDirectSound3DListener_SetVelocity(p,a,b,c,d) (p)->SetVelocity(a,b,c,d) #define IDirectSound3DListener_CommitDeferredSettings(p) (p)->CommitDeferredSettings() #endif DEFINE_GUID(IID_IDirectSound3DBuffer, 0x279AFA86, 0x4981, 0x11CE, 0xA5, 0x21, 0x00, 0x20, 0xAF, 0x0B, 0xE5, 0x60)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSound3DBuffer)",
    "insertText": "DECLARE_INTERFACE_(IDirectSound3DBuffer, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDS3DBUFFER pDs3dBuffer)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetConeAngles) (THIS_ __out LPDWORD pdwInsideConeAngle, __out LPDWORD pdwOutsideConeAngle)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetConeOrientation) (THIS_ __out D3DVECTOR* pvOrientation)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetConeOutsideVolume) (THIS_ __out LPLONG plConeOutsideVolume)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetMaxDistance) (THIS_ __out D3DVALUE* pflMaxDistance)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetMinDistance) (THIS_ __out D3DVALUE* pflMinDistance)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetMode) (THIS_ __out LPDWORD pdwMode)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDS3DBUFFER pcDs3dBuffer, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetConeAngles) (THIS_ DWORD dwInsideConeAngle, DWORD dwOutsideConeAngle, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetConeOrientation) (THIS_ D3DVALUE x, D3DVALUE y, D3DVALUE z, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetConeOutsideVolume) (THIS_ LONG lConeOutsideVolume, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetMaxDistance) (THIS_ D3DVALUE flMaxDistance, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetMinDistance) (THIS_ D3DVALUE flMinDistance, DWORD dwApply)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetMode) (THIS_ DWORD dwMode, DWORD dwApply)"
  },
  {
    "label": "IDirectSound3DBuffer_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSound3DBuffer_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSound3DBuffer_AddRef(p) IUnknown_AddRef(p) #define IDirectSound3DBuffer_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSound3DBuffer_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #define IDirectSound3DBuffer_GetConeAngles(p,a,b) (p)->lpVtbl->GetConeAngles(p,a,b) #define IDirectSound3DBuffer_GetConeOrientation(p,a) (p)->lpVtbl->GetConeOrientation(p,a) #define IDirectSound3DBuffer_GetConeOutsideVolume(p,a) (p)->lpVtbl->GetConeOutsideVolume(p,a) #define IDirectSound3DBuffer_GetPosition(p,a) (p)->lpVtbl->GetPosition(p,a) #define IDirectSound3DBuffer_GetMinDistance(p,a) (p)->lpVtbl->GetMinDistance(p,a) #define IDirectSound3DBuffer_GetMaxDistance(p,a) (p)->lpVtbl->GetMaxDistance(p,a) #define IDirectSound3DBuffer_GetMode(p,a) (p)->lpVtbl->GetMode(p,a) #define IDirectSound3DBuffer_GetVelocity(p,a) (p)->lpVtbl->GetVelocity(p,a) #define IDirectSound3DBuffer_SetAllParameters(p,a,b) (p)->lpVtbl->SetAllParameters(p,a,b) #define IDirectSound3DBuffer_SetConeAngles(p,a,b,c) (p)->lpVtbl->SetConeAngles(p,a,b,c) #define IDirectSound3DBuffer_SetConeOrientation(p,a,b,c,d) (p)->lpVtbl->SetConeOrientation(p,a,b,c,d) #define IDirectSound3DBuffer_SetConeOutsideVolume(p,a,b) (p)->lpVtbl->SetConeOutsideVolume(p,a,b) #define IDirectSound3DBuffer_SetPosition(p,a,b,c,d) (p)->lpVtbl->SetPosition(p,a,b,c,d) #define IDirectSound3DBuffer_SetMinDistance(p,a,b) (p)->lpVtbl->SetMinDistance(p,a,b) #define IDirectSound3DBuffer_SetMaxDistance(p,a,b) (p)->lpVtbl->SetMaxDistance(p,a,b) #define IDirectSound3DBuffer_SetMode(p,a,b) (p)->lpVtbl->SetMode(p,a,b) #define IDirectSound3DBuffer_SetVelocity(p,a,b,c,d) (p)->lpVtbl->SetVelocity(p,a,b,c,d) #else #define IDirectSound3DBuffer_GetAllParameters(p,a) (p)->GetAllParameters(a) #define IDirectSound3DBuffer_GetConeAngles(p,a,b) (p)->GetConeAngles(a,b) #define IDirectSound3DBuffer_GetConeOrientation(p,a) (p)->GetConeOrientation(a) #define IDirectSound3DBuffer_GetConeOutsideVolume(p,a) (p)->GetConeOutsideVolume(a) #define IDirectSound3DBuffer_GetPosition(p,a) (p)->GetPosition(a) #define IDirectSound3DBuffer_GetMinDistance(p,a) (p)->GetMinDistance(a) #define IDirectSound3DBuffer_GetMaxDistance(p,a) (p)->GetMaxDistance(a) #define IDirectSound3DBuffer_GetMode(p,a) (p)->GetMode(a) #define IDirectSound3DBuffer_GetVelocity(p,a) (p)->GetVelocity(a) #define IDirectSound3DBuffer_SetAllParameters(p,a,b) (p)->SetAllParameters(a,b) #define IDirectSound3DBuffer_SetConeAngles(p,a,b,c) (p)->SetConeAngles(a,b,c) #define IDirectSound3DBuffer_SetConeOrientation(p,a,b,c,d) (p)->SetConeOrientation(a,b,c,d) #define IDirectSound3DBuffer_SetConeOutsideVolume(p,a,b) (p)->SetConeOutsideVolume(a,b) #define IDirectSound3DBuffer_SetPosition(p,a,b,c,d) (p)->SetPosition(a,b,c,d) #define IDirectSound3DBuffer_SetMinDistance(p,a,b) (p)->SetMinDistance(a,b) #define IDirectSound3DBuffer_SetMaxDistance(p,a,b) (p)->SetMaxDistance(a,b) #define IDirectSound3DBuffer_SetMode(p,a,b) (p)->SetMode(a,b) #define IDirectSound3DBuffer_SetVelocity(p,a,b,c,d) (p)->SetVelocity(a,b,c,d) #endif DEFINE_GUID(IID_IDirectSoundCapture, 0xb0210781, 0x89cd, 0x11d0, 0xaf, 0x8, 0x0, 0xa0, 0xc9, 0x25, 0xcd, 0x16)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSoundCapture)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundCapture, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(CreateCaptureBuffer) (THIS_ __in LPCDSCBUFFERDESC pcDSCBufferDesc, __deref_out LPDIRECTSOUNDCAPTUREBUFFER *ppDSCBuffer, __null LPUNKNOWN pUnkOuter)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetCaps) (THIS_ __out LPDSCCAPS pDSCCaps)"
  },
  {
    "label": "IDirectSoundCapture_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundCapture_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundCapture_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundCapture_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundCapture_CreateCaptureBuffer(p,a,b,c) (p)->lpVtbl->CreateCaptureBuffer(p,a,b,c) #define IDirectSoundCapture_GetCaps(p,a) (p)->lpVtbl->GetCaps(p,a) #define IDirectSoundCapture_Initialize(p,a) (p)->lpVtbl->Initialize(p,a) #else #define IDirectSoundCapture_CreateCaptureBuffer(p,a,b,c) (p)->CreateCaptureBuffer(a,b,c) #define IDirectSoundCapture_GetCaps(p,a) (p)->GetCaps(a) #define IDirectSoundCapture_Initialize(p,a) (p)->Initialize(a) #endif DEFINE_GUID(IID_IDirectSoundCaptureBuffer, 0xb0210782, 0x89cd, 0x11d0, 0xaf, 0x8, 0x0, 0xa0, 0xc9, 0x25, 0xcd, 0x16)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSoundCaptureBuffer)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundCaptureBuffer, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetCaps) (THIS_ __out LPDSCBCAPS pDSCBCaps)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetCurrentPosition) (THIS_ __out_opt LPDWORD pdwCapturePosition, __out_opt LPDWORD pdwReadPosition)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Initialize) (THIS_ __in LPDIRECTSOUNDCAPTURE pDirectSoundCapture, __in LPCDSCBUFFERDESC pcDSCBufferDesc)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Start) (THIS_ DWORD dwFlags)"
  },
  {
    "label": "IDirectSoundCaptureBuffer_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundCaptureBuffer_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundCaptureBuffer_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundCaptureBuffer_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundCaptureBuffer_GetCaps(p,a) (p)->lpVtbl->GetCaps(p,a) #define IDirectSoundCaptureBuffer_GetCurrentPosition(p,a,b) (p)->lpVtbl->GetCurrentPosition(p,a,b) #define IDirectSoundCaptureBuffer_GetFormat(p,a,b,c) (p)->lpVtbl->GetFormat(p,a,b,c) #define IDirectSoundCaptureBuffer_GetStatus(p,a) (p)->lpVtbl->GetStatus(p,a) #define IDirectSoundCaptureBuffer_Initialize(p,a,b) (p)->lpVtbl->Initialize(p,a,b) #define IDirectSoundCaptureBuffer_Lock(p,a,b,c,d,e,f,g) (p)->lpVtbl->Lock(p,a,b,c,d,e,f,g) #define IDirectSoundCaptureBuffer_Start(p,a) (p)->lpVtbl->Start(p,a) #define IDirectSoundCaptureBuffer_Stop(p) (p)->lpVtbl->Stop(p) #define IDirectSoundCaptureBuffer_Unlock(p,a,b,c,d) (p)->lpVtbl->Unlock(p,a,b,c,d) #else #define IDirectSoundCaptureBuffer_GetCaps(p,a) (p)->GetCaps(a) #define IDirectSoundCaptureBuffer_GetCurrentPosition(p,a,b) (p)->GetCurrentPosition(a,b) #define IDirectSoundCaptureBuffer_GetFormat(p,a,b,c) (p)->GetFormat(a,b,c) #define IDirectSoundCaptureBuffer_GetStatus(p,a) (p)->GetStatus(a) #define IDirectSoundCaptureBuffer_Initialize(p,a,b) (p)->Initialize(a,b) #define IDirectSoundCaptureBuffer_Lock(p,a,b,c,d,e,f,g) (p)->Lock(a,b,c,d,e,f,g) #define IDirectSoundCaptureBuffer_Start(p,a) (p)->Start(a) #define IDirectSoundCaptureBuffer_Stop(p) (p)->Stop() #define IDirectSoundCaptureBuffer_Unlock(p,a,b,c,d) (p)->Unlock(a,b,c,d) #endif #if DIRECTSOUND_VERSION >= 0x0800 DEFINE_GUID(IID_IDirectSoundCaptureBuffer8, 0x990df4, 0xdbb, 0x4872, 0x83, 0x3e, 0x6d, 0x30, 0x3e, 0x80, 0xae, 0xb6)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSoundCaptureBuffer8)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundCaptureBuffer8, IDirectSoundCaptureBuffer)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetFXStatus) (DWORD dwEffectsCount, __out_ecount(dwEffectsCount) LPDWORD pdwFXStatus)"
  },
  {
    "label": "IDirectSoundCaptureBuffer8_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundCaptureBuffer8_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundCaptureBuffer8_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundCaptureBuffer8_Release(p) IUnknown_Release(p) #define IDirectSoundCaptureBuffer8_GetCaps(p,a) IDirectSoundCaptureBuffer_GetCaps(p,a) #define IDirectSoundCaptureBuffer8_GetCurrentPosition(p,a,b) IDirectSoundCaptureBuffer_GetCurrentPosition(p,a,b) #define IDirectSoundCaptureBuffer8_GetFormat(p,a,b,c) IDirectSoundCaptureBuffer_GetFormat(p,a,b,c) #define IDirectSoundCaptureBuffer8_GetStatus(p,a) IDirectSoundCaptureBuffer_GetStatus(p,a) #define IDirectSoundCaptureBuffer8_Initialize(p,a,b) IDirectSoundCaptureBuffer_Initialize(p,a,b) #define IDirectSoundCaptureBuffer8_Lock(p,a,b,c,d,e,f,g) IDirectSoundCaptureBuffer_Lock(p,a,b,c,d,e,f,g) #define IDirectSoundCaptureBuffer8_Start(p,a) IDirectSoundCaptureBuffer_Start(p,a) #define IDirectSoundCaptureBuffer8_Stop(p) IDirectSoundCaptureBuffer_Stop(p)) #define IDirectSoundCaptureBuffer8_Unlock(p,a,b,c,d) IDirectSoundCaptureBuffer_Unlock(p,a,b,c,d) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundCaptureBuffer8_GetObjectInPath(p,a,b,c,d) (p)->lpVtbl->GetObjectInPath(p,a,b,c,d) #define IDirectSoundCaptureBuffer8_GetFXStatus(p,a,b) (p)->lpVtbl->GetFXStatus(p,a,b) #else #define IDirectSoundCaptureBuffer8_GetObjectInPath(p,a,b,c,d) (p)->GetObjectInPath(a,b,c,d) #define IDirectSoundCaptureBuffer8_GetFXStatus(p,a,b) (p)->GetFXStatus(a,b) #endif #endif DEFINE_GUID(IID_IDirectSoundNotify, 0xb0210783, 0x89cd, 0x11d0, 0xaf, 0x8, 0x0, 0xa0, 0xc9, 0x25, 0xcd, 0x16)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSoundNotify)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundNotify, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetNotificationPositions) (THIS_ DWORD dwPositionNotifies, __in_ecount(dwPositionNotifies) LPCDSBPOSITIONNOTIFY pcPositionNotifies)"
  },
  {
    "label": "IDirectSoundNotify_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundNotify_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundNotify_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundNotify_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundNotify_SetNotificationPositions(p,a,b) (p)->lpVtbl->SetNotificationPositions(p,a,b) #else #define IDirectSoundNotify_SetNotificationPositions(p,a,b) (p)->SetNotificationPositions(a,b)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (# endif typedef struct IKsPropertySet* LPKSPROPERTYSET ; # define KSPROPERTY_SUPPORT_GET 0 x00000001 # define KSPROPERTY_SUPPORT_SET 0 x00000002)",
    "insertText": "DEFINE_GUID(IID_IKsPropertySet, 0x31efac30, 0x515c, 0x11d0, 0xa9, 0xaa, 0x00, 0xaa, 0x00, 0x61, 0xbe, 0x93)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IKsPropertySet)",
    "insertText": "DECLARE_INTERFACE_(IKsPropertySet, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Get) (THIS_ __in REFGUID rguidPropSet, ULONG ulId, __in_bcount(ulInstanceLength) LPVOID pInstanceData, ULONG ulInstanceLength, __out_bcount(ulDataLength) LPVOID pPropertyData, ULONG ulDataLength, __out PULONG pulBytesReturned)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Set) (THIS_ __in REFGUID rguidPropSet, ULONG ulId, __in_bcount(ulInstanceLength) LPVOID pInstanceData, ULONG ulInstanceLength, __in_bcount(ulDataLength) LPVOID pPropertyData, ULONG ulDataLength)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(QuerySupport) (THIS_ __in REFGUID rguidPropSet, ULONG ulId, __out PULONG pulTypeSupport)"
  },
  {
    "label": "IKsPropertySet_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IKsPropertySet_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IKsPropertySet_AddRef(p) IUnknown_AddRef(p) #define IKsPropertySet_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IKsPropertySet_Get(p,a,b,c,d,e,f,g) (p)->lpVtbl->Get(p,a,b,c,d,e,f,g) #define IKsPropertySet_Set(p,a,b,c,d,e,f) (p)->lpVtbl->Set(p,a,b,c,d,e,f) #define IKsPropertySet_QuerySupport(p,a,b,c) (p)->lpVtbl->QuerySupport(p,a,b,c) #else #define IKsPropertySet_Get(p,a,b,c,d,e,f,g) (p)->Get(a,b,c,d,e,f,g) #define IKsPropertySet_Set(p,a,b,c,d,e,f) (p)->Set(a,b,c,d,e,f) #define IKsPropertySet_QuerySupport(p,a,b,c) (p)->QuerySupport(a,b,c) #endif #endif #if DIRECTSOUND_VERSION >= 0x0800 DEFINE_GUID(IID_IDirectSoundFXGargle, 0xd616f352, 0xd622, 0x11ce, 0xaa, 0xc5, 0x00, 0x20, 0xaf, 0x0b, 0x99, 0xa3)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSFXGargle { DWORD dwRateHz ; DWORD dwWaveShape ; } DSFXGargle,* LPDSFXGargle ; # define DSFXGARGLE_WAVE_TRIANGLE 0 # define DSFXGARGLE_WAVE_SQUARE 1 typedef const DSFXGargle* LPCDSFXGargle ; # define DSFXGARGLE_RATEHZ_MIN 1 # define DSFXGARGLE_RATEHZ_MAX 1 0 0 0 # undef INTERFACE # define INTERFACE IDirectSoundFXGargle)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundFXGargle, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSFXGargle pcDsFxGargle)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSFXGargle pDsFxGargle)"
  },
  {
    "label": "IDirectSoundFXGargle_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundFXGargle_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundFXGargle_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundFXGargle_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundFXGargle_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundFXGargle_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #else #define IDirectSoundFXGargle_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundFXGargle_GetAllParameters(p,a) (p)->GetAllParameters(a) #endif DEFINE_GUID(IID_IDirectSoundFXChorus, 0x880842e3, 0x145f, 0x43e6, 0xa9, 0x34, 0xa7, 0x18, 0x06, 0xe5, 0x05, 0x47)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSFXChorus { FLOAT fWetDryMix ; FLOAT fDepth ; FLOAT fFeedback ; FLOAT fFrequency ; LONG lWaveform ; FLOAT fDelay ; LONG lPhase ; } DSFXChorus,* LPDSFXChorus ; typedef const DSFXChorus* LPCDSFXChorus ; # define DSFXCHORUS_WAVE_TRIANGLE 0 # define DSFXCHORUS_WAVE_SIN 1 # define DSFXCHORUS_WETDRYMIX_MIN 0 . 0 f # define DSFXCHORUS_WETDRYMIX_MAX 1 0 0 . 0 f # define DSFXCHORUS_DEPTH_MIN 0 . 0 f # define DSFXCHORUS_DEPTH_MAX 1 0 0 . 0 f # define DSFXCHORUS_FEEDBACK_MIN - 9 9 . 0 f # define DSFXCHORUS_FEEDBACK_MAX 9 9 . 0 f # define DSFXCHORUS_FREQUENCY_MIN 0 . 0 f # define DSFXCHORUS_FREQUENCY_MAX 1 0 . 0 f # define DSFXCHORUS_DELAY_MIN 0 . 0 f # define DSFXCHORUS_DELAY_MAX 2 0 . 0 f # define DSFXCHORUS_PHASE_MIN 0 # define DSFXCHORUS_PHASE_MAX 4 # define DSFXCHORUS_PHASE_NEG_180 0 # define DSFXCHORUS_PHASE_NEG_90 1 # define DSFXCHORUS_PHASE_ZERO 2 # define DSFXCHORUS_PHASE_90 3 # define DSFXCHORUS_PHASE_180 4 # undef INTERFACE # define INTERFACE IDirectSoundFXChorus)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundFXChorus, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSFXChorus pcDsFxChorus)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSFXChorus pDsFxChorus)"
  },
  {
    "label": "IDirectSoundFXChorus_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundFXChorus_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundFXChorus_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundFXChorus_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundFXChorus_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundFXChorus_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #else #define IDirectSoundFXChorus_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundFXChorus_GetAllParameters(p,a) (p)->GetAllParameters(a) #endif DEFINE_GUID(IID_IDirectSoundFXFlanger, 0x903e9878, 0x2c92, 0x4072, 0x9b, 0x2c, 0xea, 0x68, 0xf5, 0x39, 0x67, 0x83)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSFXFlanger { FLOAT fWetDryMix ; FLOAT fDepth ; FLOAT fFeedback ; FLOAT fFrequency ; LONG lWaveform ; FLOAT fDelay ; LONG lPhase ; } DSFXFlanger,* LPDSFXFlanger ; typedef const DSFXFlanger* LPCDSFXFlanger ; # define DSFXFLANGER_WAVE_TRIANGLE 0 # define DSFXFLANGER_WAVE_SIN 1 # define DSFXFLANGER_WETDRYMIX_MIN 0 . 0 f # define DSFXFLANGER_WETDRYMIX_MAX 1 0 0 . 0 f # define DSFXFLANGER_FREQUENCY_MIN 0 . 0 f # define DSFXFLANGER_FREQUENCY_MAX 1 0 . 0 f # define DSFXFLANGER_DEPTH_MIN 0 . 0 f # define DSFXFLANGER_DEPTH_MAX 1 0 0 . 0 f # define DSFXFLANGER_PHASE_MIN 0 # define DSFXFLANGER_PHASE_MAX 4 # define DSFXFLANGER_FEEDBACK_MIN - 9 9 . 0 f # define DSFXFLANGER_FEEDBACK_MAX 9 9 . 0 f # define DSFXFLANGER_DELAY_MIN 0 . 0 f # define DSFXFLANGER_DELAY_MAX 4 . 0 f # define DSFXFLANGER_PHASE_NEG_180 0 # define DSFXFLANGER_PHASE_NEG_90 1 # define DSFXFLANGER_PHASE_ZERO 2 # define DSFXFLANGER_PHASE_90 3 # define DSFXFLANGER_PHASE_180 4 # undef INTERFACE # define INTERFACE IDirectSoundFXFlanger)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundFXFlanger, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSFXFlanger pcDsFxFlanger)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSFXFlanger pDsFxFlanger)"
  },
  {
    "label": "IDirectSoundFXFlanger_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundFXFlanger_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundFXFlanger_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundFXFlanger_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundFXFlanger_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundFXFlanger_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #else #define IDirectSoundFXFlanger_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundFXFlanger_GetAllParameters(p,a) (p)->GetAllParameters(a) #endif DEFINE_GUID(IID_IDirectSoundFXEcho, 0x8bd28edf, 0x50db, 0x4e92, 0xa2, 0xbd, 0x44, 0x54, 0x88, 0xd1, 0xed, 0x42)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSFXEcho { FLOAT fWetDryMix ; FLOAT fFeedback ; FLOAT fLeftDelay ; FLOAT fRightDelay ; LONG lPanDelay ; } DSFXEcho,* LPDSFXEcho ; typedef const DSFXEcho* LPCDSFXEcho ; # define DSFXECHO_WETDRYMIX_MIN 0 . 0 f # define DSFXECHO_WETDRYMIX_MAX 1 0 0 . 0 f # define DSFXECHO_FEEDBACK_MIN 0 . 0 f # define DSFXECHO_FEEDBACK_MAX 1 0 0 . 0 f # define DSFXECHO_LEFTDELAY_MIN 1 . 0 f # define DSFXECHO_LEFTDELAY_MAX 2 0 0 0 . 0 f # define DSFXECHO_RIGHTDELAY_MIN 1 . 0 f # define DSFXECHO_RIGHTDELAY_MAX 2 0 0 0 . 0 f # define DSFXECHO_PANDELAY_MIN 0 # define DSFXECHO_PANDELAY_MAX 1 # undef INTERFACE # define INTERFACE IDirectSoundFXEcho)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundFXEcho, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSFXEcho pcDsFxEcho)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSFXEcho pDsFxEcho)"
  },
  {
    "label": "IDirectSoundFXEcho_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundFXEcho_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundFXEcho_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundFXEcho_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundFXEcho_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundFXEcho_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #else #define IDirectSoundFXEcho_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundFXEcho_GetAllParameters(p,a) (p)->GetAllParameters(a) #endif DEFINE_GUID(IID_IDirectSoundFXDistortion, 0x8ecf4326, 0x455f, 0x4d8b, 0xbd, 0xa9, 0x8d, 0x5d, 0x3e, 0x9e, 0x3e, 0x0b)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSFXDistortion { FLOAT fGain ; FLOAT fEdge ; FLOAT fPostEQCenterFrequency ; FLOAT fPostEQBandwidth ; FLOAT fPreLowpassCutoff ; } DSFXDistortion,* LPDSFXDistortion ; typedef const DSFXDistortion* LPCDSFXDistortion ; # define DSFXDISTORTION_GAIN_MIN - 6 0 . 0 f # define DSFXDISTORTION_GAIN_MAX 0 . 0 f # define DSFXDISTORTION_EDGE_MIN 0 . 0 f # define DSFXDISTORTION_EDGE_MAX 1 0 0 . 0 f # define DSFXDISTORTION_POSTEQCENTERFREQUENCY_MIN 1 0 0 . 0 f # define DSFXDISTORTION_POSTEQCENTERFREQUENCY_MAX 8 0 0 0 . 0 f # define DSFXDISTORTION_POSTEQBANDWIDTH_MIN 1 0 0 . 0 f # define DSFXDISTORTION_POSTEQBANDWIDTH_MAX 8 0 0 0 . 0 f # define DSFXDISTORTION_PRELOWPASSCUTOFF_MIN 1 0 0 . 0 f # define DSFXDISTORTION_PRELOWPASSCUTOFF_MAX 8 0 0 0 . 0 f # undef INTERFACE # define INTERFACE IDirectSoundFXDistortion)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundFXDistortion, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSFXDistortion pcDsFxDistortion)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSFXDistortion pDsFxDistortion)"
  },
  {
    "label": "IDirectSoundFXDistortion_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundFXDistortion_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundFXDistortion_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundFXDistortion_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundFXDistortion_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundFXDistortion_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #else #define IDirectSoundFXDistortion_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundFXDistortion_GetAllParameters(p,a) (p)->GetAllParameters(a) #endif DEFINE_GUID(IID_IDirectSoundFXCompressor, 0x4bbd1154, 0x62f6, 0x4e2c, 0xa1, 0x5c, 0xd3, 0xb6, 0xc4, 0x17, 0xf7, 0xa0)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSFXCompressor { FLOAT fGain ; FLOAT fAttack ; FLOAT fRelease ; FLOAT fThreshold ; FLOAT fRatio ; FLOAT fPredelay ; } DSFXCompressor,* LPDSFXCompressor ; typedef const DSFXCompressor* LPCDSFXCompressor ; # define DSFXCOMPRESSOR_GAIN_MIN - 6 0 . 0 f # define DSFXCOMPRESSOR_GAIN_MAX 6 0 . 0 f # define DSFXCOMPRESSOR_ATTACK_MIN 0 . 0 1 f # define DSFXCOMPRESSOR_ATTACK_MAX 5 0 0 . 0 f # define DSFXCOMPRESSOR_RELEASE_MIN 5 0 . 0 f # define DSFXCOMPRESSOR_RELEASE_MAX 3 0 0 0 . 0 f # define DSFXCOMPRESSOR_THRESHOLD_MIN - 6 0 . 0 f # define DSFXCOMPRESSOR_THRESHOLD_MAX 0 . 0 f # define DSFXCOMPRESSOR_RATIO_MIN 1 . 0 f # define DSFXCOMPRESSOR_RATIO_MAX 1 0 0 . 0 f # define DSFXCOMPRESSOR_PREDELAY_MIN 0 . 0 f # define DSFXCOMPRESSOR_PREDELAY_MAX 4 . 0 f # undef INTERFACE # define INTERFACE IDirectSoundFXCompressor)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundFXCompressor, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSFXCompressor pcDsFxCompressor)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSFXCompressor pDsFxCompressor)"
  },
  {
    "label": "IDirectSoundFXCompressor_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundFXCompressor_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundFXCompressor_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundFXCompressor_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundFXCompressor_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundFXCompressor_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #else #define IDirectSoundFXCompressor_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundFXCompressor_GetAllParameters(p,a) (p)->GetAllParameters(a) #endif DEFINE_GUID(IID_IDirectSoundFXParamEq, 0xc03ca9fe, 0xfe90, 0x4204, 0x80, 0x78, 0x82, 0x33, 0x4c, 0xd1, 0x77, 0xda)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSFXParamEq { FLOAT fCenter ; FLOAT fBandwidth ; FLOAT fGain ; } DSFXParamEq,* LPDSFXParamEq ; typedef const DSFXParamEq* LPCDSFXParamEq ; # define DSFXPARAMEQ_CENTER_MIN 8 0 . 0 f # define DSFXPARAMEQ_CENTER_MAX 1 6 0 0 0 . 0 f # define DSFXPARAMEQ_BANDWIDTH_MIN 1 . 0 f # define DSFXPARAMEQ_BANDWIDTH_MAX 3 6 . 0 f # define DSFXPARAMEQ_GAIN_MIN - 1 5 . 0 f # define DSFXPARAMEQ_GAIN_MAX 1 5 . 0 f # undef INTERFACE # define INTERFACE IDirectSoundFXParamEq)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundFXParamEq, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSFXParamEq pcDsFxParamEq)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSFXParamEq pDsFxParamEq)"
  },
  {
    "label": "IDirectSoundFXParamEq_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundFXParamEq_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundFXParamEq_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundFXParamEq_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundFXParamEq_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundFXParamEq_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #else #define IDirectSoundFXParamEq_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundFXParamEq_GetAllParameters(p,a) (p)->GetAllParameters(a) #endif DEFINE_GUID(IID_IDirectSoundFXI3DL2Reverb, 0x4b166a6a, 0x0d66, 0x43f3, 0x80, 0xe3, 0xee, 0x62, 0x80, 0xde, 0xe1, 0xa4)"
  },
  {
    "label": "DSFX_I3DL2REVERB_ROOM_MIN()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSFXI3DL2Reverb { LONG lRoom ; LONG lRoomHF ; FLOAT flRoomRolloffFactor ; FLOAT flDecayTime ; FLOAT flDecayHFRatio ; LONG lReflections ; FLOAT flReflectionsDelay ; LONG lReverb ; FLOAT flReverbDelay ; FLOAT flDiffusion ; FLOAT flDensity ; FLOAT flHFReference ; } DSFXI3DL2Reverb,* LPDSFXI3DL2Reverb ; typedef const DSFXI3DL2Reverb* LPCDSFXI3DL2Reverb ; # define)",
    "insertText": "DSFX_I3DL2REVERB_ROOM_MIN(-10000) #define DSFX_I3DL2REVERB_ROOM_MAX 0 #define DSFX_I3DL2REVERB_ROOM_DEFAULT (-1000) #define DSFX_I3DL2REVERB_ROOMHF_MIN (-10000) #define DSFX_I3DL2REVERB_ROOMHF_MAX 0 #define DSFX_I3DL2REVERB_ROOMHF_DEFAULT (-100) #define DSFX_I3DL2REVERB_ROOMROLLOFFFACTOR_MIN 0.0f #define DSFX_I3DL2REVERB_ROOMROLLOFFFACTOR_MAX 10.0f #define DSFX_I3DL2REVERB_ROOMROLLOFFFACTOR_DEFAULT 0.0f #define DSFX_I3DL2REVERB_DECAYTIME_MIN 0.1f #define DSFX_I3DL2REVERB_DECAYTIME_MAX 20.0f #define DSFX_I3DL2REVERB_DECAYTIME_DEFAULT 1.49f #define DSFX_I3DL2REVERB_DECAYHFRATIO_MIN 0.1f #define DSFX_I3DL2REVERB_DECAYHFRATIO_MAX 2.0f #define DSFX_I3DL2REVERB_DECAYHFRATIO_DEFAULT 0.83f #define DSFX_I3DL2REVERB_REFLECTIONS_MIN (-10000) #define DSFX_I3DL2REVERB_REFLECTIONS_MAX 1000 #define DSFX_I3DL2REVERB_REFLECTIONS_DEFAULT (-2602) #define DSFX_I3DL2REVERB_REFLECTIONSDELAY_MIN 0.0f #define DSFX_I3DL2REVERB_REFLECTIONSDELAY_MAX 0.3f #define DSFX_I3DL2REVERB_REFLECTIONSDELAY_DEFAULT 0.007f #define DSFX_I3DL2REVERB_REVERB_MIN (-10000) #define DSFX_I3DL2REVERB_REVERB_MAX 2000 #define DSFX_I3DL2REVERB_REVERB_DEFAULT (200) #define DSFX_I3DL2REVERB_REVERBDELAY_MIN 0.0f #define DSFX_I3DL2REVERB_REVERBDELAY_MAX 0.1f #define DSFX_I3DL2REVERB_REVERBDELAY_DEFAULT 0.011f #define DSFX_I3DL2REVERB_DIFFUSION_MIN 0.0f #define DSFX_I3DL2REVERB_DIFFUSION_MAX 100.0f #define DSFX_I3DL2REVERB_DIFFUSION_DEFAULT 100.0f #define DSFX_I3DL2REVERB_DENSITY_MIN 0.0f #define DSFX_I3DL2REVERB_DENSITY_MAX 100.0f #define DSFX_I3DL2REVERB_DENSITY_DEFAULT 100.0f #define DSFX_I3DL2REVERB_HFREFERENCE_MIN 20.0f #define DSFX_I3DL2REVERB_HFREFERENCE_MAX 20000.0f #define DSFX_I3DL2REVERB_HFREFERENCE_DEFAULT 5000.0f #define DSFX_I3DL2REVERB_QUALITY_MIN 0 #define DSFX_I3DL2REVERB_QUALITY_MAX 3 #define DSFX_I3DL2REVERB_QUALITY_DEFAULT 2 #undef INTERFACE #define INTERFACE IDirectSoundFXI3DL2Reverb DECLARE_INTERFACE_(IDirectSoundFXI3DL2Reverb, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSFXI3DL2Reverb pcDsFxI3DL2Reverb)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSFXI3DL2Reverb pDsFxI3DL2Reverb)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetPreset) (THIS_ DWORD dwPreset)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetPreset) (THIS_ __out LPDWORD pdwPreset)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetQuality) (THIS_ LONG lQuality)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetQuality) (THIS_ __out LONG *plQuality)"
  },
  {
    "label": "IDirectSoundFXI3DL2Reverb_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundFXI3DL2Reverb_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundFXI3DL2Reverb_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundFXI3DL2Reverb_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundFXI3DL2Reverb_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundFXI3DL2Reverb_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #define IDirectSoundFXI3DL2Reverb_SetPreset(p,a) (p)->lpVtbl->SetPreset(p,a) #define IDirectSoundFXI3DL2Reverb_GetPreset(p,a) (p)->lpVtbl->GetPreset(p,a) #else #define IDirectSoundFXI3DL2Reverb_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundFXI3DL2Reverb_GetAllParameters(p,a) (p)->GetAllParameters(a) #define IDirectSoundFXI3DL2Reverb_SetPreset(p,a) (p)->SetPreset(a) #define IDirectSoundFXI3DL2Reverb_GetPreset(p,a) (p)->GetPreset(a) #endif DEFINE_GUID(IID_IDirectSoundFXWavesReverb,0x46858c3a,0x0dc6,0x45e3,0xb7,0x60,0xd4,0xee,0xf1,0x6c,0xb3,0x25)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSFXWavesReverb { FLOAT fInGain ; FLOAT fReverbMix ; FLOAT fReverbTime ; FLOAT fHighFreqRTRatio ; } DSFXWavesReverb,* LPDSFXWavesReverb ; typedef const DSFXWavesReverb* LPCDSFXWavesReverb ; # define DSFX_WAVESREVERB_INGAIN_MIN - 9 6 . 0 f # define DSFX_WAVESREVERB_INGAIN_MAX 0 . 0 f # define DSFX_WAVESREVERB_INGAIN_DEFAULT 0 . 0 f # define DSFX_WAVESREVERB_REVERBMIX_MIN - 9 6 . 0 f # define DSFX_WAVESREVERB_REVERBMIX_MAX 0 . 0 f # define DSFX_WAVESREVERB_REVERBMIX_DEFAULT 0 . 0 f # define DSFX_WAVESREVERB_REVERBTIME_MIN 0 . 0 0 1 f # define DSFX_WAVESREVERB_REVERBTIME_MAX 3 0 0 0 . 0 f # define DSFX_WAVESREVERB_REVERBTIME_DEFAULT 1 0 0 0 . 0 f # define DSFX_WAVESREVERB_HIGHFREQRTRATIO_MIN 0 . 0 0 1 f # define DSFX_WAVESREVERB_HIGHFREQRTRATIO_MAX 0 . 9 9 9 f # define DSFX_WAVESREVERB_HIGHFREQRTRATIO_DEFAULT 0 . 0 0 1 f # undef INTERFACE # define INTERFACE IDirectSoundFXWavesReverb)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundFXWavesReverb, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSFXWavesReverb pcDsFxWavesReverb)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSFXWavesReverb pDsFxWavesReverb)"
  },
  {
    "label": "IDirectSoundFXWavesReverb_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundFXWavesReverb_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundFXWavesReverb_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundFXWavesReverb_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundFXWavesReverb_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundFXWavesReverb_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #else #define IDirectSoundFXWavesReverb_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundFXWavesReverb_GetAllParameters(p,a) (p)->GetAllParameters(a) #endif DEFINE_GUID(IID_IDirectSoundCaptureFXAec, 0xad74143d, 0x903d, 0x4ab7, 0x80, 0x66, 0x28, 0xd3, 0x63, 0x03, 0x6d, 0x65)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSCFXAec { BOOL fEnable ; BOOL fNoiseFill ; DWORD dwMode ; } DSCFXAec,* LPDSCFXAec ; typedef const DSCFXAec* LPCDSCFXAec ; # define DSCFX_AEC_MODE_PASS_THROUGH 0 x0 # define DSCFX_AEC_MODE_HALF_DUPLEX 0 x1 # define DSCFX_AEC_MODE_FULL_DUPLEX 0 x2 # define DSCFX_AEC_STATUS_HISTORY_UNINITIALIZED 0 x0 # define DSCFX_AEC_STATUS_HISTORY_CONTINUOUSLY_CONVERGED 0 x1 # define DSCFX_AEC_STATUS_HISTORY_PREVIOUSLY_DIVERGED 0 x2 # define DSCFX_AEC_STATUS_CURRENTLY_CONVERGED 0 x8 # undef INTERFACE # define INTERFACE IDirectSoundCaptureFXAec)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundCaptureFXAec, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSCFXAec pDscFxAec)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSCFXAec pDscFxAec)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Reset) (THIS)"
  },
  {
    "label": "IDirectSoundCaptureFXAec_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundCaptureFXAec_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundCaptureFXAec_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundCaptureFXAec_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundCaptureFXAec_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundCaptureFXAec_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #else #define IDirectSoundCaptureFXAec_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundCaptureFXAec_GetAllParameters(p,a) (p)->GetAllParameters(a) #endif DEFINE_GUID(IID_IDirectSoundCaptureFXNoiseSuppress, 0xed311e41, 0xfbae, 0x4175, 0x96, 0x25, 0xcd, 0x8, 0x54, 0xf6, 0x93, 0xca)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (typedef struct _DSCFXNoiseSuppress { BOOL fEnable ; } DSCFXNoiseSuppress,* LPDSCFXNoiseSuppress ; typedef const DSCFXNoiseSuppress* LPCDSCFXNoiseSuppress ; # undef INTERFACE # define INTERFACE IDirectSoundCaptureFXNoiseSuppress)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundCaptureFXNoiseSuppress, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetAllParameters) (THIS_ __in LPCDSCFXNoiseSuppress pcDscFxNoiseSuppress)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetAllParameters) (THIS_ __out LPDSCFXNoiseSuppress pDscFxNoiseSuppress)"
  },
  {
    "label": "IDirectSoundCaptureFXNoiseSuppress_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundCaptureFXNoiseSuppress_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundCaptureFXNoiseSuppress_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundCaptureFXNoiseSuppress_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundCaptureFXNoiseSuppress_SetAllParameters(p,a) (p)->lpVtbl->SetAllParameters(p,a) #define IDirectSoundCaptureFXNoiseSuppress_GetAllParameters(p,a) (p)->lpVtbl->GetAllParameters(p,a) #else #define IDirectSoundCaptureFXNoiseSuppress_SetAllParameters(p,a) (p)->SetAllParameters(a) #define IDirectSoundCaptureFXNoiseSuppress_GetAllParameters(p,a) (p)->GetAllParameters(a)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (# endif typedef struct IDirectSoundFullDuplex* LPDIRECTSOUNDFULLDUPLEX ;)",
    "insertText": "DEFINE_GUID(IID_IDirectSoundFullDuplex, 0xedcb4c7a, 0xdaab, 0x4216, 0xa4, 0x2e, 0x6c, 0x50, 0x59, 0x6d, 0xdc, 0x1d)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectSoundFullDuplex)",
    "insertText": "DECLARE_INTERFACE_(IDirectSoundFullDuplex, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Initialize) (THIS_ __in LPCGUID pCaptureGuid, __in LPCGUID pRenderGuid, __in LPCDSCBUFFERDESC lpDscBufferDesc, __in LPCDSBUFFERDESC lpDsBufferDesc, HWND hWnd, DWORD dwLevel, __deref_out LPLPDIRECTSOUNDCAPTUREBUFFER8 lplpDirectSoundCaptureBuffer8, __deref_out LPLPDIRECTSOUNDBUFFER8 lplpDirectSoundBuffer8)"
  },
  {
    "label": "IDirectSoundFullDuplex_QueryInterface()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IDirectSoundFullDuplex_QueryInterface(p,a,b) IUnknown_QueryInterface(p,a,b) #define IDirectSoundFullDuplex_AddRef(p) IUnknown_AddRef(p) #define IDirectSoundFullDuplex_Release(p) IUnknown_Release(p) #if !defined(__cplusplus) || defined(CINTERFACE) #define IDirectSoundFullDuplex_Initialize(p,a,b,c,d,e,f,g,h) (p)->lpVtbl->Initialize(p,a,b,c,d,e,f,g,h) #else #define IDirectSoundFullDuplex_Initialize(p,a,b,c,d,e,f,g,h) (p)->Initialize(a,b,c,d,e,f,g,h) #endif #endif #endif #define DS_OK S_OK #define DS_NO_VIRTUALIZATION MAKE_HRESULT(0, _FACDS, 10) #define DSERR_ALLOCATED MAKE_DSHRESULT(10) #define DSERR_CONTROLUNAVAIL MAKE_DSHRESULT(30) #define DSERR_INVALIDPARAM E_INVALIDARG #define DSERR_INVALIDCALL MAKE_DSHRESULT(50) #define DSERR_GENERIC E_FAIL #define DSERR_PRIOLEVELNEEDED MAKE_DSHRESULT(70) #define DSERR_OUTOFMEMORY E_OUTOFMEMORY #define DSERR_BADFORMAT MAKE_DSHRESULT(100) #define DSERR_UNSUPPORTED E_NOTIMPL #define DSERR_NODRIVER MAKE_DSHRESULT(120) #define DSERR_ALREADYINITIALIZED MAKE_DSHRESULT(130) #define DSERR_NOAGGREGATION CLASS_E_NOAGGREGATION #define DSERR_BUFFERLOST MAKE_DSHRESULT(150) #define DSERR_OTHERAPPHASPRIO MAKE_DSHRESULT(160) #define DSERR_UNINITIALIZED MAKE_DSHRESULT(170) #define DSERR_NOINTERFACE E_NOINTERFACE #define DSERR_ACCESSDENIED E_ACCESSDENIED #define DSERR_BUFFERTOOSMALL MAKE_DSHRESULT(180) #define DSERR_DS8_REQUIRED MAKE_DSHRESULT(190) #define DSERR_SENDLOOP MAKE_DSHRESULT(200) #define DSERR_BADSENDBUFFERGUID MAKE_DSHRESULT(210) #define DSERR_OBJECTNOTFOUND MAKE_DSHRESULT(4449) #define DSERR_FXUNAVAILABLE MAKE_DSHRESULT(220) #define DSCAPS_PRIMARYMONO 0x00000001 #define DSCAPS_PRIMARYSTEREO 0x00000002 #define DSCAPS_PRIMARY8BIT 0x00000004 #define DSCAPS_PRIMARY16BIT 0x00000008 #define DSCAPS_CONTINUOUSRATE 0x00000010 #define DSCAPS_EMULDRIVER 0x00000020 #define DSCAPS_CERTIFIED 0x00000040 #define DSCAPS_SECONDARYMONO 0x00000100 #define DSCAPS_SECONDARYSTEREO 0x00000200 #define DSCAPS_SECONDARY8BIT 0x00000400 #define DSCAPS_SECONDARY16BIT 0x00000800 #define DSSCL_NORMAL 0x00000001 #define DSSCL_PRIORITY 0x00000002 #define DSSCL_EXCLUSIVE 0x00000003 #define DSSCL_WRITEPRIMARY 0x00000004 #define DSSPEAKER_DIRECTOUT 0x00000000 #define DSSPEAKER_HEADPHONE 0x00000001 #define DSSPEAKER_MONO 0x00000002 #define DSSPEAKER_QUAD 0x00000003 #define DSSPEAKER_STEREO 0x00000004 #define DSSPEAKER_SURROUND 0x00000005 #define DSSPEAKER_5POINT1 0x00000006 #define DSSPEAKER_7POINT1 0x00000007 #define DSSPEAKER_7POINT1_SURROUND 0x00000008 #define DSSPEAKER_5POINT1_SURROUND 0x00000009 #define DSSPEAKER_7POINT1_WIDE DSSPEAKER_7POINT1 #define DSSPEAKER_5POINT1_BACK DSSPEAKER_5POINT1 #define DSSPEAKER_GEOMETRY_MIN 0x00000005 #define DSSPEAKER_GEOMETRY_NARROW 0x0000000A #define DSSPEAKER_GEOMETRY_WIDE 0x00000014 #define DSSPEAKER_GEOMETRY_MAX 0x000000B4 #define DSSPEAKER_COMBINED(c, g) ((DWORD)(((BYTE)(c)) | ((DWORD)((BYTE)(g))) << 16)) #define DSSPEAKER_CONFIG(a) ((BYTE)(a)) #define DSSPEAKER_GEOMETRY(a) ((BYTE)(((DWORD)(a) >> 16) & 0x00FF))"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (DSFX_I3DL2_MATERIAL_PRESET_SINGLEWINDOW,DSFX_I3DL2_MATERIAL_PRESET_DOUBLEWINDOW,DSFX_I3DL2_MATERIAL_PRESET_THINDOOR,DSFX_I3DL2_MATERIAL_PRESET_THICKDOOR,DSFX_I3DL2_MATERIAL_PRESET_WOODWALL,DSFX_I3DL2_MATERIAL_PRESET_BRICKWALL,DSFX_I3DL2_MATERIAL_PRESET_STONEWALL,DSFX_I3DL2_MATERIAL_PRESET_CURTAIN } ; # define I3DL2_MATERIAL_PRESET_SINGLEWINDOW - 2 8 0 0,0 . 7 1 f # define I3DL2_MATERIAL_PRESET_DOUBLEWINDOW - 5 0 0 0,0 . 4 0 f # define I3DL2_MATERIAL_PRESET_THINDOOR - 1 8 0 0,0 . 6 6 f # define I3DL2_MATERIAL_PRESET_THICKDOOR - 4 4 0 0,0 . 6 4 f # define I3DL2_MATERIAL_PRESET_WOODWALL - 4 0 0 0,0 . 5 0 f # define I3DL2_MATERIAL_PRESET_BRICKWALL - 5 0 0 0,0 . 6 0 f # define I3DL2_MATERIAL_PRESET_STONEWALL - 6 0 0 0,0 . 6 8 f # define I3DL2_MATERIAL_PRESET_CURTAIN - 1 2 0 0,0 . 1 5 f enum { DSFX_I3DL2_ENVIRONMENT_PRESET_DEFAULT,DSFX_I3DL2_ENVIRONMENT_PRESET_GENERIC,DSFX_I3DL2_ENVIRONMENT_PRESET_PADDEDCELL,DSFX_I3DL2_ENVIRONMENT_PRESET_ROOM,DSFX_I3DL2_ENVIRONMENT_PRESET_BATHROOM,DSFX_I3DL2_ENVIRONMENT_PRESET_LIVINGROOM,DSFX_I3DL2_ENVIRONMENT_PRESET_STONEROOM,DSFX_I3DL2_ENVIRONMENT_PRESET_AUDITORIUM,DSFX_I3DL2_ENVIRONMENT_PRESET_CONCERTHALL,DSFX_I3DL2_ENVIRONMENT_PRESET_CAVE,DSFX_I3DL2_ENVIRONMENT_PRESET_ARENA,DSFX_I3DL2_ENVIRONMENT_PRESET_HANGAR,DSFX_I3DL2_ENVIRONMENT_PRESET_CARPETEDHALLWAY,DSFX_I3DL2_ENVIRONMENT_PRESET_HALLWAY,DSFX_I3DL2_ENVIRONMENT_PRESET_STONECORRIDOR,DSFX_I3DL2_ENVIRONMENT_PRESET_ALLEY,DSFX_I3DL2_ENVIRONMENT_PRESET_FOREST,DSFX_I3DL2_ENVIRONMENT_PRESET_CITY,DSFX_I3DL2_ENVIRONMENT_PRESET_MOUNTAINS,DSFX_I3DL2_ENVIRONMENT_PRESET_QUARRY,DSFX_I3DL2_ENVIRONMENT_PRESET_PLAIN,DSFX_I3DL2_ENVIRONMENT_PRESET_PARKINGLOT,DSFX_I3DL2_ENVIRONMENT_PRESET_SEWERPIPE,DSFX_I3DL2_ENVIRONMENT_PRESET_UNDERWATER,DSFX_I3DL2_ENVIRONMENT_PRESET_SMALLROOM,DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMROOM,DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEROOM,DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMHALL,DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEHALL,DSFX_I3DL2_ENVIRONMENT_PRESET_PLATE } ; # define I3DL2_ENVIRONMENT_PRESET_DEFAULT - 1 0 0 0,- 1 0 0,0 . 0 f,1 . 4 9 f,0 . 8 3 f,- 2 6 0 2,0 . 0 0 7 f,2 0 0,0 . 0 1 1 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_GENERIC - 1 0 0 0,- 1 0 0,0 . 0 f,1 . 4 9 f,0 . 8 3 f,- 2 6 0 2,0 . 0 0 7 f,2 0 0,0 . 0 1 1 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_PADDEDCELL - 1 0 0 0,- 6 0 0 0,0 . 0 f,0 . 1 7 f,0 . 1 0 f,- 1 2 0 4,0 . 0 0 1 f,2 0 7,0 . 0 0 2 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_ROOM - 1 0 0 0,- 4 5 4,0 . 0 f,0 . 4 0 f,0 . 8 3 f,- 1 6 4 6,0 . 0 0 2 f,5 3,0 . 0 0 3 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_BATHROOM - 1 0 0 0,- 1 2 0 0,0 . 0 f,1 . 4 9 f,0 . 5 4 f,- 3 7 0,0 . 0 0 7 f,1 0 3 0,0 . 0 1 1 f,1 0 0 . 0 f,6 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_LIVINGROOM - 1 0 0 0,- 6 0 0 0,0 . 0 f,0 . 5 0 f,0 . 1 0 f,- 1 3 7 6,0 . 0 0 3 f,- 1 1 0 4,0 . 0 0 4 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_STONEROOM - 1 0 0 0,- 3 0 0,0 . 0 f,2 . 3 1 f,0 . 6 4 f,- 7 1 1,0 . 0 1 2 f,8 3,0 . 0 1 7 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_AUDITORIUM - 1 0 0 0,- 4 7 6,0 . 0 f,4 . 3 2 f,0 . 5 9 f,- 7 8 9,0 . 0 2 0 f,- 2 8 9,0 . 0 3 0 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_CONCERTHALL - 1 0 0 0,- 5 0 0,0 . 0 f,3 . 9 2 f,0 . 7 0 f,- 1 2 3 0,0 . 0 2 0 f,- 2,0 . 0 2 9 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_CAVE - 1 0 0 0,0,0 . 0 f,2 . 9 1 f,1 . 3 0 f,- 6 0 2,0 . 0 1 5 f,- 3 0 2,0 . 0 2 2 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_ARENA - 1 0 0 0,- 6 9 8,0 . 0 f,7 . 2 4 f,0 . 3 3 f,- 1 1 6 6,0 . 0 2 0 f,1 6,0 . 0 3 0 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_HANGAR - 1 0 0 0,- 1 0 0 0,0 . 0 f,1 0 . 0 5 f,0 . 2 3 f,- 6 0 2,0 . 0 2 0 f,1 9 8,0 . 0 3 0 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_CARPETEDHALLWAY - 1 0 0 0,- 4 0 0 0,0 . 0 f,0 . 3 0 f,0 . 1 0 f,- 1 8 3 1,0 . 0 0 2 f,- 1 6 3 0,0 . 0 3 0 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_HALLWAY - 1 0 0 0,- 3 0 0,0 . 0 f,1 . 4 9 f,0 . 5 9 f,- 1 2 1 9,0 . 0 0 7 f,4 4 1,0 . 0 1 1 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_STONECORRIDOR - 1 0 0 0,- 2 3 7,0 . 0 f,2 . 7 0 f,0 . 7 9 f,- 1 2 1 4,0 . 0 1 3 f,3 9 5,0 . 0 2 0 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_ALLEY - 1 0 0 0,- 2 7 0,0 . 0 f,1 . 4 9 f,0 . 8 6 f,- 1 2 0 4,0 . 0 0 7 f,- 4,0 . 0 1 1 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_FOREST - 1 0 0 0,- 3 3 0 0,0 . 0 f,1 . 4 9 f,0 . 5 4 f,- 2 5 6 0,0 . 1 6 2 f,- 6 1 3,0 . 0 8 8 f,7 9 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_CITY - 1 0 0 0,- 8 0 0,0 . 0 f,1 . 4 9 f,0 . 6 7 f,- 2 2 7 3,0 . 0 0 7 f,- 2 2 1 7,0 . 0 1 1 f,5 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_MOUNTAINS - 1 0 0 0,- 2 5 0 0,0 . 0 f,1 . 4 9 f,0 . 2 1 f,- 2 7 8 0,0 . 3 0 0 f,- 2 0 1 4,0 . 1 0 0 f,2 7 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_QUARRY - 1 0 0 0,- 1 0 0 0,0 . 0 f,1 . 4 9 f,0 . 8 3 f,- 1 0 0 0 0,0 . 0 6 1 f,5 0 0,0 . 0 2 5 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_PLAIN - 1 0 0 0,- 2 0 0 0,0 . 0 f,1 . 4 9 f,0 . 5 0 f,- 2 4 6 6,0 . 1 7 9 f,- 2 5 1 4,0 . 1 0 0 f,2 1 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_PARKINGLOT - 1 0 0 0,0,0 . 0 f,1 . 6 5 f,1 . 5 0 f,- 1 3 6 3,0 . 0 0 8 f,- 1 1 5 3,0 . 0 1 2 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_SEWERPIPE - 1 0 0 0,- 1 0 0 0,0 . 0 f,2 . 8 1 f,0 . 1 4 f,4 2 9,0 . 0 1 4 f,6 4 8,0 . 0 2 1 f,8 0 . 0 f,6 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_UNDERWATER - 1 0 0 0,- 4 0 0 0,0 . 0 f,1 . 4 9 f,0 . 1 0 f,- 4 4 9,0 . 0 0 7 f,1 7 0 0,0 . 0 1 1 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_SMALLROOM - 1 0 0 0,- 6 0 0,0 . 0 f,1 . 1 0 f,0 . 8 3 f,- 4 0 0,0 . 0 0 5 f,5 0 0,0 . 0 1 0 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_MEDIUMROOM - 1 0 0 0,- 6 0 0,0 . 0 f,1 . 3 0 f,0 . 8 3 f,- 1 0 0 0,0 . 0 1 0 f,- 2 0 0,0 . 0 2 0 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_LARGEROOM - 1 0 0 0,- 6 0 0,0 . 0 f,1 . 5 0 f,0 . 8 3 f,- 1 6 0 0,0 . 0 2 0 f,- 1 0 0 0,0 . 0 4 0 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_MEDIUMHALL - 1 0 0 0,- 6 0 0,0 . 0 f,1 . 8 0 f,0 . 7 0 f,- 1 3 0 0,0 . 0 1 5 f,- 8 0 0,0 . 0 3 0 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_LARGEHALL - 1 0 0 0,- 6 0 0,0 . 0 f,1 . 8 0 f,0 . 7 0 f,- 2 0 0 0,0 . 0 3 0 f,- 1 4 0 0,0 . 0 6 0 f,1 0 0 . 0 f,1 0 0 . 0 f,5 0 0 0 . 0 f # define I3DL2_ENVIRONMENT_PRESET_PLATE - 1 0 0 0,- 2 0 0,0 . 0 f,1 . 3 0 f,0 . 9 0 f,0,0 . 0 0 2 f,0,0 . 0 1 0 f,1 0 0 . 0 f,7 5 . 0 f,5 0 0 0 . 0 f # define DS3DALG_DEFAULT GUID_NULL)",
    "insertText": "DEFINE_GUID(DS3DALG_NO_VIRTUALIZATION, 0xc241333f, 0x1c1b, 0x11d2, 0x94, 0xf5, 0x0, 0xc0, 0x4f, 0xc2, 0x8a, 0xca)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(DS3DALG_HRTF_FULL, 0xc2413340, 0x1c1b, 0x11d2, 0x94, 0xf5, 0x0, 0xc0, 0x4f, 0xc2, 0x8a, 0xca)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(DS3DALG_HRTF_LIGHT, 0xc2413342, 0x1c1b, 0x11d2, 0x94, 0xf5, 0x0, 0xc0, 0x4f, 0xc2, 0x8a, 0xca)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (# if DIRECTSOUND_VERSION> = 0 x0800)",
    "insertText": "DEFINE_GUID(GUID_DSFX_STANDARD_GARGLE, 0xdafd8210, 0x5711, 0x4b91, 0x9f, 0xe3, 0xf7, 0x5b, 0x7a, 0xe2, 0x79, 0xbf)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSFX_STANDARD_CHORUS, 0xefe6629c, 0x81f7, 0x4281, 0xbd, 0x91, 0xc9, 0xd6, 0x04, 0xa9, 0x5a, 0xf6)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSFX_STANDARD_FLANGER, 0xefca3d92, 0xdfd8, 0x4672, 0xa6, 0x03, 0x74, 0x20, 0x89, 0x4b, 0xad, 0x98)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSFX_STANDARD_ECHO, 0xef3e932c, 0xd40b, 0x4f51, 0x8c, 0xcf, 0x3f, 0x98, 0xf1, 0xb2, 0x9d, 0x5d)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSFX_STANDARD_DISTORTION, 0xef114c90, 0xcd1d, 0x484e, 0x96, 0xe5, 0x09, 0xcf, 0xaf, 0x91, 0x2a, 0x21)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSFX_STANDARD_COMPRESSOR, 0xef011f79, 0x4000, 0x406d, 0x87, 0xaf, 0xbf, 0xfb, 0x3f, 0xc3, 0x9d, 0x57)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSFX_STANDARD_PARAMEQ, 0x120ced89, 0x3bf4, 0x4173, 0xa1, 0x32, 0x3c, 0xb4, 0x06, 0xcf, 0x32, 0x31)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSFX_STANDARD_I3DL2REVERB, 0xef985e71, 0xd5c7, 0x42d4, 0xba, 0x4d, 0x2d, 0x07, 0x3e, 0x2e, 0x96, 0xf4)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSFX_WAVES_REVERB, 0x87fc0268, 0x9a55, 0x4360, 0x95, 0xaa, 0x00, 0x4a, 0x1d, 0x9d, 0xe2, 0x6c)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSCFX_CLASS_AEC, 0xBF963D80L, 0xC559, 0x11D0, 0x8A, 0x2B, 0x00, 0xA0, 0xC9, 0x25, 0x5A, 0xC1)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSCFX_MS_AEC, 0xcdebb919, 0x379a, 0x488a, 0x87, 0x65, 0xf5, 0x3c, 0xfd, 0x36, 0xde, 0x40)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSCFX_SYSTEM_AEC, 0x1c22c56d, 0x9879, 0x4f5b, 0xa3, 0x89, 0x27, 0x99, 0x6d, 0xdc, 0x28, 0x10)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSCFX_CLASS_NS, 0xe07f903f, 0x62fd, 0x4e60, 0x8c, 0xdd, 0xde, 0xa7, 0x23, 0x66, 0x65, 0xb5)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSCFX_MS_NS, 0x11c5c73b, 0x66e9, 0x4ba1, 0xa0, 0xba, 0xe8, 0x14, 0xc6, 0xee, 0xd9, 0x2d)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_DSCFX_SYSTEM_NS, 0x5ab0882e, 0x7274, 0x4516, 0x87, 0x7d, 0x4e, 0xee, 0x99, 0xba, 0x4f, 0xd0)"
  }
]