[
  {
    "label": "DSA_SIG_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DSA_SIG_st"
  },
  {
    "label": "d2i_DSAparams_fp()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_DSA_H # define HEADER_DSA_H # include<openssl / opensslconf . h> # ifndef OPENSSL_NO_DSA # ifdef __cplusplus \" C \" { # endif # include<openssl / e_os2 . h> # include<openssl / bio . h> # include<openssl / crypto . h> # include<openssl / ossl_typ . h> # include<openssl / bn . h> # if OPENSSL_API_COMPAT<0 x10100000L # include<openssl / dh . h> # endif # include<openssl / dsaerr . h> # ifndef OPENSSL_DSA_MAX_MODULUS_BITS # define OPENSSL_DSA_MAX_MODULUS_BITS 1 0 0 0 0 # endif # define OPENSSL_DSA_FIPS_MIN_MODULUS_BITS 1 0 2 4 # define DSA_FLAG_CACHE_MONT_P 0 x01 # if OPENSSL_API_COMPAT<0 x10100000L # define DSA_FLAG_NO_EXP_CONSTTIME 0 x00 # endif # define DSA_FLAG_FIPS_METHOD 0 x0400 # define DSA_FLAG_NON_FIPS_ALLOW 0 x0400 # define DSA_FLAG_FIPS_CHECKED 0 x0800 typedef struct DSA_SIG_st DSA_SIG ; # define)",
    "insertText": "d2i_DSAparams_fp(fp,x) (DSA *)ASN1_d2i_fp((char *(*)())DSA_new, \\ (char *(*)())d2i_DSAparams,(fp),(unsigned char **)(x)) # define i2d_DSAparams_fp(fp,x) ASN1_i2d_fp(i2d_DSAparams,(fp), \\ (unsigned char *)(x)) # define d2i_DSAparams_bio(bp,x) ASN1_d2i_bio_of(DSA,DSA_new,d2i_DSAparams,bp,x) # define i2d_DSAparams_bio(bp,x) ASN1_i2d_bio_of_const(DSA,i2d_DSAparams,bp,x) DSA *DSAparams_dup(DSA *x)"
  },
  {
    "label": "DSA_SIG_new()",
    "kind": "Method",
    "detail": "Function (DSA_SIG*)",
    "insertText": "DSA_SIG_new(void)"
  },
  {
    "label": "DSA_SIG_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DSA_SIG_free(DSA_SIG *a)"
  },
  {
    "label": "i2d_DSA_SIG()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_DSA_SIG(const DSA_SIG *a, unsigned char **pp)"
  },
  {
    "label": "d2i_DSA_SIG()",
    "kind": "Method",
    "detail": "Function (DSA_SIG*)",
    "insertText": "d2i_DSA_SIG(DSA_SIG **v, const unsigned char **pp, long length)"
  },
  {
    "label": "DSA_SIG_get0()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DSA_SIG_get0(const DSA_SIG *sig, const BIGNUM **pr, const BIGNUM **ps)"
  },
  {
    "label": "DSA_SIG_set0()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_SIG_set0(DSA_SIG *sig, BIGNUM *r, BIGNUM *s)"
  },
  {
    "label": "DSA_do_sign()",
    "kind": "Method",
    "detail": "Function (DSA_SIG*)",
    "insertText": "DSA_do_sign(const unsigned char *dgst, int dlen, DSA *dsa)"
  },
  {
    "label": "DSA_do_verify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_do_verify(const unsigned char *dgst, int dgst_len, DSA_SIG *sig, DSA *dsa)"
  },
  {
    "label": "DSA_OpenSSL()",
    "kind": "Method",
    "detail": "Function (const DSA_METHOD*)",
    "insertText": "DSA_OpenSSL(void)"
  },
  {
    "label": "DSA_set_default_method()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DSA_set_default_method(const DSA_METHOD *)"
  },
  {
    "label": "DSA_get_default_method()",
    "kind": "Method",
    "detail": "Function (const DSA_METHOD*)",
    "insertText": "DSA_get_default_method(void)"
  },
  {
    "label": "DSA_set_method()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_set_method(DSA *dsa, const DSA_METHOD *)"
  },
  {
    "label": "DSA_get_method()",
    "kind": "Method",
    "detail": "Function (const DSA_METHOD*)",
    "insertText": "DSA_get_method(DSA *d)"
  },
  {
    "label": "DSA_new()",
    "kind": "Method",
    "detail": "Function (DSA*)",
    "insertText": "DSA_new(void)"
  },
  {
    "label": "DSA_new_method()",
    "kind": "Method",
    "detail": "Function (DSA*)",
    "insertText": "DSA_new_method(ENGINE *engine)"
  },
  {
    "label": "DSA_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DSA_free(DSA *r)"
  },
  {
    "label": "DSA_up_ref()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_up_ref(DSA *r)"
  },
  {
    "label": "DSA_size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_size(const DSA *)"
  },
  {
    "label": "DSA_bits()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_bits(const DSA *d)"
  },
  {
    "label": "DSA_security_bits()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_security_bits(const DSA *d)"
  },
  {
    "label": "DEPRECATEDIN_1_2_0()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEPRECATEDIN_1_2_0(int DSA_sign_setup(DSA *dsa, BN_CTX *ctx_in, BIGNUM **kinvp, BIGNUM **rp)) int DSA_sign(int type, const unsigned char *dgst, int dlen, unsigned char *sig, unsigned int *siglen, DSA *dsa)"
  },
  {
    "label": "DSA_verify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_verify(int type, const unsigned char *dgst, int dgst_len, const unsigned char *sigbuf, int siglen, DSA *dsa)"
  },
  {
    "label": "DSA_get_ex_new_index()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DSA_get_ex_new_index(l, p, newf, dupf, freef) \\ CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_DSA, l, p, newf, dupf, freef) int DSA_set_ex_data(DSA *d, int idx, void *arg)"
  },
  {
    "label": "DSA_get_ex_data()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "DSA_get_ex_data(DSA *d, int idx)"
  },
  {
    "label": "d2i_DSAPublicKey()",
    "kind": "Method",
    "detail": "Function (DSA*)",
    "insertText": "d2i_DSAPublicKey(DSA **a, const unsigned char **pp, long length)"
  },
  {
    "label": "d2i_DSAPrivateKey()",
    "kind": "Method",
    "detail": "Function (DSA*)",
    "insertText": "d2i_DSAPrivateKey(DSA **a, const unsigned char **pp, long length)"
  },
  {
    "label": "d2i_DSAparams()",
    "kind": "Method",
    "detail": "Function (DSA*)",
    "insertText": "d2i_DSAparams(DSA **a, const unsigned char **pp, long length)"
  },
  {
    "label": "DEPRECATEDIN_0_9_8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEPRECATEDIN_0_9_8(DSA *DSA_generate_parameters(int bits, unsigned char *seed, int seed_len, int *counter_ret, unsigned long *h_ret, void (*callback) (int, int, void *), void *cb_arg)) int DSA_generate_parameters_ex(DSA *dsa, int bits, const unsigned char *seed, int seed_len, int *counter_ret, unsigned long *h_ret, BN_GENCB *cb)"
  },
  {
    "label": "DSA_generate_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_generate_key(DSA *a)"
  },
  {
    "label": "i2d_DSAPublicKey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_DSAPublicKey(const DSA *a, unsigned char **pp)"
  },
  {
    "label": "i2d_DSAPrivateKey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_DSAPrivateKey(const DSA *a, unsigned char **pp)"
  },
  {
    "label": "i2d_DSAparams()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_DSAparams(const DSA *a, unsigned char **pp)"
  },
  {
    "label": "DSAparams_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSAparams_print(BIO *bp, const DSA *x)"
  },
  {
    "label": "DSA_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_print(BIO *bp, const DSA *x, int off)"
  },
  {
    "label": "DSAparams_print_fp()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_STDIO int)",
    "insertText": "DSAparams_print_fp(FILE *fp, const DSA *x)"
  },
  {
    "label": "DSA_print_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_print_fp(FILE *bp, const DSA *x, int off)"
  },
  {
    "label": "DSA_is_prime()",
    "kind": "Method",
    "detail": "Function (# endif # define DSS_prime_checks 6 4 # define)",
    "insertText": "DSA_is_prime(n, callback, cb_arg) \\ BN_is_prime(n, DSS_prime_checks, callback, NULL, cb_arg) # ifndef OPENSSL_NO_DH DH *DSA_dup_DH(const DSA *r)"
  },
  {
    "label": "EVP_PKEY_CTX_set_dsa_paramgen_bits()",
    "kind": "Method",
    "detail": "Function (# endif # define)",
    "insertText": "EVP_PKEY_CTX_set_dsa_paramgen_bits(ctx, nbits) \\ EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DSA, EVP_PKEY_OP_PARAMGEN, \\ EVP_PKEY_CTRL_DSA_PARAMGEN_BITS, nbits, NULL) # define EVP_PKEY_CTX_set_dsa_paramgen_q_bits(ctx, qbits) \\ EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DSA, EVP_PKEY_OP_PARAMGEN, \\ EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS, qbits, NULL) # define EVP_PKEY_CTX_set_dsa_paramgen_md(ctx, md) \\ EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DSA, EVP_PKEY_OP_PARAMGEN, \\ EVP_PKEY_CTRL_DSA_PARAMGEN_MD, 0, (void *)(md)) # define EVP_PKEY_CTRL_DSA_PARAMGEN_BITS (EVP_PKEY_ALG_CTRL + 1) # define EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS (EVP_PKEY_ALG_CTRL + 2) # define EVP_PKEY_CTRL_DSA_PARAMGEN_MD (EVP_PKEY_ALG_CTRL + 3) void DSA_get0_pqg(const DSA *d, const BIGNUM **p, const BIGNUM **q, const BIGNUM **g)"
  },
  {
    "label": "DSA_set0_pqg()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_set0_pqg(DSA *d, BIGNUM *p, BIGNUM *q, BIGNUM *g)"
  },
  {
    "label": "DSA_get0_key()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DSA_get0_key(const DSA *d, const BIGNUM **pub_key, const BIGNUM **priv_key)"
  },
  {
    "label": "DSA_set0_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_set0_key(DSA *d, BIGNUM *pub_key, BIGNUM *priv_key)"
  },
  {
    "label": "DSA_get0_p()",
    "kind": "Method",
    "detail": "Function (const BIGNUM*)",
    "insertText": "DSA_get0_p(const DSA *d)"
  },
  {
    "label": "DSA_get0_q()",
    "kind": "Method",
    "detail": "Function (const BIGNUM*)",
    "insertText": "DSA_get0_q(const DSA *d)"
  },
  {
    "label": "DSA_get0_g()",
    "kind": "Method",
    "detail": "Function (const BIGNUM*)",
    "insertText": "DSA_get0_g(const DSA *d)"
  },
  {
    "label": "DSA_get0_pub_key()",
    "kind": "Method",
    "detail": "Function (const BIGNUM*)",
    "insertText": "DSA_get0_pub_key(const DSA *d)"
  },
  {
    "label": "DSA_get0_priv_key()",
    "kind": "Method",
    "detail": "Function (const BIGNUM*)",
    "insertText": "DSA_get0_priv_key(const DSA *d)"
  },
  {
    "label": "DSA_clear_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DSA_clear_flags(DSA *d, int flags)"
  },
  {
    "label": "DSA_test_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_test_flags(const DSA *d, int flags)"
  },
  {
    "label": "DSA_set_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DSA_set_flags(DSA *d, int flags)"
  },
  {
    "label": "DSA_get0_engine()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "DSA_get0_engine(DSA *d)"
  },
  {
    "label": "DSA_meth_new()",
    "kind": "Method",
    "detail": "Function (DSA_METHOD*)",
    "insertText": "DSA_meth_new(const char *name, int flags)"
  },
  {
    "label": "DSA_meth_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DSA_meth_free(DSA_METHOD *dsam)"
  },
  {
    "label": "DSA_meth_dup()",
    "kind": "Method",
    "detail": "Function (DSA_METHOD*)",
    "insertText": "DSA_meth_dup(const DSA_METHOD *dsam)"
  },
  {
    "label": "DSA_meth_get0_name()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "DSA_meth_get0_name(const DSA_METHOD *dsam)"
  },
  {
    "label": "DSA_meth_set1_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set1_name(DSA_METHOD *dsam, const char *name)"
  },
  {
    "label": "DSA_meth_get_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_get_flags(const DSA_METHOD *dsam)"
  },
  {
    "label": "DSA_meth_set_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set_flags(DSA_METHOD *dsam, int flags)"
  },
  {
    "label": "DSA_meth_get0_app_data()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "DSA_meth_get0_app_data(const DSA_METHOD *dsam)"
  },
  {
    "label": "DSA_meth_set0_app_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set0_app_data(DSA_METHOD *dsam, void *app_data)"
  },
  {
    "label": "DSA_SIG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DSA_SIG(*DSA_meth_get_sign(const DSA_METHOD *dsam)) (const unsigned char *, int, DSA *)"
  },
  {
    "label": "DSA_meth_set_sign()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set_sign(DSA_METHOD *dsam, DSA_SIG *(*sign) (const unsigned char *, int, DSA *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*DSA_meth_get_sign_setup(const DSA_METHOD *dsam)) (DSA *, BN_CTX *, BIGNUM **, BIGNUM **)"
  },
  {
    "label": "DSA_meth_set_sign_setup()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set_sign_setup(DSA_METHOD *dsam, int (*sign_setup) (DSA *, BN_CTX *, BIGNUM **, BIGNUM **))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*DSA_meth_get_verify(const DSA_METHOD *dsam)) (const unsigned char *, int, DSA_SIG *, DSA *)"
  },
  {
    "label": "DSA_meth_set_verify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set_verify(DSA_METHOD *dsam, int (*verify) (const unsigned char *, int, DSA_SIG *, DSA *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*DSA_meth_get_mod_exp(const DSA_METHOD *dsam)) (DSA *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *)"
  },
  {
    "label": "DSA_meth_set_mod_exp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set_mod_exp(DSA_METHOD *dsam, int (*mod_exp) (DSA *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*DSA_meth_get_bn_mod_exp(const DSA_METHOD *dsam)) (DSA *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *)"
  },
  {
    "label": "DSA_meth_set_bn_mod_exp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set_bn_mod_exp(DSA_METHOD *dsam, int (*bn_mod_exp) (DSA *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*DSA_meth_get_init(const DSA_METHOD *dsam))(DSA *)"
  },
  {
    "label": "DSA_meth_set_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set_init(DSA_METHOD *dsam, int (*init)(DSA *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*DSA_meth_get_finish(const DSA_METHOD *dsam)) (DSA *)"
  },
  {
    "label": "DSA_meth_set_finish()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set_finish(DSA_METHOD *dsam, int (*finish) (DSA *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*DSA_meth_get_paramgen(const DSA_METHOD *dsam)) (DSA *, int, const unsigned char *, int, int *, unsigned long *, BN_GENCB *)"
  },
  {
    "label": "DSA_meth_set_paramgen()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set_paramgen(DSA_METHOD *dsam, int (*paramgen) (DSA *, int, const unsigned char *, int, int *, unsigned long *, BN_GENCB *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*DSA_meth_get_keygen(const DSA_METHOD *dsam)) (DSA *)"
  },
  {
    "label": "DSA_meth_set_keygen()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DSA_meth_set_keygen(DSA_METHOD *dsam, int (*keygen) (DSA *))"
  }
]