[
  {
    "label": "FNetBitArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBitArray"
  },
  {
    "label": "FNetBitArrayView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBitArrayView"
  },
  {
    "label": "FIrisFastArraySerializerPrivateAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIrisFastArraySerializerPrivateAccessor"
  },
  {
    "label": "TIrisFastArrayEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TIrisFastArrayEditor"
  },
  {
    "label": "GetChangeMask()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Iris / ReplicationState / IrisFastArraySerializer . h \" namespace UE::Net { class FNetBitArray ; class FNetBitArrayView ; } namespace UE::Net { namespace Private { struct FIrisFastArraySerializerPrivateAccessor { FNetBitArrayView)",
    "insertText": "GetChangeMask(FIrisFastArraySerializer& Array)"
  },
  {
    "label": "GetConditionalChangeMask()",
    "kind": "Method",
    "detail": "Function (FNetBitArrayView)",
    "insertText": "GetConditionalChangeMask(FIrisFastArraySerializer& Array)"
  },
  {
    "label": "GetReplicationStateHeader()",
    "kind": "Method",
    "detail": "Function (FReplicationStateHeader&)",
    "insertText": "GetReplicationStateHeader(FIrisFastArraySerializer& Array)"
  },
  {
    "label": "MarkAllArrayItemsDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAllArrayItemsDirty(FIrisFastArraySerializer& Array, uint32 StartingIndex = 0U)"
  },
  {
    "label": "MarkArrayItemDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkArrayItemDirty(FIrisFastArraySerializer& Array, int32 Index)"
  },
  {
    "label": "TIrisFastArrayEditor()",
    "kind": "Method",
    "detail": "Function (} ; } template<FastArrayType> class TIrisFastArrayEditor { public : typedef FastArrayType::ItemArrayType FastArrayItemArrayType ; typedef FastArrayItemArrayType::ElementType FastArrayItemType ; using FIrisFastArraySerializerPrivateAccessor = Private::FIrisFastArraySerializerPrivateAccessor ;)",
    "insertText": "TIrisFastArrayEditor(FastArrayType& InFastArray) : FastArray(InFastArray)"
  },
  {
    "label": "MarkItemDirty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MarkItemDirty(FastArrayItemType& Item)"
  },
  {
    "label": "MarkArrayDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkArrayDirty()"
  },
  {
    "label": "AddLocal()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "AddLocal(const FastArrayItemType& ItemEntry)"
  },
  {
    "label": "GetItemArray()",
    "kind": "Method",
    "detail": "Function (FastArray .)",
    "insertText": "GetItemArray().Add(ItemEntry)"
  },
  {
    "label": "EditLocal()",
    "kind": "Method",
    "detail": "Function (} FastArrayItemType&)",
    "insertText": "EditLocal(int32 ItemIdx)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Add(const FastArrayItemType& ItemEntry)"
  },
  {
    "label": "Edit()",
    "kind": "Method",
    "detail": "Function (FastArrayItemType&)",
    "insertText": "Edit(int32 ItemIdx)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FastArrayItemType&)",
    "insertText": "operator(int32 ItemIdx)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Remove(int32 ItemIdx)"
  },
  {
    "label": "RemoveAtSwap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAtSwap(int32 ItemIdx)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Num()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Empty()"
  },
  {
    "label": "GetReplicationStateHeader()",
    "kind": "Method",
    "detail": "Function (const FReplicationStateHeader& Header =)",
    "insertText": "GetReplicationStateHeader(FastArray)"
  },
  {
    "label": "MarkItemDirty()",
    "kind": "Method",
    "detail": "Function (FastArray .)",
    "insertText": "MarkItemDirty(Item)"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (const uint64 Index64 =& Item - Array .)",
    "insertText": "GetData()"
  },
  {
    "label": "int32()",
    "kind": "Method",
    "detail": "Function (const int32 Index = static_cast<)",
    "insertText": "int32(Index64)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (const bool bIsWritingOnClient = false ;)",
    "insertText": "if(!FastArray.template ShouldWriteFastArrayItem<FastArrayItemType, FastArrayType>(ArrayItem, bIsWritingOnClient))"
  },
  {
    "label": "MarkItemDirty()",
    "kind": "Method",
    "detail": "Function (FastArray .)",
    "insertText": "MarkItemDirty(ArrayItem)"
  },
  {
    "label": "MarkArrayItemDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkArrayItemDirty(FastArray, static_cast<int32>(ItemIndex64))"
  },
  {
    "label": "MarkArrayItemDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkArrayItemDirty(FastArray, Index)"
  },
  {
    "label": "GetItemArray()",
    "kind": "Method",
    "detail": "Function (FastArrayItemArrayType& ItemArray = FastArray .)",
    "insertText": "GetItemArray()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (int32 Idx = ItemArray .)",
    "insertText": "Add(ItemEntry)"
  },
  {
    "label": "MarkItemDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkItemDirty(ItemArray.GetData()[Idx])"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (ItemArray .)",
    "insertText": "RemoveAt(ItemIdx)"
  },
  {
    "label": "MarkAllArrayItemsDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAllArrayItemsDirty(FastArray, ItemIdx)"
  },
  {
    "label": "RemoveAtSwap()",
    "kind": "Method",
    "detail": "Function (ItemArray .)",
    "insertText": "RemoveAtSwap(ItemIdx)"
  },
  {
    "label": "MarkItemDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkItemDirty(ItemIdx)"
  },
  {
    "label": "GetItemArray()",
    "kind": "Method",
    "detail": "Function (FastArray .)",
    "insertText": "GetItemArray().Empty()"
  }
]