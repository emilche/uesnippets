[
  {
    "label": "SMultiLineEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableTextBox"
  },
  {
    "label": "FOutputLogHistory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputLogHistory"
  },
  {
    "label": "SOutputLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOutputLog"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "FOutputLogCreationParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOutputLogCreationParams"
  },
  {
    "label": "FOutputLogFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOutputLogFilter"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FDebugConsoleDelegates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugConsoleDelegates"
  },
  {
    "label": "FOutputLogModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputLogModule"
  },
  {
    "label": "FOutputFilterParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOutputFilterParams"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "MakeOutputLogDrawerWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeOutputLogDrawerWidget(const FSimpleDelegate& OnCloseConsole)"
  },
  {
    "label": "MakeOutputLogWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeOutputLogWidget(const FOutputLogCreationParams& Params)"
  },
  {
    "label": "ToggleDebugConsoleForWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleDebugConsoleForWindow(const TSharedRef<SWindow>& Window, const EDebugConsoleStyle::Type InStyle, const FDebugConsoleDelegates& DebugConsoleDelegates)"
  },
  {
    "label": "CloseDebugConsole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseDebugConsole()"
  },
  {
    "label": "ClearOnPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearOnPIE(const bool bIsSimulating)"
  },
  {
    "label": "FocusOutputLogConsoleBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FocusOutputLogConsoleBox(const TSharedRef<SWidget> OutputLogToFocus)"
  },
  {
    "label": "SuspendGlobalLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SuspendGlobalLog()"
  },
  {
    "label": "ResumeGlobalLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeGlobalLog()"
  },
  {
    "label": "FocusOutputLog()",
    "kind": "Method",
    "detail": "Function (OUTPUTLOG_API)",
    "insertText": "FocusOutputLog()"
  },
  {
    "label": "UpdateOutputLogFilter()",
    "kind": "Method",
    "detail": "Function (OUTPUTLOG_API)",
    "insertText": "UpdateOutputLogFilter(const TArray<FName>& CategoriesToShow, const FOutputFilterParams& InParams)"
  },
  {
    "label": "SpawnOutputLogTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnOutputLogTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnOutputLogTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOutputLogTabClosed(TSharedRef<SDockTab> Tab)"
  },
  {
    "label": "SpawnDeviceOutputLogTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnDeviceOutputLogTab(const FSpawnTabArgs& Args)"
  }
]