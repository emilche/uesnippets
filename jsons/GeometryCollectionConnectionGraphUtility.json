[
  {
    "label": "FGeometryCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollection"
  },
  {
    "label": "FGeometryCollectionConnectionGraphGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionConnectionGraphGenerator"
  },
  {
    "label": "FVoronoiNeighbors",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVoronoiNeighbors"
  },
  {
    "label": "UpdateConnectivityGraph()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GeometryCollection / ManagedArrayCollection . h \" # include \" ChaosSolverConfiguration . h \" class FGeometryCollection ; class FGeometryCollectionConnectionGraphGenerator { public : void)",
    "insertText": "UpdateConnectivityGraph(FGeometryCollection& Collection, int32 ClusterTransformIndex, EClusterUnionMethod ConnectionMethod)"
  },
  {
    "label": "ComputeConnectivityGraph()",
    "kind": "Method",
    "detail": "Function (private : using FConnections = TSet<int32> ; using FConnectionGraph = TArray<FConnections> ; struct FVoronoiNeighbors { TArray<FVector> Points ; TArray<TArray<int>> Neighbors ; } ; FConnectionGraph)",
    "insertText": "ComputeConnectivityGraph(const FGeometryCollection& Collection, int32 ClusterTransformIndex, EClusterUnionMethod ConnectionMethod)"
  },
  {
    "label": "ConnectChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConnectChildren(FConnectionGraph& Graph, const TArray<int32>& Children, int32 ChildIndexA, int32 ChildIndexB)"
  },
  {
    "label": "ComputeVoronoiNeighbors()",
    "kind": "Method",
    "detail": "Function (FVoronoiNeighbors)",
    "insertText": "ComputeVoronoiNeighbors(const FGeometryCollection& Collection, int32 ClusterTransformIndex)"
  },
  {
    "label": "ComputeConnectivityGraphUsingDelaunayTriangulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeConnectivityGraphUsingDelaunayTriangulation(FConnectionGraph& Graph, const FGeometryCollection& Collection, int32 ClusterTransformIndex)"
  },
  {
    "label": "FixConnectivityGraphUsingDelaunayTriangulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixConnectivityGraphUsingDelaunayTriangulation(FConnectionGraph& Graph, const FGeometryCollection& Collection, int32 ClusterTransformIndex)"
  },
  {
    "label": "UpdateConnectivityGraphUsingPointImplicit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateConnectivityGraphUsingPointImplicit(FConnectionGraph& Graph, const FGeometryCollection& Collection, int32 ClusterTransformIndex)"
  },
  {
    "label": "CommitToCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitToCollection(FConnectionGraph& Graph, FGeometryCollection& Collection, int32 ClusterTransformIndex)"
  }
]