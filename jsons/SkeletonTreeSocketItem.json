[
  {
    "label": "FSkeletonTreeSocketItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreeSocketItem"
  },
  {
    "label": "ISkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTree"
  },
  {
    "label": "SKELETON_TREE_ITEM_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Styling / SlateColor . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" ISkeletonTreeItem . h \" # include \" SkeletonTreeItem . h \" # include \" IEditableSkeleton . h \" # include \" Widgets / Input / SEditableText . h \" # include \" Preferences / PersonaOptions . h \" # include \" Engine / SkeletalMeshSocket . h \" class FSkeletonTreeSocketItem : public FSkeletonTreeItem { public :)",
    "insertText": "SKELETON_TREE_ITEM_TYPE(FSkeletonTreeSocketItem, FSkeletonTreeItem) FSkeletonTreeSocketItem(USkeletalMeshSocket* InSocket, ESocketParentType InParentType, bool bInIsCustomized, const TSharedRef<class ISkeletonTree>& InSkeletonTree) : FSkeletonTreeItem(InSkeletonTree) , Socket(InSocket) , ParentType(InParentType) , bIsCustomized(bInIsCustomized) , bInlineEditorExpanded(false)"
  },
  {
    "label": "FSkeletonTreeSocketItem()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSkeletonTreeSocketItem()"
  },
  {
    "label": "GenerateWidgetForNameColumn()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GenerateWidgetForNameColumn(TSharedPtr< SHorizontalBox > Box, const TAttribute<FText>& FilterText, FIsSelected InIsSelected)"
  },
  {
    "label": "GenerateWidgetForDataColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForDataColumn(const FName& DataColumnName, FIsSelected InIsSelected)"
  },
  {
    "label": "GenerateInlineEditWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateInlineEditWidget(const TAttribute<FText>& FilterText, FIsSelected InIsSelected)"
  },
  {
    "label": "HasInlineEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasInlineEditor()"
  },
  {
    "label": "ToggleInlineEditorExpansion()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ToggleInlineEditorExpansion()"
  },
  {
    "label": "IsInlineEditorExpanded()",
    "kind": "Method",
    "detail": "Function (bInlineEditorExpanded = ! bInlineEditorExpanded ; } bool)",
    "insertText": "IsInlineEditorExpanded()"
  },
  {
    "label": "OnItemDoubleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemDoubleClicked()"
  },
  {
    "label": "OnDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragDetected(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObject()"
  },
  {
    "label": "GetSocket()",
    "kind": "Method",
    "detail": "Function (USkeletalMeshSocket*)",
    "insertText": "GetSocket()"
  },
  {
    "label": "OnCommitSocketName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommitSocketName(const FText& InText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "GetSocketToolTip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSocketToolTip()"
  },
  {
    "label": "GetTextColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetTextColor()"
  },
  {
    "label": "GetSocketNameAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSocketNameAsText()"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (} private : USkeletalMeshSocket* Socket ; ESocketParentType ParentType ; bool bIsCustomized ; bool bInlineEditorExpanded ;)",
    "insertText": "DECLARE_DELEGATE(FOnRenameRequested)"
  }
]