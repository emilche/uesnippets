[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "ITypedTableView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITypedTableView"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Widgets / SWidget . h \" # include \" ITypedTableView . generated . h \" class ITableRow ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "Private_UsesSelectorFocus()",
    "kind": "Method",
    "detail": "Function (enum Type : int { List,Tile,Tree } ; } template<ItemType> class ITypedTableView { public : bool)",
    "insertText": "Private_UsesSelectorFocus()"
  },
  {
    "label": "Private_HasSelectorFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Private_HasSelectorFocus(const ItemType& TheItem)"
  },
  {
    "label": "Private_IsItemSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Private_IsItemSelected(const ItemType& TheItem)"
  },
  {
    "label": "Private_IsItemSelectableOrNavigable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Private_IsItemSelectableOrNavigable(const ItemType& TheItem)"
  },
  {
    "label": "Private_IsItemHighlighted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Private_IsItemHighlighted(const ItemType& TheItem)"
  },
  {
    "label": "Private_SetItemSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Private_SetItemSelection(ItemType TheItem, bool bShouldBeSelected, bool bWasUserDirected = false)"
  },
  {
    "label": "Private_ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Private_ClearSelection()"
  },
  {
    "label": "Private_SelectRangeFromCurrentTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Private_SelectRangeFromCurrentTo(ItemType SelectorItem)"
  },
  {
    "label": "Private_SignalSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Private_SignalSelectionChanged(ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "Private_ItemFromWidget()",
    "kind": "Method",
    "detail": "Function (const TObjectPtrWrapTypeOf<ItemType>*)",
    "insertText": "Private_ItemFromWidget(const ITableRow* TheWidget)"
  },
  {
    "label": "Private_SetItemExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Private_SetItemExpansion(ItemType TheItem, bool bShouldBeExpanded)"
  },
  {
    "label": "Private_OnExpanderArrowShiftClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Private_OnExpanderArrowShiftClicked(ItemType TheItem, bool bShouldBeExpanded)"
  },
  {
    "label": "Private_IsItemExpanded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Private_IsItemExpanded(const ItemType& TheItem)"
  },
  {
    "label": "Private_DoesItemHaveChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Private_DoesItemHaveChildren(int32 ItemIndexInList)"
  },
  {
    "label": "Private_GetNumSelectedItems()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Private_GetNumSelectedItems()"
  },
  {
    "label": "Private_SetItemHighlighted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Private_SetItemHighlighted(ItemType TheItem, bool bShouldBeHighlighted)"
  },
  {
    "label": "Private_ClearHighlightedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Private_ClearHighlightedItems()"
  },
  {
    "label": "Private_GetNestingDepth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Private_GetNestingDepth(int32 ItemIndexInList)"
  },
  {
    "label": "Private_GetWiresNeededByDepth()",
    "kind": "Method",
    "detail": "Function (const TBitArray<>&)",
    "insertText": "Private_GetWiresNeededByDepth(int32 ItemIndexInList)"
  },
  {
    "label": "Private_IsLastChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Private_IsLastChild(int32 ItemIndexInList)"
  },
  {
    "label": "Private_OnItemRightClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Private_OnItemRightClicked(ItemType TheItem, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "Private_OnItemClicked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Private_OnItemClicked(ItemType TheItem)"
  },
  {
    "label": "Private_OnItemDoubleClicked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Private_OnItemDoubleClicked(ItemType TheItem)"
  },
  {
    "label": "Private_GetSelectionMode()",
    "kind": "Method",
    "detail": "Function (ESelectionMode::Type)",
    "insertText": "Private_GetSelectionMode()"
  },
  {
    "label": "Private_GetOrientation()",
    "kind": "Method",
    "detail": "Function (EOrientation)",
    "insertText": "Private_GetOrientation()"
  },
  {
    "label": "Private_IsPendingRefresh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Private_IsPendingRefresh()"
  },
  {
    "label": "GetSelectedItems()",
    "kind": "Method",
    "detail": "Function (TArray<ItemType>)",
    "insertText": "GetSelectedItems()"
  },
  {
    "label": "WidgetFromItem()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITableRow>)",
    "insertText": "WidgetFromItem(const ItemType& InItem)"
  },
  {
    "label": "GetTableViewMode()",
    "kind": "Method",
    "detail": "Function (ETableViewMode::Type)",
    "insertText": "GetTableViewMode()"
  },
  {
    "label": "AsWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "AsWidget()"
  }
]