[
  {
    "label": "load_u8_8x4()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_DSP_ARM_VPX_CONVOLVE8_NEON_H_ # define VPX_VPX_DSP_ARM_VPX_CONVOLVE8_NEON_H_ # include<arm_neon . h> # include \" . / vpx_config . h \" # include \" . / vpx_dsp_rtcd . h \" void)",
    "insertText": "load_u8_8x4(const uint8_t *s, const ptrdiff_t p, uint8x8_t *const s0, uint8x8_t *const s1, uint8x8_t *const s2, uint8x8_t *const s3)"
  },
  {
    "label": "vld1_u8()",
    "kind": "Method",
    "detail": "Function (* s0 =)",
    "insertText": "vld1_u8(s)"
  },
  {
    "label": "load_u8_8x8()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "load_u8_8x8(const uint8_t *s, const ptrdiff_t p, uint8x8_t *const s0, uint8x8_t *const s1, uint8x8_t *const s2, uint8x8_t *const s3, uint8x8_t *const s4, uint8x8_t *const s5, uint8x8_t *const s6, uint8x8_t *const s7)"
  },
  {
    "label": "load_u8_16x8()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "load_u8_16x8(const uint8_t *s, const ptrdiff_t p, uint8x16_t *const s0, uint8x16_t *const s1, uint8x16_t *const s2, uint8x16_t *const s3, uint8x16_t *const s4, uint8x16_t *const s5, uint8x16_t *const s6, uint8x16_t *const s7)"
  },
  {
    "label": "vld1q_u8()",
    "kind": "Method",
    "detail": "Function (* s0 =)",
    "insertText": "vld1q_u8(s)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} # if)",
    "insertText": "defined(__aarch64__) && defined(__ARM_FEATURE_DOTPROD) static INLINE int32x4_t convolve8_4_dot_partial(const int8x16_t samples_lo, const int8x16_t samples_hi, const int32x4_t correction, const int8x8_t filters)"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (int32x4_t sum ; sum =)",
    "insertText": "vdotq_lane_s32(correction, samples_lo, filters, 0)"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vdotq_lane_s32(sum, samples_hi, filters, 1)"
  },
  {
    "label": "vreinterpretq_s8_u8()",
    "kind": "Method",
    "detail": "Function (int8x16_t clamped_samples,permuted_samples [ 2 ] ; int32x4_t sum ; clamped_samples =)",
    "insertText": "vreinterpretq_s8_u8(vsubq_u8(samples, range_limit))"
  },
  {
    "label": "vqtbl1q_s8()",
    "kind": "Method",
    "detail": "Function (permuted_samples [ 0 ] =)",
    "insertText": "vqtbl1q_s8(clamped_samples, permute_tbl.val[0])"
  },
  {
    "label": "vqtbl1q_s8()",
    "kind": "Method",
    "detail": "Function (permuted_samples [ 1 ] =)",
    "insertText": "vqtbl1q_s8(clamped_samples, permute_tbl.val[1])"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vdotq_lane_s32(correction, permuted_samples[0], filters, 0)"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vdotq_lane_s32(sum, permuted_samples[1], filters, 1)"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (int32x4_t sum0,sum1 ; int16x8_t sum ; sum0 =)",
    "insertText": "vdotq_lane_s32(correction, samples0_lo, filters, 0)"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (sum0 =)",
    "insertText": "vdotq_lane_s32(sum0, samples0_hi, filters, 1)"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (sum1 =)",
    "insertText": "vdotq_lane_s32(correction, samples1_lo, filters, 0)"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (sum1 =)",
    "insertText": "vdotq_lane_s32(sum1, samples1_hi, filters, 1)"
  },
  {
    "label": "vcombine_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vcombine_s16(vqmovn_s32(sum0), vqmovn_s32(sum1))"
  },
  {
    "label": "convolve8_8_dot()",
    "kind": "Method",
    "detail": "Function (} uint8x8_t)",
    "insertText": "convolve8_8_dot(uint8x16_t samples, const int8x8_t filters, const int32x4_t correction, const uint8x16_t range_limit, const uint8x16x3_t permute_tbl)"
  },
  {
    "label": "vqtbl1q_s8()",
    "kind": "Method",
    "detail": "Function (permuted_samples [ 2 ] =)",
    "insertText": "vqtbl1q_s8(clamped_samples, permute_tbl.val[2])"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (sum0 =)",
    "insertText": "vdotq_lane_s32(sum0, permuted_samples[1], filters, 1)"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (sum1 =)",
    "insertText": "vdotq_lane_s32(correction, permuted_samples[1], filters, 0)"
  },
  {
    "label": "vdotq_lane_s32()",
    "kind": "Method",
    "detail": "Function (sum1 =)",
    "insertText": "vdotq_lane_s32(sum1, permuted_samples[2], filters, 1)"
  },
  {
    "label": "convolve8_4()",
    "kind": "Method",
    "detail": "Function (} # endif int16x4_t)",
    "insertText": "convolve8_4(const int16x4_t s0, const int16x4_t s1, const int16x4_t s2, const int16x4_t s3, const int16x4_t s4, const int16x4_t s5, const int16x4_t s6, const int16x4_t s7, const int16x8_t filters, const int16x4_t filter3, const int16x4_t filter4)"
  },
  {
    "label": "vget_low_s16()",
    "kind": "Method",
    "detail": "Function (const int16x4_t filters_lo =)",
    "insertText": "vget_low_s16(filters)"
  },
  {
    "label": "vget_high_s16()",
    "kind": "Method",
    "detail": "Function (const int16x4_t filters_hi =)",
    "insertText": "vget_high_s16(filters)"
  },
  {
    "label": "vmul_lane_s16()",
    "kind": "Method",
    "detail": "Function (int16x4_t sum ; sum =)",
    "insertText": "vmul_lane_s16(s0, filters_lo, 0)"
  },
  {
    "label": "vmla_lane_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vmla_lane_s16(sum, s1, filters_lo, 1)"
  },
  {
    "label": "vmla_lane_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vmla_lane_s16(sum, s2, filters_lo, 2)"
  },
  {
    "label": "vmla_lane_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vmla_lane_s16(sum, s5, filters_hi, 1)"
  },
  {
    "label": "vmla_lane_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vmla_lane_s16(sum, s6, filters_hi, 2)"
  },
  {
    "label": "vmla_lane_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vmla_lane_s16(sum, s7, filters_hi, 3)"
  },
  {
    "label": "vqadd_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vqadd_s16(sum, vmul_s16(s3, filter3))"
  },
  {
    "label": "vqadd_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vqadd_s16(sum, vmul_s16(s4, filter4))"
  },
  {
    "label": "vmulq_lane_s16()",
    "kind": "Method",
    "detail": "Function (int16x8_t sum ; sum =)",
    "insertText": "vmulq_lane_s16(s0, filters_lo, 0)"
  },
  {
    "label": "vmlaq_lane_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vmlaq_lane_s16(sum, s1, filters_lo, 1)"
  },
  {
    "label": "vmlaq_lane_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vmlaq_lane_s16(sum, s2, filters_lo, 2)"
  },
  {
    "label": "vmlaq_lane_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vmlaq_lane_s16(sum, s5, filters_hi, 1)"
  },
  {
    "label": "vmlaq_lane_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vmlaq_lane_s16(sum, s6, filters_hi, 2)"
  },
  {
    "label": "vmlaq_lane_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vmlaq_lane_s16(sum, s7, filters_hi, 3)"
  },
  {
    "label": "vqaddq_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vqaddq_s16(sum, vmulq_s16(s3, filter3))"
  },
  {
    "label": "vqaddq_s16()",
    "kind": "Method",
    "detail": "Function (sum =)",
    "insertText": "vqaddq_s16(sum, vmulq_s16(s4, filter4))"
  },
  {
    "label": "scale_filter_8()",
    "kind": "Method",
    "detail": "Function (} uint8x8_t)",
    "insertText": "scale_filter_8(const uint8x8_t *const s, const int16x8_t filters)"
  },
  {
    "label": "vdupq_lane_s16()",
    "kind": "Method",
    "detail": "Function (const int16x8_t filter3 =)",
    "insertText": "vdupq_lane_s16(vget_low_s16(filters), 3)"
  },
  {
    "label": "vdupq_lane_s16()",
    "kind": "Method",
    "detail": "Function (const int16x8_t filter4 =)",
    "insertText": "vdupq_lane_s16(vget_high_s16(filters), 0)"
  },
  {
    "label": "vreinterpretq_s16_u16()",
    "kind": "Method",
    "detail": "Function (int16x8_t ss [ 8 ] ; ss [ 0 ] =)",
    "insertText": "vreinterpretq_s16_u16(vmovl_u8(s[0]))"
  },
  {
    "label": "vreinterpretq_s16_u16()",
    "kind": "Method",
    "detail": "Function (ss [ 1 ] =)",
    "insertText": "vreinterpretq_s16_u16(vmovl_u8(s[1]))"
  },
  {
    "label": "vreinterpretq_s16_u16()",
    "kind": "Method",
    "detail": "Function (ss [ 2 ] =)",
    "insertText": "vreinterpretq_s16_u16(vmovl_u8(s[2]))"
  },
  {
    "label": "vreinterpretq_s16_u16()",
    "kind": "Method",
    "detail": "Function (ss [ 3 ] =)",
    "insertText": "vreinterpretq_s16_u16(vmovl_u8(s[3]))"
  },
  {
    "label": "vreinterpretq_s16_u16()",
    "kind": "Method",
    "detail": "Function (ss [ 4 ] =)",
    "insertText": "vreinterpretq_s16_u16(vmovl_u8(s[4]))"
  },
  {
    "label": "vreinterpretq_s16_u16()",
    "kind": "Method",
    "detail": "Function (ss [ 5 ] =)",
    "insertText": "vreinterpretq_s16_u16(vmovl_u8(s[5]))"
  },
  {
    "label": "vreinterpretq_s16_u16()",
    "kind": "Method",
    "detail": "Function (ss [ 6 ] =)",
    "insertText": "vreinterpretq_s16_u16(vmovl_u8(s[6]))"
  },
  {
    "label": "vreinterpretq_s16_u16()",
    "kind": "Method",
    "detail": "Function (ss [ 7 ] =)",
    "insertText": "vreinterpretq_s16_u16(vmovl_u8(s[7]))"
  }
]