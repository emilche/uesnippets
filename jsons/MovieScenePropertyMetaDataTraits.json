[
  {
    "label": "FComponentRegistry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentRegistry"
  },
  {
    "label": "TPropertyMetaDataComponentsImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPropertyMetaDataComponentsImpl"
  },
  {
    "label": "TPropertyMetaDataComponents",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPropertyMetaDataComponents"
  },
  {
    "label": "GetTypes()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EntitySystem / MovieScenePropertyTraits . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" namespace UE { namespace MovieScene { struct FComponentRegistry ; template<. . . MetaDataTypes,int . . . Indices> struct TPropertyMetaDataComponentsImpl<TIntegerSequence<int,Indices . . .>,TPropertyMetaData<MetaDataTypes . . .>> { template<T> using MakeTCHARPtr = const TCHAR* ; TArrayView<const FComponentTypeID>)",
    "insertText": "GetTypes()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (} template<int Index> auto)",
    "insertText": "GetType()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Initialize(FComponentRegistry* ComponentRegistry, MakeTCHARPtr<MetaDataTypes>... DebugNames)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (private : int32 SIZE =)",
    "insertText": "sizeof(MetaDataTypes)"
  }
]