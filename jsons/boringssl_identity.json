[
  {
    "label": "BoringSSLIdentity",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BoringSSLIdentity"
  },
  {
    "label": "CreateWithExpiration()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<BoringSSLIdentity>)",
    "insertText": "CreateWithExpiration(\n      absl::string_view common_name,\n      const KeyParams& key_params,\n      time_t certificate_lifetime)"
  },
  {
    "label": "CreateForTest()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<BoringSSLIdentity>)",
    "insertText": "CreateForTest(\n      const SSLIdentityParams& params)"
  },
  {
    "label": "CreateFromPEMStrings()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SSLIdentity>)",
    "insertText": "CreateFromPEMStrings(\n      absl::string_view private_key,\n      absl::string_view certificate)"
  },
  {
    "label": "CreateFromPEMChainStrings()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SSLIdentity>)",
    "insertText": "CreateFromPEMChainStrings(\n      absl::string_view private_key,\n      absl::string_view certificate_chain)"
  },
  {
    "label": "ConfigureIdentity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConfigureIdentity(SSL_CTX* ctx)"
  },
  {
    "label": "BoringSSLIdentity()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "BoringSSLIdentity(std::unique_ptr<OpenSSLKeyPair> key_pair,\n                    std::unique_ptr<BoringSSLCertificate> certificate)"
  },
  {
    "label": "CreateInternal()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<BoringSSLIdentity>)",
    "insertText": "CreateInternal(\n      const SSLIdentityParams& params)"
  }
]