[
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "USimpleConstructionScript",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USimpleConstructionScript"
  },
  {
    "label": "UReimportFbxSceneFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UReimportFbxSceneFactory"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "FSpecializeComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpecializeComponentData"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" AssetRegistry / AssetData . h \" # include \" EditorReimportHandler . h \" # include \" Factories / FbxSceneImportFactory . h \" # include \" Camera / CameraTypes . h \" # include \" ReimportFbxSceneFactory . generated . h \" class UActorComponent ; class UBlueprint ; class USceneComponent ; class USimpleConstructionScript ;)",
    "insertText": "UCLASS(BlueprintType)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() virtual bool CanReimport( UObject* Obj, TArray<FString>& OutFilenames)"
  },
  {
    "label": "SetReimportPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReimportPaths(UObject* Obj, const TArray<FString>& NewReimportPaths)"
  },
  {
    "label": "Reimport()",
    "kind": "Method",
    "detail": "Function (EReimportResult::Type)",
    "insertText": "Reimport(UObject* Obj)"
  },
  {
    "label": "GetPriority()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPriority()"
  },
  {
    "label": "FactoryCanImport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FactoryCanImport(const FString& Filename)"
  },
  {
    "label": "ReimportStaticMesh()",
    "kind": "Method",
    "detail": "Function (private : EReimportResult::Type)",
    "insertText": "ReimportStaticMesh(void* VoidFbxImporter, TSharedPtr<FFbxMeshInfo> MeshInfo)"
  },
  {
    "label": "ReimportSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (EReimportResult::Type)",
    "insertText": "ReimportSkeletalMesh(void* VoidFbxImporter, TSharedPtr<FFbxMeshInfo> MeshInfo)"
  },
  {
    "label": "ImportStaticMesh()",
    "kind": "Method",
    "detail": "Function (EReimportResult::Type)",
    "insertText": "ImportStaticMesh(void* VoidFbxImporter, TSharedPtr<FFbxMeshInfo> MeshInfo, TSharedPtr<FFbxSceneInfo> SceneInfoPtr)"
  },
  {
    "label": "ImportSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (EReimportResult::Type)",
    "insertText": "ImportSkeletalMesh(void* VoidRootNodeToImport, void* VoidFbxImporter, TSharedPtr<FFbxMeshInfo> MeshInfo, TSharedPtr<FFbxSceneInfo> SceneInfoPtr)"
  },
  {
    "label": "UpdateOriginalBluePrint()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "UpdateOriginalBluePrint(FString &BluePrintFullName, void* VoidNodeStatusMapPtr, TSharedPtr<FFbxSceneInfo> SceneInfoPtr, TSharedPtr<FFbxSceneInfo> SceneInfoOriginalPtr, TArray<FAssetData> &AssetDataToDelete)"
  },
  {
    "label": "RemoveChildNodeRecursively()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildNodeRecursively(USimpleConstructionScript* SimpleConstructionScript, class USCS_Node* ScsNode)"
  },
  {
    "label": "StoreImportedSpecializeComponentData()",
    "kind": "Method",
    "detail": "Function (struct FSpecializeComponentData { FTransform NodeTransform ; FColor LightColor ; float LightIntensity ; bool CastShadow ; FColor ShadowColor ; float InnerAngle ; float OuterAngle ; float FarAttenuation ; ECameraProjectionMode::Type ProjectionMode ; float AspectRatio ; float OrthoNearPlane ; float OrthoFarPlane ; float OrthoWidth ; } ; void)",
    "insertText": "StoreImportedSpecializeComponentData(USceneComponent *SceneComponent, FSpecializeComponentData &SpecializeComponentData, UClass *CurrentNodeComponentClass)"
  },
  {
    "label": "RestoreImportedSpecializeComponentData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreImportedSpecializeComponentData(USceneComponent *SceneComponent, const FSpecializeComponentData &SpecializeComponentData, UClass *CurrentNodeComponentClass)"
  },
  {
    "label": "RecursivelySetComponentProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecursivelySetComponentProperties(class USCS_Node* CurrentNode, const TArray<UActorComponent*>& ActorComponents, TArray<FString> ParentNames, bool IsDefaultSceneNode)"
  }
]