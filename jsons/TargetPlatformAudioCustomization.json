[
  {
    "label": "AUDIOSETTINGSEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUDIOSETTINGSEDITOR_API"
  },
  {
    "label": "FAudioPluginWidgetManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" PropertyHandle . h \" # include \" DetailLayoutBuilder . h \" # include \" AudioPluginUtilities . h \" class FAudioPluginWidgetManager { public :)",
    "insertText": "FAudioPluginWidgetManager()"
  },
  {
    "label": "BuildAudioCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildAudioCategory(IDetailLayoutBuilder& DetailLayout, const FString& PlatformName, const UStruct* ClassOuterMost = nullptr)"
  },
  {
    "label": "MakeAudioPluginSelectorWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAudioPluginSelectorWidget(const TSharedPtr<IPropertyHandle>& PropertyHandle, EAudioPlugin AudioPluginType, const FString& PlatformName)"
  },
  {
    "label": "OnPluginSelected()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnPluginSelected(FString PluginName, TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "OnPluginTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPluginTextCommitted(const FText& InText, ETextCommit::Type CommitType, EAudioPlugin AudioPluginType, TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "OnGetPluginText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnGetPluginText(EAudioPlugin AudioPluginType)"
  }
]