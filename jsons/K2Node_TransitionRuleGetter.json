[
  {
    "label": "FBlueprintActionDatabaseRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionDatabaseRegistrar"
  },
  {
    "label": "FBlueprintActionFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionFilter"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "UAnimStateNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimStateNode"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UEdGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphSchema"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "UK2Node_TransitionRuleGetter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_TransitionRuleGetter"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / EnumAsByte . h \" # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" Internationalization / Text . h \" # include \" K2Node . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" K2Node_TransitionRuleGetter . generated . h \" class FBlueprintActionDatabaseRegistrar ; class FBlueprintActionFilter ; class UAnimBlueprint ; class UAnimGraphNode_Base ; class UAnimStateNode ; class UEdGraphPin ; class UEdGraphSchema ; class UObject ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (enum Type : int { AnimationAsset_GetCurrentTime,AnimationAsset_GetLength,AnimationAsset_GetCurrentTimeFraction,AnimationAsset_GetTimeFromEnd,AnimationAsset_GetTimeFromEndFraction,CurrentState_ElapsedTime,CurrentState_GetBlendWeight,CurrentTransitionDuration,ArbitraryState_GetBlendWeight } ; })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "AllocateDefaultPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateDefaultPins()"
  },
  {
    "label": "PreloadRequiredAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreloadRequiredAssets()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "ShowPaletteIconOnNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShowPaletteIconOnNode()"
  },
  {
    "label": "IsActionFilteredOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActionFilteredOut(FBlueprintActionFilter const& Filter)"
  },
  {
    "label": "GetMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "IsNodePure()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodePure()"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFriendlyName(ETransitionGetter::Type TypeID)"
  },
  {
    "label": "GetStateSpecificAnimGraphSchemaMenuActions()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "GetStateSpecificAnimGraphSchemaMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar, const UAnimBlueprint* AnimBlueprint, UAnimStateNode* StateNode)"
  },
  {
    "label": "GetStateSpecificAnimTransitionSchemaMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStateSpecificAnimTransitionSchemaMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar, const UAnimBlueprint* AnimBlueprint, UAnimStateNode* StateNode)"
  },
  {
    "label": "GetStateSpecificMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStateSpecificMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar, const UAnimBlueprint* AnimBlueprint)"
  },
  {
    "label": "GetNonStateSpecificMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNonStateSpecificMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  }
]