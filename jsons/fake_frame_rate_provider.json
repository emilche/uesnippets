[
  {
    "label": "MockVideoStreamEncoderObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockVideoStreamEncoderObserver"
  },
  {
    "label": "FakeFrameRateProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeFrameRateProvider"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef CALL_ADAPTATION_TEST_FAKE_FRAME_RATE_PROVIDER_H_ # define CALL_ADAPTATION_TEST_FAKE_FRAME_RATE_PROVIDER_H_ # include<string> # include<vector> # include \" test / gmock . h \" # include \" video / video_stream_encoder_observer . h \" namespace webrtc { class MockVideoStreamEncoderObserver : public VideoStreamEncoderObserver { public :)",
    "insertText": "MOCK_METHOD(void, OnEncodedFrameTimeMeasured, (int, int), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnIncomingFrame, (int, int), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnSendEncodedImage, (const EncodedImage&, const CodecSpecificInfo*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnEncoderImplementationChanged, (EncoderImplementation), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnFrameDropped, (DropReason), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnEncoderReconfigured, (const VideoEncoderConfig&, const std::vector<VideoStream>&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnAdaptationChanged, (VideoAdaptationReason, const VideoAdaptationCounters&, const VideoAdaptationCounters&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, ClearAdaptationStats, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, UpdateAdaptationSettings, (AdaptationSettings, AdaptationSettings), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnMinPixelLimitReached, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnInitialQualityResolutionAdaptDown, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnSuspendChange, (bool), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnBitrateAllocationUpdated, (const VideoCodec&, const VideoBitrateAllocation&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnEncoderInternalScalerUpdate, (bool), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, GetInputFrameRate, (), (const, override))"
  },
  {
    "label": "FakeFrameRateProvider()",
    "kind": "Method",
    "detail": "Function (} ; class FakeFrameRateProvider : public MockVideoStreamEncoderObserver { public :)",
    "insertText": "FakeFrameRateProvider()"
  },
  {
    "label": "set_fps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_fps(int fps)"
  }
]