[
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "FShowFlagData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShowFlagData"
  },
  {
    "label": "FShowFlagData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Framework / Commands / InputChord . h \" # include \" ShowFlags . h \" class FLevelEditorViewportClient ; class FShowFlagData { public : FName ShowFlagName ; FText DisplayName ; uint32 EngineShowFlagIndex ; EShowFlagGroup Group ; FInputChord InputChord ;)",
    "insertText": "FShowFlagData(const FString& InName, const FText& InDisplayName, const uint32 InEngineShowFlagIndex, EShowFlagGroup InGroup = SFG_Normal)"
  },
  {
    "label": "FShowFlagData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FShowFlagData(const FString& InName, const FText& InDisplayName, const uint32 InEngineShowFlagIndex, EShowFlagGroup InGroup, const FInputChord& InInputChord)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled(const FLevelEditorViewportClient* ViewportClient)"
  },
  {
    "label": "ToggleState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleState(FLevelEditorViewportClient* ViewportClient)"
  },
  {
    "label": "GetShowFlagMenuItems()",
    "kind": "Method",
    "detail": "Function (} ; TArray<FShowFlagData>&)",
    "insertText": "GetShowFlagMenuItems()"
  }
]