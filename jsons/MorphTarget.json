[
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "FMorphTargetDelta",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMorphTargetDelta"
  },
  {
    "label": "FMorphTargetLODModel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMorphTargetLODModel"
  },
  {
    "label": "FFinishBuildMorphTargetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFinishBuildMorphTargetData"
  },
  {
    "label": "UMorphTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMorphTarget"
  },
  {
    "label": "FSkelMeshSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkelMeshSection"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" PackedNormal . h \" # include \" UObject / EditorObjectVersion . h \" # include \" UObject / FortniteMainBranchObjectVersion . h \" # include \" UObject / UE5PrivateFrostyStreamObjectVersion . h \" # include \" Serialization / MemoryArchive . h \" # include \" MorphTarget . generated . h \" class USkeletalMesh ; class UStaticMesh ; struct FMorphTargetDelta { FVector3f PositionDelta ; FVector3f TangentZDelta ; uint32 SourceIdx ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FMorphTargetDelta& V)"
  },
  {
    "label": "FMorphTargetLODModel()",
    "kind": "Method",
    "detail": "Function (FDeprecatedSerializedPackedNormal TangentZDelta_DEPRECATED ; Ar<<V . PositionDelta<<TangentZDelta_DEPRECATED<<V . SourceIdx ; V . TangentZDelta = TangentZDelta_DEPRECATED ; } else { Ar<<V . PositionDelta<<V . TangentZDelta<<V . SourceIdx ; } return Ar ; } } ; struct FMorphTargetLODModel { TArray<FMorphTargetDelta> Vertices ; int32 NumVertices ; int32 NumBaseMeshVerts ; TArray<int32> SectionIndices ; bool bGeneratedByEngine ; FString SourceFilename ;)",
    "insertText": "FMorphTargetLODModel() : NumVertices(0) , NumBaseMeshVerts(0) , bGeneratedByEngine(false)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FMorphTargetLODModel& M)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (bGeneratedByEngine = true ; SourceFilename .)",
    "insertText": "Empty()"
  },
  {
    "label": "DiscardVertexData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DiscardVertexData()"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (NumVertices = Vertices .)",
    "insertText": "Num()"
  },
  {
    "label": "FFinishBuildMorphTargetData()",
    "kind": "Method",
    "detail": "Function (} } } ; # if WITH_EDITOR struct FFinishBuildMorphTargetData { public : ~)",
    "insertText": "FFinishBuildMorphTargetData()"
  },
  {
    "label": "LoadFromMemoryArchive()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "LoadFromMemoryArchive(FMemoryArchive & Ar)"
  },
  {
    "label": "ApplyEditorData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyEditorData(USkeletalMesh * SkeletalMesh, bool bIsSerializeSaving)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (protected : bool bApplyMorphTargetsData = false ; TMap<FName,TArray<FMorphTargetLODModel>> MorphLODModelsPerTargetName ; } ; # endif)",
    "insertText": "UCLASS(hidecategories=Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(AssetRegistrySearchable)"
  },
  {
    "label": "GetMorphLODModels()",
    "kind": "Method",
    "detail": "Function (const TArray<FMorphTargetLODModel>&)",
    "insertText": "GetMorphLODModels()"
  },
  {
    "label": "HasDataForLOD()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDataForLOD(int32 LODIndex)"
  },
  {
    "label": "HasDataForSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDataForSection(int32 LODIndex, int32 SectionIndex)"
  },
  {
    "label": "HasValidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidData()"
  },
  {
    "label": "EmptyMorphLODModels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyMorphLODModels()"
  },
  {
    "label": "IsCustomImported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCustomImported(int32 LODIndex)"
  },
  {
    "label": "GetCustomImportedSourceFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCustomImportedSourceFilename(int32 LODIndex)"
  },
  {
    "label": "SetCustomImportedSourceFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomImportedSourceFilename(int32 LODIndex, const FString& InSourceFilename)"
  },
  {
    "label": "UsesBuiltinMorphTargetCompression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesBuiltinMorphTargetCompression()"
  },
  {
    "label": "RemoveEmptyMorphTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEmptyMorphTargets()"
  },
  {
    "label": "CreateFinishBuildMorphTargetData()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FFinishBuildMorphTargetData>)",
    "insertText": "CreateFinishBuildMorphTargetData()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# endif public : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "DeclareCustomVersions()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "DeclareCustomVersions(FArchive& Ar, const UClass* SpecificSubclass)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "SerializeMemoryArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeMemoryArchive(FMemoryArchive& Ar)"
  }
]