[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FSandboxPlatformFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSandboxPlatformFile"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FPipelineCacheChunkDataGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPipelineCacheChunkDataGenerator"
  },
  {
    "label": "FPipelineCacheChunkDataGenerator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Commandlets / IChunkDataGenerator . h \" # include \" Containers / Array . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" class FName ; class FSandboxPlatformFile ; class ITargetPlatform ; class FPipelineCacheChunkDataGenerator : public IChunkDataGenerator { bool bOptedOut ; FString PlatformNameUsedForIni ; FString ShaderLibraryName ; public :)",
    "insertText": "FPipelineCacheChunkDataGenerator(const ITargetPlatform* TargetPlatform, const FString& InShaderLibraryName)"
  },
  {
    "label": "FPipelineCacheChunkDataGenerator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPipelineCacheChunkDataGenerator()"
  },
  {
    "label": "GenerateChunkDataFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateChunkDataFiles(const int32 InChunkId, const TSet<FName>& InPackagesInChunk, const ITargetPlatform* TargetPlatform, FSandboxPlatformFile* InSandboxFile, TArray<FString>& OutChunkFilenames)"
  }
]