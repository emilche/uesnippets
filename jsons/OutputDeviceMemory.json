[
  {
    "label": "FOutputDeviceMemory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDeviceMemory"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FOutputDeviceMemoryProxyArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDeviceMemoryProxyArchive"
  },
  {
    "label": "FOutputDeviceMemory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreTypes . h \" # include \" HAL / CriticalSection . h \" # include \" Logging / LogVerbosity . h \" # include \" Misc / OutputDevice . h \" # include \" Serialization / Archive . h \" # include \" UObject / NameTypes . h \" class FOutputDeviceMemory : public FOutputDevice { public :)",
    "insertText": "FOutputDeviceMemory(int32 InPreserveSize = 256 * 1024, int32 InBufferSize = 2048 * 1024, bool bInSuppressEventTag = false)"
  },
  {
    "label": "FOutputDeviceMemory()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FOutputDeviceMemory()"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dump(FArchive& Ar)"
  },
  {
    "label": "TearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDown()"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* Data, ELogVerbosity::Type Verbosity, const class FName& Category, const double Time)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* Data, ELogVerbosity::Type Verbosity, const class FName& Category)"
  },
  {
    "label": "CanBeUsedOnAnyThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeUsedOnAnyThread()"
  },
  {
    "label": "FOutputDeviceMemoryProxyArchive()",
    "kind": "Method",
    "detail": "Function (class FOutputDeviceMemoryProxyArchive : public FArchive { FOutputDeviceMemory& OutputDevice ; public :)",
    "insertText": "FOutputDeviceMemoryProxyArchive(FOutputDeviceMemory& InOutputDevice) : OutputDevice(InOutputDevice)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(void* V, int64 Length)"
  },
  {
    "label": "SerializeToBuffer()",
    "kind": "Method",
    "detail": "Function (OutputDevice .)",
    "insertText": "SerializeToBuffer((ANSICHAR*)V, Length / sizeof(ANSICHAR))"
  }
]