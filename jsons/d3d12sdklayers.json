[
  {
    "label": "ID3D12DebugVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DebugVtbl"
  },
  {
    "label": "D3D12_GPU_BASED_VALIDATION_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_GPU_BASED_VALIDATION_FLAGS"
  },
  {
    "label": "ID3D12Debug1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12Debug1Vtbl"
  },
  {
    "label": "ID3D12Debug2Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12Debug2Vtbl"
  },
  {
    "label": "ID3D12Debug3Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12Debug3Vtbl"
  },
  {
    "label": "ID3D12Debug4Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12Debug4Vtbl"
  },
  {
    "label": "ID3D12Debug5Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12Debug5Vtbl"
  },
  {
    "label": "ID3D12Debug6Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12Debug6Vtbl"
  },
  {
    "label": "D3D12_RLDO_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_RLDO_FLAGS"
  },
  {
    "label": "D3D12_DEBUG_DEVICE_PARAMETER_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_DEBUG_DEVICE_PARAMETER_TYPE"
  },
  {
    "label": "D3D12_DEBUG_FEATURE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_DEBUG_FEATURE"
  },
  {
    "label": "D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE"
  },
  {
    "label": "D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS"
  },
  {
    "label": "D3D12_DEBUG_DEVICE_GPU_BASED_VALIDATION_SETTINGS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D12_DEBUG_DEVICE_GPU_BASED_VALIDATION_SETTINGS"
  },
  {
    "label": "D3D12_DEBUG_DEVICE_GPU_SLOWDOWN_PERFORMANCE_FACTOR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D12_DEBUG_DEVICE_GPU_SLOWDOWN_PERFORMANCE_FACTOR"
  },
  {
    "label": "ID3D12DebugDevice1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DebugDevice1Vtbl"
  },
  {
    "label": "ID3D12DebugDeviceVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DebugDeviceVtbl"
  },
  {
    "label": "ID3D12DebugDevice2Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DebugDevice2Vtbl"
  },
  {
    "label": "ID3D12DebugCommandQueueVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DebugCommandQueueVtbl"
  },
  {
    "label": "ID3D12DebugCommandQueue1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DebugCommandQueue1Vtbl"
  },
  {
    "label": "D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE"
  },
  {
    "label": "D3D12_DEBUG_COMMAND_LIST_GPU_BASED_VALIDATION_SETTINGS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D12_DEBUG_COMMAND_LIST_GPU_BASED_VALIDATION_SETTINGS"
  },
  {
    "label": "ID3D12DebugCommandList1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DebugCommandList1Vtbl"
  },
  {
    "label": "ID3D12DebugCommandListVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DebugCommandListVtbl"
  },
  {
    "label": "ID3D12DebugCommandList2Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DebugCommandList2Vtbl"
  },
  {
    "label": "ID3D12DebugCommandList3Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DebugCommandList3Vtbl"
  },
  {
    "label": "ID3D12SharingContractVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12SharingContractVtbl"
  },
  {
    "label": "ID3D12ManualWriteTrackingResourceVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12ManualWriteTrackingResourceVtbl"
  },
  {
    "label": "D3D12_MESSAGE_CATEGORY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_MESSAGE_CATEGORY"
  },
  {
    "label": "D3D12_MESSAGE_SEVERITY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_MESSAGE_SEVERITY"
  },
  {
    "label": "D3D12_MESSAGE_ID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_MESSAGE_ID"
  },
  {
    "label": "D3D12_MESSAGE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D12_MESSAGE"
  },
  {
    "label": "D3D12_INFO_QUEUE_FILTER_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D12_INFO_QUEUE_FILTER_DESC"
  },
  {
    "label": "D3D12_INFO_QUEUE_FILTER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D12_INFO_QUEUE_FILTER"
  },
  {
    "label": "ID3D12InfoQueueVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12InfoQueueVtbl"
  },
  {
    "label": "D3D12_MESSAGE_CALLBACK_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D12_MESSAGE_CALLBACK_FLAGS"
  },
  {
    "label": "ID3D12InfoQueue1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12InfoQueue1Vtbl"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef __REQUIRED_RPCNDR_H_VERSION__ # define __REQUIRED_RPCNDR_H_VERSION__ 5 0 0 # endif # ifndef __REQUIRED_RPCSAL_H_VERSION__ # define __REQUIRED_RPCSAL_H_VERSION__ 1 0 0 # endif # include \" rpc . h \" # include \" rpcndr . h \" # ifndef __RPCNDR_H_VERSION__ # error this stub requires an updated version of<rpcndr . h> # endif # ifndef COM_NO_WINDOWS_H # include \" windows . h \" # include \" ole2 . h \" # endif # ifndef __d3d12sdklayers_h__ # define __d3d12sdklayers_h__ # if)",
    "insertText": "defined(_MSC_VER) && (_MSC_VER >= 1020) #pragma once #endif #ifndef DECLSPEC_XFGVIRT #if defined(_CONTROL_FLOW_GUARD_XFG) #define DECLSPEC_XFGVIRT(base, func) __declspec(xfg_virtual(base, func)) #else #define DECLSPEC_XFGVIRT(base, func)"
  },
  {
    "label": "WINAPI_FAMILY_PARTITION()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef __ID3D12Debug1_FWD_DEFINED__ # define __ID3D12Debug1_FWD_DEFINED__ typedef interface ID3D12Debug1 ID3D12Debug1 ; # endif # ifndef __ID3D12Debug2_FWD_DEFINED__ # define __ID3D12Debug2_FWD_DEFINED__ typedef interface ID3D12Debug2 ID3D12Debug2 ; # endif # ifndef __ID3D12Debug3_FWD_DEFINED__ # define __ID3D12Debug3_FWD_DEFINED__ typedef interface ID3D12Debug3 ID3D12Debug3 ; # endif # ifndef __ID3D12Debug4_FWD_DEFINED__ # define __ID3D12Debug4_FWD_DEFINED__ typedef interface ID3D12Debug4 ID3D12Debug4 ; # endif # ifndef __ID3D12Debug5_FWD_DEFINED__ # define __ID3D12Debug5_FWD_DEFINED__ typedef interface ID3D12Debug5 ID3D12Debug5 ; # endif # ifndef __ID3D12Debug6_FWD_DEFINED__ # define __ID3D12Debug6_FWD_DEFINED__ typedef interface ID3D12Debug6 ID3D12Debug6 ; # endif # ifndef __ID3D12DebugDevice1_FWD_DEFINED__ # define __ID3D12DebugDevice1_FWD_DEFINED__ typedef interface ID3D12DebugDevice1 ID3D12DebugDevice1 ; # endif # ifndef __ID3D12DebugDevice_FWD_DEFINED__ # define __ID3D12DebugDevice_FWD_DEFINED__ typedef interface ID3D12DebugDevice ID3D12DebugDevice ; # endif # ifndef __ID3D12DebugDevice2_FWD_DEFINED__ # define __ID3D12DebugDevice2_FWD_DEFINED__ typedef interface ID3D12DebugDevice2 ID3D12DebugDevice2 ; # endif # ifndef __ID3D12DebugCommandQueue_FWD_DEFINED__ # define __ID3D12DebugCommandQueue_FWD_DEFINED__ typedef interface ID3D12DebugCommandQueue ID3D12DebugCommandQueue ; # endif # ifndef __ID3D12DebugCommandQueue1_FWD_DEFINED__ # define __ID3D12DebugCommandQueue1_FWD_DEFINED__ typedef interface ID3D12DebugCommandQueue1 ID3D12DebugCommandQueue1 ; # endif # ifndef __ID3D12DebugCommandList1_FWD_DEFINED__ # define __ID3D12DebugCommandList1_FWD_DEFINED__ typedef interface ID3D12DebugCommandList1 ID3D12DebugCommandList1 ; # endif # ifndef __ID3D12DebugCommandList_FWD_DEFINED__ # define __ID3D12DebugCommandList_FWD_DEFINED__ typedef interface ID3D12DebugCommandList ID3D12DebugCommandList ; # endif # ifndef __ID3D12DebugCommandList2_FWD_DEFINED__ # define __ID3D12DebugCommandList2_FWD_DEFINED__ typedef interface ID3D12DebugCommandList2 ID3D12DebugCommandList2 ; # endif # ifndef __ID3D12DebugCommandList3_FWD_DEFINED__ # define __ID3D12DebugCommandList3_FWD_DEFINED__ typedef interface ID3D12DebugCommandList3 ID3D12DebugCommandList3 ; # endif # ifndef __ID3D12SharingContract_FWD_DEFINED__ # define __ID3D12SharingContract_FWD_DEFINED__ typedef interface ID3D12SharingContract ID3D12SharingContract ; # endif # ifndef __ID3D12ManualWriteTrackingResource_FWD_DEFINED__ # define __ID3D12ManualWriteTrackingResource_FWD_DEFINED__ typedef interface ID3D12ManualWriteTrackingResource ID3D12ManualWriteTrackingResource ; # endif # ifndef __ID3D12InfoQueue_FWD_DEFINED__ # define __ID3D12InfoQueue_FWD_DEFINED__ typedef interface ID3D12InfoQueue ID3D12InfoQueue ; # endif # ifndef __ID3D12InfoQueue1_FWD_DEFINED__ # define __ID3D12InfoQueue1_FWD_DEFINED__ typedef interface ID3D12InfoQueue1 ID3D12InfoQueue1 ; # endif # include \" oaidl . h \" # include \" ocidl . h \" # include \" d3d12 . h \" # ifdef __cplusplus \" C \" { # endif # include<winapifamily . h> # pragma region App Family # if)",
    "insertText": "WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP | WINAPI_PARTITION_GAMES)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0000_v0_0_s_ifspec ; # ifndef __ID3D12Debug_INTERFACE_DEFINED__ # define __ID3D12Debug_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D12Debug ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"344488b7-6846-474b-b989-f027448245e0\")"
  },
  {
    "label": "EnableDebugLayer()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "EnableDebugLayer(void)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12DebugVtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12Debug * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12Debug * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12Debug * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug, EnableDebugLayer) void ( STDMETHODCALLTYPE *EnableDebugLayer )( ID3D12Debug * This)"
  },
  {
    "label": "ID3D12Debug_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12DebugVtbl ; interface ID3D12Debug { CONST_VTBL struct ID3D12DebugVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12Debug_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12Debug_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12Debug_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12Debug_EnableDebugLayer(This) \\ ( (This)->lpVtbl -> EnableDebugLayer(This))"
  },
  {
    "label": "DEFINE_ENUM_FLAG_OPERATORS()",
    "kind": "Method",
    "detail": "Function (D3D12_GPU_BASED_VALIDATION_FLAGS_NONE = 0,D3D12_GPU_BASED_VALIDATION_FLAGS_DISABLE_STATE_TRACKING = 0 x1 } D3D12_GPU_BASED_VALIDATION_FLAGS ;)",
    "insertText": "DEFINE_ENUM_FLAG_OPERATORS(D3D12_GPU_BASED_VALIDATION_FLAGS)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0001_v0_0_s_ifspec ; # ifndef __ID3D12Debug1_INTERFACE_DEFINED__ # define __ID3D12Debug1_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D12Debug1 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"affaa4ca-63fe-4d8e-b8ad-159000af4304\")"
  },
  {
    "label": "SetEnableGPUBasedValidation()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "SetEnableGPUBasedValidation(BOOL Enable)"
  },
  {
    "label": "SetEnableSynchronizedCommandQueueValidation()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "SetEnableSynchronizedCommandQueueValidation(BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12Debug1Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12Debug1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12Debug1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12Debug1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug1, EnableDebugLayer) void ( STDMETHODCALLTYPE *EnableDebugLayer )( ID3D12Debug1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug1, SetEnableGPUBasedValidation) void ( STDMETHODCALLTYPE *SetEnableGPUBasedValidation )( ID3D12Debug1 * This, BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug1, SetEnableSynchronizedCommandQueueValidation) void ( STDMETHODCALLTYPE *SetEnableSynchronizedCommandQueueValidation )( ID3D12Debug1 * This, BOOL Enable)"
  },
  {
    "label": "ID3D12Debug1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12Debug1Vtbl ; interface ID3D12Debug1 { CONST_VTBL struct ID3D12Debug1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12Debug1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12Debug1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12Debug1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12Debug1_EnableDebugLayer(This) \\ ( (This)->lpVtbl -> EnableDebugLayer(This) ) #define ID3D12Debug1_SetEnableGPUBasedValidation(This,Enable) \\ ( (This)->lpVtbl -> SetEnableGPUBasedValidation(This,Enable) ) #define ID3D12Debug1_SetEnableSynchronizedCommandQueueValidation(This,Enable) \\ ( (This)->lpVtbl -> SetEnableSynchronizedCommandQueueValidation(This,Enable))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"93a665c4-a3b2-4e5d-b692-a26ae14e3374\")"
  },
  {
    "label": "SetGPUBasedValidationFlags()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "SetGPUBasedValidationFlags(D3D12_GPU_BASED_VALIDATION_FLAGS Flags)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12Debug2Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12Debug2 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12Debug2 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12Debug2 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug2, SetGPUBasedValidationFlags) void ( STDMETHODCALLTYPE *SetGPUBasedValidationFlags )( ID3D12Debug2 * This, D3D12_GPU_BASED_VALIDATION_FLAGS Flags)"
  },
  {
    "label": "ID3D12Debug2_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12Debug2Vtbl ; interface ID3D12Debug2 { CONST_VTBL struct ID3D12Debug2Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12Debug2_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12Debug2_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12Debug2_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12Debug2_SetGPUBasedValidationFlags(This,Flags) \\ ( (This)->lpVtbl -> SetGPUBasedValidationFlags(This,Flags))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"5cf4e58f-f671-4ff1-a542-3686e3d153d1\")"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12Debug3Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12Debug3 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12Debug3 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12Debug3 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug, EnableDebugLayer) void ( STDMETHODCALLTYPE *EnableDebugLayer )( ID3D12Debug3 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetEnableGPUBasedValidation) void ( STDMETHODCALLTYPE *SetEnableGPUBasedValidation )( ID3D12Debug3 * This, BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetEnableSynchronizedCommandQueueValidation) void ( STDMETHODCALLTYPE *SetEnableSynchronizedCommandQueueValidation )( ID3D12Debug3 * This, BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetGPUBasedValidationFlags) void ( STDMETHODCALLTYPE *SetGPUBasedValidationFlags )( ID3D12Debug3 * This, D3D12_GPU_BASED_VALIDATION_FLAGS Flags)"
  },
  {
    "label": "ID3D12Debug3_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12Debug3Vtbl ; interface ID3D12Debug3 { CONST_VTBL struct ID3D12Debug3Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12Debug3_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12Debug3_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12Debug3_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12Debug3_EnableDebugLayer(This) \\ ( (This)->lpVtbl -> EnableDebugLayer(This) ) #define ID3D12Debug3_SetEnableGPUBasedValidation(This,Enable) \\ ( (This)->lpVtbl -> SetEnableGPUBasedValidation(This,Enable) ) #define ID3D12Debug3_SetEnableSynchronizedCommandQueueValidation(This,Enable) \\ ( (This)->lpVtbl -> SetEnableSynchronizedCommandQueueValidation(This,Enable) ) #define ID3D12Debug3_SetGPUBasedValidationFlags(This,Flags) \\ ( (This)->lpVtbl -> SetGPUBasedValidationFlags(This,Flags))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"014b816e-9ec5-4a2f-a845-ffbe441ce13a\")"
  },
  {
    "label": "DisableDebugLayer()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "DisableDebugLayer(void)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12Debug4Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12Debug4 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12Debug4 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12Debug4 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug, EnableDebugLayer) void ( STDMETHODCALLTYPE *EnableDebugLayer )( ID3D12Debug4 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetEnableGPUBasedValidation) void ( STDMETHODCALLTYPE *SetEnableGPUBasedValidation )( ID3D12Debug4 * This, BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetEnableSynchronizedCommandQueueValidation) void ( STDMETHODCALLTYPE *SetEnableSynchronizedCommandQueueValidation )( ID3D12Debug4 * This, BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetGPUBasedValidationFlags) void ( STDMETHODCALLTYPE *SetGPUBasedValidationFlags )( ID3D12Debug4 * This, D3D12_GPU_BASED_VALIDATION_FLAGS Flags)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug4, DisableDebugLayer) void ( STDMETHODCALLTYPE *DisableDebugLayer )( ID3D12Debug4 * This)"
  },
  {
    "label": "ID3D12Debug4_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12Debug4Vtbl ; interface ID3D12Debug4 { CONST_VTBL struct ID3D12Debug4Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12Debug4_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12Debug4_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12Debug4_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12Debug4_EnableDebugLayer(This) \\ ( (This)->lpVtbl -> EnableDebugLayer(This) ) #define ID3D12Debug4_SetEnableGPUBasedValidation(This,Enable) \\ ( (This)->lpVtbl -> SetEnableGPUBasedValidation(This,Enable) ) #define ID3D12Debug4_SetEnableSynchronizedCommandQueueValidation(This,Enable) \\ ( (This)->lpVtbl -> SetEnableSynchronizedCommandQueueValidation(This,Enable) ) #define ID3D12Debug4_SetGPUBasedValidationFlags(This,Flags) \\ ( (This)->lpVtbl -> SetGPUBasedValidationFlags(This,Flags) ) #define ID3D12Debug4_DisableDebugLayer(This) \\ ( (This)->lpVtbl -> DisableDebugLayer(This))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"548d6b12-09fa-40e0-9069-5dcd589a52c9\")"
  },
  {
    "label": "SetEnableAutoName()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "SetEnableAutoName(BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12Debug5Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12Debug5 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12Debug5 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12Debug5 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug, EnableDebugLayer) void ( STDMETHODCALLTYPE *EnableDebugLayer )( ID3D12Debug5 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetEnableGPUBasedValidation) void ( STDMETHODCALLTYPE *SetEnableGPUBasedValidation )( ID3D12Debug5 * This, BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetEnableSynchronizedCommandQueueValidation) void ( STDMETHODCALLTYPE *SetEnableSynchronizedCommandQueueValidation )( ID3D12Debug5 * This, BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetGPUBasedValidationFlags) void ( STDMETHODCALLTYPE *SetGPUBasedValidationFlags )( ID3D12Debug5 * This, D3D12_GPU_BASED_VALIDATION_FLAGS Flags)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug4, DisableDebugLayer) void ( STDMETHODCALLTYPE *DisableDebugLayer )( ID3D12Debug5 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug5, SetEnableAutoName) void ( STDMETHODCALLTYPE *SetEnableAutoName )( ID3D12Debug5 * This, BOOL Enable)"
  },
  {
    "label": "ID3D12Debug5_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12Debug5Vtbl ; interface ID3D12Debug5 { CONST_VTBL struct ID3D12Debug5Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12Debug5_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12Debug5_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12Debug5_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12Debug5_EnableDebugLayer(This) \\ ( (This)->lpVtbl -> EnableDebugLayer(This) ) #define ID3D12Debug5_SetEnableGPUBasedValidation(This,Enable) \\ ( (This)->lpVtbl -> SetEnableGPUBasedValidation(This,Enable) ) #define ID3D12Debug5_SetEnableSynchronizedCommandQueueValidation(This,Enable) \\ ( (This)->lpVtbl -> SetEnableSynchronizedCommandQueueValidation(This,Enable) ) #define ID3D12Debug5_SetGPUBasedValidationFlags(This,Flags) \\ ( (This)->lpVtbl -> SetGPUBasedValidationFlags(This,Flags) ) #define ID3D12Debug5_DisableDebugLayer(This) \\ ( (This)->lpVtbl -> DisableDebugLayer(This) ) #define ID3D12Debug5_SetEnableAutoName(This,Enable) \\ ( (This)->lpVtbl -> SetEnableAutoName(This,Enable))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"82a816d6-5d01-4157-97d0-4975463fd1ed\")"
  },
  {
    "label": "SetForceLegacyBarrierValidation()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "SetForceLegacyBarrierValidation(BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12Debug6Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12Debug6 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12Debug6 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12Debug6 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug, EnableDebugLayer) void ( STDMETHODCALLTYPE *EnableDebugLayer )( ID3D12Debug6 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetEnableGPUBasedValidation) void ( STDMETHODCALLTYPE *SetEnableGPUBasedValidation )( ID3D12Debug6 * This, BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetEnableSynchronizedCommandQueueValidation) void ( STDMETHODCALLTYPE *SetEnableSynchronizedCommandQueueValidation )( ID3D12Debug6 * This, BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug3, SetGPUBasedValidationFlags) void ( STDMETHODCALLTYPE *SetGPUBasedValidationFlags )( ID3D12Debug6 * This, D3D12_GPU_BASED_VALIDATION_FLAGS Flags)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug4, DisableDebugLayer) void ( STDMETHODCALLTYPE *DisableDebugLayer )( ID3D12Debug6 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug5, SetEnableAutoName) void ( STDMETHODCALLTYPE *SetEnableAutoName )( ID3D12Debug6 * This, BOOL Enable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12Debug6, SetForceLegacyBarrierValidation) void ( STDMETHODCALLTYPE *SetForceLegacyBarrierValidation )( ID3D12Debug6 * This, BOOL Enable)"
  },
  {
    "label": "ID3D12Debug6_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12Debug6Vtbl ; interface ID3D12Debug6 { CONST_VTBL struct ID3D12Debug6Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12Debug6_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12Debug6_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12Debug6_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12Debug6_EnableDebugLayer(This) \\ ( (This)->lpVtbl -> EnableDebugLayer(This) ) #define ID3D12Debug6_SetEnableGPUBasedValidation(This,Enable) \\ ( (This)->lpVtbl -> SetEnableGPUBasedValidation(This,Enable) ) #define ID3D12Debug6_SetEnableSynchronizedCommandQueueValidation(This,Enable) \\ ( (This)->lpVtbl -> SetEnableSynchronizedCommandQueueValidation(This,Enable) ) #define ID3D12Debug6_SetGPUBasedValidationFlags(This,Flags) \\ ( (This)->lpVtbl -> SetGPUBasedValidationFlags(This,Flags) ) #define ID3D12Debug6_DisableDebugLayer(This) \\ ( (This)->lpVtbl -> DisableDebugLayer(This) ) #define ID3D12Debug6_SetEnableAutoName(This,Enable) \\ ( (This)->lpVtbl -> SetEnableAutoName(This,Enable) ) #define ID3D12Debug6_SetForceLegacyBarrierValidation(This,Enable) \\ ( (This)->lpVtbl -> SetForceLegacyBarrierValidation(This,Enable) ) #endif #endif #endif DEFINE_GUID(WKPDID_D3DAutoDebugObjectNameW, 0xd4902e36, 0x757a, 0x4942, 0x95, 0x94, 0xb6, 0x76, 0x9a, 0xfa, 0x43, 0xcd)"
  },
  {
    "label": "DEFINE_ENUM_FLAG_OPERATORS()",
    "kind": "Method",
    "detail": "Function (typedef enum D3D12_RLDO_FLAGS { D3D12_RLDO_NONE = 0,D3D12_RLDO_SUMMARY = 0 x1,D3D12_RLDO_DETAIL = 0 x2,D3D12_RLDO_IGNORE_INTERNAL = 0 x4 } D3D12_RLDO_FLAGS ;)",
    "insertText": "DEFINE_ENUM_FLAG_OPERATORS(D3D12_RLDO_FLAGS)"
  },
  {
    "label": "D3D12_DEBUG_DEVICE_PARAMETER_GPU_BASED_VALIDATION_SETTINGS()",
    "kind": "Method",
    "detail": "Function (D3D12_DEBUG_DEVICE_PARAMETER_FEATURE_FLAGS = 0,)",
    "insertText": "D3D12_DEBUG_DEVICE_PARAMETER_GPU_BASED_VALIDATION_SETTINGS(D3D12_DEBUG_DEVICE_PARAMETER_FEATURE_FLAGS + 1 ) , D3D12_DEBUG_DEVICE_PARAMETER_GPU_SLOWDOWN_PERFORMANCE_FACTOR = ( D3D12_DEBUG_DEVICE_PARAMETER_GPU_BASED_VALIDATION_SETTINGS + 1)"
  },
  {
    "label": "DEFINE_ENUM_FLAG_OPERATORS()",
    "kind": "Method",
    "detail": "Function (typedef enum D3D12_DEBUG_FEATURE { D3D12_DEBUG_FEATURE_NONE = 0,D3D12_DEBUG_FEATURE_ALLOW_BEHAVIOR_CHANGING_DEBUG_AIDS = 0 x1,D3D12_DEBUG_FEATURE_CONSERVATIVE_RESOURCE_STATE_TRACKING = 0 x2,D3D12_DEBUG_FEATURE_DISABLE_VIRTUALIZED_BUNDLES_VALIDATION = 0 x4,D3D12_DEBUG_FEATURE_EMULATE_WINDOWS7 = 0 x8 } D3D12_DEBUG_FEATURE ;)",
    "insertText": "DEFINE_ENUM_FLAG_OPERATORS(D3D12_DEBUG_FEATURE)"
  },
  {
    "label": "D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_STATE_TRACKING_ONLY()",
    "kind": "Method",
    "detail": "Function (D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_NONE = 0,)",
    "insertText": "D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_STATE_TRACKING_ONLY(D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_NONE + 1 ) , D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_UNGUARDED_VALIDATION = ( D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_STATE_TRACKING_ONLY + 1 ) , D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_GUARDED_VALIDATION = ( D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_UNGUARDED_VALIDATION + 1 ) , NUM_D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODES = ( D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_GUARDED_VALIDATION + 1)"
  },
  {
    "label": "DEFINE_ENUM_FLAG_OPERATORS()",
    "kind": "Method",
    "detail": "Function (typedef enum D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS { D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_NONE = 0,D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_TRACKING_ONLY_SHADERS = 0 x1,D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_UNGUARDED_VALIDATION_SHADERS = 0 x2,D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_GUARDED_VALIDATION_SHADERS = 0 x4,D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS_VALID_MASK = 0 x7 } D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS ;)",
    "insertText": "DEFINE_ENUM_FLAG_OPERATORS(D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (UINT MaxMessagesPerCommandList ; D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE DefaultShaderPatchMode ; D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS PipelineStateCreateFlags ; } D3D12_DEBUG_DEVICE_GPU_BASED_VALIDATION_SETTINGS ; typedef struct D3D12_DEBUG_DEVICE_GPU_SLOWDOWN_PERFORMANCE_FACTOR { FLOAT SlowdownFactor ; } D3D12_DEBUG_DEVICE_GPU_SLOWDOWN_PERFORMANCE_FACTOR ; RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0007_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0007_v0_0_s_ifspec ; # ifndef __ID3D12DebugDevice1_INTERFACE_DEFINED__ # define __ID3D12DebugDevice1_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D12DebugDevice1 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"a9b71770-d099-4a65-a698-3dee10020f88\")"
  },
  {
    "label": "SetDebugParameter()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetDebugParameter(D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, _In_reads_bytes_(DataSize) const void *pData, UINT DataSize)"
  },
  {
    "label": "GetDebugParameter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDebugParameter(D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, _Out_writes_bytes_(DataSize) void *pData, UINT DataSize)"
  },
  {
    "label": "ReportLiveDeviceObjects()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "ReportLiveDeviceObjects(D3D12_RLDO_FLAGS Flags)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12DebugDevice1Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12DebugDevice1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12DebugDevice1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12DebugDevice1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice1, SetDebugParameter) HRESULT ( STDMETHODCALLTYPE *SetDebugParameter )( ID3D12DebugDevice1 * This, D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, _In_reads_bytes_(DataSize) const void *pData, UINT DataSize)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice1, GetDebugParameter) HRESULT ( STDMETHODCALLTYPE *GetDebugParameter )( ID3D12DebugDevice1 * This, D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, _Out_writes_bytes_(DataSize) void *pData, UINT DataSize)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice1, ReportLiveDeviceObjects) HRESULT ( STDMETHODCALLTYPE *ReportLiveDeviceObjects )( ID3D12DebugDevice1 * This, D3D12_RLDO_FLAGS Flags)"
  },
  {
    "label": "ID3D12DebugDevice1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12DebugDevice1Vtbl ; interface ID3D12DebugDevice1 { CONST_VTBL struct ID3D12DebugDevice1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12DebugDevice1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12DebugDevice1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12DebugDevice1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12DebugDevice1_SetDebugParameter(This,Type,pData,DataSize) \\ ( (This)->lpVtbl -> SetDebugParameter(This,Type,pData,DataSize) ) #define ID3D12DebugDevice1_GetDebugParameter(This,Type,pData,DataSize) \\ ( (This)->lpVtbl -> GetDebugParameter(This,Type,pData,DataSize) ) #define ID3D12DebugDevice1_ReportLiveDeviceObjects(This,Flags) \\ ( (This)->lpVtbl -> ReportLiveDeviceObjects(This,Flags))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"3febd6dd-4973-4787-8194-e45f9e28923e\")"
  },
  {
    "label": "SetFeatureMask()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetFeatureMask(D3D12_DEBUG_FEATURE Mask)"
  },
  {
    "label": "GetFeatureMask()",
    "kind": "Method",
    "detail": "Function (D3D12_DEBUG_FEATURE STDMETHODCALLTYPE)",
    "insertText": "GetFeatureMask(void)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12DebugDeviceVtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12DebugDevice * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12DebugDevice * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12DebugDevice * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice, SetFeatureMask) HRESULT ( STDMETHODCALLTYPE *SetFeatureMask )( ID3D12DebugDevice * This, D3D12_DEBUG_FEATURE Mask)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice, GetFeatureMask) D3D12_DEBUG_FEATURE ( STDMETHODCALLTYPE *GetFeatureMask )( ID3D12DebugDevice * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice, ReportLiveDeviceObjects) HRESULT ( STDMETHODCALLTYPE *ReportLiveDeviceObjects )( ID3D12DebugDevice * This, D3D12_RLDO_FLAGS Flags)"
  },
  {
    "label": "ID3D12DebugDevice_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12DebugDeviceVtbl ; interface ID3D12DebugDevice { CONST_VTBL struct ID3D12DebugDeviceVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12DebugDevice_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12DebugDevice_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12DebugDevice_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12DebugDevice_SetFeatureMask(This,Mask) \\ ( (This)->lpVtbl -> SetFeatureMask(This,Mask) ) #define ID3D12DebugDevice_GetFeatureMask(This) \\ ( (This)->lpVtbl -> GetFeatureMask(This) ) #define ID3D12DebugDevice_ReportLiveDeviceObjects(This,Flags) \\ ( (This)->lpVtbl -> ReportLiveDeviceObjects(This,Flags))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"60eccbc1-378d-4df1-894c-f8ac5ce4d7dd\")"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12DebugDevice2Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12DebugDevice2 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12DebugDevice2 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12DebugDevice2 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice, SetFeatureMask) HRESULT ( STDMETHODCALLTYPE *SetFeatureMask )( ID3D12DebugDevice2 * This, D3D12_DEBUG_FEATURE Mask)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice, GetFeatureMask) D3D12_DEBUG_FEATURE ( STDMETHODCALLTYPE *GetFeatureMask )( ID3D12DebugDevice2 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice, ReportLiveDeviceObjects) HRESULT ( STDMETHODCALLTYPE *ReportLiveDeviceObjects )( ID3D12DebugDevice2 * This, D3D12_RLDO_FLAGS Flags)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice2, SetDebugParameter) HRESULT ( STDMETHODCALLTYPE *SetDebugParameter )( ID3D12DebugDevice2 * This, D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, _In_reads_bytes_(DataSize) const void *pData, UINT DataSize)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugDevice2, GetDebugParameter) HRESULT ( STDMETHODCALLTYPE *GetDebugParameter )( ID3D12DebugDevice2 * This, D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, _Out_writes_bytes_(DataSize) void *pData, UINT DataSize)"
  },
  {
    "label": "ID3D12DebugDevice2_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12DebugDevice2Vtbl ; interface ID3D12DebugDevice2 { CONST_VTBL struct ID3D12DebugDevice2Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12DebugDevice2_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12DebugDevice2_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12DebugDevice2_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12DebugDevice2_SetFeatureMask(This,Mask) \\ ( (This)->lpVtbl -> SetFeatureMask(This,Mask) ) #define ID3D12DebugDevice2_GetFeatureMask(This) \\ ( (This)->lpVtbl -> GetFeatureMask(This) ) #define ID3D12DebugDevice2_ReportLiveDeviceObjects(This,Flags) \\ ( (This)->lpVtbl -> ReportLiveDeviceObjects(This,Flags) ) #define ID3D12DebugDevice2_SetDebugParameter(This,Type,pData,DataSize) \\ ( (This)->lpVtbl -> SetDebugParameter(This,Type,pData,DataSize) ) #define ID3D12DebugDevice2_GetDebugParameter(This,Type,pData,DataSize) \\ ( (This)->lpVtbl -> GetDebugParameter(This,Type,pData,DataSize) ) #endif #endif #endif DEFINE_GUID(DXGI_DEBUG_D3D12, 0xcf59a98c, 0xa950, 0x4326, 0x91, 0xef, 0x9b, 0xba, 0xa1, 0x7b, 0xfd, 0x95)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0010_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0010_v0_0_s_ifspec ; # ifndef __ID3D12DebugCommandQueue_INTERFACE_DEFINED__ # define __ID3D12DebugCommandQueue_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D12DebugCommandQueue ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"09e0bf36-54ac-484f-8847-4baeeab6053a\")"
  },
  {
    "label": "AssertResourceState()",
    "kind": "Method",
    "detail": "Function (public : BOOL STDMETHODCALLTYPE)",
    "insertText": "AssertResourceState(_In_ ID3D12Resource *pResource, UINT Subresource, UINT State)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12DebugCommandQueueVtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12DebugCommandQueue * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12DebugCommandQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12DebugCommandQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandQueue, AssertResourceState) BOOL ( STDMETHODCALLTYPE *AssertResourceState )( ID3D12DebugCommandQueue * This, _In_ ID3D12Resource *pResource, UINT Subresource, UINT State)"
  },
  {
    "label": "ID3D12DebugCommandQueue_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12DebugCommandQueueVtbl ; interface ID3D12DebugCommandQueue { CONST_VTBL struct ID3D12DebugCommandQueueVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12DebugCommandQueue_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12DebugCommandQueue_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12DebugCommandQueue_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12DebugCommandQueue_AssertResourceState(This,pResource,Subresource,State) \\ ( (This)->lpVtbl -> AssertResourceState(This,pResource,Subresource,State))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"16be35a2-bfd6-49f2-bcae-eaae4aff862d\")"
  },
  {
    "label": "AssertResourceAccess()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "AssertResourceAccess(_In_ ID3D12Resource *pResource, UINT Subresource, D3D12_BARRIER_ACCESS Access)"
  },
  {
    "label": "AssertTextureLayout()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "AssertTextureLayout(_In_ ID3D12Resource *pResource, UINT Subresource, D3D12_BARRIER_LAYOUT Layout)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12DebugCommandQueue1Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12DebugCommandQueue1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12DebugCommandQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12DebugCommandQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandQueue, AssertResourceState) BOOL ( STDMETHODCALLTYPE *AssertResourceState )( ID3D12DebugCommandQueue1 * This, _In_ ID3D12Resource *pResource, UINT Subresource, UINT State)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandQueue1, AssertResourceAccess) void ( STDMETHODCALLTYPE *AssertResourceAccess )( ID3D12DebugCommandQueue1 * This, _In_ ID3D12Resource *pResource, UINT Subresource, D3D12_BARRIER_ACCESS Access)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandQueue1, AssertTextureLayout) void ( STDMETHODCALLTYPE *AssertTextureLayout )( ID3D12DebugCommandQueue1 * This, _In_ ID3D12Resource *pResource, UINT Subresource, D3D12_BARRIER_LAYOUT Layout)"
  },
  {
    "label": "ID3D12DebugCommandQueue1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12DebugCommandQueue1Vtbl ; interface ID3D12DebugCommandQueue1 { CONST_VTBL struct ID3D12DebugCommandQueue1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12DebugCommandQueue1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12DebugCommandQueue1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12DebugCommandQueue1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12DebugCommandQueue1_AssertResourceState(This,pResource,Subresource,State) \\ ( (This)->lpVtbl -> AssertResourceState(This,pResource,Subresource,State) ) #define ID3D12DebugCommandQueue1_AssertResourceAccess(This,pResource,Subresource,Access) \\ ( (This)->lpVtbl -> AssertResourceAccess(This,pResource,Subresource,Access) ) #define ID3D12DebugCommandQueue1_AssertTextureLayout(This,pResource,Subresource,Layout) \\ ( (This)->lpVtbl -> AssertTextureLayout(This,pResource,Subresource,Layout))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D12_DEBUG_COMMAND_LIST_PARAMETER_GPU_BASED_VALIDATION_SETTINGS = 0 } D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE ; typedef struct D3D12_DEBUG_COMMAND_LIST_GPU_BASED_VALIDATION_SETTINGS { D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE ShaderPatchMode ; } D3D12_DEBUG_COMMAND_LIST_GPU_BASED_VALIDATION_SETTINGS ; RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0012_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0012_v0_0_s_ifspec ; # ifndef __ID3D12DebugCommandList1_INTERFACE_DEFINED__ # define __ID3D12DebugCommandList1_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D12DebugCommandList1 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"102ca951-311b-4b01-b11f-ecb83e061b37\")"
  },
  {
    "label": "SetDebugParameter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetDebugParameter(D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, _In_reads_bytes_(DataSize) const void *pData, UINT DataSize)"
  },
  {
    "label": "GetDebugParameter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDebugParameter(D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, _Out_writes_bytes_(DataSize) void *pData, UINT DataSize)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12DebugCommandList1Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12DebugCommandList1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12DebugCommandList1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12DebugCommandList1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList1, AssertResourceState) BOOL ( STDMETHODCALLTYPE *AssertResourceState )( ID3D12DebugCommandList1 * This, _In_ ID3D12Resource *pResource, UINT Subresource, UINT State)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList1, SetDebugParameter) HRESULT ( STDMETHODCALLTYPE *SetDebugParameter )( ID3D12DebugCommandList1 * This, D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, _In_reads_bytes_(DataSize) const void *pData, UINT DataSize)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList1, GetDebugParameter) HRESULT ( STDMETHODCALLTYPE *GetDebugParameter )( ID3D12DebugCommandList1 * This, D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, _Out_writes_bytes_(DataSize) void *pData, UINT DataSize)"
  },
  {
    "label": "ID3D12DebugCommandList1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12DebugCommandList1Vtbl ; interface ID3D12DebugCommandList1 { CONST_VTBL struct ID3D12DebugCommandList1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12DebugCommandList1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12DebugCommandList1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12DebugCommandList1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12DebugCommandList1_AssertResourceState(This,pResource,Subresource,State) \\ ( (This)->lpVtbl -> AssertResourceState(This,pResource,Subresource,State) ) #define ID3D12DebugCommandList1_SetDebugParameter(This,Type,pData,DataSize) \\ ( (This)->lpVtbl -> SetDebugParameter(This,Type,pData,DataSize) ) #define ID3D12DebugCommandList1_GetDebugParameter(This,Type,pData,DataSize) \\ ( (This)->lpVtbl -> GetDebugParameter(This,Type,pData,DataSize))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"09e0bf36-54ac-484f-8847-4baeeab6053f\")"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12DebugCommandListVtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12DebugCommandList * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12DebugCommandList * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12DebugCommandList * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList, AssertResourceState) BOOL ( STDMETHODCALLTYPE *AssertResourceState )( ID3D12DebugCommandList * This, _In_ ID3D12Resource *pResource, UINT Subresource, UINT State)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList, SetFeatureMask) HRESULT ( STDMETHODCALLTYPE *SetFeatureMask )( ID3D12DebugCommandList * This, D3D12_DEBUG_FEATURE Mask)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList, GetFeatureMask) D3D12_DEBUG_FEATURE ( STDMETHODCALLTYPE *GetFeatureMask )( ID3D12DebugCommandList * This)"
  },
  {
    "label": "ID3D12DebugCommandList_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12DebugCommandListVtbl ; interface ID3D12DebugCommandList { CONST_VTBL struct ID3D12DebugCommandListVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12DebugCommandList_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12DebugCommandList_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12DebugCommandList_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12DebugCommandList_AssertResourceState(This,pResource,Subresource,State) \\ ( (This)->lpVtbl -> AssertResourceState(This,pResource,Subresource,State) ) #define ID3D12DebugCommandList_SetFeatureMask(This,Mask) \\ ( (This)->lpVtbl -> SetFeatureMask(This,Mask) ) #define ID3D12DebugCommandList_GetFeatureMask(This) \\ ( (This)->lpVtbl -> GetFeatureMask(This))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"aeb575cf-4e06-48be-ba3b-c450fc96652e\")"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12DebugCommandList2Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12DebugCommandList2 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12DebugCommandList2 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12DebugCommandList2 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList, AssertResourceState) BOOL ( STDMETHODCALLTYPE *AssertResourceState )( ID3D12DebugCommandList2 * This, _In_ ID3D12Resource *pResource, UINT Subresource, UINT State)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList, SetFeatureMask) HRESULT ( STDMETHODCALLTYPE *SetFeatureMask )( ID3D12DebugCommandList2 * This, D3D12_DEBUG_FEATURE Mask)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList, GetFeatureMask) D3D12_DEBUG_FEATURE ( STDMETHODCALLTYPE *GetFeatureMask )( ID3D12DebugCommandList2 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList2, SetDebugParameter) HRESULT ( STDMETHODCALLTYPE *SetDebugParameter )( ID3D12DebugCommandList2 * This, D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, _In_reads_bytes_(DataSize) const void *pData, UINT DataSize)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList2, GetDebugParameter) HRESULT ( STDMETHODCALLTYPE *GetDebugParameter )( ID3D12DebugCommandList2 * This, D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, _Out_writes_bytes_(DataSize) void *pData, UINT DataSize)"
  },
  {
    "label": "ID3D12DebugCommandList2_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12DebugCommandList2Vtbl ; interface ID3D12DebugCommandList2 { CONST_VTBL struct ID3D12DebugCommandList2Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12DebugCommandList2_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12DebugCommandList2_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12DebugCommandList2_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12DebugCommandList2_AssertResourceState(This,pResource,Subresource,State) \\ ( (This)->lpVtbl -> AssertResourceState(This,pResource,Subresource,State) ) #define ID3D12DebugCommandList2_SetFeatureMask(This,Mask) \\ ( (This)->lpVtbl -> SetFeatureMask(This,Mask) ) #define ID3D12DebugCommandList2_GetFeatureMask(This) \\ ( (This)->lpVtbl -> GetFeatureMask(This) ) #define ID3D12DebugCommandList2_SetDebugParameter(This,Type,pData,DataSize) \\ ( (This)->lpVtbl -> SetDebugParameter(This,Type,pData,DataSize) ) #define ID3D12DebugCommandList2_GetDebugParameter(This,Type,pData,DataSize) \\ ( (This)->lpVtbl -> GetDebugParameter(This,Type,pData,DataSize))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"197d5e15-4d37-4d34-af78-724cd70fdb1f\")"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12DebugCommandList3Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12DebugCommandList3 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12DebugCommandList3 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12DebugCommandList3 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList, AssertResourceState) BOOL ( STDMETHODCALLTYPE *AssertResourceState )( ID3D12DebugCommandList3 * This, _In_ ID3D12Resource *pResource, UINT Subresource, UINT State)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList, SetFeatureMask) HRESULT ( STDMETHODCALLTYPE *SetFeatureMask )( ID3D12DebugCommandList3 * This, D3D12_DEBUG_FEATURE Mask)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList, GetFeatureMask) D3D12_DEBUG_FEATURE ( STDMETHODCALLTYPE *GetFeatureMask )( ID3D12DebugCommandList3 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList2, SetDebugParameter) HRESULT ( STDMETHODCALLTYPE *SetDebugParameter )( ID3D12DebugCommandList3 * This, D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, _In_reads_bytes_(DataSize) const void *pData, UINT DataSize)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList2, GetDebugParameter) HRESULT ( STDMETHODCALLTYPE *GetDebugParameter )( ID3D12DebugCommandList3 * This, D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, _Out_writes_bytes_(DataSize) void *pData, UINT DataSize)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList3, AssertResourceAccess) void ( STDMETHODCALLTYPE *AssertResourceAccess )( ID3D12DebugCommandList3 * This, _In_ ID3D12Resource *pResource, UINT Subresource, D3D12_BARRIER_ACCESS Access)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12DebugCommandList3, AssertTextureLayout) void ( STDMETHODCALLTYPE *AssertTextureLayout )( ID3D12DebugCommandList3 * This, _In_ ID3D12Resource *pResource, UINT Subresource, D3D12_BARRIER_LAYOUT Layout)"
  },
  {
    "label": "ID3D12DebugCommandList3_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12DebugCommandList3Vtbl ; interface ID3D12DebugCommandList3 { CONST_VTBL struct ID3D12DebugCommandList3Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12DebugCommandList3_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12DebugCommandList3_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12DebugCommandList3_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12DebugCommandList3_AssertResourceState(This,pResource,Subresource,State) \\ ( (This)->lpVtbl -> AssertResourceState(This,pResource,Subresource,State) ) #define ID3D12DebugCommandList3_SetFeatureMask(This,Mask) \\ ( (This)->lpVtbl -> SetFeatureMask(This,Mask) ) #define ID3D12DebugCommandList3_GetFeatureMask(This) \\ ( (This)->lpVtbl -> GetFeatureMask(This) ) #define ID3D12DebugCommandList3_SetDebugParameter(This,Type,pData,DataSize) \\ ( (This)->lpVtbl -> SetDebugParameter(This,Type,pData,DataSize) ) #define ID3D12DebugCommandList3_GetDebugParameter(This,Type,pData,DataSize) \\ ( (This)->lpVtbl -> GetDebugParameter(This,Type,pData,DataSize) ) #define ID3D12DebugCommandList3_AssertResourceAccess(This,pResource,Subresource,Access) \\ ( (This)->lpVtbl -> AssertResourceAccess(This,pResource,Subresource,Access) ) #define ID3D12DebugCommandList3_AssertTextureLayout(This,pResource,Subresource,Layout) \\ ( (This)->lpVtbl -> AssertTextureLayout(This,pResource,Subresource,Layout))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"0adf7d52-929c-4e61-addb-ffed30de66ef\")"
  },
  {
    "label": "Present()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "Present(_In_ ID3D12Resource *pResource, UINT Subresource, _In_ HWND window)"
  },
  {
    "label": "SharedFenceSignal()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "SharedFenceSignal(_In_ ID3D12Fence *pFence, UINT64 FenceValue)"
  },
  {
    "label": "BeginCapturableWork()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "BeginCapturableWork(_In_ REFGUID guid)"
  },
  {
    "label": "EndCapturableWork()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "EndCapturableWork(_In_ REFGUID guid)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12SharingContractVtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12SharingContract * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12SharingContract * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12SharingContract * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12SharingContract, Present) void ( STDMETHODCALLTYPE *Present )( ID3D12SharingContract * This, _In_ ID3D12Resource *pResource, UINT Subresource, _In_ HWND window)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12SharingContract, SharedFenceSignal) void ( STDMETHODCALLTYPE *SharedFenceSignal )( ID3D12SharingContract * This, _In_ ID3D12Fence *pFence, UINT64 FenceValue)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12SharingContract, BeginCapturableWork) void ( STDMETHODCALLTYPE *BeginCapturableWork )( ID3D12SharingContract * This, _In_ REFGUID guid)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12SharingContract, EndCapturableWork) void ( STDMETHODCALLTYPE *EndCapturableWork )( ID3D12SharingContract * This, _In_ REFGUID guid)"
  },
  {
    "label": "ID3D12SharingContract_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12SharingContractVtbl ; interface ID3D12SharingContract { CONST_VTBL struct ID3D12SharingContractVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12SharingContract_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12SharingContract_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12SharingContract_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12SharingContract_Present(This,pResource,Subresource,window) \\ ( (This)->lpVtbl -> Present(This,pResource,Subresource,window) ) #define ID3D12SharingContract_SharedFenceSignal(This,pFence,FenceValue) \\ ( (This)->lpVtbl -> SharedFenceSignal(This,pFence,FenceValue) ) #define ID3D12SharingContract_BeginCapturableWork(This,guid) \\ ( (This)->lpVtbl -> BeginCapturableWork(This,guid) ) #define ID3D12SharingContract_EndCapturableWork(This,guid) \\ ( (This)->lpVtbl -> EndCapturableWork(This,guid))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"86ca3b85-49ad-4b6e-aed5-eddb18540f41\")"
  },
  {
    "label": "TrackWrite()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "TrackWrite(UINT Subresource, _In_opt_ const D3D12_RANGE *pWrittenRange)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12ManualWriteTrackingResourceVtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12ManualWriteTrackingResource * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12ManualWriteTrackingResource * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12ManualWriteTrackingResource * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12ManualWriteTrackingResource, TrackWrite) void ( STDMETHODCALLTYPE *TrackWrite )( ID3D12ManualWriteTrackingResource * This, UINT Subresource, _In_opt_ const D3D12_RANGE *pWrittenRange)"
  },
  {
    "label": "ID3D12ManualWriteTrackingResource_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12ManualWriteTrackingResourceVtbl ; interface ID3D12ManualWriteTrackingResource { CONST_VTBL struct ID3D12ManualWriteTrackingResourceVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12ManualWriteTrackingResource_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12ManualWriteTrackingResource_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12ManualWriteTrackingResource_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12ManualWriteTrackingResource_TrackWrite(This,Subresource,pWrittenRange) \\ ( (This)->lpVtbl -> TrackWrite(This,Subresource,pWrittenRange))"
  },
  {
    "label": "D3D12_MESSAGE_CATEGORY_MISCELLANEOUS()",
    "kind": "Method",
    "detail": "Function (D3D12_MESSAGE_CATEGORY_APPLICATION_DEFINED = 0,)",
    "insertText": "D3D12_MESSAGE_CATEGORY_MISCELLANEOUS(D3D12_MESSAGE_CATEGORY_APPLICATION_DEFINED + 1 ) , D3D12_MESSAGE_CATEGORY_INITIALIZATION = ( D3D12_MESSAGE_CATEGORY_MISCELLANEOUS + 1 ) , D3D12_MESSAGE_CATEGORY_CLEANUP = ( D3D12_MESSAGE_CATEGORY_INITIALIZATION + 1 ) , D3D12_MESSAGE_CATEGORY_COMPILATION = ( D3D12_MESSAGE_CATEGORY_CLEANUP + 1 ) , D3D12_MESSAGE_CATEGORY_STATE_CREATION = ( D3D12_MESSAGE_CATEGORY_COMPILATION + 1 ) , D3D12_MESSAGE_CATEGORY_STATE_SETTING = ( D3D12_MESSAGE_CATEGORY_STATE_CREATION + 1 ) , D3D12_MESSAGE_CATEGORY_STATE_GETTING = ( D3D12_MESSAGE_CATEGORY_STATE_SETTING + 1 ) , D3D12_MESSAGE_CATEGORY_RESOURCE_MANIPULATION = ( D3D12_MESSAGE_CATEGORY_STATE_GETTING + 1 ) , D3D12_MESSAGE_CATEGORY_EXECUTION = ( D3D12_MESSAGE_CATEGORY_RESOURCE_MANIPULATION + 1 ) , D3D12_MESSAGE_CATEGORY_SHADER = ( D3D12_MESSAGE_CATEGORY_EXECUTION + 1)"
  },
  {
    "label": "D3D12_MESSAGE_SEVERITY_ERROR()",
    "kind": "Method",
    "detail": "Function (typedef enum D3D12_MESSAGE_SEVERITY { D3D12_MESSAGE_SEVERITY_CORRUPTION = 0,)",
    "insertText": "D3D12_MESSAGE_SEVERITY_ERROR(D3D12_MESSAGE_SEVERITY_CORRUPTION + 1 ) , D3D12_MESSAGE_SEVERITY_WARNING = ( D3D12_MESSAGE_SEVERITY_ERROR + 1 ) , D3D12_MESSAGE_SEVERITY_INFO = ( D3D12_MESSAGE_SEVERITY_WARNING + 1 ) , D3D12_MESSAGE_SEVERITY_MESSAGE = ( D3D12_MESSAGE_SEVERITY_INFO + 1)"
  },
  {
    "label": "D3D12_MESSAGE_ID_D3D12_MESSAGES_END()",
    "kind": "Method",
    "detail": "Function (typedef enum D3D12_MESSAGE_ID { D3D12_MESSAGE_ID_UNKNOWN = 0,D3D12_MESSAGE_ID_STRING_FROM_APPLICATION = 1,D3D12_MESSAGE_ID_CORRUPTED_THIS = 2,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER1 = 3,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER2 = 4,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER3 = 5,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER4 = 6,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER5 = 7,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER6 = 8,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER7 = 9,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER8 = 1 0,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER9 = 1 1,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER10 = 1 2,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER11 = 1 3,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER12 = 1 4,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER13 = 1 5,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER14 = 1 6,D3D12_MESSAGE_ID_CORRUPTED_PARAMETER15 = 1 7,D3D12_MESSAGE_ID_CORRUPTED_MULTITHREADING = 1 8,D3D12_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY = 1 9,D3D12_MESSAGE_ID_GETPRIVATEDATA_MOREDATA = 2 0,D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA = 2 1,D3D12_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS = 2 4,D3D12_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY = 2 5,D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT = 2 6,D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC = 2 7,D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT = 2 8,D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANESLICE = 2 9,D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANESLICE = 3 0,D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS = 3 1,D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE = 3 2,D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT = 3 5,D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT = 3 6,D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC = 3 7,D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT = 3 8,D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANESLICE = 3 9,D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANESLICE = 4 0,D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS = 4 1,D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE = 4 2,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT = 4 5,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC = 4 6,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT = 4 7,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS = 4 8,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE = 4 9,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY = 5 2,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS = 5 3,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT = 5 4,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT = 5 5,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT = 5 6,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS = 5 7,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH = 5 8,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE = 5 9,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE = 6 0,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT = 6 1,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC = 6 2,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE = 6 3,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC = 6 4,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT = 6 5,D3D12_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY = 6 6,D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE = 6 7,D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE = 6 8,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY = 6 9,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE = 7 0,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE = 7 1,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY = 7 2,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE = 7 3,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE = 7 4,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES = 7 5,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED = 7 6,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED = 7 9,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT = 8 0,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT = 8 1,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT = 8 2,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT = 8 3,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION = 8 4,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT = 8 5,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE = 8 6,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC = 8 7,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH = 8 8,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS = 8 9,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX = 9 0,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE = 9 1,D3D12_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY = 9 2,D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE = 9 3,D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE = 9 4,D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE = 9 5,D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE = 9 6,D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP = 9 7,D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS = 9 8,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK = 1 0 0,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC = 1 0 1,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP = 1 0 2,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP = 1 0 3,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP = 1 0 4,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC = 1 0 5,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP = 1 0 6,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP = 1 0 7,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP = 1 0 8,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC = 1 0 9,D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND = 1 1 1,D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND = 1 1 2,D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP = 1 1 3,D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA = 1 1 4,D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA = 1 1 5,D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA = 1 1 6,D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK = 1 1 7,D3D12_MESSAGE_ID_GET_PROGRAM_IDENTIFIER_ERROR = 1 1 8,D3D12_MESSAGE_ID_GET_WORK_GRAPH_PROPERTIES_ERROR = 1 1 9,D3D12_MESSAGE_ID_SET_PROGRAM_ERROR = 1 2 0,D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID = 1 3 5,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_NOT_SET = 2 0 0,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_MISMATCH = 2 0 1,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_NOT_SET = 2 0 2,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL = 2 0 9,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_TOO_SMALL = 2 1 0,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_NOT_SET = 2 1 1,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_FORMAT_INVALID = 2 1 2,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_TOO_SMALL = 2 1 3,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INVALID_PRIMITIVETOPOLOGY = 2 1 9,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_STRIDE_UNALIGNED = 2 2 1,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_OFFSET_UNALIGNED = 2 2 2,D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT = 2 3 2,D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT = 2 3 3,D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT = 2 3 4,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC = 2 3 9,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC = 2 4 0,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH = 2 4 5,D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT = 2 5 3,D3D12_MESSAGE_ID_LIVE_OBJECT_SUMMARY = 2 5 5,D3D12_MESSAGE_ID_LIVE_DEVICE = 2 7 4,D3D12_MESSAGE_ID_LIVE_SWAPCHAIN = 2 7 5,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS = 2 7 6,D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE = 2 7 7,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE = 2 7 8,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER = 2 8 0,D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE = 2 8 3,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM = 2 8 4,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES = 2 8 5,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES = 2 8 6,D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES = 2 8 7,D3D12_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY = 2 8 9,D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE = 2 9 0,D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE = 2 9 1,D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE = 2 9 2,D3D12_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY = 2 9 4,D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE = 2 9 5,D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE = 2 9 6,D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE = 2 9 7,D3D12_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED = 3 1 0,D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE = 3 1 8,D3D12_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY = 3 2 1,D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE = 3 2 2,D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE = 3 2 3,D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 3 3 1,D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 3 3 2,D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 3 3 3,D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 3 3 4,D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED = 3 3 5,D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 3 3 6,D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED = 3 3 7,D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE = 3 4 0,D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC = 3 4 1,D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT = 3 4 2,D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANESLICE = 3 4 3,D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANESLICE = 3 4 4,D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS = 3 4 5,D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT = 3 4 6,D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS = 3 5 4,D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT = 4 0 1,D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS = 4 0 3,D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 4 1 0,D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 4 1 2,D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 4 1 4,D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 4 1 6,D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED = 4 1 8,D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 4 2 0,D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 4 2 2,D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED = 4 2 5,D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED = 4 2 6,D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED = 4 2 7,D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED = 4 2 8,D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED = 4 2 9,D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED = 4 3 0,D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED = 4 3 1,D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT = 4 4 7,D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT = 4 4 8,D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER = 4 9 3,D3D12_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER = 4 9 4,D3D12_MESSAGE_ID_CREATEDEVICE_INVALIDARGS = 5 0 6,D3D12_MESSAGE_ID_CREATEDEVICE_WARNING = 5 0 7,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_TYPE = 5 1 9,D3D12_MESSAGE_ID_RESOURCE_BARRIER_NULL_POINTER = 5 2 0,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SUBRESOURCE = 5 2 1,D3D12_MESSAGE_ID_RESOURCE_BARRIER_RESERVED_BITS = 5 2 2,D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISSING_BIND_FLAGS = 5 2 3,D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_MISC_FLAGS = 5 2 4,D3D12_MESSAGE_ID_RESOURCE_BARRIER_MATCHING_STATES = 5 2 5,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINATION = 5 2 6,D3D12_MESSAGE_ID_RESOURCE_BARRIER_BEFORE_AFTER_MISMATCH = 5 2 7,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_RESOURCE = 5 2 8,D3D12_MESSAGE_ID_RESOURCE_BARRIER_SAMPLE_COUNT = 5 2 9,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS = 5 3 0,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINED_FLAGS = 5 3 1,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS_FOR_FORMAT = 5 3 2,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SPLIT_BARRIER = 5 3 3,D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_END = 5 3 4,D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_BEGIN = 5 3 5,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAG = 5 3 6,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMMAND_LIST_TYPE = 5 3 7,D3D12_MESSAGE_ID_INVALID_SUBRESOURCE_STATE = 5 3 8,D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CONTENTION = 5 4 0,D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET = 5 4 1,D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET_BUNDLE = 5 4 2,D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CANNOT_RESET = 5 4 3,D3D12_MESSAGE_ID_COMMAND_LIST_OPEN = 5 4 4,D3D12_MESSAGE_ID_INVALID_BUNDLE_API = 5 4 6,D3D12_MESSAGE_ID_COMMAND_LIST_CLOSED = 5 4 7,D3D12_MESSAGE_ID_WRONG_COMMAND_ALLOCATOR_TYPE = 5 4 9,D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_SYNC = 5 5 2,D3D12_MESSAGE_ID_COMMAND_LIST_SYNC = 5 5 3,D3D12_MESSAGE_ID_SET_DESCRIPTOR_HEAP_INVALID = 5 5 4,D3D12_MESSAGE_ID_CREATE_COMMANDQUEUE = 5 5 7,D3D12_MESSAGE_ID_CREATE_COMMANDALLOCATOR = 5 5 8,D3D12_MESSAGE_ID_CREATE_PIPELINESTATE = 5 5 9,D3D12_MESSAGE_ID_CREATE_COMMANDLIST12 = 5 6 0,D3D12_MESSAGE_ID_CREATE_RESOURCE = 5 6 2,D3D12_MESSAGE_ID_CREATE_DESCRIPTORHEAP = 5 6 3,D3D12_MESSAGE_ID_CREATE_ROOTSIGNATURE = 5 6 4,D3D12_MESSAGE_ID_CREATE_LIBRARY = 5 6 5,D3D12_MESSAGE_ID_CREATE_HEAP = 5 6 6,D3D12_MESSAGE_ID_CREATE_MONITOREDFENCE = 5 6 7,D3D12_MESSAGE_ID_CREATE_QUERYHEAP = 5 6 8,D3D12_MESSAGE_ID_CREATE_COMMANDSIGNATURE = 5 6 9,D3D12_MESSAGE_ID_LIVE_COMMANDQUEUE = 5 7 0,D3D12_MESSAGE_ID_LIVE_COMMANDALLOCATOR = 5 7 1,D3D12_MESSAGE_ID_LIVE_PIPELINESTATE = 5 7 2,D3D12_MESSAGE_ID_LIVE_COMMANDLIST12 = 5 7 3,D3D12_MESSAGE_ID_LIVE_RESOURCE = 5 7 5,D3D12_MESSAGE_ID_LIVE_DESCRIPTORHEAP = 5 7 6,D3D12_MESSAGE_ID_LIVE_ROOTSIGNATURE = 5 7 7,D3D12_MESSAGE_ID_LIVE_LIBRARY = 5 7 8,D3D12_MESSAGE_ID_LIVE_HEAP = 5 7 9,D3D12_MESSAGE_ID_LIVE_MONITOREDFENCE = 5 8 0,D3D12_MESSAGE_ID_LIVE_QUERYHEAP = 5 8 1,D3D12_MESSAGE_ID_LIVE_COMMANDSIGNATURE = 5 8 2,D3D12_MESSAGE_ID_DESTROY_COMMANDQUEUE = 5 8 3,D3D12_MESSAGE_ID_DESTROY_COMMANDALLOCATOR = 5 8 4,D3D12_MESSAGE_ID_DESTROY_PIPELINESTATE = 5 8 5,D3D12_MESSAGE_ID_DESTROY_COMMANDLIST12 = 5 8 6,D3D12_MESSAGE_ID_DESTROY_RESOURCE = 5 8 8,D3D12_MESSAGE_ID_DESTROY_DESCRIPTORHEAP = 5 8 9,D3D12_MESSAGE_ID_DESTROY_ROOTSIGNATURE = 5 9 0,D3D12_MESSAGE_ID_DESTROY_LIBRARY = 5 9 1,D3D12_MESSAGE_ID_DESTROY_HEAP = 5 9 2,D3D12_MESSAGE_ID_DESTROY_MONITOREDFENCE = 5 9 3,D3D12_MESSAGE_ID_DESTROY_QUERYHEAP = 5 9 4,D3D12_MESSAGE_ID_DESTROY_COMMANDSIGNATURE = 5 9 5,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONS = 5 9 7,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMISCFLAGS = 5 9 9,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDARG_RETURN = 6 0 2,D3D12_MESSAGE_ID_CREATERESOURCE_OUTOFMEMORY_RETURN = 6 0 3,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDESC = 6 0 4,D3D12_MESSAGE_ID_POSSIBLY_INVALID_SUBRESOURCE_STATE = 6 0 7,D3D12_MESSAGE_ID_INVALID_USE_OF_NON_RESIDENT_RESOURCE = 6 0 8,D3D12_MESSAGE_ID_POSSIBLE_INVALID_USE_OF_NON_RESIDENT_RESOURCE = 6 0 9,D3D12_MESSAGE_ID_BUNDLE_PIPELINE_STATE_MISMATCH = 6 1 0,D3D12_MESSAGE_ID_PRIMITIVE_TOPOLOGY_MISMATCH_PIPELINE_STATE = 6 1 1,D3D12_MESSAGE_ID_RENDER_TARGET_FORMAT_MISMATCH_PIPELINE_STATE = 6 1 3,D3D12_MESSAGE_ID_RENDER_TARGET_SAMPLE_DESC_MISMATCH_PIPELINE_STATE = 6 1 4,D3D12_MESSAGE_ID_DEPTH_STENCIL_FORMAT_MISMATCH_PIPELINE_STATE = 6 1 5,D3D12_MESSAGE_ID_DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_PIPELINE_STATE = 6 1 6,D3D12_MESSAGE_ID_CREATESHADER_INVALIDBYTECODE = 6 2 2,D3D12_MESSAGE_ID_CREATEHEAP_NULLDESC = 6 2 3,D3D12_MESSAGE_ID_CREATEHEAP_INVALIDSIZE = 6 2 4,D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDHEAPTYPE = 6 2 5,D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES = 6 2 6,D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMEMORYPOOL = 6 2 7,D3D12_MESSAGE_ID_CREATEHEAP_INVALIDPROPERTIES = 6 2 8,D3D12_MESSAGE_ID_CREATEHEAP_INVALIDALIGNMENT = 6 2 9,D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMISCFLAGS = 6 3 0,D3D12_MESSAGE_ID_CREATEHEAP_INVALIDMISCFLAGS = 6 3 1,D3D12_MESSAGE_ID_CREATEHEAP_INVALIDARG_RETURN = 6 3 2,D3D12_MESSAGE_ID_CREATEHEAP_OUTOFMEMORY_RETURN = 6 3 3,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAPPROPERTIES = 6 3 4,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPTYPE = 6 3 5,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES = 6 3 6,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDMEMORYPOOL = 6 3 7,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPPROPERTIES = 6 3 8,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPMISCFLAGS = 6 3 9,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPMISCFLAGS = 6 4 0,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDARG_RETURN = 6 4 1,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_OUTOFMEMORY_RETURN = 6 4 2,D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_UNRECOGNIZEDHEAPTYPE = 6 4 3,D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_INVALIDHEAPTYPE = 6 4 4,D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_INVALID_DESC = 6 4 5,D3D12_MESSAGE_ID_INVALID_DESCRIPTOR_HANDLE = 6 4 6,D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE = 6 4 7,D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_RESOURCE = 6 4 9,D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_DESC = 6 5 0,D3D12_MESSAGE_ID_CREATE_UNORDEREDACCESS_VIEW_INVALID_COUNTER_USAGE = 6 5 2,D3D12_MESSAGE_ID_COPY_DESCRIPTORS_INVALID_RANGES = 6 5 3,D3D12_MESSAGE_ID_COPY_DESCRIPTORS_WRITE_ONLY_DESCRIPTOR = 6 5 4,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RTV_FORMAT_NOT_UNKNOWN = 6 5 5,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_RENDER_TARGET_COUNT = 6 5 6,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VERTEX_SHADER_NOT_SET = 6 5 7,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_NOT_SET = 6 5 8,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_HS_DS_SIGNATURE_MISMATCH = 6 5 9,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERINDEX = 6 6 0,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_COMPONENTTYPE = 6 6 1,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERMASK = 6 6 2,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SYSTEMVALUE = 6 6 3,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS = 6 6 4,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_MINPRECISION = 6 6 5,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND = 6 6 6,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_XOR_DS_MISMATCH = 6 6 7,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH = 6 6 8,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_CONTROL_POINT_COUNT_MISMATCH = 6 6 9,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_TESSELLATOR_DOMAIN_MISMATCH = 6 7 0,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN = 6 7 1,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_FORCED_SAMPLE_COUNT = 6 7 2,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_PRIMITIVETOPOLOGY = 6 7 3,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SYSTEMVALUE = 6 7 4,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0 = 6 7 5,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING = 6 7 6,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_TYPE_MISMATCH = 6 7 7,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS = 6 7 8,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RENDERTARGETVIEW_NOT_SET = 6 7 9,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DEPTHSTENCILVIEW_NOT_SET = 6 8 0,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_INPUT_PRIMITIVE_MISMATCH = 6 8 1,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_POSITION_NOT_PRESENT = 6 8 2,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE_FLAGS = 6 8 3,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_INDEX_BUFFER_PROPERTIES = 6 8 4,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SAMPLE_DESC = 6 8 5,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_ROOT_SIGNATURE_MISMATCH = 6 8 6,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DS_ROOT_SIGNATURE_MISMATCH = 6 8 7,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VS_ROOT_SIGNATURE_MISMATCH = 6 8 8,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_ROOT_SIGNATURE_MISMATCH = 6 8 9,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_ROOT_SIGNATURE_MISMATCH = 6 9 0,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE = 6 9 1,D3D12_MESSAGE_ID_EXECUTE_BUNDLE_OPEN_BUNDLE = 6 9 2,D3D12_MESSAGE_ID_EXECUTE_BUNDLE_DESCRIPTOR_HEAP_MISMATCH = 6 9 3,D3D12_MESSAGE_ID_EXECUTE_BUNDLE_TYPE = 6 9 4,D3D12_MESSAGE_ID_DRAW_EMPTY_SCISSOR_RECTANGLE = 6 9 5,D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_BLOB_NOT_FOUND = 6 9 6,D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_DESERIALIZE_FAILED = 6 9 7,D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_INVALID_CONFIGURATION = 6 9 8,D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_SUPPORTED_ON_DEVICE = 6 9 9,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLRESOURCEPROPERTIES = 7 0 0,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAP = 7 0 1,D3D12_MESSAGE_ID_GETRESOURCEALLOCATIONINFO_INVALIDRDESCS = 7 0 2,D3D12_MESSAGE_ID_MAKERESIDENT_NULLOBJECTARRAY = 7 0 3,D3D12_MESSAGE_ID_EVICT_NULLOBJECTARRAY = 7 0 5,D3D12_MESSAGE_ID_SET_DESCRIPTOR_TABLE_INVALID = 7 0 8,D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_INVALID = 7 0 9,D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_BUFFER_VIEW_INVALID = 7 1 0,D3D12_MESSAGE_ID_SET_ROOT_SHADER_RESOURCE_VIEW_INVALID = 7 1 1,D3D12_MESSAGE_ID_SET_ROOT_UNORDERED_ACCESS_VIEW_INVALID = 7 1 2,D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID_DESC = 7 1 3,D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID_DESC = 7 1 5,D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID_DESC = 7 1 7,D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDDIMENSIONALITY = 7 1 8,D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDLAYOUT = 7 1 9,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONALITY = 7 2 0,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDALIGNMENT = 7 2 1,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMIPLEVELS = 7 2 2,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDSAMPLEDESC = 7 2 3,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDLAYOUT = 7 2 4,D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID = 7 2 5,D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID = 7 2 6,D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID = 7 2 7,D3D12_MESSAGE_ID_SET_RENDER_TARGETS_INVALID = 7 2 8,D3D12_MESSAGE_ID_CREATEQUERY_HEAP_INVALID_PARAMETERS = 7 2 9,D3D12_MESSAGE_ID_BEGIN_END_QUERY_INVALID_PARAMETERS = 7 3 1,D3D12_MESSAGE_ID_CLOSE_COMMAND_LIST_OPEN_QUERY = 7 3 2,D3D12_MESSAGE_ID_RESOLVE_QUERY_DATA_INVALID_PARAMETERS = 7 3 3,D3D12_MESSAGE_ID_SET_PREDICATION_INVALID_PARAMETERS = 7 3 4,D3D12_MESSAGE_ID_TIMESTAMPS_NOT_SUPPORTED = 7 3 5,D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDFORMAT = 7 3 7,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDFORMAT = 7 3 8,D3D12_MESSAGE_ID_GETCOPYABLEFOOTPRINTS_INVALIDSUBRESOURCERANGE = 7 3 9,D3D12_MESSAGE_ID_GETCOPYABLEFOOTPRINTS_INVALIDBASEOFFSET = 7 4 0,D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDSUBRESOURCERANGE = 7 3 9,D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDBASEOFFSET = 7 4 0,D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_HEAP = 7 4 1,D3D12_MESSAGE_ID_CREATE_SAMPLER_INVALID = 7 4 2,D3D12_MESSAGE_ID_CREATECOMMANDSIGNATURE_INVALID = 7 4 3,D3D12_MESSAGE_ID_EXECUTE_INDIRECT_INVALID_PARAMETERS = 7 4 4,D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_RESOURCE_DIMENSION = 7 4 5,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUE = 8 1 5,D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDCLEARVALUEFORMAT = 8 1 6,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUEFORMAT = 8 1 7,D3D12_MESSAGE_ID_CREATERESOURCE_CLEARVALUEDENORMFLUSH = 8 1 8,D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_MISMATCHINGCLEARVALUE = 8 2 0,D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_MISMATCHINGCLEARVALUE = 8 2 1,D3D12_MESSAGE_ID_MAP_INVALIDHEAP = 8 2 2,D3D12_MESSAGE_ID_UNMAP_INVALIDHEAP = 8 2 3,D3D12_MESSAGE_ID_MAP_INVALIDRESOURCE = 8 2 4,D3D12_MESSAGE_ID_UNMAP_INVALIDRESOURCE = 8 2 5,D3D12_MESSAGE_ID_MAP_INVALIDSUBRESOURCE = 8 2 6,D3D12_MESSAGE_ID_UNMAP_INVALIDSUBRESOURCE = 8 2 7,D3D12_MESSAGE_ID_MAP_INVALIDRANGE = 8 2 8,D3D12_MESSAGE_ID_UNMAP_INVALIDRANGE = 8 2 9,D3D12_MESSAGE_ID_MAP_INVALIDDATAPOINTER = 8 3 2,D3D12_MESSAGE_ID_MAP_INVALIDARG_RETURN = 8 3 3,D3D12_MESSAGE_ID_MAP_OUTOFMEMORY_RETURN = 8 3 4,D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_BUNDLENOTSUPPORTED = 8 3 5,D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_COMMANDLISTMISMATCH = 8 3 6,D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_OPENCOMMANDLIST = 8 3 7,D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_FAILEDCOMMANDLIST = 8 3 8,D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLDST = 8 3 9,D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDDSTRESOURCEDIMENSION = 8 4 0,D3D12_MESSAGE_ID_COPYBUFFERREGION_DSTRANGEOUTOFBOUNDS = 8 4 1,D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLSRC = 8 4 2,D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDSRCRESOURCEDIMENSION = 8 4 3,D3D12_MESSAGE_ID_COPYBUFFERREGION_SRCRANGEOUTOFBOUNDS = 8 4 4,D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDCOPYFLAGS = 8 4 5,D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLDST = 8 4 6,D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTTYPE = 8 4 7,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCEDIMENSION = 8 4 8,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCE = 8 4 9,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTSUBRESOURCE = 8 5 0,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTOFFSET = 8 5 1,D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTFORMAT = 8 5 2,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTFORMAT = 8 5 3,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDIMENSIONS = 8 5 4,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTROWPITCH = 8 5 5,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTPLACEMENT = 8 5 6,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDSPLACEDFOOTPRINTFORMAT = 8 5 7,D3D12_MESSAGE_ID_COPYTEXTUREREGION_DSTREGIONOUTOFBOUNDS = 8 5 8,D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLSRC = 8 5 9,D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCTYPE = 8 6 0,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCEDIMENSION = 8 6 1,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCE = 8 6 2,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCSUBRESOURCE = 8 6 3,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCOFFSET = 8 6 4,D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCFORMAT = 8 6 5,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCFORMAT = 8 6 6,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDIMENSIONS = 8 6 7,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCROWPITCH = 8 6 8,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCPLACEMENT = 8 6 9,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDSPLACEDFOOTPRINTFORMAT = 8 7 0,D3D12_MESSAGE_ID_COPYTEXTUREREGION_SRCREGIONOUTOFBOUNDS = 8 7 1,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTCOORDINATES = 8 7 2,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCBOX = 8 7 3,D3D12_MESSAGE_ID_COPYTEXTUREREGION_FORMATMISMATCH = 8 7 4,D3D12_MESSAGE_ID_COPYTEXTUREREGION_EMPTYBOX = 8 7 5,D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDCOPYFLAGS = 8 7 6,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SUBRESOURCE_INDEX = 8 7 7,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_FORMAT = 8 7 8,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_MISMATCH = 8 7 9,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SAMPLE_COUNT = 8 8 0,D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_INVALID_SHADER = 8 8 1,D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_CS_ROOT_SIGNATURE_MISMATCH = 8 8 2,D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_MISSING_ROOT_SIGNATURE = 8 8 3,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALIDCACHEDBLOB = 8 8 4,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBADAPTERMISMATCH = 8 8 5,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDRIVERVERSIONMISMATCH = 8 8 6,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDESCMISMATCH = 8 8 7,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBIGNORED = 8 8 8,D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDHEAP = 8 8 9,D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDRESOURCE = 8 9 0,D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDBOX = 8 9 1,D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDSUBRESOURCE = 8 9 2,D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_EMPTYBOX = 8 9 3,D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDHEAP = 8 9 4,D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDRESOURCE = 8 9 5,D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDBOX = 8 9 6,D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDSUBRESOURCE = 8 9 7,D3D12_MESSAGE_ID_READFROMSUBRESOURCE_EMPTYBOX = 8 9 8,D3D12_MESSAGE_ID_TOO_MANY_NODES_SPECIFIED = 8 9 9,D3D12_MESSAGE_ID_INVALID_NODE_INDEX = 9 0 0,D3D12_MESSAGE_ID_GETHEAPPROPERTIES_INVALIDRESOURCE = 9 0 1,D3D12_MESSAGE_ID_NODE_MASK_MISMATCH = 9 0 2,D3D12_MESSAGE_ID_COMMAND_LIST_OUTOFMEMORY = 9 0 3,D3D12_MESSAGE_ID_COMMAND_LIST_MULTIPLE_SWAPCHAIN_BUFFER_REFERENCES = 9 0 4,D3D12_MESSAGE_ID_COMMAND_LIST_TOO_MANY_SWAPCHAIN_REFERENCES = 9 0 5,D3D12_MESSAGE_ID_COMMAND_QUEUE_TOO_MANY_SWAPCHAIN_REFERENCES = 9 0 6,D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_WRONGSWAPCHAINBUFFERREFERENCE = 9 0 7,D3D12_MESSAGE_ID_COMMAND_LIST_SETRENDERTARGETS_INVALIDNUMRENDERTARGETS = 9 0 8,D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_TYPE = 9 0 9,D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_FLAGS = 9 1 0,D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFLAGS = 9 1 1,D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFORMAT = 9 1 2,D3D12_MESSAGE_ID_CREATESHAREDHEAP_INVALIDFLAGS = 9 1 3,D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_UNRECOGNIZEDPROPERTIES = 9 1 4,D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDSIZE = 9 1 5,D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDOBJECT = 9 1 6,D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDOBJECT = 9 1 7,D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDKEY = 9 1 8,D3D12_MESSAGE_ID_KEYEDMUTEX_WRONGSTATE = 9 1 9,D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_PRIORITY = 9 2 0,D3D12_MESSAGE_ID_OBJECT_DELETED_WHILE_STILL_IN_USE = 9 2 1,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_FLAGS = 9 2 2,D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_HAS_NO_RESOURCE = 9 2 3,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RENDER_TARGET_DELETED = 9 2 4,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_ALL_RENDER_TARGETS_HAVE_UNKNOWN_FORMAT = 9 2 5,D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_INTERSECTS_MULTIPLE_BUFFERS = 9 2 6,D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_GPU_WRITTEN_READBACK_RESOURCE_MAPPED = 9 2 7,D3D12_MESSAGE_ID_UNMAP_RANGE_NOT_EMPTY = 9 2 9,D3D12_MESSAGE_ID_MAP_INVALID_NULLRANGE = 9 3 0,D3D12_MESSAGE_ID_UNMAP_INVALID_NULLRANGE = 9 3 1,D3D12_MESSAGE_ID_NO_GRAPHICS_API_SUPPORT = 9 3 2,D3D12_MESSAGE_ID_NO_COMPUTE_API_SUPPORT = 9 3 3,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_FLAGS_NOT_SUPPORTED = 9 3 4,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_ROOT_ARGUMENT_UNINITIALIZED = 9 3 5,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_HEAP_INDEX_OUT_OF_BOUNDS = 9 3 6,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_TABLE_REGISTER_INDEX_OUT_OF_BOUNDS = 9 3 7,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_UNINITIALIZED = 9 3 8,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_TYPE_MISMATCH = 9 3 9,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_SRV_RESOURCE_DIMENSION_MISMATCH = 9 4 0,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_UAV_RESOURCE_DIMENSION_MISMATCH = 9 4 1,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INCOMPATIBLE_RESOURCE_STATE = 9 4 2,D3D12_MESSAGE_ID_COPYRESOURCE_NULLDST = 9 4 3,D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDDSTRESOURCE = 9 4 4,D3D12_MESSAGE_ID_COPYRESOURCE_NULLSRC = 9 4 5,D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSRCRESOURCE = 9 4 6,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_NULLDST = 9 4 7,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALIDDSTRESOURCE = 9 4 8,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_NULLSRC = 9 4 9,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALIDSRCRESOURCE = 9 5 0,D3D12_MESSAGE_ID_PIPELINE_STATE_TYPE_MISMATCH = 9 5 1,D3D12_MESSAGE_ID_COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_NOT_SET = 9 5 2,D3D12_MESSAGE_ID_COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_MISMATCH = 9 5 3,D3D12_MESSAGE_ID_RESOURCE_BARRIER_ZERO_BARRIERS = 9 5 4,D3D12_MESSAGE_ID_BEGIN_END_EVENT_MISMATCH = 9 5 5,D3D12_MESSAGE_ID_RESOURCE_BARRIER_POSSIBLE_BEFORE_AFTER_MISMATCH = 9 5 6,D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_BEGIN_END = 9 5 7,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INVALID_RESOURCE = 9 5 8,D3D12_MESSAGE_ID_USE_OF_ZERO_REFCOUNT_OBJECT = 9 5 9,D3D12_MESSAGE_ID_OBJECT_EVICTED_WHILE_STILL_IN_USE = 9 6 0,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_ROOT_DESCRIPTOR_ACCESS_OUT_OF_BOUNDS = 9 6 1,D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_INVALIDLIBRARYBLOB = 9 6 2,D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_DRIVERVERSIONMISMATCH = 9 6 3,D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_ADAPTERVERSIONMISMATCH = 9 6 4,D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_UNSUPPORTED = 9 6 5,D3D12_MESSAGE_ID_CREATE_PIPELINELIBRARY = 9 6 6,D3D12_MESSAGE_ID_LIVE_PIPELINELIBRARY = 9 6 7,D3D12_MESSAGE_ID_DESTROY_PIPELINELIBRARY = 9 6 8,D3D12_MESSAGE_ID_STOREPIPELINE_NONAME = 9 6 9,D3D12_MESSAGE_ID_STOREPIPELINE_DUPLICATENAME = 9 7 0,D3D12_MESSAGE_ID_LOADPIPELINE_NAMENOTFOUND = 9 7 1,D3D12_MESSAGE_ID_LOADPIPELINE_INVALIDDESC = 9 7 2,D3D12_MESSAGE_ID_PIPELINELIBRARY_SERIALIZE_NOTENOUGHMEMORY = 9 7 3,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_RT_OUTPUT_MISMATCH = 9 7 4,D3D12_MESSAGE_ID_SETEVENTONMULTIPLEFENCECOMPLETION_INVALIDFLAGS = 9 7 5,D3D12_MESSAGE_ID_CREATE_QUEUE_VIDEO_NOT_SUPPORTED = 9 7 6,D3D12_MESSAGE_ID_CREATE_COMMAND_ALLOCATOR_VIDEO_NOT_SUPPORTED = 9 7 7,D3D12_MESSAGE_ID_CREATEQUERY_HEAP_VIDEO_DECODE_STATISTICS_NOT_SUPPORTED = 9 7 8,D3D12_MESSAGE_ID_CREATE_VIDEODECODECOMMANDLIST = 9 7 9,D3D12_MESSAGE_ID_CREATE_VIDEODECODER = 9 8 0,D3D12_MESSAGE_ID_CREATE_VIDEODECODESTREAM = 9 8 1,D3D12_MESSAGE_ID_LIVE_VIDEODECODECOMMANDLIST = 9 8 2,D3D12_MESSAGE_ID_LIVE_VIDEODECODER = 9 8 3,D3D12_MESSAGE_ID_LIVE_VIDEODECODESTREAM = 9 8 4,D3D12_MESSAGE_ID_DESTROY_VIDEODECODECOMMANDLIST = 9 8 5,D3D12_MESSAGE_ID_DESTROY_VIDEODECODER = 9 8 6,D3D12_MESSAGE_ID_DESTROY_VIDEODECODESTREAM = 9 8 7,D3D12_MESSAGE_ID_DECODE_FRAME_INVALID_PARAMETERS = 9 8 8,D3D12_MESSAGE_ID_DEPRECATED_API = 9 8 9,D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_COMMAND_LIST_TYPE = 9 9 0,D3D12_MESSAGE_ID_COMMAND_LIST_DESCRIPTOR_TABLE_NOT_SET = 9 9 1,D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_CONSTANT_BUFFER_VIEW_NOT_SET = 9 9 2,D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_SHADER_RESOURCE_VIEW_NOT_SET = 9 9 3,D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_UNORDERED_ACCESS_VIEW_NOT_SET = 9 9 4,D3D12_MESSAGE_ID_DISCARD_INVALID_SUBRESOURCE_RANGE = 9 9 5,D3D12_MESSAGE_ID_DISCARD_ONE_SUBRESOURCE_FOR_MIPS_WITH_RECTS = 9 9 6,D3D12_MESSAGE_ID_DISCARD_NO_RECTS_FOR_NON_TEXTURE2D = 9 9 7,D3D12_MESSAGE_ID_COPY_ON_SAME_SUBRESOURCE = 9 9 8,D3D12_MESSAGE_ID_SETRESIDENCYPRIORITY_INVALID_PAGEABLE = 9 9 9,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_UNSUPPORTED = 1 0 0 0,D3D12_MESSAGE_ID_STATIC_DESCRIPTOR_INVALID_DESCRIPTOR_CHANGE = 1 0 0 1,D3D12_MESSAGE_ID_DATA_STATIC_DESCRIPTOR_INVALID_DATA_CHANGE = 1 0 0 2,D3D12_MESSAGE_ID_DATA_STATIC_WHILE_SET_AT_EXECUTE_DESCRIPTOR_INVALID_DATA_CHANGE = 1 0 0 3,D3D12_MESSAGE_ID_EXECUTE_BUNDLE_STATIC_DESCRIPTOR_DATA_STATIC_NOT_SET = 1 0 0 4,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_RESOURCE_ACCESS_OUT_OF_BOUNDS = 1 0 0 5,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_SAMPLER_MODE_MISMATCH = 1 0 0 6,D3D12_MESSAGE_ID_CREATE_FENCE_INVALID_FLAGS = 1 0 0 7,D3D12_MESSAGE_ID_RESOURCE_BARRIER_DUPLICATE_SUBRESOURCE_TRANSITIONS = 1 0 0 8,D3D12_MESSAGE_ID_SETRESIDENCYPRIORITY_INVALID_PRIORITY = 1 0 0 9,D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_LARGE_NUM_DESCRIPTORS = 1 0 1 3,D3D12_MESSAGE_ID_BEGIN_EVENT = 1 0 1 4,D3D12_MESSAGE_ID_END_EVENT = 1 0 1 5,D3D12_MESSAGE_ID_CREATEDEVICE_DEBUG_LAYER_STARTUP_OPTIONS = 1 0 1 6,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_DEPTHBOUNDSTEST_UNSUPPORTED = 1 0 1 7,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_DUPLICATE_SUBOBJECT = 1 0 1 8,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_UNKNOWN_SUBOBJECT = 1 0 1 9,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_ZERO_SIZE_STREAM = 1 0 2 0,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_STREAM = 1 0 2 1,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CANNOT_DEDUCE_TYPE = 1 0 2 2,D3D12_MESSAGE_ID_COMMAND_LIST_STATIC_DESCRIPTOR_RESOURCE_DIMENSION_MISMATCH = 1 0 2 3,D3D12_MESSAGE_ID_CREATE_COMMAND_QUEUE_INSUFFICIENT_PRIVILEGE_FOR_GLOBAL_REALTIME = 1 0 2 4,D3D12_MESSAGE_ID_CREATE_COMMAND_QUEUE_INSUFFICIENT_HARDWARE_SUPPORT_FOR_GLOBAL_REALTIME = 1 0 2 5,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_ARCHITECTURE = 1 0 2 6,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DST = 1 0 2 7,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DST_RESOURCE_DIMENSION = 1 0 2 8,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DST_RANGE_OUT_OF_BOUNDS = 1 0 2 9,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_SRC = 1 0 3 0,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE_DIMENSION = 1 0 3 1,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_SRC_RANGE_OUT_OF_BOUNDS = 1 0 3 2,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_OFFSET_ALIGNMENT = 1 0 3 3,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DEPENDENT_RESOURCES = 1 0 3 4,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DEPENDENT_SUBRESOURCE_RANGES = 1 0 3 5,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DEPENDENT_RESOURCE = 1 0 3 6,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DEPENDENT_SUBRESOURCE_RANGE = 1 0 3 7,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DEPENDENT_SUBRESOURCE_OUT_OF_BOUNDS = 1 0 3 8,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DEPENDENT_RANGE_OUT_OF_BOUNDS = 1 0 3 9,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_ZERO_DEPENDENCIES = 1 0 4 0,D3D12_MESSAGE_ID_DEVICE_CREATE_SHARED_HANDLE_INVALIDARG = 1 0 4 1,D3D12_MESSAGE_ID_DESCRIPTOR_HANDLE_WITH_INVALID_RESOURCE = 1 0 4 2,D3D12_MESSAGE_ID_SETDEPTHBOUNDS_INVALIDARGS = 1 0 4 3,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_RESOURCE_STATE_IMPRECISE = 1 0 4 4,D3D12_MESSAGE_ID_COMMAND_LIST_PIPELINE_STATE_NOT_SET = 1 0 4 5,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_MODEL_MISMATCH = 1 0 4 6,D3D12_MESSAGE_ID_OBJECT_ACCESSED_WHILE_STILL_IN_USE = 1 0 4 7,D3D12_MESSAGE_ID_PROGRAMMABLE_MSAA_UNSUPPORTED = 1 0 4 8,D3D12_MESSAGE_ID_SETSAMPLEPOSITIONS_INVALIDARGS = 1 0 4 9,D3D12_MESSAGE_ID_RESOLVESUBRESOURCEREGION_INVALID_RECT = 1 0 5 0,D3D12_MESSAGE_ID_CREATE_VIDEODECODECOMMANDQUEUE = 1 0 5 1,D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSCOMMANDLIST = 1 0 5 2,D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSCOMMANDQUEUE = 1 0 5 3,D3D12_MESSAGE_ID_LIVE_VIDEODECODECOMMANDQUEUE = 1 0 5 4,D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSCOMMANDLIST = 1 0 5 5,D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSCOMMANDQUEUE = 1 0 5 6,D3D12_MESSAGE_ID_DESTROY_VIDEODECODECOMMANDQUEUE = 1 0 5 7,D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSCOMMANDLIST = 1 0 5 8,D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSCOMMANDQUEUE = 1 0 5 9,D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSOR = 1 0 6 0,D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSSTREAM = 1 0 6 1,D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSOR = 1 0 6 2,D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSSTREAM = 1 0 6 3,D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSOR = 1 0 6 4,D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSSTREAM = 1 0 6 5,D3D12_MESSAGE_ID_PROCESS_FRAME_INVALID_PARAMETERS = 1 0 6 6,D3D12_MESSAGE_ID_COPY_INVALIDLAYOUT = 1 0 6 7,D3D12_MESSAGE_ID_CREATE_CRYPTO_SESSION = 1 0 6 8,D3D12_MESSAGE_ID_CREATE_CRYPTO_SESSION_POLICY = 1 0 6 9,D3D12_MESSAGE_ID_CREATE_PROTECTED_RESOURCE_SESSION = 1 0 7 0,D3D12_MESSAGE_ID_LIVE_CRYPTO_SESSION = 1 0 7 1,D3D12_MESSAGE_ID_LIVE_CRYPTO_SESSION_POLICY = 1 0 7 2,D3D12_MESSAGE_ID_LIVE_PROTECTED_RESOURCE_SESSION = 1 0 7 3,D3D12_MESSAGE_ID_DESTROY_CRYPTO_SESSION = 1 0 7 4,D3D12_MESSAGE_ID_DESTROY_CRYPTO_SESSION_POLICY = 1 0 7 5,D3D12_MESSAGE_ID_DESTROY_PROTECTED_RESOURCE_SESSION = 1 0 7 6,D3D12_MESSAGE_ID_PROTECTED_RESOURCE_SESSION_UNSUPPORTED = 1 0 7 7,D3D12_MESSAGE_ID_FENCE_INVALIDOPERATION = 1 0 7 8,D3D12_MESSAGE_ID_CREATEQUERY_HEAP_COPY_QUEUE_TIMESTAMPS_NOT_SUPPORTED = 1 0 7 9,D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_DEFERRED = 1 0 8 0,D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMFIRSTUSE = 1 0 8 1,D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMCLEAR = 1 0 8 2,D3D12_MESSAGE_ID_CREATE_VIDEODECODERHEAP = 1 0 8 3,D3D12_MESSAGE_ID_LIVE_VIDEODECODERHEAP = 1 0 8 4,D3D12_MESSAGE_ID_DESTROY_VIDEODECODERHEAP = 1 0 8 5,D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDARG_RETURN = 1 0 8 6,D3D12_MESSAGE_ID_OPENEXISTINGHEAP_OUTOFMEMORY_RETURN = 1 0 8 7,D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDADDRESS = 1 0 8 8,D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDHANDLE = 1 0 8 9,D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_DEST = 1 0 9 0,D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_MODE = 1 0 9 1,D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_ALIGNMENT = 1 0 9 2,D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_NOT_SUPPORTED = 1 0 9 3,D3D12_MESSAGE_ID_SETVIEWINSTANCEMASK_INVALIDARGS = 1 0 9 4,D3D12_MESSAGE_ID_VIEW_INSTANCING_UNSUPPORTED = 1 0 9 5,D3D12_MESSAGE_ID_VIEW_INSTANCING_INVALIDARGS = 1 0 9 6,D3D12_MESSAGE_ID_COPYTEXTUREREGION_MISMATCH_DECODE_REFERENCE_ONLY_FLAG = 1 0 9 7,D3D12_MESSAGE_ID_COPYRESOURCE_MISMATCH_DECODE_REFERENCE_ONLY_FLAG = 1 0 9 8,D3D12_MESSAGE_ID_CREATE_VIDEO_DECODE_HEAP_CAPS_FAILURE = 1 0 9 9,D3D12_MESSAGE_ID_CREATE_VIDEO_DECODE_HEAP_CAPS_UNSUPPORTED = 1 1 0 0,D3D12_MESSAGE_ID_VIDEO_DECODE_SUPPORT_INVALID_INPUT = 1 1 0 1,D3D12_MESSAGE_ID_CREATE_VIDEO_DECODER_UNSUPPORTED = 1 1 0 2,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_METADATA_ERROR = 1 1 0 3,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VIEW_INSTANCING_VERTEX_SIZE_EXCEEDED = 1 1 0 4,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RUNTIME_INTERNAL_ERROR = 1 1 0 5,D3D12_MESSAGE_ID_NO_VIDEO_API_SUPPORT = 1 1 0 6,D3D12_MESSAGE_ID_VIDEO_PROCESS_SUPPORT_INVALID_INPUT = 1 1 0 7,D3D12_MESSAGE_ID_CREATE_VIDEO_PROCESSOR_CAPS_FAILURE = 1 1 0 8,D3D12_MESSAGE_ID_VIDEO_PROCESS_SUPPORT_UNSUPPORTED_FORMAT = 1 1 0 9,D3D12_MESSAGE_ID_VIDEO_DECODE_FRAME_INVALID_ARGUMENT = 1 1 1 0,D3D12_MESSAGE_ID_ENQUEUE_MAKE_RESIDENT_INVALID_FLAGS = 1 1 1 1,D3D12_MESSAGE_ID_OPENEXISTINGHEAP_UNSUPPORTED = 1 1 1 2,D3D12_MESSAGE_ID_VIDEO_PROCESS_FRAMES_INVALID_ARGUMENT = 1 1 1 3,D3D12_MESSAGE_ID_VIDEO_DECODE_SUPPORT_UNSUPPORTED = 1 1 1 4,D3D12_MESSAGE_ID_CREATE_COMMANDRECORDER = 1 1 1 5,D3D12_MESSAGE_ID_LIVE_COMMANDRECORDER = 1 1 1 6,D3D12_MESSAGE_ID_DESTROY_COMMANDRECORDER = 1 1 1 7,D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_VIDEO_NOT_SUPPORTED = 1 1 1 8,D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_INVALID_SUPPORT_FLAGS = 1 1 1 9,D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_INVALID_FLAGS = 1 1 2 0,D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_MORE_RECORDERS_THAN_LOGICAL_PROCESSORS = 1 1 2 1,D3D12_MESSAGE_ID_CREATE_COMMANDPOOL = 1 1 2 2,D3D12_MESSAGE_ID_LIVE_COMMANDPOOL = 1 1 2 3,D3D12_MESSAGE_ID_DESTROY_COMMANDPOOL = 1 1 2 4,D3D12_MESSAGE_ID_CREATE_COMMAND_POOL_INVALID_FLAGS = 1 1 2 5,D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_VIDEO_NOT_SUPPORTED = 1 1 2 6,D3D12_MESSAGE_ID_COMMAND_RECORDER_SUPPORT_FLAGS_MISMATCH = 1 1 2 7,D3D12_MESSAGE_ID_COMMAND_RECORDER_CONTENTION = 1 1 2 8,D3D12_MESSAGE_ID_COMMAND_RECORDER_USAGE_WITH_CREATECOMMANDLIST_COMMAND_LIST = 1 1 2 9,D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_USAGE_WITH_CREATECOMMANDLIST1_COMMAND_LIST = 1 1 3 0,D3D12_MESSAGE_ID_CANNOT_EXECUTE_EMPTY_COMMAND_LIST = 1 1 3 1,D3D12_MESSAGE_ID_CANNOT_RESET_COMMAND_POOL_WITH_OPEN_COMMAND_LISTS = 1 1 3 2,D3D12_MESSAGE_ID_CANNOT_USE_COMMAND_RECORDER_WITHOUT_CURRENT_TARGET = 1 1 3 3,D3D12_MESSAGE_ID_CANNOT_CHANGE_COMMAND_RECORDER_TARGET_WHILE_RECORDING = 1 1 3 4,D3D12_MESSAGE_ID_COMMAND_POOL_SYNC = 1 1 3 5,D3D12_MESSAGE_ID_EVICT_UNDERFLOW = 1 1 3 6,D3D12_MESSAGE_ID_CREATE_META_COMMAND = 1 1 3 7,D3D12_MESSAGE_ID_LIVE_META_COMMAND = 1 1 3 8,D3D12_MESSAGE_ID_DESTROY_META_COMMAND = 1 1 3 9,D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALID_DST_RESOURCE = 1 1 4 0,D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALID_SRC_RESOURCE = 1 1 4 1,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DST_RESOURCE = 1 1 4 2,D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE = 1 1 4 3,D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_NULL_BUFFER = 1 1 4 4,D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_NULL_RESOURCE_DESC = 1 1 4 5,D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_UNSUPPORTED = 1 1 4 6,D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_DIMENSION = 1 1 4 7,D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_FLAGS = 1 1 4 8,D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_OFFSET = 1 1 4 9,D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_DIMENSION = 1 1 5 0,D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_FLAGS = 1 1 5 1,D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_OUTOFMEMORY_RETURN = 1 1 5 2,D3D12_MESSAGE_ID_CANNOT_CREATE_GRAPHICS_AND_VIDEO_COMMAND_RECORDER = 1 1 5 3,D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_POSSIBLY_MISMATCHING_PROPERTIES = 1 1 5 4,D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE = 1 1 5 5,D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_INCOMPATIBLE_WITH_STRUCTURED_BUFFERS = 1 1 5 6,D3D12_MESSAGE_ID_COMPUTE_ONLY_DEVICE_OPERATION_UNSUPPORTED = 1 1 5 7,D3D12_MESSAGE_ID_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INVALID = 1 1 5 8,D3D12_MESSAGE_ID_EMIT_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_INVALID = 1 1 5 9,D3D12_MESSAGE_ID_COPY_RAYTRACING_ACCELERATION_STRUCTURE_INVALID = 1 1 6 0,D3D12_MESSAGE_ID_DISPATCH_RAYS_INVALID = 1 1 6 1,D3D12_MESSAGE_ID_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO_INVALID = 1 1 6 2,D3D12_MESSAGE_ID_CREATE_LIFETIMETRACKER = 1 1 6 3,D3D12_MESSAGE_ID_LIVE_LIFETIMETRACKER = 1 1 6 4,D3D12_MESSAGE_ID_DESTROY_LIFETIMETRACKER = 1 1 6 5,D3D12_MESSAGE_ID_DESTROYOWNEDOBJECT_OBJECTNOTOWNED = 1 1 6 6,D3D12_MESSAGE_ID_CREATE_TRACKEDWORKLOAD = 1 1 6 7,D3D12_MESSAGE_ID_LIVE_TRACKEDWORKLOAD = 1 1 6 8,D3D12_MESSAGE_ID_DESTROY_TRACKEDWORKLOAD = 1 1 6 9,D3D12_MESSAGE_ID_RENDER_PASS_ERROR = 1 1 7 0,D3D12_MESSAGE_ID_META_COMMAND_ID_INVALID = 1 1 7 1,D3D12_MESSAGE_ID_META_COMMAND_UNSUPPORTED_PARAMS = 1 1 7 2,D3D12_MESSAGE_ID_META_COMMAND_FAILED_ENUMERATION = 1 1 7 3,D3D12_MESSAGE_ID_META_COMMAND_PARAMETER_SIZE_MISMATCH = 1 1 7 4,D3D12_MESSAGE_ID_UNINITIALIZED_META_COMMAND = 1 1 7 5,D3D12_MESSAGE_ID_META_COMMAND_INVALID_GPU_VIRTUAL_ADDRESS = 1 1 7 6,D3D12_MESSAGE_ID_CREATE_VIDEOENCODECOMMANDLIST = 1 1 7 7,D3D12_MESSAGE_ID_LIVE_VIDEOENCODECOMMANDLIST = 1 1 7 8,D3D12_MESSAGE_ID_DESTROY_VIDEOENCODECOMMANDLIST = 1 1 7 9,D3D12_MESSAGE_ID_CREATE_VIDEOENCODECOMMANDQUEUE = 1 1 8 0,D3D12_MESSAGE_ID_LIVE_VIDEOENCODECOMMANDQUEUE = 1 1 8 1,D3D12_MESSAGE_ID_DESTROY_VIDEOENCODECOMMANDQUEUE = 1 1 8 2,D3D12_MESSAGE_ID_CREATE_VIDEOMOTIONESTIMATOR = 1 1 8 3,D3D12_MESSAGE_ID_LIVE_VIDEOMOTIONESTIMATOR = 1 1 8 4,D3D12_MESSAGE_ID_DESTROY_VIDEOMOTIONESTIMATOR = 1 1 8 5,D3D12_MESSAGE_ID_CREATE_VIDEOMOTIONVECTORHEAP = 1 1 8 6,D3D12_MESSAGE_ID_LIVE_VIDEOMOTIONVECTORHEAP = 1 1 8 7,D3D12_MESSAGE_ID_DESTROY_VIDEOMOTIONVECTORHEAP = 1 1 8 8,D3D12_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOADS = 1 1 8 9,D3D12_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOAD_PAIRS = 1 1 9 0,D3D12_MESSAGE_ID_OUT_OF_ORDER_TRACKED_WORKLOAD_PAIR = 1 1 9 1,D3D12_MESSAGE_ID_CANNOT_ADD_TRACKED_WORKLOAD = 1 1 9 2,D3D12_MESSAGE_ID_INCOMPLETE_TRACKED_WORKLOAD_PAIR = 1 1 9 3,D3D12_MESSAGE_ID_CREATE_STATE_OBJECT_ERROR = 1 1 9 4,D3D12_MESSAGE_ID_GET_SHADER_IDENTIFIER_ERROR = 1 1 9 5,D3D12_MESSAGE_ID_GET_SHADER_STACK_SIZE_ERROR = 1 1 9 6,D3D12_MESSAGE_ID_GET_PIPELINE_STACK_SIZE_ERROR = 1 1 9 7,D3D12_MESSAGE_ID_SET_PIPELINE_STACK_SIZE_ERROR = 1 1 9 8,D3D12_MESSAGE_ID_GET_SHADER_IDENTIFIER_SIZE_INVALID = 1 1 9 9,D3D12_MESSAGE_ID_CHECK_DRIVER_MATCHING_IDENTIFIER_INVALID = 1 2 0 0,D3D12_MESSAGE_ID_CHECK_DRIVER_MATCHING_IDENTIFIER_DRIVER_REPORTED_ISSUE = 1 2 0 1,D3D12_MESSAGE_ID_RENDER_PASS_INVALID_RESOURCE_BARRIER = 1 2 0 2,D3D12_MESSAGE_ID_RENDER_PASS_DISALLOWED_API_CALLED = 1 2 0 3,D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_NEST_RENDER_PASSES = 1 2 0 4,D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_END_WITHOUT_BEGIN = 1 2 0 5,D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_CLOSE_COMMAND_LIST = 1 2 0 6,D3D12_MESSAGE_ID_RENDER_PASS_GPU_WORK_WHILE_SUSPENDED = 1 2 0 7,D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_SUSPEND_RESUME = 1 2 0 8,D3D12_MESSAGE_ID_RENDER_PASS_NO_PRIOR_SUSPEND_WITHIN_EXECUTECOMMANDLISTS = 1 2 0 9,D3D12_MESSAGE_ID_RENDER_PASS_NO_SUBSEQUENT_RESUME_WITHIN_EXECUTECOMMANDLISTS = 1 2 1 0,D3D12_MESSAGE_ID_TRACKED_WORKLOAD_COMMAND_QUEUE_MISMATCH = 1 2 1 1,D3D12_MESSAGE_ID_TRACKED_WORKLOAD_NOT_SUPPORTED = 1 2 1 2,D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_NO_ACCESS = 1 2 1 3,D3D12_MESSAGE_ID_RENDER_PASS_UNSUPPORTED_RESOLVE = 1 2 1 4,D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_INVALID_RESOURCE_PTR = 1 2 1 5,D3D12_MESSAGE_ID_WINDOWS7_FENCE_OUTOFORDER_SIGNAL = 1 2 1 6,D3D12_MESSAGE_ID_WINDOWS7_FENCE_OUTOFORDER_WAIT = 1 2 1 7,D3D12_MESSAGE_ID_VIDEO_CREATE_MOTION_ESTIMATOR_INVALID_ARGUMENT = 1 2 1 8,D3D12_MESSAGE_ID_VIDEO_CREATE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT = 1 2 1 9,D3D12_MESSAGE_ID_ESTIMATE_MOTION_INVALID_ARGUMENT = 1 2 2 0,D3D12_MESSAGE_ID_RESOLVE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT = 1 2 2 1,D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_HEAP_TYPE = 1 2 2 2,D3D12_MESSAGE_ID_SET_BACKGROUND_PROCESSING_MODE_INVALID_ARGUMENT = 1 2 2 3,D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE_FOR_FEATURE_LEVEL = 1 2 2 4,D3D12_MESSAGE_ID_CREATE_VIDEOEXTENSIONCOMMAND = 1 2 2 5,D3D12_MESSAGE_ID_LIVE_VIDEOEXTENSIONCOMMAND = 1 2 2 6,D3D12_MESSAGE_ID_DESTROY_VIDEOEXTENSIONCOMMAND = 1 2 2 7,D3D12_MESSAGE_ID_INVALID_VIDEO_EXTENSION_COMMAND_ID = 1 2 2 8,D3D12_MESSAGE_ID_VIDEO_EXTENSION_COMMAND_INVALID_ARGUMENT = 1 2 2 9,D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_UNIQUE_IN_DXIL_LIBRARY = 1 2 3 0,D3D12_MESSAGE_ID_VARIABLE_SHADING_RATE_NOT_ALLOWED_WITH_TIR = 1 2 3 1,D3D12_MESSAGE_ID_GEOMETRY_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE = 1 2 3 2,D3D12_MESSAGE_ID_RSSETSHADING_RATE_INVALID_SHADING_RATE = 1 2 3 3,D3D12_MESSAGE_ID_RSSETSHADING_RATE_SHADING_RATE_NOT_PERMITTED_BY_CAP = 1 2 3 4,D3D12_MESSAGE_ID_RSSETSHADING_RATE_INVALID_COMBINER = 1 2 3 5,D3D12_MESSAGE_ID_RSSETSHADINGRATEIMAGE_REQUIRES_TIER_2 = 1 2 3 6,D3D12_MESSAGE_ID_RSSETSHADINGRATE_REQUIRES_TIER_1 = 1 2 3 7,D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_FORMAT = 1 2 3 8,D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_ARRAY_SIZE = 1 2 3 9,D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_MIP_LEVEL = 1 2 4 0,D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_SAMPLE_COUNT = 1 2 4 1,D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_SAMPLE_QUALITY = 1 2 4 2,D3D12_MESSAGE_ID_NON_RETAIL_SHADER_MODEL_WONT_VALIDATE = 1 2 4 3,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_AS_ROOT_SIGNATURE_MISMATCH = 1 2 4 4,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_ROOT_SIGNATURE_MISMATCH = 1 2 4 5,D3D12_MESSAGE_ID_ADD_TO_STATE_OBJECT_ERROR = 1 2 4 6,D3D12_MESSAGE_ID_CREATE_PROTECTED_RESOURCE_SESSION_INVALID_ARGUMENT = 1 2 4 7,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_PSO_DESC_MISMATCH = 1 2 4 8,D3D12_MESSAGE_ID_CREATEPIPELINESTATE_MS_INCOMPLETE_TYPE = 1 2 4 9,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_AS_NOT_MS_MISMATCH = 1 2 5 0,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_NOT_PS_MISMATCH = 1 2 5 1,D3D12_MESSAGE_ID_NONZERO_SAMPLER_FEEDBACK_MIP_REGION_WITH_INCOMPATIBLE_FORMAT = 1 2 5 2,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_SHADER_MISMATCH = 1 2 5 3,D3D12_MESSAGE_ID_EMPTY_DISPATCH = 1 2 5 4,D3D12_MESSAGE_ID_RESOURCE_FORMAT_REQUIRES_SAMPLER_FEEDBACK_CAPABILITY = 1 2 5 5,D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_MIP_REGION = 1 2 5 6,D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_DIMENSION = 1 2 5 7,D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_SAMPLE_COUNT = 1 2 5 8,D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_SAMPLE_QUALITY = 1 2 5 9,D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_LAYOUT = 1 2 6 0,D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_REQUIRES_UNORDERED_ACCESS_FLAG = 1 2 6 1,D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_NULL_ARGUMENTS = 1 2 6 2,D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_UAV_REQUIRES_SAMPLER_FEEDBACK_CAPABILITY = 1 2 6 3,D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_REQUIRES_FEEDBACK_MAP_FORMAT = 1 2 6 4,D3D12_MESSAGE_ID_CREATEMESHSHADER_INVALIDSHADERBYTECODE = 1 2 6 5,D3D12_MESSAGE_ID_CREATEMESHSHADER_OUTOFMEMORY = 1 2 6 6,D3D12_MESSAGE_ID_CREATEMESHSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE = 1 2 6 7,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_TRANSCODE_INVALID_FORMAT = 1 2 6 8,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_INVALID_MIP_LEVEL_COUNT = 1 2 6 9,D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_TRANSCODE_ARRAY_SIZE_MISMATCH = 1 2 7 0,D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_MISMATCHING_TARGETED_RESOURCE = 1 2 7 1,D3D12_MESSAGE_ID_CREATEMESHSHADER_OUTPUTEXCEEDSMAXSIZE = 1 2 7 2,D3D12_MESSAGE_ID_CREATEMESHSHADER_GROUPSHAREDEXCEEDSMAXSIZE = 1 2 7 3,D3D12_MESSAGE_ID_VERTEX_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE = 1 2 7 4,D3D12_MESSAGE_ID_MESH_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE = 1 2 7 5,D3D12_MESSAGE_ID_CREATEMESHSHADER_MISMATCHEDASMSPAYLOADSIZE = 1 2 7 6,D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_UNBOUNDED_STATIC_DESCRIPTORS = 1 2 7 7,D3D12_MESSAGE_ID_CREATEAMPLIFICATIONSHADER_INVALIDSHADERBYTECODE = 1 2 7 8,D3D12_MESSAGE_ID_CREATEAMPLIFICATIONSHADER_OUTOFMEMORY = 1 2 7 9,D3D12_MESSAGE_ID_CREATE_SHADERCACHESESSION = 1 2 8 0,D3D12_MESSAGE_ID_LIVE_SHADERCACHESESSION = 1 2 8 1,D3D12_MESSAGE_ID_DESTROY_SHADERCACHESESSION = 1 2 8 2,D3D12_MESSAGE_ID_CREATESHADERCACHESESSION_INVALIDARGS = 1 2 8 3,D3D12_MESSAGE_ID_CREATESHADERCACHESESSION_DISABLED = 1 2 8 4,D3D12_MESSAGE_ID_CREATESHADERCACHESESSION_ALREADYOPEN = 1 2 8 5,D3D12_MESSAGE_ID_SHADERCACHECONTROL_DEVELOPERMODE = 1 2 8 6,D3D12_MESSAGE_ID_SHADERCACHECONTROL_INVALIDFLAGS = 1 2 8 7,D3D12_MESSAGE_ID_SHADERCACHECONTROL_STATEALREADYSET = 1 2 8 8,D3D12_MESSAGE_ID_SHADERCACHECONTROL_IGNOREDFLAG = 1 2 8 9,D3D12_MESSAGE_ID_SHADERCACHESESSION_STOREVALUE_ALREADYPRESENT = 1 2 9 0,D3D12_MESSAGE_ID_SHADERCACHESESSION_STOREVALUE_HASHCOLLISION = 1 2 9 1,D3D12_MESSAGE_ID_SHADERCACHESESSION_STOREVALUE_CACHEFULL = 1 2 9 2,D3D12_MESSAGE_ID_SHADERCACHESESSION_FINDVALUE_NOTFOUND = 1 2 9 3,D3D12_MESSAGE_ID_SHADERCACHESESSION_CORRUPT = 1 2 9 4,D3D12_MESSAGE_ID_SHADERCACHESESSION_DISABLED = 1 2 9 5,D3D12_MESSAGE_ID_OVERSIZED_DISPATCH = 1 2 9 6,D3D12_MESSAGE_ID_CREATE_VIDEOENCODER = 1 2 9 7,D3D12_MESSAGE_ID_LIVE_VIDEOENCODER = 1 2 9 8,D3D12_MESSAGE_ID_DESTROY_VIDEOENCODER = 1 2 9 9,D3D12_MESSAGE_ID_CREATE_VIDEOENCODERHEAP = 1 3 0 0,D3D12_MESSAGE_ID_LIVE_VIDEOENCODERHEAP = 1 3 0 1,D3D12_MESSAGE_ID_DESTROY_VIDEOENCODERHEAP = 1 3 0 2,D3D12_MESSAGE_ID_COPYTEXTUREREGION_MISMATCH_ENCODE_REFERENCE_ONLY_FLAG = 1 3 0 3,D3D12_MESSAGE_ID_COPYRESOURCE_MISMATCH_ENCODE_REFERENCE_ONLY_FLAG = 1 3 0 4,D3D12_MESSAGE_ID_ENCODE_FRAME_INVALID_PARAMETERS = 1 3 0 5,D3D12_MESSAGE_ID_ENCODE_FRAME_UNSUPPORTED_PARAMETERS = 1 3 0 6,D3D12_MESSAGE_ID_RESOLVE_ENCODER_OUTPUT_METADATA_INVALID_PARAMETERS = 1 3 0 7,D3D12_MESSAGE_ID_RESOLVE_ENCODER_OUTPUT_METADATA_UNSUPPORTED_PARAMETERS = 1 3 0 8,D3D12_MESSAGE_ID_CREATE_VIDEO_ENCODER_INVALID_PARAMETERS = 1 3 0 9,D3D12_MESSAGE_ID_CREATE_VIDEO_ENCODER_UNSUPPORTED_PARAMETERS = 1 3 1 0,D3D12_MESSAGE_ID_CREATE_VIDEO_ENCODER_HEAP_INVALID_PARAMETERS = 1 3 1 1,D3D12_MESSAGE_ID_CREATE_VIDEO_ENCODER_HEAP_UNSUPPORTED_PARAMETERS = 1 3 1 2,D3D12_MESSAGE_ID_CREATECOMMANDLIST_NULL_COMMANDALLOCATOR = 1 3 1 3,D3D12_MESSAGE_ID_CLEAR_UNORDERED_ACCESS_VIEW_INVALID_DESCRIPTOR_HANDLE = 1 3 1 4,D3D12_MESSAGE_ID_DESCRIPTOR_HEAP_NOT_SHADER_VISIBLE = 1 3 1 5,D3D12_MESSAGE_ID_CREATEBLENDSTATE_BLENDOP_WARNING = 1 3 1 6,D3D12_MESSAGE_ID_CREATEBLENDSTATE_BLENDOPALPHA_WARNING = 1 3 1 7,D3D12_MESSAGE_ID_WRITE_COMBINE_PERFORMANCE_WARNING = 1 3 1 8,D3D12_MESSAGE_ID_RESOLVE_QUERY_INVALID_QUERY_STATE = 1 3 1 9,D3D12_MESSAGE_ID_SETPRIVATEDATA_NO_ACCESS = 1 3 2 0,D3D12_MESSAGE_ID_COMMAND_LIST_STATIC_DESCRIPTOR_SAMPLER_MODE_MISMATCH = 1 3 2 1,D3D12_MESSAGE_ID_GETCOPYABLEFOOTPRINTS_UNSUPPORTED_BUFFER_WIDTH = 1 3 2 2,D3D12_MESSAGE_ID_CREATEMESHSHADER_TOPOLOGY_MISMATCH = 1 3 2 3,D3D12_MESSAGE_ID_VRS_SUM_COMBINER_REQUIRES_CAPABILITY = 1 3 2 4,D3D12_MESSAGE_ID_SETTING_SHADING_RATE_FROM_MS_REQUIRES_CAPABILITY = 1 3 2 5,D3D12_MESSAGE_ID_SHADERCACHESESSION_SHADERCACHEDELETE_NOTSUPPORTED = 1 3 2 6,D3D12_MESSAGE_ID_SHADERCACHECONTROL_SHADERCACHECLEAR_NOTSUPPORTED = 1 3 2 7,D3D12_MESSAGE_ID_CREATERESOURCE_STATE_IGNORED = 1 3 2 8,D3D12_MESSAGE_ID_UNUSED_CROSS_EXECUTE_SPLIT_BARRIER = 1 3 2 9,D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_HANDLE_ACCESS_DENIED = 1 3 3 0,D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_VALUES = 1 3 3 1,D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_ACCESS = 1 3 3 2,D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_SYNC = 1 3 3 3,D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_LAYOUT = 1 3 3 4,D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_TYPE = 1 3 3 5,D3D12_MESSAGE_ID_OUT_OF_BOUNDS_BARRIER_SUBRESOURCE_RANGE = 1 3 3 6,D3D12_MESSAGE_ID_INCOMPATIBLE_BARRIER_RESOURCE_DIMENSION = 1 3 3 7,D3D12_MESSAGE_ID_SET_SCISSOR_RECTS_INVALID_RECT = 1 3 3 8,D3D12_MESSAGE_ID_SHADING_RATE_SOURCE_REQUIRES_DIMENSION_TEXTURE2D = 1 3 3 9,D3D12_MESSAGE_ID_BUFFER_BARRIER_SUBREGION_OUT_OF_BOUNDS = 1 3 4 0,D3D12_MESSAGE_ID_UNSUPPORTED_BARRIER_LAYOUT = 1 3 4 1,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALID_PARAMETERS = 1 3 4 2,D3D12_MESSAGE_ID_ENHANCED_BARRIERS_NOT_SUPPORTED = 1 3 4 3,D3D12_MESSAGE_ID_LEGACY_BARRIER_VALIDATION_FORCED_ON = 1 3 4 6,D3D12_MESSAGE_ID_EMPTY_ROOT_DESCRIPTOR_TABLE = 1 3 4 7,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ELEMENT_OFFSET_UNALIGNED = 1 3 4 8,D3D12_MESSAGE_ID_ALPHA_BLEND_FACTOR_NOT_SUPPORTED = 1 3 4 9,D3D12_MESSAGE_ID_BARRIER_INTEROP_INVALID_LAYOUT = 1 3 5 0,D3D12_MESSAGE_ID_BARRIER_INTEROP_INVALID_STATE = 1 3 5 1,D3D12_MESSAGE_ID_GRAPHICS_PIPELINE_STATE_DESC_ZERO_SAMPLE_MASK = 1 3 5 2,D3D12_MESSAGE_ID_INDEPENDENT_STENCIL_REF_NOT_SUPPORTED = 1 3 5 3,D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INDEPENDENT_MASKS_UNSUPPORTED = 1 3 5 4,D3D12_MESSAGE_ID_TEXTURE_BARRIER_SUBRESOURCES_OUT_OF_BOUNDS = 1 3 5 5,D3D12_MESSAGE_ID_NON_OPTIMAL_BARRIER_ONLY_EXECUTE_COMMAND_LISTS = 1 3 5 6,D3D12_MESSAGE_ID_EXECUTE_INDIRECT_ZERO_COMMAND_COUNT = 1 3 5 7,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INCOMPATIBLE_TEXTURE_LAYOUT = 1 3 5 8,D3D12_MESSAGE_ID_DYNAMIC_INDEX_BUFFER_STRIP_CUT_NOT_SUPPORTED = 1 3 5 9,D3D12_MESSAGE_ID_PRIMITIVE_TOPOLOGY_TRIANGLE_FANS_NOT_SUPPORTED = 1 3 6 0,D3D12_MESSAGE_ID_CREATE_SAMPLER_COMPARISON_FUNC_IGNORED = 1 3 6 1,D3D12_MESSAGE_ID_CREATEHEAP_INVALIDHEAPTYPE = 1 3 6 2,D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPTYPE = 1 3 6 3,D3D12_MESSAGE_ID_DYNAMIC_DEPTH_BIAS_NOT_SUPPORTED = 1 3 6 4,D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_NON_WHOLE_DYNAMIC_DEPTH_BIAS = 1 3 6 5,D3D12_MESSAGE_ID_DYNAMIC_DEPTH_BIAS_FLAG_MISSING = 1 3 6 6,D3D12_MESSAGE_ID_DYNAMIC_DEPTH_BIAS_NO_PIPELINE = 1 3 6 7,D3D12_MESSAGE_ID_DYNAMIC_INDEX_BUFFER_STRIP_CUT_FLAG_MISSING = 1 3 6 8,D3D12_MESSAGE_ID_DYNAMIC_INDEX_BUFFER_STRIP_CUT_NO_PIPELINE = 1 3 6 9,D3D12_MESSAGE_ID_NONNORMALIZED_COORDINATE_SAMPLING_NOT_SUPPORTED = 1 3 7 0,D3D12_MESSAGE_ID_INVALID_CAST_TARGET = 1 3 7 1,D3D12_MESSAGE_ID_RENDER_PASS_COMMANDLIST_INVALID_END_STATE = 1 3 7 2,D3D12_MESSAGE_ID_RENDER_PASS_COMMANDLIST_INVALID_START_STATE = 1 3 7 3,D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_ACCESS = 1 3 7 4,D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_LOCAL_PRESERVE_PARAMETERS = 1 3 7 5,D3D12_MESSAGE_ID_RENDER_PASS_LOCAL_PRESERVE_RENDER_PARAMETERS_ERROR = 1 3 7 6,D3D12_MESSAGE_ID_RENDER_PASS_LOCAL_DEPTH_STENCIL_ERROR = 1 3 7 7,D3D12_MESSAGE_ID_DRAW_POTENTIALLY_OUTSIDE_OF_VALID_RENDER_AREA = 1 3 7 8,D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_LINERASTERIZATIONMODE = 1 3 7 9,D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDALIGNMENT_SMALLRESOURCE = 1 3 8 0,D3D12_MESSAGE_ID_GENERIC_DEVICE_OPERATION_UNSUPPORTED = 1 3 8 1,D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RENDER_TARGET_WRONG_WRITE_MASK = 1 3 8 2,D3D12_MESSAGE_ID_PROBABLE_PIX_EVENT_LEAK = 1 3 8 3,D3D12_MESSAGE_ID_PIX_EVENT_UNDERFLOW = 1 3 8 4,D3D12_MESSAGE_ID_RECREATEAT_INVALID_TARGET = 1 3 8 5,D3D12_MESSAGE_ID_RECREATEAT_INSUFFICIENT_SUPPORT = 1 3 8 6,D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_STRUCTURED_BUFFER_STRIDE_MISMATCH = 1 3 8 7,D3D12_MESSAGE_ID_DISPATCH_GRAPH_INVALID = 1 3 8 8,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_TARGET_FORMAT_INVALID = 1 3 8 9,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_TARGET_DIMENSION_INVALID = 1 3 9 0,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_SOURCE_COLOR_FORMAT_INVALID = 1 3 9 1,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_SOURCE_DEPTH_FORMAT_INVALID = 1 3 9 2,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_EXPOSURE_SCALE_FORMAT_INVALID = 1 3 9 3,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_ENGINE_CREATE_FLAGS_INVALID = 1 3 9 4,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_EXTENSION_INTERNAL_LOAD_FAILURE = 1 3 9 5,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_EXTENSION_INTERNAL_ENGINE_CREATION_ERROR = 1 3 9 6,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_EXTENSION_INTERNAL_UPSCALER_CREATION_ERROR = 1 3 9 7,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_EXTENSION_INTERNAL_UPSCALER_EXECUTION_ERROR = 1 3 9 8,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EXECUTE_REGION_INVALID = 1 3 9 9,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EXECUTE_TIME_DELTA_INVALID = 1 4 0 0,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EXECUTE_REQUIRED_TEXTURE_IS_NULL = 1 4 0 1,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EXECUTE_MOTION_VECTORS_FORMAT_INVALID = 1 4 0 2,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EXECUTE_FLAGS_INVALID = 1 4 0 3,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EXECUTE_FORMAT_INVALID = 1 4 0 4,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EXECUTE_EXPOSURE_SCALE_TEXTURE_SIZE_INVALID = 1 4 0 5,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_VARIANT_INDEX_OUT_OF_BOUNDS = 1 4 0 6,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_VARIANT_ID_NOT_FOUND = 1 4 0 7,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_DUPLICATE_VARIANT_ID = 1 4 0 8,D3D12_MESSAGE_ID_DIRECTSR_OUT_OF_MEMORY = 1 4 0 9,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EXECUTE_UNEXPECTED_TEXTURE_IS_IGNORED = 1 4 1 0,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EVICT_UNDERFLOW = 1 4 1 1,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EXECUTE_OPTIONAL_TEXTURE_IS_NULL = 1 4 1 2,D3D12_MESSAGE_ID_DIRECTSR_SUPERRES_UPSCALER_EXECUTE_INVALID_CAMERA_JITTER = 1 4 1 3,D3D12_MESSAGE_ID_CREATE_STATE_OBJECT_WARNING = 1 4 1 4,D3D12_MESSAGE_ID_GUID_TEXTURE_LAYOUT_UNSUPPORTED = 1 4 1 5,D3D12_MESSAGE_ID_RESOLVE_ENCODER_INPUT_PARAM_LAYOUT_INVALID_PARAMETERS = 1 4 1 6,D3D12_MESSAGE_ID_INVALID_BARRIER_ACCESS = 1 4 1 7,D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INSTANCE_COUNT_ZERO = 1 4 1 8,D3D12_MESSAGE_ID_DESCRIPTOR_HEAP_NOT_SET_BEFORE_ROOT_SIGNATURE_WITH_DIRECTLY_INDEXED_FLAG = 1 4 1 9,D3D12_MESSAGE_ID_DIFFERENT_DESCRIPTOR_HEAP_SET_AFTER_ROOT_SIGNATURE_WITH_DIRECTLY_INDEXED_FLAG = 1 4 2 0,)",
    "insertText": "D3D12_MESSAGE_ID_D3D12_MESSAGES_END(D3D12_MESSAGE_ID_DIFFERENT_DESCRIPTOR_HEAP_SET_AFTER_ROOT_SIGNATURE_WITH_DIRECTLY_INDEXED_FLAG + 1)"
  },
  {
    "label": "_Field_size_()",
    "kind": "Method",
    "detail": "Function (typedef struct D3D12_MESSAGE { D3D12_MESSAGE_CATEGORY Category ; D3D12_MESSAGE_SEVERITY Severity ; D3D12_MESSAGE_ID ID ;)",
    "insertText": "_Field_size_(DescriptionByteLength)"
  },
  {
    "label": "_Field_size_()",
    "kind": "Method",
    "detail": "Function (SIZE_T DescriptionByteLength ; } D3D12_MESSAGE ; typedef struct D3D12_INFO_QUEUE_FILTER_DESC { UINT NumCategories ;)",
    "insertText": "_Field_size_(NumCategories)"
  },
  {
    "label": "_Field_size_()",
    "kind": "Method",
    "detail": "Function (UINT NumSeverities ;)",
    "insertText": "_Field_size_(NumSeverities)"
  },
  {
    "label": "_Field_size_()",
    "kind": "Method",
    "detail": "Function (UINT NumIDs ;)",
    "insertText": "_Field_size_(NumIDs)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} D3D12_INFO_QUEUE_FILTER_DESC ; typedef struct D3D12_INFO_QUEUE_FILTER { D3D12_INFO_QUEUE_FILTER_DESC AllowList ; D3D12_INFO_QUEUE_FILTER_DESC DenyList ; } D3D12_INFO_QUEUE_FILTER ; # define D3D12_INFO_QUEUE_DEFAULT_MESSAGE_COUNT_LIMIT 1 0 2 4 RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0018_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0018_v0_0_s_ifspec ; # ifndef __ID3D12InfoQueue_INTERFACE_DEFINED__ # define __ID3D12InfoQueue_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D12InfoQueue ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"0742a90b-c387-483f-b946-30a7e4e61458\")"
  },
  {
    "label": "SetMessageCountLimit()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetMessageCountLimit(_In_ UINT64 MessageCountLimit)"
  },
  {
    "label": "ClearStoredMessages()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ClearStoredMessages(void)"
  },
  {
    "label": "GetMessage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetMessage(_In_ UINT64 MessageIndex, _Out_writes_bytes_opt_(*pMessageByteLength) D3D12_MESSAGE *pMessage, _Inout_ SIZE_T *pMessageByteLength)"
  },
  {
    "label": "GetNumMessagesAllowedByStorageFilter()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetNumMessagesAllowedByStorageFilter(void)"
  },
  {
    "label": "GetNumMessagesDeniedByStorageFilter()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetNumMessagesDeniedByStorageFilter(void)"
  },
  {
    "label": "GetNumStoredMessages()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetNumStoredMessages(void)"
  },
  {
    "label": "GetNumStoredMessagesAllowedByRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetNumStoredMessagesAllowedByRetrievalFilter(void)"
  },
  {
    "label": "GetNumMessagesDiscardedByMessageCountLimit()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetNumMessagesDiscardedByMessageCountLimit(void)"
  },
  {
    "label": "GetMessageCountLimit()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetMessageCountLimit(void)"
  },
  {
    "label": "AddStorageFilterEntries()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "AddStorageFilterEntries(_In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "GetStorageFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetStorageFilter(_Out_writes_bytes_opt_(*pFilterByteLength) D3D12_INFO_QUEUE_FILTER *pFilter, _Inout_ SIZE_T *pFilterByteLength)"
  },
  {
    "label": "ClearStorageFilter()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ClearStorageFilter(void)"
  },
  {
    "label": "PushEmptyStorageFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushEmptyStorageFilter(void)"
  },
  {
    "label": "PushCopyOfStorageFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushCopyOfStorageFilter(void)"
  },
  {
    "label": "PushStorageFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushStorageFilter(_In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "PopStorageFilter()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PopStorageFilter(void)"
  },
  {
    "label": "GetStorageFilterStackSize()",
    "kind": "Method",
    "detail": "Function (UINT STDMETHODCALLTYPE)",
    "insertText": "GetStorageFilterStackSize(void)"
  },
  {
    "label": "AddRetrievalFilterEntries()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "AddRetrievalFilterEntries(_In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "GetRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetRetrievalFilter(_Out_writes_bytes_opt_(*pFilterByteLength) D3D12_INFO_QUEUE_FILTER *pFilter, _Inout_ SIZE_T *pFilterByteLength)"
  },
  {
    "label": "ClearRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ClearRetrievalFilter(void)"
  },
  {
    "label": "PushEmptyRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushEmptyRetrievalFilter(void)"
  },
  {
    "label": "PushCopyOfRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushCopyOfRetrievalFilter(void)"
  },
  {
    "label": "PushRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushRetrievalFilter(_In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "PopRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PopRetrievalFilter(void)"
  },
  {
    "label": "GetRetrievalFilterStackSize()",
    "kind": "Method",
    "detail": "Function (UINT STDMETHODCALLTYPE)",
    "insertText": "GetRetrievalFilterStackSize(void)"
  },
  {
    "label": "AddMessage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "AddMessage(_In_ D3D12_MESSAGE_CATEGORY Category, _In_ D3D12_MESSAGE_SEVERITY Severity, _In_ D3D12_MESSAGE_ID ID, _In_ LPCSTR pDescription)"
  },
  {
    "label": "AddApplicationMessage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "AddApplicationMessage(_In_ D3D12_MESSAGE_SEVERITY Severity, _In_ LPCSTR pDescription)"
  },
  {
    "label": "SetBreakOnCategory()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetBreakOnCategory(_In_ D3D12_MESSAGE_CATEGORY Category, _In_ BOOL bEnable)"
  },
  {
    "label": "SetBreakOnSeverity()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetBreakOnSeverity(_In_ D3D12_MESSAGE_SEVERITY Severity, _In_ BOOL bEnable)"
  },
  {
    "label": "SetBreakOnID()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetBreakOnID(_In_ D3D12_MESSAGE_ID ID, _In_ BOOL bEnable)"
  },
  {
    "label": "GetBreakOnCategory()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "GetBreakOnCategory(_In_ D3D12_MESSAGE_CATEGORY Category)"
  },
  {
    "label": "GetBreakOnSeverity()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "GetBreakOnSeverity(_In_ D3D12_MESSAGE_SEVERITY Severity)"
  },
  {
    "label": "GetBreakOnID()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "GetBreakOnID(_In_ D3D12_MESSAGE_ID ID)"
  },
  {
    "label": "SetMuteDebugOutput()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "SetMuteDebugOutput(_In_ BOOL bMute)"
  },
  {
    "label": "GetMuteDebugOutput()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "GetMuteDebugOutput(void)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12InfoQueueVtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12InfoQueue * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, SetMessageCountLimit) HRESULT ( STDMETHODCALLTYPE *SetMessageCountLimit )( ID3D12InfoQueue * This, _In_ UINT64 MessageCountLimit)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, ClearStoredMessages) void ( STDMETHODCALLTYPE *ClearStoredMessages )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetMessage) HRESULT ( STDMETHODCALLTYPE *GetMessage )( ID3D12InfoQueue * This, _In_ UINT64 MessageIndex, _Out_writes_bytes_opt_(*pMessageByteLength) D3D12_MESSAGE *pMessage, _Inout_ SIZE_T *pMessageByteLength)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetNumMessagesAllowedByStorageFilter) UINT64 ( STDMETHODCALLTYPE *GetNumMessagesAllowedByStorageFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetNumMessagesDeniedByStorageFilter) UINT64 ( STDMETHODCALLTYPE *GetNumMessagesDeniedByStorageFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetNumStoredMessages) UINT64 ( STDMETHODCALLTYPE *GetNumStoredMessages )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetNumStoredMessagesAllowedByRetrievalFilter) UINT64 ( STDMETHODCALLTYPE *GetNumStoredMessagesAllowedByRetrievalFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetNumMessagesDiscardedByMessageCountLimit) UINT64 ( STDMETHODCALLTYPE *GetNumMessagesDiscardedByMessageCountLimit )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetMessageCountLimit) UINT64 ( STDMETHODCALLTYPE *GetMessageCountLimit )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, AddStorageFilterEntries) HRESULT ( STDMETHODCALLTYPE *AddStorageFilterEntries )( ID3D12InfoQueue * This, _In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetStorageFilter) HRESULT ( STDMETHODCALLTYPE *GetStorageFilter )( ID3D12InfoQueue * This, _Out_writes_bytes_opt_(*pFilterByteLength) D3D12_INFO_QUEUE_FILTER *pFilter, _Inout_ SIZE_T *pFilterByteLength)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, ClearStorageFilter) void ( STDMETHODCALLTYPE *ClearStorageFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushEmptyStorageFilter) HRESULT ( STDMETHODCALLTYPE *PushEmptyStorageFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushCopyOfStorageFilter) HRESULT ( STDMETHODCALLTYPE *PushCopyOfStorageFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushStorageFilter) HRESULT ( STDMETHODCALLTYPE *PushStorageFilter )( ID3D12InfoQueue * This, _In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PopStorageFilter) void ( STDMETHODCALLTYPE *PopStorageFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetStorageFilterStackSize) UINT ( STDMETHODCALLTYPE *GetStorageFilterStackSize )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, AddRetrievalFilterEntries) HRESULT ( STDMETHODCALLTYPE *AddRetrievalFilterEntries )( ID3D12InfoQueue * This, _In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetRetrievalFilter) HRESULT ( STDMETHODCALLTYPE *GetRetrievalFilter )( ID3D12InfoQueue * This, _Out_writes_bytes_opt_(*pFilterByteLength) D3D12_INFO_QUEUE_FILTER *pFilter, _Inout_ SIZE_T *pFilterByteLength)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, ClearRetrievalFilter) void ( STDMETHODCALLTYPE *ClearRetrievalFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushEmptyRetrievalFilter) HRESULT ( STDMETHODCALLTYPE *PushEmptyRetrievalFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushCopyOfRetrievalFilter) HRESULT ( STDMETHODCALLTYPE *PushCopyOfRetrievalFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushRetrievalFilter) HRESULT ( STDMETHODCALLTYPE *PushRetrievalFilter )( ID3D12InfoQueue * This, _In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PopRetrievalFilter) void ( STDMETHODCALLTYPE *PopRetrievalFilter )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetRetrievalFilterStackSize) UINT ( STDMETHODCALLTYPE *GetRetrievalFilterStackSize )( ID3D12InfoQueue * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, AddMessage) HRESULT ( STDMETHODCALLTYPE *AddMessage )( ID3D12InfoQueue * This, _In_ D3D12_MESSAGE_CATEGORY Category, _In_ D3D12_MESSAGE_SEVERITY Severity, _In_ D3D12_MESSAGE_ID ID, _In_ LPCSTR pDescription)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, AddApplicationMessage) HRESULT ( STDMETHODCALLTYPE *AddApplicationMessage )( ID3D12InfoQueue * This, _In_ D3D12_MESSAGE_SEVERITY Severity, _In_ LPCSTR pDescription)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, SetBreakOnCategory) HRESULT ( STDMETHODCALLTYPE *SetBreakOnCategory )( ID3D12InfoQueue * This, _In_ D3D12_MESSAGE_CATEGORY Category, _In_ BOOL bEnable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, SetBreakOnSeverity) HRESULT ( STDMETHODCALLTYPE *SetBreakOnSeverity )( ID3D12InfoQueue * This, _In_ D3D12_MESSAGE_SEVERITY Severity, _In_ BOOL bEnable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, SetBreakOnID) HRESULT ( STDMETHODCALLTYPE *SetBreakOnID )( ID3D12InfoQueue * This, _In_ D3D12_MESSAGE_ID ID, _In_ BOOL bEnable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetBreakOnCategory) BOOL ( STDMETHODCALLTYPE *GetBreakOnCategory )( ID3D12InfoQueue * This, _In_ D3D12_MESSAGE_CATEGORY Category)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetBreakOnSeverity) BOOL ( STDMETHODCALLTYPE *GetBreakOnSeverity )( ID3D12InfoQueue * This, _In_ D3D12_MESSAGE_SEVERITY Severity)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetBreakOnID) BOOL ( STDMETHODCALLTYPE *GetBreakOnID )( ID3D12InfoQueue * This, _In_ D3D12_MESSAGE_ID ID)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, SetMuteDebugOutput) void ( STDMETHODCALLTYPE *SetMuteDebugOutput )( ID3D12InfoQueue * This, _In_ BOOL bMute)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetMuteDebugOutput) BOOL ( STDMETHODCALLTYPE *GetMuteDebugOutput )( ID3D12InfoQueue * This)"
  },
  {
    "label": "ID3D12InfoQueue_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12InfoQueueVtbl ; interface ID3D12InfoQueue { CONST_VTBL struct ID3D12InfoQueueVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12InfoQueue_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12InfoQueue_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12InfoQueue_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12InfoQueue_SetMessageCountLimit(This,MessageCountLimit) \\ ( (This)->lpVtbl -> SetMessageCountLimit(This,MessageCountLimit) ) #define ID3D12InfoQueue_ClearStoredMessages(This) \\ ( (This)->lpVtbl -> ClearStoredMessages(This) ) #define ID3D12InfoQueue_GetMessage(This,MessageIndex,pMessage,pMessageByteLength) \\ ( (This)->lpVtbl -> GetMessage(This,MessageIndex,pMessage,pMessageByteLength) ) #define ID3D12InfoQueue_GetNumMessagesAllowedByStorageFilter(This) \\ ( (This)->lpVtbl -> GetNumMessagesAllowedByStorageFilter(This) ) #define ID3D12InfoQueue_GetNumMessagesDeniedByStorageFilter(This) \\ ( (This)->lpVtbl -> GetNumMessagesDeniedByStorageFilter(This) ) #define ID3D12InfoQueue_GetNumStoredMessages(This) \\ ( (This)->lpVtbl -> GetNumStoredMessages(This) ) #define ID3D12InfoQueue_GetNumStoredMessagesAllowedByRetrievalFilter(This) \\ ( (This)->lpVtbl -> GetNumStoredMessagesAllowedByRetrievalFilter(This) ) #define ID3D12InfoQueue_GetNumMessagesDiscardedByMessageCountLimit(This) \\ ( (This)->lpVtbl -> GetNumMessagesDiscardedByMessageCountLimit(This) ) #define ID3D12InfoQueue_GetMessageCountLimit(This) \\ ( (This)->lpVtbl -> GetMessageCountLimit(This) ) #define ID3D12InfoQueue_AddStorageFilterEntries(This,pFilter) \\ ( (This)->lpVtbl -> AddStorageFilterEntries(This,pFilter) ) #define ID3D12InfoQueue_GetStorageFilter(This,pFilter,pFilterByteLength) \\ ( (This)->lpVtbl -> GetStorageFilter(This,pFilter,pFilterByteLength) ) #define ID3D12InfoQueue_ClearStorageFilter(This) \\ ( (This)->lpVtbl -> ClearStorageFilter(This) ) #define ID3D12InfoQueue_PushEmptyStorageFilter(This) \\ ( (This)->lpVtbl -> PushEmptyStorageFilter(This) ) #define ID3D12InfoQueue_PushCopyOfStorageFilter(This) \\ ( (This)->lpVtbl -> PushCopyOfStorageFilter(This) ) #define ID3D12InfoQueue_PushStorageFilter(This,pFilter) \\ ( (This)->lpVtbl -> PushStorageFilter(This,pFilter) ) #define ID3D12InfoQueue_PopStorageFilter(This) \\ ( (This)->lpVtbl -> PopStorageFilter(This) ) #define ID3D12InfoQueue_GetStorageFilterStackSize(This) \\ ( (This)->lpVtbl -> GetStorageFilterStackSize(This) ) #define ID3D12InfoQueue_AddRetrievalFilterEntries(This,pFilter) \\ ( (This)->lpVtbl -> AddRetrievalFilterEntries(This,pFilter) ) #define ID3D12InfoQueue_GetRetrievalFilter(This,pFilter,pFilterByteLength) \\ ( (This)->lpVtbl -> GetRetrievalFilter(This,pFilter,pFilterByteLength) ) #define ID3D12InfoQueue_ClearRetrievalFilter(This) \\ ( (This)->lpVtbl -> ClearRetrievalFilter(This) ) #define ID3D12InfoQueue_PushEmptyRetrievalFilter(This) \\ ( (This)->lpVtbl -> PushEmptyRetrievalFilter(This) ) #define ID3D12InfoQueue_PushCopyOfRetrievalFilter(This) \\ ( (This)->lpVtbl -> PushCopyOfRetrievalFilter(This) ) #define ID3D12InfoQueue_PushRetrievalFilter(This,pFilter) \\ ( (This)->lpVtbl -> PushRetrievalFilter(This,pFilter) ) #define ID3D12InfoQueue_PopRetrievalFilter(This) \\ ( (This)->lpVtbl -> PopRetrievalFilter(This) ) #define ID3D12InfoQueue_GetRetrievalFilterStackSize(This) \\ ( (This)->lpVtbl -> GetRetrievalFilterStackSize(This) ) #define ID3D12InfoQueue_AddMessage(This,Category,Severity,ID,pDescription) \\ ( (This)->lpVtbl -> AddMessage(This,Category,Severity,ID,pDescription) ) #define ID3D12InfoQueue_AddApplicationMessage(This,Severity,pDescription) \\ ( (This)->lpVtbl -> AddApplicationMessage(This,Severity,pDescription) ) #define ID3D12InfoQueue_SetBreakOnCategory(This,Category,bEnable) \\ ( (This)->lpVtbl -> SetBreakOnCategory(This,Category,bEnable) ) #define ID3D12InfoQueue_SetBreakOnSeverity(This,Severity,bEnable) \\ ( (This)->lpVtbl -> SetBreakOnSeverity(This,Severity,bEnable) ) #define ID3D12InfoQueue_SetBreakOnID(This,ID,bEnable) \\ ( (This)->lpVtbl -> SetBreakOnID(This,ID,bEnable) ) #define ID3D12InfoQueue_GetBreakOnCategory(This,Category) \\ ( (This)->lpVtbl -> GetBreakOnCategory(This,Category) ) #define ID3D12InfoQueue_GetBreakOnSeverity(This,Severity) \\ ( (This)->lpVtbl -> GetBreakOnSeverity(This,Severity) ) #define ID3D12InfoQueue_GetBreakOnID(This,ID) \\ ( (This)->lpVtbl -> GetBreakOnID(This,ID) ) #define ID3D12InfoQueue_SetMuteDebugOutput(This,bMute) \\ ( (This)->lpVtbl -> SetMuteDebugOutput(This,bMute) ) #define ID3D12InfoQueue_GetMuteDebugOutput(This) \\ ( (This)->lpVtbl -> GetMuteDebugOutput(This))"
  },
  {
    "label": "DEFINE_ENUM_FLAG_OPERATORS()",
    "kind": "Method",
    "detail": "Function (D3D12_MESSAGE_CALLBACK_FLAG_NONE = 0,D3D12_MESSAGE_CALLBACK_IGNORE_FILTERS = 0 x1 } D3D12_MESSAGE_CALLBACK_FLAGS ;)",
    "insertText": "DEFINE_ENUM_FLAG_OPERATORS(D3D12_MESSAGE_CALLBACK_FLAGS) typedef void ( __stdcall *D3D12MessageFunc )( D3D12_MESSAGE_CATEGORY Category, D3D12_MESSAGE_SEVERITY Severity, D3D12_MESSAGE_ID ID, LPCSTR pDescription, void *pContext)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0019_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d12sdklayers_0000_0019_v0_0_s_ifspec ; # ifndef __ID3D12InfoQueue1_INTERFACE_DEFINED__ # define __ID3D12InfoQueue1_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D12InfoQueue1 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"2852dd88-b484-4c0c-b6b1-67168500e600\")"
  },
  {
    "label": "RegisterMessageCallback()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "RegisterMessageCallback(_In_ D3D12MessageFunc CallbackFunc, _In_ D3D12_MESSAGE_CALLBACK_FLAGS CallbackFilterFlags, _Inout_ void *pContext, _Inout_ DWORD *pCallbackCookie)"
  },
  {
    "label": "UnregisterMessageCallback()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "UnregisterMessageCallback(_In_ DWORD CallbackCookie)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D12InfoQueue1Vtbl { BEGIN_INTERFACE)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, QueryInterface) HRESULT ( STDMETHODCALLTYPE *QueryInterface )( ID3D12InfoQueue1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, AddRef) ULONG ( STDMETHODCALLTYPE *AddRef )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(IUnknown, Release) ULONG ( STDMETHODCALLTYPE *Release )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, SetMessageCountLimit) HRESULT ( STDMETHODCALLTYPE *SetMessageCountLimit )( ID3D12InfoQueue1 * This, _In_ UINT64 MessageCountLimit)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, ClearStoredMessages) void ( STDMETHODCALLTYPE *ClearStoredMessages )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetMessage) HRESULT ( STDMETHODCALLTYPE *GetMessage )( ID3D12InfoQueue1 * This, _In_ UINT64 MessageIndex, _Out_writes_bytes_opt_(*pMessageByteLength) D3D12_MESSAGE *pMessage, _Inout_ SIZE_T *pMessageByteLength)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetNumMessagesAllowedByStorageFilter) UINT64 ( STDMETHODCALLTYPE *GetNumMessagesAllowedByStorageFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetNumMessagesDeniedByStorageFilter) UINT64 ( STDMETHODCALLTYPE *GetNumMessagesDeniedByStorageFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetNumStoredMessages) UINT64 ( STDMETHODCALLTYPE *GetNumStoredMessages )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetNumStoredMessagesAllowedByRetrievalFilter) UINT64 ( STDMETHODCALLTYPE *GetNumStoredMessagesAllowedByRetrievalFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetNumMessagesDiscardedByMessageCountLimit) UINT64 ( STDMETHODCALLTYPE *GetNumMessagesDiscardedByMessageCountLimit )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetMessageCountLimit) UINT64 ( STDMETHODCALLTYPE *GetMessageCountLimit )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, AddStorageFilterEntries) HRESULT ( STDMETHODCALLTYPE *AddStorageFilterEntries )( ID3D12InfoQueue1 * This, _In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetStorageFilter) HRESULT ( STDMETHODCALLTYPE *GetStorageFilter )( ID3D12InfoQueue1 * This, _Out_writes_bytes_opt_(*pFilterByteLength) D3D12_INFO_QUEUE_FILTER *pFilter, _Inout_ SIZE_T *pFilterByteLength)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, ClearStorageFilter) void ( STDMETHODCALLTYPE *ClearStorageFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushEmptyStorageFilter) HRESULT ( STDMETHODCALLTYPE *PushEmptyStorageFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushCopyOfStorageFilter) HRESULT ( STDMETHODCALLTYPE *PushCopyOfStorageFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushStorageFilter) HRESULT ( STDMETHODCALLTYPE *PushStorageFilter )( ID3D12InfoQueue1 * This, _In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PopStorageFilter) void ( STDMETHODCALLTYPE *PopStorageFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetStorageFilterStackSize) UINT ( STDMETHODCALLTYPE *GetStorageFilterStackSize )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, AddRetrievalFilterEntries) HRESULT ( STDMETHODCALLTYPE *AddRetrievalFilterEntries )( ID3D12InfoQueue1 * This, _In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetRetrievalFilter) HRESULT ( STDMETHODCALLTYPE *GetRetrievalFilter )( ID3D12InfoQueue1 * This, _Out_writes_bytes_opt_(*pFilterByteLength) D3D12_INFO_QUEUE_FILTER *pFilter, _Inout_ SIZE_T *pFilterByteLength)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, ClearRetrievalFilter) void ( STDMETHODCALLTYPE *ClearRetrievalFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushEmptyRetrievalFilter) HRESULT ( STDMETHODCALLTYPE *PushEmptyRetrievalFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushCopyOfRetrievalFilter) HRESULT ( STDMETHODCALLTYPE *PushCopyOfRetrievalFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PushRetrievalFilter) HRESULT ( STDMETHODCALLTYPE *PushRetrievalFilter )( ID3D12InfoQueue1 * This, _In_ D3D12_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, PopRetrievalFilter) void ( STDMETHODCALLTYPE *PopRetrievalFilter )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetRetrievalFilterStackSize) UINT ( STDMETHODCALLTYPE *GetRetrievalFilterStackSize )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, AddMessage) HRESULT ( STDMETHODCALLTYPE *AddMessage )( ID3D12InfoQueue1 * This, _In_ D3D12_MESSAGE_CATEGORY Category, _In_ D3D12_MESSAGE_SEVERITY Severity, _In_ D3D12_MESSAGE_ID ID, _In_ LPCSTR pDescription)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, AddApplicationMessage) HRESULT ( STDMETHODCALLTYPE *AddApplicationMessage )( ID3D12InfoQueue1 * This, _In_ D3D12_MESSAGE_SEVERITY Severity, _In_ LPCSTR pDescription)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, SetBreakOnCategory) HRESULT ( STDMETHODCALLTYPE *SetBreakOnCategory )( ID3D12InfoQueue1 * This, _In_ D3D12_MESSAGE_CATEGORY Category, _In_ BOOL bEnable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, SetBreakOnSeverity) HRESULT ( STDMETHODCALLTYPE *SetBreakOnSeverity )( ID3D12InfoQueue1 * This, _In_ D3D12_MESSAGE_SEVERITY Severity, _In_ BOOL bEnable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, SetBreakOnID) HRESULT ( STDMETHODCALLTYPE *SetBreakOnID )( ID3D12InfoQueue1 * This, _In_ D3D12_MESSAGE_ID ID, _In_ BOOL bEnable)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetBreakOnCategory) BOOL ( STDMETHODCALLTYPE *GetBreakOnCategory )( ID3D12InfoQueue1 * This, _In_ D3D12_MESSAGE_CATEGORY Category)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetBreakOnSeverity) BOOL ( STDMETHODCALLTYPE *GetBreakOnSeverity )( ID3D12InfoQueue1 * This, _In_ D3D12_MESSAGE_SEVERITY Severity)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetBreakOnID) BOOL ( STDMETHODCALLTYPE *GetBreakOnID )( ID3D12InfoQueue1 * This, _In_ D3D12_MESSAGE_ID ID)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, SetMuteDebugOutput) void ( STDMETHODCALLTYPE *SetMuteDebugOutput )( ID3D12InfoQueue1 * This, _In_ BOOL bMute)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue, GetMuteDebugOutput) BOOL ( STDMETHODCALLTYPE *GetMuteDebugOutput )( ID3D12InfoQueue1 * This)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue1, RegisterMessageCallback) HRESULT ( STDMETHODCALLTYPE *RegisterMessageCallback )( ID3D12InfoQueue1 * This, _In_ D3D12MessageFunc CallbackFunc, _In_ D3D12_MESSAGE_CALLBACK_FLAGS CallbackFilterFlags, _Inout_ void *pContext, _Inout_ DWORD *pCallbackCookie)"
  },
  {
    "label": "DECLSPEC_XFGVIRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLSPEC_XFGVIRT(ID3D12InfoQueue1, UnregisterMessageCallback) HRESULT ( STDMETHODCALLTYPE *UnregisterMessageCallback )( ID3D12InfoQueue1 * This, _In_ DWORD CallbackCookie)"
  },
  {
    "label": "ID3D12InfoQueue1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D12InfoQueue1Vtbl ; interface ID3D12InfoQueue1 { CONST_VTBL struct ID3D12InfoQueue1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D12InfoQueue1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D12InfoQueue1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D12InfoQueue1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D12InfoQueue1_SetMessageCountLimit(This,MessageCountLimit) \\ ( (This)->lpVtbl -> SetMessageCountLimit(This,MessageCountLimit) ) #define ID3D12InfoQueue1_ClearStoredMessages(This) \\ ( (This)->lpVtbl -> ClearStoredMessages(This) ) #define ID3D12InfoQueue1_GetMessage(This,MessageIndex,pMessage,pMessageByteLength) \\ ( (This)->lpVtbl -> GetMessage(This,MessageIndex,pMessage,pMessageByteLength) ) #define ID3D12InfoQueue1_GetNumMessagesAllowedByStorageFilter(This) \\ ( (This)->lpVtbl -> GetNumMessagesAllowedByStorageFilter(This) ) #define ID3D12InfoQueue1_GetNumMessagesDeniedByStorageFilter(This) \\ ( (This)->lpVtbl -> GetNumMessagesDeniedByStorageFilter(This) ) #define ID3D12InfoQueue1_GetNumStoredMessages(This) \\ ( (This)->lpVtbl -> GetNumStoredMessages(This) ) #define ID3D12InfoQueue1_GetNumStoredMessagesAllowedByRetrievalFilter(This) \\ ( (This)->lpVtbl -> GetNumStoredMessagesAllowedByRetrievalFilter(This) ) #define ID3D12InfoQueue1_GetNumMessagesDiscardedByMessageCountLimit(This) \\ ( (This)->lpVtbl -> GetNumMessagesDiscardedByMessageCountLimit(This) ) #define ID3D12InfoQueue1_GetMessageCountLimit(This) \\ ( (This)->lpVtbl -> GetMessageCountLimit(This) ) #define ID3D12InfoQueue1_AddStorageFilterEntries(This,pFilter) \\ ( (This)->lpVtbl -> AddStorageFilterEntries(This,pFilter) ) #define ID3D12InfoQueue1_GetStorageFilter(This,pFilter,pFilterByteLength) \\ ( (This)->lpVtbl -> GetStorageFilter(This,pFilter,pFilterByteLength) ) #define ID3D12InfoQueue1_ClearStorageFilter(This) \\ ( (This)->lpVtbl -> ClearStorageFilter(This) ) #define ID3D12InfoQueue1_PushEmptyStorageFilter(This) \\ ( (This)->lpVtbl -> PushEmptyStorageFilter(This) ) #define ID3D12InfoQueue1_PushCopyOfStorageFilter(This) \\ ( (This)->lpVtbl -> PushCopyOfStorageFilter(This) ) #define ID3D12InfoQueue1_PushStorageFilter(This,pFilter) \\ ( (This)->lpVtbl -> PushStorageFilter(This,pFilter) ) #define ID3D12InfoQueue1_PopStorageFilter(This) \\ ( (This)->lpVtbl -> PopStorageFilter(This) ) #define ID3D12InfoQueue1_GetStorageFilterStackSize(This) \\ ( (This)->lpVtbl -> GetStorageFilterStackSize(This) ) #define ID3D12InfoQueue1_AddRetrievalFilterEntries(This,pFilter) \\ ( (This)->lpVtbl -> AddRetrievalFilterEntries(This,pFilter) ) #define ID3D12InfoQueue1_GetRetrievalFilter(This,pFilter,pFilterByteLength) \\ ( (This)->lpVtbl -> GetRetrievalFilter(This,pFilter,pFilterByteLength) ) #define ID3D12InfoQueue1_ClearRetrievalFilter(This) \\ ( (This)->lpVtbl -> ClearRetrievalFilter(This) ) #define ID3D12InfoQueue1_PushEmptyRetrievalFilter(This) \\ ( (This)->lpVtbl -> PushEmptyRetrievalFilter(This) ) #define ID3D12InfoQueue1_PushCopyOfRetrievalFilter(This) \\ ( (This)->lpVtbl -> PushCopyOfRetrievalFilter(This) ) #define ID3D12InfoQueue1_PushRetrievalFilter(This,pFilter) \\ ( (This)->lpVtbl -> PushRetrievalFilter(This,pFilter) ) #define ID3D12InfoQueue1_PopRetrievalFilter(This) \\ ( (This)->lpVtbl -> PopRetrievalFilter(This) ) #define ID3D12InfoQueue1_GetRetrievalFilterStackSize(This) \\ ( (This)->lpVtbl -> GetRetrievalFilterStackSize(This) ) #define ID3D12InfoQueue1_AddMessage(This,Category,Severity,ID,pDescription) \\ ( (This)->lpVtbl -> AddMessage(This,Category,Severity,ID,pDescription) ) #define ID3D12InfoQueue1_AddApplicationMessage(This,Severity,pDescription) \\ ( (This)->lpVtbl -> AddApplicationMessage(This,Severity,pDescription) ) #define ID3D12InfoQueue1_SetBreakOnCategory(This,Category,bEnable) \\ ( (This)->lpVtbl -> SetBreakOnCategory(This,Category,bEnable) ) #define ID3D12InfoQueue1_SetBreakOnSeverity(This,Severity,bEnable) \\ ( (This)->lpVtbl -> SetBreakOnSeverity(This,Severity,bEnable) ) #define ID3D12InfoQueue1_SetBreakOnID(This,ID,bEnable) \\ ( (This)->lpVtbl -> SetBreakOnID(This,ID,bEnable) ) #define ID3D12InfoQueue1_GetBreakOnCategory(This,Category) \\ ( (This)->lpVtbl -> GetBreakOnCategory(This,Category) ) #define ID3D12InfoQueue1_GetBreakOnSeverity(This,Severity) \\ ( (This)->lpVtbl -> GetBreakOnSeverity(This,Severity) ) #define ID3D12InfoQueue1_GetBreakOnID(This,ID) \\ ( (This)->lpVtbl -> GetBreakOnID(This,ID) ) #define ID3D12InfoQueue1_SetMuteDebugOutput(This,bMute) \\ ( (This)->lpVtbl -> SetMuteDebugOutput(This,bMute) ) #define ID3D12InfoQueue1_GetMuteDebugOutput(This) \\ ( (This)->lpVtbl -> GetMuteDebugOutput(This) ) #define ID3D12InfoQueue1_RegisterMessageCallback(This,CallbackFunc,CallbackFilterFlags,pContext,pCallbackCookie) \\ ( (This)->lpVtbl -> RegisterMessageCallback(This,CallbackFunc,CallbackFilterFlags,pContext,pCallbackCookie) ) #define ID3D12InfoQueue1_UnregisterMessageCallback(This,CallbackCookie) \\ ( (This)->lpVtbl -> UnregisterMessageCallback(This,CallbackCookie) ) #endif #endif #endif #endif #pragma endregion DEFINE_GUID(IID_ID3D12Debug,0x344488b7,0x6846,0x474b,0xb9,0x89,0xf0,0x27,0x44,0x82,0x45,0xe0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12Debug1,0xaffaa4ca,0x63fe,0x4d8e,0xb8,0xad,0x15,0x90,0x00,0xaf,0x43,0x04)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12Debug2,0x93a665c4,0xa3b2,0x4e5d,0xb6,0x92,0xa2,0x6a,0xe1,0x4e,0x33,0x74)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12Debug3,0x5cf4e58f,0xf671,0x4ff1,0xa5,0x42,0x36,0x86,0xe3,0xd1,0x53,0xd1)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12Debug4,0x014b816e,0x9ec5,0x4a2f,0xa8,0x45,0xff,0xbe,0x44,0x1c,0xe1,0x3a)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12Debug5,0x548d6b12,0x09fa,0x40e0,0x90,0x69,0x5d,0xcd,0x58,0x9a,0x52,0xc9)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12Debug6,0x82a816d6,0x5d01,0x4157,0x97,0xd0,0x49,0x75,0x46,0x3f,0xd1,0xed)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12DebugDevice1,0xa9b71770,0xd099,0x4a65,0xa6,0x98,0x3d,0xee,0x10,0x02,0x0f,0x88)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12DebugDevice,0x3febd6dd,0x4973,0x4787,0x81,0x94,0xe4,0x5f,0x9e,0x28,0x92,0x3e)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12DebugDevice2,0x60eccbc1,0x378d,0x4df1,0x89,0x4c,0xf8,0xac,0x5c,0xe4,0xd7,0xdd)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12DebugCommandQueue,0x09e0bf36,0x54ac,0x484f,0x88,0x47,0x4b,0xae,0xea,0xb6,0x05,0x3a)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12DebugCommandQueue1,0x16be35a2,0xbfd6,0x49f2,0xbc,0xae,0xea,0xae,0x4a,0xff,0x86,0x2d)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12DebugCommandList1,0x102ca951,0x311b,0x4b01,0xb1,0x1f,0xec,0xb8,0x3e,0x06,0x1b,0x37)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12DebugCommandList,0x09e0bf36,0x54ac,0x484f,0x88,0x47,0x4b,0xae,0xea,0xb6,0x05,0x3f)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12DebugCommandList2,0xaeb575cf,0x4e06,0x48be,0xba,0x3b,0xc4,0x50,0xfc,0x96,0x65,0x2e)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12DebugCommandList3,0x197d5e15,0x4d37,0x4d34,0xaf,0x78,0x72,0x4c,0xd7,0x0f,0xdb,0x1f)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12SharingContract,0x0adf7d52,0x929c,0x4e61,0xad,0xdb,0xff,0xed,0x30,0xde,0x66,0xef)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12ManualWriteTrackingResource,0x86ca3b85,0x49ad,0x4b6e,0xae,0xd5,0xed,0xdb,0x18,0x54,0x0f,0x41)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12InfoQueue,0x0742a90b,0xc387,0x483f,0xb9,0x46,0x30,0xa7,0xe4,0xe6,0x14,0x58)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D12InfoQueue1,0x2852dd88,0xb484,0x4c0c,0xb6,0xb1,0x67,0x16,0x85,0x00,0xe6,0x00)"
  }
]