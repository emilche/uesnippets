[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SDeleteReferencedActorDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDeleteReferencedActorDialog"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Dialog / SMessageDialog . h \" # include \" Widgets / SCompoundWidget . h \" # include \" SDeleteReferencedActorDialog . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (None = 0,ActorOrAsset = 1<<0,Group = 1<<1,LevelBlueprint = 1<<2,All = ActorOrAsset | Group | LevelBlueprint,LevelAndActorOrAsset = ActorOrAsset | LevelBlueprint,GroupAndActorOrAsset = ActorOrAsset | Group,LevelAndGroup = Group | LevelBlueprint } ;)",
    "insertText": "ENUM_CLASS_FLAGS(EDeletedActorReferenceTypes)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class STableViewBase ; class SDeleteReferencedActorDialog : public SCustomDialog { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SDeleteReferencedActorDialog) : _ShowApplyToAll(false) , _ReferenceTypes(EDeletedActorReferenceTypes::None)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(bool, ShowApplyToAll) SLATE_ARGUMENT(FString, ActorToDeleteLabel) SLATE_ARGUMENT(EDeletedActorReferenceTypes, ReferenceTypes) SLATE_ARGUMENT(TArray<TSharedPtr<FText>>, Referencers) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& InGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "GetApplyToAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetApplyToAll()"
  },
  {
    "label": "OnApplyToAllCheckboxStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApplyToAllCheckboxStateChanged(ECheckBoxState InCheckBoxState)"
  },
  {
    "label": "GetApplyToAllCheckboxVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetApplyToAllCheckboxVisibility()"
  },
  {
    "label": "GetReferencersListVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetReferencersListVisibility()"
  },
  {
    "label": "CopyMessageToClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyMessageToClipboard()"
  },
  {
    "label": "OnCopyMessageClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCopyMessageClicked()"
  },
  {
    "label": "OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRow(TSharedPtr<FText> InText, const TSharedRef<STableViewBase>& InTableView)"
  }
]