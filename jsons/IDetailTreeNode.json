[
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNodeWidgetLayoutData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeWidgetLayoutData"
  },
  {
    "label": "FNodeWidgetActionsCustomMenuData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeWidgetActionsCustomMenuData"
  },
  {
    "label": "FNodeWidgetActions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeWidgetActions"
  },
  {
    "label": "FNodeWidgets",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeWidgets"
  },
  {
    "label": "IDetailTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailTreeNode"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "IDetailPropertyRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailPropertyRow"
  },
  {
    "label": "FNodeWidgetLayoutData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Types / SlateEnums . h \" # include \" Framework / Commands / UIAction . h \" # include \" Textures / SlateIcon . h \" class IPropertyHandle ; class SWidget ; enum class EDetailNodeType { Category,Item,Advanced,Object,} ; struct FNodeWidgetLayoutData {)",
    "insertText": "FNodeWidgetLayoutData()"
  },
  {
    "label": "FNodeWidgetLayoutData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNodeWidgetLayoutData(EHorizontalAlignment InHorizontalAlignment, EVerticalAlignment InVerticalAlignment, TOptional<float> InMinWidth, TOptional<float> InMaxWidth) : HorizontalAlignment(InHorizontalAlignment) , VerticalAlignment(InVerticalAlignment) , MinWidth(InMinWidth) , MaxWidth(InMaxWidth)"
  },
  {
    "label": "FNodeWidgetActionsCustomMenuData()",
    "kind": "Method",
    "detail": "Function (} EHorizontalAlignment HorizontalAlignment ; EVerticalAlignment VerticalAlignment ; TOptional<float> MinWidth ; TOptional<float> MaxWidth ; } ; struct FNodeWidgetActionsCustomMenuData {)",
    "insertText": "FNodeWidgetActionsCustomMenuData(const FUIAction& InAction, const FText& InName, const FText& InTooltip, const FSlateIcon& InSlateIcon) : Action(InAction) , Name(InName) , Tooltip(InTooltip) , SlateIcon(InSlateIcon)"
  },
  {
    "label": "IDetailTreeNode()",
    "kind": "Method",
    "detail": "Function (} const FUIAction Action ; const FText Name ; const FText Tooltip ; const FSlateIcon SlateIcon ; } ; struct FNodeWidgetActions { FUIAction CopyMenuAction ; FUIAction PasteMenuAction ; TArray<FNodeWidgetActionsCustomMenuData> CustomMenuItems ; } ; struct FNodeWidgets { TSharedPtr<SWidget> NameWidget ; FNodeWidgetLayoutData NameWidgetLayoutData ; TSharedPtr<SWidget> ValueWidget ; FNodeWidgetLayoutData ValueWidgetLayoutData ; TSharedPtr<SWidget> WholeRowWidget ; FNodeWidgetLayoutData WholeRowWidgetLayoutData ; TSharedPtr<SWidget> EditConditionWidget ; FNodeWidgetActions Actions ; } ; class IDetailTreeNode { public : ~)",
    "insertText": "IDetailTreeNode()"
  },
  {
    "label": "GetNodeDetailsView()",
    "kind": "Method",
    "detail": "Function (} class IDetailsView*)",
    "insertText": "GetNodeDetailsView()"
  },
  {
    "label": "GetNodeType()",
    "kind": "Method",
    "detail": "Function (EDetailNodeType)",
    "insertText": "GetNodeType()"
  },
  {
    "label": "CreatePropertyHandle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle>)",
    "insertText": "CreatePropertyHandle()"
  },
  {
    "label": "CreateNodeWidgets()",
    "kind": "Method",
    "detail": "Function (FNodeWidgets)",
    "insertText": "CreateNodeWidgets()"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChildren(TArray<TSharedRef<IDetailTreeNode>>& OutChildren, const bool& bInIgnoreVisibility = false)"
  },
  {
    "label": "GetNodeName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetNodeName()"
  },
  {
    "label": "GetRow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IDetailPropertyRow>)",
    "insertText": "GetRow()"
  },
  {
    "label": "GetFilterStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilterStrings(TArray<FString>& OutFilterStrings)"
  },
  {
    "label": "GetInitiallyCollapsed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInitiallyCollapsed()"
  }
]