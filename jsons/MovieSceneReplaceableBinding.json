[
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "UMovieSceneSpawnableBindingBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSpawnableBindingBase"
  },
  {
    "label": "MOVIESCENE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENE_API"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Bindings / MovieSceneCustomBinding . h \" # include \" MovieSceneSequenceID . h \" # include \" MovieSceneSpawnableBinding . h \" # include \" Templates / SubclassOf . h \" # include \" MovieSceneReplaceableBinding . generated . h \" namespace UE { namespace MovieScene { struct FSharedPlaybackState ; } } struct FGuid ; class UMovieScene ; struct FSlateBrush ; class UMovieSceneSpawnableBindingBase ;)",
    "insertText": "UCLASS(Abstract)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() public: virtual bool SupportsBindingCreationFromObject(const UObject* SourceObject)"
  },
  {
    "label": "GetBoundObjectClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetBoundObjectClass()"
  },
  {
    "label": "SetupDefaults()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetupDefaults(UObject* SpawnedObject, FGuid ObjectBindingId, UMovieScene& OwnerMovieScene)"
  },
  {
    "label": "GetBindingTrackCustomIconOverlay()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetBindingTrackCustomIconOverlay()"
  },
  {
    "label": "GetBindingTrackIconTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBindingTrackIconTooltip()"
  },
  {
    "label": "SupportsConversionFromBinding()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsConversionFromBinding(const FMovieSceneBindingReference& BindingReference, const UObject* SourceObject)"
  },
  {
    "label": "CreateCustomBindingFromBinding()",
    "kind": "Method",
    "detail": "Function (UMovieSceneCustomBinding*)",
    "insertText": "CreateCustomBindingFromBinding(const FMovieSceneBindingReference& BindingReference, UObject* SourceObject, UMovieScene& OwnerMovieScene)"
  },
  {
    "label": "CreateNewCustomBinding()",
    "kind": "Method",
    "detail": "Function (# endif public : UMovieSceneCustomBinding*)",
    "insertText": "CreateNewCustomBinding(UObject* SourceObject, UMovieScene& OwnerMovieScene)"
  },
  {
    "label": "ResolveRuntimeBindingInternal()",
    "kind": "Method",
    "detail": "Function (protected : FMovieSceneBindingResolveResult)",
    "insertText": "ResolveRuntimeBindingInternal(const FMovieSceneBindingResolveParams& ResolveParams, int32 BindingIndex, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState) const PURE_VIRTUAL(UMovieSceneReplaceableBindingBase::ResolveRuntimeBindingInternal, return FMovieSceneBindingResolveResult();)"
  },
  {
    "label": "CreateInnerSpawnable()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSpawnableBindingBase*)",
    "insertText": "CreateInnerSpawnable(UObject* SourceObject, UMovieScene& OwnerMovieScene)"
  },
  {
    "label": "GetInnerSpawnableClass()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<UMovieSceneSpawnableBindingBase>)",
    "insertText": "GetInnerSpawnableClass() const PURE_VIRTUAL(UMovieSceneReplaceableBindingBase::GetInnerSpawnableClass, return nullptr;)"
  },
  {
    "label": "InitReplaceableBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitReplaceableBinding(UObject* SourceObject, UMovieScene & OwnerMovieScene) PURE_VIRTUAL(UMovieSceneReplaceableBindingBase::InitReplaceableBinding, return;)"
  },
  {
    "label": "WillSpawnObject()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "WillSpawnObject(TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "ResolveBinding()",
    "kind": "Method",
    "detail": "Function (FMovieSceneBindingResolveResult)",
    "insertText": "ResolveBinding(const FMovieSceneBindingResolveParams& ResolveParams, int32 BindingIndex, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "AsSpawnable()",
    "kind": "Method",
    "detail": "Function (const UMovieSceneSpawnableBindingBase*)",
    "insertText": "AsSpawnable(TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  }
]