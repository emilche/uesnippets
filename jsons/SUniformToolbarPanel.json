[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "ISlateStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateStyle"
  },
  {
    "label": "SUniformToolbarPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SUniformToolbarPanel"
  },
  {
    "label": "FSlot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlot"
  },
  {
    "label": "FSlot()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" SlotBase . h \" # include \" Layout / Margin . h \" # include \" Widgets / SWidget . h \" # include \" Layout / Children . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SPanel . h \" # include \" Framework / SlateDelegates . h \" class FArrangedChildren ; class SComboButton ; class ISlateStyle ; class SUniformToolbarPanel : public SPanel { public : struct FSlot : public TSlotBase<FSlot>,public TAlignmentWidgetSlotMixin<FSlot> {)",
    "insertText": "FSlot() : TSlotBase<FSlot>() , TAlignmentWidgetSlotMixin<FSlot>(HAlign_Fill, VAlign_Fill)"
  },
  {
    "label": "FSlot()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSlot(const TSharedRef<SWidget>& InWidget) : TSlotBase<FSlot>(InWidget) , TAlignmentWidgetSlotMixin<FSlot>(HAlign_Fill, VAlign_Fill)"
  },
  {
    "label": "SLATE_SLOT_BEGIN_ARGS_OneMixin()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_SLOT_BEGIN_ARGS_OneMixin(FSlot, TSlotBase<FSlot>, TAlignmentWidgetSlotMixin<FSlot>) SLATE_SLOT_END_ARGS() void Construct(const FChildren& SlotOwner, FSlotArguments&& InArgs)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (TSlotBase<FSlot)",
    "insertText": "Construct(SlotOwner, MoveTemp(InArgs))"
  },
  {
    "label": "ConstructMixin()",
    "kind": "Method",
    "detail": "Function (TAlignmentWidgetSlotMixin<FSlot)",
    "insertText": "ConstructMixin(SlotOwner, MoveTemp(InArgs))"
  },
  {
    "label": "SUniformToolbarPanel()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "SUniformToolbarPanel()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SUniformToolbarPanel) : _Orientation(EOrientation::Orient_Horizontal) , _SlotPadding(FMargin(0.0f)) , _MinDesiredSlotSize(FVector2D(0.0f,0.0f)) , _MaxUniformSize(0.0f) , _MinUniformSize(0.0f)"
  },
  {
    "label": "SLATE_SLOT_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (_Visibility = EVisibility::SelfHitTestInvisible ; })",
    "insertText": "SLATE_SLOT_ARGUMENT(FSlot, Slots) SLATE_ARGUMENT(const ISlateStyle*, StyleSet) SLATE_ARGUMENT(FName, StyleName) SLATE_ARGUMENT(EOrientation, Orientation) SLATE_ATTRIBUTE(FMargin, SlotPadding) SLATE_ATTRIBUTE(FVector2D, MinDesiredSlotSize) SLATE_ATTRIBUTE(float, MaxUniformSize) SLATE_ATTRIBUTE(float, MinUniformSize) SLATE_EVENT(FOnGetContent, OnDropdownOpened) SLATE_END_ARGS() SLATE_API void Construct( const FArguments& InArgs)"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (FChildren*)",
    "insertText": "GetChildren()"
  },
  {
    "label": "SetSlotPadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSlotPadding(TAttribute<FMargin> InSlotPadding)"
  },
  {
    "label": "Slot()",
    "kind": "Method",
    "detail": "Function (FSlot::FSlotArguments)",
    "insertText": "Slot()"
  },
  {
    "label": "AddSlot()",
    "kind": "Method",
    "detail": "Function (using FScopedWidgetSlotArguments = TPanelChildren<FSlot>::FScopedWidgetSlotArguments ; FScopedWidgetSlotArguments)",
    "insertText": "AddSlot()"
  },
  {
    "label": "RemoveSlot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveSlot(const TSharedRef<SWidget>& SlotWidget)"
  },
  {
    "label": "GetClippedIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetClippedIndex()"
  }
]