[
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "UAssetViewerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetViewerSettings"
  },
  {
    "label": "UMaterialInstanceConstant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceConstant"
  },
  {
    "label": "UPostProcessComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPostProcessComponent"
  },
  {
    "label": "USkyLightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkyLightComponent"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "USphereReflectionCaptureComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USphereReflectionCaptureComponent"
  },
  {
    "label": "FPreviewSceneProfile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreviewSceneProfile"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "ADVANCEDPREVIEWSCENE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ADVANCEDPREVIEWSCENE_API"
  },
  {
    "label": "FAdvancedPreviewScene()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UnrealClient . h \" # include \" Stats / Stats . h \" # include \" InputCoreTypes . h \" # include \" PreviewScene . h \" # include \" TickableEditorObject . h \" class FViewport ; class UAssetViewerSettings ; class UMaterialInstanceConstant ; class UPostProcessComponent ; class USkyLightComponent ; class UStaticMeshComponent ; class USphereReflectionCaptureComponent ; struct FPreviewSceneProfile ; class FUICommandList ; class FAdvancedPreviewScene : public FPreviewScene,public FTickableEditorObject { public :)",
    "insertText": "FAdvancedPreviewScene(ConstructionValues CVS, float InFloorOffset = 0.0f)"
  },
  {
    "label": "FAdvancedPreviewScene()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FAdvancedPreviewScene()"
  },
  {
    "label": "UpdateScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateScene(FPreviewSceneProfile& Profile, bool bUpdateSkyLight = true, bool bUpdateEnvironment = true, bool bUpdatePostProcessing = true, bool bUpdateDirectionalLight = true)"
  },
  {
    "label": "GetBackgroundColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetBackgroundColor()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "GetTickableTickType()",
    "kind": "Method",
    "detail": "Function (ETickableTickType)",
    "insertText": "GetTickableTickType()"
  },
  {
    "label": "HandleViewportInput()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "HandleViewportInput(FViewport* InViewport, FInputDeviceId DeviceId, FKey Key, float Delta, float DeltaTime, int32 NumSamples, bool bGamepad)"
  },
  {
    "label": "HandleInputKey()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "HandleInputKey(const FInputKeyEventArgs& EventArgs)"
  },
  {
    "label": "SetSkyRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSkyRotation(const float SkyRotation)"
  },
  {
    "label": "GetFloorVisibility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFloorVisibility()"
  },
  {
    "label": "SetFloorVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFloorVisibility(const bool bVisible, const bool bDirect = false)"
  },
  {
    "label": "SetEnvironmentVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnvironmentVisibility(const bool bVisible, const bool bDirect = false)"
  },
  {
    "label": "GetFloorOffset()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetFloorOffset()"
  },
  {
    "label": "SetFloorOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFloorOffset(const float InFloorOffset)"
  },
  {
    "label": "SetProfileIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProfileIndex(const int32 InProfileIndex)"
  },
  {
    "label": "GetFloorMeshComponent()",
    "kind": "Method",
    "detail": "Function (const UStaticMeshComponent*)",
    "insertText": "GetFloorMeshComponent()"
  },
  {
    "label": "GetSkyRotation()",
    "kind": "Method",
    "detail": "Function (const float)",
    "insertText": "GetSkyRotation()"
  },
  {
    "label": "GetCurrentProfileIndex()",
    "kind": "Method",
    "detail": "Function (const int32)",
    "insertText": "GetCurrentProfileIndex()"
  },
  {
    "label": "IsUsingPostProcessing()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsUsingPostProcessing()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "HandleToggleEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleEnvironment()"
  },
  {
    "label": "HandleToggleFloor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleFloor()"
  },
  {
    "label": "HandleTogglePostProcessing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTogglePostProcessing()"
  },
  {
    "label": "OnAssetViewerSettingsRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetViewerSettingsRefresh(const FName& InPropertyName)"
  }
]