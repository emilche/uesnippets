[
  {
    "label": "UMovieSceneBlenderSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneBlenderSystem"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "FPropertyStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyStats"
  },
  {
    "label": "FEntityAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityAllocation"
  },
  {
    "label": "FInitialValueCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitialValueCache"
  },
  {
    "label": "FPropertyDefinition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyDefinition"
  },
  {
    "label": "IPreAnimatedStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPreAnimatedStorage"
  },
  {
    "label": "FSystemSubsequentTasks",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSystemSubsequentTasks"
  },
  {
    "label": "FSystemTaskPrerequisites",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSystemTaskPrerequisites"
  },
  {
    "label": "FValueDecompositionParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FValueDecompositionParams"
  },
  {
    "label": "FPreAnimatedStateExtension",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedStateExtension"
  },
  {
    "label": "FPropertyCompositeDefinition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyCompositeDefinition"
  },
  {
    "label": "IEntitySystemScheduler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEntitySystemScheduler"
  },
  {
    "label": "FPropertyComponentView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyComponentView"
  },
  {
    "label": "FConstPropertyComponentView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstPropertyComponentView"
  },
  {
    "label": "FPropertyComponentArrayView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyComponentArrayView"
  },
  {
    "label": "IInitialValueProcessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IInitialValueProcessor"
  },
  {
    "label": "IPropertyComponentHandler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPropertyComponentHandler"
  },
  {
    "label": "FPropertyComponentView()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / SharedPointer . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" class UMovieSceneBlenderSystem ; class UMovieSceneEntitySystemLinker ; namespace UE { namespace MovieScene { struct FPropertyStats ; struct FEntityAllocation ; struct FInitialValueCache ; struct FPropertyDefinition ; struct IPreAnimatedStorage ; struct FSystemSubsequentTasks ; struct FSystemTaskPrerequisites ; struct FValueDecompositionParams ; struct FPreAnimatedStateExtension ; struct FPropertyCompositeDefinition ; class IEntitySystemScheduler ; struct FPropertyComponentView { template<T>)",
    "insertText": "FPropertyComponentView(T& InData) : Data(&InData), DataSizeof(sizeof(T))"
  },
  {
    "label": "FPropertyComponentView()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPropertyComponentView(void* InData, int32 InDataSizeof) : Data(InData), DataSizeof(InDataSizeof)"
  },
  {
    "label": "Sizeof()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Sizeof()"
  },
  {
    "label": "FConstPropertyComponentView()",
    "kind": "Method",
    "detail": "Function (} private : void* Data ; int32 DataSizeof ; } ; struct FConstPropertyComponentView { template<T>)",
    "insertText": "FConstPropertyComponentView(const T& InData) : Data(&InData), DataSizeof(sizeof(T))"
  },
  {
    "label": "FConstPropertyComponentView()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FConstPropertyComponentView(const void* InData, int32 InDataSizeof) : Data(InData), DataSizeof(InDataSizeof)"
  },
  {
    "label": "FPropertyComponentArrayView()",
    "kind": "Method",
    "detail": "Function (} private : const void* Data ; int32 DataSizeof ; } ; struct FPropertyComponentArrayView { template<T,Allocator>)",
    "insertText": "FPropertyComponentArrayView(TArray<T, Allocator>& InRange) : Data(InRange.GetData()) , DataSizeof(sizeof(T)) , ArrayNum(InRange.Num())"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Num()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FPropertyComponentView)",
    "insertText": "operator(int32 Index)"
  },
  {
    "label": "IInitialValueProcessor()",
    "kind": "Method",
    "detail": "Function (} private : void* Data ; int32 DataSizeof ; int32 ArrayNum ; } ; struct IInitialValueProcessor { ~)",
    "insertText": "IInitialValueProcessor()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Initialize(UMovieSceneEntitySystemLinker* Linker, const FPropertyDefinition* Definition, FInitialValueCache* InitialValueCache)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Process(const FEntityAllocation* Allocation, const FComponentMask& AllocationType)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Finalize()"
  },
  {
    "label": "IPropertyComponentHandler()",
    "kind": "Method",
    "detail": "Function (} ; struct IPropertyComponentHandler { ~)",
    "insertText": "IPropertyComponentHandler()"
  },
  {
    "label": "ScheduleSetterTasks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ScheduleSetterTasks(const FPropertyDefinition& Definition, TArrayView<const FPropertyCompositeDefinition> Composites, const FPropertyStats& Stats, IEntitySystemScheduler* TaskScheduler, UMovieSceneEntitySystemLinker* Linker)"
  },
  {
    "label": "DispatchSetterTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchSetterTasks(const FPropertyDefinition& Definition, TArrayView<const FPropertyCompositeDefinition> Composites, const FPropertyStats& Stats, FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents, UMovieSceneEntitySystemLinker* Linker)"
  },
  {
    "label": "DispatchInitializePropertyMetaDataTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchInitializePropertyMetaDataTasks(const FPropertyDefinition& Definition, FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents, UMovieSceneEntitySystemLinker* Linker)"
  },
  {
    "label": "GetPreAnimatedStateStorage()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<IPreAnimatedStorage>)",
    "insertText": "GetPreAnimatedStateStorage(const FPropertyDefinition& Definition, FPreAnimatedStateExtension* Container)"
  },
  {
    "label": "RecomposeBlendChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecomposeBlendChannel(const FPropertyDefinition& Definition, TArrayView<const FPropertyCompositeDefinition> Composites, int32 CompositeIndex, const FValueDecompositionParams& Params, UMovieSceneBlenderSystem* Blender, double InCurrentValue, TArrayView<double> OutResults)"
  },
  {
    "label": "RebuildOperational()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildOperational(const FPropertyDefinition& Definition, TArrayView<const FPropertyCompositeDefinition> Composites, const TArrayView<FMovieSceneEntityID>& EntityIDs, UMovieSceneEntitySystemLinker* Linker, FPropertyComponentArrayView OutResult)"
  },
  {
    "label": "GetInitialValueProcessor()",
    "kind": "Method",
    "detail": "Function (IInitialValueProcessor*)",
    "insertText": "GetInitialValueProcessor()"
  }
]