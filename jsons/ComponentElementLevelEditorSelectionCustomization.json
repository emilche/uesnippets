[
  {
    "label": "FComponentElementLevelEditorSelectionCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentElementLevelEditorSelectionCustomization"
  },
  {
    "label": "CanSelectElement()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Elements / Framework / TypedElementSelectionSet . h \" # include \" Elements / Framework / TypedElementAssetEditorToolkitHostMixin . h \" class FComponentElementLevelEditorSelectionCustomization : public FTypedElementSelectionCustomization,public FTypedElementAssetEditorToolkitHostMixin { public : bool)",
    "insertText": "CanSelectElement(const TTypedElement<ITypedElementSelectionInterface>& InElementSelectionHandle, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "CanDeselectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeselectElement(const TTypedElement<ITypedElementSelectionInterface>& InElementSelectionHandle, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "SelectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectElement(const TTypedElement<ITypedElementSelectionInterface>& InElementSelectionHandle, FTypedElementListRef InSelectionSet, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "DeselectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectElement(const TTypedElement<ITypedElementSelectionInterface>& InElementSelectionHandle, FTypedElementListRef InSelectionSet, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "GetSelectionElement()",
    "kind": "Method",
    "detail": "Function (FTypedElementHandle)",
    "insertText": "GetSelectionElement(const TTypedElement<ITypedElementSelectionInterface>& InElementSelectionHandle, FTypedElementListConstRef InCurrentSelection, const ETypedElementSelectionMethod InSelectionMethod)"
  },
  {
    "label": "GetNormalizedElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNormalizedElements(const TTypedElement<ITypedElementSelectionInterface>& InElementSelectionHandle, FTypedElementListConstRef InSelectionSet, const FTypedElementSelectionNormalizationOptions& InNormalizationOptions, FTypedElementListRef OutNormalizedElements)"
  },
  {
    "label": "CanSelectComponentElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSelectComponentElement(const TTypedElement<ITypedElementSelectionInterface>& InComponentSelectionHandle, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "CanDeselectComponentElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeselectComponentElement(const TTypedElement<ITypedElementSelectionInterface>& InComponentSelectionHandle, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "SelectComponentElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectComponentElement(const TTypedElement<ITypedElementSelectionInterface>& InComponentSelectionHandle, FTypedElementListRef InSelectionSet, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "DeselectComponentElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectComponentElement(const TTypedElement<ITypedElementSelectionInterface>& InComponentSelectionHandle, FTypedElementListRef InSelectionSet, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "GetSelectionElementStatic()",
    "kind": "Method",
    "detail": "Function (FTypedElementHandle)",
    "insertText": "GetSelectionElementStatic(const FTypedElementHandle& InComponentHandle, FTypedElementListConstRef InCurrentSelection, const ETypedElementSelectionMethod InSelectionMethod)"
  }
]