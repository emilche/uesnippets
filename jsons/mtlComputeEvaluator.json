[
  {
    "label": "PatchTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PatchTable"
  },
  {
    "label": "StencilTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StencilTable"
  },
  {
    "label": "LimitStencilTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LimitStencilTable"
  },
  {
    "label": "MTLStencilTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MTLStencilTable"
  },
  {
    "label": "MTLComputeEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MTLComputeEvaluator"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSUBDIV3_OSD_MTL_COMPUTE_EVALUATOR_H # define OPENSUBDIV3_OSD_MTL_COMPUTE_EVALUATOR_H # include \" . . / version . h \" # include \" . . / osd / types . h \" # include \" . . / osd / bufferDescriptor . h \" # include \" . . / osd / mtlCommon . h \" @ protocol MTLDevice ; @ protocol MTLBuffer ; @ protocol MTLLibrary ; @ protocol MTLComputePipelineState ; namespace OpenSubdiv { namespace OPENSUBDIV_VERSION { namespace Far { class PatchTable ; class StencilTable ; class LimitStencilTable ; } namespace Osd { class MTLStencilTable { public : template<STENCIL_TABLE,DEVICE_CONTEXT> MTLStencilTable*)",
    "insertText": "Create(STENCIL_TABLE* stencilTable, DEVICE_CONTEXT context)"
  },
  {
    "label": "MTLStencilTable()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MTLStencilTable(Far::StencilTable const* stencilTable, MTLContext* context)"
  },
  {
    "label": "MTLStencilTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MTLStencilTable(Far::LimitStencilTable const* stencilTable, MTLContext* context)"
  },
  {
    "label": "MTLStencilTable()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "MTLStencilTable()"
  },
  {
    "label": "GetSizesBuffer()",
    "kind": "Method",
    "detail": "Function (id<MTLBuffer>)",
    "insertText": "GetSizesBuffer()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (MTLComputeEvaluator*)",
    "insertText": "Create(BufferDescriptor const &srcDesc, BufferDescriptor const &dstDesc, BufferDescriptor const &duDesc, BufferDescriptor const &dvDesc, BufferDescriptor const &duuDesc, BufferDescriptor const &duvDesc, BufferDescriptor const &dvvDesc, MTLContext* context)"
  },
  {
    "label": "MTLComputeEvaluator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MTLComputeEvaluator()"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, STENCIL_TABLE const *stencilTable, MTLComputeEvaluator const *instance, MTLContext* context)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} else { instance =)",
    "insertText": "Create(srcDesc, dstDesc, BufferDescriptor(), BufferDescriptor(), context)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalStencils(srcBuffer, srcDesc, dstBuffer, dstDesc, stencilTable, context)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, STENCIL_TABLE const *stencilTable, MTLComputeEvaluator const *instance, MTLContext* context)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} else { instance =)",
    "insertText": "Create(srcDesc, dstDesc, duDesc, dvDesc, context)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalStencils(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, stencilTable, context)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, STENCIL_TABLE const *stencilTable, MTLComputeEvaluator const *instance, MTLContext* context)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} else { instance =)",
    "insertText": "Create(srcDesc, dstDesc, duDesc, dvDesc, duuDesc, duvDesc, dvvDesc, context)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalStencils(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, duuBuffer, duuDesc, duvBuffer, duvDesc, dvvBuffer, dvvDesc, stencilTable, context)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, STENCIL_TABLE const *stencilTable, MTLContext* context)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, STENCIL_TABLE const *stencilTable, MTLContext* context)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, STENCIL_TABLE const *stencilTable, MTLContext* context)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EvalStencils(id<MTLBuffer> srcBuffer, BufferDescriptor const &srcDesc, id<MTLBuffer> dstBuffer, BufferDescriptor const &dstDesc, id<MTLBuffer> duBuffer, BufferDescriptor const &duDesc, id<MTLBuffer> dvBuffer, BufferDescriptor const &dvDesc, id<MTLBuffer> sizesBuffer, id<MTLBuffer> offsetsBuffer, id<MTLBuffer> indicesBuffer, id<MTLBuffer> weightsBuffer, id<MTLBuffer> duWeightsBuffer, id<MTLBuffer> dvWeightsBuffer, int start, int end, MTLContext* context)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvalStencils(id<MTLBuffer> srcBuffer, BufferDescriptor const &srcDesc, id<MTLBuffer> dstBuffer, BufferDescriptor const &dstDesc, id<MTLBuffer> duBuffer, BufferDescriptor const &duDesc, id<MTLBuffer> dvBuffer, BufferDescriptor const &dvDesc, id<MTLBuffer> duuBuffer, BufferDescriptor const &duuDesc, id<MTLBuffer> duvBuffer, BufferDescriptor const &duvDesc, id<MTLBuffer> dvvBuffer, BufferDescriptor const &dvvDesc, id<MTLBuffer> sizesBuffer, id<MTLBuffer> offsetsBuffer, id<MTLBuffer> indicesBuffer, id<MTLBuffer> weightsBuffer, id<MTLBuffer> duWeightsBuffer, id<MTLBuffer> dvWeightsBuffer, id<MTLBuffer> duuWeightsBuffer, id<MTLBuffer> duvWeightsBuffer, id<MTLBuffer> dvvWeightsBuffer, int start, int end, MTLContext* context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLComputeEvaluator const *instance, MTLContext* context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatches(srcBuffer, srcDesc, dstBuffer, dstDesc, numPatchCoords, patchCoords, patchTable, context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLComputeEvaluator* instance, MTLContext* context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatches(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, numPatchCoords, patchCoords, patchTable, context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLComputeEvaluator* instance, MTLContext* context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatches(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, duuBuffer, duuDesc, duvBuffer, duvDesc, dvvBuffer, dvvDesc, numPatchCoords, patchCoords, patchTable, context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLContext* context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLContext* context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLContext* context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EvalPatches(id<MTLBuffer> srcBuffer, BufferDescriptor const &srcDesc, id<MTLBuffer> dstBuffer, BufferDescriptor const &dstDesc, id<MTLBuffer> duBuffer, BufferDescriptor const &duDesc, id<MTLBuffer> dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, id<MTLBuffer> patchCoordsBuffer, const PatchArrayVector &patchArrays, id<MTLBuffer> patchIndexBuffer, id<MTLBuffer> patchParamsBuffer, MTLContext* context)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvalPatches(id<MTLBuffer> srcBuffer, BufferDescriptor const &srcDesc, id<MTLBuffer> dstBuffer, BufferDescriptor const &dstDesc, id<MTLBuffer> duBuffer, BufferDescriptor const &duDesc, id<MTLBuffer> dvBuffer, BufferDescriptor const &dvDesc, id<MTLBuffer> duuBuffer, BufferDescriptor const &duuDesc, id<MTLBuffer> duvBuffer, BufferDescriptor const &duvDesc, id<MTLBuffer> dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, id<MTLBuffer> patchCoordsBuffer, const PatchArrayVector &patchArrays, id<MTLBuffer> patchIndexBuffer, id<MTLBuffer> patchParamsBuffer, MTLContext* context)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLComputeEvaluator const *instance, MTLContext* deviceContext)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} else { instance =)",
    "insertText": "Create(srcDesc, dstDesc, BufferDescriptor(), BufferDescriptor(), deviceContext)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, numPatchCoords, patchCoords, patchTable, deviceContext)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLContext* deviceContext)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLComputeEvaluator const *instance, MTLContext* deviceContext)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} else { instance =)",
    "insertText": "Create(srcDesc, dstDesc, duDesc, dvDesc, deviceContext)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, numPatchCoords, patchCoords, patchTable, deviceContext)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLContext* deviceContext)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLComputeEvaluator const *instance, MTLContext* deviceContext)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} else { instance =)",
    "insertText": "Create(srcDesc, dstDesc, duDesc, dvDesc, duuDesc, duvDesc, dvvDesc, deviceContext)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, duuBuffer, duuDesc, duvBuffer, duvDesc, dvvBuffer, dvvDesc, numPatchCoords, patchCoords, patchTable, deviceContext)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, MTLContext* deviceContext)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, MTLComputeEvaluator const *instance, MTLContext* deviceContext)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesFaceVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, numPatchCoords, patchCoords, patchTable, fvarChannel, deviceContext)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, MTLContext* deviceContext)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, MTLComputeEvaluator const *instance, MTLContext* deviceContext)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesFaceVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, numPatchCoords, patchCoords, patchTable, fvarChannel, deviceContext)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, MTLContext* deviceContext)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, MTLComputeEvaluator const *instance, MTLContext* deviceContext)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesFaceVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, duuBuffer, duuDesc, duvBuffer, duvDesc, dvvBuffer, dvvDesc, numPatchCoords, patchCoords, patchTable, fvarChannel, deviceContext)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, MTLContext* deviceContext)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Compile(BufferDescriptor const &srcDesc, BufferDescriptor const &dstDesc, BufferDescriptor const &duDesc, BufferDescriptor const &dvDesc, BufferDescriptor const &duuDesc, BufferDescriptor const &duvDesc, BufferDescriptor const &dvvDesc, MTLContext* context)"
  },
  {
    "label": "Synchronize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Synchronize(MTLContext* context)"
  }
]