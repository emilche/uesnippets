[
  {
    "label": "UAsyncActionHandleSaveGame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAsyncActionHandleSaveGame"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / StreamableManager . h \" # include \" Kismet / BlueprintAsyncActionBase . h \" # include \" Templates / SubclassOf . h \" # include \" AsyncActionHandleSaveGame . generated . h \")",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnAsyncHandleSaveGame, USaveGame*, SaveGame, bool, bSuccess)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintCallable, meta=(BlueprintInternalUseOnly=\"true\", Category = \"SaveGame\", WorldContext = \"WorldContextObject\")) static ENGINE_API UAsyncActionHandleSaveGame* AsyncSaveGameToSlot(UObject* WorldContextObject, USaveGame* SaveGameObject, const FString& SlotName, const int32 UserIndex)"
  },
  {
    "label": "Activate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Activate()"
  },
  {
    "label": "HandleAsyncSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAsyncSave(const FString& SlotName, const int32 UserIndex, bool bSuccess)"
  },
  {
    "label": "HandleAsyncLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAsyncLoad(const FString& SlotName, const int32 UserIndex, USaveGame* LoadedSave)"
  },
  {
    "label": "ExecuteCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteCompleted(bool bSuccess)"
  }
]