[
  {
    "label": "FViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewportClient"
  },
  {
    "label": "UFont",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFont"
  },
  {
    "label": "ULocalPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalPlayer"
  },
  {
    "label": "FLocalPlayerIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalPlayerIterator"
  },
  {
    "label": "ULocalPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalPlayer"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TBasePlayerControllerIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePlayerControllerIterator"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TPlayerControllerIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPlayerControllerIterator"
  },
  {
    "label": "FTickStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTickStats"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FDetailedTickStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDetailedTickStats"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FScopedDetailTickStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedDetailTickStats"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "FScopedConditionalWorldSwitcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedConditionalWorldSwitcher"
  },
  {
    "label": "FViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewportClient"
  },
  {
    "label": "FViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewportClient"
  },
  {
    "label": "FScopedConditionalWorldSwitcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedConditionalWorldSwitcher"
  },
  {
    "label": "FViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewportClient"
  },
  {
    "label": "IEngineLoop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEngineLoop"
  },
  {
    "label": "FCachedSystemScalabilityCVars",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedSystemScalabilityCVars"
  },
  {
    "label": "FSystemResolution",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSystemResolution"
  },
  {
    "label": "FTemporaryPlayInEditorIDOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTemporaryPlayInEditorIDOverride"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogEngine, Log, All)"
  },
  {
    "label": "AdvanceCurrent()",
    "kind": "Method",
    "detail": "Function (server)",
    "insertText": "AdvanceCurrent()"
  },
  {
    "label": "AdvanceCurrent()",
    "kind": "Method",
    "detail": "Function (Current)",
    "insertText": "AdvanceCurrent()"
  },
  {
    "label": "BeginObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BeginObject( UObject* Object )"
  },
  {
    "label": "EndObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndObject( UObject* Object, float DeltaTime, bool bForSummary )"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "DumpStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpStats()"
  },
  {
    "label": "FScopedConditionalWorldSwitcher()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FScopedConditionalWorldSwitcher( class FViewportClient* InViewportClient )"
  },
  {
    "label": "FScopedConditionalWorldSwitcher()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FScopedConditionalWorldSwitcher( UWorld* InWorld )"
  },
  {
    "label": "ConditionalSwitchWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalSwitchWorld( class FViewportClient* InViewportClient, UWorld* InWorld )"
  },
  {
    "label": "appGetStartupMap()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "appGetStartupMap(const TCHAR* CommandLine)"
  },
  {
    "label": "CalculateFPSTimings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateFPSTimings()"
  },
  {
    "label": "Sync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sync(bool bFullSync = false)"
  },
  {
    "label": "ScalabilityCVarsSinkCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScalabilityCVarsSinkCallback()"
  },
  {
    "label": "AllowHighQualityLightmaps()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowHighQualityLightmaps(const FStaticFeatureLevel FeatureLevel)"
  },
  {
    "label": "RequestResolutionChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestResolutionChange(int32 InResX, int32 InResY, EWindowMode::Type InWindowMode)"
  },
  {
    "label": "UpdatePlayInEditorWorldDebugString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePlayInEditorWorldDebugString(const FWorldContext* WorldContext)"
  },
  {
    "label": "GetDebugStringForWorld()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugStringForWorld(const UWorld* World)"
  },
  {
    "label": "FTemporaryPlayInEditorIDOverride()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FTemporaryPlayInEditorIDOverride(int32 NewOverrideID)"
  },
  {
    "label": "SetID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetID(int32 NewID)"
  }
]