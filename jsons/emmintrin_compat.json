[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_PORTS_EMMINTRIN_COMPAT_H_ # define VPX_VPX_PORTS_EMMINTRIN_COMPAT_H_ # if)",
    "insertText": "defined(__GNUC__) && __GNUC__ < 4 extern __inline __m128 __attribute__((__gnu_inline__, __always_inline__, __artificial__)) _mm_castpd_ps(__m128d __A)"
  },
  {
    "label": "__attribute__()",
    "kind": "Method",
    "detail": "Function (} __inline __m128i)",
    "insertText": "__attribute__((__gnu_inline__, __always_inline__, __artificial__)) _mm_castpd_si128(__m128d __A)"
  },
  {
    "label": "__attribute__()",
    "kind": "Method",
    "detail": "Function (} __inline __m128d)",
    "insertText": "__attribute__((__gnu_inline__, __always_inline__, __artificial__)) _mm_castps_pd(__m128 __A)"
  },
  {
    "label": "__attribute__()",
    "kind": "Method",
    "detail": "Function (} __inline __m128i)",
    "insertText": "__attribute__((__gnu_inline__, __always_inline__, __artificial__)) _mm_castps_si128(__m128 __A)"
  },
  {
    "label": "__attribute__()",
    "kind": "Method",
    "detail": "Function (} __inline __m128)",
    "insertText": "__attribute__((__gnu_inline__, __always_inline__, __artificial__)) _mm_castsi128_ps(__m128i __A)"
  },
  {
    "label": "__attribute__()",
    "kind": "Method",
    "detail": "Function (} __inline __m128d)",
    "insertText": "__attribute__((__gnu_inline__, __always_inline__, __artificial__)) _mm_castsi128_pd(__m128i __A)"
  }
]