[
  {
    "label": "USpinBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USpinBox"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Styling / SlateColor . h \" # include \" Styling / SlateTypes . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Input / SSpinBox . h \" # include \" Components / Widget . h \" # include \" SpinBox . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnSpinBoxValueChangedEvent, float, InValue)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnSpinBoxValueCommittedEvent, float, InValue, ETextCommit::Type, CommitMethod)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE(FOnSpinBoxBeginSliderMovement)"
  },
  {
    "label": "GetWidgetStyle()",
    "kind": "Method",
    "detail": "Function (public : const FSpinBoxStyle&)",
    "insertText": "GetWidgetStyle()"
  },
  {
    "label": "SetWidgetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWidgetStyle(const FSpinBoxStyle& InWidgetStyle)"
  },
  {
    "label": "GetEnableSlider()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnableSlider()"
  },
  {
    "label": "SetEnableSlider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableSlider(bool bNewValue)"
  },
  {
    "label": "GetSliderExponent()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetSliderExponent()"
  },
  {
    "label": "SetSliderExponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSliderExponent(float NewValue)"
  },
  {
    "label": "GetFont()",
    "kind": "Method",
    "detail": "Function (const FSlateFontInfo&)",
    "insertText": "GetFont()"
  },
  {
    "label": "SetFont()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFont(const FSlateFontInfo& InFont)"
  },
  {
    "label": "GetJustification()",
    "kind": "Method",
    "detail": "Function (const ETextJustify::Type)",
    "insertText": "GetJustification()"
  },
  {
    "label": "SetJustification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetJustification(ETextJustify::Type InJustification)"
  },
  {
    "label": "GetMinDesiredWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMinDesiredWidth()"
  },
  {
    "label": "SetMinDesiredWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinDesiredWidth(float NewValue)"
  },
  {
    "label": "GetClearKeyboardFocusOnCommit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetClearKeyboardFocusOnCommit()"
  },
  {
    "label": "SetClearKeyboardFocusOnCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClearKeyboardFocusOnCommit(bool bNewValue)"
  },
  {
    "label": "GetSelectAllTextOnCommit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSelectAllTextOnCommit()"
  },
  {
    "label": "SetSelectAllTextOnCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectAllTextOnCommit(bool bNewValue)"
  },
  {
    "label": "GetForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetForegroundColor()"
  },
  {
    "label": "SynchronizeProperties()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SynchronizeProperties()"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "GetPaletteCategory()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR const FText)",
    "insertText": "GetPaletteCategory()"
  },
  {
    "label": "RebuildWidget()",
    "kind": "Method",
    "detail": "Function (# endif protected : TSharedRef<SWidget>)",
    "insertText": "RebuildWidget()"
  },
  {
    "label": "HandleOnValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnValueChanged(float InValue)"
  },
  {
    "label": "HandleOnValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnValueCommitted(float InValue, ETextCommit::Type CommitMethod)"
  },
  {
    "label": "HandleOnBeginSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnBeginSliderMovement()"
  },
  {
    "label": "HandleOnEndSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnEndSliderMovement(float InValue)"
  },
  {
    "label": "PROPERTY_BINDING_IMPLEMENTATION()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<SSpinBox<float>> MySpinBox ;)",
    "insertText": "PROPERTY_BINDING_IMPLEMENTATION(float, Value)"
  }
]