[
  {
    "label": "FJavaClassMethod",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FJavaClassMethod"
  },
  {
    "label": "FJavaClassObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJavaClassObject"
  },
  {
    "label": "FJavaClassObject()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if USE_ANDROID_JNI # include \" Android / AndroidJavaEnv . h \" # include<jni . h> struct FJavaClassMethod { FName Name ; FName Signature ; jmethodID Method ; } ; class FJavaClassObject {)",
    "insertText": "FJavaClassObject(jclass ClassIN, jobject ObjectIN)"
  },
  {
    "label": "GetGameActivity()",
    "kind": "Method",
    "detail": "Function (public : FJavaClassObject)",
    "insertText": "GetGameActivity()"
  },
  {
    "label": "FJavaClassObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FJavaClassObject(FName ClassName, const char* CtorSig, ...)"
  },
  {
    "label": "FJavaClassObject()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FJavaClassObject()"
  },
  {
    "label": "GetClassMethod()",
    "kind": "Method",
    "detail": "Function (FJavaClassMethod)",
    "insertText": "GetClassMethod(const char* MethodName, const char* FuncSig)"
  },
  {
    "label": "CallMethod()",
    "kind": "Method",
    "detail": "Function (template<ReturnType> ReturnType)",
    "insertText": "CallMethod(FJavaClassMethod Method, ...)"
  },
  {
    "label": "VerifyException()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyException()"
  },
  {
    "label": "FJavaClassObject()",
    "kind": "Method",
    "detail": "Function (protected : jobject Object ; jclass Class ; private :)",
    "insertText": "FJavaClassObject(const FJavaClassObject& rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FJavaClassObject&)",
    "insertText": "operator(const FJavaClassObject& rhs)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; template<> void FJavaClassObject::CallMethod<)",
    "insertText": "void(FJavaClassMethod Method, ...)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (template<> bool FJavaClassObject::CallMethod<)",
    "insertText": "bool(FJavaClassMethod Method, ...)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (template<> int FJavaClassObject::CallMethod<)",
    "insertText": "int(FJavaClassMethod Method, ...)"
  },
  {
    "label": "jobject()",
    "kind": "Method",
    "detail": "Function (template<> jobject FJavaClassObject::CallMethod<)",
    "insertText": "jobject(FJavaClassMethod Method, ...)"
  },
  {
    "label": "jobjectArray()",
    "kind": "Method",
    "detail": "Function (template<> jobjectArray FJavaClassObject::CallMethod<)",
    "insertText": "jobjectArray(FJavaClassMethod Method, ...)"
  },
  {
    "label": "int64()",
    "kind": "Method",
    "detail": "Function (template<> int64 FJavaClassObject::CallMethod<)",
    "insertText": "int64(FJavaClassMethod Method, ...)"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (template<> FString FJavaClassObject::CallMethod<)",
    "insertText": "FString(FJavaClassMethod Method, ...)"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (template<> float FJavaClassObject::CallMethod<)",
    "insertText": "float(FJavaClassMethod Method, ...)"
  }
]