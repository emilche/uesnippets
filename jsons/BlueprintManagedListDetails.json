[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "FManagedListItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManagedListItem"
  },
  {
    "label": "FDisplayOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDisplayOptions"
  },
  {
    "label": "FManagedListItem()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" IDetailCustomNodeBuilder . h \" # include \" Internationalization / Text . h \" # include \" Misc / Attribute . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" UObject / UnrealNames . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class FDetailWidgetRow ; class IDetailChildrenBuilder ; class SWidget ; class FBlueprintManagedListDetails : public IDetailCustomNodeBuilder { protected : struct FManagedListItem { FString ItemName ; FText DisplayName ; TWeakObjectPtr<> AssetPtr ; uint8 bIsRemovable : 1 ; TArray<TSharedPtr<IPropertyHandle>> PropertyHandles ;)",
    "insertText": "FManagedListItem() :bIsRemovable(false)"
  },
  {
    "label": "GenerateHeaderRowContent()",
    "kind": "Method",
    "detail": "Function (} } ; struct FDisplayOptions { FText TitleText ; FText TitleTooltipText ; FText NoItemsLabelText ; FText BrowseButtonToolTipText ; FText RemoveButtonToolTipText ; TAttribute<bool> EditCondition ; } ; FDisplayOptions DisplayOptions ; void)",
    "insertText": "GenerateHeaderRowContent(FDetailWidgetRow& HeaderRow)"
  },
  {
    "label": "GenerateChildContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateChildContent(IDetailChildrenBuilder& ChildrenBuilder)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetName()"
  },
  {
    "label": "InitiallyCollapsed()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "InitiallyCollapsed()"
  },
  {
    "label": "RequiresTick()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RequiresTick()"
  },
  {
    "label": "MakeAddItemWidget()",
    "kind": "Method",
    "detail": "Function (RegenerateChildrenDelegate = InOnRebuildChildren ; } TSharedPtr<SWidget>)",
    "insertText": "MakeAddItemWidget()"
  },
  {
    "label": "OnRemoveItem()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnRemoveItem(const FManagedListItem& Item)"
  },
  {
    "label": "RegenerateChildContent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegenerateChildContent()"
  }
]