[
  {
    "label": "IVoiceEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IVoiceEncoder"
  },
  {
    "label": "IVoiceDecoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IVoiceDecoder"
  },
  {
    "label": "DECLARE_STATS_GROUP()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" VoicePackage . h \" # include \" Net / VoiceConfig . h \")",
    "insertText": "DECLARE_STATS_GROUP(TEXT(\"Voice\"), STATGROUP_Voice, STATCAT_Advanced)"
  },
  {
    "label": "DECLARE_CYCLE_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_CYCLE_STAT_EXTERN(TEXT(\"VoiceEncode\"), STAT_Voice_Encoding, STATGROUP_Voice,)"
  },
  {
    "label": "DECLARE_CYCLE_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_CYCLE_STAT_EXTERN(TEXT(\"VoiceDecode\"), STAT_Voice_Decoding, STATGROUP_Voice,)"
  },
  {
    "label": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN(TEXT(\"Enc_SampleRate\"), STAT_Encode_SampleRate, STATGROUP_Voice,)"
  },
  {
    "label": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN(TEXT(\"Enc_NumChannels\"), STAT_Encode_NumChannels, STATGROUP_Voice,)"
  },
  {
    "label": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN(TEXT(\"Enc_Bitrate\"), STAT_Encode_Bitrate, STATGROUP_Voice,)"
  },
  {
    "label": "DECLARE_FLOAT_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_FLOAT_ACCUMULATOR_STAT_EXTERN(TEXT(\"Enc_CompRatio\"), STAT_Encode_CompressionRatio, STATGROUP_Voice,)"
  },
  {
    "label": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN(TEXT(\"Enc_OutSize\"), STAT_Encode_OutSize, STATGROUP_Voice,)"
  },
  {
    "label": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN(TEXT(\"Dec_SampleRate\"), STAT_Decode_SampleRate, STATGROUP_Voice,)"
  },
  {
    "label": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN(TEXT(\"Dec_NumChannels\"), STAT_Decode_NumChannels, STATGROUP_Voice,)"
  },
  {
    "label": "DECLARE_FLOAT_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_FLOAT_ACCUMULATOR_STAT_EXTERN(TEXT(\"Dec_CompRatio\"), STAT_Decode_CompressionRatio, STATGROUP_Voice,)"
  },
  {
    "label": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN(TEXT(\"Dec_OutSize\"), STAT_Decode_OutSize, STATGROUP_Voice,)"
  },
  {
    "label": "IVoiceEncoder()",
    "kind": "Method",
    "detail": "Function (class IVoiceEncoder : public TSharedFromThis<IVoiceEncoder> { protected :)",
    "insertText": "IVoiceEncoder()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Init(int32 SampleRate, int32 NumChannels, EAudioEncodeHint EncodeHint)"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Encode(const uint8* RawPCMData, uint32 RawDataSize, uint8* OutCompressedData, uint32& OutCompressedDataSize)"
  },
  {
    "label": "SetBitrate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetBitrate(int32 InBitRate)"
  },
  {
    "label": "SetVBR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetVBR(bool bEnableVBR)"
  },
  {
    "label": "SetComplexity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetComplexity(int32 InComplexity)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "DumpState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpState()"
  },
  {
    "label": "IVoiceDecoder()",
    "kind": "Method",
    "detail": "Function (} ; class IVoiceDecoder : public TSharedFromThis<IVoiceDecoder> { protected :)",
    "insertText": "IVoiceDecoder()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Init(int32 SampleRate, int32 NumChannels)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decode(const uint8* CompressedData, uint32 CompressedDataSize, uint8* OutRawPCMData, uint32& OutRawDataSize)"
  }
]