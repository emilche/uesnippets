[
  {
    "label": "HistogramSamples",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HistogramSamples"
  },
  {
    "label": "HistogramFlattener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HistogramFlattener"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "SampleInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SampleInfo"
  },
  {
    "label": "HistogramSnapshotManager()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_METRICS_HISTOGRAM_SNAPSHOT_MANAGER_H_ # define BASE_METRICS_HISTOGRAM_SNAPSHOT_MANAGER_H_ # include<stdint . h> # include<atomic> # include<map> # include<memory> # include<vector> # include \" base / base_export . h \" # include \" base / gtest_prod_util . h \" # include \" base / memory / raw_ptr . h \" # include \" base / metrics / histogram_base . h \" namespace base { class HistogramSamples ; class HistogramFlattener ; class BASE_EXPORT HistogramSnapshotManager final { public :)",
    "insertText": "HistogramSnapshotManager(HistogramFlattener* histogram_flattener)"
  },
  {
    "label": "HistogramSnapshotManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HistogramSnapshotManager(const HistogramSnapshotManager&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (HistogramSnapshotManager&)",
    "insertText": "operator(const HistogramSnapshotManager&)"
  },
  {
    "label": "HistogramSnapshotManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "HistogramSnapshotManager()"
  },
  {
    "label": "PrepareDeltas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareDeltas(const std::vector<HistogramBase*>& histograms, HistogramBase::Flags flags_to_set, HistogramBase::Flags required_flags)"
  },
  {
    "label": "PrepareDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareDelta(HistogramBase* histogram)"
  },
  {
    "label": "PrepareFinalDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareFinalDelta(const HistogramBase* histogram)"
  },
  {
    "label": "FRIEND_TEST_ALL_PREFIXES()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FRIEND_TEST_ALL_PREFIXES(HistogramSnapshotManagerTest, CheckMerge)"
  },
  {
    "label": "PrepareSamples()",
    "kind": "Method",
    "detail": "Function (struct SampleInfo { uint32_t inconsistencies = 0 ; } ; void)",
    "insertText": "PrepareSamples(const HistogramBase* histogram, std::unique_ptr<HistogramSamples> samples)"
  }
]