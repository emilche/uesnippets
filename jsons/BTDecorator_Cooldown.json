[
  {
    "label": "FBTCooldownDecoratorMemory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBTCooldownDecoratorMemory"
  },
  {
    "label": "UBTDecorator_Cooldown",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator_Cooldown"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" BehaviorTree / BTDecorator . h \" # include \" BehaviorTree / ValueOrBBKey . h \" # include \" BTDecorator_Cooldown . generated . h \" struct FBTCooldownDecoratorMemory { double LastUseTimestamp ; uint8 bRequestedRestart : 1 ; } ;)",
    "insertText": "UCLASS(HideCategories=(Condition), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(Category=Decorator, EditAnywhere)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "CalculateRawConditionValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CalculateRawConditionValue(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "InitializeMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeMemory(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTMemoryInit::Type InitType)"
  },
  {
    "label": "CleanupMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupMemory(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTMemoryClear::Type CleanupType)"
  },
  {
    "label": "GetInstanceMemorySize()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetInstanceMemorySize()"
  },
  {
    "label": "DescribeRuntimeValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DescribeRuntimeValues(const UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTDescriptionVerbosity::Type Verbosity, TArray<FString>& Values)"
  },
  {
    "label": "GetStaticDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStaticDescription()"
  },
  {
    "label": "GetNodeIconName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FName)",
    "insertText": "GetNodeIconName()"
  },
  {
    "label": "OnNodeDeactivation()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "OnNodeDeactivation(FBehaviorTreeSearchData& SearchData, EBTNodeResult::Type NodeResult)"
  },
  {
    "label": "TickNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickNode(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds)"
  }
]