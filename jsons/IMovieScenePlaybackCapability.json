[
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "FInstanceHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceHandle"
  },
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "FPlaybackCapabilityID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlaybackCapabilityID"
  },
  {
    "label": "TPlaybackCapabilityID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPlaybackCapabilityID"
  },
  {
    "label": "IPlaybackCapability",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPlaybackCapability"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / EnumClassFlags . h \" # include \" Templates / SharedPointer . h \" # include \" EntitySystem / MovieSceneSequenceInstanceHandle . h \" class IMovieScenePlayer ; class UMovieSceneEntitySystemLinker ; namespace UE::MovieScene { struct FInstanceHandle ; struct FSharedPlaybackState ; struct FPlaybackCapabilityID { int32 Index = INDEX_NONE ; bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "TPlaybackCapabilityID()",
    "kind": "Method",
    "detail": "Function (} ; template<T> struct TPlaybackCapabilityID : FPlaybackCapabilityID { public : using CapabilityType = T ; private : T ;)",
    "insertText": "TPlaybackCapabilityID()"
  },
  {
    "label": "TPlaybackCapabilityID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TPlaybackCapabilityID(int32 InIndex)"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (InIndex } { } TPlaybackCapabilityID<T>)",
    "insertText": "Register()"
  },
  {
    "label": "IPlaybackCapability()",
    "kind": "Method",
    "detail": "Function (} } ; struct IPlaybackCapability { ~)",
    "insertText": "IPlaybackCapability()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Initialize(TSharedRef<const FSharedPlaybackState> Owner)"
  },
  {
    "label": "OnSubInstanceCreated()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnSubInstanceCreated(TSharedRef<const FSharedPlaybackState> Owner, const FInstanceHandle InstanceHandle)"
  },
  {
    "label": "InvalidateCachedData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InvalidateCachedData(UMovieSceneEntitySystemLinker* Linker)"
  }
]