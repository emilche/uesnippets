[
  {
    "label": "FWinHttpHttpManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWinHttpHttpManager"
  },
  {
    "label": "FWinHttpWebSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWinHttpWebSocket"
  },
  {
    "label": "FWinHttpWebSocketsManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWinHttpWebSocketsManager"
  },
  {
    "label": "FWinHttpWebSocketsManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_WEBSOCKETS&& WITH_WINHTTPWEBSOCKETS # include \" CoreMinimal . h \" # include \" IWebSocketsManager . h \" # include \" Containers / Ticker . h \" class FWinHttpHttpManager ; class FWinHttpWebSocket ; class FWinHttpWebSocketsManager : public IWebSocketsManager { public : ~)",
    "insertText": "FWinHttpWebSocketsManager()"
  },
  {
    "label": "InitWebSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWebSockets(TArrayView<const FString> Protocols)"
  },
  {
    "label": "ShutdownWebSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownWebSockets()"
  },
  {
    "label": "CreateWebSocket()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IWebSocket>)",
    "insertText": "CreateWebSocket(const FString& Url, const TArray<FString>& Protocols, const TMap<FString, FString>& UpgradeHeaders)"
  },
  {
    "label": "GameThreadTick()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "GameThreadTick(float DeltaTime)"
  },
  {
    "label": "InitHttpManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitHttpManager()"
  }
]