[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FRuntimeErrors",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRuntimeErrors"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" HAL / PlatformMisc . h \" # include \" Logging / LogVerbosity . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / Build . h \" # include \" Misc / CoreDelegates . h \" class FText ; # if !)",
    "insertText": "defined(UE_RAISE_RUNTIME_ERRORS)"
  },
  {
    "label": "LogRuntimeIssue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogRuntimeIssue(ELogVerbosity::Type Verbosity, const ANSICHAR* FileName, int32 LineNumber, const FText& Message)"
  },
  {
    "label": "DECLARE_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_FourParams(FRuntimeErrorDelegate, ELogVerbosity::Type , const ANSICHAR* , int32 , const FText&)"
  },
  {
    "label": "LogRuntimeIssueReturningFalse()",
    "kind": "Method",
    "detail": "Function (FRuntimeErrorDelegate OnRuntimeIssueLogged ; bool)",
    "insertText": "LogRuntimeIssueReturningFalse(const ANSICHAR* Expr, const ANSICHAR* File, int32 Line)"
  },
  {
    "label": "FRuntimeErrors()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FRuntimeErrors()"
  }
]