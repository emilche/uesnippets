[
  {
    "label": "_FQuat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_FQuat"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TRotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRotation"
  },
  {
    "label": "TRotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRotation"
  },
  {
    "label": "TRotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRotation"
  },
  {
    "label": "GetRotationAxisSafe()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRotationAxisSafe(OutAxis, DefaultAxis, EpsilionSq)"
  },
  {
    "label": "BaseQuat()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "BaseQuat(0, 0, 0, 1)"
  },
  {
    "label": "FromElements()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FromElements(V.X, V.Y, V.Z, W)"
  },
  {
    "label": "CalculateAngularVelocity1()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CalculateAngularVelocity1(InR0, InR1, InDt)"
  },
  {
    "label": "CalculateAngularVelocity()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CalculateAngularVelocity(InR0, InR1, 1.0f)"
  },
  {
    "label": "GetRotationAxisSafe()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRotationAxisSafe(OutAxis, DefaultAxis, EpsilionSq)"
  },
  {
    "label": "BaseQuat()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "BaseQuat(0, 0, 0, 1)"
  },
  {
    "label": "FromElements()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FromElements(V.X, V.Y, V.Z, W)"
  },
  {
    "label": "CalculateAngularVelocity1()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CalculateAngularVelocity1(InR0, InR1, InDt)"
  },
  {
    "label": "CalculateAngularVelocity()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CalculateAngularVelocity(InR0, InR1, 1.0f)"
  }
]