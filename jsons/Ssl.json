[
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "ssl_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_st"
  },
  {
    "label": "ssl_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_st"
  },
  {
    "label": "tls_session_ticket_ext_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tls_session_ticket_ext_st"
  },
  {
    "label": "ssl_method_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_method_st"
  },
  {
    "label": "ssl_cipher_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_cipher_st"
  },
  {
    "label": "ssl_session_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_session_st"
  },
  {
    "label": "tls_sigalgs_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tls_sigalgs_st"
  },
  {
    "label": "ssl_conf_ctx_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_conf_ctx_st"
  },
  {
    "label": "ssl_comp_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_comp_st"
  },
  {
    "label": "srtp_protection_profile_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_protection_profile_st"
  },
  {
    "label": "ssl_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_st"
  },
  {
    "label": "ssl_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_st"
  },
  {
    "label": "ssl_ctx_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_ctx_st"
  },
  {
    "label": "ssl_ctx_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_ctx_st"
  },
  {
    "label": "ssl_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_st"
  },
  {
    "label": "ssl_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_st"
  },
  {
    "label": "evp_pkey_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evp_pkey_st"
  },
  {
    "label": "openssl_ssl_test_functions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "openssl_ssl_test_functions"
  },
  {
    "label": "location()",
    "kind": "Method",
    "detail": "Function (buffer)",
    "insertText": "location(buffer\n * contents must stay the same!)"
  },
  {
    "label": "SSL_CTX_get_options()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_CTX_get_options(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_get_options()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_get_options(const SSL *s)"
  },
  {
    "label": "SSL_CTX_clear_options()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_CTX_clear_options(SSL_CTX *ctx, unsigned long op)"
  },
  {
    "label": "SSL_clear_options()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_clear_options(SSL *s, unsigned long op)"
  },
  {
    "label": "SSL_CTX_set_options()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_CTX_set_options(SSL_CTX *ctx, unsigned long op)"
  },
  {
    "label": "SSL_set_options()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_set_options(SSL *s, unsigned long op)"
  },
  {
    "label": "SSL_SRP_CTX_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SRP_CTX_init(SSL *s)"
  },
  {
    "label": "SSL_CTX_SRP_CTX_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_SRP_CTX_init(SSL_CTX *ctx)"
  },
  {
    "label": "SSL_SRP_CTX_free()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SRP_CTX_free(SSL *ctx)"
  },
  {
    "label": "SSL_CTX_SRP_CTX_free()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_SRP_CTX_free(SSL_CTX *ctx)"
  },
  {
    "label": "SSL_srp_server_param_with_username()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_srp_server_param_with_username(SSL *s, int *ad)"
  },
  {
    "label": "SRP_Calc_A_param()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SRP_Calc_A_param(SSL *s)"
  },
  {
    "label": "SSL_CTX_set_client_cert_engine()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_client_cert_engine(SSL_CTX *ctx, ENGINE *e)"
  },
  {
    "label": "SSL_CTX_set_next_protos_advertised_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_next_protos_advertised_cb(SSL_CTX *s,\n                                           SSL_CTX_npn_advertised_cb_func cb,\n                                           void *arg)"
  },
  {
    "label": "SSL_CTX_set_next_proto_select_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_next_proto_select_cb(SSL_CTX *s,\n                                      SSL_CTX_npn_select_cb_func cb,\n                                      void *arg)"
  },
  {
    "label": "SSL_get0_next_proto_negotiated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_get0_next_proto_negotiated(const SSL *s, const unsigned char **data,\n                                    unsigned *len)"
  },
  {
    "label": "SSL_select_next_proto()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_select_next_proto(unsigned char **out, unsigned char *outlen,\n                                 const unsigned char *in, unsigned int inlen,\n                                 const unsigned char *client,\n                                 unsigned int client_len)"
  },
  {
    "label": "SSL_CTX_set_alpn_protos()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_alpn_protos(SSL_CTX *ctx, const unsigned char *protos,\n                                   unsigned int protos_len)"
  },
  {
    "label": "SSL_set_alpn_protos()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_alpn_protos(SSL *ssl, const unsigned char *protos,\n                               unsigned int protos_len)"
  },
  {
    "label": "SSL_CTX_set_alpn_select_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_alpn_select_cb(SSL_CTX *ctx,\n                                SSL_CTX_alpn_select_cb_func cb,\n                                void *arg)"
  },
  {
    "label": "SSL_get0_alpn_selected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_get0_alpn_selected(const SSL *ssl, const unsigned char **data,\n                            unsigned int *len)"
  },
  {
    "label": "SSL_CTX_set_psk_client_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_psk_client_callback(SSL_CTX *ctx, SSL_psk_client_cb_func cb)"
  },
  {
    "label": "SSL_set_psk_client_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_psk_client_callback(SSL *ssl, SSL_psk_client_cb_func cb)"
  },
  {
    "label": "SSL_CTX_set_psk_server_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_psk_server_callback(SSL_CTX *ctx, SSL_psk_server_cb_func cb)"
  },
  {
    "label": "SSL_set_psk_server_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_psk_server_callback(SSL *ssl, SSL_psk_server_cb_func cb)"
  },
  {
    "label": "SSL_CTX_use_psk_identity_hint()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_psk_identity_hint(SSL_CTX *ctx, const char *identity_hint)"
  },
  {
    "label": "SSL_use_psk_identity_hint()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_psk_identity_hint(SSL *s, const char *identity_hint)"
  },
  {
    "label": "SSL_set_psk_find_session_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_psk_find_session_callback(SSL *s, SSL_psk_find_session_cb_func cb)"
  },
  {
    "label": "SSL_CTX_set_psk_find_session_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_psk_find_session_callback(SSL_CTX *ctx,\n                                           SSL_psk_find_session_cb_func cb)"
  },
  {
    "label": "SSL_set_psk_use_session_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_psk_use_session_callback(SSL *s, SSL_psk_use_session_cb_func cb)"
  },
  {
    "label": "SSL_CTX_set_psk_use_session_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_psk_use_session_callback(SSL_CTX *ctx,\n                                          SSL_psk_use_session_cb_func cb)"
  },
  {
    "label": "SSL_CTX_has_client_custom_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_has_client_custom_ext(const SSL_CTX *ctx,\n                                         unsigned int ext_type)"
  },
  {
    "label": "SSL_CTX_add_client_custom_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_add_client_custom_ext(SSL_CTX *ctx,\n                                         unsigned int ext_type,\n                                         custom_ext_add_cb add_cb,\n                                         custom_ext_free_cb free_cb,\n                                         void *add_arg,\n                                         custom_ext_parse_cb parse_cb,\n                                         void *parse_arg)"
  },
  {
    "label": "SSL_CTX_add_server_custom_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_add_server_custom_ext(SSL_CTX *ctx,\n                                         unsigned int ext_type,\n                                         custom_ext_add_cb add_cb,\n                                         custom_ext_free_cb free_cb,\n                                         void *add_arg,\n                                         custom_ext_parse_cb parse_cb,\n                                         void *parse_arg)"
  },
  {
    "label": "SSL_CTX_add_custom_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_add_custom_ext(SSL_CTX *ctx, unsigned int ext_type,\n                                  unsigned int context,\n                                  SSL_custom_ext_add_cb_ex add_cb,\n                                  SSL_custom_ext_free_cb_ex free_cb,\n                                  void *add_arg,\n                                  SSL_custom_ext_parse_cb_ex parse_cb,\n                                  void *parse_arg)"
  },
  {
    "label": "SSL_extension_supported()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_extension_supported(unsigned int ext_type)"
  },
  {
    "label": "SSL_CTX_set_keylog_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_keylog_callback(SSL_CTX *ctx, SSL_CTX_keylog_cb_func cb)"
  },
  {
    "label": "SSL_CTX_get_keylog_callback()",
    "kind": "Method",
    "detail": "Function (SSL_CTX_keylog_cb_func)",
    "insertText": "SSL_CTX_get_keylog_callback(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_set_max_early_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_max_early_data(SSL_CTX *ctx, uint32_t max_early_data)"
  },
  {
    "label": "SSL_CTX_get_max_early_data()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "SSL_CTX_get_max_early_data(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_set_max_early_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_max_early_data(SSL *s, uint32_t max_early_data)"
  },
  {
    "label": "SSL_get_max_early_data()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "SSL_get_max_early_data(const SSL *s)"
  },
  {
    "label": "SSL_CTX_set_recv_max_early_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_recv_max_early_data(SSL_CTX *ctx, uint32_t recv_max_early_data)"
  },
  {
    "label": "SSL_CTX_get_recv_max_early_data()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "SSL_CTX_get_recv_max_early_data(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_set_recv_max_early_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_recv_max_early_data(SSL *s, uint32_t recv_max_early_data)"
  },
  {
    "label": "SSL_get_recv_max_early_data()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "SSL_get_recv_max_early_data(const SSL *s)"
  },
  {
    "label": "SSL_in_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_in_init(const SSL *s)"
  },
  {
    "label": "SSL_in_before()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_in_before(const SSL *s)"
  },
  {
    "label": "SSL_is_init_finished()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_is_init_finished(const SSL *s)"
  },
  {
    "label": "SSL_get_finished()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_get_finished(const SSL *s, void *buf, size_t count)"
  },
  {
    "label": "SSL_get_peer_finished()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_get_peer_finished(const SSL *s, void *buf, size_t count)"
  },
  {
    "label": "BIO_ssl_copy_session_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_ssl_copy_session_id(BIO *to, BIO *from)"
  },
  {
    "label": "BIO_ssl_shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_ssl_shutdown(BIO *ssl_bio)"
  },
  {
    "label": "SSL_CTX_set_cipher_list()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_cipher_list(SSL_CTX *, const char *str)"
  },
  {
    "label": "SSL_CTX_up_ref()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_up_ref(SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_free(SSL_CTX *)"
  },
  {
    "label": "SSL_CTX_set_timeout()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_CTX_set_timeout(SSL_CTX *ctx, long t)"
  },
  {
    "label": "SSL_CTX_get_timeout()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_CTX_get_timeout(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_set_cert_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_cert_store(SSL_CTX *, X509_STORE *)"
  },
  {
    "label": "SSL_CTX_set1_cert_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set1_cert_store(SSL_CTX *, X509_STORE *)"
  },
  {
    "label": "SSL_want()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_want(const SSL *s)"
  },
  {
    "label": "SSL_clear()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_clear(SSL *s)"
  },
  {
    "label": "SSL_CTX_flush_sessions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_flush_sessions(SSL_CTX *ctx, long tm)"
  },
  {
    "label": "SSL_CIPHER_get_bits()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CIPHER_get_bits(const SSL_CIPHER *c, int *alg_bits)"
  },
  {
    "label": "SSL_CIPHER_get_id()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "SSL_CIPHER_get_id(const SSL_CIPHER *c)"
  },
  {
    "label": "SSL_CIPHER_get_protocol_id()",
    "kind": "Method",
    "detail": "Function (uint16_t)",
    "insertText": "SSL_CIPHER_get_protocol_id(const SSL_CIPHER *c)"
  },
  {
    "label": "SSL_CIPHER_get_kx_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CIPHER_get_kx_nid(const SSL_CIPHER *c)"
  },
  {
    "label": "SSL_CIPHER_get_auth_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CIPHER_get_auth_nid(const SSL_CIPHER *c)"
  },
  {
    "label": "SSL_CIPHER_is_aead()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CIPHER_is_aead(const SSL_CIPHER *c)"
  },
  {
    "label": "SSL_get_fd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_fd(const SSL *s)"
  },
  {
    "label": "SSL_get_rfd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_rfd(const SSL *s)"
  },
  {
    "label": "SSL_get_wfd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_wfd(const SSL *s)"
  },
  {
    "label": "SSL_get_read_ahead()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_read_ahead(const SSL *s)"
  },
  {
    "label": "SSL_pending()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_pending(const SSL *s)"
  },
  {
    "label": "SSL_has_pending()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_has_pending(const SSL *s)"
  },
  {
    "label": "SSL_set_fd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_fd(SSL *s, int fd)"
  },
  {
    "label": "SSL_set_rfd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_rfd(SSL *s, int fd)"
  },
  {
    "label": "SSL_set_wfd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_wfd(SSL *s, int fd)"
  },
  {
    "label": "SSL_set0_rbio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set0_rbio(SSL *s, BIO *rbio)"
  },
  {
    "label": "SSL_set0_wbio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set0_wbio(SSL *s, BIO *wbio)"
  },
  {
    "label": "SSL_set_bio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_bio(SSL *s, BIO *rbio, BIO *wbio)"
  },
  {
    "label": "SSL_set_cipher_list()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_cipher_list(SSL *s, const char *str)"
  },
  {
    "label": "SSL_CTX_set_ciphersuites()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_ciphersuites(SSL_CTX *ctx, const char *str)"
  },
  {
    "label": "SSL_set_ciphersuites()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_ciphersuites(SSL *s, const char *str)"
  },
  {
    "label": "SSL_set_read_ahead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_read_ahead(SSL *s, int yes)"
  },
  {
    "label": "SSL_get_verify_mode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_verify_mode(const SSL *s)"
  },
  {
    "label": "SSL_get_verify_depth()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_verify_depth(const SSL *s)"
  },
  {
    "label": "SSL_get_verify_callback()",
    "kind": "Method",
    "detail": "Function (SSL_verify_cb)",
    "insertText": "SSL_get_verify_callback(const SSL *s)"
  },
  {
    "label": "SSL_set_verify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_verify(SSL *s, int mode, SSL_verify_cb callback)"
  },
  {
    "label": "SSL_set_verify_depth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_verify_depth(SSL *s, int depth)"
  },
  {
    "label": "SSL_use_RSAPrivateKey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_RSAPrivateKey(SSL *ssl, RSA *rsa)"
  },
  {
    "label": "SSL_use_RSAPrivateKey_ASN1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_RSAPrivateKey_ASN1(SSL *ssl, const unsigned char *d,\n                                      long len)"
  },
  {
    "label": "SSL_use_PrivateKey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_PrivateKey(SSL *ssl, EVP_PKEY *pkey)"
  },
  {
    "label": "SSL_use_PrivateKey_ASN1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_PrivateKey_ASN1(int pk, SSL *ssl, const unsigned char *d,\n                                   long len)"
  },
  {
    "label": "SSL_use_certificate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_certificate(SSL *ssl, X509 *x)"
  },
  {
    "label": "SSL_use_certificate_ASN1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_certificate_ASN1(SSL *ssl, const unsigned char *d, int len)"
  },
  {
    "label": "SSL_CTX_use_serverinfo()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_serverinfo(SSL_CTX *ctx, const unsigned char *serverinfo,\n                                  size_t serverinfo_length)"
  },
  {
    "label": "SSL_CTX_use_serverinfo_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_serverinfo_ex(SSL_CTX *ctx, unsigned int version,\n                                     const unsigned char *serverinfo,\n                                     size_t serverinfo_length)"
  },
  {
    "label": "SSL_CTX_use_serverinfo_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_serverinfo_file(SSL_CTX *ctx, const char *file)"
  },
  {
    "label": "SSL_use_RSAPrivateKey_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_RSAPrivateKey_file(SSL *ssl, const char *file, int type)"
  },
  {
    "label": "SSL_use_PrivateKey_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_PrivateKey_file(SSL *ssl, const char *file, int type)"
  },
  {
    "label": "SSL_use_certificate_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_certificate_file(SSL *ssl, const char *file, int type)"
  },
  {
    "label": "SSL_CTX_use_RSAPrivateKey_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_RSAPrivateKey_file(SSL_CTX *ctx, const char *file,\n                                          int type)"
  },
  {
    "label": "SSL_CTX_use_PrivateKey_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_PrivateKey_file(SSL_CTX *ctx, const char *file,\n                                       int type)"
  },
  {
    "label": "SSL_CTX_use_certificate_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_certificate_file(SSL_CTX *ctx, const char *file,\n                                        int type)"
  },
  {
    "label": "SSL_CTX_use_certificate_chain_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_certificate_chain_file(SSL_CTX *ctx, const char *file)"
  },
  {
    "label": "SSL_use_certificate_chain_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_use_certificate_chain_file(SSL *ssl, const char *file)"
  },
  {
    "label": "SSL_SESSION_get_time()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_SESSION_get_time(const SSL_SESSION *s)"
  },
  {
    "label": "SSL_SESSION_set_time()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_SESSION_set_time(SSL_SESSION *s, long t)"
  },
  {
    "label": "SSL_SESSION_get_timeout()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_SESSION_get_timeout(const SSL_SESSION *s)"
  },
  {
    "label": "SSL_SESSION_set_timeout()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_SESSION_set_timeout(SSL_SESSION *s, long t)"
  },
  {
    "label": "SSL_SESSION_get_protocol_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_get_protocol_version(const SSL_SESSION *s)"
  },
  {
    "label": "SSL_SESSION_set_protocol_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_set_protocol_version(SSL_SESSION *s, int version)"
  },
  {
    "label": "SSL_SESSION_set1_hostname()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_set1_hostname(SSL_SESSION *s, const char *hostname)"
  },
  {
    "label": "SSL_SESSION_get0_alpn_selected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_SESSION_get0_alpn_selected(const SSL_SESSION *s,\n                                    const unsigned char **alpn,\n                                    size_t *len)"
  },
  {
    "label": "SSL_SESSION_set1_alpn_selected()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_set1_alpn_selected(SSL_SESSION *s,\n                                          const unsigned char *alpn,\n                                          size_t len)"
  },
  {
    "label": "SSL_SESSION_set_cipher()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_set_cipher(SSL_SESSION *s, const SSL_CIPHER *cipher)"
  },
  {
    "label": "SSL_SESSION_has_ticket()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_has_ticket(const SSL_SESSION *s)"
  },
  {
    "label": "SSL_SESSION_get_ticket_lifetime_hint()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_SESSION_get_ticket_lifetime_hint(const SSL_SESSION *s)"
  },
  {
    "label": "SSL_SESSION_get0_ticket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_SESSION_get0_ticket(const SSL_SESSION *s, const unsigned char **tick,\n                             size_t *len)"
  },
  {
    "label": "SSL_SESSION_get_max_early_data()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "SSL_SESSION_get_max_early_data(const SSL_SESSION *s)"
  },
  {
    "label": "SSL_SESSION_set_max_early_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_set_max_early_data(SSL_SESSION *s,\n                                          uint32_t max_early_data)"
  },
  {
    "label": "SSL_copy_session_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_copy_session_id(SSL *to, const SSL *from)"
  },
  {
    "label": "SSL_SESSION_set1_id_context()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_set1_id_context(SSL_SESSION *s,\n                                       const unsigned char *sid_ctx,\n                                       unsigned int sid_ctx_len)"
  },
  {
    "label": "SSL_SESSION_set1_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_set1_id(SSL_SESSION *s, const unsigned char *sid,\n                               unsigned int sid_len)"
  },
  {
    "label": "SSL_SESSION_is_resumable()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_is_resumable(const SSL_SESSION *s)"
  },
  {
    "label": "SSL_SESSION_get_compress_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_get_compress_id(const SSL_SESSION *s)"
  },
  {
    "label": "SSL_SESSION_print_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_print_fp(FILE *fp, const SSL_SESSION *ses)"
  },
  {
    "label": "SSL_SESSION_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_print(BIO *fp, const SSL_SESSION *ses)"
  },
  {
    "label": "SSL_SESSION_print_keylog()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_print_keylog(BIO *bp, const SSL_SESSION *x)"
  },
  {
    "label": "SSL_SESSION_up_ref()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_up_ref(SSL_SESSION *ses)"
  },
  {
    "label": "SSL_SESSION_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_SESSION_free(SSL_SESSION *ses)"
  },
  {
    "label": "i2d_SSL_SESSION()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_SSL_SESSION(SSL_SESSION *in, unsigned char **pp)"
  },
  {
    "label": "SSL_set_session()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_session(SSL *to, SSL_SESSION *session)"
  },
  {
    "label": "SSL_CTX_add_session()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_add_session(SSL_CTX *ctx, SSL_SESSION *session)"
  },
  {
    "label": "SSL_CTX_remove_session()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_remove_session(SSL_CTX *ctx, SSL_SESSION *session)"
  },
  {
    "label": "SSL_CTX_set_generate_session_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_generate_session_id(SSL_CTX *ctx, GEN_SESSION_CB cb)"
  },
  {
    "label": "SSL_set_generate_session_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_generate_session_id(SSL *s, GEN_SESSION_CB cb)"
  },
  {
    "label": "SSL_has_matching_session_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_has_matching_session_id(const SSL *s,\n                                       const unsigned char *id,\n                                       unsigned int id_len)"
  },
  {
    "label": "SSL_CTX_get_verify_mode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_get_verify_mode(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_get_verify_depth()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_get_verify_depth(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_get_verify_callback()",
    "kind": "Method",
    "detail": "Function (SSL_verify_cb)",
    "insertText": "SSL_CTX_get_verify_callback(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_set_verify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_verify(SSL_CTX *ctx, int mode, SSL_verify_cb callback)"
  },
  {
    "label": "SSL_CTX_set_verify_depth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_verify_depth(SSL_CTX *ctx, int depth)"
  },
  {
    "label": "SSL_CTX_use_RSAPrivateKey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_RSAPrivateKey(SSL_CTX *ctx, RSA *rsa)"
  },
  {
    "label": "SSL_CTX_use_RSAPrivateKey_ASN1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_RSAPrivateKey_ASN1(SSL_CTX *ctx, const unsigned char *d,\n                                          long len)"
  },
  {
    "label": "SSL_CTX_use_PrivateKey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_PrivateKey(SSL_CTX *ctx, EVP_PKEY *pkey)"
  },
  {
    "label": "SSL_CTX_use_PrivateKey_ASN1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_PrivateKey_ASN1(int pk, SSL_CTX *ctx,\n                                       const unsigned char *d, long len)"
  },
  {
    "label": "SSL_CTX_use_certificate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_certificate(SSL_CTX *ctx, X509 *x)"
  },
  {
    "label": "SSL_CTX_use_certificate_ASN1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_use_certificate_ASN1(SSL_CTX *ctx, int len,\n                                        const unsigned char *d)"
  },
  {
    "label": "SSL_CTX_set_default_passwd_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_default_passwd_cb(SSL_CTX *ctx, pem_password_cb *cb)"
  },
  {
    "label": "SSL_CTX_set_default_passwd_cb_userdata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_default_passwd_cb_userdata(SSL_CTX *ctx, void *u)"
  },
  {
    "label": "SSL_set_default_passwd_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_default_passwd_cb(SSL *s, pem_password_cb *cb)"
  },
  {
    "label": "SSL_set_default_passwd_cb_userdata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_default_passwd_cb_userdata(SSL *s, void *u)"
  },
  {
    "label": "SSL_CTX_check_private_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_check_private_key(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_check_private_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_check_private_key(const SSL *ctx)"
  },
  {
    "label": "SSL_CTX_set_session_id_context()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_session_id_context(SSL_CTX *ctx,\n                                          const unsigned char *sid_ctx,\n                                          unsigned int sid_ctx_len)"
  },
  {
    "label": "SSL_up_ref()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_up_ref(SSL *s)"
  },
  {
    "label": "SSL_is_dtls()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_is_dtls(const SSL *s)"
  },
  {
    "label": "SSL_set_session_id_context()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_session_id_context(SSL *ssl, const unsigned char *sid_ctx,\n                                      unsigned int sid_ctx_len)"
  },
  {
    "label": "SSL_CTX_set_purpose()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_purpose(SSL_CTX *ctx, int purpose)"
  },
  {
    "label": "SSL_set_purpose()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_purpose(SSL *ssl, int purpose)"
  },
  {
    "label": "SSL_CTX_set_trust()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_trust(SSL_CTX *ctx, int trust)"
  },
  {
    "label": "SSL_set_trust()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_trust(SSL *ssl, int trust)"
  },
  {
    "label": "SSL_set1_host()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set1_host(SSL *s, const char *hostname)"
  },
  {
    "label": "SSL_add1_host()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_add1_host(SSL *s, const char *hostname)"
  },
  {
    "label": "SSL_set_hostflags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_hostflags(SSL *s, unsigned int flags)"
  },
  {
    "label": "SSL_CTX_dane_enable()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_dane_enable(SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_dane_mtype_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_dane_mtype_set(SSL_CTX *ctx, const EVP_MD *md,\n                                  uint8_t mtype, uint8_t ord)"
  },
  {
    "label": "SSL_dane_enable()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_dane_enable(SSL *s, const char *basedomain)"
  },
  {
    "label": "SSL_dane_tlsa_add()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_dane_tlsa_add(SSL *s, uint8_t usage, uint8_t selector,\n                             uint8_t mtype, unsigned const char *data, size_t dlen)"
  },
  {
    "label": "SSL_get0_dane_authority()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get0_dane_authority(SSL *s, X509 **mcert, EVP_PKEY **mspki)"
  },
  {
    "label": "SSL_get0_dane_tlsa()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get0_dane_tlsa(SSL *s, uint8_t *usage, uint8_t *selector,\n                              uint8_t *mtype, unsigned const char **data,\n                              size_t *dlen)"
  },
  {
    "label": "SSL_CTX_dane_set_flags()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_CTX_dane_set_flags(SSL_CTX *ctx, unsigned long flags)"
  },
  {
    "label": "SSL_CTX_dane_clear_flags()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_CTX_dane_clear_flags(SSL_CTX *ctx, unsigned long flags)"
  },
  {
    "label": "SSL_dane_set_flags()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_dane_set_flags(SSL *ssl, unsigned long flags)"
  },
  {
    "label": "SSL_dane_clear_flags()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_dane_clear_flags(SSL *ssl, unsigned long flags)"
  },
  {
    "label": "SSL_CTX_set1_param()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set1_param(SSL_CTX *ctx, X509_VERIFY_PARAM *vpm)"
  },
  {
    "label": "SSL_set1_param()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set1_param(SSL *ssl, X509_VERIFY_PARAM *vpm)"
  },
  {
    "label": "SSL_CTX_set_srp_username()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_srp_username(SSL_CTX *ctx, char *name)"
  },
  {
    "label": "SSL_CTX_set_srp_password()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_srp_password(SSL_CTX *ctx, char *password)"
  },
  {
    "label": "SSL_CTX_set_srp_strength()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_srp_strength(SSL_CTX *ctx, int strength)"
  },
  {
    "label": "SSL_CTX_set_srp_cb_arg()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_srp_cb_arg(SSL_CTX *ctx, void *arg)"
  },
  {
    "label": "SSL_set_srp_server_param()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_srp_server_param(SSL *s, const BIGNUM *N, const BIGNUM *g,\n                             BIGNUM *sa, BIGNUM *v, char *info)"
  },
  {
    "label": "SSL_set_srp_server_param_pw()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_srp_server_param_pw(SSL *s, const char *user, const char *pass,\n                                const char *grp)"
  },
  {
    "label": "SSL_CTX_set_client_hello_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_client_hello_cb(SSL_CTX *c, SSL_client_hello_cb_fn cb,\n                                 void *arg)"
  },
  {
    "label": "SSL_client_hello_isv2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_client_hello_isv2(SSL *s)"
  },
  {
    "label": "SSL_client_hello_get0_legacy_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_client_hello_get0_legacy_version(SSL *s)"
  },
  {
    "label": "SSL_client_hello_get0_random()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_client_hello_get0_random(SSL *s, const unsigned char **out)"
  },
  {
    "label": "SSL_client_hello_get0_session_id()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_client_hello_get0_session_id(SSL *s, const unsigned char **out)"
  },
  {
    "label": "SSL_client_hello_get0_ciphers()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_client_hello_get0_ciphers(SSL *s, const unsigned char **out)"
  },
  {
    "label": "SSL_client_hello_get0_compression_methods()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_client_hello_get0_compression_methods(SSL *s,\n                                                 const unsigned char **out)"
  },
  {
    "label": "SSL_client_hello_get1_extensions_present()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_client_hello_get1_extensions_present(SSL *s, int **out, size_t *outlen)"
  },
  {
    "label": "SSL_client_hello_get0_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_client_hello_get0_ext(SSL *s, unsigned int type,\n                              const unsigned char **out, size_t *outlen)"
  },
  {
    "label": "SSL_certs_clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_certs_clear(SSL *s)"
  },
  {
    "label": "SSL_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_free(SSL *ssl)"
  },
  {
    "label": "SSL_waiting_for_async()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_waiting_for_async(SSL *s)"
  },
  {
    "label": "SSL_get_all_async_fds()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_all_async_fds(SSL *s, OSSL_ASYNC_FD *fds, size_t *numfds)"
  },
  {
    "label": "SSL_get_changed_async_fds()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_changed_async_fds(SSL *s, OSSL_ASYNC_FD *addfd,\n                                     size_t *numaddfds, OSSL_ASYNC_FD *delfd,\n                                     size_t *numdelfds)"
  },
  {
    "label": "SSL_accept()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_accept(SSL *ssl)"
  },
  {
    "label": "SSL_stateless()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_stateless(SSL *s)"
  },
  {
    "label": "SSL_connect()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_connect(SSL *ssl)"
  },
  {
    "label": "SSL_read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_read(SSL *ssl, void *buf, int num)"
  },
  {
    "label": "SSL_read_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_read_ex(SSL *ssl, void *buf, size_t num, size_t *readbytes)"
  },
  {
    "label": "SSL_read_early_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_read_early_data(SSL *s, void *buf, size_t num,\n                               size_t *readbytes)"
  },
  {
    "label": "SSL_peek()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_peek(SSL *ssl, void *buf, int num)"
  },
  {
    "label": "SSL_peek_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_peek_ex(SSL *ssl, void *buf, size_t num, size_t *readbytes)"
  },
  {
    "label": "SSL_write()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_write(SSL *ssl, const void *buf, int num)"
  },
  {
    "label": "SSL_write_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_write_ex(SSL *s, const void *buf, size_t num, size_t *written)"
  },
  {
    "label": "SSL_write_early_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_write_early_data(SSL *s, const void *buf, size_t num,\n                                size_t *written)"
  },
  {
    "label": "SSL_ctrl()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_ctrl(SSL *ssl, int cmd, long larg, void *parg)"
  },
  {
    "label": "SSL_CTX_ctrl()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_CTX_ctrl(SSL_CTX *ctx, int cmd, long larg, void *parg)"
  },
  {
    "label": "SSL_get_early_data_status()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_early_data_status(const SSL *s)"
  },
  {
    "label": "SSL_get_error()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_error(const SSL *s, int ret_code)"
  },
  {
    "label": "SSL_CTX_set_ssl_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_ssl_version(SSL_CTX *ctx, const SSL_METHOD *meth)"
  },
  {
    "label": "DTLS_get_data_mtu()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "DTLS_get_data_mtu(const SSL *s)"
  },
  {
    "label": "SSL_do_handshake()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_do_handshake(SSL *s)"
  },
  {
    "label": "SSL_key_update()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_key_update(SSL *s, int updatetype)"
  },
  {
    "label": "SSL_get_key_update_type()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_key_update_type(const SSL *s)"
  },
  {
    "label": "SSL_renegotiate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_renegotiate(SSL *s)"
  },
  {
    "label": "SSL_renegotiate_abbreviated()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_renegotiate_abbreviated(SSL *s)"
  },
  {
    "label": "SSL_renegotiate_pending()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_renegotiate_pending(const SSL *s)"
  },
  {
    "label": "SSL_shutdown()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_shutdown(SSL *s)"
  },
  {
    "label": "SSL_verify_client_post_handshake()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_verify_client_post_handshake(SSL *s)"
  },
  {
    "label": "SSL_CTX_set_post_handshake_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_post_handshake_auth(SSL_CTX *ctx, int val)"
  },
  {
    "label": "SSL_set_post_handshake_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_post_handshake_auth(SSL *s, int val)"
  },
  {
    "label": "SSL_set_ssl_method()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_ssl_method(SSL *s, const SSL_METHOD *method)"
  },
  {
    "label": "SSL_add1_to_CA_list()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_add1_to_CA_list(SSL *ssl, const X509 *x)"
  },
  {
    "label": "SSL_CTX_add1_to_CA_list()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_add1_to_CA_list(SSL_CTX *ctx, const X509 *x)"
  },
  {
    "label": "SSL_add_client_CA()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_add_client_CA(SSL *ssl, X509 *x)"
  },
  {
    "label": "SSL_CTX_add_client_CA()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_add_client_CA(SSL_CTX *ctx, X509 *x)"
  },
  {
    "label": "SSL_set_connect_state()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_connect_state(SSL *s)"
  },
  {
    "label": "SSL_set_accept_state()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_accept_state(SSL *s)"
  },
  {
    "label": "SSL_get_default_timeout()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_get_default_timeout(const SSL *s)"
  },
  {
    "label": "SSL_CTX_set_quiet_shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_quiet_shutdown(SSL_CTX *ctx, int mode)"
  },
  {
    "label": "SSL_CTX_get_quiet_shutdown()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_get_quiet_shutdown(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_set_quiet_shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_quiet_shutdown(SSL *ssl, int mode)"
  },
  {
    "label": "SSL_get_quiet_shutdown()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_quiet_shutdown(const SSL *ssl)"
  },
  {
    "label": "SSL_set_shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_shutdown(SSL *ssl, int mode)"
  },
  {
    "label": "SSL_get_shutdown()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_shutdown(const SSL *ssl)"
  },
  {
    "label": "SSL_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_version(const SSL *ssl)"
  },
  {
    "label": "SSL_client_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_client_version(const SSL *s)"
  },
  {
    "label": "SSL_CTX_set_default_verify_paths()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_default_verify_paths(SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_set_default_verify_dir()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_default_verify_dir(SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_set_default_verify_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_default_verify_file(SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_load_verify_locations()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_load_verify_locations(SSL_CTX *ctx, const char *CAfile,\n                                         const char *CApath)"
  },
  {
    "label": "SSL_get_state()",
    "kind": "Method",
    "detail": "Function (OSSL_HANDSHAKE_STATE)",
    "insertText": "SSL_get_state(const SSL *ssl)"
  },
  {
    "label": "SSL_set_verify_result()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_verify_result(SSL *ssl, long v)"
  },
  {
    "label": "SSL_get_verify_result()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "SSL_get_verify_result(const SSL *ssl)"
  },
  {
    "label": "SSL_get_client_random()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_get_client_random(const SSL *ssl, unsigned char *out,\n                                    size_t outlen)"
  },
  {
    "label": "SSL_get_server_random()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_get_server_random(const SSL *ssl, unsigned char *out,\n                                    size_t outlen)"
  },
  {
    "label": "SSL_SESSION_get_master_key()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_SESSION_get_master_key(const SSL_SESSION *sess,\n                                         unsigned char *out, size_t outlen)"
  },
  {
    "label": "SSL_SESSION_set1_master_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_set1_master_key(SSL_SESSION *sess,\n                                       const unsigned char *in, size_t len)"
  },
  {
    "label": "SSL_SESSION_get_max_fragment_length()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "SSL_SESSION_get_max_fragment_length(const SSL_SESSION *sess)"
  },
  {
    "label": "SSL_set_ex_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_ex_data(SSL *ssl, int idx, void *data)"
  },
  {
    "label": "SSL_SESSION_set_ex_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_set_ex_data(SSL_SESSION *ss, int idx, void *data)"
  },
  {
    "label": "SSL_CTX_set_ex_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_ex_data(SSL_CTX *ssl, int idx, void *data)"
  },
  {
    "label": "SSL_get_ex_data_X509_STORE_CTX_idx()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_ex_data_X509_STORE_CTX_idx(void)"
  },
  {
    "label": "SSL_CTX_set_default_read_buffer_len()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_default_read_buffer_len(SSL_CTX *ctx, size_t len)"
  },
  {
    "label": "SSL_set_default_read_buffer_len()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_default_read_buffer_len(SSL *s, size_t len)"
  },
  {
    "label": "SSL_COMP_get_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_COMP_get_id(const SSL_COMP *comp)"
  },
  {
    "label": "SSL_COMP_add_compression_method()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_COMP_add_compression_method(int id, COMP_METHOD *cm)"
  },
  {
    "label": "SSL_CIPHER_get_cipher_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CIPHER_get_cipher_nid(const SSL_CIPHER *c)"
  },
  {
    "label": "SSL_CIPHER_get_digest_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CIPHER_get_digest_nid(const SSL_CIPHER *c)"
  },
  {
    "label": "SSL_set_session_ticket_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_session_ticket_ext(SSL *s, void *ext_data, int ext_len)"
  },
  {
    "label": "SSL_set_session_ticket_ext_cb()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_session_ticket_ext_cb(SSL *s,\n                                         tls_session_ticket_ext_cb_fn cb,\n                                         void *arg)"
  },
  {
    "label": "SSL_set_session_secret_cb()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_session_secret_cb(SSL *s,\n                                     tls_session_secret_cb_fn session_secret_cb,\n                                     void *arg)"
  },
  {
    "label": "SSL_CTX_set_record_padding_callback_arg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_record_padding_callback_arg(SSL_CTX *ctx, void *arg)"
  },
  {
    "label": "SSL_CTX_set_block_padding()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_block_padding(SSL_CTX *ctx, size_t block_size)"
  },
  {
    "label": "SSL_set_record_padding_callback_arg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_record_padding_callback_arg(SSL *ssl, void *arg)"
  },
  {
    "label": "SSL_set_block_padding()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_block_padding(SSL *ssl, size_t block_size)"
  },
  {
    "label": "SSL_set_num_tickets()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_num_tickets(SSL *s, size_t num_tickets)"
  },
  {
    "label": "SSL_get_num_tickets()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_get_num_tickets(const SSL *s)"
  },
  {
    "label": "SSL_CTX_set_num_tickets()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_num_tickets(SSL_CTX *ctx, size_t num_tickets)"
  },
  {
    "label": "SSL_CTX_get_num_tickets()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SSL_CTX_get_num_tickets(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_session_reused()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_session_reused(const SSL *s)"
  },
  {
    "label": "SSL_is_server()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_is_server(const SSL *s)"
  },
  {
    "label": "SSL_CONF_CTX_finish()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CONF_CTX_finish(SSL_CONF_CTX *cctx)"
  },
  {
    "label": "SSL_CONF_CTX_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CONF_CTX_free(SSL_CONF_CTX *cctx)"
  },
  {
    "label": "SSL_CONF_CTX_set_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CONF_CTX_set_flags(SSL_CONF_CTX *cctx, unsigned int flags)"
  },
  {
    "label": "SSL_CONF_CTX_clear_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CONF_CTX_clear_flags(SSL_CONF_CTX *cctx,\n                                             unsigned int flags)"
  },
  {
    "label": "SSL_CONF_CTX_set1_prefix()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CONF_CTX_set1_prefix(SSL_CONF_CTX *cctx, const char *pre)"
  },
  {
    "label": "SSL_CONF_CTX_set_ssl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CONF_CTX_set_ssl(SSL_CONF_CTX *cctx, SSL *ssl)"
  },
  {
    "label": "SSL_CONF_CTX_set_ssl_ctx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CONF_CTX_set_ssl_ctx(SSL_CONF_CTX *cctx, SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CONF_cmd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CONF_cmd(SSL_CONF_CTX *cctx, const char *cmd, const char *value)"
  },
  {
    "label": "SSL_CONF_cmd_argv()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CONF_cmd_argv(SSL_CONF_CTX *cctx, int *pargc, char ***pargv)"
  },
  {
    "label": "SSL_CONF_cmd_value_type()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CONF_cmd_value_type(SSL_CONF_CTX *cctx, const char *cmd)"
  },
  {
    "label": "SSL_add_ssl_module()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_add_ssl_module(void)"
  },
  {
    "label": "SSL_config()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_config(SSL *s, const char *name)"
  },
  {
    "label": "SSL_CTX_config()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_config(SSL_CTX *ctx, const char *name)"
  },
  {
    "label": "SSL_trace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_trace(int write_p, int version, int content_type,\n               const void *buf, size_t len, SSL *ssl, void *arg)"
  },
  {
    "label": "DTLSv1_listen()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DTLSv1_listen(SSL *s, BIO_ADDR *client)"
  },
  {
    "label": "SSL_set_ct_validation_callback()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_set_ct_validation_callback(SSL *s, ssl_ct_validation_cb callback,\n                                   void *arg)"
  },
  {
    "label": "SSL_CTX_set_ct_validation_callback()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_ct_validation_callback(SSL_CTX *ctx,\n                                       ssl_ct_validation_cb callback,\n                                       void *arg)"
  },
  {
    "label": "SSL_enable_ct()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_enable_ct(SSL *s, int validation_mode)"
  },
  {
    "label": "SSL_CTX_enable_ct()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_enable_ct(SSL_CTX *ctx, int validation_mode)"
  },
  {
    "label": "SSL_ct_is_enabled()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_ct_is_enabled(const SSL *s)"
  },
  {
    "label": "SSL_CTX_ct_is_enabled()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_ct_is_enabled(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_set_default_ctlog_list_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_default_ctlog_list_file(SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_set_ctlog_list_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_ctlog_list_file(SSL_CTX *ctx, const char *path)"
  },
  {
    "label": "SSL_CTX_set0_ctlog_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set0_ctlog_store(SSL_CTX *ctx, CTLOG_STORE *logs)"
  },
  {
    "label": "SSL_set_security_level()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_security_level(SSL *s, int level)"
  },
  {
    "label": "SSL_get_security_level()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_get_security_level(const SSL *s)"
  },
  {
    "label": "SSL_set0_security_ex_data()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set0_security_ex_data(SSL *s, void *ex)"
  },
  {
    "label": "SSL_CTX_set_security_level()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_security_level(SSL_CTX *ctx, int level)"
  },
  {
    "label": "SSL_CTX_get_security_level()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_get_security_level(const SSL_CTX *ctx)"
  },
  {
    "label": "SSL_CTX_set0_security_ex_data()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set0_security_ex_data(SSL_CTX *ctx, void *ex)"
  },
  {
    "label": "OPENSSL_init_ssl()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OPENSSL_init_ssl(uint64_t opts, const OPENSSL_INIT_SETTINGS *settings)"
  },
  {
    "label": "SSL_free_buffers()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_free_buffers(SSL *ssl)"
  },
  {
    "label": "SSL_alloc_buffers()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_alloc_buffers(SSL *ssl)"
  },
  {
    "label": "SSL_CTX_set_session_ticket_cb()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_CTX_set_session_ticket_cb(SSL_CTX *ctx,\n                                  SSL_CTX_generate_session_ticket_fn gen_cb,\n                                  SSL_CTX_decrypt_session_ticket_fn dec_cb,\n                                  void *arg)"
  },
  {
    "label": "SSL_SESSION_set1_ticket_appdata()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_set1_ticket_appdata(SSL_SESSION *ss, const void *data, size_t len)"
  },
  {
    "label": "SSL_SESSION_get0_ticket_appdata()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSL_SESSION_get0_ticket_appdata(SSL_SESSION *ss, void **data, size_t *len)"
  },
  {
    "label": "DTLS_set_timer_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DTLS_set_timer_cb(SSL *s, DTLS_timer_cb cb)"
  },
  {
    "label": "SSL_CTX_set_allow_early_data_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_CTX_set_allow_early_data_cb(SSL_CTX *ctx,\n                                     SSL_allow_early_data_cb_fn cb,\n                                     void *arg)"
  },
  {
    "label": "SSL_set_allow_early_data_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSL_set_allow_early_data_cb(SSL *s,\n                                 SSL_allow_early_data_cb_fn cb,\n                                 void *arg)"
  }
]