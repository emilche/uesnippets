[
  {
    "label": "FMediaPlayerFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMediaPlayerFacade"
  },
  {
    "label": "IMediaPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaPlayer"
  },
  {
    "label": "IMediaTextureSample",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaTextureSample"
  },
  {
    "label": "UMediaTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMediaTexture"
  },
  {
    "label": "FGenerateMipsStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenerateMipsStruct"
  },
  {
    "label": "FPriorSamples",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPriorSamples"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMediaTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMediaTextureResource"
  },
  {
    "label": "FRenderParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderParams"
  },
  {
    "label": "FMediaTextureResource()",
    "kind": "Method",
    "detail": "Function (MEDIAASSETS_API)",
    "insertText": "FMediaTextureResource(UMediaTexture& InOwner, FIntPoint& InOwnerDim, SIZE_T& InOwnerSize, FLinearColor InClearColor, FGuid InTextureGuid, bool bEnableGenMips, uint8 InNumMips, UE::Color::EColorSpace OverrideColorSpaceType)"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render(const FRenderParams& Params)"
  },
  {
    "label": "FlushPendingData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushPendingData()"
  },
  {
    "label": "SetJustInTimeRenderParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetJustInTimeRenderParams(const FRenderParams& InJustInTimeRenderParams)"
  },
  {
    "label": "ResetJustInTimeRenderParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetJustInTimeRenderParams()"
  },
  {
    "label": "JustInTimeRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JustInTimeRender()"
  },
  {
    "label": "ClearTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTexture(FRHICommandListImmediate& RHICmdList, const FLinearColor& ClearColor, bool SrgbOutput)"
  },
  {
    "label": "ConvertSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertSample(FRHICommandListImmediate& RHICmdList, const TSharedPtr<IMediaTextureSample, ESPMode::ThreadSafe>& Sample, const FLinearColor& ClearColor, uint8 InNumMips)"
  },
  {
    "label": "ConvertTextureToOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertTextureToOutput(FRHICommandListImmediate& RHICmdList, FRHITexture* InputTexture, const TSharedPtr<IMediaTextureSample, ESPMode::ThreadSafe>& Sample)"
  },
  {
    "label": "CopySample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySample(FRHICommandListImmediate& RHICmdList, const TSharedPtr<IMediaTextureSample, ESPMode::ThreadSafe>& Sample, const FLinearColor& ClearColor, uint8 InNumMips, const FGuid & TextureGUID)"
  },
  {
    "label": "UpdateResourceSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResourceSize()"
  },
  {
    "label": "UpdateTextureReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTextureReference(FRHICommandListImmediate& RHICmdList, FRHITexture* NewTexture)"
  },
  {
    "label": "CreateIntermediateRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateIntermediateRenderTarget(FRHICommandListImmediate& RHICmdList, const FIntPoint & InDim, EPixelFormat InPixelFormat, bool bInSRGB, const FLinearColor & InClearColor, uint8 InNumMips, bool bNeedsUAVSupport)"
  },
  {
    "label": "SetupSampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupSampler()"
  },
  {
    "label": "CopyFromExternalTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFromExternalTexture(FRHICommandListImmediate& RHICmdList, const TSharedPtr <IMediaTextureSample, ESPMode::ThreadSafe>& Sample, const FGuid & TextureGUID)"
  },
  {
    "label": "GetColorSpaceConversionMatrixForSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetColorSpaceConversionMatrixForSample(const TSharedPtr<IMediaTextureSample, ESPMode::ThreadSafe> Sample, FMatrix44f& ColorSpaceMtx)"
  }
]