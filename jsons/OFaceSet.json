[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "Sample",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sample"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set( const Sample &iSamp )"
  },
  {
    "label": "setTimeSampling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeSampling( uint32_t iTimeSamplingID )"
  },
  {
    "label": "setTimeSampling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeSampling( AbcA::TimeSamplingPtr iTime )"
  },
  {
    "label": "setFaceExclusivity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFaceExclusivity( FaceSetExclusivity iFacesExclusive )"
  },
  {
    "label": "_recordExclusivityHint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_recordExclusivityHint()"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init( AbcA::CompoundPropertyWriterPtr iParent,\n               const Abc::Argument &iArg0, const Abc::Argument &iArg1,\n               const Abc::Argument &iArg2, const Abc::Argument &iArg3 )"
  },
  {
    "label": "computeBoundsFromPositionsByFaces()",
    "kind": "Method",
    "detail": "Function (Abc::Box3d)",
    "insertText": "computeBoundsFromPositionsByFaces(const Int32ArraySample & faces,\n    const Int32ArraySample & meshFaceCounts,\n    const Int32ArraySample & vertexIndices,\n    const P3fArraySample & meshP)"
  }
]