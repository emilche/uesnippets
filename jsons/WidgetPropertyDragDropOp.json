[
  {
    "label": "FScopedTransaction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedTransaction"
  },
  {
    "label": "UWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidget"
  },
  {
    "label": "UWidgetBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetBlueprint"
  },
  {
    "label": "FWidgetPropertyDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetPropertyDragDropOp"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DragAndDrop / DecoratedDragDropOp . h \" # include \" Input / DragAndDrop . h \" # include \" UObject / Field . h \" class FScopedTransaction ; class UWidget ; class UWidgetBlueprint ; # define LOCTEXT_NAMESPACE \" WidgetPropertyDragDropOp \" class FWidgetPropertyDragDropOp : public FDecoratedDragDropOp { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FWidgetPropertyDragDropOp, FDecoratedDragDropOp)"
  },
  {
    "label": "FWidgetPropertyDragDropOp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWidgetPropertyDragDropOp()"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDrop(bool bDropWasHandled, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWidgetPropertyDragDropOp>)",
    "insertText": "New(UWidget* InOwnerWidget, FName InPropertyName, TArray<FFieldVariant> InPropertyPath, UWidgetBlueprint* InWidgetBP)"
  }
]