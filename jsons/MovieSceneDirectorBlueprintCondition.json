[
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "MOVIESCENETRACKS_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MOVIESCENETRACKS_API"
  },
  {
    "label": "MOVIESCENETRACKS_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MOVIESCENETRACKS_API"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FMovieSceneDirectorBlueprintConditionInvoker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneDirectorBlueprintConditionInvoker"
  },
  {
    "label": "allowing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "allowing"
  },
  {
    "label": "MOVIESCENETRACKS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENETRACKS_API"
  },
  {
    "label": "EvaluateDirectorBlueprintCondition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvaluateDirectorBlueprintCondition(FGuid BindingGuid, FMovieSceneSequenceID SequenceID, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState, const FMovieSceneDirectorBlueprintConditionData& DirectorBlueprintCondition)"
  },
  {
    "label": "InvokeDirectorBlueprintCondition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InvokeDirectorBlueprintCondition(UObject* DirectorInstance, const FMovieSceneDirectorBlueprintConditionData& DirectorBlueprintCondition, const FMovieSceneConditionContext& ConditionContext)"
  }
]