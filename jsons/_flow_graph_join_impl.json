[
  {
    "label": "forwarding_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "forwarding_base"
  },
  {
    "label": "matching_forwarding_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "matching_forwarding_base"
  },
  {
    "label": "join_helper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "join_helper"
  },
  {
    "label": "join_helper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "join_helper"
  },
  {
    "label": "reserving_port",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "reserving_port"
  },
  {
    "label": "op_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "op_type"
  },
  {
    "label": "reserving_port_operation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "reserving_port_operation"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "run_and_put_task",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "run_and_put_task"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "queueing_port",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "queueing_port"
  },
  {
    "label": "op_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "op_type"
  },
  {
    "label": "queueing_port_operation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "queueing_port_operation"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "run_and_put_task",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "run_and_put_task"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "count_element",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "count_element"
  },
  {
    "label": "key_to_count_functor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "key_to_count_functor"
  },
  {
    "label": "TraitsType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TraitsType"
  },
  {
    "label": "key_matching_port",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "key_matching_port"
  },
  {
    "label": "op_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "op_type"
  },
  {
    "label": "key_matching_port_operation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "key_matching_port_operation"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "run_and_put_task",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "run_and_put_task"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "join_node_base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "join_node_base"
  },
  {
    "label": "join_node_FE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "join_node_FE"
  },
  {
    "label": "join_node_FE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "join_node_FE"
  },
  {
    "label": "join_node_FE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "join_node_FE"
  },
  {
    "label": "join_node_FE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "join_node_FE"
  },
  {
    "label": "private",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "private"
  },
  {
    "label": "op_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "op_type"
  },
  {
    "label": "key_matching_FE_operation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "key_matching_FE_operation"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "join_node_base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "join_node_base"
  },
  {
    "label": "op_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "op_type"
  },
  {
    "label": "join_node_base_operation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "join_node_base_operation"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "forward_task_bypass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "forward_task_bypass"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "PT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PT"
  },
  {
    "label": "join_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "join_base"
  },
  {
    "label": "join_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "join_base"
  },
  {
    "label": "PT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PT"
  },
  {
    "label": "PT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PT"
  },
  {
    "label": "unfolded_join_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "unfolded_join_node"
  },
  {
    "label": "key_from_message_body",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "key_from_message_body"
  },
  {
    "label": "key_from_message_body",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "key_from_message_body"
  },
  {
    "label": "unfolded_join_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "unfolded_join_node"
  },
  {
    "label": "unfolded_join_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "unfolded_join_node"
  },
  {
    "label": "unfolded_join_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "unfolded_join_node"
  },
  {
    "label": "unfolded_join_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "unfolded_join_node"
  },
  {
    "label": "unfolded_join_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "unfolded_join_node"
  },
  {
    "label": "unfolded_join_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "unfolded_join_node"
  },
  {
    "label": "unfolded_join_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "unfolded_join_node"
  },
  {
    "label": "unfolded_join_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "unfolded_join_node"
  },
  {
    "label": "unfolded_join_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "unfolded_join_node"
  },
  {
    "label": "get_my_item()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "get_my_item(my_input, out)"
  },
  {
    "label": "get_my_item()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "get_my_item(my_input, out)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (reserving_port_operation)",
    "insertText": "op_data(src, reg_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (reserving_port_operation)",
    "insertText": "op_data(src, rem_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (reserving_port_operation)",
    "insertText": "op_data(v, res_item)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (reserving_port_operation)",
    "insertText": "op_data(rel_res)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (reserving_port_operation)",
    "insertText": "op_data(con_res)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (reserving_port_operation)",
    "insertText": "op_data(src, add_blt_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (reserving_port_operation)",
    "insertText": "op_data(src, del_blt_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (reserving_port_operation)",
    "insertText": "op_data(blt_pred_cnt)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (reserving_port_operation)",
    "insertText": "op_data(blt_pred_cpy)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (queueing_port_operation)",
    "insertText": "op_data(v, try__put_task)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (queueing_port_operation)",
    "insertText": "op_data(&v, get__item)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (queueing_port_operation)",
    "insertText": "op_data(res_port)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (queueing_port_operation)",
    "insertText": "op_data(add_blt_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (queueing_port_operation)",
    "insertText": "op_data(del_blt_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (queueing_port_operation)",
    "insertText": "op_data(blt_pred_cnt)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (queueing_port_operation)",
    "insertText": "op_data(blt_pred_cpy)"
  },
  {
    "label": "__TBB_store_with_release()",
    "kind": "Method",
    "detail": "Function (occurs)",
    "insertText": "__TBB_store_with_release(current->status, was_inserted ? SUCCEEDED : FAILED)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_port_operation)",
    "insertText": "op_data(v, try__put)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_port_operation)",
    "insertText": "op_data(&v, get__item)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_port_operation)",
    "insertText": "op_data(add_blt_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_port_operation)",
    "insertText": "op_data(del_blt_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_port_operation)",
    "insertText": "op_data(blt_pred_cnt)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_port_operation)",
    "insertText": "op_data(blt_pred_cpy)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_port_operation)",
    "insertText": "op_data(res_port)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_FE_operation)",
    "insertText": "op_data(res_count)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_FE_operation)",
    "insertText": "op_data(t, handle_task, inc_count)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_FE_operation)",
    "insertText": "op_data(may_succeed)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (key_matching_FE_operation)",
    "insertText": "op_data(&out,try_make)"
  },
  {
    "label": "__TBB_store_with_release()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "__TBB_store_with_release(current->status, FAILED)"
  },
  {
    "label": "__TBB_store_with_release()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "__TBB_store_with_release(current->status, FAILED)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (join_node_base_operation)",
    "insertText": "op_data(r, reg_succ)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (join_node_base_operation)",
    "insertText": "op_data(r, rem_succ)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (join_node_base_operation)",
    "insertText": "op_data(v, try__get)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (join_node_base_operation)",
    "insertText": "op_data(r, add_blt_succ)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (join_node_base_operation)",
    "insertText": "op_data(r, del_blt_succ)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (join_node_base_operation)",
    "insertText": "op_data(blt_succ_cnt)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (join_node_base_operation)",
    "insertText": "op_data(blt_succ_cpy)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (join_node_base_operation)",
    "insertText": "op_data(do_fwrd_bypass)"
  }
]