[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef __LIBSTROPHE_SOCK_H__ # define __LIBSTROPHE_SOCK_H__ # include<stdio . h> # if)",
    "insertText": "defined(_XBOX_ONE)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif typedef int sock_t ; # elif !)",
    "insertText": "defined(_WIN32)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# else # include<winsock2 . h> typedef SOCKET sock_t ; # endif # if)",
    "insertText": "defined(USE_WEBSOCKETS) int sockets_ready(fd_set* read_set, fd_set* write_set)"
  },
  {
    "label": "sock_initialize()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "sock_initialize(void)"
  },
  {
    "label": "sock_shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sock_shutdown(void)"
  },
  {
    "label": "sock_error()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sock_error(void)"
  },
  {
    "label": "sock_connect()",
    "kind": "Method",
    "detail": "Function (sock_t)",
    "insertText": "sock_connect(const char * const host, const unsigned short port)"
  },
  {
    "label": "sock_close()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sock_close(const sock_t sock)"
  },
  {
    "label": "sock_set_blocking()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sock_set_blocking(const sock_t sock)"
  },
  {
    "label": "sock_set_nonblocking()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sock_set_nonblocking(const sock_t sock)"
  },
  {
    "label": "sock_read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sock_read(const sock_t sock, void * const buff, const size_t len)"
  },
  {
    "label": "sock_write()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sock_write(const sock_t sock, const void * const buff, const size_t len)"
  },
  {
    "label": "sock_is_recoverable()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sock_is_recoverable(const int error)"
  },
  {
    "label": "sock_connect_error()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sock_connect_error(const sock_t sock)"
  },
  {
    "label": "sock_set_keepalive()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sock_set_keepalive(const sock_t sock, int timeout, int interval)"
  }
]