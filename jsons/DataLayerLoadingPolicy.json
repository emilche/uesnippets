[
  {
    "label": "UDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstance"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Object . h \" # include \" WorldPartition / WorldPartition . h \" # include \" DataLayerLoadingPolicy . generated . h \" class UDataLayerInstance ;)",
    "insertText": "UCLASS(Within = DataLayerManager)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() #if WITH_EDITOR public: virtual bool ResolveIsLoadedInEditor(TArray<const UDataLayerInstance*>& InDataLayers)"
  },
  {
    "label": "GetDataLayersLogicOperator()",
    "kind": "Method",
    "detail": "Function (protected : EWorldPartitionDataLayersLogicOperator)",
    "insertText": "GetDataLayersLogicOperator()"
  }
]