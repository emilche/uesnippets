[
  {
    "label": "FParticlePerfStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticlePerfStats"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UFXSystemAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFXSystemAsset"
  },
  {
    "label": "UFXSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFXSystemComponent"
  },
  {
    "label": "FParticlePerfStats_GT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticlePerfStats_GT"
  },
  {
    "label": "FParticlePerfStats_RT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticlePerfStats_RT"
  },
  {
    "label": "FParticlePerfStats_GPU",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticlePerfStats_GPU"
  },
  {
    "label": "FParticlePerfStatsContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticlePerfStatsContext"
  },
  {
    "label": "FParticlePerfStatScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticlePerfStatScope"
  },
  {
    "label": "FParticlePerfStatsWriterCycles_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticlePerfStatsWriterCycles_"
  },
  {
    "label": "FParticlePerfStatsWriterCyclesAndCount_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticlePerfStatsWriterCyclesAndCount_"
  },
  {
    "label": "WITH_GLOBAL_RUNTIME_FX_BUDGET()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / Atomic . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" HAL / PlatformTime . h \" # include \" Containers / Array . h \" # include \" ProfilingDebugging / CsvProfiler . h \" # define)",
    "insertText": "WITH_GLOBAL_RUNTIME_FX_BUDGET(!UE_SERVER) #ifndef WITH_PARTICLE_PERF_STATS #if (WITH_UNREAL_DEVELOPER_TOOLS || WITH_UNREAL_TARGET_DEVELOPER_TOOLS || (!UE_BUILD_SHIPPING) || WITH_GLOBAL_RUNTIME_FX_BUDGET) #define WITH_PARTICLE_PERF_STATS 1 #else #define WITH_PARTICLE_PERF_STATS 0 #endif #else #if !WITH_PARTICLE_PERF_STATS #undef WITH_GLOBAL_RUNTIME_FX_BUDGET #define WITH_GLOBAL_RUNTIME_FX_BUDGET 0 #endif #endif #define WITH_PER_SYSTEM_PARTICLE_PERF_STATS (WITH_PARTICLE_PERF_STATS && !UE_BUILD_SHIPPING) #define WITH_PER_COMPONENT_PARTICLE_PERF_STATS (WITH_PARTICLE_PERF_STATS && !UE_BUILD_SHIPPING) #define WITH_PARTICLE_PERF_CSV_STATS WITH_PER_SYSTEM_PARTICLE_PERF_STATS && CSV_PROFILER_STATS && !UE_BUILD_SHIPPING CSV_DECLARE_CATEGORY_MODULE_EXTERN(ENGINE_API, Particles)"
  },
  {
    "label": "FParticlePerfStats_GT()",
    "kind": "Method",
    "detail": "Function (struct FParticlePerfStats ; class UWorld ; class UFXSystemAsset ; class UFXSystemComponent ; # if WITH_PARTICLE_PERF_STATS struct FParticlePerfStats_GT { uint64 NumInstances ; uint64 TickGameThreadCycles ; TAtomic<uint64> TickConcurrentCycles ; uint64 FinalizeCycles ; TAtomic<uint64> EndOfFrameCycles ; TAtomic<uint64> ActivationCycles ; uint64 WaitCycles ;)",
    "insertText": "FParticlePerfStats_GT()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FParticlePerfStats_GT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticlePerfStats_GT(const FParticlePerfStats_GT& Other)"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (NumInstances = Other . NumInstances ; TickGameThreadCycles = Other . TickGameThreadCycles ; TickConcurrentCycles = Other . TickConcurrentCycles .)",
    "insertText": "Load()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WaitCycles = Other . WaitCycles ; } FParticlePerfStats_GT&)",
    "insertText": "operator(const FParticlePerfStats_GT& Other)"
  },
  {
    "label": "FParticlePerfStats_GT()",
    "kind": "Method",
    "detail": "Function (WaitCycles = Other . WaitCycles ; return* this ; })",
    "insertText": "FParticlePerfStats_GT(FParticlePerfStats_GT&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FParticlePerfStats_GT&)",
    "insertText": "operator(FParticlePerfStats_GT&& Other)"
  },
  {
    "label": "GetTotalCycles_GTOnly()",
    "kind": "Method",
    "detail": "Function (NumInstances = 0 ; TickGameThreadCycles = 0 ; TickConcurrentCycles = 0 ; FinalizeCycles = 0 ; EndOfFrameCycles = 0 ; ActivationCycles = 0 ; WaitCycles = 0 ; } uint64)",
    "insertText": "GetTotalCycles_GTOnly()"
  },
  {
    "label": "GetTotalCycles()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "GetTotalCycles()"
  },
  {
    "label": "GetPerInstanceAvgCycles()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "GetPerInstanceAvgCycles()"
  },
  {
    "label": "FParticlePerfStats_RT()",
    "kind": "Method",
    "detail": "Function (} } ; struct FParticlePerfStats_RT { uint64 NumInstances = 0 ; uint64 RenderUpdateCycles = 0 ; uint64 GetDynamicMeshElementsCycles = 0 ;)",
    "insertText": "FParticlePerfStats_RT()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FParticlePerfStats_RT&)",
    "insertText": "operator(FParticlePerfStats_RT& Other)"
  },
  {
    "label": "GetTotalMicroseconds()",
    "kind": "Method",
    "detail": "Function (NumInstances + = Other . NumInstances ; RenderUpdateCycles + = Other . RenderUpdateCycles ; GetDynamicMeshElementsCycles + = Other . GetDynamicMeshElementsCycles ; return* this ; } } ; struct FParticlePerfStats_GPU { uint64 NumInstances = 0 ; uint64 TotalMicroseconds = 0 ; uint64)",
    "insertText": "GetTotalMicroseconds()"
  },
  {
    "label": "FParticlePerfStats_GPU()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticlePerfStats_GPU()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (NumInstances = 0 ; TotalMicroseconds = 0 ; } FParticlePerfStats_GPU&)",
    "insertText": "operator(FParticlePerfStats_GPU& Other)"
  },
  {
    "label": "FParticlePerfStats()",
    "kind": "Method",
    "detail": "Function (NumInstances + = Other . NumInstances ; TotalMicroseconds + = Other . TotalMicroseconds ; return* this ; } } ; struct FParticlePerfStats {)",
    "insertText": "FParticlePerfStats()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(bool bSyncWithRT)"
  },
  {
    "label": "ResetGT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetGT()"
  },
  {
    "label": "ResetRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetRT()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "TickRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickRT()"
  },
  {
    "label": "GetStatsEnabled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetStatsEnabled()"
  },
  {
    "label": "GetGatherWorldStats()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetGatherWorldStats()"
  },
  {
    "label": "GetGatherSystemStats()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetGatherSystemStats()"
  },
  {
    "label": "GetGatherComponentStats()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetGatherComponentStats()"
  },
  {
    "label": "ShouldGatherStats()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldGatherStats()"
  },
  {
    "label": "SetCSVStatsEnabled()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCSVStatsEnabled(bool bEnabled)"
  },
  {
    "label": "Store()",
    "kind": "Method",
    "detail": "Function (bCSVStatsEnabled .)",
    "insertText": "Store(bEnabled)"
  },
  {
    "label": "SetStatsEnabled()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetStatsEnabled(bool bEnabled)"
  },
  {
    "label": "AddWorldStatReader()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddWorldStatReader()"
  },
  {
    "label": "RemoveWorldStatReader()",
    "kind": "Method",
    "detail": "Function (+ + WorldStatsReaders ; } void)",
    "insertText": "RemoveWorldStatReader()"
  },
  {
    "label": "AddSystemStatReader()",
    "kind": "Method",
    "detail": "Function (- - WorldStatsReaders ; } void)",
    "insertText": "AddSystemStatReader()"
  },
  {
    "label": "RemoveSystemStatReader()",
    "kind": "Method",
    "detail": "Function (+ + SystemStatsReaders ; } void)",
    "insertText": "RemoveSystemStatReader()"
  },
  {
    "label": "AddComponentStatReader()",
    "kind": "Method",
    "detail": "Function (- - SystemStatsReaders ; } void)",
    "insertText": "AddComponentStatReader()"
  },
  {
    "label": "RemoveComponentStatReader()",
    "kind": "Method",
    "detail": "Function (+ + ComponentStatsReaders ; } void)",
    "insertText": "RemoveComponentStatReader()"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (- - ComponentStatsReaders ; } FParticlePerfStats*)",
    "insertText": "GetStats(const UWorld* World)"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } FParticlePerfStats*)",
    "insertText": "GetStats(const UFXSystemAsset* System)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if WITH_PER_SYSTEM_PARTICLE_PERF_STATS)",
    "insertText": "if(System && GetGatherSystemStats() && GetStatsEnabled())"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (} # endif return nullptr ; } FParticlePerfStats*)",
    "insertText": "GetStats(const UFXSystemComponent* Component)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if WITH_PER_COMPONENT_PARTICLE_PERF_STATS)",
    "insertText": "if(Component && GetGatherComponentStats() && GetStatsEnabled())"
  },
  {
    "label": "GetGameThreadStats()",
    "kind": "Method",
    "detail": "Function (} # endif return nullptr ; } TAtomic<bool> bStatsEnabled ; TAtomic<int32> WorldStatsReaders ; TAtomic<int32> SystemStatsReaders ; TAtomic<int32> ComponentStatsReaders ; TAtomic<bool> bCSVStatsEnabled ; FParticlePerfStats_GT GameThreadStats ; FParticlePerfStats_RT RenderThreadStats ; FParticlePerfStats_GPU GPUStats ; FParticlePerfStats_GT&)",
    "insertText": "GetGameThreadStats()"
  },
  {
    "label": "ResetStatNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetStatNames()"
  },
  {
    "label": "GetWorldPerfStats()",
    "kind": "Method",
    "detail": "Function (# endif private : FParticlePerfStats*)",
    "insertText": "GetWorldPerfStats(const UWorld* World)"
  },
  {
    "label": "GetSystemPerfStats()",
    "kind": "Method",
    "detail": "Function (FParticlePerfStats*)",
    "insertText": "GetSystemPerfStats(const UFXSystemAsset* FXAsset)"
  },
  {
    "label": "GetComponentPerfStats()",
    "kind": "Method",
    "detail": "Function (FParticlePerfStats*)",
    "insertText": "GetComponentPerfStats(const UFXSystemComponent* FXComponent)"
  },
  {
    "label": "FParticlePerfStatsContext()",
    "kind": "Method",
    "detail": "Function (} ; struct FParticlePerfStatsContext {)",
    "insertText": "FParticlePerfStatsContext() : WorldStats(nullptr) #if WITH_PER_SYSTEM_PARTICLE_PERF_STATS , SystemStats(nullptr) #endif #if WITH_PER_COMPONENT_PARTICLE_PERF_STATS , ComponentStats(nullptr)"
  },
  {
    "label": "FParticlePerfStatsContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticlePerfStatsContext(FParticlePerfStats* InWorldStats, FParticlePerfStats* InSystemStats, FParticlePerfStats* InComponentStats)"
  },
  {
    "label": "SetWorldStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldStats(InWorldStats)"
  },
  {
    "label": "SetSystemStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSystemStats(InSystemStats)"
  },
  {
    "label": "SetComponentStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponentStats(InComponentStats)"
  },
  {
    "label": "FParticlePerfStatsContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticlePerfStatsContext(FParticlePerfStats* InWorldStats, FParticlePerfStats* InSystemStats)"
  },
  {
    "label": "FParticlePerfStatsContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticlePerfStatsContext(FParticlePerfStats* InComponentStats)"
  },
  {
    "label": "FParticlePerfStatsContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticlePerfStatsContext(const UWorld* InWorld, const UFXSystemAsset* InSystem, const UFXSystemComponent* InComponent)"
  },
  {
    "label": "SetWorldStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldStats(FParticlePerfStats::GetStats(InWorld))"
  },
  {
    "label": "SetSystemStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSystemStats(FParticlePerfStats::GetStats(InSystem))"
  },
  {
    "label": "SetComponentStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponentStats(FParticlePerfStats::GetStats(InComponent))"
  },
  {
    "label": "FParticlePerfStatsContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticlePerfStatsContext(const UWorld* InWorld, const UFXSystemAsset* InSystem)"
  },
  {
    "label": "FParticlePerfStatsContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticlePerfStatsContext(const UFXSystemComponent* InComponent)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetWorldStats()",
    "kind": "Method",
    "detail": "Function (} FParticlePerfStats* WorldStats = nullptr ; FParticlePerfStats*)",
    "insertText": "GetWorldStats()"
  },
  {
    "label": "GetSystemStats()",
    "kind": "Method",
    "detail": "Function (WorldStats = Stats ; } # if WITH_PER_SYSTEM_PARTICLE_PERF_STATS FParticlePerfStats* SystemStats = nullptr ; FParticlePerfStats*)",
    "insertText": "GetSystemStats()"
  },
  {
    "label": "GetComponentStats()",
    "kind": "Method",
    "detail": "Function (} # endif # if WITH_PER_COMPONENT_PARTICLE_PERF_STATS FParticlePerfStats* ComponentStats = nullptr ; FParticlePerfStats*)",
    "insertText": "GetComponentStats()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} # endif } ; typedef TFunction<)",
    "insertText": "void(FParticlePerfStats* Stats, uint64 Cycles)"
  },
  {
    "label": "FParticlePerfStatScope()",
    "kind": "Method",
    "detail": "Function (template<TWriterFunc> struct FParticlePerfStatScope {)",
    "insertText": "FParticlePerfStatScope(FParticlePerfStatsContext InContext, int32 InCount=0) : Context(InContext) , StartCycles(INDEX_NONE) , Count(InCount)"
  },
  {
    "label": "Cycles64()",
    "kind": "Method",
    "detail": "Function (StartCycles =)",
    "insertText": "Cycles64()"
  },
  {
    "label": "FParticlePerfStatScope()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FParticlePerfStatScope()"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write(Context.GetWorldStats(), Cycles, Count)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write(Context.GetSystemStats(), Cycles, Count)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write(Context.GetComponentStats(), Cycles, Count)"
  },
  {
    "label": "PARTICLE_PERF_STAT_CYCLES_COMMON()",
    "kind": "Method",
    "detail": "Function (} } FParticlePerfStatsContext Context ; uint64 StartCycles = 0 ; int32 Count = 0 ; } ; # define)",
    "insertText": "PARTICLE_PERF_STAT_CYCLES_COMMON(CONTEXT, THREAD, NAME)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (\\ void)",
    "insertText": "Write(FParticlePerfStats* Stats, uint64 Cycles, int32 Count)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(Stats)"
  },
  {
    "label": "Stats()",
    "kind": "Method",
    "detail": "Function (Stats -> Get # # THREAD # #)",
    "insertText": "Stats()"
  },
  {
    "label": "ANONYMOUS_VARIABLE()",
    "kind": "Method",
    "detail": "Function (} \\ } \\ } ; \\ FParticlePerfStatScope<FParticlePerfStatsWriterCycles_ # # THREAD # # _ # # NAME>)",
    "insertText": "ANONYMOUS_VARIABLE(ParticlePerfStatScope##THREAD##NAME)(CONTEXT)"
  },
  {
    "label": "PARTICLE_PERF_STAT_CYCLES_WITH_COUNT_COMMON()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "PARTICLE_PERF_STAT_CYCLES_WITH_COUNT_COMMON(CONTEXT, THREAD, NAME, COUNT)"
  },
  {
    "label": "ANONYMOUS_VARIABLE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ } ; \\ FParticlePerfStatScope<FParticlePerfStatsWriterCyclesAndCount_ # # THREAD # # _ # # NAME>)",
    "insertText": "ANONYMOUS_VARIABLE(ParticlePerfStatScope##THREAD##NAME)(CONTEXT, COUNT)"
  },
  {
    "label": "PARTICLE_PERF_STAT_CYCLES_GT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "PARTICLE_PERF_STAT_CYCLES_GT(CONTEXT, NAME) PARTICLE_PERF_STAT_CYCLES_COMMON(CONTEXT, GameThread, NAME) #define PARTICLE_PERF_STAT_CYCLES_RT(CONTEXT, NAME) PARTICLE_PERF_STAT_CYCLES_COMMON(CONTEXT, RenderThread, NAME) #define PARTICLE_PERF_STAT_CYCLES_WITH_COUNT_GT(CONTEXT, NAME, COUNT) PARTICLE_PERF_STAT_CYCLES_WITH_COUNT_COMMON(CONTEXT, GameThread, NAME, COUNT) #define PARTICLE_PERF_STAT_CYCLES_WITH_COUNT_RT(CONTEXT, NAME, COUNT) PARTICLE_PERF_STAT_CYCLES_WITH_COUNT_COMMON(CONTEXT, RenderThread, NAME, COUNT) #else #define PARTICLE_PERF_STAT_CYCLES_GT(CONTEXT, NAME) #define PARTICLE_PERF_STAT_CYCLES_RT(CONTEXT, NAME) #define PARTICLE_PERF_STAT_CYCLES_WITH_COUNT_GT(CONTEXT, NAME, COUNT) #define PARTICLE_PERF_STAT_CYCLES_WITH_COUNT_RT(CONTEXT, NAME, COUNT)"
  },
  {
    "label": "FParticlePerfStatsContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticlePerfStatsContext(UWorld* InWorld, UFXSystemAsset* InSystem, const UFXSystemComponent* InComponent)"
  },
  {
    "label": "FParticlePerfStatsContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticlePerfStatsContext(UWorld* InWorld, UFXSystemAsset* InSystem)"
  }
]