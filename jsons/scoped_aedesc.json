[
  {
    "label": "ScopedAEDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedAEDesc"
  },
  {
    "label": "ScopedAEDesc()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_MAC_SCOPED_AEDESC_H_ # define BASE_MAC_SCOPED_AEDESC_H_ # import<CoreServices / CoreServices . h> namespace base::mac { template<AEDescType = AEDesc> class ScopedAEDesc { public :)",
    "insertText": "ScopedAEDesc()"
  },
  {
    "label": "AECreateDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AECreateDesc(typeNull, NULL, 0, &desc_)"
  },
  {
    "label": "ScopedAEDesc()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ScopedAEDesc(const ScopedAEDesc&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScopedAEDesc&)",
    "insertText": "operator(const ScopedAEDesc&)"
  },
  {
    "label": "AEDisposeDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AEDisposeDesc(&desc_)"
  },
  {
    "label": "AEDescType()",
    "kind": "Method",
    "detail": "Function (} operator const)",
    "insertText": "AEDescType()"
  }
]