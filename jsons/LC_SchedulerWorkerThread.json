[
  {
    "label": "TaskQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskQueue"
  },
  {
    "label": "WorkerThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WorkerThread"
  },
  {
    "label": "WorkerThread()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" LC_ThreadTypes . h \" namespace scheduler { class TaskQueue ; class WorkerThread { public :)",
    "insertText": "WorkerThread(TaskQueue* queue)"
  },
  {
    "label": "WorkerThread()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "WorkerThread(void)"
  },
  {
    "label": "ThreadFunction()",
    "kind": "Method",
    "detail": "Function (private : Thread::ReturnValue)",
    "insertText": "ThreadFunction(TaskQueue* queue)"
  }
]