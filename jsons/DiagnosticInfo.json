[
  {
    "label": "DiagnosticPrinter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticPrinter"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "Instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Instruction"
  },
  {
    "label": "LLVMContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContextImpl"
  },
  {
    "label": "Twine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Twine"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "DebugLoc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DebugLoc"
  },
  {
    "label": "SMDiagnostic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMDiagnostic"
  },
  {
    "label": "DiagnosticSeverity",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DiagnosticSeverity"
  },
  {
    "label": "should",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "should"
  },
  {
    "label": "DiagnosticKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DiagnosticKind"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "DiagnosticInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfo"
  },
  {
    "label": "DiagnosticInfoInlineAsm",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoInlineAsm"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "DiagnosticInfoStackSize",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoStackSize"
  },
  {
    "label": "DiagnosticInfoDebugMetadataVersion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoDebugMetadataVersion"
  },
  {
    "label": "DiagnosticInfoSampleProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoSampleProfile"
  },
  {
    "label": "DiagnosticInfoOptimizationBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoOptimizationBase"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "DiagnosticKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DiagnosticKind"
  },
  {
    "label": "DiagnosticSeverity",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DiagnosticSeverity"
  },
  {
    "label": "DiagnosticInfoOptimizationRemark",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoOptimizationRemark"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "DiagnosticInfoOptimizationRemarkMissed",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoOptimizationRemarkMissed"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "DiagnosticInfoOptimizationRemarkAnalysis",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoOptimizationRemarkAnalysis"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "DiagnosticInfoMIRParser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoMIRParser"
  },
  {
    "label": "DiagnosticInfoOptimizationFailure",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoOptimizationFailure"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "DiagnosticInfoDxil",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfoDxil"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "getNextAvailablePluginDiagnosticKind()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNextAvailablePluginDiagnosticKind()"
  },
  {
    "label": "emitOptimizationRemark()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitOptimizationRemark(LLVMContext &Ctx, const char *PassName,\n                            const Function &Fn, const DebugLoc &DLoc,\n                            const Twine &Msg)"
  },
  {
    "label": "emitOptimizationRemarkMissed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitOptimizationRemarkMissed(LLVMContext &Ctx, const char *PassName,\n                                  const Function &Fn, const DebugLoc &DLoc,\n                                  const Twine &Msg)"
  },
  {
    "label": "emitOptimizationRemarkAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitOptimizationRemarkAnalysis(LLVMContext &Ctx, const char *PassName,\n                                    const Function &Fn, const DebugLoc &DLoc,\n                                    const Twine &Msg)"
  },
  {
    "label": "emitLoopVectorizeWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitLoopVectorizeWarning(LLVMContext &Ctx, const Function &Fn,\n                              const DebugLoc &DLoc, const Twine &Msg)"
  },
  {
    "label": "emitLoopInterleaveWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitLoopInterleaveWarning(LLVMContext &Ctx, const Function &Fn,\n                               const DebugLoc &DLoc, const Twine &Msg)"
  }
]