[
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMovieSceneAnimTypeID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneAnimTypeID"
  },
  {
    "label": "FScopedPreAnimatedCaptureSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedPreAnimatedCaptureSource"
  },
  {
    "label": "IMovieScenePreAnimatedGlobalTokenProducer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IMovieScenePreAnimatedGlobalTokenProducer"
  },
  {
    "label": "IMovieScenePreAnimatedTokenProducer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IMovieScenePreAnimatedTokenProducer"
  },
  {
    "label": "FAnimTypePreAnimatedStateObjectStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimTypePreAnimatedStateObjectStorage"
  },
  {
    "label": "FAnimTypePreAnimatedStateRootStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimTypePreAnimatedStateRootStorage"
  },
  {
    "label": "FPreAnimatedEntityCaptureSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedEntityCaptureSource"
  },
  {
    "label": "FPreAnimatedEvaluationHookCaptureSources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedEvaluationHookCaptureSources"
  },
  {
    "label": "FPreAnimatedStateEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedStateEntry"
  },
  {
    "label": "FPreAnimatedStateExtension",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedStateExtension"
  },
  {
    "label": "FPreAnimatedTemplateCaptureSources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedTemplateCaptureSources"
  },
  {
    "label": "FPreAnimatedTrackInstanceCaptureSources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedTrackInstanceCaptureSources"
  },
  {
    "label": "FPreAnimatedTrackInstanceInputCaptureSources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedTrackInstanceInputCaptureSources"
  },
  {
    "label": "FRestoreStateParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRestoreStateParams"
  },
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "IPreAnimatedCaptureSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPreAnimatedCaptureSource"
  },
  {
    "label": "IPreAnimatedStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPreAnimatedStorage"
  },
  {
    "label": "IPreAnimatedStateGroupManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPreAnimatedStateGroupManager"
  },
  {
    "label": "FAggregatePreAnimatedStateMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAggregatePreAnimatedStateMetaData"
  },
  {
    "label": "FPreAnimatedGroupMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedGroupMetaData"
  },
  {
    "label": "TPreAnimatedStateGroupManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPreAnimatedStateGroupManager"
  },
  {
    "label": "IPreAnimatedStateGroupManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / Map . h \" # include \" Containers / SortedMap . h \" # include \" Containers / SparseArray . h \" # include \" CoreTypes . h \" # include \" EntitySystem / MovieScenePropertySystemTypes . h \" # include \" EntitySystem / MovieSceneSequenceInstanceHandle . h \" # include \" Evaluation / MovieSceneAnimTypeID . h \" # include \" Evaluation / PreAnimatedState / IMovieScenePreAnimatedStorage . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStateTypes . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStorageID . h \" # include \" Misc / AssertionMacros . h \" # include \" Templates / Less . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / ObjectKey . h \" class FReferenceCollector ; class UMovieSceneEntitySystemLinker ; class UObject ; struct FMovieSceneAnimTypeID ; struct FScopedPreAnimatedCaptureSource ; struct IMovieScenePreAnimatedGlobalTokenProducer ; struct IMovieScenePreAnimatedTokenProducer ; namespace UE { namespace MovieScene { struct FAnimTypePreAnimatedStateObjectStorage ; struct FAnimTypePreAnimatedStateRootStorage ; struct FPreAnimatedEntityCaptureSource ; struct FPreAnimatedEvaluationHookCaptureSources ; struct FPreAnimatedStateEntry ; struct FPreAnimatedStateExtension ; struct FPreAnimatedTemplateCaptureSources ; struct FPreAnimatedTrackInstanceCaptureSources ; struct FPreAnimatedTrackInstanceInputCaptureSources ; struct FRestoreStateParams ; struct FSharedPlaybackState ; struct IPreAnimatedCaptureSource ; struct IPreAnimatedStorage ; struct IPreAnimatedStateGroupManager { ~)",
    "insertText": "IPreAnimatedStateGroupManager()"
  },
  {
    "label": "InitializeGroupManager()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitializeGroupManager(FPreAnimatedStateExtension* Extension)"
  },
  {
    "label": "OnGroupDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGroupDestroyed(FPreAnimatedStorageGroupHandle Group)"
  },
  {
    "label": "GatherStaleStorageGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherStaleStorageGroups(TArray<FPreAnimatedStorageGroupHandle>& StaleGroupStorage)"
  },
  {
    "label": "FPreAnimatedStateExtension()",
    "kind": "Method",
    "detail": "Function (} ; struct FPreAnimatedStateExtension { public :)",
    "insertText": "FPreAnimatedStateExtension()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Initialize(UMovieSceneEntitySystemLinker* InLinker)"
  },
  {
    "label": "RegisterStorage()",
    "kind": "Method",
    "detail": "Function (template<StorageType> TPreAnimatedStorageID<StorageType>)",
    "insertText": "RegisterStorage()"
  },
  {
    "label": "RegisterStorageInternal()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedStorageID StorageID =)",
    "insertText": "RegisterStorageInternal()"
  },
  {
    "label": "FindStorage()",
    "kind": "Method",
    "detail": "Function (} public : template<StorageType> TSharedPtr<StorageType>)",
    "insertText": "FindStorage(TPreAnimatedStorageID<StorageType> InStorageID)"
  },
  {
    "label": "FindRef()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPreAnimatedStorage> TypedStorage = StorageImplementations .)",
    "insertText": "FindRef(InStorageID)"
  },
  {
    "label": "AddStorage()",
    "kind": "Method",
    "detail": "Function (} template<StorageType> void)",
    "insertText": "AddStorage(TPreAnimatedStorageID<StorageType> InStorageID, TSharedPtr<StorageType> InStorage)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (StorageImplementations .)",
    "insertText": "Add(InStorageID, InStorage)"
  },
  {
    "label": "GetOrCreateStorage()",
    "kind": "Method",
    "detail": "Function (} template<StorageType> TSharedPtr<StorageType>)",
    "insertText": "GetOrCreateStorage()"
  },
  {
    "label": "GetOrCreateStorage()",
    "kind": "Method",
    "detail": "Function (} template<StorageType> TSharedPtr<StorageType>)",
    "insertText": "GetOrCreateStorage(TPreAnimatedStorageID<StorageType> InStorageID)"
  },
  {
    "label": "FindStorage()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<StorageType> Existing =)",
    "insertText": "FindStorage(InStorageID)"
  },
  {
    "label": "StorageType()",
    "kind": "Method",
    "detail": "Function (Existing = MakeShared<)",
    "insertText": "StorageType()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (Existing ->)",
    "insertText": "Initialize(InStorageID, this)"
  },
  {
    "label": "AddStorage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStorage(InStorageID, Existing)"
  },
  {
    "label": "GetStorageChecked()",
    "kind": "Method",
    "detail": "Function (} return Existing ; } TSharedPtr<IPreAnimatedStorage>)",
    "insertText": "GetStorageChecked(FPreAnimatedStorageID InStorageID)"
  },
  {
    "label": "FindGroupManager()",
    "kind": "Method",
    "detail": "Function (} public : template<GroupManagerType> TSharedPtr<GroupManagerType>)",
    "insertText": "FindGroupManager()"
  },
  {
    "label": "GetOrCreateGroupManager()",
    "kind": "Method",
    "detail": "Function (} template<GroupManagerType> TSharedPtr<GroupManagerType>)",
    "insertText": "GetOrCreateGroupManager()"
  },
  {
    "label": "FindRef()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPreAnimatedStateGroupManager> Existing = GroupManagers .)",
    "insertText": "FindRef(GroupManagerType::GroupManagerID).Pin()"
  },
  {
    "label": "GroupManagerType()",
    "kind": "Method",
    "detail": "Function (Existing = MakeShared<)",
    "insertText": "GroupManagerType()"
  },
  {
    "label": "InitializeGroupManager()",
    "kind": "Method",
    "detail": "Function (Existing ->)",
    "insertText": "InitializeGroupManager(this)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (GroupManagers .)",
    "insertText": "Add(GroupManagerType::GroupManagerID, Existing)"
  },
  {
    "label": "GroupManagerType()",
    "kind": "Method",
    "detail": "Function (} return StaticCastSharedPtr<)",
    "insertText": "GroupManagerType(Existing)"
  },
  {
    "label": "AllocateGroup()",
    "kind": "Method",
    "detail": "Function (} FPreAnimatedStorageGroupHandle)",
    "insertText": "AllocateGroup(TSharedPtr<IPreAnimatedStateGroupManager> GroupManager)"
  },
  {
    "label": "FreeGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeGroup(FPreAnimatedStorageGroupHandle Index)"
  },
  {
    "label": "IsCapturingGlobalState()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "IsCapturingGlobalState()"
  },
  {
    "label": "RestoreGlobalState()",
    "kind": "Method",
    "detail": "Function (bEntriesInvalidated = false ; } public : void)",
    "insertText": "RestoreGlobalState(const FRestoreStateParams& Params)"
  },
  {
    "label": "DiscardGlobalState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardGlobalState(const FRestoreStateParams& Params)"
  },
  {
    "label": "RestoreStateForGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreStateForGroup(FPreAnimatedStorageGroupHandle GroupHandle, const FRestoreStateParams& Params)"
  },
  {
    "label": "DiscardStaleObjectState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardStaleObjectState()"
  },
  {
    "label": "ReplaceObjectForGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceObjectForGroup(FPreAnimatedStorageGroupHandle GroupHandle, const FObjectKey& OldObject, const FObjectKey& NewObject)"
  },
  {
    "label": "DiscardTransientState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardTransientState()"
  },
  {
    "label": "DiscardStateForGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardStateForGroup(FPreAnimatedStorageGroupHandle GroupHandle)"
  },
  {
    "label": "DiscardStateForStorage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardStateForStorage(FPreAnimatedStorageID StorageID, FPreAnimatedStorageIndex StorageIndex)"
  },
  {
    "label": "ContainsAnyStateForInstanceHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsAnyStateForInstanceHandle(FRootInstanceHandle RootInstanceHandle)"
  },
  {
    "label": "SavePreAnimatedState()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SavePreAnimatedState(FMovieSceneAnimTypeID InTokenType, const IMovieScenePreAnimatedGlobalTokenProducer& Producer)"
  },
  {
    "label": "SavePreAnimatedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePreAnimatedState(UObject& InObject, FMovieSceneAnimTypeID InTokenType, const IMovieScenePreAnimatedTokenProducer& Producer)"
  },
  {
    "label": "SavePreAnimatedStateDirectly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePreAnimatedStateDirectly(FMovieSceneAnimTypeID InTokenType, const IMovieScenePreAnimatedGlobalTokenProducer& Producer)"
  },
  {
    "label": "SavePreAnimatedStateDirectly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePreAnimatedStateDirectly(UObject& InObject, FMovieSceneAnimTypeID InTokenType, const IMovieScenePreAnimatedTokenProducer& Producer)"
  },
  {
    "label": "GetEntityMetaData()",
    "kind": "Method",
    "detail": "Function (public : FPreAnimatedEntityCaptureSource*)",
    "insertText": "GetEntityMetaData()"
  },
  {
    "label": "GetOrCreateEntityMetaData()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedEntityCaptureSource*)",
    "insertText": "GetOrCreateEntityMetaData()"
  },
  {
    "label": "GetTrackInstanceMetaData()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedTrackInstanceCaptureSources*)",
    "insertText": "GetTrackInstanceMetaData()"
  },
  {
    "label": "GetOrCreateTrackInstanceMetaData()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedTrackInstanceCaptureSources*)",
    "insertText": "GetOrCreateTrackInstanceMetaData()"
  },
  {
    "label": "GetTrackInstanceInputMetaData()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedTrackInstanceInputCaptureSources*)",
    "insertText": "GetTrackInstanceInputMetaData()"
  },
  {
    "label": "GetOrCreateTrackInstanceInputMetaData()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedTrackInstanceInputCaptureSources*)",
    "insertText": "GetOrCreateTrackInstanceInputMetaData()"
  },
  {
    "label": "GetTemplateMetaData()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedTemplateCaptureSources*)",
    "insertText": "GetTemplateMetaData()"
  },
  {
    "label": "GetOrCreateTemplateMetaData()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedTemplateCaptureSources*)",
    "insertText": "GetOrCreateTemplateMetaData()"
  },
  {
    "label": "GetEvaluationHookMetaData()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedEvaluationHookCaptureSources*)",
    "insertText": "GetEvaluationHookMetaData()"
  },
  {
    "label": "GetOrCreateEvaluationHookMetaData()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedEvaluationHookCaptureSources*)",
    "insertText": "GetOrCreateEvaluationHookMetaData()"
  },
  {
    "label": "HasActiveCaptureSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasActiveCaptureSource()"
  },
  {
    "label": "AddWeakCaptureSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWeakCaptureSource(TWeakPtr<IPreAnimatedCaptureSource> InWeakMetaData)"
  },
  {
    "label": "RemoveWeakCaptureSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveWeakCaptureSource(TWeakPtr<IPreAnimatedCaptureSource> InWeakMetaData)"
  },
  {
    "label": "EnsureMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureMetaData(const FPreAnimatedStateEntry& Entry)"
  },
  {
    "label": "AddSourceMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSourceMetaData(const FPreAnimatedStateEntry& Entry)"
  },
  {
    "label": "MetaDataExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MetaDataExists(const FPreAnimatedStateEntry& Entry)"
  },
  {
    "label": "AddMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMetaData(const FPreAnimatedStateMetaData& MetaData)"
  },
  {
    "label": "RemoveMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMetaData(const FPreAnimatedStateMetaData& MetaData)"
  },
  {
    "label": "UpdateMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMetaData(const FPreAnimatedStateMetaData& MetaData)"
  },
  {
    "label": "GetStorageRequirement()",
    "kind": "Method",
    "detail": "Function (EPreAnimatedStorageRequirement)",
    "insertText": "GetStorageRequirement(const FPreAnimatedStateEntry& Entry)"
  },
  {
    "label": "FreeGroupInternal()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "FreeGroupInternal(FPreAnimatedStorageGroupHandle Handle)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UMovieSceneEntitySystemLinker*, FReferenceCollector& ReferenceCollector)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (using FContributionRemover = TFunctionRef<)",
    "insertText": "void(IPreAnimatedStorage&, FPreAnimatedStorageIndex)"
  },
  {
    "label": "HandleMetaDataToRemove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMetaDataToRemove(const FRestoreStateParams& Params, TArrayView<FPreAnimatedStateMetaData> MetaDataToRemove, FContributionRemover RemoveFunc)"
  },
  {
    "label": "OnObjectsReplaced()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnObjectsReplaced(const TMap<UObject*, UObject*>& ReplacementMap)"
  },
  {
    "label": "FAggregatePreAnimatedStateMetaData()",
    "kind": "Method",
    "detail": "Function (uint32 NumRequestsForGlobalState ; private : TUniquePtr<FPreAnimatedEntityCaptureSource> EntityCaptureSource ; TUniquePtr<FPreAnimatedTrackInstanceCaptureSources> TrackInstanceCaptureSource ; TUniquePtr<FPreAnimatedTrackInstanceInputCaptureSources> TrackInstanceInputCaptureSource ; TUniquePtr<UE::MovieScene::FPreAnimatedTemplateCaptureSources> TemplateCaptureSource ; TUniquePtr<UE::MovieScene::FPreAnimatedEvaluationHookCaptureSources> EvaluationHookCaptureSource ; TArray<TWeakPtr<IPreAnimatedCaptureSource>> WeakExternalCaptureSources ; TWeakPtr<FAnimTypePreAnimatedStateObjectStorage> WeakGenericObjectStorage ; TWeakPtr<FAnimTypePreAnimatedStateRootStorage> WeakGenericRootStorage ; private : struct::FScopedPreAnimatedCaptureSource ; struct FAggregatePreAnimatedStateMetaData {)",
    "insertText": "FAggregatePreAnimatedStateMetaData(FPreAnimatedStateCachedValueHandle InValueHandle) : ValueHandle(InValueHandle)"
  },
  {
    "label": "FindMetaData()",
    "kind": "Method",
    "detail": "Function (} FPreAnimatedStateCachedValueHandle ValueHandle ; FInstanceHandle TerminalInstanceHandle ; uint16 NumContributors = 0 ; uint16 NumRestoreContributors = 0 ; bool bWantedRestore = false ; bool bEligibleForGlobalRestore = false ; } ; FAggregatePreAnimatedStateMetaData*)",
    "insertText": "FindMetaData(const FPreAnimatedStateEntry& Entry)"
  },
  {
    "label": "GetOrAddMetaDataInternal()",
    "kind": "Method",
    "detail": "Function (FAggregatePreAnimatedStateMetaData*)",
    "insertText": "GetOrAddMetaDataInternal(const FPreAnimatedStateEntry& Entry)"
  },
  {
    "label": "InitializeGroupManager()",
    "kind": "Method",
    "detail": "Function (} ; template<KeyType> struct TPreAnimatedStateGroupManager : IPreAnimatedStateGroupManager,TSharedFromThis<TPreAnimatedStateGroupManager<KeyType>> { void)",
    "insertText": "InitializeGroupManager(FPreAnimatedStateExtension* InExtension)"
  },
  {
    "label": "FindChecked()",
    "kind": "Method",
    "detail": "Function (KeyType Temp = StorageGroupsToKey .)",
    "insertText": "FindChecked(Group)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (StorageGroupsByKey .)",
    "insertText": "Remove(Temp)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (StorageGroupsToKey .)",
    "insertText": "Remove(Group)"
  },
  {
    "label": "FindGroupForKey()",
    "kind": "Method",
    "detail": "Function (} FPreAnimatedStorageGroupHandle)",
    "insertText": "FindGroupForKey(const KeyType& InKey)"
  },
  {
    "label": "MakeGroupForKey()",
    "kind": "Method",
    "detail": "Function (} FPreAnimatedStorageGroupHandle)",
    "insertText": "MakeGroupForKey(const KeyType& InKey)"
  },
  {
    "label": "FindRef()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedStorageGroupHandle GroupHandle = StorageGroupsByKey .)",
    "insertText": "FindRef(InKey)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (StorageGroupsByKey .)",
    "insertText": "Add(InKey, GroupHandle)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (StorageGroupsToKey .)",
    "insertText": "Add(GroupHandle, InKey)"
  }
]