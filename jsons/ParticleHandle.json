[
  {
    "label": "IPhysicsProxyBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPhysicsProxyBase"
  },
  {
    "label": "UGeometryCollectionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGeometryCollectionComponent"
  },
  {
    "label": "FConstraintHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstraintHandle"
  },
  {
    "label": "FPBDRigidsEvolutionBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsEvolutionBase"
  },
  {
    "label": "FConvexOptimizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConvexOptimizer"
  },
  {
    "label": "FGeometryParticleParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryParticleParameters"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FKinematicGeometryParticleParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKinematicGeometryParticleParameters"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FPBDRigidParticleParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPBDRigidParticleParameters"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FAccelerationStructureHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAccelerationStructureHandle"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "TParticleHandleBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TParticleHandleBase"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "TConstParticleIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TConstParticleIterator"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "of"
  },
  {
    "label": "TKinematicGeometryParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TKinematicGeometryParticleHandleImp"
  },
  {
    "label": "TPBDRigidParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPBDRigidParticleHandleImp"
  },
  {
    "label": "TGeometryParticleHandles",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticleHandles"
  },
  {
    "label": "TGeometryParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticleHandleImp"
  },
  {
    "label": "TGeometryParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticleHandleImp"
  },
  {
    "label": "TGeometryParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticleHandleImp"
  },
  {
    "label": "FInvalidFromTransient",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInvalidFromTransient"
  },
  {
    "label": "TKinematicGeometryParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TKinematicGeometryParticleHandleImp"
  },
  {
    "label": "TGeometryParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticleHandleImp"
  },
  {
    "label": "TPBDRigidParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPBDRigidParticleHandleImp"
  },
  {
    "label": "TGeometryParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticleHandleImp"
  },
  {
    "label": "TPBDRigidClusteredParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPBDRigidClusteredParticleHandleImp"
  },
  {
    "label": "TGeometryParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticleHandleImp"
  },
  {
    "label": "FRigidClustering",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRigidClustering"
  },
  {
    "label": "TPBDGeometryCollectionParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPBDGeometryCollectionParticleHandleImp"
  },
  {
    "label": "TGeometryParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticleHandleImp"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGenericParticleHandleImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericParticleHandleImp"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FGenericParticleHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericParticleHandle"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FConstGenericParticleHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstGenericParticleHandle"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "TGeometryParticleHandles",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticleHandles"
  },
  {
    "label": "TKinematicGeometryParticle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TKinematicGeometryParticle"
  },
  {
    "label": "TPBDRigidParticle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPBDRigidParticle"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FParticleData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleData"
  },
  {
    "label": "TGeometryParticle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticle"
  },
  {
    "label": "IPhysicsProxyBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPhysicsProxyBase"
  },
  {
    "label": "IPhysicsProxyBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPhysicsProxyBase"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TKinematicGeometryParticle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TKinematicGeometryParticle"
  },
  {
    "label": "TPBDRigidParticle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPBDRigidParticle"
  },
  {
    "label": "FPBDGeometryCollectionParticle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDGeometryCollectionParticle"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "CHAOS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOS_API"
  },
  {
    "label": "CHAOS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOS_API"
  },
  {
    "label": "ISpatialAcceleration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISpatialAcceleration"
  },
  {
    "label": "ISpatialVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISpatialVisitor"
  },
  {
    "label": "ForceDeepCopyOnModifyGeometry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ForceDeepCopyOnModifyGeometry()"
  },
  {
    "label": "FAccelerationStructureHandle()",
    "kind": "Method",
    "detail": "Function (operation)",
    "insertText": "FAccelerationStructureHandle(FGeometryParticle* InGeometryParticle = nullptr, bool bUsePrefiltering = true)"
  },
  {
    "label": "FAccelerationStructureHandle()",
    "kind": "Method",
    "detail": "Function (bPersistent>)",
    "insertText": "FAccelerationStructureHandle(TGeometryParticleHandleImp<FReal, 3, bPersistent>& InHandle)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FChaosArchive& Ar)"
  },
  {
    "label": "PrePreQueryFilterImp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PrePreQueryFilterImp(*QueryFilterData, UnionQueryFilterData)"
  },
  {
    "label": "PrePreSimFilterImp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PrePreSimFilterImp(*SimFilterData, UnionSimFilterData)"
  },
  {
    "label": "ComputeParticleQueryFilterDataFromShapes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeParticleQueryFilterDataFromShapes(const TParticle& Particle, FCollisionFilterData& OutQueryFilterData)"
  },
  {
    "label": "ComputeParticleSimFilterDataFromShapes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeParticleSimFilterDataFromShapes(const TParticle& Particle, FCollisionFilterData& OutSimFilterData)"
  },
  {
    "label": "UpdatePrePreFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrePreFilter(const TParticle& Particle)"
  },
  {
    "label": "ensure()",
    "kind": "Method",
    "detail": "Function (SOAs)",
    "insertText": "ensure(GeometryParticles == nullptr || GeometryParticles == InParticles)"
  },
  {
    "label": "Unique()",
    "kind": "Method",
    "detail": "Function (TParticlesType::THandleType>)",
    "insertText": "Unique(NewHandle)"
  },
  {
    "label": "SetXR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetXR(const FParticlePositionRotation& XR)"
  },
  {
    "label": "MergeGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeGeometry(TArray<Chaos::FImplicitObjectPtr>&& Objects)"
  },
  {
    "label": "DummyPtr()",
    "kind": "Method",
    "detail": "Function (ESPMode::ThreadSafe>)",
    "insertText": "DummyPtr(nullptr)"
  },
  {
    "label": "DummyPtr()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FImplicitObject>)",
    "insertText": "DummyPtr(nullptr)"
  },
  {
    "label": "RemoveShape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveShape(FPerShapeData* InShape)"
  },
  {
    "label": "RemoveShapesAtSortedIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveShapesAtSortedIndices(const TArrayView<const int32>& InIndices)"
  },
  {
    "label": "GetHandleHelper()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetHandleHelper(this)"
  },
  {
    "label": "GetHandleHelper()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetHandleHelper(this)"
  },
  {
    "label": "GeometryParticleSleeping()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GeometryParticleSleeping(*this)"
  },
  {
    "label": "AddTorque()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTorque(const TVector<T, d>& InTorque, bool bInvalidate = true)"
  },
  {
    "label": "SetTorque()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTorque(const TVector<T, d>& InTorque, bool bInvalidate = true)"
  },
  {
    "label": "DummyPtr()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FImplicitObjectUnionClustered>)",
    "insertText": "DummyPtr(nullptr)"
  },
  {
    "label": "DummyPtr()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FImplicitObjectUnionClustered>)",
    "insertText": "DummyPtr(nullptr)"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString()"
  },
  {
    "label": "IsSleeping()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsSleeping()"
  },
  {
    "label": "DummyPtr()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FImplicitObject>)",
    "insertText": "DummyPtr(nullptr)"
  },
  {
    "label": "GetV()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetV()"
  },
  {
    "label": "GetW()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetW()"
  },
  {
    "label": "SetX()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SetX(InP)"
  },
  {
    "label": "GetX()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetX()"
  },
  {
    "label": "P()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "P()"
  },
  {
    "label": "GetR()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetR()"
  },
  {
    "label": "Q()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Q()"
  },
  {
    "label": "GetX()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetX()"
  },
  {
    "label": "GetX()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetX()"
  },
  {
    "label": "GetR()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetR()"
  },
  {
    "label": "GetR()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetR()"
  },
  {
    "label": "GetTransformXR()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTransformXR()"
  },
  {
    "label": "GetTransformXR()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTransformXR()"
  },
  {
    "label": "V()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "V()"
  },
  {
    "label": "W()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "W()"
  },
  {
    "label": "FVec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVec3(0)"
  },
  {
    "label": "FReal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FReal(0)"
  },
  {
    "label": "FReal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FReal(0)"
  },
  {
    "label": "RemoveAtSwapHelper()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "RemoveAtSwapHelper(UnstableIdx)"
  },
  {
    "label": "SetX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetX(const TVector<T, d>& InX, bool bInvalidate = true)"
  },
  {
    "label": "SetR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetR(const TRotation<T, d>& InR, bool bInvalidate = true)"
  },
  {
    "label": "MergeGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeGeometry(TArray<Chaos::FImplicitObjectPtr>&& Objects)"
  },
  {
    "label": "RemoveShape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveShape(FPerShapeData* InShape, bool bWakeTouching)"
  },
  {
    "label": "RemoveShapesAtSortedIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveShapesAtSortedIndices(const TArrayView<const int32>& InIndices)"
  },
  {
    "label": "SetIgnoreAnalyticCollisionsImp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIgnoreAnalyticCollisionsImp(FImplicitObject* Implicit, bool bIgnoreAnalyticCollisions)"
  },
  {
    "label": "SetIgnoreAnalyticCollisions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIgnoreAnalyticCollisions(bool bIgnoreAnalyticCollisions)"
  },
  {
    "label": "ModifyGeometry()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ModifyGeometry(bDirectAccess ? EGeometryAccess::Direct : EGeometryAccess::DeepCopy, Func)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "check(false)"
  },
  {
    "label": "CVD_TRACE_INVALIDATE_CACHED_GEOMETRY()",
    "kind": "Method",
    "detail": "Function (seen)",
    "insertText": "CVD_TRACE_INVALIDATE_CACHED_GEOMETRY(GeomToModify)"
  },
  {
    "label": "DummyPtr()",
    "kind": "Method",
    "detail": "Function (ESPMode::ThreadSafe>)",
    "insertText": "DummyPtr(nullptr)"
  },
  {
    "label": "MarkDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDirty(const EChaosPropertyFlags DirtyBits, bool bInvalidate = true)"
  },
  {
    "label": "UpdateShapesArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateShapesArray()"
  },
  {
    "label": "PrepareBVHImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareBVHImpl()"
  },
  {
    "label": "SetV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetV(const TVector<T, d>& InV, bool bInvalidate = true)"
  },
  {
    "label": "SetW()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetW(const TVector<T, d>& InW, bool bInvalidate = true)"
  },
  {
    "label": "AddTorque()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTorque(const TVector<T, d>& InTorque, bool bInvalidate=true)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "check(false)"
  },
  {
    "label": "SetObjectStateHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectStateHelper(IPhysicsProxyBase& Proxy, FPBDRigidParticleHandle& Rigid, EObjectStateType InState, bool bAllowEvents = false, bool bInvalidate = true)"
  }
]