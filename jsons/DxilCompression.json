[
  {
    "label": "IMalloc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IMalloc"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ZlibDecompress()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<cstddef> struct IMalloc ; namespace hlsl { enum class ZlibResult { Success = 0,InvalidData = 1,OutOfMemory = 2,} ; ZlibResult)",
    "insertText": "ZlibDecompress(IMalloc *pMalloc, const void *pCompressedBuffer, size_t BufferSizeInBytes, void *pUncompressedBuffer, size_t UncompressedBufferSize)"
  },
  {
    "label": "ZlibCallbackFn()",
    "kind": "Method",
    "detail": "Function (typedef void*)",
    "insertText": "ZlibCallbackFn(void *pUserData, size_t RequiredSize)"
  },
  {
    "label": "ZlibCompress()",
    "kind": "Method",
    "detail": "Function (ZlibResult)",
    "insertText": "ZlibCompress(IMalloc *pMalloc, const void *pData, size_t pDataSize, void *pUserData, ZlibCallbackFn *Callback, size_t *pOutCompressedSize)"
  }
]