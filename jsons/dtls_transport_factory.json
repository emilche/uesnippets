[
  {
    "label": "DtlsTransportFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DtlsTransportFactory"
  },
  {
    "label": "DtlsTransportFactory()",
    "kind": "Method",
    "detail": "Function (# ifndef P2P_BASE_DTLS_TRANSPORT_FACTORY_H_ # define P2P_BASE_DTLS_TRANSPORT_FACTORY_H_ # include<memory> # include<string> # include \" p2p / base / dtls_transport_internal . h \" # include \" p2p / base / ice_transport_internal . h \" namespace cricket { class DtlsTransportFactory { public : ~)",
    "insertText": "DtlsTransportFactory()"
  },
  {
    "label": "CreateDtlsTransport()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<DtlsTransportInternal>)",
    "insertText": "CreateDtlsTransport(IceTransportInternal* ice, const webrtc::CryptoOptions& crypto_options, rtc::SSLProtocolVersion max_version)"
  }
]