[
  {
    "label": "FWinHttpHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWinHttpHandle"
  },
  {
    "label": "FWinHttpHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_WINHTTP # include \" CoreMinimal . h \" using HINTERNET = void* ; class FWinHttpHandle { public :)",
    "insertText": "FWinHttpHandle()"
  },
  {
    "label": "FWinHttpHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWinHttpHandle(HINTERNET NewHandle)"
  },
  {
    "label": "FWinHttpHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWinHttpHandle(const FWinHttpHandle& Other)"
  },
  {
    "label": "FWinHttpHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWinHttpHandle(FWinHttpHandle&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWinHttpHandle&)",
    "insertText": "operator(const FWinHttpHandle& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWinHttpHandle&)",
    "insertText": "operator(FWinHttpHandle&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWinHttpHandle&)",
    "insertText": "operator(HINTERNET NewHandle)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "bool()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (HINTERNET)",
    "insertText": "Get()"
  }
]