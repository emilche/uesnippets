[
  {
    "label": "UCanvasPanelSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvasPanelSlot"
  },
  {
    "label": "UCanvasPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvasPanel"
  },
  {
    "label": "SConstraintCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SConstraintCanvas"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Layout / SConstraintCanvas . h \" # include \" Components / PanelWidget . h \" # include \" CanvasPanel . generated . h \" class UCanvasPanelSlot ;)",
    "insertText": "UCLASS(meta = (ShortTooltip = \"A designer-friendly panel useful for laying out top-level widgets. Use sparingly.\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UFUNCTION(BlueprintCallable, Category=\"Canvas Panel\") UMG_API UCanvasPanelSlot* AddChildToCanvas(UWidget* Content)"
  },
  {
    "label": "GetCanvasWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class SConstraintCanvas>)",
    "insertText": "GetCanvasWidget()"
  },
  {
    "label": "GetGeometryForSlot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetGeometryForSlot(int32 SlotIndex, FGeometry& ArrangedGeometry)"
  },
  {
    "label": "GetGeometryForSlot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetGeometryForSlot(UCanvasPanelSlot* Slot, FGeometry& ArrangedGeometry)"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "GetPaletteCategory()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR const FText)",
    "insertText": "GetPaletteCategory()"
  },
  {
    "label": "LockToPanelOnDrag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LockToPanelOnDrag()"
  },
  {
    "label": "OnSlotAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSlotAdded(UPanelSlot* Slot)"
  },
  {
    "label": "OnSlotRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSlotRemoved(UPanelSlot* Slot)"
  },
  {
    "label": "RebuildWidget()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<class SConstraintCanvas> MyCanvas ; protected : TSharedRef<SWidget>)",
    "insertText": "RebuildWidget()"
  }
]