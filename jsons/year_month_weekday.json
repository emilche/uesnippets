[
  {
    "label": "year_month_weekday",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "year_month_weekday"
  },
  {
    "label": "year_month_weekday_last",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "year_month_weekday_last"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___CHRONO_YEAR_MONTH_WEEKDAY_H # define _LIBCPP___CHRONO_YEAR_MONTH_WEEKDAY_H # include<__chrono / calendar . h> # include<__chrono / day . h> # include<__chrono / duration . h> # include<__chrono / month . h> # include<__chrono / month_weekday . h> # include<__chrono / system_clock . h> # include<__chrono / time_point . h> # include<__chrono / weekday . h> # include<__chrono / year . h> # include<__chrono / year_month . h> # include<__chrono / year_month_day . h> # include<__config> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"
  },
  {
    "label": "year_month_weekday()",
    "kind": "Method",
    "detail": "Function (class year_month_weekday { chrono::year __y ; chrono::month __m ; chrono::weekday_indexed __wdi ; public : _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_weekday()"
  },
  {
    "label": "year_month_weekday()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_weekday(const chrono::year& __yval, const chrono::month& __mval, const chrono::weekday_indexed& __wdival)"
  },
  {
    "label": "year_month_weekday()",
    "kind": "Method",
    "detail": "Function (__yval },__m { __mval },__wdi { __wdival } { } _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_weekday(const sys_days& __sysd) noexcept : year_month_weekday(__from_days(__sysd.time_since_epoch()))"
  },
  {
    "label": "year_month_weekday()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_weekday(const local_days& __locd) noexcept : year_month_weekday(__from_days(__locd.time_since_epoch()))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday&)",
    "insertText": "operator(const months&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI year_month_weekday&)",
    "insertText": "operator(const years&)"
  },
  {
    "label": "year()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI chrono::year)",
    "insertText": "year()"
  },
  {
    "label": "index()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI unsigned)",
    "insertText": "index()"
  },
  {
    "label": "weekday_indexed()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI chrono::weekday_indexed)",
    "insertText": "weekday_indexed()"
  },
  {
    "label": "local_days()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI operator)",
    "insertText": "local_days()"
  },
  {
    "label": "ok()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI bool)",
    "insertText": "ok()"
  },
  {
    "label": "weekday()",
    "kind": "Method",
    "detail": "Function (auto __nth_weekday_day = __wdi .)",
    "insertText": "weekday()"
  },
  {
    "label": "sys_days()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "sys_days(__y / __m / 1)"
  },
  {
    "label": "__from_days()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday)",
    "insertText": "__from_days(days __d)"
  },
  {
    "label": "__to_days()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI days)",
    "insertText": "__to_days()"
  },
  {
    "label": "weekday()",
    "kind": "Method",
    "detail": "Function (const sys_days __sysd { __d } ; const chrono::weekday __wd =)",
    "insertText": "weekday(__sysd)"
  },
  {
    "label": "year_month_day()",
    "kind": "Method",
    "detail": "Function (const year_month_day __ymd =)",
    "insertText": "year_month_day(__sysd)"
  },
  {
    "label": "sys_days()",
    "kind": "Method",
    "detail": "Function (const sys_days __sysd =)",
    "insertText": "sys_days(__y/__m/1)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI bool)",
    "insertText": "operator(const year_month_weekday& __lhs, const year_month_weekday& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday)",
    "insertText": "operator(const year_month& __lhs, const weekday_indexed& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday)",
    "insertText": "operator(const year& __lhs, const month_weekday& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday)",
    "insertText": "operator(int __lhs, const month_weekday& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday)",
    "insertText": "operator(const month_weekday& __lhs, const year& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday)",
    "insertText": "operator(const year_month_weekday& __lhs, const months& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday)",
    "insertText": "operator(const months& __lhs, const year_month_weekday& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday)",
    "insertText": "operator(const year_month_weekday& __lhs, const years& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday)",
    "insertText": "operator(const years& __lhs, const year_month_weekday& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday&)",
    "insertText": "operator(const months& __dm)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* this =* this - __dm ; return* this ; } _LIBCPP_HIDE_FROM_ABI year_month_weekday&)",
    "insertText": "operator(const years& __dy)"
  },
  {
    "label": "year_month_weekday_last()",
    "kind": "Method",
    "detail": "Function (* this =* this - __dy ; return* this ; } class year_month_weekday_last { private : chrono::year __y ; chrono::month __m ; chrono::weekday_last __wdl ; public : _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_weekday_last(const chrono::year& __yval, const chrono::month& __mval, const chrono::weekday_last& __wdlval)"
  },
  {
    "label": "weekday_last()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI chrono::weekday_last)",
    "insertText": "weekday_last()"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (const sys_days __last = sys_days { __y / __m / last } ;)",
    "insertText": "return(__last - (chrono::weekday{__last} - __wdl.weekday())).time_since_epoch()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI bool)",
    "insertText": "operator(const year_month_weekday_last& __lhs, const year_month_weekday_last& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday_last)",
    "insertText": "operator(const year_month& __lhs, const weekday_last& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday_last)",
    "insertText": "operator(const year& __lhs, const month_weekday_last& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday_last)",
    "insertText": "operator(int __lhs, const month_weekday_last& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday_last)",
    "insertText": "operator(const month_weekday_last& __lhs, const year& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday_last)",
    "insertText": "operator(const year_month_weekday_last& __lhs, const months& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday_last)",
    "insertText": "operator(const months& __lhs, const year_month_weekday_last& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday_last)",
    "insertText": "operator(const year_month_weekday_last& __lhs, const years& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_weekday_last)",
    "insertText": "operator(const years& __lhs, const year_month_weekday_last& __rhs)"
  }
]