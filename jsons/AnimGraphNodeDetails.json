[
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditor"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "UBlendProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendProfile"
  },
  {
    "label": "UEditorParentPlayerListObj",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorParentPlayerListObj"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "FAnimParentNodeAssetOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimParentNodeAssetOverride"
  },
  {
    "label": "FAnimGraphNodeBindingExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimGraphNodeBindingExtension"
  },
  {
    "label": "FAnimGraphNodeDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimGraphNodeDetails"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "FInputScaleBiasCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInputScaleBiasCustomization"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "FBoneReferenceCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBoneReferenceCustomization"
  },
  {
    "label": "FReferenceSkeleton",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceSkeleton"
  },
  {
    "label": "FBoneSocketTargetCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBoneSocketTargetCustomization"
  },
  {
    "label": "USkeletalMeshSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshSocket"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FPlayerTreeViewEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlayerTreeViewEntry"
  },
  {
    "label": "FAnimGraphParentPlayerDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimGraphParentPlayerDetails"
  },
  {
    "label": "SParentPlayerTreeRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SParentPlayerTreeRow"
  },
  {
    "label": "IsPropertyExtendable()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" IPropertyTypeCustomization . h \" # include \" PropertyHandle . h \" # include \" IDetailCustomization . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" IDetailPropertyExtensionHandler . h \" struct FAssetData ; class FBlueprintEditor ; class UAnimationAsset ; class UAnimGraphNode_Base ; class UBlendProfile ; class UEditorParentPlayerListObj ; class USkeleton ; class IEditableSkeleton ; struct FAnimParentNodeAssetOverride ; class FAnimGraphNodeBindingExtension : public IDetailPropertyExtensionHandler { public : bool)",
    "insertText": "IsPropertyExtendable(const UClass* InObjectClass, const IPropertyHandle& PropertyHandle)"
  },
  {
    "label": "ExtendWidgetRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendWidgetRow(FDetailWidgetRow& InWidgetRow, const IDetailLayoutBuilder& InDetailBuilder, const UClass* InObjectClass, TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "GetOptionalPinData()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "GetOptionalPinData(const IPropertyHandle& PropertyHandle, int32& OutOptionalPinIndex, UAnimGraphNode_Base*& OutAnimGraphNode)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (} ; class FAnimGraphNodeDetails : public IDetailCustomization { public : TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(class IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "CreatePropertyWidget()",
    "kind": "Method",
    "detail": "Function (protected : TSharedRef<SWidget>)",
    "insertText": "CreatePropertyWidget(FProperty* TargetProperty, TSharedRef<IPropertyHandle> TargetPropertyHandle, UClass* NodeClass)"
  },
  {
    "label": "CreateAsPinWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateAsPinWidget(TSharedRef<IPropertyHandle> InPropertyHandle)"
  },
  {
    "label": "GetVisibilityOfProperty()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetVisibilityOfProperty(TSharedRef<IPropertyHandle> Handle)"
  },
  {
    "label": "OnShouldFilterAnimAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnShouldFilterAnimAsset(const FAssetData& AssetData, UClass* NodeToFilterFor)"
  },
  {
    "label": "OnBlendProfileChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlendProfileChanged(UBlendProfile* NewProfile, TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "OnPinVisibilityChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPinVisibilityChanged(bool bInIsVisible, int32 InOptionalPinIndex)"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> StructPropertyHandle, class FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, class IDetailChildrenBuilder& ChildBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "GetMinValue()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMinValue(TSharedRef<class IPropertyHandle> StructPropertyHandle)"
  },
  {
    "label": "GetMaxValue()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMaxValue(TSharedRef<class IPropertyHandle> StructPropertyHandle)"
  },
  {
    "label": "OnMinValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMinValueCommitted(const FText& NewText, ETextCommit::Type CommitInfo, TSharedRef<class IPropertyHandle> StructPropertyHandle)"
  },
  {
    "label": "OnMaxValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxValueCommitted(const FText& NewText, ETextCommit::Type CommitInfo, TSharedRef<class IPropertyHandle> StructPropertyHandle)"
  },
  {
    "label": "GetReferenceSkeleton()",
    "kind": "Method",
    "detail": "Function (} const struct FReferenceSkeleton&)",
    "insertText": "GetReferenceSkeleton()"
  },
  {
    "label": "GetSkeleton()",
    "kind": "Method",
    "detail": "Function (protected : USkeleton*)",
    "insertText": "GetSkeleton()"
  },
  {
    "label": "FindStructMemberProperty()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle>)",
    "insertText": "FindStructMemberProperty(TSharedPtr<IPropertyHandle> PropertyHandle, const FName& PropertyName)"
  },
  {
    "label": "OnBoneSelectionChanged()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle> StructProperty ; TSharedPtr<IPropertyHandle> BoneNameProperty ; private : void)",
    "insertText": "OnBoneSelectionChanged(FName Name)"
  },
  {
    "label": "GetSelectedBone()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetSelectedBone(bool& bMultipleValues)"
  },
  {
    "label": "ResolveChildProperties()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ResolveChildProperties()"
  },
  {
    "label": "GetSocketList()",
    "kind": "Method",
    "detail": "Function (const TArray<class USkeletalMeshSocket*>&)",
    "insertText": "GetSocketList()"
  },
  {
    "label": "GetNameProperty()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle>)",
    "insertText": "GetNameProperty()"
  },
  {
    "label": "FPlayerTreeViewEntry()",
    "kind": "Method",
    "detail": "Function (} ; namespace EPlayerTreeViewEntryType { enum Type { Blueprint,Graph,Node } ; } struct FPlayerTreeViewEntry : public TSharedFromThis<FPlayerTreeViewEntry> {)",
    "insertText": "FPlayerTreeViewEntry(FString Name, EPlayerTreeViewEntryType::Type InEntryType, FAnimParentNodeAssetOverride* InOverride = NULL) : EntryName(Name) , EntryType(InEntryType) , Override(InOverride)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FORCENOINLINE bool)",
    "insertText": "operator(const FPlayerTreeViewEntry& Other)"
  },
  {
    "label": "GenerateNameWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateNameWidget(TSharedPtr<SHorizontalBox> Box)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (FString EntryName ; EPlayerTreeViewEntryType::Type EntryType ; FAnimParentNodeAssetOverride* Override ; TArray<TSharedPtr<FPlayerTreeViewEntry>> Children ; } ; class FAnimGraphParentPlayerDetails : public IDetailCustomization { public : TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance(TSharedRef<class FBlueprintEditor> InBlueprintEditor)"
  },
  {
    "label": "FAnimGraphParentPlayerDetails()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FAnimGraphParentPlayerDetails(const TSharedRef<class FBlueprintEditor>& InBlueprintEditor) : BlueprintEditorPtr(InBlueprintEditor)"
  },
  {
    "label": "OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRow(TSharedPtr<FPlayerTreeViewEntry> EventPtr, const TSharedRef< STableViewBase >& OwnerTable)"
  },
  {
    "label": "OnGetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildren(TSharedPtr<FPlayerTreeViewEntry> InParent, TArray< TSharedPtr<FPlayerTreeViewEntry> >& OutChildren)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FPlayerTreeViewEntry>> ListEntries ; TWeakPtr<class FBlueprintEditor> BlueprintEditorPtr ; UEditorParentPlayerListObj* EditorObject ; } ; class SParentPlayerTreeRow : public SMultiColumnTableRow<TSharedPtr<FAnimGraphParentPlayerDetails>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SParentPlayerTreeRow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FPlayerTreeViewEntry>, Item)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_ARGUMENT(UEditorParentPlayerListObj*, OverrideObject)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_ARGUMENT(TWeakPtr<class FBlueprintEditor>, BlueprintEditor)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_END_ARGS()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "OnShouldFilterAsset()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "OnShouldFilterAsset(const FAssetData& AssetData)"
  },
  {
    "label": "OnAssetSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetSelected(const FAssetData& AssetData)"
  },
  {
    "label": "OnCloseMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCloseMenu()"
  },
  {
    "label": "OnFocusNodeButtonClicked()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnFocusNodeButtonClicked()"
  },
  {
    "label": "GetCurrentAssetToUse()",
    "kind": "Method",
    "detail": "Function (const UAnimationAsset*)",
    "insertText": "GetCurrentAssetToUse()"
  },
  {
    "label": "GetResetToDefaultVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetResetToDefaultVisibility()"
  },
  {
    "label": "OnResetButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnResetButtonClicked()"
  },
  {
    "label": "GetCurrentAssetPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCurrentAssetPath()"
  }
]