[
  {
    "label": "TypeIdentity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TypeIdentity"
  },
  {
    "label": "DestroyAdapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DestroyAdapter"
  },
  {
    "label": "DestroyAdapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DestroyAdapter"
  },
  {
    "label": "DestroyAdapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DestroyAdapter"
  },
  {
    "label": "Allocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Allocation"
  },
  {
    "label": "MallocAdapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MallocAdapter"
  },
  {
    "label": "StorageView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StorageView"
  },
  {
    "label": "IteratorValueAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IteratorValueAdapter"
  },
  {
    "label": "CopyValueAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CopyValueAdapter"
  },
  {
    "label": "DefaultValueAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DefaultValueAdapter"
  },
  {
    "label": "AllocationTransaction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AllocationTransaction"
  },
  {
    "label": "ConstructionTransaction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstructionTransaction"
  },
  {
    "label": "Storage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Storage"
  },
  {
    "label": "MemcpyPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MemcpyPolicy"
  },
  {
    "label": "ElementwiseAssignPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ElementwiseAssignPolicy"
  },
  {
    "label": "ElementwiseSwapPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ElementwiseSwapPolicy"
  },
  {
    "label": "ElementwiseConstructPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ElementwiseConstructPolicy"
  },
  {
    "label": "Allocated",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Allocated"
  },
  {
    "label": "Inlined",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Inlined"
  },
  {
    "label": "InitFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFrom(const Storage& other)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(ValueAdapter values, SizeType<A> new_size)"
  },
  {
    "label": "Assign()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Assign(ValueAdapter values, SizeType<A> new_size)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resize(ValueAdapter values, SizeType<A> new_size)"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (Iterator<A>)",
    "insertText": "Insert(ConstIterator<A> pos, ValueAdapter values,\n                     SizeType<A> insert_count)"
  },
  {
    "label": "EmplaceBack()",
    "kind": "Method",
    "detail": "Function (Reference<A>)",
    "insertText": "EmplaceBack(Args&&... args)"
  },
  {
    "label": "Erase()",
    "kind": "Method",
    "detail": "Function (Iterator<A>)",
    "insertText": "Erase(ConstIterator<A> from, ConstIterator<A> to)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reserve(SizeType<A> requested_capacity)"
  },
  {
    "label": "ShrinkToFit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShrinkToFit()"
  },
  {
    "label": "Swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Swap(Storage* other_storage_ptr)"
  },
  {
    "label": "DestroyContents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyContents()"
  },
  {
    "label": "SwapN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapN(ElementwiseSwapPolicy, Storage* other, SizeType<A> n)"
  },
  {
    "label": "SwapN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapN(ElementwiseConstructPolicy, Storage* other, SizeType<A> n)"
  },
  {
    "label": "SwapInlinedElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapInlinedElements(MemcpyPolicy, Storage* other)"
  },
  {
    "label": "SwapInlinedElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapInlinedElements(NotMemcpyPolicy, Storage* other)"
  },
  {
    "label": "EmplaceBackSlow()",
    "kind": "Method",
    "detail": "Function (Reference<A>)",
    "insertText": "EmplaceBackSlow(Args&&... args)"
  },
  {
    "label": "allocation_tx()",
    "kind": "Method",
    "detail": "Function (AllocationTransaction<A>)",
    "insertText": "allocation_tx(alloc)"
  },
  {
    "label": "construction_tx()",
    "kind": "Method",
    "detail": "Function (ConstructionTransaction<A>)",
    "insertText": "construction_tx(alloc)"
  }
]