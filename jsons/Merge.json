[
  {
    "label": "Expand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Expand"
  },
  {
    "label": "SyncBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SyncBuffer"
  },
  {
    "label": "Merge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Merge"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_MERGE_H_ # define MODULES_AUDIO_CODING_NETEQ_MERGE_H_ # include \" modules / audio_coding / neteq / audio_multi_vector . h \" namespace webrtc { class Expand ; class SyncBuffer ; class Merge { public :)",
    "insertText": "Merge(int fs_hz, size_t num_channels, Expand* expand, SyncBuffer* sync_buffer)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Merge()"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(const Merge&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Merge&)",
    "insertText": "operator(const Merge&)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Process(int16_t* input, size_t input_length, AudioMultiVector* output)"
  },
  {
    "label": "RequiredFutureSamples()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "RequiredFutureSamples()"
  },
  {
    "label": "GetExpandedSignal()",
    "kind": "Method",
    "detail": "Function (protected : const int fs_hz_ ; const size_t num_channels_ ; private : const int kMaxSampleRate = 4 8 0 0 0 ; const size_t kExpandDownsampLength = 1 0 0 ; const size_t kInputDownsampLength = 4 0 ; const size_t kMaxCorrelationLength = 6 0 ; size_t)",
    "insertText": "GetExpandedSignal(size_t* old_length, size_t* expand_period)"
  },
  {
    "label": "SignalScaling()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "SignalScaling(const int16_t* input, size_t input_length, const int16_t* expanded_signal)"
  },
  {
    "label": "Downsample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Downsample(const int16_t* input, size_t input_length, const int16_t* expanded_signal, size_t expanded_length)"
  },
  {
    "label": "CorrelateAndPeakSearch()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "CorrelateAndPeakSearch(size_t start_position, size_t input_length, size_t expand_period)"
  }
]