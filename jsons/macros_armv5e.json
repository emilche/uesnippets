[
  {
    "label": "SAFE_SHL()",
    "kind": "Method",
    "detail": "Function (# ifndef SILK_MACROS_ARMv5E_H # define SILK_MACROS_ARMv5E_H # define)",
    "insertText": "SAFE_SHL(a,b) ((opus_int32)((opus_uint32)(a) << (b))) #undef silk_SMULWB static OPUS_INLINE opus_int32 silk_SMULWB_armv5e(opus_int32 a, opus_int16 b)"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_SMULWB\\n\\t\" \"smulwb %0, %1, %2\\n\\t\" : \"=r\"(res) : \"r\"(a), \"r\"(b))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_SMLAWB\\n\\t\" \"smlawb %0, %1, %2, %3\\n\\t\" : \"=r\"(res) : \"r\"(b), \"r\"(c), \"r\"(a))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_SMULWT\\n\\t\" \"smulwt %0, %1, %2\\n\\t\" : \"=r\"(res) : \"r\"(a), \"r\"(b))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_SMLAWT\\n\\t\" \"smlawt %0, %1, %2, %3\\n\\t\" : \"=r\"(res) : \"r\"(b), \"r\"(c), \"r\"(a))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_SMULBB\\n\\t\" \"smulbb %0, %1, %2\\n\\t\" : \"=r\"(res) : \"%r\"(a), \"r\"(b))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_SMLABB\\n\\t\" \"smlabb %0, %1, %2, %3\\n\\t\" : \"=r\"(res) : \"%r\"(b), \"r\"(c), \"r\"(a))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_SMULBT\\n\\t\" \"smulbt %0, %1, %2\\n\\t\" : \"=r\"(res) : \"r\"(a), \"r\"(b))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_SMLABT\\n\\t\" \"smlabt %0, %1, %2, %3\\n\\t\" : \"=r\"(res) : \"r\"(b), \"r\"(c), \"r\"(a))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_ADD_SAT32\\n\\t\" \"qadd %0, %1, %2\\n\\t\" : \"=r\"(res) : \"%r\"(a), \"r\"(b))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_SUB_SAT32\\n\\t\" \"qsub %0, %1, %2\\n\\t\" : \"=r\"(res) : \"r\"(a), \"r\"(b))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_CLZ16\\n\\t\" \"clz %0, %1;\\n\" : \"=r\"(res) : \"r\"(SAFE_SHL(in16,16)|0x8000))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (int res ;)",
    "insertText": "__asm__(\"#silk_CLZ32\\n\\t\" \"clz %0, %1\\n\\t\" : \"=r\"(res) : \"r\"(in32))"
  }
]