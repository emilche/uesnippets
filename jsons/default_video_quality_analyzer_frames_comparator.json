[
  {
    "label": "FramesComparatorStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FramesComparatorStats"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "DefaultVideoQualityAnalyzerFramesComparator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DefaultVideoQualityAnalyzerFramesComparator"
  },
  {
    "label": "State",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "State"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(int max_threads_count)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop(\n      const std::map<InternalStatsKey, Timestamp>& last_rendered_frame_times)"
  },
  {
    "label": "EnsureStatsForStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureStatsForStream(size_t stream_index,\n                            size_t sender_peer_index,\n                            size_t peers_count,\n                            Timestamp captured_time,\n                            Timestamp start_time)"
  },
  {
    "label": "RegisterParticipantInCall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterParticipantInCall(\n      rtc::ArrayView<std::pair<InternalStatsKey, Timestamp>>\n          stream_started_time,\n      Timestamp start_time)"
  },
  {
    "label": "AddComparison()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddComparison(InternalStatsKey stats_key,\n                     absl::optional<VideoFrame> captured,\n                     absl::optional<VideoFrame> rendered,\n                     FrameComparisonType type,\n                     FrameStats frame_stats)"
  },
  {
    "label": "AddComparison()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddComparison(InternalStatsKey stats_key,\n                     int skipped_between_rendered,\n                     absl::optional<VideoFrame> captured,\n                     absl::optional<VideoFrame> rendered,\n                     FrameComparisonType type,\n                     FrameStats frame_stats)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (MutexLock)",
    "insertText": "lock(&mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (MutexLock)",
    "insertText": "lock(&mutex_)"
  },
  {
    "label": "ProcessComparisons()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessComparisons()"
  },
  {
    "label": "ProcessComparison()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessComparison(const FrameComparison& comparison)"
  },
  {
    "label": "Now()",
    "kind": "Method",
    "detail": "Function (Timestamp)",
    "insertText": "Now()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (stream_stats_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (stream_last_freeze_end_time_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (comparisons_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (frames_comparator_stats_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  }
]