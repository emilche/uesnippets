[
  {
    "label": "StrArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrArray"
  },
  {
    "label": "RunCommandOpts",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RunCommandOpts"
  },
  {
    "label": "RunArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RunArgs"
  },
  {
    "label": "RunCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RunCommand"
  },
  {
    "label": "RunArgv",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RunArgv"
  },
  {
    "label": "RunCommandIo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RunCommandIo"
  },
  {
    "label": "RunArgs()",
    "kind": "Method",
    "detail": "Function (class StrArray ; enum RunCommandOpts { RCO_SOLO_FD = 0 x01,RCO_AS_SHELL = 0 x02,RCO_USE_STDOUT = 0 x04,RCO_P4_RPC = 0 x08 } ; class RunArgs { public :)",
    "insertText": "RunArgs()"
  },
  {
    "label": "RunArgs()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RunArgs(const StrPtr &cmd)"
  },
  {
    "label": "AddArg()",
    "kind": "Method",
    "detail": "Function (buf = cmd ; } void)",
    "insertText": "AddArg(const StrPtr &arg)"
  },
  {
    "label": "AddArg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddArg(const char *arg)"
  },
  {
    "label": "SetArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetArgs(int argc, const char * const *argv)"
  },
  {
    "label": "AddCmd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCmd(const char *arg)"
  },
  {
    "label": "SetBuf()",
    "kind": "Method",
    "detail": "Function (StrBuf&)",
    "insertText": "SetBuf()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (buf .)",
    "insertText": "Clear()"
  },
  {
    "label": "AddArg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddArg(a)"
  },
  {
    "label": "Argc()",
    "kind": "Method",
    "detail": "Function (} class RunCommand ; private : int)",
    "insertText": "Argc(char **argv, int nargv)"
  },
  {
    "label": "RunArgv()",
    "kind": "Method",
    "detail": "Function (StrBuf buf ; StrBuf argbuf ; } ; class RunArgv { public :)",
    "insertText": "RunArgv()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RunArgv&)",
    "insertText": "operator(const char *a)"
  },
  {
    "label": "RunShell()",
    "kind": "Method",
    "detail": "Function (StrArray* args ; } ; class RunCommand { public : int)",
    "insertText": "RunShell(const StrPtr *cmd, int &canLaunch, Error *e)"
  },
  {
    "label": "RunCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunCommand()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Run(RunArgs &cmd, Error *e)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Run(RunArgv &cmd, Error *e)"
  },
  {
    "label": "RunInWindow()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RunInWindow(RunArgs &cmd, Error *e)"
  },
  {
    "label": "RunInWindow()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RunInWindow(RunArgv &cmd, Error *e)"
  },
  {
    "label": "RunChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunChild(RunArgs &cmd, int opts, int f[2], Error *e)"
  },
  {
    "label": "RunChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunChild(RunArgv &cmd, int opts, int f[2], Error *e)"
  },
  {
    "label": "DoRunChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoRunChild(char *cmdText, char *argv[], int opts, int fds[2], Error *e)"
  },
  {
    "label": "SetAbandon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAbandon()"
  },
  {
    "label": "WaitChild()",
    "kind": "Method",
    "detail": "Function (abandon = true ; } int)",
    "insertText": "WaitChild()"
  },
  {
    "label": "StopChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopChild()"
  },
  {
    "label": "PollChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollChild(unsigned long millisecs)"
  },
  {
    "label": "RunCommandIo()",
    "kind": "Method",
    "detail": "Function (private : # ifdef HAVE_FORK pid_t pid ; # endif # ifdef OS_NT void* pid ; # endif bool abandon ; } ; class RunCommandIo : public RunCommand { public :)",
    "insertText": "RunCommandIo()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Run(RunArgs &cmd, const StrPtr &in, StrBuf &out, Error *e)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Run(RunArgs &cmd, StrBuf &result, Error *e)"
  },
  {
    "label": "RunChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunChild(cmd, RCO_AS_SHELL, fds, e)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "Run(RunArgv &cmd, const StrPtr &in, StrBuf &out, Error *e)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Run(RunArgv &cmd, StrBuf &result, Error *e)"
  },
  {
    "label": "ProcessRunResults()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "ProcessRunResults(const StrPtr &in, StrBuf &out, Error *e)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write(const StrPtr &in, Error *e)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Read(const StrPtr &out, Error *e)"
  },
  {
    "label": "ReadError()",
    "kind": "Method",
    "detail": "Function (StrPtr*)",
    "insertText": "ReadError(Error *e)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (private : int)",
    "insertText": "Read(char *buf, int length, Error *e)"
  }
]