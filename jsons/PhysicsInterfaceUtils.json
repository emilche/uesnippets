[
  {
    "label": "FPhysScene_PhysX",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysScene_PhysX"
  },
  {
    "label": "FConstraintInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintInstance"
  },
  {
    "label": "FCollisionQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionQueryParams"
  },
  {
    "label": "FCollisionObjectQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionObjectQueryParams"
  },
  {
    "label": "FConstraintBrokenDelegateData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintBrokenDelegateData"
  },
  {
    "label": "FPhysicsReplication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsReplication"
  },
  {
    "label": "IPhysicsReplicationFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPhysicsReplicationFactory"
  },
  {
    "label": "CreateQueryFilterData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" PhysXPublic . h \" # include \" Containers / Union . h \" # include \" Physics / PhysicsInterfaceTypes . h \" # include \" PhysicsInterfaceUtilsCore . h \" # include \" PhysicsReplicationInterface . h \" # include \" Misc / CoreMiscDefines . h \" class FPhysScene_PhysX ; struct FConstraintInstance ; FCollisionFilterData)",
    "insertText": "CreateQueryFilterData(const uint8 MyChannel, const bool bTraceComplex, const FCollisionResponseContainer& InCollisionResponseContainer, const struct FCollisionQueryParams& QueryParam, const struct FCollisionObjectQueryParams & ObjectParam, const bool bMultitrace)"
  },
  {
    "label": "FConstraintBrokenDelegateData()",
    "kind": "Method",
    "detail": "Function (struct FConstraintBrokenDelegateData {)",
    "insertText": "FConstraintBrokenDelegateData(FConstraintInstance* ConstraintInstance)"
  },
  {
    "label": "DispatchOnBroken()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchOnBroken()"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnConstraintBrokenDelegate .)",
    "insertText": "ExecuteIfBound(ConstraintIndex)"
  },
  {
    "label": "CreatePhysicsReplication()",
    "kind": "Method",
    "detail": "Function (} FOnConstraintBroken OnConstraintBrokenDelegate ; int32 ConstraintIndex ; } ; class FPhysicsReplication ; class IPhysicsReplicationFactory { public : TUniquePtr<IPhysicsReplication>)",
    "insertText": "CreatePhysicsReplication(FPhysScene* OwningPhysScene)"
  }
]