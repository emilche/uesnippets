[
  {
    "label": "FDatasmithTextureSampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithTextureSampler"
  },
  {
    "label": "FXmlFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmlFile"
  },
  {
    "label": "FXmlNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmlNode"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "FLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearColor"
  },
  {
    "label": "DATASMITHCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHCORE_API"
  },
  {
    "label": "FDatasmithSceneXmlReader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" DatasmithMaterialElements . h \" # include \" DatasmithVariantElements . h \" # include \" IDatasmithSceneElements . h \" # include \" Math / Quat . h \" # include \" Math / Transform . h \" # include \" Math / UnrealMathSSE . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" class FDatasmithTextureSampler ; class FXmlFile ; class FXmlNode ; class UTexture ; struct FLinearColor ; class FDatasmithSceneXmlReader { public :)",
    "insertText": "FDatasmithSceneXmlReader()"
  },
  {
    "label": "ParseFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseFile(const FString& InFilename, TSharedRef< IDatasmithScene >& OutScene, bool bInAppend = false)"
  },
  {
    "label": "ParseBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseBuffer(const FString& XmlBuffer, TSharedRef< IDatasmithScene >& OutScene, bool bInAppend = false)"
  },
  {
    "label": "ParseXmlFile()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ParseXmlFile(TSharedRef< IDatasmithScene >& OutScene, bool bInAppend = false)"
  },
  {
    "label": "PatchUpVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PatchUpVersion(TSharedRef< IDatasmithScene >& OutScene)"
  },
  {
    "label": "UnsanitizeXMLText()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] FString)",
    "insertText": "UnsanitizeXMLText(const FString& InString)"
  },
  {
    "label": "ValueFromString()",
    "kind": "Method",
    "detail": "Function (template<T> T)",
    "insertText": "ValueFromString(const FString& InString)"
  },
  {
    "label": "VectorFromNode()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "VectorFromNode(FXmlNode* InNode, const TCHAR* XName, const TCHAR* YName, const TCHAR* ZName)"
  },
  {
    "label": "QuatFromHexString()",
    "kind": "Method",
    "detail": "Function (FQuat)",
    "insertText": "QuatFromHexString(const FString& HexString)"
  },
  {
    "label": "QuatFromNode()",
    "kind": "Method",
    "detail": "Function (FQuat)",
    "insertText": "QuatFromNode(FXmlNode* InNode)"
  },
  {
    "label": "ParseTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "ParseTransform(FXmlNode* InNode)"
  },
  {
    "label": "ParseTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseTransform(FXmlNode* InNode, TSharedPtr< IDatasmithActorElement >& OutElement)"
  },
  {
    "label": "ParseElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseElement(FXmlNode* InNode, TSharedRef<IDatasmithElement> OutElement)"
  },
  {
    "label": "ParseLevelSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseLevelSequence(FXmlNode* InNode, const TSharedRef<IDatasmithLevelSequenceElement>& OutElement)"
  },
  {
    "label": "ParseLevelVariantSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseLevelVariantSets(FXmlNode* InNode, const TSharedRef<IDatasmithLevelVariantSetsElement>& OutElement, const TMap< FString, TSharedPtr<IDatasmithActorElement> >& Actors, const TMap< FString, TSharedPtr<IDatasmithElement> >& Objects)"
  },
  {
    "label": "ParseVariantSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseVariantSet(FXmlNode* InNode, const TSharedRef<IDatasmithVariantSetElement>& OutElement, const TMap< FString, TSharedPtr<IDatasmithActorElement> >& Actors, const TMap< FString, TSharedPtr<IDatasmithElement> >& Objects)"
  },
  {
    "label": "ParseVariant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseVariant(FXmlNode* InNode, const TSharedRef<IDatasmithVariantElement>& OutElement, const TMap< FString, TSharedPtr<IDatasmithActorElement> >& Actors, const TMap< FString, TSharedPtr<IDatasmithElement> >& Objects)"
  },
  {
    "label": "ParseActorBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseActorBinding(FXmlNode* InNode, const TSharedRef<IDatasmithActorBindingElement>& OutElement, const TMap< FString, TSharedPtr<IDatasmithElement> >& Objects)"
  },
  {
    "label": "ParsePropertyCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParsePropertyCapture(FXmlNode* InNode, const TSharedRef<IDatasmithPropertyCaptureElement>& OutElement)"
  },
  {
    "label": "ParseObjectPropertyCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseObjectPropertyCapture(FXmlNode* InNode, const TSharedRef<IDatasmithObjectPropertyCaptureElement>& OutElement, const TMap< FString, TSharedPtr<IDatasmithElement> >& Objects)"
  },
  {
    "label": "ParseMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseMesh(FXmlNode* InNode, TSharedPtr<IDatasmithMeshElement>& OutElement)"
  },
  {
    "label": "ParseTextureElement()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "ParseTextureElement(FXmlNode* InNode, TSharedPtr<IDatasmithTextureElement>& OutElement)"
  },
  {
    "label": "ParseTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseTexture(FXmlNode* InNode, FString& OutTextureFilename, FDatasmithTextureSampler& OutTextureUV)"
  },
  {
    "label": "ParseActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseActor(FXmlNode* InNode, TSharedPtr<IDatasmithActorElement>& InOutElement, TSharedRef< IDatasmithScene > Scene, TMap< FString, TSharedPtr<IDatasmithActorElement> >& Actors)"
  },
  {
    "label": "ParseMeshActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseMeshActor(FXmlNode* InNode, TSharedPtr<IDatasmithMeshActorElement>& OutElement, TSharedRef< IDatasmithScene > Scene)"
  },
  {
    "label": "ParseHierarchicalInstancedStaticMeshActor()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "ParseHierarchicalInstancedStaticMeshActor(FXmlNode* InNode, TSharedPtr<IDatasmithHierarchicalInstancedStaticMeshActorElement>& OutElement, TSharedRef< IDatasmithScene > Scene)"
  },
  {
    "label": "ParseLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseLight(FXmlNode* InNode, TSharedPtr<IDatasmithLightActorElement>& OutElement)"
  },
  {
    "label": "ParseCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseCamera(FXmlNode* InNode, TSharedPtr<IDatasmithCameraActorElement>& OutElement)"
  },
  {
    "label": "ParsePostProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParsePostProcess(FXmlNode* InNode, const TSharedPtr< IDatasmithPostProcessElement >& Element)"
  },
  {
    "label": "ParsePostProcessVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParsePostProcessVolume(FXmlNode* InNode, const TSharedRef< IDatasmithPostProcessVolumeElement >& Element)"
  },
  {
    "label": "ParseColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseColor(FXmlNode* InNode, FLinearColor& OutColor)"
  },
  {
    "label": "ParseComp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseComp(FXmlNode* InNode, TSharedPtr< IDatasmithCompositeTexture >& OutCompTexture, bool bInIsNormal = false)"
  },
  {
    "label": "ParseMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseMaterial(FXmlNode* InNode, TSharedPtr< IDatasmithMaterialElement >& OutElement)"
  },
  {
    "label": "ParseMaterialInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseMaterialInstance(FXmlNode* InNode, TSharedPtr< IDatasmithMaterialInstanceElement >& OutElement)"
  },
  {
    "label": "ParseDecalMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseDecalMaterial(FXmlNode* InNode, TSharedPtr< IDatasmithDecalMaterialElement >& OutElement)"
  },
  {
    "label": "ParseUEPbrMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseUEPbrMaterial(FXmlNode* InNode, TSharedPtr< IDatasmithUEPbrMaterialElement >& OutElement)"
  },
  {
    "label": "ParseCustomActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseCustomActor(FXmlNode* InNode, TSharedPtr< IDatasmithCustomActorElement >& OutElement)"
  },
  {
    "label": "ParseMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseMetaData(FXmlNode* InNode, TSharedPtr< IDatasmithMetaDataElement >& OutElement, const TSharedRef< IDatasmithScene >& InScene, TMap< FString, TSharedPtr<IDatasmithActorElement> >& Actors)"
  },
  {
    "label": "ParseLandscape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseLandscape(FXmlNode* InNode, TSharedRef< IDatasmithLandscapeElement >& OutElement)"
  },
  {
    "label": "ParseKeyValueProperties()",
    "kind": "Method",
    "detail": "Function (template<ElementType> void)",
    "insertText": "ParseKeyValueProperties(const FXmlNode* InNode, ElementType& OutElement)"
  },
  {
    "label": "LoadFromFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromFile(const FString& InFilename)"
  },
  {
    "label": "LoadFromBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromBuffer(const FString& XmlBuffer)"
  },
  {
    "label": "ParseExpressionInput()",
    "kind": "Method",
    "detail": "Function (template<ExpressionInputType> void)",
    "insertText": "ParseExpressionInput(const FXmlNode* InNode, TSharedPtr< IDatasmithUEPbrMaterialElement >& OutElement, ExpressionInputType& ExpressionInput)"
  }
]