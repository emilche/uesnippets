[
  {
    "label": "use_element_copy_constructor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "use_element_copy_constructor"
  },
  {
    "label": "use_element_copy_constructor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "use_element_copy_constructor"
  },
  {
    "label": "use_element_copy_constructor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "use_element_copy_constructor"
  },
  {
    "label": "concurrent_priority_queue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "concurrent_priority_queue"
  },
  {
    "label": "operation_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "operation_type"
  },
  {
    "label": "operation_status",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "operation_status"
  },
  {
    "label": "cpq_operation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "cpq_operation"
  },
  {
    "label": "my_functor_t",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "my_functor_t"
  },
  {
    "label": "__TBB_load_with_acquire()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__TBB_load_with_acquire(my_size)"
  },
  {
    "label": "__TBB_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (__TBB_CPP11_IS_COPY_CONSTRUCTIBLE_PRESENT)",
    "insertText": "__TBB_STATIC_ASSERT( std::is_copy_constructible<value_type>::value, \"The type is not copy constructible. Copying push operation is impossible.\" )"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (cpq_operation)",
    "insertText": "op_data(elem, PUSH_OP)"
  },
  {
    "label": "throw_exception()",
    "kind": "Method",
    "detail": "Function (thrown)",
    "insertText": "throw_exception(eid_bad_alloc)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (cpq_operation)",
    "insertText": "op_data(elem, PUSH_RVALUE_OP)"
  },
  {
    "label": "throw_exception()",
    "kind": "Method",
    "detail": "Function (thrown)",
    "insertText": "throw_exception(eid_bad_alloc)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (cpq_operation)",
    "insertText": "op_data(POP_OP)"
  },
  {
    "label": "itt_hide_store_word()",
    "kind": "Method",
    "detail": "Function (postpone)",
    "insertText": "itt_hide_store_word(tmp->next, pop_list)"
  },
  {
    "label": "__TBB_ASSERT()",
    "kind": "Method",
    "detail": "Function (PUSH_RVALUE_OP)",
    "insertText": "__TBB_ASSERT(tmp->type == PUSH_OP || tmp->type == PUSH_RVALUE_OP, \"Unknown operation\" )"
  }
]