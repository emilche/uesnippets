[
  {
    "label": "IGeometryProcessing_MeshAutoUV",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IGeometryProcessing_MeshAutoUV"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptions"
  },
  {
    "label": "FResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResults"
  },
  {
    "label": "IGeometryProcessing_MeshAutoUV()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / Array . h \" # include \" Features / IModularFeature . h \" # include \" Math / Vector2D . h \" # include \" MeshDescription . h \" class IGeometryProcessing_MeshAutoUV : public IModularFeature { public : ~)",
    "insertText": "IGeometryProcessing_MeshAutoUV()"
  },
  {
    "label": "ConstructDefaultOptions()",
    "kind": "Method",
    "detail": "Function (} enum class EAutoUVMethod : uint8 { PatchBuilder = 0,UVAtlas = 1,XAtlas = 2 } ; struct FOptions { EAutoUVMethod Method = EAutoUVMethod::PatchBuilder ; double UVAtlasStretch = 0 . 1 1 f ; int UVAtlasNumCharts = 0 ; int XAtlasMaxIterations = 1 ; int NumInitialPatches = 1 0 0 ; double CurvatureAlignment = 1 . 0 ; double MergingThreshold = 1 . 5 ; double MaxAngleDeviationDeg = 4 5 . 0 ; int SmoothingSteps = 5 ; double SmoothingAlpha = 0 . 2 5 ; bool bAutoPack = true ; int PackingTargetWidth = 5 1 2 ; } ; enum class EResultCode { Success,UnknownError } ; struct FResults { EResultCode ResultCode = EResultCode::UnknownError ; } ; FOptions)",
    "insertText": "ConstructDefaultOptions() PURE_VIRTUAL(IGeometryProcessing_MeshAutoUV::ConstructDefaultOptions, return FOptions();)"
  },
  {
    "label": "GenerateUVs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateUVs(FMeshDescription& InOutMesh, const FOptions& Options, FResults& ResultsOut) PURE_VIRTUAL(IGeometryProcessing_MeshAutoUV::GenerateUVs,)"
  },
  {
    "label": "GetModularFeatureName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "GetModularFeatureName()"
  }
]