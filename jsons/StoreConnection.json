[
  {
    "label": "FStoreClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStoreClient"
  },
  {
    "label": "TRACEANALYSIS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEANALYSIS_API"
  },
  {
    "label": "FStoreConnection()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / UnrealString . h \" # include \" HAL / CriticalSection . h \" # include \" Templates / UniquePtr . h \" namespace UE::Trace { class FStoreClient ; class FStoreConnection { public :)",
    "insertText": "FStoreConnection()"
  },
  {
    "label": "ConnectToStore()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectToStore(const TCHAR* Host, uint32 Port = 0)"
  },
  {
    "label": "ReconnectToStore()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReconnectToStore()"
  },
  {
    "label": "Disconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Disconnect()"
  },
  {
    "label": "GetStoreClient()",
    "kind": "Method",
    "detail": "Function (UE::Trace::FStoreClient*)",
    "insertText": "GetStoreClient()"
  },
  {
    "label": "GetStoreClientCriticalSection()",
    "kind": "Method",
    "detail": "Function (} FCriticalSection&)",
    "insertText": "GetStoreClientCriticalSection()"
  },
  {
    "label": "GetStoreDir()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStoreDir()"
  },
  {
    "label": "GetLastStoreHost()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetLastStoreHost()"
  }
]