[
  {
    "label": "FileOutputBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileOutputBuffer"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_FILEOUTPUTBUFFER_H # define LLVM_SUPPORT_FILEOUTPUTBUFFER_H # include \" llvm / ADT / SmallString . h \" # include \" llvm / ADT / StringRef . h \" # include \" llvm / Support / DataTypes . h \" # include \" llvm / Support / FileSystem . h \" namespace llvm { class FileOutputBuffer { public : enum { F_executable = 1 } ; std::error_code)",
    "insertText": "create(StringRef FilePath, size_t Size, std::unique_ptr<FileOutputBuffer> &Result, unsigned Flags = 0)"
  },
  {
    "label": "getBufferStart()",
    "kind": "Method",
    "detail": "Function (uint8_t*)",
    "insertText": "getBufferStart()"
  },
  {
    "label": "getBufferEnd()",
    "kind": "Method",
    "detail": "Function (} uint8_t*)",
    "insertText": "getBufferEnd()"
  },
  {
    "label": "getBufferSize()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "getBufferSize()"
  },
  {
    "label": "getPath()",
    "kind": "Method",
    "detail": "Function (} StringRef)",
    "insertText": "getPath()"
  },
  {
    "label": "FileOutputBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FileOutputBuffer()"
  },
  {
    "label": "FileOutputBuffer()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FileOutputBuffer(const FileOutputBuffer &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FileOutputBuffer&)",
    "insertText": "operator(const FileOutputBuffer &)"
  },
  {
    "label": "FileOutputBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FileOutputBuffer(std::unique_ptr<llvm::sys::fs::mapped_file_region> R, StringRef Path, StringRef TempPath)"
  }
]