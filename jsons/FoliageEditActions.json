[
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "FFoliageEditCommands",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFoliageEditCommands"
  },
  {
    "label": "FFoliageEditCommands()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Framework / Commands / Commands . h \" # include \" Internationalization / Internationalization . h \" # include \" Styling / AppStyle . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" UObject / UnrealNames . h \" class FUICommandInfo ; class FFoliageEditCommands : public TCommands<FFoliageEditCommands> { public :)",
    "insertText": "FFoliageEditCommands() : TCommands<FFoliageEditCommands> ( \"FoliageEditMode\", NSLOCTEXT(\"Contexts\", \"FoliageEditMode\", \"Foliage Edit Mode\"), NAME_None, FAppStyle::GetAppStyleSetName())"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FUICommandInfo> IncreaseBrushSize ; TSharedPtr<FUICommandInfo> DecreaseBrushSize ; TSharedPtr<FUICommandInfo> IncreasePaintDensity ; TSharedPtr<FUICommandInfo> DecreasePaintDensity ; TSharedPtr<FUICommandInfo> IncreaseUnpaintDensity ; TSharedPtr<FUICommandInfo> DecreaseUnpaintDensity ; TSharedPtr<FUICommandInfo> SetPaint ; TSharedPtr<FUICommandInfo> SetReapplySettings ; TSharedPtr<FUICommandInfo> SetSelect ; TSharedPtr<FUICommandInfo> SetLassoSelect ; TSharedPtr<FUICommandInfo> SetPaintBucket ; TSharedPtr<FUICommandInfo> SetNoSettings ; TSharedPtr<FUICommandInfo> SetPaintSettings ; TSharedPtr<FUICommandInfo> SetClusterSettings ; TSharedPtr<FUICommandInfo> ReflectSelectionInPalette ; TSharedPtr<FUICommandInfo> RemoveFoliageType ; TSharedPtr<FUICommandInfo> ShowFoliageTypeInCB ; TSharedPtr<FUICommandInfo> SelectAllInstances ; TSharedPtr<FUICommandInfo> DeselectAllInstances ; TSharedPtr<FUICommandInfo> SelectInvalidInstances ; void)",
    "insertText": "RegisterCommands()"
  }
]