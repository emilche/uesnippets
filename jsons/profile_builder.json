[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ProfileBuilder()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_PROFILER_PROFILE_BUILDER_H_ # define BASE_PROFILER_PROFILE_BUILDER_H_ # include<memory> # include<vector> # include \" base / base_export . h \" # include \" base / profiler / frame . h \" # include \" base / profiler / metadata_recorder . h \" # include \" base / profiler / module_cache . h \" # include \" base / time / time . h \" namespace base { class BASE_EXPORT ProfileBuilder { public :)",
    "insertText": "ProfileBuilder()"
  },
  {
    "label": "ProfileBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfileBuilder(const ProfileBuilder&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ProfileBuilder&)",
    "insertText": "operator(const ProfileBuilder&)"
  },
  {
    "label": "GetModuleCache()",
    "kind": "Method",
    "detail": "Function (ModuleCache*)",
    "insertText": "GetModuleCache()"
  },
  {
    "label": "RecordMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordMetadata(const MetadataRecorder::MetadataProvider& metadata_provider)"
  },
  {
    "label": "ApplyMetadataRetrospectively()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplyMetadataRetrospectively(TimeTicks period_start, TimeTicks period_end, const MetadataRecorder::Item& item)"
  },
  {
    "label": "OnSampleCompleted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnSampleCompleted(std::vector<Frame> frames, TimeTicks sample_timestamp)"
  },
  {
    "label": "OnProfileCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProfileCompleted(TimeDelta profile_duration, TimeDelta sampling_period)"
  }
]