[
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FViewportConfigOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewportConfigOptions"
  },
  {
    "label": "FAssetEditorOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetEditorOptions"
  },
  {
    "label": "UPersonaOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPersonaOptions"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "SetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToDefault()"
  },
  {
    "label": "SetViewportConfigsToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewportConfigsToDefault()"
  },
  {
    "label": "SetShowGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowGrid( bool bInShowGrid )"
  },
  {
    "label": "SetHighlightOrigin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHighlightOrigin( bool bInHighlightOrigin )"
  },
  {
    "label": "SetAutoAlignFloorToMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoAlignFloorToMesh(bool bInAutoAlignFloorToMesh)"
  },
  {
    "label": "SetMuteAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMuteAudio( bool bInMuteAudio )"
  },
  {
    "label": "SetViewModeIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewModeIndex( FName InContext, EViewModeIndex InViewModeIndex, int32 InViewportIndex )"
  },
  {
    "label": "SetViewFOV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewFOV( FName InContext, float InViewFOV, int32 InViewportIndex )"
  },
  {
    "label": "SetCameraSpeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraSpeed(FName InContext, int32 InCameraSpeed, int32 InViewportIndex)"
  },
  {
    "label": "SetCameraSpeedScalar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraSpeedScalar(FName InContext, float InCameraSpeedScalar, int32 InViewportIndex)"
  },
  {
    "label": "SetViewCameraFollow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewCameraFollow( FName InContext, EAnimationViewportCameraFollowMode InCameraFollowMode, FName InCameraFollowBoneName, int32 InViewportIndex )"
  },
  {
    "label": "SetDefaultLocalAxesSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultLocalAxesSelection( uint32 InDefaultLocalAxesSelection )"
  },
  {
    "label": "SetDefaultBoneDrawSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultBoneDrawSelection(uint32 InDefaultBoneAxesSelection)"
  },
  {
    "label": "SetShowMeshStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowMeshStats( int32 InShowMeshStats )"
  },
  {
    "label": "SetSectionTimingNodeColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSectionTimingNodeColor(const FLinearColor& InColor)"
  },
  {
    "label": "SetNotifyTimingNodeColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyTimingNodeColor(const FLinearColor& InColor)"
  },
  {
    "label": "SetBranchingPointTimingNodeColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBranchingPointTimingNodeColor(const FLinearColor& InColor)"
  },
  {
    "label": "SetAllowIncompatibleSkeletonSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowIncompatibleSkeletonSelection(bool bState)"
  }
]