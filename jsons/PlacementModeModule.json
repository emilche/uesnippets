[
  {
    "label": "FPlacementCategory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlacementCategory"
  },
  {
    "label": "FPlacementModeModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlacementModeModule"
  },
  {
    "label": "FPlacementCategory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IPlacementModeModule . h \" # include \" Framework / MultiBox / MultiBoxExtender . h \" struct FPlacementCategory : FPlacementCategoryInfo {)",
    "insertText": "FPlacementCategory(const FPlacementCategoryInfo& SourceInfo) : FPlacementCategoryInfo(SourceInfo)"
  },
  {
    "label": "FPlacementCategory()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPlacementCategory(FPlacementCategory&& In) : FPlacementCategoryInfo(MoveTemp(In)) , Items(MoveTemp(In.Items))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FPlacementCategory&)",
    "insertText": "operator(FPlacementCategory&& In)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(MoveTemp(In))"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Items =)",
    "insertText": "MoveTemp(In.Items)"
  },
  {
    "label": "FPlacementModeModule()",
    "kind": "Method",
    "detail": "Function (class FPlacementModeModule : public IPlacementModeModule { public :)",
    "insertText": "FPlacementModeModule()"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "PreUnloadCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreUnloadCallback()"
  },
  {
    "label": "DECLARE_DERIVED_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DERIVED_EVENT(FPlacementModeModule, IPlacementModeModule::FOnPlacementModeCategoryListChanged, FOnPlacementModeCategoryListChanged)"
  },
  {
    "label": "OnPlacementModeCategoryListChanged()",
    "kind": "Method",
    "detail": "Function (FOnPlacementModeCategoryListChanged&)",
    "insertText": "OnPlacementModeCategoryListChanged()"
  },
  {
    "label": "OnPlacementModeCategoryRefreshed()",
    "kind": "Method",
    "detail": "Function (FOnPlacementModeCategoryRefreshed&)",
    "insertText": "OnPlacementModeCategoryRefreshed()"
  },
  {
    "label": "OnRecentlyPlacedChanged()",
    "kind": "Method",
    "detail": "Function (FOnRecentlyPlacedChanged&)",
    "insertText": "OnRecentlyPlacedChanged()"
  },
  {
    "label": "OnAllPlaceableAssetsChanged()",
    "kind": "Method",
    "detail": "Function (FOnAllPlaceableAssetsChanged&)",
    "insertText": "OnAllPlaceableAssetsChanged()"
  },
  {
    "label": "OnPlaceableItemFilteringChanged()",
    "kind": "Method",
    "detail": "Function (FOnPlaceableItemFilteringChanged&)",
    "insertText": "OnPlaceableItemFilteringChanged()"
  },
  {
    "label": "AddToRecentlyPlaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToRecentlyPlaced(const TArray< UObject* >& Assets, TScriptInterface<IAssetFactoryInterface> FactoryUsed)"
  },
  {
    "label": "AddToRecentlyPlaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToRecentlyPlaced(UObject* Asset, UActorFactory* FactoryUsed = NULL)"
  },
  {
    "label": "AddToRecentlyPlaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToRecentlyPlaced(UObject* Asset, TScriptInterface<IAssetFactoryInterface> FactoryUsed)"
  },
  {
    "label": "GetRecentlyPlaced()",
    "kind": "Method",
    "detail": "Function (const TArray<FActorPlacementInfo>&)",
    "insertText": "GetRecentlyPlaced()"
  },
  {
    "label": "RegisterPlacementCategory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterPlacementCategory(const FPlacementCategoryInfo& Info)"
  },
  {
    "label": "GetRegisteredPlacementCategory()",
    "kind": "Method",
    "detail": "Function (const FPlacementCategoryInfo*)",
    "insertText": "GetRegisteredPlacementCategory(FName CategoryName)"
  },
  {
    "label": "UnregisterPlacementCategory()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnregisterPlacementCategory(FName Handle)"
  },
  {
    "label": "GetCategoryPermissionList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FNamePermissionList>&)",
    "insertText": "GetCategoryPermissionList()"
  },
  {
    "label": "RegisterPlaceableItem()",
    "kind": "Method",
    "detail": "Function (TOptional<FPlacementModeID>)",
    "insertText": "RegisterPlaceableItem(FName CategoryName, const TSharedRef<FPlaceableItem>& InItem)"
  },
  {
    "label": "UnregisterPlaceableItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterPlaceableItem(FPlacementModeID ID)"
  },
  {
    "label": "RegisterPlaceableItemFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterPlaceableItemFilter(TPlaceableItemPredicate Predicate, FName OwnerName)"
  },
  {
    "label": "UnregisterPlaceableItemFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterPlaceableItemFilter(FName OwnerName)"
  },
  {
    "label": "GetItemsForCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetItemsForCategory(FName CategoryName, TArray<TSharedPtr<FPlaceableItem>>& OutItems)"
  },
  {
    "label": "GetFilteredItemsForCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilteredItemsForCategory(FName CategoryName, TArray<TSharedPtr<FPlaceableItem>>& OutItems, TFunctionRef<bool(const TSharedPtr<FPlaceableItem>&)> Filter)"
  },
  {
    "label": "GetItemsWithNamesForCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetItemsWithNamesForCategory(FName CategoryName, TArray<TSharedPtr<FPlaceableItem>>& OutItems, const TArray<FName>& ItemNames)"
  },
  {
    "label": "RegenerateItemsForCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegenerateItemsForCategory(FName Category)"
  },
  {
    "label": "OnAssetRemoved()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnAssetRemoved(const FAssetData&)"
  },
  {
    "label": "OnAssetRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRenamed(const FAssetData& AssetData, const FString& OldObjectPath)"
  },
  {
    "label": "OnAssetAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetAdded(const FAssetData& AssetData)"
  },
  {
    "label": "OnInitialAssetsScanComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInitialAssetsScanComplete()"
  },
  {
    "label": "RefreshRecentlyPlaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshRecentlyPlaced()"
  },
  {
    "label": "RefreshVolumes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshVolumes()"
  },
  {
    "label": "RefreshAllPlaceableClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshAllPlaceableClasses()"
  },
  {
    "label": "CreateID()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "CreateID()"
  },
  {
    "label": "CreateID()",
    "kind": "Method",
    "detail": "Function (FPlacementModeID)",
    "insertText": "CreateID(FName InCategory)"
  },
  {
    "label": "PassesFilters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesFilters(const TSharedPtr<FPlaceableItem>& Item)"
  },
  {
    "label": "OnCategoryPermissionListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCategoryPermissionListChanged()"
  },
  {
    "label": "IMPLEMENT_MODULE()",
    "kind": "Method",
    "detail": "Function (private : TMap<FName,FPlacementCategory> Categories ; TSharedRef<FNamePermissionList> CategoryPermissionList ; TMap<FName,TPlaceableItemPredicate> PlaceableItemPredicates ; TArray<FActorPlacementInfo> RecentlyPlaced ; FOnRecentlyPlacedChanged RecentlyPlacedChanged ; FOnAllPlaceableAssetsChanged AllPlaceableAssetsChanged ; FOnPlacementModeCategoryRefreshed PlacementModeCategoryRefreshed ; FOnPlaceableItemFilteringChanged PlaceableItemFilteringChanged ; FOnPlacementModeCategoryListChanged PlacementModeCategoryListChanged ; TArray<TSharedPtr<FExtender>> ContentPaletteFiltersExtenders ; TArray<TSharedPtr<FExtender>> PaletteExtenders ; TMap<FActorPlacementInfo,TWeakPtr<FPlaceableItem>> ManuallyCreatedPlaceableItems ; } ;)",
    "insertText": "IMPLEMENT_MODULE(FPlacementModeModule, PlacementMode)"
  }
]