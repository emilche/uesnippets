[
  {
    "label": "SPropertyAssetPicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyAssetPicker"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" PropertyCustomizationHelpers . h \" # include \" Widgets / Input / SMenuAnchor . h \" class SPropertyAssetPicker : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPropertyAssetPicker)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnGetAllowedClasses, OnGetAllowedClasses ) SLATE_EVENT( FOnAssetSelected, OnAssetSelected ) SLATE_ARGUMENT( TSharedPtr<IPropertyHandle>, PropertyHandle ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "OnClicked()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "OnClicked()"
  },
  {
    "label": "OnGenerateAssetPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateAssetPicker()"
  },
  {
    "label": "OnAssetSelectedFromPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetSelectedFromPicker(const struct FAssetData& AssetData)"
  },
  {
    "label": "OnAssetEnterPressedFromPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetEnterPressedFromPicker(const TArray<struct FAssetData>& AssetData)"
  }
]