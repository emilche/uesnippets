[
  {
    "label": "UMovieSceneTrackInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTrackInstance"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FPreAnimatedStateExtension",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedStateExtension"
  },
  {
    "label": "FRestoreStateParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRestoreStateParams"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPreAnimatedEvalHookKeyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedEvalHookKeyType"
  },
  {
    "label": "FPreAnimatedEvaluationKeyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedEvaluationKeyType"
  },
  {
    "label": "TPreAnimatedCaptureSources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPreAnimatedCaptureSources"
  },
  {
    "label": "FPreAnimatedEntityCaptureSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedEntityCaptureSource"
  },
  {
    "label": "FPreAnimatedTemplateCaptureSources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedTemplateCaptureSources"
  },
  {
    "label": "FPreAnimatedEvaluationHookCaptureSources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedEvaluationHookCaptureSources"
  },
  {
    "label": "FPreAnimatedTrackInstanceCaptureSources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedTrackInstanceCaptureSources"
  },
  {
    "label": "FPreAnimatedTrackInstanceInputCaptureSources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedTrackInstanceInputCaptureSources"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" CoreTypes . h \" # include \" EntitySystem / MovieSceneSequenceInstanceHandle . h \" # include \" EntitySystem / TrackInstance / MovieSceneTrackInstance . h \" # include \" Evaluation / IMovieSceneEvaluationHook . h \" # include \" Evaluation / MovieSceneEvaluationKey . h \" # include \" Evaluation / PreAnimatedState / IMovieScenePreAnimatedCaptureSource . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStateTypes . h \" # include \" UObject / ObjectKey . h \" class UMovieSceneTrackInstance ; class UObject ; namespace UE { namespace MovieScene { struct FPreAnimatedStateExtension ; struct FRestoreStateParams ; enum class EPreAnimatedCaptureSourceState { New,Updated,UpToDate,} ; struct FPreAnimatedEvalHookKeyType { FObjectKey Hook ; FRootInstanceHandle RootInstanceHandle ; FMovieSceneSequenceID SequenceID ; uint32)",
    "insertText": "GetTypeHash(const FPreAnimatedEvalHookKeyType& In)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FPreAnimatedEvalHookKeyType& A, const FPreAnimatedEvalHookKeyType& B)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FPreAnimatedEvaluationKeyType& A, const FPreAnimatedEvaluationKeyType& B)"
  },
  {
    "label": "BeginTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (EPreAnimatedCaptureSourceState)",
    "insertText": "BeginTrackingCaptureSource(const KeyType& InKey, const FPreAnimatedStateMetaData& MetaData)"
  },
  {
    "label": "StopTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTrackingCaptureSource(const KeyType& InKey, FPreAnimatedStorageID InStorageID)"
  },
  {
    "label": "StopTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTrackingCaptureSource(const KeyType& InKey)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ContainsInstanceHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsInstanceHandle(FRootInstanceHandle RootInstanceHandle)"
  },
  {
    "label": "GatherAndRemoveExpiredMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherAndRemoveExpiredMetaData(const FRestoreStateParams& Params, TArray<FPreAnimatedStateMetaData>& OutExpiredMetaData)"
  },
  {
    "label": "GatherAndRemoveMetaDataForGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherAndRemoveMetaDataForGroup(FPreAnimatedStorageGroupHandle Group, TArray<FPreAnimatedStateMetaData>& OutExpiredMetaData)"
  },
  {
    "label": "GatherAndRemoveMetaDataForStorage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherAndRemoveMetaDataForStorage(FPreAnimatedStorageID StorageID, FPreAnimatedStorageIndex StorageIndex, TArray<FPreAnimatedStateMetaData>& OutExpiredMetaData)"
  },
  {
    "label": "GatherAndRemoveMetaDataForRootInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherAndRemoveMetaDataForRootInstance(FRootInstanceHandle InstanceHandle, TArray<FPreAnimatedStateMetaData>& OutExpiredMetaData)"
  },
  {
    "label": "FPreAnimatedEntityCaptureSource()",
    "kind": "Method",
    "detail": "Function (private : TMap<KeyType,FPreAnimatedStateMetaDataArray> KeyToMetaData ; FPreAnimatedStateExtension* Owner ; } ; struct FPreAnimatedEntityCaptureSource : TPreAnimatedCaptureSources<FMovieSceneEntityID> {)",
    "insertText": "FPreAnimatedEntityCaptureSource(FPreAnimatedStateExtension* InOwner)"
  },
  {
    "label": "BeginTrackingEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTrackingEntity(const FPreAnimatedStateEntry& Entry, FMovieSceneEntityID EntityID, FRootInstanceHandle RootInstanceHandle, bool bWantsRestoreState)"
  },
  {
    "label": "StopTrackingEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTrackingEntity(FMovieSceneEntityID EntityID, FPreAnimatedStorageID StorageID)"
  },
  {
    "label": "StopTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTrackingCaptureSource(EntityID, StorageID)"
  },
  {
    "label": "StopTrackingEntity()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StopTrackingEntity(FMovieSceneEntityID EntityID)"
  },
  {
    "label": "StopTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTrackingCaptureSource(EntityID)"
  },
  {
    "label": "FPreAnimatedTemplateCaptureSources()",
    "kind": "Method",
    "detail": "Function (} } ; struct FPreAnimatedTemplateCaptureSources : TPreAnimatedCaptureSources<FPreAnimatedEvaluationKeyType> {)",
    "insertText": "FPreAnimatedTemplateCaptureSources(FPreAnimatedStateExtension* InOwner)"
  },
  {
    "label": "BeginTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (EPreAnimatedCaptureSourceState)",
    "insertText": "BeginTrackingCaptureSource(const FMovieSceneEvaluationKey& EvaluationKey, const FPreAnimatedStateMetaData& MetaData)"
  },
  {
    "label": "StopTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTrackingCaptureSource(const FMovieSceneEvaluationKey& EvaluationKey, FRootInstanceHandle RootInstanceHandle)"
  },
  {
    "label": "FPreAnimatedEvaluationHookCaptureSources()",
    "kind": "Method",
    "detail": "Function (using TPreAnimatedCaptureSources<FPreAnimatedEvaluationKeyType>::BeginTrackingCaptureSource ; using TPreAnimatedCaptureSources<FPreAnimatedEvaluationKeyType>::StopTrackingCaptureSource ; } ; struct FPreAnimatedEvaluationHookCaptureSources : TPreAnimatedCaptureSources<FPreAnimatedEvalHookKeyType> {)",
    "insertText": "FPreAnimatedEvaluationHookCaptureSources(FPreAnimatedStateExtension* InOwner)"
  },
  {
    "label": "BeginTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (EPreAnimatedCaptureSourceState)",
    "insertText": "BeginTrackingCaptureSource(const UObject* Hook, FMovieSceneSequenceID SequenceID, const FPreAnimatedStateMetaData& MetaData)"
  },
  {
    "label": "StopTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTrackingCaptureSource(const UObject* Hook, FRootInstanceHandle RootInstanceHandle, FMovieSceneSequenceID SequenceID)"
  },
  {
    "label": "FPreAnimatedTrackInstanceCaptureSources()",
    "kind": "Method",
    "detail": "Function (using TPreAnimatedCaptureSources<FPreAnimatedEvalHookKeyType>::BeginTrackingCaptureSource ; using TPreAnimatedCaptureSources<FPreAnimatedEvalHookKeyType>::StopTrackingCaptureSource ; } ; struct FPreAnimatedTrackInstanceCaptureSources : TPreAnimatedCaptureSources<FObjectKey> {)",
    "insertText": "FPreAnimatedTrackInstanceCaptureSources(FPreAnimatedStateExtension* InOwner)"
  },
  {
    "label": "BeginTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (EPreAnimatedCaptureSourceState)",
    "insertText": "BeginTrackingCaptureSource(UMovieSceneTrackInstance* TrackInstance, const FPreAnimatedStateMetaData& MetaData)"
  },
  {
    "label": "StopTrackingCaptureSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTrackingCaptureSource(UMovieSceneTrackInstance* TrackInstance)"
  },
  {
    "label": "FPreAnimatedTrackInstanceInputCaptureSources()",
    "kind": "Method",
    "detail": "Function (} ; struct FPreAnimatedTrackInstanceInputCaptureSources : TPreAnimatedCaptureSources<FMovieSceneTrackInstanceInput> {)",
    "insertText": "FPreAnimatedTrackInstanceInputCaptureSources(FPreAnimatedStateExtension* InOwner)"
  }
]