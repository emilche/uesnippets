[
  {
    "label": "FNetTraceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTraceCollector"
  },
  {
    "label": "FBitReader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBitReader"
  },
  {
    "label": "FBitWriter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBitWriter"
  },
  {
    "label": "FNetBitStreamReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBitStreamReader"
  },
  {
    "label": "FNetBitStreamWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBitStreamWriter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNetTracePacketInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetTracePacketInfo"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "must"
  },
  {
    "label": "FNetTracePacketContentEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetTracePacketContentEvent"
  },
  {
    "label": "FNetTraceEventScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTraceEventScope"
  },
  {
    "label": "FNetTraceNullEventScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTraceNullEventScope"
  },
  {
    "label": "FNetTrace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetTrace"
  },
  {
    "label": "TChooseTraceEventScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TChooseTraceEventScope"
  },
  {
    "label": "FNetTraceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTraceCollector"
  },
  {
    "label": "FNetTrace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetTrace"
  },
  {
    "label": "FNetTraceBunchScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTraceBunchScope"
  },
  {
    "label": "FNetTraceOffsetScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTraceOffsetScope"
  },
  {
    "label": "GetBitStreamPositionForNetTrace()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetBitStreamPositionForNetTrace(const UE::Net::FNetBitStreamReader& Stream)"
  },
  {
    "label": "GetBitStreamPositionForNetTrace()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetBitStreamPositionForNetTrace(const UE::Net::FNetBitStreamWriter& Stream)"
  },
  {
    "label": "GetBitStreamPositionForNetTrace()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetBitStreamPositionForNetTrace(const FBitReader& Stream)"
  },
  {
    "label": "GetBitStreamPositionForNetTrace()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetBitStreamPositionForNetTrace(const FBitWriter& Stream)"
  },
  {
    "label": "FNetTraceEventScope()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FNetTraceEventScope(uint64 ObjectId, T& InStream, FNetTraceCollector* InCollector, uint32 Verbosity)"
  },
  {
    "label": "FNetTraceEventScope()",
    "kind": "Method",
    "detail": "Function (TraceNameFunctor>)",
    "insertText": "FNetTraceEventScope(TraceNameFunctor&& TraceNameFunc, T& InStream, FNetTraceCollector* InCollector, uint32 Verbosity)"
  },
  {
    "label": "SetEventName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEventName(UE::Net::FNetDebugNameId NetTraceNameId)"
  },
  {
    "label": "SetEventObjectId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEventObjectId(uint64 ObjectId)"
  },
  {
    "label": "ExitScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExitScope()"
  },
  {
    "label": "SetTraceVerbosity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTraceVerbosity(uint32 Verbosity)"
  },
  {
    "label": "TraceEndSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceEndSession(uint32 GameInstanceId)"
  },
  {
    "label": "TraceInstanceUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceInstanceUpdated(uint32 GameInstanceId, bool bIsServer, const TCHAR* Name)"
  },
  {
    "label": "DestroyTraceCollector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyTraceCollector(FNetTraceCollector* Collector)"
  },
  {
    "label": "FoldTraceCollector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FoldTraceCollector(FNetTraceCollector* DstCollector, const FNetTraceCollector* SrcCollector, uint32 Offset)"
  },
  {
    "label": "FoldBunchCollector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FoldBunchCollector(FNetTraceCollector* DstCollector, const FNetTraceCollector* SrcCollector)"
  },
  {
    "label": "PushStreamOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushStreamOffset(FNetTraceCollector* Collector, uint32 Offset)"
  },
  {
    "label": "PopStreamOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopStreamOffset(FNetTraceCollector* Collector)"
  },
  {
    "label": "BeginPacketContentEvent()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "BeginPacketContentEvent(FNetTraceCollector& Collector, ENetTracePacketContentEventType EventType, uint32 Pos)"
  },
  {
    "label": "EndPacketContentEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPacketContentEvent(FNetTraceCollector& Collector, uint32 EventIndex, uint32 Pos)"
  },
  {
    "label": "TracePacketContentEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TracePacketContentEvent(FNetTraceCollector& Collector, UE::Net::FNetDebugNameId InNetTraceNameId, uint32 StartPos, uint32 EndPos, uint32 Verbosity)"
  },
  {
    "label": "BeginBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginBunch(FNetTraceCollector& Collector)"
  },
  {
    "label": "DiscardBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardBunch(FNetTraceCollector& Collector)"
  },
  {
    "label": "EndBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndBunch(FNetTraceCollector& DstCollector, UE::Net::FNetDebugNameId BunchName, uint32 StartPos, uint32 HeaderBits, uint32 BunchBits, const FNetTraceBunchInfo& BunchInfo)"
  },
  {
    "label": "TraceBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceBunch(FNetTraceCollector& DstCollector, const FNetTraceBunchInfo& BunchInfo, FName BunchName, uint32 StartPos, uint32 HeaderBits, uint32 BunchBits, const FNetTraceCollector* BunchCollector)"
  },
  {
    "label": "TraceBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceBunch(FNetTraceCollector& DstCollector, const FNetTraceBunchInfo& BunchInfo, const TCHAR* BunchName, uint32 StartPos, uint32 HeaderBits, uint32 BunchBits, const FNetTraceCollector* BunchCollector)"
  },
  {
    "label": "PopSendBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopSendBunch(FNetTraceCollector& Collector)"
  },
  {
    "label": "TraceCollectedEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceCollectedEvents(FNetTraceCollector& Collector, uint32 GameInstanceId, uint32 ConnectionId, ENetTracePacketType PacketType)"
  },
  {
    "label": "TracePacketDropped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TracePacketDropped(uint32 GameInstanceId, uint32 ConnectionId, uint32 PacketSequenceNumber, ENetTracePacketType PacketType)"
  },
  {
    "label": "TracePacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TracePacket(uint32 GameInstanceId, uint32 ConnectionId, uint32 PacketSequenceNumber, uint32 PacketBits, ENetTracePacketType PacketType)"
  },
  {
    "label": "TraceObjectCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceObjectCreated(uint32 GameInstanceId, uint64 NetObjectId, const UE::Net::FNetDebugName* Name, uint64 TypeIdentifier, uint32 OwnerId)"
  },
  {
    "label": "TraceObjectCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceObjectCreated(uint32 GameInstanceId, uint64 NetObjectId, const FName Name, uint64 TypeIdentifier, uint32 OwnerId)"
  },
  {
    "label": "TraceObjectDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceObjectDestroyed(uint32 GameInstanceId, uint64 NetObjectId)"
  },
  {
    "label": "TraceConnectionCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceConnectionCreated(uint32 GameInstanceId, uint32 ConnectionId)"
  },
  {
    "label": "TraceConnectionStateUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceConnectionStateUpdated(uint32 GameInstanceId, uint32 ConnectionId, uint8 ConnectionStateValue)"
  },
  {
    "label": "TraceConnectionUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceConnectionUpdated(uint32 GameInstanceId, uint32 ConnectionId, const TCHAR* AddressString, const TCHAR* OwningActor)"
  },
  {
    "label": "TraceConnectionClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceConnectionClosed(uint32 GameInstanceId, uint32 ConnectionId)"
  },
  {
    "label": "TracePacketStatsCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TracePacketStatsCounter(uint32 GameInstanceId, uint32 ConnectionId, UE::Net::FNetDebugNameId CounterNameId, uint32 StatValue)"
  },
  {
    "label": "TraceFrameStatsCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceFrameStatsCounter(uint32 GameInstanceId, UE::Net::FNetDebugNameId CounterNameId,  uint32 StatValue)"
  },
  {
    "label": "TraceName()",
    "kind": "Method",
    "detail": "Function (UE::Net::FNetDebugNameId)",
    "insertText": "TraceName(const TCHAR* Name)"
  },
  {
    "label": "TraceName()",
    "kind": "Method",
    "detail": "Function (UE::Net::FNetDebugNameId)",
    "insertText": "TraceName(FName Name)"
  },
  {
    "label": "TraceName()",
    "kind": "Method",
    "detail": "Function (UE::Net::FNetDebugNameId)",
    "insertText": "TraceName(const UE::Net::FNetDebugName* Name)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FNetTraceBunchScope()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FNetTraceBunchScope(T& InBunch, uint32 InStartPos, uint32 InHeaderBits, FNetTraceCollector* InCollector)"
  },
  {
    "label": "FNetTraceOffsetScope()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FNetTraceOffsetScope(uint32 Offset, FNetTraceCollector* InCollector)"
  }
]