[
  {
    "label": "FJobObjectLimitationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FJobObjectLimitationInfo"
  },
  {
    "label": "FWindowsResourceRestrictedJobObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindowsResourceRestrictedJobObject"
  },
  {
    "label": "FGenericResourceRestrictedJobObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericResourceRestrictedJobObject"
  },
  {
    "label": "FWindowsResourceRestrictedJobObject()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / PlatformProcess . h \" struct FJobObjectLimitationInfo { int64 MemoryLimit = 0 ; int64 MemoryUsed = 0 ; } ; # if PLATFORM_WINDOWS # include \" Windows / MinimalWindowsApi . h \" # include \" Windows / WindowsHWrapper . h \" class FWindowsResourceRestrictedJobObject { public :)",
    "insertText": "FWindowsResourceRestrictedJobObject(const FWindowsResourceRestrictedJobObject&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWindowsResourceRestrictedJobObject&)",
    "insertText": "operator(const FWindowsResourceRestrictedJobObject&)"
  },
  {
    "label": "FWindowsResourceRestrictedJobObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWindowsResourceRestrictedJobObject(const FString& InJobName, int32 InitialJobMemoryLimitMiB = 0)"
  },
  {
    "label": "FWindowsResourceRestrictedJobObject()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FWindowsResourceRestrictedJobObject()"
  },
  {
    "label": "AssignProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignProcess(const FProcHandle& Process)"
  },
  {
    "label": "SetMemoryLimit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMemoryLimit(int32 InJobMemoryLimitMiB)"
  },
  {
    "label": "QueryStatus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QueryStatus(FJobObjectLimitationInfo& OutInfo)"
  },
  {
    "label": "QueryLimitViolationStatus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QueryLimitViolationStatus(FJobObjectLimitationInfo& OutInfo)"
  },
  {
    "label": "GetErrorMessage()",
    "kind": "Method",
    "detail": "Function (private : FString)",
    "insertText": "GetErrorMessage()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "CreateAndLinkCompletionPort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAndLinkCompletionPort()"
  },
  {
    "label": "FGenericResourceRestrictedJobObject()",
    "kind": "Method",
    "detail": "Function (private : FString JobName ; HANDLE JobObject = nullptr ; HANDLE CompletionPort = nullptr ; int32 MemoryLimit = 0 ; } ; using FResourceRestrictedJobObject = FWindowsResourceRestrictedJobObject ; # else class FGenericResourceRestrictedJobObject { public :)",
    "insertText": "FGenericResourceRestrictedJobObject(const FGenericResourceRestrictedJobObject&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FGenericResourceRestrictedJobObject&)",
    "insertText": "operator(const FGenericResourceRestrictedJobObject&)"
  },
  {
    "label": "FGenericResourceRestrictedJobObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGenericResourceRestrictedJobObject(const FString& JobName, int32 InitialJobMemoryLimitMiB = 0)"
  }
]