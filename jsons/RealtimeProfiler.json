[
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FRealtimeProfilerFPSChartFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRealtimeProfilerFPSChartFrame"
  },
  {
    "label": "FRealtimeProfiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRealtimeProfiler"
  },
  {
    "label": "FRealtimeProfilerFPSChartFrame()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" VisualizerEvents . h \" class SWindow ; struct FRealtimeProfilerFPSChartFrame {)",
    "insertText": "FRealtimeProfilerFPSChartFrame() :UnitFrame(0) ,UnitRender(0) ,UnitGame(0) ,UnitGPU(0)"
  },
  {
    "label": "FRealtimeProfilerFPSChartFrame()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRealtimeProfilerFPSChartFrame(FRealtimeProfilerFPSChartFrame * InCopyFrom) :UnitFrame(InCopyFrom->UnitFrame) ,UnitRender(InCopyFrom->UnitRender) ,UnitGame(InCopyFrom->UnitGame) ,UnitGPU(InCopyFrom->UnitGPU)"
  },
  {
    "label": "FRealtimeProfiler()",
    "kind": "Method",
    "detail": "Function (} float UnitFrame ; float UnitRender ; float UnitGame ; float UnitGPU ; } ; class FRealtimeProfiler { public :)",
    "insertText": "FRealtimeProfiler()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(TSharedPtr< FVisualizerEvent > InProfileData, FRealtimeProfilerFPSChartFrame * InFPSChartFrame)"
  },
  {
    "label": "IsProfiling()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsProfiling()"
  },
  {
    "label": "MakeWindow()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "MakeWindow()"
  }
]