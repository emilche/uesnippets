[
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "APInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APInt"
  },
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "ArrayRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayRef"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "IntegerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IntegerType"
  },
  {
    "label": "LLVMContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContextImpl"
  },
  {
    "label": "is",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "is"
  },
  {
    "label": "FunctionType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionType"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "CompositeType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompositeType"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "types"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "types"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "types"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "you",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "you"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "StructType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StructType"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "or"
  },
  {
    "label": "definition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "definition"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "SequentialType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SequentialType"
  },
  {
    "label": "ArrayType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayType"
  },
  {
    "label": "VectorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VectorType"
  },
  {
    "label": "PointerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PointerType"
  },
  {
    "label": "getSubclassData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getSubclassData()"
  },
  {
    "label": "isValidReturnType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValidReturnType(Type *RetTy)"
  },
  {
    "label": "isValidArgumentType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValidArgumentType(Type *ArgTy)"
  },
  {
    "label": "setName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setName(StringRef Name)"
  },
  {
    "label": "setBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setBody(ArrayRef<Type*> Elements, bool isPacked = false)"
  },
  {
    "label": "isValidElementType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValidElementType(Type *ElemTy)"
  },
  {
    "label": "isValidElementType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValidElementType(Type *ElemTy)"
  },
  {
    "label": "isValidElementType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValidElementType(Type *ElemTy)"
  },
  {
    "label": "PointerType()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "PointerType(Type *ElType, unsigned AddrSpace)"
  },
  {
    "label": "isValidElementType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValidElementType(Type *ElemTy)"
  },
  {
    "label": "isLoadableOrStorableType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isLoadableOrStorableType(Type *ElemTy)"
  },
  {
    "label": "getSubclassData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getSubclassData()"
  }
]