[
  {
    "label": "FModuleManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModuleManifest"
  },
  {
    "label": "FModuleManifest()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Modules / BuildVersion . h \" class FModuleManifest { public : FString BuildId ; TMap<FString,FString> ModuleNameToFileName ;)",
    "insertText": "FModuleManifest()"
  },
  {
    "label": "GetFileName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFileName(const FString& DirectoryName, bool bIsGameFolder)"
  },
  {
    "label": "TryRead()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRead(const FString& FileName, FModuleManifest& Manifest)"
  }
]