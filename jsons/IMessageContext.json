[
  {
    "label": "IMessageAttachment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageAttachment"
  },
  {
    "label": "FDateTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDateTime"
  },
  {
    "label": "FMessageAddress",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMessageAddress"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IMessageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageContext"
  },
  {
    "label": "FMessageAddress()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Async / TaskGraphInterfaces . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Misc / Crc . h \" # include \" Misc / Guid . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / Class . h \" # include \" UObject / NameTypes . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class IMessageAttachment ; struct FDateTime ; struct FMessageAddress { public :)",
    "insertText": "FMessageAddress()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "operator(const FMessageAddress& X, const FMessageAddress& Y)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FMessageAddress& A)"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (UniqueId .)",
    "insertText": "Invalidate()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToString()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} public : uint32)",
    "insertText": "GetTypeHash(const FMessageAddress& Address)"
  },
  {
    "label": "NewAddress()",
    "kind": "Method",
    "detail": "Function (} public : FMessageAddress)",
    "insertText": "NewAddress()"
  },
  {
    "label": "NewGuid()",
    "kind": "Method",
    "detail": "Function (FMessageAddress Result ; Result . UniqueId =)",
    "insertText": "NewGuid()"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} private : FGuid UniqueId ; } ; enum class EMessageScope : uint8 { Thread,Process,Network,All } ; enum class EMessageFlags : uint32 { None = 0,Reliable = 1<<0,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EMessageFlags)"
  },
  {
    "label": "GetAnnotations()",
    "kind": "Method",
    "detail": "Function (typedef TRange<EMessageScope> FMessageScopeRange ; typedef TRangeBound<EMessageScope> FMessageScopeRangeBound ; class IMessageContext { public : const TMap<FName,FString>&)",
    "insertText": "GetAnnotations()"
  },
  {
    "label": "GetAttachment()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IMessageAttachment,ESPMode::ThreadSafe>)",
    "insertText": "GetAttachment()"
  },
  {
    "label": "GetExpiration()",
    "kind": "Method",
    "detail": "Function (const FDateTime&)",
    "insertText": "GetExpiration()"
  },
  {
    "label": "GetMessage()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "GetMessage()"
  },
  {
    "label": "GetMessageTypeInfo()",
    "kind": "Method",
    "detail": "Function (const TWeakObjectPtr<UScriptStruct>&)",
    "insertText": "GetMessageTypeInfo()"
  },
  {
    "label": "GetOriginalContext()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IMessageContext,ESPMode::ThreadSafe>)",
    "insertText": "GetOriginalContext()"
  },
  {
    "label": "GetRecipients()",
    "kind": "Method",
    "detail": "Function (const TArray<FMessageAddress>&)",
    "insertText": "GetRecipients()"
  },
  {
    "label": "GetScope()",
    "kind": "Method",
    "detail": "Function (EMessageScope)",
    "insertText": "GetScope()"
  },
  {
    "label": "GetFlags()",
    "kind": "Method",
    "detail": "Function (EMessageFlags)",
    "insertText": "GetFlags()"
  },
  {
    "label": "GetSender()",
    "kind": "Method",
    "detail": "Function (const FMessageAddress&)",
    "insertText": "GetSender()"
  },
  {
    "label": "GetForwarder()",
    "kind": "Method",
    "detail": "Function (const FMessageAddress&)",
    "insertText": "GetForwarder()"
  },
  {
    "label": "GetSenderThread()",
    "kind": "Method",
    "detail": "Function (ENamedThreads::Type)",
    "insertText": "GetSenderThread()"
  },
  {
    "label": "GetTimeForwarded()",
    "kind": "Method",
    "detail": "Function (const FDateTime&)",
    "insertText": "GetTimeForwarded()"
  },
  {
    "label": "GetTimeSent()",
    "kind": "Method",
    "detail": "Function (const FDateTime&)",
    "insertText": "GetTimeSent()"
  },
  {
    "label": "GetMessageTypeInfo()",
    "kind": "Method",
    "detail": "Function (UStruct* MessageTypeInfoPtr =)",
    "insertText": "GetMessageTypeInfo().Get()"
  },
  {
    "label": "GetMessageTypePathName()",
    "kind": "Method",
    "detail": "Function (} return NAME_None ; } FTopLevelAssetPath)",
    "insertText": "GetMessageTypePathName()"
  },
  {
    "label": "FTopLevelAssetPath()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "FTopLevelAssetPath()"
  },
  {
    "label": "IsForwarded()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsForwarded()"
  },
  {
    "label": "IMessageContext()",
    "kind": "Method",
    "detail": "Function (} public : ~)",
    "insertText": "IMessageContext()"
  }
]