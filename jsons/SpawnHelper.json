[
  {
    "label": "CQTEST_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CQTEST_API"
  },
  {
    "label": "FSpawnHelper()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Engine / World . h \" # include \" GameFramework / Actor . h \" # include \" UObject / GCObject . h \" struct FSpawnHelper { ~)",
    "insertText": "FSpawnHelper()"
  },
  {
    "label": "SpawnActor()",
    "kind": "Method",
    "detail": "Function (template<ActorType> ActorType&)",
    "insertText": "SpawnActor(const FActorSpawnParameters& SpawnParameters = FActorSpawnParameters(), UClass* Class = nullptr)"
  },
  {
    "label": "SpawnActorAt()",
    "kind": "Method",
    "detail": "Function (} template<ActorType> ActorType&)",
    "insertText": "SpawnActorAt(FVector const& Location, FRotator const& Rotation, const FActorSpawnParameters& SpawnParameters = FActorSpawnParameters(), UClass* Class = nullptr)"
  },
  {
    "label": "SpawnObject()",
    "kind": "Method",
    "detail": "Function (} template<ObjectType> ObjectType&)",
    "insertText": "SpawnObject()"
  },
  {
    "label": "ObjectType()",
    "kind": "Method",
    "detail": "Function (ObjectType* const Object = NewObject<)",
    "insertText": "ObjectType()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (SpawnedObjects .)",
    "insertText": "Add(Object)"
  },
  {
    "label": "CreateWorld()",
    "kind": "Method",
    "detail": "Function (protected : UWorld*)",
    "insertText": "CreateWorld()"
  },
  {
    "label": "SpawnActorAtInWorld()",
    "kind": "Method",
    "detail": "Function (TArray<TWeakObjectPtr<AActor>> SpawnedActors { } ; TArray<TWeakObjectPtr<UObject>> SpawnedObjects { } ; UWorld* GameWorld { nullptr } ; private : template<ActorType> ActorType&)",
    "insertText": "SpawnActorAtInWorld(UWorld& World, const FVector& Location, const FRotator& Rotation, const FActorSpawnParameters& SpawnParameters = FActorSpawnParameters(), UClass* Class = nullptr)"
  },
  {
    "label": "ActorType()",
    "kind": "Method",
    "detail": "Function (ActorType* const Actor = Class ? World . SpawnActor<)",
    "insertText": "ActorType(Class, Location, Rotation, SpawnParameters) : World.SpawnActor<ActorType>(Location, Rotation, SpawnParameters)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (SpawnedActors .)",
    "insertText": "Add(Actor)"
  }
]