[
  {
    "label": "ID3D11DeviceChild",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11DeviceChild"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CodecPacket . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" #)",
    "insertText": "if(PLATFORM_WINDOWS || PLATFORM_HOLOLENS) #pragma warning(push) #pragma warning(disable: 4005) THIRD_PARTY_INCLUDES_START #include \"Microsoft/AllowMicrosoftPlatformTypes.h\" #include <d3d11.h> #include <mfobjects.h> #include <mftransform.h> #include <mfapi.h> #include <mferror.h> #include <mfidl.h> #include <codecapi.h> #include <shlwapi.h> #include <mfreadwrite.h> #include <d3d11_1.h> #include <d3d12.h> #include <dxgi1_4.h> #include \"Microsoft/HideMicrosoftPlatformTypes.h\" THIRD_PARTY_INCLUDES_END #endif #ifndef WMFMEDIA_SUPPORTED_PLATFORM #define WMFMEDIA_SUPPORTED_PLATFORM (PLATFORM_WINDOWS && (WINVER >= 0x0600 ) && !UE_SERVER)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (UNKNOWN,CONSTRAINED_BASELINE,BASELINE,MAIN,CONSTRAINED_HIGH,HIGH,} ; PRAGMA_DISABLE_DEPRECATION_WARNINGS FString)",
    "insertText": "ToString(EVideoFrameFormat Format)"
  },
  {
    "label": "DebugSetD3D11ObjectName()",
    "kind": "Method",
    "detail": "Function (uint32 ID = 0 ; uint32 MaxWidth = 0 ; uint32 MaxHeight = 0 ; PRAGMA_DISABLE_DEPRECATION_WARNINGS ECodecType CodecType = ECodecType::Undefined ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } ; # if PLATFORM_WINDOWS void)",
    "insertText": "DebugSetD3D11ObjectName(ID3D11DeviceChild* InD3DObject, const char* InName)"
  }
]