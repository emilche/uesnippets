[
  {
    "label": "MockRtpReceiver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockRtpReceiver"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_MOCK_RTPRECEIVER_H_ # define API_TEST_MOCK_RTPRECEIVER_H_ # include<string> # include<vector> # include \" api / rtp_receiver_interface . h \" # include \" test / gmock . h \" namespace webrtc { class MockRtpReceiver : public rtc::RefCountedObject<RtpReceiverInterface> { public :)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<MediaStreamTrackInterface>, track, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<rtc::scoped_refptr<MediaStreamInterface>>, streams, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(cricket::MediaType, media_type, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::string, id, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RtpParameters, GetParameters, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetObserver, (RtpReceiverObserverInterface*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetJitterBufferMinimumDelay, (absl::optional<double>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<RtpSource>, GetSources, (), (const, override))"
  }
]