[
  {
    "label": "UNullAudioCaptureProtocol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNullAudioCaptureProtocol"
  },
  {
    "label": "UMasterAudioSubmixCaptureProtocol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMasterAudioSubmixCaptureProtocol"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / Engine . h \" # include \" Engine / GameViewportClient . h \" # include \" Slate / SceneViewport . h \" # include \" AudioDevice . h \" # include \" AudioMixerBlueprintLibrary . h \" # include \" MovieSceneCaptureModule . h \" # include \" MovieSceneCaptureProtocolBase . h \" # include \" AudioCaptureProtocol . generated . h \")",
    "insertText": "UCLASS(meta = (DisplayName = \"No Audio\", CommandLineID = \"NullAudio\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(MinimalApi, meta = (DisplayName = \"Master Audio Submix\", CommandLineID = \"MasterAudioSubmix\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UMasterAudioSubmixCaptureProtocol(const FObjectInitializer& Init) : UMovieSceneAudioCaptureProtocolBase(Init) , TotalGameRecordingTime(0.0) , TotalPlatformRecordingTime(0.0) , GameRecordingStartTime(0.0) , PlatformRecordingStartTime(0.0) , bHasSetup(false)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (FileName =)",
    "insertText": "TEXT(\"{world}\")"
  },
  {
    "label": "SetupImpl()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetupImpl()"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (bDisableWorldRendering = true)",
    "insertText": "GetWorld()->GetGameViewport()"
  },
  {
    "label": "StartRecordingOutput()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "StartRecordingOutput(GetWorld(), CaptureHost->GetEstimatedCaptureDurationSeconds())"
  },
  {
    "label": "UE_LOG()",
    "kind": "Method",
    "detail": "Function (bHasSetup = true ; } else {)",
    "insertText": "UE_LOG(LogTemp, Warning, TEXT(\"Audio Recording Resumed\"))"
  },
  {
    "label": "ResumeRecordingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeRecordingOutput(GetWorld())"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (TimeSeconds)",
    "insertText": "GetWorld()"
  },
  {
    "label": "Seconds()",
    "kind": "Method",
    "detail": "Function (PlatformRecordingStartTime =)",
    "insertText": "Seconds()"
  },
  {
    "label": "PauseRecordingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseRecordingOutput(GetWorld())"
  },
  {
    "label": "StopAllSounds()",
    "kind": "Method",
    "detail": "Function (AudioDevice ->)",
    "insertText": "StopAllSounds(true)"
  },
  {
    "label": "BeginFinalizeImpl()",
    "kind": "Method",
    "detail": "Function (GameRecordingStartTime = - 1 . 0 ; PlatformRecordingStartTime = - 1 . 0 ; } void)",
    "insertText": "BeginFinalizeImpl()"
  },
  {
    "label": "ResolveFileFormat()",
    "kind": "Method",
    "detail": "Function (} FString FormattedFileName = CaptureHost ->)",
    "insertText": "ResolveFileFormat(FileName, FFrameMetrics())"
  },
  {
    "label": "ConvertRelativePathToFull()",
    "kind": "Method",
    "detail": "Function (FString AbsoluteDirectory =)",
    "insertText": "ConvertRelativePathToFull(CaptureHost->GetSettings().OutputDirectory.Path)"
  },
  {
    "label": "StopRecordingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRecordingOutput(GetWorld(), EAudioRecordingExportType::WavFile, FormattedFileName, AbsoluteDirectory)"
  }
]