[
  {
    "label": "type_casting_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type_casting_traits"
  },
  {
    "label": "cl_int4()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_TYPE_CASTING_SYCL_H # define EIGEN_TYPE_CASTING_SYCL_H namespace Eigen { namespace internal { # ifdef SYCL_DEVICE_ONLY template<> struct type_casting_traits<float,int> { enum { VectorizedCast = 1,SrcCoeffRatio = 1,TgtCoeffRatio = 1 } ; } ; template<> EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE cl::sycl::cl_int4 pcast<cl::sycl::cl_float4,cl::)",
    "insertText": "cl_int4(const cl::sycl::cl_float4& a)"
  },
  {
    "label": "cl_float4()",
    "kind": "Method",
    "detail": "Function (} template<> struct type_casting_traits<int,float> { enum { VectorizedCast = 1,SrcCoeffRatio = 1,TgtCoeffRatio = 1 } ; } ; template<> EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE cl::sycl::cl_float4 pcast<cl::sycl::cl_int4,cl::)",
    "insertText": "cl_float4(const cl::sycl::cl_int4& a)"
  },
  {
    "label": "cl_float4()",
    "kind": "Method",
    "detail": "Function (} template<> struct type_casting_traits<double,float> { enum { VectorizedCast = 1,SrcCoeffRatio = 2,TgtCoeffRatio = 1 } ; } ; template<> EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE cl::sycl::cl_float4 pcast<cl::sycl::cl_double2,cl::)",
    "insertText": "cl_float4(const cl::sycl::cl_double2& a, const cl::sycl::cl_double2& b)"
  },
  {
    "label": "automatic()",
    "kind": "Method",
    "detail": "Function (auto a1 = a . template convert<cl::sycl::cl_float,cl::sycl::)",
    "insertText": "automatic()"
  },
  {
    "label": "cl_double2()",
    "kind": "Method",
    "detail": "Function (} template<> struct type_casting_traits<float,double> { enum { VectorizedCast = 1,SrcCoeffRatio = 1,TgtCoeffRatio = 2 } ; } ; template<> EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE cl::sycl::cl_double2 pcast<cl::sycl::cl_float4,cl::)",
    "insertText": "cl_double2(const cl::sycl::cl_float4& a)"
  }
]