[
  {
    "label": "FLoggedPlatformFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoggedPlatformFile"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "IAsyncReadFileHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncReadFileHandle"
  },
  {
    "label": "IMappedFileHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMappedFileHandle"
  },
  {
    "label": "FLoggedFileHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoggedFileHandle"
  },
  {
    "label": "FLogVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogVisitor"
  },
  {
    "label": "FLogStatVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogStatVisitor"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" GenericPlatform / GenericPlatformFile . h \" # include \" HAL / CriticalSection . h \" # include \" HAL / PlatformMisc . h \" # include \" HAL / PlatformTime . h \" # include \" Logging / LogCategory . h \" # include \" Logging / LogMacros . h \" # include \" Math / Color . h \" # include \" Misc / DateTime . h \" # include \" Misc / ScopeLock . h \" # include \" Templates / UniquePtr . h \" # include \" Trace / Detail / Channel . h \" class FLoggedPlatformFile ; class FOutputDevice ; class IAsyncReadFileHandle ; class IMappedFileHandle ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogPlatformFile, Log, All)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (bool bSuppressFileLog ; # define)",
    "insertText": "FILE_LOG(CategoryName, Verbosity, Format, ...) \\ if (!bSuppressFileLog)"
  },
  {
    "label": "UE_LOG()",
    "kind": "Method",
    "detail": "Function (\\ bSuppressFileLog = true ; \\)",
    "insertText": "UE_LOG(CategoryName, Verbosity, Format, ##__VA_ARGS__)"
  },
  {
    "label": "FLoggedFileHandle()",
    "kind": "Method",
    "detail": "Function (\\ bSuppressFileLog = false ; \\ } class FLoggedPlatformFile ; class FLoggedFileHandle : public IFileHandle { TUniquePtr<IFileHandle> FileHandle ; FString Filename ; # if ! UE_BUILD_SHIPPING FLoggedPlatformFile& PlatformFile ; # endif public :)",
    "insertText": "FLoggedFileHandle(IFileHandle* InFileHandle, const TCHAR* InFilename, FLoggedPlatformFile& InOwner)"
  },
  {
    "label": "FLoggedFileHandle()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLoggedFileHandle()"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "Tell()"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"Tell %s\"), *Filename)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"Tell return %lld [%fms]\"), Result, ThisTime)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"Seek %s %lld\"), *Filename, NewPosition)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (bool Result = FileHandle ->)",
    "insertText": "Seek(NewPosition)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"Seek return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"SeekFromEnd %s %lld\"), *Filename, NewPositionRelativeToEnd)"
  },
  {
    "label": "SeekFromEnd()",
    "kind": "Method",
    "detail": "Function (bool Result = FileHandle ->)",
    "insertText": "SeekFromEnd(NewPositionRelativeToEnd)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"SeekFromEnd return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"Read %s %lld\"), *Filename, BytesToRead)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool Result = FileHandle ->)",
    "insertText": "Read(Destination, BytesToRead)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"Read return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"ReadAt %s %lld %lld\"), *Filename, BytesToRead, Offset)"
  },
  {
    "label": "ReadAt()",
    "kind": "Method",
    "detail": "Function (bool Result = FileHandle ->)",
    "insertText": "ReadAt(Destination, BytesToRead, Offset)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"ReadAt return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"Write %s %lld\"), *Filename, BytesToWrite)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool Result = FileHandle ->)",
    "insertText": "Write(Source, BytesToWrite)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, VeryVerbose, TEXT(\"Write return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"Size %s\"), *Filename)"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (int64 Result = FileHandle ->)",
    "insertText": "Size()"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"Size return %lld [%fms]\"), Result, ThisTime)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"Flush %s %s\"), *Filename, (bFullFlush ? TEXT(\"full\") : TEXT(\"partial\")))"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (bool bResult = FileHandle ->)",
    "insertText": "Flush(bFullFlush)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"Flush return %d [%fms]\"), int32(bResult), ThisTime)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"Truncate %s %lld\"), *Filename, NewSize)"
  },
  {
    "label": "Truncate()",
    "kind": "Method",
    "detail": "Function (bool bResult = FileHandle ->)",
    "insertText": "Truncate(NewSize)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"Truncate return %d [%fms]\"), int32(bResult), ThisTime)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"ShrinkBuffers %s\"), *Filename)"
  },
  {
    "label": "ShrinkBuffers()",
    "kind": "Method",
    "detail": "Function (FileHandle ->)",
    "insertText": "ShrinkBuffers()"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"ShrinkBuffers return [%fms]\"), ThisTime)"
  },
  {
    "label": "GetTypeName()",
    "kind": "Method",
    "detail": "Function (} } ; class FLoggedPlatformFile : public IPlatformFile { IPlatformFile* LowerLevel ; # if ! UE_BUILD_SHIPPING FCriticalSection LogFileCritical ; TMap<FString,int32> OpenHandles ; # endif public : const TCHAR*)",
    "insertText": "GetTypeName()"
  },
  {
    "label": "FLoggedPlatformFile()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLoggedPlatformFile() : LowerLevel(nullptr)"
  },
  {
    "label": "ShouldBeUsed()",
    "kind": "Method",
    "detail": "Function (} using IPlatformFile::IterateDirectory ; using IPlatformFile::IterateDirectoryRecursively ; using IPlatformFile::IterateDirectoryStat ; using IPlatformFile::IterateDirectoryStatRecursively ; bool)",
    "insertText": "ShouldBeUsed(IPlatformFile* Inner, const TCHAR* CmdLine)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize(IPlatformFile* Inner, const TCHAR* CommandLineParam)"
  },
  {
    "label": "GetLowerLevel()",
    "kind": "Method",
    "detail": "Function (IPlatformFile*)",
    "insertText": "GetLowerLevel()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (LowerLevel = NewLowerLevel ; } const TCHAR*)",
    "insertText": "GetName()"
  },
  {
    "label": "FileExists()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FileExists(const TCHAR* Filename)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"FileExists %s\"), Filename)"
  },
  {
    "label": "SCOPED_NAMED_EVENT_FSTRING()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCOPED_NAMED_EVENT_FSTRING(DataStr, FColor::Emerald)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"%s\"), *DataStr)"
  },
  {
    "label": "FileExists()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "FileExists(Filename)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"FileExists return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"FileSize %s\"), Filename)"
  },
  {
    "label": "FileSize()",
    "kind": "Method",
    "detail": "Function (int64 Result = LowerLevel ->)",
    "insertText": "FileSize(Filename)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"FileSize return %lld [%fms]\"), Result, ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"DeleteFile %s\"), Filename)"
  },
  {
    "label": "DeleteFile()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "DeleteFile(Filename)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"DeleteFile return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"IsReadOnly %s\"), Filename)"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "IsReadOnly(Filename)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"IsReadOnly return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"MoveFile %s %s\"), To, From)"
  },
  {
    "label": "MoveFile()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "MoveFile(To, From)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"MoveFile return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"SetReadOnly %s %d\"), Filename, int32(bNewReadOnlyValue))"
  },
  {
    "label": "SetReadOnly()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "SetReadOnly(Filename, bNewReadOnlyValue)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"SetReadOnly return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"GetTimeStamp %s\"), Filename)"
  },
  {
    "label": "GetTimeStamp()",
    "kind": "Method",
    "detail": "Function (FDateTime Result = LowerLevel ->)",
    "insertText": "GetTimeStamp(Filename)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"GetTimeStamp return %llx [%fms]\"), Result.GetTicks(), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"SetTimeStamp %s\"), Filename)"
  },
  {
    "label": "SetTimeStamp()",
    "kind": "Method",
    "detail": "Function (LowerLevel ->)",
    "insertText": "SetTimeStamp(Filename, DateTime)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"SetTimeStamp [%fms]\"), ThisTime)"
  },
  {
    "label": "GetAccessTimeStamp()",
    "kind": "Method",
    "detail": "Function (} FDateTime)",
    "insertText": "GetAccessTimeStamp(const TCHAR* Filename)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"GetAccessTimeStamp %s\"), Filename)"
  },
  {
    "label": "GetAccessTimeStamp()",
    "kind": "Method",
    "detail": "Function (FDateTime Result = LowerLevel ->)",
    "insertText": "GetAccessTimeStamp(Filename)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"GetAccessTimeStamp return %llx [%fms]\"), Result.GetTicks(), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"GetFilenameOnDisk %s\"), Filename)"
  },
  {
    "label": "GetFilenameOnDisk()",
    "kind": "Method",
    "detail": "Function (FString Result = LowerLevel ->)",
    "insertText": "GetFilenameOnDisk(Filename)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"GetFilenameOnDisk return %s [%fms]\"), *Result, ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"OpenRead %s\"), Filename)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"OpenRead return %llx [%fms]\"), uint64(Result), ThisTime)"
  },
  {
    "label": "OpenWrite()",
    "kind": "Method",
    "detail": "Function (} IFileHandle*)",
    "insertText": "OpenWrite(const TCHAR* Filename, bool bAppend = false, bool bAllowRead = false)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"OpenWrite %s %d %d\"), Filename, int32(bAppend), int32(bAllowRead))"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"OpenWrite return %llx [%fms]\"), uint64(Result), ThisTime)"
  },
  {
    "label": "DirectoryExists()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "DirectoryExists(const TCHAR* Directory)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"DirectoryExists %s\"), Directory)"
  },
  {
    "label": "DirectoryExists()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "DirectoryExists(Directory)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"DirectoryExists return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"CreateDirectory %s\"), Directory)"
  },
  {
    "label": "CreateDirectory()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "CreateDirectory(Directory)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"CreateDirectory return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"DeleteDirectory %s\"), Directory)"
  },
  {
    "label": "DeleteDirectory()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "DeleteDirectory(Directory)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"DeleteDirectory return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"GetStatData %s\"), FilenameOrDirectory)"
  },
  {
    "label": "GetStatData()",
    "kind": "Method",
    "detail": "Function (FFileStatData Result = LowerLevel ->)",
    "insertText": "GetStatData(FilenameOrDirectory)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"GetStatData return %d [%fms]\"), int32(Result.bIsValid), ThisTime)"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Visit(const TCHAR* FilenameOrDirectory, bool bIsDirectory)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"Visit %s %d\"), FilenameOrDirectory, int32(bIsDirectory))"
  },
  {
    "label": "CallShouldVisitAndVisit()",
    "kind": "Method",
    "detail": "Function (bool Result = Visitor .)",
    "insertText": "CallShouldVisitAndVisit(FilenameOrDirectory, bIsDirectory)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"Visit return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"IterateDirectory %s\"), Directory)"
  },
  {
    "label": "LogVisitor()",
    "kind": "Method",
    "detail": "Function (FLogVisitor)",
    "insertText": "LogVisitor(Visitor)"
  },
  {
    "label": "IterateDirectory()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "IterateDirectory(Directory, LogVisitor)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"IterateDirectory return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"IterateDirectoryRecursively %s\"), Directory)"
  },
  {
    "label": "IterateDirectoryRecursively()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "IterateDirectoryRecursively(Directory, LogVisitor)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"IterateDirectoryRecursively return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Visit(const TCHAR* FilenameOrDirectory, const FFileStatData& StatData)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Verbose, TEXT(\"Visit %s %d\"), FilenameOrDirectory, int32(StatData.bIsDirectory))"
  },
  {
    "label": "CallShouldVisitAndVisit()",
    "kind": "Method",
    "detail": "Function (bool Result = Visitor .)",
    "insertText": "CallShouldVisitAndVisit(FilenameOrDirectory, StatData)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"IterateDirectoryStat %s\"), Directory)"
  },
  {
    "label": "IterateDirectoryStat()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "IterateDirectoryStat(Directory, LogVisitor)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"IterateDirectoryStat return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"IterateDirectoryStatRecursively %s\"), Directory)"
  },
  {
    "label": "IterateDirectoryStatRecursively()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "IterateDirectoryStatRecursively(Directory, LogVisitor)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"IterateDirectoryStatRecursively return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"DeleteDirectoryRecursively %s\"), Directory)"
  },
  {
    "label": "DeleteDirectoryRecursively()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "DeleteDirectoryRecursively(Directory)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"DeleteDirectoryRecursively return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"CopyFile %s %s\"), To, From)"
  },
  {
    "label": "CopyFile()",
    "kind": "Method",
    "detail": "Function (bool Result = LowerLevel ->)",
    "insertText": "CopyFile(To, From, ReadFlags, WriteFlags)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"CopyFile return %d [%fms]\"), int32(Result), ThisTime)"
  },
  {
    "label": "LogFileLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "LogFileLock(&LogFileCritical)"
  },
  {
    "label": "FindOrAdd()",
    "kind": "Method",
    "detail": "Function (int32& NumOpenHandles = OpenHandles .)",
    "insertText": "FindOrAdd(Filename)"
  },
  {
    "label": "OnHandleClosed()",
    "kind": "Method",
    "detail": "Function (NumOpenHandles + + ; } void)",
    "insertText": "OnHandleClosed(const FString& Filename)"
  },
  {
    "label": "FindChecked()",
    "kind": "Method",
    "detail": "Function (int32& NumOpenHandles = OpenHandles .)",
    "insertText": "FindChecked(Filename)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (OpenHandles .)",
    "insertText": "Remove(Filename)"
  },
  {
    "label": "HandleDumpCommand()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "HandleDumpCommand(const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "OpenAsyncRead()",
    "kind": "Method",
    "detail": "Function (# endif IAsyncReadFileHandle*)",
    "insertText": "OpenAsyncRead(const TCHAR* Filename)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString DataStr =)",
    "insertText": "Printf(TEXT(\"OpenAsyncRead %s\"), Filename)"
  },
  {
    "label": "OpenAsyncRead()",
    "kind": "Method",
    "detail": "Function (IAsyncReadFileHandle* Result = LowerLevel ->)",
    "insertText": "OpenAsyncRead(Filename)"
  },
  {
    "label": "FILE_LOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FILE_LOG(LogPlatformFile, Log, TEXT(\"OpenAsyncRead return %llx [%fms]\"), uint64(Result), ThisTime)"
  },
  {
    "label": "SetAsyncMinimumPriority()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetAsyncMinimumPriority(EAsyncIOPriorityAndFlags Priority)"
  },
  {
    "label": "SetAsyncMinimumPriority()",
    "kind": "Method",
    "detail": "Function (LowerLevel ->)",
    "insertText": "SetAsyncMinimumPriority(Priority)"
  }
]