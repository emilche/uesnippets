[
  {
    "label": "AudioEncoderIlbcImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioEncoderIlbcImpl"
  },
  {
    "label": "AudioEncoderIlbcImpl()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_CODECS_ILBC_AUDIO_ENCODER_ILBC_H_ # define MODULES_AUDIO_CODING_CODECS_ILBC_AUDIO_ENCODER_ILBC_H_ # include<stddef . h> # include<stdint . h> # include<utility> # include \" absl / types / optional . h \" # include \" api / audio_codecs / audio_encoder . h \" # include \" api / audio_codecs / ilbc / audio_encoder_ilbc_config . h \" # include \" api / units / time_delta . h \" # include \" modules / audio_coding / codecs / ilbc / ilbc . h \" namespace webrtc { class AudioEncoderIlbcImpl final : public AudioEncoder { public :)",
    "insertText": "AudioEncoderIlbcImpl(const AudioEncoderIlbcConfig& config, int payload_type)"
  },
  {
    "label": "AudioEncoderIlbcImpl()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "AudioEncoderIlbcImpl()"
  },
  {
    "label": "AudioEncoderIlbcImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AudioEncoderIlbcImpl(const AudioEncoderIlbcImpl&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AudioEncoderIlbcImpl&)",
    "insertText": "operator(const AudioEncoderIlbcImpl&)"
  },
  {
    "label": "SampleRateHz()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SampleRateHz()"
  },
  {
    "label": "NumChannels()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "NumChannels()"
  },
  {
    "label": "Num10MsFramesInNextPacket()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Num10MsFramesInNextPacket()"
  },
  {
    "label": "Max10MsFramesInAPacket()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Max10MsFramesInAPacket()"
  },
  {
    "label": "GetTargetBitrate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetTargetBitrate()"
  },
  {
    "label": "EncodeImpl()",
    "kind": "Method",
    "detail": "Function (EncodedInfo)",
    "insertText": "EncodeImpl(uint32_t rtp_timestamp, rtc::ArrayView<const int16_t> audio, rtc::Buffer* encoded)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetFrameLengthRange()",
    "kind": "Method",
    "detail": "Function (absl::optional<std::pair<TimeDelta,TimeDelta>>)",
    "insertText": "GetFrameLengthRange()"
  },
  {
    "label": "RequiredOutputSizeBytes()",
    "kind": "Method",
    "detail": "Function (private : size_t)",
    "insertText": "RequiredOutputSizeBytes()"
  }
]