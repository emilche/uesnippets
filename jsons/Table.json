[
  {
    "label": "FBaseTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseTreeNode"
  },
  {
    "label": "FTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTableColumn"
  },
  {
    "label": "TRACEINSIGHTSCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTSCORE_API"
  },
  {
    "label": "FTable()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" namespace UE::Insights { class FBaseTreeNode ; class FTableColumn ; class FTable : public TSharedFromThis<FTable> { public :)",
    "insertText": "FTable()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (const FText&)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (DisplayName = InDisplayName ; } const FText&)",
    "insertText": "GetDescription()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (Description = InDescription ; } void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetColumnCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetColumnCount()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetColumns()",
    "kind": "Method",
    "detail": "Function (} const TArray<TSharedRef<FTableColumn>>&)",
    "insertText": "GetColumns()"
  },
  {
    "label": "GetVisibleColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVisibleColumns(TArray<TSharedRef<FTableColumn>>& InArray)"
  },
  {
    "label": "FindColumnChecked()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTableColumn>)",
    "insertText": "FindColumnChecked(const FName& ColumnId)"
  },
  {
    "label": "FindColumn()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FTableColumn>)",
    "insertText": "FindColumn(const FName& ColumnId)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<FTableColumn>* const ColumnRefPtr = ColumnIdToPtrMapping .)",
    "insertText": "Find(ColumnId)"
  },
  {
    "label": "GetVisibleColumnsData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVisibleColumnsData(const TArray<TSharedPtr<FBaseTreeNode>>& InNodes, const FName& LogListingName, TCHAR Separator, bool bIncludeHeaders, FString& OutData)"
  },
  {
    "label": "GetHierarchyColumnId()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "GetHierarchyColumnId()"
  },
  {
    "label": "ResetColumns()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ResetColumns()"
  },
  {
    "label": "AddColumn()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddColumn(TSharedRef<FTableColumn> Column)"
  },
  {
    "label": "AddHierarchyColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHierarchyColumn(int32 ColumnIndex, const TCHAR* ColumnName)"
  }
]