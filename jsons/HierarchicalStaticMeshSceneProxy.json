[
  {
    "label": "FClusterNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterNode"
  },
  {
    "label": "FFoliageElementParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageElementParams"
  },
  {
    "label": "FFoliageRenderInstanceParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageRenderInstanceParams"
  },
  {
    "label": "FFoliageCullInstanceParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageCullInstanceParams"
  },
  {
    "label": "FFoliageOcclusionResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageOcclusionResults"
  },
  {
    "label": "FHierarchicalStaticMeshSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHierarchicalStaticMeshSceneProxy"
  },
  {
    "label": "FFoliageOcclusionResults()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" PrimitiveSceneProxy . h \" # include \" PrimitiveViewRelevance . h \" # include \" Engine / InstancedStaticMesh . h \" # include \" Components / InstancedStaticMeshComponent . h \" # include \" StaticMeshResources . h \" # include \" Components / HierarchicalInstancedStaticMeshComponent . h \" # include \" Async / Mutex . h \" struct FClusterNode ; struct FFoliageElementParams ; struct FFoliageRenderInstanceParams ; struct FFoliageCullInstanceParams ; struct FFoliageOcclusionResults { TArray<bool> Results ; int32 ResultsStart ; int32 NumResults ; uint32 FrameNumberRenderThread ;)",
    "insertText": "FFoliageOcclusionResults(TArray<bool>* InResults, int32 InResultsStart, int32 InNumResults) : Results(*InResults) , ResultsStart(InResultsStart) , NumResults(InNumResults) , FrameNumberRenderThread(GFrameNumberRenderThread)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} } ; class FHierarchicalStaticMeshSceneProxy final : public FInstancedStaticMeshSceneProxy { TSharedRef<TArray<FClusterNode>,ESPMode::ThreadSafe> ClusterTreePtr ; const TArray<FClusterNode>& ClusterTree ; TArray<FBox> UnbuiltBounds ; int32 FirstUnbuiltIndex ; int32 InstanceCountToRender ; int32 FirstOcclusionNode ; int32 LastOcclusionNode ; TArray<FBoxSphereBounds> OcclusionBounds ; TMap<uint32,FFoliageOcclusionResults> OcclusionResults ; UE::FMutex OcclusionResultsMutex ; EHISMViewRelevanceType ViewRelevance ; bool bDitheredLODTransitions ; uint32 SceneProxyCreatedFrameNumberRenderThread ; #)",
    "insertText": "if(UE_BUILD_SHIPPING || UE_BUILD_TEST)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (int32 SingleDebugTotalInstances [ MAX_STATIC_MESH_LODS ] ; TArray<uint32> MultipleDebugRuns [ MAX_STATIC_MESH_LODS ] ; int32 MultipleDebugTotalInstances [ MAX_STATIC_MESH_LODS ] ; int32 CaptureTag ; # endif public : SIZE_T)",
    "insertText": "GetTypeHash()"
  },
  {
    "label": "FHierarchicalStaticMeshSceneProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FHierarchicalStaticMeshSceneProxy(UHierarchicalInstancedStaticMeshComponent* InComponent, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "SetupOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupOcclusion(UHierarchicalInstancedStaticMeshComponent* InComponent)"
  },
  {
    "label": "CreateRenderThreadResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRenderThreadResources(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "GetViewRelevance()",
    "kind": "Method",
    "detail": "Function (FPrimitiveViewRelevance)",
    "insertText": "GetViewRelevance(const FSceneView* View)"
  },
  {
    "label": "IsRayTracingStaticRelevant()",
    "kind": "Method",
    "detail": "Function (# if RHI_RAYTRACING bool)",
    "insertText": "IsRayTracingStaticRelevant()"
  },
  {
    "label": "GetOcclusionQueries()",
    "kind": "Method",
    "detail": "Function (const TArray<FBoxSphereBounds>*)",
    "insertText": "GetOcclusionQueries(const FSceneView* View)"
  },
  {
    "label": "AcceptOcclusionResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcceptOcclusionResults(const FSceneView* View, TArray<bool>* Results, int32 ResultsStart, int32 NumResults)"
  },
  {
    "label": "AllowInstanceCullingOcclusionQueries()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowInstanceCullingOcclusionQueries()"
  },
  {
    "label": "ApplyWorldOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyWorldOffset(FRHICommandListBase& RHICmdList, FVector InOffset)"
  },
  {
    "label": "FillDynamicMeshElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillDynamicMeshElements(const FSceneView* View, FMeshElementCollector& Collector, const FFoliageElementParams& ElementParams, const FFoliageRenderInstanceParams& Instances)"
  },
  {
    "label": "Traverse()",
    "kind": "Method",
    "detail": "Function (template<bool TUseVector,bool THasWPODisplacement> void)",
    "insertText": "Traverse(const FFoliageCullInstanceParams& Params, int32 Index, int32 MinLOD, int32 MaxLOD, bool bFullyContained = false)"
  }
]