[
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "__return_temporary_buffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__return_temporary_buffer"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___MEMORY_TEMPORARY_BUFFER_H # define _LIBCPP___MEMORY_TEMPORARY_BUFFER_H # include<__config> # include<__type_traits / alignment_of . h> # include<__utility / pair . h> # include<cstddef> # include<new> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _Tp> _LIBCPP_NODISCARD_EXT _LIBCPP_NO_CFI _LIBCPP_DEPRECATED_IN_CXX17 pair<_Tp*, ptrdiff_t> get_temporary_buffer(ptrdiff_t __n)"
  },
  {
    "label": "__r()",
    "kind": "Method",
    "detail": "Function (pair<_Tp*,ptrdiff_t>)",
    "insertText": "__r(0, 0)"
  },
  {
    "label": "__m()",
    "kind": "Method",
    "detail": "Function (const ptrdiff_t)",
    "insertText": "__m(~ptrdiff_t(0) ^ ptrdiff_t(ptrdiff_t(1) << (sizeof(ptrdiff_t) * __CHAR_BIT__ - 1))) / sizeof(_Tp)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_ALIGNED_ALLOCATION) if (__is_overaligned_for_new(_LIBCPP_ALIGNOF(_Tp)))"
  },
  {
    "label": "align_val_t()",
    "kind": "Method",
    "detail": "Function (align_val_t __al =)",
    "insertText": "align_val_t(alignment_of<_Tp>::value)"
  },
  {
    "label": "_Tp()",
    "kind": "Method",
    "detail": "Function (__r . first = static_cast<)",
    "insertText": "_Tp(::operator new( __n * sizeof(_Tp), __al, nothrow))"
  },
  {
    "label": "_Tp()",
    "kind": "Method",
    "detail": "Function (} else { __r . first = static_cast<)",
    "insertText": "_Tp(::operator new( __n * sizeof(_Tp), nothrow))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} # else)",
    "insertText": "if(__is_overaligned_for_new(_LIBCPP_ALIGNOF(_Tp)))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "if(__r.first)"
  },
  {
    "label": "return_temporary_buffer()",
    "kind": "Method",
    "detail": "Function (__r . second = __n ; break ; } __n / = 2 ; } return __r ; } template<class _Tp> _LIBCPP_INLINE_VISIBILITY _LIBCPP_DEPRECATED_IN_CXX17 void)",
    "insertText": "return_temporary_buffer(_Tp* __p)"
  },
  {
    "label": "__libcpp_deallocate_unsized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "__libcpp_deallocate_unsized((void*)__p, _LIBCPP_ALIGNOF(_Tp))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} struct __return_temporary_buffer { _LIBCPP_SUPPRESS_DEPRECATED_PUSH template<class _Tp> _LIBCPP_INLINE_VISIBILITY void)",
    "insertText": "operator()(_Tp* __p)"
  },
  {
    "label": "return_temporary_buffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "return_temporary_buffer(__p)"
  }
]