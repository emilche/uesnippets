[
  {
    "label": "FTexture2DResourceMem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture2DResourceMem"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "UTexture2DArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2DArray"
  },
  {
    "label": "IVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IVirtualTexture"
  },
  {
    "label": "FTexturePlatformData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTexturePlatformData"
  },
  {
    "label": "FStreamableTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamableTextureResource"
  },
  {
    "label": "FTexture2DResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture2DResource"
  },
  {
    "label": "FTexture3DResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture3DResource"
  },
  {
    "label": "FTexture2DArrayResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture2DArrayResource"
  },
  {
    "label": "FVirtualTexture2DResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTexture2DResource"
  },
  {
    "label": "IPooledRenderTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPooledRenderTarget"
  },
  {
    "label": "FTexture2DMipMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTexture2DMipMap"
  },
  {
    "label": "FTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureResource"
  },
  {
    "label": "FVirtualTextureBuiltData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureBuiltData"
  },
  {
    "label": "IAllocatedVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAllocatedVirtualTexture"
  },
  {
    "label": "FTexture2DDynamicResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture2DDynamicResource"
  },
  {
    "label": "UTexture2DDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2DDynamic"
  },
  {
    "label": "FDeferredUpdateResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeferredUpdateResource"
  },
  {
    "label": "FTextureRenderTargetResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureRenderTargetResource"
  },
  {
    "label": "FTextureRenderTarget2DResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureRenderTarget2DResource"
  },
  {
    "label": "FTextureRenderTarget2DArrayResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureRenderTarget2DArrayResource"
  },
  {
    "label": "FTextureRenderTargetVolumeResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureRenderTargetVolumeResource"
  },
  {
    "label": "FTextureRenderTargetCubeResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureRenderTargetCubeResource"
  },
  {
    "label": "UTextureRenderTarget2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget2D"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FSceneCapturePass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCapturePass"
  },
  {
    "label": "UTextureRenderTargetCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTargetCube"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "ITargetPlatformSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformSettings"
  },
  {
    "label": "ITargetPlatformControls",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformControls"
  },
  {
    "label": "FTexture2DMipMap()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / ThreadSafeCounter . h \" # include \" Containers / IndirectArray . h \" # include \" Stats / Stats . h \" # include \" Containers / List . h \" # include \" Async / AsyncWork . h \" # include \" Async / AsyncFileHandle . h \" # include \" RHI . h \" # include \" RenderResource . h \" # include \" Serialization / BulkData . h \" # include \" Serialization / DerivedData . h \" # include \" Engine / TextureDefines . h \" # include \" UnrealClient . h \" # include \" Templates / UniquePtr . h \" # include \" VirtualTexturing . h \" class FTexture2DResourceMem ; class UTexture ; class UTexture2D ; class UTexture2DArray ; class IVirtualTexture ; struct FTexturePlatformData ; class FStreamableTextureResource ; class FTexture2DResource ; class FTexture3DResource ; class FTexture2DArrayResource ; class FVirtualTexture2DResource ; struct IPooledRenderTarget ; # define MAX_TEXTURE_SOURCE_SLICES 6 struct FTexture2DMipMap { UE::FDerivedData DerivedData ; FByteBulkData BulkData ; uint16 SizeX = 0 ; uint16 SizeY = 0 ; uint16 SizeZ = 0 ; PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FTexture2DMipMap()"
  },
  {
    "label": "FTexture2DMipMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTexture2DMipMap(uint32 InSizeX, uint32 InSizeY, uint32 InSizeZ = 0) : SizeX((uint16)InSizeX), SizeY((uint16)InSizeY), SizeZ((uint16)InSizeZ)"
  },
  {
    "label": "LowLevelFatalError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LowLevelFatalError(TEXT(\"texture mip size doesn't fit in 16 bits! %ux&ux%u\"), InSizeX, InSizeY, InSizeZ)"
  },
  {
    "label": "FTexture2DMipMap()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "FTexture2DMipMap(FTexture2DMipMap&&)"
  },
  {
    "label": "FTexture2DMipMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTexture2DMipMap(const FTexture2DMipMap&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTexture2DMipMap&)",
    "insertText": "operator(FTexture2DMipMap&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTexture2DMipMap&)",
    "insertText": "operator(const FTexture2DMipMap&)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "Serialize(FArchive& Ar, UObject* Owner, int32 MipIndex, bool bSerializeMipData)"
  },
  {
    "label": "IsPagedToDerivedData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPagedToDerivedData()"
  },
  {
    "label": "StoreInDerivedDataCache()",
    "kind": "Method",
    "detail": "Function (} int64)",
    "insertText": "StoreInDerivedDataCache(FStringView Key, FStringView Name, bool bReplaceExisting)"
  },
  {
    "label": "FTextureResource()",
    "kind": "Method",
    "detail": "Function (# endif } ; class FTextureResource : public FTexture { public :)",
    "insertText": "FTextureResource()"
  },
  {
    "label": "IsProxy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsProxy()"
  },
  {
    "label": "IsTextureRHIPartiallyResident()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsTextureRHIPartiallyResident()"
  },
  {
    "label": "GetTexture2DRHI()",
    "kind": "Method",
    "detail": "Function (} FRHITexture*)",
    "insertText": "GetTexture2DRHI()"
  },
  {
    "label": "GetTexture3DRHI()",
    "kind": "Method",
    "detail": "Function (} FRHITexture*)",
    "insertText": "GetTexture3DRHI()"
  },
  {
    "label": "GetTexture2DArrayRHI()",
    "kind": "Method",
    "detail": "Function (} FRHITexture*)",
    "insertText": "GetTexture2DArrayRHI()"
  },
  {
    "label": "SetTextureReference()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetTextureReference(FRHITextureReference* TextureReference)"
  },
  {
    "label": "GetTextureReference()",
    "kind": "Method",
    "detail": "Function (TextureReferenceRHI = TextureReference ; } FRHITextureReference*)",
    "insertText": "GetTextureReference()"
  },
  {
    "label": "FVirtualTexture2DResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVirtualTexture2DResource(const UTexture2D* InOwner, struct FVirtualTextureBuiltData* InVTData, int32 FirstMipToUse)"
  },
  {
    "label": "FVirtualTexture2DResource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FVirtualTexture2DResource()"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "GetVirtualTexture2DResource()",
    "kind": "Method",
    "detail": "Function (FVirtualTexture2DResource*)",
    "insertText": "GetVirtualTexture2DResource()"
  },
  {
    "label": "GetSizeX()",
    "kind": "Method",
    "detail": "Function (# endif uint32)",
    "insertText": "GetSizeX()"
  },
  {
    "label": "GetSizeY()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSizeY()"
  },
  {
    "label": "GetProducerHandle()",
    "kind": "Method",
    "detail": "Function (const FVirtualTextureProducerHandle&)",
    "insertText": "GetProducerHandle()"
  },
  {
    "label": "ReleaseAllocatedVT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseAllocatedVT()"
  },
  {
    "label": "GetFormat()",
    "kind": "Method",
    "detail": "Function (EPixelFormat)",
    "insertText": "GetFormat(uint32 LayerIndex)"
  },
  {
    "label": "GetSizeInBlocks()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetSizeInBlocks()"
  },
  {
    "label": "GetNumTilesX()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumTilesX()"
  },
  {
    "label": "GetNumTilesY()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumTilesY()"
  },
  {
    "label": "GetNumMips()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumMips()"
  },
  {
    "label": "GetNumLayers()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumLayers()"
  },
  {
    "label": "GetTileSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTileSize()"
  },
  {
    "label": "GetBorderSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetBorderSize()"
  },
  {
    "label": "GetAllocatedvAddress()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAllocatedvAddress()"
  },
  {
    "label": "GetPhysicalTextureSize()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetPhysicalTextureSize(uint32 LayerIndex)"
  },
  {
    "label": "FTexture2DDynamicResource()",
    "kind": "Method",
    "detail": "Function (protected : FName TextureName ; FName PackageName ; TEnumAsByte<ESamplerFilter> Filter = SF_Point ; TEnumAsByte<ESamplerAddressMode> AddressU = AM_Wrap ; TEnumAsByte<ESamplerAddressMode> AddressV = AM_Wrap ; ETextureCreateFlags TexCreateFlags = ETextureCreateFlags::None ; bool bContinuousUpdate = false ; bool bSinglePhysicalSpace = false ; int32 FirstMipToUse = 0 ; struct FVirtualTextureBuiltData* VTData = nullptr ; class IAllocatedVirtualTexture* AllocatedVT = nullptr ; FVirtualTextureProducerHandle ProducerHandle ; } ; class FTexture2DDynamicResource : public FTextureResource { public :)",
    "insertText": "FTexture2DDynamicResource(class UTexture2DDynamic* InOwner)"
  },
  {
    "label": "WriteRawToTexture_RenderThread()",
    "kind": "Method",
    "detail": "Function (# if ! UE_SERVER void)",
    "insertText": "WriteRawToTexture_RenderThread(TArrayView64<const uint8> RawData)"
  },
  {
    "label": "FDeferredUpdateResource()",
    "kind": "Method",
    "detail": "Function (# endif private : class UTexture2DDynamic* Owner ; FTextureRHIRef Texture2DRHI ; } ; class FDeferredUpdateResource { public :)",
    "insertText": "FDeferredUpdateResource() : UpdateListLink(NULL) , bOnlyUpdateOnce(false)"
  },
  {
    "label": "UpdateResources()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "UpdateResources(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "FlushDeferredResourceUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushDeferredResourceUpdate(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "ResetNeedsUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetNeedsUpdate()"
  },
  {
    "label": "IsUpdateNeeded()",
    "kind": "Method",
    "detail": "Function (bNeedsUpdate = true ; } bool)",
    "insertText": "IsUpdateNeeded()"
  },
  {
    "label": "UpdateDeferredResource()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdateDeferredResource(FRHICommandListImmediate& RHICmdList, bool bClearRenderTarget=true)"
  },
  {
    "label": "AddToDeferredUpdateList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToDeferredUpdateList(bool OnlyUpdateOnce)"
  },
  {
    "label": "RemoveFromDeferredUpdateList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromDeferredUpdateList()"
  },
  {
    "label": "GetUpdateList()",
    "kind": "Method",
    "detail": "Function (private : TLinkedList<FDeferredUpdateResource*>*&)",
    "insertText": "GetUpdateList()"
  },
  {
    "label": "FTextureRenderTargetResource()",
    "kind": "Method",
    "detail": "Function (TLinkedList<FDeferredUpdateResource*> UpdateListLink ; bool bNeedsUpdate ; bool bOnlyUpdateOnce ; } ; class FTextureRenderTargetResource : public FTextureResource,public FRenderTarget,public FDeferredUpdateResource { public :)",
    "insertText": "FTextureRenderTargetResource()"
  },
  {
    "label": "IsSupportedFormat()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSupportedFormat(EPixelFormat Format)"
  },
  {
    "label": "GetShaderResourceTexture()",
    "kind": "Method",
    "detail": "Function (const FTextureRHIRef&)",
    "insertText": "GetShaderResourceTexture()"
  },
  {
    "label": "GetTextureRenderTarget2DResource()",
    "kind": "Method",
    "detail": "Function (class FTextureRenderTarget2DResource*)",
    "insertText": "GetTextureRenderTarget2DResource()"
  },
  {
    "label": "GetDisplayGamma()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDisplayGamma()"
  },
  {
    "label": "GetGPUMask()",
    "kind": "Method",
    "detail": "Function (FRHIGPUMask)",
    "insertText": "GetGPUMask(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "SetGPUMask()",
    "kind": "Method",
    "detail": "Function (ActiveGPUMask = InGPUMask ; } protected : void)",
    "insertText": "SetGPUMask(FRHIGPUMask InGPUMask)"
  },
  {
    "label": "FTextureRenderTarget2DResource()",
    "kind": "Method",
    "detail": "Function (ActiveGPUMask = GPUMask = InGPUMask ; } private : FRHIGPUMask GPUMask ; FRHIGPUMask ActiveGPUMask ; } ; class FTextureRenderTarget2DResource : public FTextureRenderTargetResource { public :)",
    "insertText": "FTextureRenderTarget2DResource(const class UTextureRenderTarget2D* InOwner)"
  },
  {
    "label": "FTextureRenderTarget2DResource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTextureRenderTarget2DResource()"
  },
  {
    "label": "GetSizeXY()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetSizeXY()"
  },
  {
    "label": "GetUnorderedAccessViewRHI()",
    "kind": "Method",
    "detail": "Function (FUnorderedAccessViewRHIRef)",
    "insertText": "GetUnorderedAccessViewRHI()"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resize(int32 NewSizeX, int32 NewSizeY, int32 NewNumMips)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (class FScene ; class FSceneCapturePass ; void)",
    "insertText": "Resize(FRHICommandListBase& RHICmdList, int32 NewSizeX, int32 NewSizeY, bool bAutoGenerateMips)"
  },
  {
    "label": "FloorLog2()",
    "kind": "Method",
    "detail": "Function (int32 NewNumMips = bAutoGenerateMips ?)",
    "insertText": "FloorLog2(FMath::Max(NewSizeX, NewSizeY))"
  },
  {
    "label": "UpdateRHI()",
    "kind": "Method",
    "detail": "Function (TargetSizeX = NewSizeX ; TargetSizeY = NewSizeY ; TargetNumMips = NewNumMips ;)",
    "insertText": "UpdateRHI(RHICmdList)"
  },
  {
    "label": "FTextureRenderTargetCubeResource()",
    "kind": "Method",
    "detail": "Function (FUnorderedAccessViewRHIRef UnorderedAccessViewRHI ; FLinearColor ClearColor ; EPixelFormat Format ; int32 TargetSizeX,TargetSizeY ; int32 TargetNumMips ; TRefCountPtr<IPooledRenderTarget> MipGenerationCache ; } ; class FTextureRenderTargetCubeResource : public FTextureRenderTargetResource { public :)",
    "insertText": "FTextureRenderTargetCubeResource(const class UTextureRenderTargetCube* InOwner) : Owner(InOwner)"
  },
  {
    "label": "GetTextureRenderTargetCubeResource()",
    "kind": "Method",
    "detail": "Function (} class FTextureRenderTargetCubeResource*)",
    "insertText": "GetTextureRenderTargetCubeResource()"
  },
  {
    "label": "GetDefaultTextureFormatName()",
    "kind": "Method",
    "detail": "Function (FUnorderedAccessViewRHIRef UnorderedAccessViewRHI ; ECubeFace CurrentTargetFace ; } ; FName)",
    "insertText": "GetDefaultTextureFormatName(const class ITargetPlatform* TargetPlatform, const class UTexture* Texture, int32 LayerIndex, bool bSupportCompressedVolumeTexture, int32 Unused_BlockSize, bool bSupportFilteredFloat32Textures)"
  },
  {
    "label": "GetDefaultTextureFormatName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetDefaultTextureFormatName(const class ITargetPlatformSettings* TargetPlatformSettings, const class ITargetPlatformControls* TargetPlatformControls, const class UTexture* Texture, int32 LayerIndex, bool bSupportCompressedVolumeTexture, int32 Unused_BlockSize, bool bSupportFilteredFloat32Textures)"
  },
  {
    "label": "GetDefaultTextureFormatNamePerLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDefaultTextureFormatNamePerLayer(TArray<FName>& OutFormatNames, const class ITargetPlatform* TargetPlatform, const class UTexture* Texture, bool bSupportCompressedVolumeTexture, int32 Unused_BlockSize, bool bSupportFilteredFloat32Textures)"
  },
  {
    "label": "GetDefaultTextureFormatNamePerLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDefaultTextureFormatNamePerLayer(TArray<FName>& OutFormatNames, const class ITargetPlatformSettings* TargetPlatformSettings, const class ITargetPlatformControls* TargetPlatformControls, const class UTexture* Texture, bool bSupportCompressedVolumeTexture, int32 Unused_BlockSize, bool bSupportFilteredFloat32Textures)"
  },
  {
    "label": "GetAllDefaultTextureFormats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllDefaultTextureFormats(const class ITargetPlatform* TargetPlatform, TArray<FName>& OutFormats)"
  },
  {
    "label": "GetAllDefaultTextureFormats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllDefaultTextureFormats(const class ITargetPlatformSettings* TargetPlatformSettings, TArray<FName>& OutFormats)"
  }
]