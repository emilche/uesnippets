[
  {
    "label": "FPBDCollisionConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraints"
  },
  {
    "label": "FEvolutionResimCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEvolutionResimCache"
  },
  {
    "label": "FCollisionDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollisionDetector"
  },
  {
    "label": "FCollisionDetector()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Collision / CollisionContext . h \" # include \" ChaosStats . h \" namespace Chaos { class FPBDCollisionConstraints ; class FEvolutionResimCache ; class FCollisionDetector { public :)",
    "insertText": "FCollisionDetector(FPBDCollisionConstraints& InCollisionContainer) : CollisionContainer(InCollisionContainer)"
  },
  {
    "label": "FCollisionDetector()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FCollisionDetector()"
  },
  {
    "label": "GetCollisionContainer()",
    "kind": "Method",
    "detail": "Function (} FPBDCollisionConstraints&)",
    "insertText": "GetCollisionContainer()"
  }
]