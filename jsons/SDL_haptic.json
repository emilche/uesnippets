[
  {
    "label": "_SDL_Haptic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_SDL_Haptic"
  },
  {
    "label": "_SDL_Haptic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_SDL_Haptic"
  },
  {
    "label": "SDL_HapticDirection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_HapticDirection"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "SDL_HapticConstant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_HapticConstant"
  },
  {
    "label": "handles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "handles"
  },
  {
    "label": "SDL_HapticPeriodic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_HapticPeriodic"
  },
  {
    "label": "handles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "handles"
  },
  {
    "label": "SDL_HapticCondition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_HapticCondition"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "SDL_HapticRamp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_HapticRamp"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "SDL_HapticLeftRight",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_HapticLeftRight"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "SDL_HapticCustom",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_HapticCustom"
  },
  {
    "label": "SDL_NumHaptics()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_NumHaptics(void)"
  },
  {
    "label": "SDL_HapticName()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticName(int device_index)"
  },
  {
    "label": "SDL_HapticOpen()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticOpen(int device_index)"
  },
  {
    "label": "SDL_HapticOpened()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticOpened(int device_index)"
  },
  {
    "label": "SDL_HapticIndex()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticIndex(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_MouseIsHaptic()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_MouseIsHaptic(void)"
  },
  {
    "label": "SDL_HapticOpenFromMouse()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticOpenFromMouse(void)"
  },
  {
    "label": "SDL_JoystickIsHaptic()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_JoystickIsHaptic(SDL_Joystick * joystick)"
  },
  {
    "label": "SDL_HapticOpenFromJoystick()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticOpenFromJoystick(SDL_Joystick *\n                                                               joystick)"
  },
  {
    "label": "SDL_HapticClose()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticClose(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_HapticNumEffects()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticNumEffects(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_HapticNumEffectsPlaying()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticNumEffectsPlaying(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_HapticQuery()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticQuery(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_HapticNumAxes()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticNumAxes(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_HapticEffectSupported()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticEffectSupported(SDL_Haptic * haptic,\n                                                      SDL_HapticEffect *\n                                                      effect)"
  },
  {
    "label": "SDL_HapticNewEffect()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticNewEffect(SDL_Haptic * haptic,\n                                                SDL_HapticEffect * effect)"
  },
  {
    "label": "SDL_HapticUpdateEffect()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticUpdateEffect(SDL_Haptic * haptic,\n                                                   int effect,\n                                                   SDL_HapticEffect * data)"
  },
  {
    "label": "SDL_HapticRunEffect()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticRunEffect(SDL_Haptic * haptic,\n                                                int effect,\n                                                Uint32 iterations)"
  },
  {
    "label": "SDL_HapticStopEffect()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticStopEffect(SDL_Haptic * haptic,\n                                                 int effect)"
  },
  {
    "label": "SDL_HapticDestroyEffect()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticDestroyEffect(SDL_Haptic * haptic,\n                                                     int effect)"
  },
  {
    "label": "SDL_HapticGetEffectStatus()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticGetEffectStatus(SDL_Haptic * haptic,\n                                                      int effect)"
  },
  {
    "label": "SDL_HapticSetGain()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticSetGain(SDL_Haptic * haptic, int gain)"
  },
  {
    "label": "SDL_HapticSetAutocenter()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticSetAutocenter(SDL_Haptic * haptic,\n                                                    int autocenter)"
  },
  {
    "label": "SDL_HapticPause()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticPause(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_HapticUnpause()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticUnpause(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_HapticStopAll()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticStopAll(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_HapticRumbleSupported()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticRumbleSupported(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_HapticRumbleInit()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticRumbleInit(SDL_Haptic * haptic)"
  },
  {
    "label": "SDL_HapticRumblePlay()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticRumblePlay(SDL_Haptic * haptic, float strength, Uint32 length )"
  },
  {
    "label": "SDL_HapticRumbleStop()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HapticRumbleStop(SDL_Haptic * haptic)"
  }
]