[
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "ControlDependence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ControlDependence"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" llvm / IR / BasicBlock . h \" # include \" llvm / IR / Dominators . h \" # include<unordered_map> # include<unordered_set> namespace llvm { class Function ; class raw_ostream ; } namespace hlsl { using BasicBlockSet = std::unordered_set<llvm::BasicBlock*> ; using PostDomRelationType = llvm::DominatorTreeBase<llvm::BasicBlock> ; class ControlDependence { public : void)",
    "insertText": "Compute(llvm::Function *F, PostDomRelationType &PostDomRel)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "GetCDBlocks()",
    "kind": "Method",
    "detail": "Function (const BasicBlockSet&)",
    "insertText": "GetCDBlocks(llvm::BasicBlock *pBB)"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "print(llvm::raw_ostream &OS)"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dump()"
  },
  {
    "label": "GetIPostDom()",
    "kind": "Method",
    "detail": "Function (private : using BasicBlockVector = std::vector<llvm::BasicBlock*> ; using ControlDependenceType = std::unordered_map<llvm::BasicBlock*,BasicBlockSet> ; llvm::Function* m_pFunc ; ControlDependenceType m_ControlDependence ; BasicBlockSet m_EmptyBBSet ; llvm::BasicBlock*)",
    "insertText": "GetIPostDom(PostDomRelationType &PostDomRel, llvm::BasicBlock *pBB)"
  },
  {
    "label": "ComputeRevTopOrderRec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeRevTopOrderRec(PostDomRelationType &PostDomRel, llvm::BasicBlock *pBB, BasicBlockVector &RevTopOrder, BasicBlockSet &VisitedBBs)"
  }
]