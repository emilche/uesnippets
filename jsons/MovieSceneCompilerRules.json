[
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "FMovieSceneSegment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSegment"
  },
  {
    "label": "TRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRange"
  },
  {
    "label": "FDefaultTrackRowSegmentBlender",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDefaultTrackRowSegmentBlender"
  },
  {
    "label": "FEvaluateNearestSegmentBlender",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEvaluateNearestSegmentBlender"
  },
  {
    "label": "FMovieSceneAdditiveCameraTrackBlender",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneAdditiveCameraTrackBlender"
  },
  {
    "label": "EvaluateNearestSegment()",
    "kind": "Method",
    "detail": "Function (TOptional<FMovieSceneSegment>)",
    "insertText": "EvaluateNearestSegment(const TRange<FFrameNumber>& Range, const FMovieSceneSegment* PreviousSegment, const FMovieSceneSegment* NextSegment)"
  },
  {
    "label": "AlwaysEvaluateSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AlwaysEvaluateSection(const FMovieSceneSectionData& InSectionData)"
  },
  {
    "label": "FilterOutUnderlappingSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterOutUnderlappingSections(FSegmentBlendData& BlendData)"
  },
  {
    "label": "ChooseLowestRowIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChooseLowestRowIndex(FSegmentBlendData& BlendData)"
  },
  {
    "label": "BlendSegmentLegacySectionOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlendSegmentLegacySectionOrder(FSegmentBlendData& BlendData)"
  },
  {
    "label": "SortByStartTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SortByStartTime(const FMovieSceneSectionData& A, const FMovieSceneSectionData& B)"
  }
]