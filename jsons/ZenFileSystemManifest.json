[
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FZenFileSystemManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FZenFileSystemManifest"
  },
  {
    "label": "FManifestEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManifestEntry"
  },
  {
    "label": "FZenFileSystemManifest()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IO / IoDispatcher . h \" class ITargetPlatform ; class FArchive ; class FZenFileSystemManifest { public : struct FManifestEntry { FString ServerPath ; FString ClientPath ; FIoChunkId FileChunkId ; } ;)",
    "insertText": "FZenFileSystemManifest(const ITargetPlatform& InTargetPlatform, FString InCookDirectory)"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Generate()"
  },
  {
    "label": "CreateManifestEntry()",
    "kind": "Method",
    "detail": "Function (const FManifestEntry&)",
    "insertText": "CreateManifestEntry(const FString& Filename)"
  },
  {
    "label": "AddManifestEntry()",
    "kind": "Method",
    "detail": "Function (const FManifestEntry&)",
    "insertText": "AddManifestEntry(const FIoChunkId& FileChunkId, FString ServerPath, FString ClientPath)"
  },
  {
    "label": "ManifestEntries()",
    "kind": "Method",
    "detail": "Function (TArrayView<const FManifestEntry>)",
    "insertText": "ManifestEntries()"
  },
  {
    "label": "NumEntries()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumEntries()"
  },
  {
    "label": "ServerRootPath()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "ServerRootPath()"
  }
]