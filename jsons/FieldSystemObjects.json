[
  {
    "label": "UFieldSystemMetaData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFieldSystemMetaData"
  },
  {
    "label": "UFieldSystemMetaDataIteration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFieldSystemMetaDataIteration"
  },
  {
    "label": "UFieldSystemMetaDataProcessingResolution",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFieldSystemMetaDataProcessingResolution"
  },
  {
    "label": "UFieldSystemMetaDataFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFieldSystemMetaDataFilter"
  },
  {
    "label": "UFieldNodeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFieldNodeBase"
  },
  {
    "label": "UFieldNodeInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFieldNodeInt"
  },
  {
    "label": "UFieldNodeFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFieldNodeFloat"
  },
  {
    "label": "UFieldNodeVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFieldNodeVector"
  },
  {
    "label": "UUniformInteger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUniformInteger"
  },
  {
    "label": "URadialIntMask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URadialIntMask"
  },
  {
    "label": "UUniformScalar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUniformScalar"
  },
  {
    "label": "UWaveScalar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWaveScalar"
  },
  {
    "label": "URadialFalloff",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URadialFalloff"
  },
  {
    "label": "UPlaneFalloff",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlaneFalloff"
  },
  {
    "label": "UBoxFalloff",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBoxFalloff"
  },
  {
    "label": "UNoiseField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNoiseField"
  },
  {
    "label": "UUniformVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUniformVector"
  },
  {
    "label": "URadialVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URadialVector"
  },
  {
    "label": "URandomVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URandomVector"
  },
  {
    "label": "UOperatorField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UOperatorField"
  },
  {
    "label": "UToIntegerField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToIntegerField"
  },
  {
    "label": "UToFloatField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToFloatField"
  },
  {
    "label": "UCullingField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCullingField"
  },
  {
    "label": "UReturnResultsTerminal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UReturnResultsTerminal"
  },
  {
    "label": "FFieldObjectCommands",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFieldObjectCommands"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Queue . h \" # include \" Field / FieldSystemTypes . h \" # include \" Field / FieldSystem . h \" # include \" Field / FieldSystemNodes . h \" # include \" Math / Vector . h \" # include \" Components / PrimitiveComponent . h \" # include \" PhysicsField / PhysicsFieldComponent . h \" # include \" FieldSystemObjects . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual ~UFieldSystemMetaData()"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (} FFieldSystemMetaData::EMetaType)",
    "insertText": "Type()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual ~UFieldSystemMetaDataIteration()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Control the set of particles on which the field will be applied\"), ShowCategories = (\"Field\"), DisplayName = \"MetaDataResolution\", MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual ~UFieldSystemMetaDataProcessingResolution()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Filter the particles on which the field will be applied\"), ShowCategories = (\"Field\"), DisplayName = \"MetaDataFilter\", MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual ~UFieldSystemMetaDataFilter()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual ~UFieldNodeBase()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual ~UFieldNodeInt()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual ~UFieldNodeFloat()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual ~UFieldNodeVector()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UUniformInteger() : Super() , Magnitude(0)"
  },
  {
    "label": "UUniformInteger()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UUniformInteger()"
  },
  {
    "label": "NewEvaluationGraph()",
    "kind": "Method",
    "detail": "Function (} FFieldNodeBase*)",
    "insertText": "NewEvaluationGraph(TArray<const UFieldNodeBase*>& Nodes)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"This function first defines a radial integer field equal to Interior-value inside a sphere / Exterior-value outside. This field will be used alongside the particle input value and the mask condition to compute the particle output value.\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: URadialIntMask() : Super() , Radius(0) , Position(FVector(0, 0, 0)) , InteriorValue(1) , ExteriorValue(0) , SetMaskCondition(ESetMaskConditionType::Field_Set_Always)"
  },
  {
    "label": "URadialIntMask()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "URadialIntMask()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Set a uniform scalar value independently of the sample position. The output is equal to magnitude\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UUniformScalar() : Super() , Magnitude(1.0)"
  },
  {
    "label": "UUniformScalar()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UUniformScalar()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Set a temporal wave scalar value according to the sample distance from the field position.\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UWaveScalar() : Super() , Magnitude(1.0) , Position(0, 0, 0) , Wavelength(10000) , Period(1.0) , Function(EWaveFunctionType::Field_Wave_Cosine) , Falloff(EFieldFalloffType::Field_Falloff_Linear)"
  },
  {
    "label": "UWaveScalar()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UWaveScalar()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Sphere scalar field that will be defined only within a sphere\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: URadialFalloff() : Super() , Magnitude(1.0) , MinRange(0.f) , MaxRange(1.f) , Default(0.f) , Radius(0) , Position(FVector(0, 0, 0)) , Falloff(EFieldFalloffType::Field_Falloff_Linear)"
  },
  {
    "label": "URadialFalloff()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "URadialFalloff()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Plane scalar field that will be defined only within a distance from a plane\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPlaneFalloff() : Super() , Magnitude(1.0) , MinRange(0.f) , MaxRange(1.f) , Default(0.f) , Distance(0.f) , Position(FVector(0, 0, 0)) , Normal(FVector(0, 0, 1)) , Falloff(EFieldFalloffType::Field_Falloff_Linear)"
  },
  {
    "label": "UPlaneFalloff()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UPlaneFalloff()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Box scalar field that will be defined only within a box\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UBoxFalloff() : Super() , Magnitude(1.0) , MinRange(0.f) , MaxRange(1.f) , Default(0.0) , Transform(FTransform::Identity) , Falloff(EFieldFalloffType::Field_Falloff_Linear)"
  },
  {
    "label": "UBoxFalloff()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UBoxFalloff()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Defines a perlin noise scalar value if the sample is within a box\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UNoiseField() : Super() , MinRange(0.f) , MaxRange(1.f) , Transform()"
  },
  {
    "label": "UNoiseField()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UNoiseField()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Set a uniform vector value independently of the sample position.The output is equal to magnitude * direction\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UUniformVector() : Super() , Magnitude(1.0) , Direction(FVector(0, 0, 0))"
  },
  {
    "label": "UUniformVector()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UUniformVector()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Set a radial vector value, the direction being the vector from the sample position to the field one. The output is equal to magnitude * direction\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: URadialVector() : Super() , Magnitude(1.0) , Position(FVector(0, 0, 0))"
  },
  {
    "label": "URadialVector()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "URadialVector()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Set a random vector value independently of the sample position. The output is equal to magnitude * random direction \"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: URandomVector() : Super() , Magnitude(1.0)"
  },
  {
    "label": "URandomVector()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "URandomVector()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Compute an operation between 2 incoming fields\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UOperatorField() : Super() , Magnitude(1.0) , RightField(nullptr) , LeftField(nullptr) , Operation(EFieldOperationType::Field_Multiply)"
  },
  {
    "label": "UOperatorField()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UOperatorField()"
  },
  {
    "label": "ResultsExpector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResultsExpector()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Convert a scalar field to a integer one\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UToIntegerField() : Super() , FloatField(nullptr)"
  },
  {
    "label": "UToIntegerField()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UToIntegerField()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Convert an integer field to a scalar one\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UToFloatField() : Super() , IntField(nullptr)"
  },
  {
    "label": "UToFloatField()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UToFloatField()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Evaluate the input field according to the result of the culling field\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UCullingField() : Super() , Culling(nullptr) , Field(nullptr) , Operation(EFieldCullingOperationType::Field_Culling_Inside)"
  },
  {
    "label": "UCullingField()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UCullingField()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(ClassGroup = \"Field\", meta = (BlueprintSpawnableComponent, ToolTip = \"Terminal field of a graph\"), ShowCategories = (\"Field\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UReturnResultsTerminal() : Super()"
  },
  {
    "label": "UReturnResultsTerminal()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "UReturnResultsTerminal()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FFieldObjectCommands() : TargetNames() , RootNodes() , MetaDatas()"
  },
  {
    "label": "FFieldObjectCommands()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FFieldObjectCommands()"
  },
  {
    "label": "AddFieldCommand()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddFieldCommand(const FName& TargetName, UFieldNodeBase* RootNode, UFieldSystemMetaData* MetaData)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TargetNames .)",
    "insertText": "Add(TargetName)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (RootNodes .)",
    "insertText": "Add(RootNode)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (MetaDatas .)",
    "insertText": "Add(MetaData)"
  },
  {
    "label": "ResetFieldCommands()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetFieldCommands()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (TargetNames .)",
    "insertText": "Reset()"
  },
  {
    "label": "GetNumCommands()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumCommands()"
  },
  {
    "label": "CreateFieldCommand()",
    "kind": "Method",
    "detail": "Function (} FFieldSystemCommand)",
    "insertText": "CreateFieldCommand(const EFieldPhysicsType PhysicsType, UFieldNodeBase* RootNode, UFieldSystemMetaData* MetaData)"
  },
  {
    "label": "NewEvaluationGraph()",
    "kind": "Method",
    "detail": "Function (TArray<const UFieldNodeBase*> Nodes ; FFieldSystemCommand Command = { PhysicsType,RootNode ->)",
    "insertText": "NewEvaluationGraph(Nodes)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (break ; case FFieldSystemMetaData::EMetaType::ECommandData_Iteration : Command . MetaData .)",
    "insertText": "Add(FFieldSystemMetaData::EMetaType::ECommandData_Iteration).Reset(new FFieldSystemMetaDataIteration(static_cast<UFieldSystemMetaDataIteration*>(MetaData)->Iterations))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (break ; case FFieldSystemMetaData::EMetaType::ECommandData_Filter : Command . MetaData .)",
    "insertText": "Add(FFieldSystemMetaData::EMetaType::ECommandData_Filter).Reset(new FFieldSystemMetaDataFilter(static_cast<UFieldSystemMetaDataFilter*>(MetaData)->FilterType, static_cast<UFieldSystemMetaDataFilter*>(MetaData)->ObjectType, static_cast<UFieldSystemMetaDataFilter*>(MetaData)->PositionType))"
  },
  {
    "label": "ensure()",
    "kind": "Method",
    "detail": "Function (break ; } })",
    "insertText": "ensure(Command.PhysicsType != EFieldPhysicsType::Field_None)"
  },
  {
    "label": "BuildCommandBounds()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "BuildCommandBounds(Command)"
  },
  {
    "label": "CreateFieldCommand()",
    "kind": "Method",
    "detail": "Function (} } FFieldSystemCommand)",
    "insertText": "CreateFieldCommand(const EFieldPhysicsType PhysicsType, FFieldNodeBase* RootNode)"
  },
  {
    "label": "BuildFieldCommand()",
    "kind": "Method",
    "detail": "Function (} } FFieldSystemCommand)",
    "insertText": "BuildFieldCommand(const int32 CommandIndex)"
  }
]