[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IInstallerError",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInstallerError"
  },
  {
    "label": "FInstallerErrorFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstallerErrorFactory"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" enum class EBuildPatchInstallError ; namespace BuildPatchServices { namespace InitializationErrorCodes { const TCHAR* MissingStageDirectory =)",
    "insertText": "TEXT(\"01\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* MissingInstallDirectory =)",
    "insertText": "TEXT(\"02\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* MissingCompleteDelegate =)",
    "insertText": "TEXT(\"03\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* InvalidInstallTags =)",
    "insertText": "TEXT(\"04\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* ChunkReferenceTracking =)",
    "insertText": "TEXT(\"05\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* MissingPrereqForPrereqOnlyInstall =)",
    "insertText": "TEXT(\"06\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* InvalidDataInManifest =)",
    "insertText": "TEXT(\"07\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} namespace VerifyErrorCodes { const TCHAR* UnknownFail =)",
    "insertText": "TEXT(\"00\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} namespace PrerequisiteErrorPrefixes { const TCHAR* ExecuteCode =)",
    "insertText": "TEXT(\"E\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* ReturnCode =)",
    "insertText": "TEXT(\"R\")"
  },
  {
    "label": "GetStandardErrorText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetStandardErrorText(EBuildPatchInstallError ErrorType)"
  },
  {
    "label": "GetDiskSpaceMessage()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDiskSpaceMessage(const FString& Location, uint64 RequiredBytes, uint64 AvailableBytes, const FNumberFormattingOptions* FormatOptions = nullptr)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (class IInstallerError { public : typedef TFunction<)",
    "insertText": "void()"
  },
  {
    "label": "IInstallerError()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "IInstallerError()"
  },
  {
    "label": "HasError()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasError()"
  },
  {
    "label": "IsCancelled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCancelled()"
  },
  {
    "label": "CanRetry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRetry()"
  },
  {
    "label": "GetErrorType()",
    "kind": "Method",
    "detail": "Function (EBuildPatchInstallError)",
    "insertText": "GetErrorType()"
  },
  {
    "label": "GetErrorCode()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetErrorCode()"
  },
  {
    "label": "GetErrorText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetErrorText()"
  },
  {
    "label": "SetError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetError(EBuildPatchInstallError ErrorType, const TCHAR* ErrorSubType, uint32 ErrorCode = 0, FText ErrorText = FText::GetEmpty())"
  },
  {
    "label": "RegisterForErrors()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RegisterForErrors(FOnErrorDelegate Delegate)"
  },
  {
    "label": "UnregisterForErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterForErrors(int32 Handle)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FInstallerErrorFactory { public : IInstallerError*)",
    "insertText": "Create()"
  },
  {
    "label": "EnumToString()",
    "kind": "Method",
    "detail": "Function (} ; const FString&)",
    "insertText": "EnumToString(const EBuildPatchInstallError& ErrorType)"
  }
]