[
  {
    "label": "MakeUniqueResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MakeUniqueResult"
  },
  {
    "label": "MakeUniqueResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MakeUniqueResult"
  },
  {
    "label": "MakeUniqueResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MakeUniqueResult"
  },
  {
    "label": "Extract",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Extract"
  },
  {
    "label": "ExtractOr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ExtractOr"
  },
  {
    "label": "Extract",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Extract"
  },
  {
    "label": "ExtractOr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ExtractOr"
  },
  {
    "label": "Extract",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Extract"
  },
  {
    "label": "GetFirstArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetFirstArg"
  },
  {
    "label": "Class",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Class"
  },
  {
    "label": "GetFirstArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetFirstArg"
  },
  {
    "label": "ElementType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ElementType"
  },
  {
    "label": "ElementType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ElementType"
  },
  {
    "label": "RebindFirstArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RebindFirstArg"
  },
  {
    "label": "Class",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Class"
  },
  {
    "label": "RebindFirstArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RebindFirstArg"
  },
  {
    "label": "RebindPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RebindPtr"
  },
  {
    "label": "RebindPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RebindPtr"
  },
  {
    "label": "RebindAlloc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RebindAlloc"
  },
  {
    "label": "RebindAlloc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RebindAlloc"
  },
  {
    "label": "pointer_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "pointer_traits"
  },
  {
    "label": "pointer_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "pointer_traits"
  },
  {
    "label": "allocator_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "allocator_traits"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "allocator_is_nothrow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "allocator_is_nothrow"
  },
  {
    "label": "allocator_is_nothrow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "allocator_is_nothrow"
  },
  {
    "label": "default_allocator_is_nothrow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "default_allocator_is_nothrow"
  },
  {
    "label": "default_allocator_is_nothrow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "default_allocator_is_nothrow"
  },
  {
    "label": "allocate_impl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "allocate_impl(0, a, n, hint)"
  },
  {
    "label": "max_size_impl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "max_size_impl(0, a)"
  },
  {
    "label": "select_on_container_copy_construction_impl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "select_on_container_copy_construction_impl(0, a)"
  }
]