[
  {
    "label": "SharedMemoryUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SharedMemoryUtils"
  },
  {
    "label": "BaseSharedMemoryService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BaseSharedMemoryService"
  },
  {
    "label": "SharedMemoryHooks",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SharedMemoryHooks"
  },
  {
    "label": "SharedMemoryHooksTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SharedMemoryHooksTest"
  },
  {
    "label": "mojo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "mojo"
  },
  {
    "label": "SharedMemoryHooks()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_MEMORY_SHARED_MEMORY_HOOKS_H_ # define BASE_MEMORY_SHARED_MEMORY_HOOKS_H_ # include \" base / memory / read_only_shared_memory_region . h \" # include \" base / memory / unsafe_shared_memory_region . h \" # include \" base / memory / writable_shared_memory_region . h \" namespace mojo { class SharedMemoryUtils ; namespace core::ipcz_driver { class BaseSharedMemoryService ; } } namespace base { class SharedMemoryHooks { public :)",
    "insertText": "SharedMemoryHooks()"
  },
  {
    "label": "SetCreateHooks()",
    "kind": "Method",
    "detail": "Function (private : class SharedMemoryHooksTest ; mojo::SharedMemoryUtils ; class mojo::core::ipcz_driver::BaseSharedMemoryService ; void)",
    "insertText": "SetCreateHooks(ReadOnlySharedMemoryRegion::CreateFunction* read_only_hook, UnsafeSharedMemoryRegion::CreateFunction* unsafe_hook, WritableSharedMemoryRegion::CreateFunction* writable_hook)"
  },
  {
    "label": "set_create_hook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_create_hook(read_only_hook)"
  },
  {
    "label": "set_create_hook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_create_hook(unsafe_hook)"
  },
  {
    "label": "set_create_hook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_create_hook(writable_hook)"
  }
]