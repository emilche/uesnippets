[
  {
    "label": "FReferencedAssets",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferencedAssets"
  },
  {
    "label": "FFindAssetsArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFindAssetsArchive"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FFindReferencedAssets",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFindReferencedAssets"
  },
  {
    "label": "FReferencedAssets()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Serialization / ArchiveUObject . h \" # include \" UObject / GCObject . h \" typedef TMap<TObjectPtr<UObject>,TSet<TObjectPtr<UObject>>> ObjectReferenceGraph ; typedef TMap<UObject*,FString> ObjectNameMap ; struct FReferencedAssets { UObject* Referencer ; TSet<UObject*> AssetList ;)",
    "insertText": "FReferencedAssets() : Referencer(NULL)"
  },
  {
    "label": "FReferencedAssets()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FReferencedAssets(UObject* InReferencer) : Referencer(InReferencer)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FReferencedAssets& Asset)"
  },
  {
    "label": "GetAssetList()",
    "kind": "Method",
    "detail": "Function (TSet<TObjectPtr<UObject>>*)",
    "insertText": "GetAssetList(UObject* Referencer)"
  },
  {
    "label": "FFindAssetsArchive()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FFindAssetsArchive(UObject* InSearch, TSet<UObject*>& OutAssetList, ObjectReferenceGraph* ReferenceGraph=NULL, int32 MaxRecursion=0, bool bIncludeClasses=true, bool bIncludeDefaults=false, bool bReverseReferenceGraph=false)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(class UObject*& Obj)"
  },
  {
    "label": "FFindReferencedAssets()",
    "kind": "Method",
    "detail": "Function (} ; class FFindReferencedAssets : public FGCObject { public :)",
    "insertText": "FFindReferencedAssets()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "ShouldSearchForAssets()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldSearchForAssets(const UObject* Object, const TArray<UClass*>& ClassesToIgnore, const TArray<UPackage*>& PackagesToIgnore, bool bIncludeDefaults=false)"
  },
  {
    "label": "BuildAssetList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildAssetList(UObject *Object, const TArray<UClass*>& IgnoreClasses, const TArray<UPackage*>& IgnorePackages, TSet<UObject*>& ReferencedAssets, bool bIncludeDefaultRefs=false, bool bOnlyDirectReferences=false)"
  },
  {
    "label": "OnEditorMapChange()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnEditorMapChange(uint32 Flag)"
  }
]