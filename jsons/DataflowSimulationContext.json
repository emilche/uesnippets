[
  {
    "label": "DATAFLOWSIMULATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATAFLOWSIMULATION_API"
  },
  {
    "label": "DATAFLOW_CONTEXT_INTERNAL()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Dataflow / DataflowObjectInterface . h \" # include \" Dataflow / DataflowSimulationProxy . h \" namespace UE::Dataflow { template<Base = UE::Dataflow::FContextSingle> class TSimulationContext : public UE::Dataflow::TEngineContext<Base> { public :)",
    "insertText": "DATAFLOW_CONTEXT_INTERNAL(UE::Dataflow::TEngineContext<Base>, TSimulationContext)"
  },
  {
    "label": "TSimulationContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TSimulationContext(const TObjectPtr<UObject>& InOwner) : Super(InOwner)"
  },
  {
    "label": "TSimulationContext()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TSimulationContext()"
  },
  {
    "label": "SetTimingInfos()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "SetTimingInfos(const float DeltaSeconds, const float TimeSeconds)"
  },
  {
    "label": "GetDeltaTime()",
    "kind": "Method",
    "detail": "Function (DeltaTime = DeltaSeconds ; SimulationTime = TimeSeconds ; } float)",
    "insertText": "GetDeltaTime()"
  },
  {
    "label": "GetSimulationProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSimulationProxies(const FString& ProxyType, const TArray<FString>& SimulationGroups, TArray<FDataflowSimulationProxy*>& FilteredProxies)"
  },
  {
    "label": "AddSimulationProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSimulationProxy(const FString& ProxyType, FDataflowSimulationProxy* SimulationProxy)"
  },
  {
    "label": "RemoveSimulationProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSimulationProxy(const FString& ProxyType, const FDataflowSimulationProxy* SimulationProxy)"
  },
  {
    "label": "ResetSimulationProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSimulationProxies()"
  },
  {
    "label": "NumSimulationProxies()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumSimulationProxies(const FString& ProxyType)"
  },
  {
    "label": "RegisterProxyGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterProxyGroups()"
  },
  {
    "label": "BuildGroupBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildGroupBits(const TArray<FString>& SimulationGroups, TBitArray<>& GroupBits)"
  },
  {
    "label": "PushIterationIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushIterationIndex()"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (IterationIndices .)",
    "insertText": "Push(0)"
  },
  {
    "label": "PopIterationIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PopIterationIndex()"
  },
  {
    "label": "Pop()",
    "kind": "Method",
    "detail": "Function (IterationIndices .)",
    "insertText": "Pop()"
  },
  {
    "label": "SetIterationIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetIterationIndex(const int32 IterationIndex)"
  },
  {
    "label": "Last()",
    "kind": "Method",
    "detail": "Function (IterationIndices .)",
    "insertText": "Last()"
  },
  {
    "label": "GetIterationIndex()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetIterationIndex()"
  },
  {
    "label": "GetTypedProxies()",
    "kind": "Method",
    "detail": "Function (} private : float SimulationTime = 0 . 0 f ; float DeltaTime = 0 . 0 f ; TMap<FString,TSet<FDataflowSimulationProxy*>> SimulationProxies ; TMap<FString,uint32> GroupIndices ; TArray<int32> IterationIndices ; } ; template<Base> template<ProxyType> void TSimulationContext<Base)",
    "insertText": "GetTypedProxies(TArray<ProxyType*>& FilteredProxies)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (FilteredProxies .)",
    "insertText": "Add(SimulationProxy->AsType<ProxyType>())"
  }
]