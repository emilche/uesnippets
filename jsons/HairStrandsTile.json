[
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FHairStrandsTilePassVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHairStrandsTilePassVS"
  },
  {
    "label": "DECLARE_GLOBAL_SHADER()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RendererInterface . h \" # include \" RenderGraphResources . h \" # include \" GlobalShader . h \" # include \" ShaderParameterStruct . h \" # include \" HairStrandsData . h \" class FViewInfo ; class FHairStrandsTilePassVS : public FGlobalShader {)",
    "insertText": "DECLARE_GLOBAL_SHADER(FHairStrandsTilePassVS)"
  },
  {
    "label": "SHADER_USE_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SHADER_USE_PARAMETER_STRUCT(FHairStrandsTilePassVS, FGlobalShader)"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FParameters, ) SHADER_PARAMETER(FIntPoint, ViewMin) SHADER_PARAMETER(int32, bRectPrimitive) SHADER_PARAMETER(uint32, TileType) SHADER_PARAMETER(FVector2f, ViewInvSize) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer, TileDataBuffer) RDG_BUFFER_ACCESS(TileIndirectBuffer, ERHIAccess::IndirectArgs) END_SHADER_PARAMETER_STRUCT() static bool ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "GetHairStrandsTileParameters()",
    "kind": "Method",
    "detail": "Function (} ; FHairStrandsTilePassVS::FParameters)",
    "insertText": "GetHairStrandsTileParameters(const FViewInfo& InView, const FHairStrandsTiles& In, FHairStrandsTiles::ETileType TileType)"
  },
  {
    "label": "AddHairStrandsGenerateTilesPass()",
    "kind": "Method",
    "detail": "Function (FHairStrandsTiles)",
    "insertText": "AddHairStrandsGenerateTilesPass(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FRDGTextureRef& InputTexture)"
  },
  {
    "label": "AddHairStrandsGenerateTilesPass()",
    "kind": "Method",
    "detail": "Function (FHairStrandsTiles)",
    "insertText": "AddHairStrandsGenerateTilesPass(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FIntPoint& Extent)"
  },
  {
    "label": "AddHairStrandsTileClearPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHairStrandsTileClearPass(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FHairStrandsTiles& TileData, FHairStrandsTiles::ETileType TileType, FRDGTextureRef OutTexture)"
  },
  {
    "label": "AddHairStrandsDebugTilePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHairStrandsDebugTilePass(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FRDGTextureRef& ColorTexture, const FHairStrandsTiles& TileData)"
  }
]