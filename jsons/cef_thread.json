[
  {
    "label": "CefThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefThread"
  },
  {
    "label": "CreateThread()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_THREAD_H_ # define CEF_INCLUDE_CEF_THREAD_H_ # pragma once # include \" include / cef_task . h \" # include \" include / internal / cef_thread_internal . h \" class CefThread : public CefBaseRefCounted { public : CefRefPtr<CefThread>)",
    "insertText": "CreateThread(const CefString& display_name, cef_thread_priority_t priority, cef_message_loop_type_t message_loop_type, bool stoppable, cef_com_init_mode_t com_init_mode)"
  },
  {
    "label": "CreateThread()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefThread>)",
    "insertText": "CreateThread(const CefString& display_name)"
  },
  {
    "label": "GetTaskRunner()",
    "kind": "Method",
    "detail": "Function (} CefRefPtr<CefTaskRunner>)",
    "insertText": "GetTaskRunner()"
  },
  {
    "label": "GetPlatformThreadId()",
    "kind": "Method",
    "detail": "Function (cef_platform_thread_id_t)",
    "insertText": "GetPlatformThreadId()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "IsRunning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRunning()"
  }
]