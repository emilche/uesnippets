[
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FWorldPartitionPackageHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionPackageHelper"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "FActorContainerID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorContainerID"
  },
  {
    "label": "FWorldPartitionLevelHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionLevelHelper"
  },
  {
    "label": "FPackageReferencer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageReferencer"
  },
  {
    "label": "FLoadActorsParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLoadActorsParams"
  },
  {
    "label": "FContentBundleEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleEditor"
  },
  {
    "label": "FContentBundleEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleEditor"
  },
  {
    "label": "FLoadedPropertyOverrides",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLoadedPropertyOverrides"
  },
  {
    "label": "FPackageReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageReference"
  },
  {
    "label": "FPackageReferencer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageReferencer"
  },
  {
    "label": "UWorldPartitionLevelStreamingDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionLevelStreamingDynamic"
  },
  {
    "label": "UWorldPartitionSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionSubsystem"
  },
  {
    "label": "UWorldPartitionRuntimeLevelStreamingCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeLevelStreamingCell"
  },
  {
    "label": "FActorPropertyOverridesAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorPropertyOverridesAnnotation"
  },
  {
    "label": "AddActorContainerIDToSubPathString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "AddActorContainerIDToSubPathString(const FActorContainerID& InContainerID, const FString& InSubPathString)"
  },
  {
    "label": "AddActorContainerID()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "AddActorContainerID(const FActorContainerID& InContainerID, const FString& InActorName)"
  },
  {
    "label": "AddReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReference(UPackage* InPackage)"
  },
  {
    "label": "RemoveReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReferences()"
  },
  {
    "label": "MoveExternalActorsToLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveExternalActorsToLevel(const TArray<FWorldPartitionRuntimeCellObjectMapping>& InChildPackages, ULevel* InLevel, TArray<UPackage*>& OutModifiedPackages)"
  },
  {
    "label": "RemapLevelSoftObjectPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemapLevelSoftObjectPaths(ULevel* InLevel, UWorldPartition* InWorldPartition)"
  },
  {
    "label": "LoadActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadActors(const FLoadActorsParams& InParams)"
  },
  {
    "label": "RemapActorPath()",
    "kind": "Method",
    "detail": "Function (FSoftObjectPath)",
    "insertText": "RemapActorPath(const FActorContainerID& InContainerID, const FString& SourceWorldName, const FSoftObjectPath& InActorPath)"
  },
  {
    "label": "FWorldPartitionLevelHelper()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FWorldPartitionLevelHelper()"
  },
  {
    "label": "AddReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReference(UPackage* InPackage, FPackageReferencer* InReferencer)"
  },
  {
    "label": "RemoveReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReferences(FPackageReferencer* InReferencer)"
  },
  {
    "label": "PreGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreGarbageCollect()"
  },
  {
    "label": "GetWorldInitializationValues()",
    "kind": "Method",
    "detail": "Function (UWorld::InitializationValues)",
    "insertText": "GetWorldInitializationValues()"
  },
  {
    "label": "RemapLevelCellPathInContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemapLevelCellPathInContentBundle(ULevel* Level, const class FContentBundleEditor* ContentBundleEditor, const UWorldPartitionRuntimeCell* Cell)"
  },
  {
    "label": "LoadActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadActors(FLoadActorsParams&& InParams)"
  },
  {
    "label": "LoadActorsInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadActorsInternal(FLoadActorsParams&& InParams, FLoadedPropertyOverrides&& InLoadedPropertyOverrides)"
  },
  {
    "label": "LoadActorsWithPropertyOverridesInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadActorsWithPropertyOverridesInternal(FLoadActorsParams&& InParams)"
  },
  {
    "label": "SetForcePackageTrashingAtCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForcePackageTrashingAtCleanup(ULevel* Level, bool bForcePackageTrashingAtCleanup)"
  },
  {
    "label": "ApplyConstructionScriptPropertyOverridesFromAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyConstructionScriptPropertyOverridesFromAnnotation(AActor* InActor)"
  }
]