[
  {
    "label": "FFilter_ShowRedirectors",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilter_ShowRedirectors"
  },
  {
    "label": "FFrontendFilter_GatherDynamicCollectionsExpressionContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFrontendFilter_GatherDynamicCollectionsExpressionContext"
  },
  {
    "label": "FDynamicCollectionNameAndDepth",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicCollectionNameAndDepth"
  },
  {
    "label": "FFilter_HideOtherDevelopers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilter_HideOtherDevelopers"
  },
  {
    "label": "FFilter_ShowRedirectors()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IContentBrowserSingleton . h \" # include \" Filters / FilterBase . h \" # include \" Filters / GenericFilter . h \" # include \" FrontendFilterBase . h \" # include \" Misc / TextFilterExpressionEvaluator . h \" # include \" Templates / SharedPointer . h \" class FFilter_ShowRedirectors : public FFrontendFilter { public :)",
    "insertText": "FFilter_ShowRedirectors(TSharedPtr<FFrontendFilterCategory> InCategory)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetName()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText()"
  },
  {
    "label": "GetIconName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetIconName()"
  },
  {
    "label": "IsInverseFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInverseFilter()"
  },
  {
    "label": "SaveSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettings(const FString& IniFilename, const FString& IniSection, const FString& SettingsString)"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings(const FString& IniFilename, const FString& IniSection, const FString& SettingsString)"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesFilter(FAssetFilterType InItem)"
  },
  {
    "label": "FFrontendFilter_GatherDynamicCollectionsExpressionContext()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FFrontendFilter_GatherDynamicCollectionsExpressionContext()"
  },
  {
    "label": "TestBasicStringExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestBasicStringExpression(const FTextFilterString& InValue, const ETextFilterTextComparisonMode InTextComparisonMode)"
  },
  {
    "label": "TestComplexExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestComplexExpression(const FName& InKey, const FTextFilterString& InValue, const ETextFilterComparisonOperation InComparisonOperation, const ETextFilterTextComparisonMode InTextComparisonMode)"
  },
  {
    "label": "TestAgainstAvailableCollections()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "TestAgainstAvailableCollections(const FTextFilterString& InValue, const ETextFilterTextComparisonMode InTextComparisonMode)"
  },
  {
    "label": "FDynamicCollectionNameAndDepth()",
    "kind": "Method",
    "detail": "Function (struct FDynamicCollectionNameAndDepth {)",
    "insertText": "FDynamicCollectionNameAndDepth(FCollectionNameType InCollection, const int32 InRecursionDepth) : Collection(InCollection) , RecursionDepth(InRecursionDepth)"
  },
  {
    "label": "FFilter_HideOtherDevelopers()",
    "kind": "Method",
    "detail": "Function (} FCollectionNameType Collection ; int32 RecursionDepth ; } ; TArray<FCollectionNameType> AvailableDynamicCollections ; TArray<FCollectionNameType>& ReferencedDynamicCollections ; TArray<FDynamicCollectionNameAndDepth> FoundDynamicCollections ; int32 CurrentRecursionDepth ; } ; class FFilter_HideOtherDevelopers : public FFrontendFilter { public :)",
    "insertText": "FFilter_HideOtherDevelopers(TSharedPtr<FFrontendFilterCategory> InCategory, FName FilterBarIdentifier)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FFilter_HideOtherDevelopers&)",
    "insertText": "operator(const FFilter_HideOtherDevelopers&)"
  },
  {
    "label": "FFilter_HideOtherDevelopers()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FFilter_HideOtherDevelopers()"
  },
  {
    "label": "GetPathPermissionList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<const FPathPermissionList>)",
    "insertText": "GetPathPermissionList()"
  },
  {
    "label": "ActiveStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActiveStateChanged(bool bActive)"
  },
  {
    "label": "ModifyContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyContextMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "BuildFilter()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BuildFilter()"
  },
  {
    "label": "HandleItemDataUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleItemDataUpdated(TArrayView<const FContentBrowserItemDataUpdate> InUpdatedItems)"
  },
  {
    "label": "HandleItemDataRefreshed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleItemDataRefreshed()"
  }
]