[
  {
    "label": "FPropertyReplicationState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyReplicationState"
  },
  {
    "label": "FPropertyReplicationFragment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyReplicationFragment"
  },
  {
    "label": "FPropertyReplicationFragment()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Iris / ReplicationSystem / ReplicationFragment . h \" # include \" Templates / RefCounting . h \" # include \" Templates / UniquePtr . h \" namespace UE::Net { class FPropertyReplicationState ; } namespace UE::Net { class FPropertyReplicationFragment : public FReplicationFragment { public :)",
    "insertText": "FPropertyReplicationFragment(EReplicationFragmentTraits InTraits, UObject* InOwner, const FReplicationStateDescriptor* InDescriptor)"
  },
  {
    "label": "FPropertyReplicationFragment()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPropertyReplicationFragment()"
  },
  {
    "label": "GetPropertyReplicationState()",
    "kind": "Method",
    "detail": "Function (const FPropertyReplicationState*)",
    "insertText": "GetPropertyReplicationState()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Register(FFragmentRegistrationContext& Fragments)"
  },
  {
    "label": "CreateAndRegisterFragment()",
    "kind": "Method",
    "detail": "Function (FPropertyReplicationFragment*)",
    "insertText": "CreateAndRegisterFragment(UObject* InOwner, const FReplicationStateDescriptor* InDescriptor, FFragmentRegistrationContext& Context)"
  },
  {
    "label": "ApplyReplicatedState()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ApplyReplicatedState(FReplicationStateApplyContext& Context)"
  },
  {
    "label": "CollectOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectOwner(FReplicationStateOwnerCollector* Owners)"
  },
  {
    "label": "CallRepNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallRepNotifies(FReplicationStateApplyContext& Context)"
  },
  {
    "label": "PollReplicatedState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollReplicatedState(EReplicationFragmentPollFlags PollOption)"
  },
  {
    "label": "ReplicatedStateToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplicatedStateToString(FStringBuilderBase& StringBuilder, FReplicationStateApplyContext& Context, EReplicationStateToStringFlags Flags)"
  }
]