[
  {
    "label": "IPropertyTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableRow"
  },
  {
    "label": "IPropertyTableWidgetHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableWidgetHandle"
  },
  {
    "label": "TRANSLATIONEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRANSLATIONEDITOR_API"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "IPropertyTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTable"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Toolkits / IToolkitHost . h \" # include \" TranslationDataManager . h \" # include \" Styling / AppStyle . h \" # include \" ITranslationEditor . h \" # include \" IPropertyTable . h \" # include \" CustomFontColumn . h \" # include \" TranslationUnit . h \" # include \" LocalizationConfigurationScript . h \" class IPropertyTableRow ; class IPropertyTableWidgetHandle ; class FTranslationEditor : public ITranslationEditor { public : TSharedRef<FTranslationEditor>)",
    "insertText": "Create(TSharedRef< FTranslationDataManager > DataManager, const FString& InManifestFile, const FString& InArchiveFile)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTranslationEditor> TranslationEditor =)",
    "insertText": "MakeShareable(new FTranslationEditor(DataManager, InManifestFile, InArchiveFile, nullptr))"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (TranslationEditor ->)",
    "insertText": "Initialize()"
  },
  {
    "label": "OnPropertyChanged()",
    "kind": "Method",
    "detail": "Function (TranslationUnit ->)",
    "insertText": "OnPropertyChanged().AddSP(DataManager, &FTranslationDataManager::HandlePropertyChanged)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} return TranslationEditor ; } TSharedRef<FTranslationEditor>)",
    "insertText": "Create(TSharedRef< FTranslationDataManager > DataManager, ULocalizationTarget* const LocalizationTarget, const FString& CultureToEdit)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTranslationEditor> TranslationEditor =)",
    "insertText": "MakeShareable(new FTranslationEditor(DataManager, LocalizationConfigurationScript::GetManifestPath(LocalizationTarget), LocalizationConfigurationScript::GetArchivePath(LocalizationTarget, CultureToEdit), LocalizationTarget))"
  },
  {
    "label": "FTranslationEditor()",
    "kind": "Method",
    "detail": "Function (} return TranslationEditor ; } ~)",
    "insertText": "FTranslationEditor()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "InitTranslationEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTranslationEditor(const EToolkitMode::Type Mode, const TSharedPtr< class IToolkitHost >& InitToolkitHost)"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitName()"
  },
  {
    "label": "GetToolkitToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitToolTipText()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "SaveAsset_Execute()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SaveAsset_Execute()"
  },
  {
    "label": "FTranslationEditor()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FTranslationEditor(TSharedRef< FTranslationDataManager > InDataManager, const FString& InManifestFile, const FString& InArchiveFile, ULocalizationTarget* const LocalizationTarget) : ITranslationEditor(InManifestFile, InArchiveFile, LocalizationTarget) , DataManager(InDataManager) , SourceFont(FAppStyle::GetFontStyle( PropertyTableConstants::NormalFontStyle )) , TranslationTargetFont(FAppStyle::GetFontStyle( PropertyTableConstants::NormalFontStyle )) , SourceColumn(MakeShareable(new FCustomFontColumn(SourceFont))) , TranslationColumn(MakeShareable(new FCustomFontColumn(TranslationTargetFont))) , PreviewTextBlock(SNew(STextBlock) .Text(FText::FromString(\"\")) .Font(TranslationTargetFont)) , NamespaceTextBlock(SNew(STextBlock) .Text(FText::FromString(\"\")))"
  },
  {
    "label": "SpawnTab_Untranslated()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Untranslated(const FSpawnTabArgs& Args)"
  },
  {
    "label": "GetTabLabel_Untranslated()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTabLabel_Untranslated()"
  },
  {
    "label": "SpawnTab_Review()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Review(const FSpawnTabArgs& Args)"
  },
  {
    "label": "GetTabLabel_Review()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTabLabel_Review()"
  },
  {
    "label": "SpawnTab_Completed()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Completed(const FSpawnTabArgs& Args)"
  },
  {
    "label": "GetTabLabel_Completed()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTabLabel_Completed()"
  },
  {
    "label": "SpawnTab_Preview()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Preview(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_Context()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Context(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_History()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_History(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_Search()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Search(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_ChangedOnImport()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_ChangedOnImport(const FSpawnTabArgs& Args)"
  },
  {
    "label": "MapActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapActions()"
  },
  {
    "label": "ChangeSourceFont()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeSourceFont()"
  },
  {
    "label": "ChangeSourceFont_FReply()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ChangeSourceFont_FReply()"
  },
  {
    "label": "ChangeTranslationTargetFont()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ChangeTranslationTargetFont()"
  },
  {
    "label": "ChangeTranslationTargetFont_FReply()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ChangeTranslationTargetFont_FReply()"
  },
  {
    "label": "OnSourceFontSizeCommitt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnSourceFontSizeCommitt(int32 NewFontSize, ETextCommit::Type)"
  },
  {
    "label": "RefreshUI()",
    "kind": "Method",
    "detail": "Function (SourceFont . Size = NewFontSize ;)",
    "insertText": "RefreshUI()"
  },
  {
    "label": "OnTranslationTargetFontSizeCommitt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnTranslationTargetFontSizeCommitt(int32 NewFontSize, ETextCommit::Type)"
  },
  {
    "label": "OpenFontPicker()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "OpenFontPicker(const FString DefaultFile, FString& OutFile)"
  },
  {
    "label": "UpdateTranslationUnitSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTranslationUnitSelection(TSet<TSharedRef<IPropertyTableRow>>& SelectedRows)"
  },
  {
    "label": "UpdateUntranslatedSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateUntranslatedSelection()"
  },
  {
    "label": "UpdateNeedsReviewSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNeedsReviewSelection()"
  },
  {
    "label": "UpdateCompletedSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCompletedSelection()"
  },
  {
    "label": "UpdateSearchSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSearchSelection()"
  },
  {
    "label": "UpdateChangedOnImportSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateChangedOnImportSelection()"
  },
  {
    "label": "UpdateContextSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateContextSelection()"
  },
  {
    "label": "PreviewAllTranslationsInEditor_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreviewAllTranslationsInEditor_Execute()"
  },
  {
    "label": "ImportLatestFromLocalizationService_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportLatestFromLocalizationService_Execute()"
  },
  {
    "label": "DownloadLatestFromLocalizationServiceComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DownloadLatestFromLocalizationServiceComplete(const FLocalizationServiceOperationRef& Operation, ELocalizationServiceOperationCommandResult::Type Result)"
  },
  {
    "label": "ExportToPortableObjectFormat_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportToPortableObjectFormat_Execute()"
  },
  {
    "label": "ImportFromPortableObjectFormat_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportFromPortableObjectFormat_Execute()"
  },
  {
    "label": "ImportFromPoFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportFromPoFile(FString FileToImport)"
  },
  {
    "label": "OpenSearchTab_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenSearchTab_Execute()"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted(const FText& InFilterText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnGetHistoryButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnGetHistoryButtonClicked()"
  }
]