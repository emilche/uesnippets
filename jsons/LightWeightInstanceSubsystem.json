[
  {
    "label": "FAutoConsoleVariableRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutoConsoleVariableRef"
  },
  {
    "label": "FLightWeightInstanceSubsystem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightWeightInstanceSubsystem"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogLightWeightInstance, Log, All)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&GetFunctionCS)"
  },
  {
    "label": "FLightWeightInstanceSubsystem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FLightWeightInstanceSubsystem()"
  },
  {
    "label": "GetLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetLocation(const FActorInstanceHandle& Handle)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetName(const FActorInstanceHandle& Handle)"
  },
  {
    "label": "IsInLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInLevel(const FActorInstanceHandle& Handle, const ULevel* InLevel)"
  },
  {
    "label": "CreateNewLightWeightInstance()",
    "kind": "Method",
    "detail": "Function (FActorInstanceHandle)",
    "insertText": "CreateNewLightWeightInstance(UClass* ActorClass, FLWIData* InitData, UDataLayerInstance* Layer, UWorld* World)"
  },
  {
    "label": "DeleteInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteInstance(const FActorInstanceHandle& Handle)"
  },
  {
    "label": "ConvertPositionToCoord()",
    "kind": "Method",
    "detail": "Function (FInt32Vector3)",
    "insertText": "ConvertPositionToCoord(const FVector& InPosition)"
  },
  {
    "label": "AddManager()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddManager(ALightWeightInstanceManager* Manager)"
  },
  {
    "label": "RemoveManager()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveManager(ALightWeightInstanceManager* Manager)"
  }
]