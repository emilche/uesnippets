[
  {
    "label": "FAutoConsoleVariableRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutoConsoleVariableRef"
  },
  {
    "label": "FLightWeightInstanceSubsystem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightWeightInstanceSubsystem"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / ObjectMacros . h \" # include \" GameFramework / LightWeightInstanceManager . h \" # include \" Templates / SharedPointer . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogLightWeightInstance, Log, All)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (class FAutoConsoleVariableRef ; struct FLightWeightInstanceSubsystem { FCriticalSection GetFunctionCS ; FLightWeightInstanceSubsystem&)",
    "insertText": "Get()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&GetFunctionCS)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (LWISubsystem =)",
    "insertText": "MakeShareable(new FLightWeightInstanceSubsystem())"
  },
  {
    "label": "FLightWeightInstanceSubsystem()",
    "kind": "Method",
    "detail": "Function (} } return* LWISubsystem ; })",
    "insertText": "FLightWeightInstanceSubsystem()"
  },
  {
    "label": "FindLightWeightInstanceManager()",
    "kind": "Method",
    "detail": "Function (ALightWeightInstanceManager*)",
    "insertText": "FindLightWeightInstanceManager(const FActorInstanceHandle& Handle)"
  },
  {
    "label": "FindLightWeightInstanceManager()",
    "kind": "Method",
    "detail": "Function (ALightWeightInstanceManager*)",
    "insertText": "FindLightWeightInstanceManager(UClass& ActorClass, UWorld& World, const FVector& InPos, const UDataLayerInstance* DataLayer = nullptr)"
  },
  {
    "label": "FindOrAddLightWeightInstanceManager()",
    "kind": "Method",
    "detail": "Function (ALightWeightInstanceManager*)",
    "insertText": "FindOrAddLightWeightInstanceManager(UClass& ActorClass, UWorld& World, const FVector& InPos, const UDataLayerInstance* DataLayer = nullptr)"
  },
  {
    "label": "GetActor_NoCreate()",
    "kind": "Method",
    "detail": "Function (AActor*)",
    "insertText": "GetActor_NoCreate(const FActorInstanceHandle& Handle)"
  },
  {
    "label": "GetActorClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetActorClass(const FActorInstanceHandle& Handle)"
  },
  {
    "label": "GetLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetLocation(const FActorInstanceHandle& Handle)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetName(const FActorInstanceHandle& Handle)"
  },
  {
    "label": "GetLevel()",
    "kind": "Method",
    "detail": "Function (ULevel*)",
    "insertText": "GetLevel(const FActorInstanceHandle& Handle)"
  },
  {
    "label": "IsInLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInLevel(const FActorInstanceHandle& Handle, const ULevel* InLevel)"
  },
  {
    "label": "CreateNewLightWeightInstance()",
    "kind": "Method",
    "detail": "Function (FActorInstanceHandle)",
    "insertText": "CreateNewLightWeightInstance(UClass* ActorClass, FLWIData* InitData, UDataLayerInstance* Layer, UWorld* World)"
  },
  {
    "label": "DeleteInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteInstance(const FActorInstanceHandle& Handle)"
  },
  {
    "label": "AddManager()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddManager(ALightWeightInstanceManager* Manager)"
  },
  {
    "label": "RemoveManager()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveManager(ALightWeightInstanceManager* Manager)"
  },
  {
    "label": "FindBestInstanceManagerClass()",
    "kind": "Method",
    "detail": "Function (protected : UClass*)",
    "insertText": "FindBestInstanceManagerClass(const UClass* ActorClass)"
  },
  {
    "label": "GetManagerIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetManagerIndex(const ALightWeightInstanceManager* Manager)"
  },
  {
    "label": "GetManagerAt()",
    "kind": "Method",
    "detail": "Function (const ALightWeightInstanceManager*)",
    "insertText": "GetManagerAt(int32 Index)"
  }
]