[
  {
    "label": "__fn",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__fn"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_RANGES_GENERATE_N_H # define _LIBCPP___ALGORITHM_RANGES_GENERATE_N_H # include<__concepts / constructible . h> # include<__concepts / invocable . h> # include<__config> # include<__functional / identity . h> # include<__functional / invoke . h> # include<__iterator / concepts . h> # include<__iterator / incrementable_traits . h> # include<__iterator / iterator_traits . h> # include<__ranges / access . h> # include<__ranges / concepts . h> # include<__utility / move . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif #if _LIBCPP_STD_VER > 17 && !defined(_LIBCPP_HAS_NO_INCOMPLETE_RANGES)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (namespace __generate_n { struct __fn { template<input_or_output_iterator _OutIter,copy_constructible _Func> requires invocable<_Func&>&& indirectly_writable<_OutIter,invoke_result_t<_Func&>> _LIBCPP_HIDE_FROM_ABI _OutIter)",
    "insertText": "operator()(_OutIter __first, iter_difference_t<_OutIter> __n, _Func __gen)"
  },
  {
    "label": "__gen()",
    "kind": "Method",
    "detail": "Function (* __first =)",
    "insertText": "__gen()"
  }
]