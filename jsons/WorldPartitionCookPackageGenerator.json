[
  {
    "label": "FWorldPartitionCookPackage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionCookPackage"
  },
  {
    "label": "IWorldPartitionCookPackageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionCookPackageContext"
  },
  {
    "label": "UWorldPartitionRuntimeCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeCell"
  },
  {
    "label": "IWorldPartitionCookPackageGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionCookPackageGenerator"
  },
  {
    "label": "IWorldPartitionCookPackageGenerator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if WITH_EDITOR struct FWorldPartitionCookPackage ; class IWorldPartitionCookPackageContext ; class UWorldPartitionRuntimeCell ; # endif class IWorldPartitionCookPackageGenerator { # if WITH_EDITOR public : ~)",
    "insertText": "IWorldPartitionCookPackageGenerator()"
  },
  {
    "label": "GatherPackagesToCook()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GatherPackagesToCook(IWorldPartitionCookPackageContext& CookContext)"
  },
  {
    "label": "PrepareGeneratorPackageForCook()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareGeneratorPackageForCook(IWorldPartitionCookPackageContext& CookContext, TArray<UPackage*>& OutModifiedPackages)"
  },
  {
    "label": "PopulateGeneratedPackageForCook()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopulateGeneratedPackageForCook(IWorldPartitionCookPackageContext& CookContext, const FWorldPartitionCookPackage& InPackageToCook, TArray<UPackage*>& OutModifiedPackages)"
  },
  {
    "label": "GetCellForPackage()",
    "kind": "Method",
    "detail": "Function (UWorldPartitionRuntimeCell*)",
    "insertText": "GetCellForPackage(const FWorldPartitionCookPackage& PackageToCook)"
  }
]