[
  {
    "label": "ApmDataDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ApmDataDumper"
  },
  {
    "label": "Limiter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Limiter"
  },
  {
    "label": "Limiter()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AGC2_LIMITER_H_ # define MODULES_AUDIO_PROCESSING_AGC2_LIMITER_H_ # include<vector> # include \" absl / strings / string_view . h \" # include \" modules / audio_processing / agc2 / fixed_digital_level_estimator . h \" # include \" modules / audio_processing / agc2 / interpolated_gain_curve . h \" # include \" modules / audio_processing / include / audio_frame_view . h \" namespace webrtc { class ApmDataDumper ; class Limiter { public :)",
    "insertText": "Limiter(int sample_rate_hz, ApmDataDumper* apm_data_dumper, absl::string_view histogram_name_prefix)"
  },
  {
    "label": "Limiter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Limiter(const Limiter& limiter)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Limiter&)",
    "insertText": "operator(const Limiter& limiter)"
  },
  {
    "label": "Limiter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Limiter()"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Process(AudioFrameView<float> signal)"
  },
  {
    "label": "GetGainCurveStats()",
    "kind": "Method",
    "detail": "Function (InterpolatedGainCurve::Stats)",
    "insertText": "GetGainCurveStats()"
  },
  {
    "label": "SetSampleRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSampleRate(int sample_rate_hz)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "LastAudioLevel()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "LastAudioLevel()"
  }
]