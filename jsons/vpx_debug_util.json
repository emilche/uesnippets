[
  {
    "label": "bitstream_queue_set_frame_write()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_UTIL_VPX_DEBUG_UTIL_H_ # define VPX_VPX_UTIL_VPX_DEBUG_UTIL_H_ # include \" . / vpx_config . h \" # include \" vpx_dsp / prob . h \" # ifdef __cplusplus \" C \" { # endif # if CONFIG_BITSTREAM_DEBUG | | CONFIG_MISMATCH_DEBUG void)",
    "insertText": "bitstream_queue_set_frame_write(int frame_idx)"
  },
  {
    "label": "bitstream_queue_get_frame_write()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "bitstream_queue_get_frame_write(void)"
  },
  {
    "label": "bitstream_queue_set_frame_read()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bitstream_queue_set_frame_read(int frame_idx)"
  },
  {
    "label": "bitstream_queue_get_frame_read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "bitstream_queue_get_frame_read(void)"
  },
  {
    "label": "bitstream_queue_get_write()",
    "kind": "Method",
    "detail": "Function (# endif # if CONFIG_BITSTREAM_DEBUG int)",
    "insertText": "bitstream_queue_get_write(void)"
  },
  {
    "label": "bitstream_queue_get_read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "bitstream_queue_get_read(void)"
  },
  {
    "label": "bitstream_queue_record_write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bitstream_queue_record_write(void)"
  },
  {
    "label": "bitstream_queue_reset_write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bitstream_queue_reset_write(void)"
  },
  {
    "label": "bitstream_queue_pop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bitstream_queue_pop(int *result, int *prob)"
  },
  {
    "label": "bitstream_queue_push()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bitstream_queue_push(int result, const int prob)"
  },
  {
    "label": "bitstream_queue_set_skip_write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bitstream_queue_set_skip_write(int skip)"
  },
  {
    "label": "bitstream_queue_set_skip_read()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bitstream_queue_set_skip_read(int skip)"
  },
  {
    "label": "mismatch_move_frame_idx_w()",
    "kind": "Method",
    "detail": "Function (# endif # if CONFIG_MISMATCH_DEBUG void)",
    "insertText": "mismatch_move_frame_idx_w(void)"
  },
  {
    "label": "mismatch_move_frame_idx_r()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mismatch_move_frame_idx_r(void)"
  },
  {
    "label": "mismatch_reset_frame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mismatch_reset_frame(int num_planes)"
  },
  {
    "label": "mismatch_record_block_pre()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mismatch_record_block_pre(const uint8_t *src, int src_stride, int plane, int pixel_c, int pixel_r, int blk_w, int blk_h, int highbd)"
  },
  {
    "label": "mismatch_record_block_tx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mismatch_record_block_tx(const uint8_t *src, int src_stride, int plane, int pixel_c, int pixel_r, int blk_w, int blk_h, int highbd)"
  },
  {
    "label": "mismatch_check_block_pre()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mismatch_check_block_pre(const uint8_t *src, int src_stride, int plane, int pixel_c, int pixel_r, int blk_w, int blk_h, int highbd)"
  },
  {
    "label": "mismatch_check_block_tx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mismatch_check_block_tx(const uint8_t *src, int src_stride, int plane, int pixel_c, int pixel_r, int blk_w, int blk_h, int highbd)"
  }
]