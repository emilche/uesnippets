[
  {
    "label": "FPlatformFileTrace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformFileTrace"
  },
  {
    "label": "BeginOpen()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / Build . h \" # include \" Trace / Config . h \" # if ! UE_BUILD_SHIPPING # define PLATFORMFILETRACE_ENABLED 1 # else # define PLATFORMFILETRACE_ENABLED 0 # endif # if PLATFORMFILETRACE_ENABLED struct FPlatformFileTrace { void)",
    "insertText": "BeginOpen(const TCHAR* Path)"
  },
  {
    "label": "EndOpen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndOpen(uint64 FileHandle)"
  },
  {
    "label": "FailOpen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FailOpen(const TCHAR* Path)"
  },
  {
    "label": "BeginReOpen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginReOpen(uint64 OldFileHandle)"
  },
  {
    "label": "EndReOpen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndReOpen(uint64 NewFileHandle)"
  },
  {
    "label": "BeginClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginClose(uint64 FileHandle)"
  },
  {
    "label": "EndClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndClose(uint64 FileHandle)"
  },
  {
    "label": "FailClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FailClose(uint64 FileHandle)"
  },
  {
    "label": "BeginRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRead(uint64 ReadHandle, uint64 FileHandle, uint64 Offset, uint64 Size)"
  },
  {
    "label": "EndRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndRead(uint64 ReadHandle, uint64 SizeRead)"
  },
  {
    "label": "BeginWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginWrite(uint64 WriteHandle, uint64 FileHandle, uint64 Offset, uint64 Size)"
  },
  {
    "label": "EndWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndWrite(uint64 WriteHandle, uint64 SizeWritten)"
  },
  {
    "label": "GetOpenFileHandleCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetOpenFileHandleCount()"
  },
  {
    "label": "TRACE_PLATFORMFILE_BEGIN_OPEN()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "TRACE_PLATFORMFILE_BEGIN_OPEN(Path) \\ FPlatformFileTrace::BeginOpen(Path)"
  },
  {
    "label": "TRACE_PLATFORMFILE_END_OPEN()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_END_OPEN(FileHandle) \\ FPlatformFileTrace::EndOpen(uint64(FileHandle))"
  },
  {
    "label": "TRACE_PLATFORMFILE_FAIL_OPEN()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_FAIL_OPEN(Path) \\ FPlatformFileTrace::FailOpen(Path)"
  },
  {
    "label": "TRACE_PLATFORMFILE_BEGIN_REOPEN()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_BEGIN_REOPEN(OldFileHandle) \\ FPlatformFileTrace::BeginReOpen(uint64(OldFileHandle))"
  },
  {
    "label": "TRACE_PLATFORMFILE_END_REOPEN()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_END_REOPEN(NewFileHandle) \\ FPlatformFileTrace::EndReOpen(uint64(NewFileHandle))"
  },
  {
    "label": "TRACE_PLATFORMFILE_BEGIN_CLOSE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_BEGIN_CLOSE(FileHandle) \\ FPlatformFileTrace::BeginClose(uint64(FileHandle))"
  },
  {
    "label": "TRACE_PLATFORMFILE_END_CLOSE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_END_CLOSE(FileHandle) \\ FPlatformFileTrace::EndClose(uint64(FileHandle))"
  },
  {
    "label": "TRACE_PLATFORMFILE_FAIL_CLOSE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_FAIL_CLOSE(FileHandle) \\ FPlatformFileTrace::FailClose(uint64(FileHandle))"
  },
  {
    "label": "TRACE_PLATFORMFILE_BEGIN_READ()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_BEGIN_READ(ReadHandle, FileHandle, Offset, Size) \\ FPlatformFileTrace::BeginRead(uint64(ReadHandle), uint64(FileHandle), Offset, Size)"
  },
  {
    "label": "TRACE_PLATFORMFILE_END_READ()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_END_READ(ReadHandle, SizeRead) \\ FPlatformFileTrace::EndRead(uint64(ReadHandle), SizeRead)"
  },
  {
    "label": "TRACE_PLATFORMFILE_BEGIN_WRITE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_BEGIN_WRITE(WriteHandle, FileHandle, Offset, Size) \\ FPlatformFileTrace::BeginWrite(uint64(WriteHandle), uint64(FileHandle), Offset, Size)"
  },
  {
    "label": "TRACE_PLATFORMFILE_END_WRITE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_PLATFORMFILE_END_WRITE(WriteHandle, SizeWritten) \\ FPlatformFileTrace::EndWrite(uint64(WriteHandle), SizeWritten)"
  }
]