[
  {
    "label": "ClientCommandThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClientCommandThread"
  },
  {
    "label": "ClientUserCommandThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClientUserCommandThread"
  },
  {
    "label": "DuplexPipeClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DuplexPipeClient"
  },
  {
    "label": "CriticalSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CriticalSection"
  },
  {
    "label": "Event",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Event"
  },
  {
    "label": "ClientStartupThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClientStartupThread"
  },
  {
    "label": "ClientStartupThread()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ClientStartupThread(void)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const char* const groupName, RunMode::Enum runMode)"
  },
  {
    "label": "Join()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Join(void)"
  },
  {
    "label": "TryWaitForToken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryWaitForToken(void* token)"
  },
  {
    "label": "WaitForToken()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForToken(void* token)"
  },
  {
    "label": "TriggerRecompile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerRecompile(void)"
  },
  {
    "label": "LogMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogMessage(const wchar_t* message)"
  },
  {
    "label": "BuildPatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildPatch(const wchar_t* moduleNames[], const wchar_t* objPaths[], const wchar_t* amalgamatedObjPaths[], unsigned int count)"
  },
  {
    "label": "InstallExceptionHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InstallExceptionHandler(void)"
  },
  {
    "label": "TriggerRestart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerRestart(void)"
  },
  {
    "label": "ApplySettingBool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySettingBool(const char* settingName, int value)"
  },
  {
    "label": "ApplySettingInt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySettingInt(const char* settingName, int value)"
  },
  {
    "label": "ApplySettingString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySettingString(const char* settingName, const wchar_t* value)"
  },
  {
    "label": "ShowConsole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowConsole()"
  },
  {
    "label": "SetVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisible(bool visible)"
  },
  {
    "label": "SetActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActive(bool active)"
  },
  {
    "label": "SetBuildArguments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBuildArguments(const wchar_t* arguments)"
  },
  {
    "label": "SetReinstancingFlow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReinstancingFlow(bool Enable)"
  },
  {
    "label": "DisableCompileFinishNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableCompileFinishNotification()"
  },
  {
    "label": "ThreadFunction()",
    "kind": "Method",
    "detail": "Function (Thread::ReturnValue)",
    "insertText": "ThreadFunction(const std::wstring& groupName, RunMode::Enum runMode)"
  }
]