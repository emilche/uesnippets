[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FCurvePointHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurvePointHandle"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / Map . h \" # include \" Containers / SparseArray . h \" # include \" CoreTypes . h \" # include \" CurveEditorTypes . h \" # include \" Curves / KeyHandle . h \" # include \" HAL / PlatformCrt . h \" # include \" Misc / Optional . h \" # include \" Templates / SharedPointer . h \" class FCurveEditor ; struct FCurvePointHandle ; struct FKeyHandleSet { void)",
    "insertText": "Add(FKeyHandle Handle, ECurvePointType PointType)"
  },
  {
    "label": "Toggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Toggle(FKeyHandle Handle, ECurvePointType PointType)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FKeyHandle Handle, ECurvePointType PointType)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Contains(FKeyHandle Handle, ECurvePointType PointType)"
  },
  {
    "label": "AsArray()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const FKeyHandle>)",
    "insertText": "AsArray()"
  },
  {
    "label": "FCurveEditorSelection()",
    "kind": "Method",
    "detail": "Function (} private : TArray<FKeyHandle,TInlineAllocator<1>> SortedHandles ; TMap<FKeyHandle,ECurvePointType> HandleToPointType ; } ; struct FCurveEditorSelection {)",
    "insertText": "FCurveEditorSelection()"
  },
  {
    "label": "FCurveEditorSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCurveEditorSelection(TWeakPtr<FCurveEditor> InWeakCurveEditor)"
  },
  {
    "label": "GetAll()",
    "kind": "Method",
    "detail": "Function (} const TMap<FCurveModelID,FKeyHandleSet>&)",
    "insertText": "GetAll()"
  },
  {
    "label": "Count()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Count()"
  },
  {
    "label": "IsSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSelected(FCurvePointHandle InHandle)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Contains(FCurveModelID CurveID, FKeyHandle KeyHandle, ECurvePointType PointType)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Add(FCurvePointHandle InHandle)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FCurveModelID CurveID, ECurvePointType PointType, FKeyHandle KeyHandle)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FCurveModelID CurveID, ECurvePointType PointType, TArrayView<const FKeyHandle> Keys)"
  },
  {
    "label": "Toggle()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Toggle(FCurvePointHandle InHandle)"
  },
  {
    "label": "Toggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Toggle(FCurveModelID CurveID, ECurvePointType PointType, FKeyHandle KeyHandle)"
  },
  {
    "label": "Toggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Toggle(FCurveModelID CurveID, ECurvePointType PointType, TArrayView<const FKeyHandle> Keys)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Remove(FCurvePointHandle InHandle)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FCurveModelID CurveID, ECurvePointType PointType, FKeyHandle KeyHandle)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FCurveModelID CurveID, ECurvePointType PointType, TArrayView<const FKeyHandle> Keys)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FCurveModelID InCurveID)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  }
]