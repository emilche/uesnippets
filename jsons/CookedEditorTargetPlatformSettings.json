[
  {
    "label": "TCookedEditorTargetPlatformSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TCookedEditorTargetPlatformSettings"
  },
  {
    "label": "TCookedCookerTargetPlatformSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TCookedCookerTargetPlatformSettings"
  },
  {
    "label": "TCookedEditorTargetPlatformSettings()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Common / TargetPlatformSettingsBase . h \" # include \" Interfaces / IPluginManager . h \" # include \" CookedEditorPackageManager . h \" template<Base> class TCookedEditorTargetPlatformSettings : public Base { public :)",
    "insertText": "TCookedEditorTargetPlatformSettings()"
  },
  {
    "label": "FactoryForTargetPlatform()",
    "kind": "Method",
    "detail": "Function (PackageManager =)",
    "insertText": "FactoryForTargetPlatform(false)"
  },
  {
    "label": "TCookedEditorTargetPlatformSettings()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TCookedEditorTargetPlatformSettings(TUniquePtr<ICookedEditorPackageManager>&& ExistingManager)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (PackageManager =)",
    "insertText": "MoveTemp(ExistingManager)"
  },
  {
    "label": "GetReflectionCaptureFormats()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetReflectionCaptureFormats(TArray<FName>& OutFormats)"
  },
  {
    "label": "GetReflectionCaptureFormats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReflectionCaptureFormats(OutFormats)"
  },
  {
    "label": "AddUnique()",
    "kind": "Method",
    "detail": "Function (OutFormats .)",
    "insertText": "AddUnique(TEXT(\"EncodedHDR\"))"
  },
  {
    "label": "TCookedCookerTargetPlatformSettings()",
    "kind": "Method",
    "detail": "Function (} protected : TUniquePtr<ICookedEditorPackageManager> PackageManager ; } ; template<Base> class TCookedCookerTargetPlatformSettings : public Base { public :)",
    "insertText": "TCookedCookerTargetPlatformSettings()"
  },
  {
    "label": "FactoryForTargetPlatform()",
    "kind": "Method",
    "detail": "Function (PackageManager =)",
    "insertText": "FactoryForTargetPlatform(true)"
  },
  {
    "label": "TCookedCookerTargetPlatformSettings()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TCookedCookerTargetPlatformSettings(TUniquePtr<ICookedEditorPackageManager>&& ExistingManager)"
  },
  {
    "label": "GetAllPossibleShaderFormats()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetAllPossibleShaderFormats(TArray<FName>& OutFormats)"
  },
  {
    "label": "GetAllTargetedShaderFormats()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetAllTargetedShaderFormats(TArray<FName>& OutFormats)"
  },
  {
    "label": "SupportsFeature()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SupportsFeature(ETargetPlatformFeatures Feature)"
  }
]