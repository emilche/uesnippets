[
  {
    "label": "srtp_event_data_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_event_data_t"
  },
  {
    "label": "srtp_ctx_t_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_ctx_t_"
  },
  {
    "label": "SrtpSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SrtpSession"
  },
  {
    "label": "ProhibitLibsrtpInitialization()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_SRTP_SESSION_H_ # define PC_SRTP_SESSION_H_ # include<stddef . h> # include<stdint . h> # include<vector> # include \" api / field_trials_view . h \" # include \" api / scoped_refptr . h \" # include \" api / sequence_checker . h \" # include \" rtc_base / synchronization / mutex . h \" struct srtp_event_data_t ; struct srtp_ctx_t_ ; namespace cricket { void)",
    "insertText": "ProhibitLibsrtpInitialization()"
  },
  {
    "label": "SrtpSession()",
    "kind": "Method",
    "detail": "Function (class SrtpSession { public :)",
    "insertText": "SrtpSession()"
  },
  {
    "label": "SrtpSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SrtpSession(const webrtc::FieldTrialsView& field_trials)"
  },
  {
    "label": "SrtpSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SrtpSession(const SrtpSession&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (SrtpSession&)",
    "insertText": "operator(const SrtpSession&)"
  },
  {
    "label": "SetSend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSend(int cs, const uint8_t* key, size_t len, const std::vector<int>& extension_ids)"
  },
  {
    "label": "UpdateSend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateSend(int cs, const uint8_t* key, size_t len, const std::vector<int>& extension_ids)"
  },
  {
    "label": "SetRecv()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRecv(int cs, const uint8_t* key, size_t len, const std::vector<int>& extension_ids)"
  },
  {
    "label": "UpdateRecv()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateRecv(int cs, const uint8_t* key, size_t len, const std::vector<int>& extension_ids)"
  },
  {
    "label": "ProtectRtp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProtectRtp(void* data, int in_len, int max_len, int* out_len)"
  },
  {
    "label": "ProtectRtp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProtectRtp(void* data, int in_len, int max_len, int* out_len, int64_t* index)"
  },
  {
    "label": "ProtectRtcp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProtectRtcp(void* data, int in_len, int max_len, int* out_len)"
  },
  {
    "label": "UnprotectRtp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnprotectRtp(void* data, int in_len, int* out_len)"
  },
  {
    "label": "UnprotectRtcp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnprotectRtcp(void* data, int in_len, int* out_len)"
  },
  {
    "label": "GetRtpAuthParams()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRtpAuthParams(uint8_t** key, int* key_len, int* tag_len)"
  },
  {
    "label": "GetSrtpOverhead()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetSrtpOverhead()"
  },
  {
    "label": "EnableExternalAuth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableExternalAuth()"
  },
  {
    "label": "IsExternalAuthEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExternalAuthEnabled()"
  },
  {
    "label": "IsExternalAuthActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExternalAuthActive()"
  },
  {
    "label": "DoSetKey()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "DoSetKey(int type, int cs, const uint8_t* key, size_t len, const std::vector<int>& extension_ids)"
  },
  {
    "label": "SetKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetKey(int type, int cs, const uint8_t* key, size_t len, const std::vector<int>& extension_ids)"
  },
  {
    "label": "UpdateKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateKey(int type, int cs, const uint8_t* key, size_t len, const std::vector<int>& extension_ids)"
  },
  {
    "label": "GetSendStreamPacketIndex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSendStreamPacketIndex(void* data, int in_len, int64_t* index)"
  },
  {
    "label": "DumpPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpPacket(const void* buf, int len, bool outbound)"
  },
  {
    "label": "HandleEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEvent(const srtp_event_data_t* ev)"
  },
  {
    "label": "HandleEventThunk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEventThunk(srtp_event_data_t* ev)"
  }
]