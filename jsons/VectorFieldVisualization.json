[
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FMeshElementCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshElementCollector"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FVectorFieldInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVectorFieldInstance"
  },
  {
    "label": "FVectorFieldVisualizationVertexFactoryShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVectorFieldVisualizationVertexFactoryShaderParameters"
  },
  {
    "label": "FVectorFieldVisualizationVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVectorFieldVisualizationVertexFactory"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UniformBuffer . h \" # include \" VertexFactory . h \" class FMaterial ; class FMeshElementCollector ; class FPrimitiveDrawInterface ; class FSceneView ; class FVectorFieldInstance ; class FVectorFieldInstance ; class FVectorFieldVisualizationVertexFactoryShaderParameters ; class FPrimitiveDrawInterface ; class FSceneView ;)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FVectorFieldVisualizationParameters, ) SHADER_PARAMETER( FVector3f, VolumeToWorldHigh ) SHADER_PARAMETER( FMatrix44f, RelativeVolumeToWorld ) SHADER_PARAMETER( FMatrix44f, VolumeToWorldNoScale ) SHADER_PARAMETER( FVector3f, VoxelSize ) SHADER_PARAMETER( float, Scale ) END_GLOBAL_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "DECLARE_VERTEX_FACTORY_TYPE()",
    "kind": "Method",
    "detail": "Function (class FVectorFieldVisualizationVertexFactory : public FVertexFactory {)",
    "insertText": "DECLARE_VERTEX_FACTORY_TYPE(FVectorFieldVisualizationVertexFactory)"
  },
  {
    "label": "FVectorFieldVisualizationVertexFactory()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FVectorFieldVisualizationVertexFactory(ERHIFeatureLevel::Type InFeatureLevel) : FVertexFactory(InFeatureLevel)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "DrawVectorFieldBounds()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "DrawVectorFieldBounds(FPrimitiveDrawInterface* PDI, const FSceneView* View, FVectorFieldInstance* VectorFieldInstance)"
  },
  {
    "label": "GetVectorFieldMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVectorFieldMesh(FVectorFieldVisualizationVertexFactory* VertexFactory, FVectorFieldInstance* VectorFieldInstance, int32 ViewIndex, FMeshElementCollector& Collector)"
  }
]