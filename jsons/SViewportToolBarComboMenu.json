[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSlateIcon",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateIcon"
  },
  {
    "label": "SViewportToolBarComboMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewportToolBarComboMenu"
  },
  {
    "label": "SViewportToolBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewportToolBar"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Framework / MultiBox / MultiBoxDefs . h \" # include \" Framework / SlateDelegates . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Misc / Attribute . h \" # include \" SViewportToolBar . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Textures / SlateIcon . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Input / SCheckBox . h \" # include \" Widgets / SCompoundWidget . h \" class FName ; class SMenuAnchor ; struct FGeometry ; struct FPointerEvent ; struct FSlateIcon ; class SViewportToolBarComboMenu : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SViewportToolBarComboMenu) : _BlockLocation(EMultiBlockLocation::None), _MinDesiredButtonWidth(-1.0f)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<class SViewportToolBar>, ParentToolBar)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_EVENT(FOnGetContent, OnGetMenuContent ) SLATE_EVENT( FOnCheckStateChanged, OnCheckStateChanged ) SLATE_ATTRIBUTE( ECheckBoxState, IsChecked ) SLATE_ATTRIBUTE( FSlateIcon, Icon ) SLATE_ATTRIBUTE( FText, Label ) SLATE_ATTRIBUTE_DEPRECATED( FName, Style, 5.3, \"The Style attribute is deprecated, styles are specified through stylesheets now\" ) SLATE_ATTRIBUTE( FText, MenuButtonToolTip ) SLATE_ATTRIBUTE( FText, ToggleButtonToolTip ) SLATE_ARGUMENT_DEPRECATED( EMultiBlockLocation::Type, BlockLocation, 5.3, \"The BlockLocation argument is deprecated and not in use anymore\" ) SLATE_ARGUMENT( float, MinDesiredButtonWidth ) SLATE_END_ARGS( ) UNREALED_API void Construct( const FArguments& InArgs)"
  },
  {
    "label": "GetFilteredToolTipText()",
    "kind": "Method",
    "detail": "Function (protected : FText)",
    "insertText": "GetFilteredToolTipText(TAttribute<FText> ToolTipText)"
  },
  {
    "label": "OnMenuClicked()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "OnMenuClicked()"
  },
  {
    "label": "OnMouseEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseEnter(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  }
]