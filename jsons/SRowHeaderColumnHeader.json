[
  {
    "label": "SRowHeaderColumnHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SRowHeaderColumnHeader"
  },
  {
    "label": "IPropertyTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableColumn"
  },
  {
    "label": "IPropertyTableUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableUtilities"
  },
  {
    "label": "IPropertyTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Presentation / PropertyEditor / PropertyEditor . h \" # include \" UserInterface / PropertyTable / SColumnHeader . h \" # include \" Widgets / Layout / SSpacer . h \" # include \" IPropertyTableCell . h \" # include \" UserInterface / PropertyTable / SRowHeaderCell . h \" class SRowHeaderColumnHeader : public SColumnHeader { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SRowHeaderColumnHeader ) : _Style( TEXT(\"PropertyTable\"))"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FName, Style ) SLATE_END_ARGS() ~SRowHeaderColumnHeader()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef< class IPropertyTableColumn >& InPropertyTableColumn, const TSharedRef< class IPropertyTableUtilities >& InPropertyUtilities)"
  },
  {
    "label": "Style()",
    "kind": "Method",
    "detail": "Function (Style = InArgs . _Style ; SColumnHeader::FArguments ColumnArgs ; ColumnArgs .)",
    "insertText": "Style(Style)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(ColumnArgs, InPropertyTableColumn, InPropertyUtilities)"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (ChildSlot [)",
    "insertText": "SNew(SImage ) .DesiredSizeOverride(FVector2D{16.0f}) .ColorAndOpacity(FSlateColor::UseForeground()) .Image(FAppStyle::GetBrush(\"Icons.Save\"))"
  },
  {
    "label": "GenerateCell()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SWidget>)",
    "insertText": "GenerateCell(const TSharedRef< class IPropertyTableRow >& PropertyTableRow)"
  },
  {
    "label": "GetCell()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IPropertyTableCell> Cell = Column ->)",
    "insertText": "GetCell(PropertyTableRow)"
  },
  {
    "label": "GetNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyNode> Node = Cell ->)",
    "insertText": "GetNode()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyEditor> Editor ;)",
    "insertText": "if(Node.IsValid())"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (Editor =)",
    "insertText": "Create(Node.ToSharedRef(), Utilities.ToSharedRef())"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "SNew(SRowHeaderCell, Cell, Editor ) .Style( Style)"
  }
]