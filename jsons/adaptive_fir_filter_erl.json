[
  {
    "label": "ErlComputer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_ADAPTIVE_FIR_FILTER_ERL_H_ # define MODULES_AUDIO_PROCESSING_AEC3_ADAPTIVE_FIR_FILTER_ERL_H_ # include<stddef . h> # include<array> # include<vector> # include \" api / array_view . h \" # include \" modules / audio_processing / aec3 / aec3_common . h \" # include \" rtc_base / system / arch . h \" namespace webrtc { namespace aec3 { void)",
    "insertText": "ErlComputer(const std::vector<std::array<float, kFftLengthBy2Plus1>>& H2, rtc::ArrayView<float> erl)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(WEBRTC_HAS_NEON) void ErlComputer_NEON( const std::vector<std::array<float, kFftLengthBy2Plus1>>& H2, rtc::ArrayView<float> erl)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(WEBRTC_ARCH_X86_FAMILY) void ErlComputer_SSE2( const std::vector<std::array<float, kFftLengthBy2Plus1>>& H2, rtc::ArrayView<float> erl)"
  },
  {
    "label": "ErlComputer_AVX2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ErlComputer_AVX2(const std::vector<std::array<float, kFftLengthBy2Plus1>>& H2, rtc::ArrayView<float> erl)"
  },
  {
    "label": "ComputeErl()",
    "kind": "Method",
    "detail": "Function (# endif } void)",
    "insertText": "ComputeErl(const Aec3Optimization& optimization, const std::vector<std::array<float, kFftLengthBy2Plus1>>& H2, rtc::ArrayView<float> erl)"
  }
]