[
  {
    "label": "VInt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VInt"
  },
  {
    "label": "VTypeArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VTypeArray"
  },
  {
    "label": "VArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VArray"
  },
  {
    "label": "VMutableArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VMutableArray"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (struct VInt ; struct VTypeArray : VType {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VType)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; uint32 Size ; VTypeArray*)",
    "insertText": "New(FAllocationContext Context, uint32 S)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Equals(const VType& Type, uint32 S)"
  },
  {
    "label": "VTypeArray()",
    "kind": "Method",
    "detail": "Function (const VTypeArray& Other = Type . StaticCast<)",
    "insertText": "VTypeArray()"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (} } ; struct VArray : VArrayBase {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VArrayBase)"
  },
  {
    "label": "Concat()",
    "kind": "Method",
    "detail": "Function (VArray&)",
    "insertText": "Concat(FRunningContext Context, VArrayBase& Lhs, VArrayBase& Rhs)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (VArray&)",
    "insertText": "New(FAllocationContext Context, uint32 NumValues, EArrayType ArrayType)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} VArray&)",
    "insertText": "New(FAllocationContext Context, std::initializer_list<VValue> InitList)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} template<InitIndexFunc,= std::enable_if_t<std::is_same_v<VValue,std::invoke_result_t<InitIndexFunc,uint32>>>> VArray&)",
    "insertText": "New(FAllocationContext Context, uint32 NumValues, InitIndexFunc&& InitFunc)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} VArray&)",
    "insertText": "New(FAllocationContext Context, FUtf8StringView String)"
  },
  {
    "label": "SerializeImpl()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SerializeImpl(VArray*& This, FAllocationContext Context, FAbstractVisitor& Visitor)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(This, Context, Visitor)"
  },
  {
    "label": "VArray()",
    "kind": "Method",
    "detail": "Function (} private : struct VMutableArray ;)",
    "insertText": "VArray(FAllocationContext Context, uint32 InNumValues, EArrayType ArrayType) : VArrayBase(Context, InNumValues, ArrayType, VEmergentTypeCreator::GetOrCreate(Context, VTypeCreator::GetOrCreate<VTypeArray>(Context, InNumValues), &StaticCppClassInfo))"
  },
  {
    "label": "VArray()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "VArray(FAllocationContext Context, std::initializer_list<VValue> InitList) : VArrayBase(Context, InitList, VEmergentTypeCreator::GetOrCreate(Context, VTypeCreator::GetOrCreate<VTypeArray>(Context, static_cast<uint32>(InitList.size())), &StaticCppClassInfo))"
  },
  {
    "label": "VArray()",
    "kind": "Method",
    "detail": "Function (} template<InitIndexFunc,= std::enable_if_t<std::is_same_v<VValue,std::invoke_result_t<InitIndexFunc,uint32>>>>)",
    "insertText": "VArray(FAllocationContext Context, uint32 InNumValues, InitIndexFunc&& InitFunc) : VArrayBase(Context, InNumValues, InitFunc, VEmergentTypeCreator::GetOrCreate(Context, VTypeCreator::GetOrCreate<VTypeArray>(Context, InNumValues), &StaticCppClassInfo))"
  },
  {
    "label": "VArray()",
    "kind": "Method",
    "detail": "Function (} protected :)",
    "insertText": "VArray(FAllocationContext Context, FUtf8StringView String, VEmergentType* Type) : VArrayBase(Context, String, Type)"
  }
]