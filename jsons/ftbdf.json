[
  {
    "label": "BDF_PropertyType_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BDF_PropertyType_"
  },
  {
    "label": "BDF_PropertyRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BDF_PropertyRec_"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (# ifndef __FTBDF_H__ # define __FTBDF_H__ # include<ft2build . h> # include FT_FREETYPE_H # ifdef FREETYPE_H # error \" freetype . h of FreeType 1 has been loaded ! \" # error \" Please fix the directory search order for header files \" # error \" so that freetype . h of FreeType 2 is found first . \" # endif FT_BEGIN_HEADER typedef enum BDF_PropertyType_ { BDF_PROPERTY_TYPE_NONE = 0,BDF_PROPERTY_TYPE_ATOM = 1,BDF_PROPERTY_TYPE_INTEGER = 2,BDF_PROPERTY_TYPE_CARDINAL = 3 } BDF_PropertyType ; typedef struct BDF_PropertyRec_* BDF_Property ; typedef struct BDF_PropertyRec_ { BDF_PropertyType type ; union { const char* atom ; FT_Int32 integer ; FT_UInt32 cardinal ; } u ; } BDF_PropertyRec ;)",
    "insertText": "FT_EXPORT(FT_Error ) FT_Get_BDF_Charset_ID( FT_Face face, const char* *acharset_encoding, const char* *acharset_registry)"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_EXPORT(FT_Error ) FT_Get_BDF_Property( FT_Face face, const char* prop_name, BDF_PropertyRec *aproperty)"
  }
]