[
  {
    "label": "FOptionalVulkanDeviceExtensions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionalVulkanDeviceExtensions"
  },
  {
    "label": "FVulkanDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDevice"
  },
  {
    "label": "FVulkanRenderTargetLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRenderTargetLayout"
  },
  {
    "label": "FGfxPipelineDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGfxPipelineDesc"
  },
  {
    "label": "FVulkanPhysicalDeviceFeatures",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanPhysicalDeviceFeatures"
  },
  {
    "label": "FVulkanCmdBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCmdBuffer"
  },
  {
    "label": "EShaderPlatform",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShaderPlatform"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FVulkanDeviceExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDeviceExtension"
  },
  {
    "label": "FVulkanInstanceExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanInstanceExtension"
  },
  {
    "label": "FVulkanGenericPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanGenericPlatform"
  },
  {
    "label": "LoadVulkanInstanceFunctions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadVulkanInstanceFunctions(VkInstance inInstance)"
  },
  {
    "label": "ClearVulkanInstanceFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearVulkanInstanceFunctions()"
  },
  {
    "label": "GetInstanceExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstanceExtensions(FVulkanInstanceExtensionArray& OutExtensions)"
  },
  {
    "label": "GetDeviceExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceExtensions(FVulkanDevice* Device, FVulkanDeviceExtensionArray& OutExtensions)"
  },
  {
    "label": "CreateSurface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSurface(VkSurfaceKHR* OutSurface)"
  },
  {
    "label": "SetupFeatureLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupFeatureLevels(TArrayView<EShaderPlatform> ShaderPlatformForFeatureLevel)"
  },
  {
    "label": "GetFeatureLevel()",
    "kind": "Method",
    "detail": "Function (ERHIFeatureLevel::Type)",
    "insertText": "GetFeatureLevel(ERHIFeatureLevel::Type RequestedFeatureLevel)"
  },
  {
    "label": "WriteCrashMarkerWithoutExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteCrashMarkerWithoutExtensions(FVulkanCmdBuffer* CmdBuffer, VkBuffer DestBuffer, const TArrayView<uint32>& Entries, bool bAdding)"
  },
  {
    "label": "RestrictEnabledPhysicalDeviceFeatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestrictEnabledPhysicalDeviceFeatures(FVulkanPhysicalDeviceFeatures* InOutFeaturesToEnable)"
  },
  {
    "label": "Present()",
    "kind": "Method",
    "detail": "Function (VkResult)",
    "insertText": "Present(VkQueue Queue, VkPresentInfoKHR& PresentInfo)"
  },
  {
    "label": "CreateSwapchainKHR()",
    "kind": "Method",
    "detail": "Function (VkResult)",
    "insertText": "CreateSwapchainKHR(void* WindowHandle, VkPhysicalDevice PhysicalDevice, VkDevice Device, const VkSwapchainCreateInfoKHR* CreateInfo, const VkAllocationCallbacks* Allocator, VkSwapchainKHR* Swapchain)"
  },
  {
    "label": "DestroySwapchainKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySwapchainKHR(VkDevice Device, VkSwapchainKHR Swapchain, const VkAllocationCallbacks* Allocator)"
  },
  {
    "label": "PSOBinaryCacheMatches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PSOBinaryCacheMatches(FVulkanDevice* Device, const TArray<uint8>& DeviceCache)"
  },
  {
    "label": "CreatePSOBinaryCacheFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "CreatePSOBinaryCacheFilename(FVulkanDevice* Device, FString CacheFilename)"
  },
  {
    "label": "GetPSOCacheFilenames()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetPSOCacheFilenames()"
  },
  {
    "label": "SupportsProfileChecks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsProfileChecks()"
  },
  {
    "label": "GetVulkanProfileNameForFeatureLevel()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetVulkanProfileNameForFeatureLevel(ERHIFeatureLevel::Type FeatureLevel, bool bRaytracing)"
  }
]