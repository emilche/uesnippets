[
  {
    "label": "MockAudioSendStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockAudioSendStream"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef CALL_TEST_MOCK_AUDIO_SEND_STREAM_H_ # define CALL_TEST_MOCK_AUDIO_SEND_STREAM_H_ # include<memory> # include \" call / audio_send_stream . h \" # include \" test / gmock . h \" namespace webrtc { namespace test { class MockAudioSendStream : public AudioSendStream { public :)",
    "insertText": "MOCK_METHOD(const webrtc::AudioSendStream::Config&, GetConfig, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Reconfigure, (const Config& config), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Start, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Stop, (), (override))"
  },
  {
    "label": "SendAudioData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendAudioData(std::unique_ptr<webrtc::AudioFrame> audio_frame)"
  },
  {
    "label": "SendAudioDataForMock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendAudioDataForMock(audio_frame.get())"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(void, SendAudioDataForMock, (webrtc::AudioFrame*))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, SendTelephoneEvent, (int payload_type, int payload_frequency, int event, int duration_ms), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetMuted, (bool muted), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(Stats, GetStats, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(Stats, GetStats, (bool has_remote_tracks), (const, override))"
  }
]