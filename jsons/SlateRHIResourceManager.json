[
  {
    "label": "FSlateAtlasedTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAtlasedTextureResource"
  },
  {
    "label": "FSlateDynamicTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateDynamicTextureResource"
  },
  {
    "label": "FSlateMaterialResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateMaterialResource"
  },
  {
    "label": "FSlateUTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateUTextureResource"
  },
  {
    "label": "ISlateStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateStyle"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "FSlateVectorGraphicsCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateVectorGraphicsCache"
  },
  {
    "label": "FMaterialKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialKey"
  },
  {
    "label": "FDynamicResourceMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicResourceMap"
  },
  {
    "label": "FSlateRHIResourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRHIResourceManager"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FSlateTextureAtlasRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTextureAtlasRHI"
  },
  {
    "label": "FSlateTexture2DRHIRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTexture2DRHIRef"
  },
  {
    "label": "FMaterialKey()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" Textures / TextureAtlas . h \" # include \" UObject / GCObject . h \" # include \" UObject / ObjectKey . h \" # include \" Containers / Queue . h \" # include \" Rendering / ShaderResourceManager . h \" # include \" Rendering / RenderingCommon . h \" # include \" Rendering / DrawElements . h \" # include \" Materials / MaterialInterface . h \" # include \" Tickable . h \" # include \" SlateElementVertexBuffer . h \" class FSlateAtlasedTextureResource ; class FSlateDynamicTextureResource ; class FSlateMaterialResource ; class FSlateUTextureResource ; class ISlateStyle ; class UTexture ; class FSceneInterface ; class FSlateVectorGraphicsCache ; struct FMaterialKey { FObjectKey Material ; const FVector2f ImageSize ; int32 MaskKey ;)",
    "insertText": "FMaterialKey(const UMaterialInterface* InMaterial, const FVector2f InImageSize, int32 InMaskKey) : Material(InMaterial) , ImageSize(InImageSize) , MaskKey(InMaskKey)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FMaterialKey& Lhs, const FMaterialKey& Rhs)"
  },
  {
    "label": "FDynamicResourceMap()",
    "kind": "Method",
    "detail": "Function (} } ; struct FDynamicResourceMap { public :)",
    "insertText": "FDynamicResourceMap()"
  },
  {
    "label": "GetDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSlateDynamicTextureResource>)",
    "insertText": "GetDynamicTextureResource(FName ResourceName)"
  },
  {
    "label": "GetUTextureResource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSlateUTextureResource>)",
    "insertText": "GetUTextureResource(UTexture* TextureObject)"
  },
  {
    "label": "GetAtlasedTextureResource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSlateAtlasedTextureResource>)",
    "insertText": "GetAtlasedTextureResource(UTexture* InObject)"
  },
  {
    "label": "GetMaterialResource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSlateMaterialResource>)",
    "insertText": "GetMaterialResource(const FMaterialKey& InKey)"
  },
  {
    "label": "AddUTextureResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUTextureResource(UTexture* TextureObject, TSharedRef<FSlateUTextureResource> InResource)"
  },
  {
    "label": "RemoveUTextureResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUTextureResource(UTexture* TextureObject)"
  },
  {
    "label": "AddDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDynamicTextureResource(FName ResourceName, TSharedRef<FSlateDynamicTextureResource> InResource)"
  },
  {
    "label": "RemoveDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDynamicTextureResource(FName ResourceName)"
  },
  {
    "label": "AddMaterialResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMaterialResource(const FMaterialKey& InKey, TSharedRef<FSlateMaterialResource> InResource)"
  },
  {
    "label": "RemoveMaterialResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMaterialResource(const FMaterialKey& InKey)"
  },
  {
    "label": "AddAtlasedTextureResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAtlasedTextureResource(UTexture* TextureObject, TSharedRef<FSlateAtlasedTextureResource> InResource)"
  },
  {
    "label": "RemoveAtlasedTextureResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAtlasedTextureResource(UTexture* TextureObject)"
  },
  {
    "label": "FindOrCreateAtlasedProxy()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "FindOrCreateAtlasedProxy(UObject* InObject)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "EmptyUTextureResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyUTextureResources()"
  },
  {
    "label": "EmptyMaterialResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyMaterialResources()"
  },
  {
    "label": "EmptyDynamicTextureResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyDynamicTextureResources()"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "GetNumObjectResources()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumObjectResources()"
  },
  {
    "label": "RemoveExpiredTextureResources()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "RemoveExpiredTextureResources(TArray< TSharedPtr<FSlateUTextureResource> >& RemovedTextures)"
  },
  {
    "label": "RemoveExpiredMaterialResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveExpiredMaterialResources(TArray< TSharedPtr<FSlateMaterialResource> >& RemovedMaterials)"
  },
  {
    "label": "FSlateRHIResourceManager()",
    "kind": "Method",
    "detail": "Function (private : TMap<FName,TSharedPtr<FSlateDynamicTextureResource>> NativeTextureMap ; typedef TMap<TWeakObjectPtr<UTexture>,TSharedPtr<FSlateUTextureResource>> FTextureResourceMap ; FTextureResourceMap TextureMap ; typedef TMap<FMaterialKey,TSharedPtr<FSlateMaterialResource>> FMaterialResourceMap ; FMaterialResourceMap MaterialMap ; typedef TMap<TWeakObjectPtr<UObject>,TSharedPtr<FSlateAtlasedTextureResource>> FObjectResourceMap ; FObjectResourceMap ObjectMap ; } ; class FSlateRHIResourceManager : public ISlateAtlasProvider,public FSlateShaderResourceManager,public FTickableGameObject { public :)",
    "insertText": "FSlateRHIResourceManager()"
  },
  {
    "label": "GetNumAtlasPages()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumAtlasPages()"
  },
  {
    "label": "GetAtlasPageResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResource*)",
    "insertText": "GetAtlasPageResource(const int32 InIndex)"
  },
  {
    "label": "IsAtlasPageResourceAlphaOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAtlasPageResourceAlphaOnly(const int32 InIndex)"
  },
  {
    "label": "GetAtlasSlotInfoAtPosition()",
    "kind": "Method",
    "detail": "Function (# if WITH_ATLAS_DEBUGGING FAtlasSlotInfo)",
    "insertText": "GetAtlasSlotInfoAtPosition(FIntPoint InPosition, int32 AtlasIndex)"
  },
  {
    "label": "GetTickableTickType()",
    "kind": "Method",
    "detail": "Function (# endif ETickableTickType)",
    "insertText": "GetTickableTickType()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Tick(float DeltaSeconds)"
  },
  {
    "label": "LoadUsedTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadUsedTextures()"
  },
  {
    "label": "LoadStyleResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadStyleResources(const ISlateStyle& Style)"
  },
  {
    "label": "UpdateTextureAtlases()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTextureAtlases()"
  },
  {
    "label": "ConditionalFlushAtlases()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalFlushAtlases()"
  },
  {
    "label": "GetShaderResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "GetShaderResource(const FSlateBrush& InBrush, FVector2f LocalSize, float DrawScale)"
  },
  {
    "label": "GetFontShaderResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResource*)",
    "insertText": "GetFontShaderResource(int32 InTextureAtlasIndex, FSlateShaderResource* FontTextureAtlas, const class UObject* FontMaterial)"
  },
  {
    "label": "GetTextureAtlasProvider()",
    "kind": "Method",
    "detail": "Function (ISlateAtlasProvider*)",
    "insertText": "GetTextureAtlasProvider()"
  },
  {
    "label": "MakeDynamicUTextureResource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSlateUTextureResource>)",
    "insertText": "MakeDynamicUTextureResource(UTexture* InTextureObject)"
  },
  {
    "label": "MakeDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSlateDynamicTextureResource>)",
    "insertText": "MakeDynamicTextureResource(FName ResourceName, uint32 Width, uint32 Height, const TArray< uint8 >& Bytes)"
  },
  {
    "label": "MakeDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSlateDynamicTextureResource>)",
    "insertText": "MakeDynamicTextureResource(FName ResourceName, FSlateTextureDataRef TextureData)"
  },
  {
    "label": "GetDynamicTextureResourceByName()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSlateDynamicTextureResource>)",
    "insertText": "GetDynamicTextureResourceByName(FName ResourceName)"
  },
  {
    "label": "ContainsTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsTexture(const FName& ResourceName)"
  },
  {
    "label": "ReleaseDynamicResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseDynamicResource(const FSlateBrush& InBrush)"
  },
  {
    "label": "LoadTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadTexture(const FName& TextureName, const FString& ResourcePath, uint32& Width, uint32& Height, TArray<uint8>& DecodedImage)"
  },
  {
    "label": "LoadTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadTexture(const FSlateBrush& InBrush, uint32& Width, uint32& Height, TArray<uint8>& DecodedImage)"
  },
  {
    "label": "ReloadTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReloadTextures()"
  },
  {
    "label": "GetSceneCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSceneCount()"
  },
  {
    "label": "GetSceneAt()",
    "kind": "Method",
    "detail": "Function (FSceneInterface*)",
    "insertText": "GetSceneAt(int32 Index)"
  },
  {
    "label": "AddSceneAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSceneAt(FSceneInterface* Scene, int32 Index)"
  },
  {
    "label": "ClearScenes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearScenes()"
  },
  {
    "label": "GetResourceCriticalSection()",
    "kind": "Method",
    "detail": "Function (FCriticalSection*)",
    "insertText": "GetResourceCriticalSection()"
  },
  {
    "label": "OnPreGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreGarbageCollect()"
  },
  {
    "label": "OnPostGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostGarbageCollect()"
  },
  {
    "label": "TryToCleanupExpiredResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryToCleanupExpiredResources(bool bForceCleanup)"
  },
  {
    "label": "CleanupExpiredResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupExpiredResources()"
  },
  {
    "label": "DeleteResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteResources()"
  },
  {
    "label": "DeleteUObjectBrushResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteUObjectBrushResources()"
  },
  {
    "label": "DeleteBrushResourcesCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteBrushResourcesCommand()"
  },
  {
    "label": "CreateTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTextures(const TArray< const FSlateBrush* >& Resources)"
  },
  {
    "label": "GenerateTextureResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "GenerateTextureResource(const FNewTextureInfo& Info, const FName TextureName)"
  },
  {
    "label": "FindOrCreateDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "FindOrCreateDynamicTextureResource(const FSlateBrush& InBrush)"
  },
  {
    "label": "GetMaterialResource()",
    "kind": "Method",
    "detail": "Function (FSlateMaterialResource*)",
    "insertText": "GetMaterialResource(const UObject* InMaterial, const FSlateBrush* InBrush, FSlateShaderResource* TextureMask, int32 InMaskKey)"
  },
  {
    "label": "GetVectorResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "GetVectorResource(const FSlateBrush& Brush, FVector2f LocalSize, float DrawScale)"
  },
  {
    "label": "OnAppExit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAppExit()"
  },
  {
    "label": "GetBadResourceTexture()",
    "kind": "Method",
    "detail": "Function (UTexture*)",
    "insertText": "GetBadResourceTexture()"
  }
]