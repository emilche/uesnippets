[
  {
    "label": "ISpeedRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISpeedRecorder"
  },
  {
    "label": "FRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecord"
  },
  {
    "label": "FSpeedRecorderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpeedRecorderFactory"
  },
  {
    "label": "FRecord()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" namespace BuildPatchServices { class ISpeedRecorder { public : struct FRecord { public :)",
    "insertText": "FRecord()"
  },
  {
    "label": "ISpeedRecorder()",
    "kind": "Method",
    "detail": "Function (public : uint64 CyclesStart ; uint64 CyclesEnd ; uint64 Size ; } ; public : ~)",
    "insertText": "ISpeedRecorder()"
  },
  {
    "label": "AddRecord()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "AddRecord(const FRecord& Record)"
  },
  {
    "label": "GetAverageSpeed()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetAverageSpeed(float Seconds)"
  },
  {
    "label": "GetPeakSpeed()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetPeakSpeed()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FSpeedRecorderFactory { public : ISpeedRecorder*)",
    "insertText": "Create()"
  }
]