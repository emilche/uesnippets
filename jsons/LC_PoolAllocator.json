[
  {
    "label": "PoolAllocatorSingleThreadPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PoolAllocatorSingleThreadPolicy"
  },
  {
    "label": "PoolAllocatorMultiThreadPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PoolAllocatorMultiThreadPolicy"
  },
  {
    "label": "PoolAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PoolAllocator"
  },
  {
    "label": "BlockHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BlockHeader"
  },
  {
    "label": "Enter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" LC_AllocatorStats . h \" # include \" LC_CriticalSection . h \" struct PoolAllocatorSingleThreadPolicy { void)",
    "insertText": "Enter(void)"
  },
  {
    "label": "Leave()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Leave(void)"
  },
  {
    "label": "Enter()",
    "kind": "Method",
    "detail": "Function (m_cs .)",
    "insertText": "Enter()"
  },
  {
    "label": "Leave()",
    "kind": "Method",
    "detail": "Function (m_cs .)",
    "insertText": "Leave()"
  },
  {
    "label": "PoolAllocator()",
    "kind": "Method",
    "detail": "Function (} private : CriticalSection m_cs ; } ; template<T> class PoolAllocator { public :)",
    "insertText": "PoolAllocator(const char* name, size_t maxElementSize, size_t maxAlignment, size_t growSize)"
  },
  {
    "label": "PoolAllocator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "PoolAllocator(void)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "Allocate(size_t size, size_t alignment)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(void* ptr, size_t size)"
  },
  {
    "label": "Purge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Purge(void)"
  },
  {
    "label": "PrintStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintStats(void)"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (const AllocatorStats&)",
    "insertText": "GetStats(void)"
  }
]