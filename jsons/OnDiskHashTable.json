[
  {
    "label": "ExampleInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExampleInfo"
  },
  {
    "label": "OnDiskChainedHashTableGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnDiskChainedHashTableGenerator"
  },
  {
    "label": "Item",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Item"
  },
  {
    "label": "Bucket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Bucket"
  },
  {
    "label": "ExampleLookupInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExampleLookupInfo"
  },
  {
    "label": "OnDiskChainedHashTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnDiskChainedHashTable"
  },
  {
    "label": "iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "iterator"
  },
  {
    "label": "OnDiskIterableChainedHashTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnDiskIterableChainedHashTable"
  },
  {
    "label": "key_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "key_iterator"
  },
  {
    "label": "data_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data_iterator"
  },
  {
    "label": "ComputeHash()",
    "kind": "Method",
    "detail": "Function (hash_value_type)",
    "insertText": "ComputeHash(key_type_ref Key)"
  },
  {
    "label": "EmitKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitKey(raw_ostream &Out, key_type_ref Key,\n///                       offset_type KeyLen)"
  },
  {
    "label": "EmitData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitData(raw_ostream &Out, key_type_ref Key,\n///                        data_type_ref Data, offset_type DataLen)"
  },
  {
    "label": "Emit()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Emit(Out, InfoObj)"
  },
  {
    "label": "LE()",
    "kind": "Method",
    "detail": "Function (endian::Writer<little>)",
    "insertText": "LE(Out)"
  },
  {
    "label": "EqualKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EqualKey(internal_key_type &Key1, internal_key_type &Key2)"
  },
  {
    "label": "ComputeHash()",
    "kind": "Method",
    "detail": "Function (hash_value_type)",
    "insertText": "ComputeHash(internal_key_type &IKey)"
  },
  {
    "label": "ReadData()",
    "kind": "Method",
    "detail": "Function (data_type)",
    "insertText": "ReadData(StringRef Key, const unsigned char *Buffer,\n///                      offset_type DataLen)"
  },
  {
    "label": "find_hashed()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "find_hashed(IKey, KeyHash, InfoPtr)"
  },
  {
    "label": "iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "iterator()"
  },
  {
    "label": "iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "iterator(X, Items + L.first, L.second, InfoPtr)"
  },
  {
    "label": "iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "iterator()"
  },
  {
    "label": "iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "iterator()"
  },
  {
    "label": "key_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "key_iterator()"
  },
  {
    "label": "data_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "data_iterator()"
  }
]