[
  {
    "label": "FEventGraphColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventGraphColumn"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FEventGraphColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventGraphColumn"
  },
  {
    "label": "FEventGraphColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventGraphColumn"
  },
  {
    "label": "SComboBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboBox"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "shows",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "shows"
  },
  {
    "label": "type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "type"
  },
  {
    "label": "FEventGraphColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventGraphColumn"
  },
  {
    "label": "FEventGraphColumns",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEventGraphColumns"
  },
  {
    "label": "IEventGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEventGraph"
  },
  {
    "label": "SEventGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEventGraph"
  },
  {
    "label": "ESelectedEventTypes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ESelectedEventTypes"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EEventHistoryTypes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EEventHistoryTypes"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FEventGraphState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventGraphState"
  },
  {
    "label": "FCulledTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCulledTag"
  },
  {
    "label": "FFilteredTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFilteredTag"
  },
  {
    "label": "FFilterByThreadName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFilterByThreadName"
  },
  {
    "label": "FEventGraphState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventGraphState"
  },
  {
    "label": "FEventGraphState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventGraphState"
  },
  {
    "label": "FEventPtrAndMisc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEventPtrAndMisc"
  },
  {
    "label": "ToName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ToName( const EEventGraphViewModes::Type EventGraphViewMode )"
  },
  {
    "label": "ToDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ToDescription( const EEventGraphViewModes::Type EventGraphViewMode )"
  },
  {
    "label": "ToBrushName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "ToBrushName( const Type EventGraphViewMode )"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "ExpandCulledEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandCulledEvents( FEventGraphSamplePtr EventPtr )"
  },
  {
    "label": "GetWidgetForEventGraphTypes()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetWidgetForEventGraphTypes()"
  },
  {
    "label": "GetWidgetForEventGraphViewModes()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetWidgetForEventGraphViewModes()"
  },
  {
    "label": "GetWidgetBoxForOptions()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetWidgetBoxForOptions()"
  },
  {
    "label": "GetToggleButtonForEventGraphType()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetToggleButtonForEventGraphType( const EEventGraphTypes::Type EventGraphType, const FName BrushName )"
  },
  {
    "label": "GetToggleButtonForEventGraphViewMode()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetToggleButtonForEventGraphViewMode( const EEventGraphViewModes::Type EventGraphViewMode )"
  },
  {
    "label": "ProfilerManager_OnViewModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerManager_OnViewModeChanged( EProfilerViewMode NewViewMode )"
  },
  {
    "label": "EventGraph_OnGetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventGraph_OnGetChildren( FEventGraphSamplePtr InParent, TArray< FEventGraphSamplePtr >& out_Children )"
  },
  {
    "label": "EventGraph_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventGraph_OnSelectionChanged( FEventGraphSamplePtr SelectedItem, ESelectInfo::Type SelectInfo )"
  },
  {
    "label": "EventGraph_OnExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventGraph_OnExpansionChanged( FEventGraphSamplePtr SelectedItem, bool bIsExpanded )"
  },
  {
    "label": "TreeView_SetItemsExpansion_Recurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeView_SetItemsExpansion_Recurrent( TArray<FEventGraphSamplePtr>& InEventGraphSamples, const bool bShouldExpand )"
  },
  {
    "label": "SetHierarchicalSelectedEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHierarchicalSelectedEvents( const TArray<FEventGraphSamplePtr>& HierarchicalSelectedEvents )"
  },
  {
    "label": "SetHierarchicalExpandedEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHierarchicalExpandedEvents( const TSet<FEventGraphSamplePtr>& HierarchicalExpandedEvents )"
  },
  {
    "label": "ShowEventsInViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowEventsInViewMode( const TArray<FEventGraphSamplePtr>& EventsToSynchronize, const EEventGraphViewModes::Type NewViewMode )"
  },
  {
    "label": "ScrollToTheSlowestSelectedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollToTheSlowestSelectedEvent( EEventPropertyIndex ColumnIndex )"
  },
  {
    "label": "CreateEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEvents()"
  },
  {
    "label": "SortEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortEvents()"
  },
  {
    "label": "TreeView_Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeView_Refresh()"
  },
  {
    "label": "SetTreeItemsForViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTreeItemsForViewMode( const EEventGraphViewModes::Type NewViewMode, EEventGraphTypes::Type NewEventGraphType )"
  },
  {
    "label": "EventGraphViewMode_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventGraphViewMode_OnCheckStateChanged( ECheckBoxState NewRadioState, const EEventGraphViewModes::Type InViewMode )"
  },
  {
    "label": "EventGraphType_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventGraphType_OnCheckStateChanged( ECheckBoxState NewRadioState, const EEventGraphTypes::Type NewEventGraphType )"
  },
  {
    "label": "FilteringSearchBox_OnTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilteringSearchBox_OnTextChanged( const FText& InFilterText )"
  },
  {
    "label": "FilteringSearchBox_OnTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilteringSearchBox_OnTextCommitted( const FText& NewText, ETextCommit::Type CommitType )"
  },
  {
    "label": "OnAggressiveFilteringToggled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAggressiveFilteringToggled(ECheckBoxState InState)"
  },
  {
    "label": "EventGraph_BuildSortByMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventGraph_BuildSortByMenu( FMenuBuilder& MenuBuilder )"
  },
  {
    "label": "EventGraph_BuildViewColumnMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventGraph_BuildViewColumnMenu( FMenuBuilder& MenuBuilder )"
  },
  {
    "label": "ExpandHotPath_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ExpandHotPath_OnClicked()"
  },
  {
    "label": "HighlightHotPath_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HighlightHotPath_OnCheckStateChanged( ECheckBoxState InState )"
  },
  {
    "label": "InitializeAndShowHeaderColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeAndShowHeaderColumns()"
  },
  {
    "label": "TreeViewHeaderRow_OnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeViewHeaderRow_OnSortModeChanged( const EColumnSortPriority::Type SortPriority, const FName& ColumnID, const EColumnSortMode::Type SortMode )"
  },
  {
    "label": "SetSortModeForColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSortModeForColumn( const FName& ColumnID, EColumnSortMode::Type SortMode )"
  },
  {
    "label": "TreeViewHeaderRow_GenerateColumnMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "TreeViewHeaderRow_GenerateColumnMenu( const FEventGraphColumn& Column )"
  },
  {
    "label": "EventGraphTableRow_SetHoveredTableCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventGraphTableRow_SetHoveredTableCell( const FName ColumnID, const FEventGraphSamplePtr EventPtr )"
  },
  {
    "label": "TreeViewHeaderRow_ShowColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeViewHeaderRow_ShowColumn( const FName ColumnID )"
  },
  {
    "label": "TreeViewHeaderRow_CreateColumnArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeViewHeaderRow_CreateColumnArgs( const uint32 ColumnIndex )"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "Map_SelectAllFrames_Global()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Map_SelectAllFrames_Global()"
  },
  {
    "label": "SelectAllFrames_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllFrames_Execute()"
  },
  {
    "label": "ContextMenu_ExecuteDummy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ExecuteDummy( const FName ActionName )"
  },
  {
    "label": "ContextMenu_ExpandHotPath_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ExpandHotPath_Execute()"
  },
  {
    "label": "ContextMenu_CopySelectedToClipboard_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_CopySelectedToClipboard_Execute()"
  },
  {
    "label": "ContextMenu_SelectStack_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_SelectStack_Execute()"
  },
  {
    "label": "ContextMenu_SortByColumn_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_SortByColumn_Execute( const FName ColumnID )"
  },
  {
    "label": "ContextMenu_SortByColumn_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_SortByColumn_IsChecked( const FName ColumnID )"
  },
  {
    "label": "ContextMenu_ToggleColumn_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ToggleColumn_Execute( const FName ColumnID )"
  },
  {
    "label": "ContextMenu_ToggleColumn_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ToggleColumn_IsChecked( const FName ColumnID )"
  },
  {
    "label": "ContextMenu_SortMode_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_SortMode_Execute( const EColumnSortMode::Type InSortMode )"
  },
  {
    "label": "ContextMenu_SortMode_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_SortMode_IsChecked( const EColumnSortMode::Type InSortMode )"
  },
  {
    "label": "ContextMenu_ResetColumns_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ResetColumns_Execute()"
  },
  {
    "label": "HeaderMenu_SortMode_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HeaderMenu_SortMode_Execute( const FName ColumnID, const EColumnSortMode::Type InSortMode )"
  },
  {
    "label": "HeaderMenu_SortMode_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HeaderMenu_SortMode_IsChecked( const FName ColumnID, const EColumnSortMode::Type InSortMode )"
  },
  {
    "label": "HeaderMenu_HideColumn_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HeaderMenu_HideColumn_Execute( const FName ColumnID )"
  },
  {
    "label": "SetRoot_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRoot_Execute()"
  },
  {
    "label": "ClearHistory_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearHistory_Execute()"
  },
  {
    "label": "ShowSelectedEventsInViewMode_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowSelectedEventsInViewMode_Execute(EEventGraphViewModes::Type NewViewMode)"
  },
  {
    "label": "FilterOutByProperty_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterOutByProperty_Execute( const FEventGraphSamplePtr EventPtr, const FName PropertyName, const bool bReset )"
  },
  {
    "label": "CullByProperty_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CullByProperty_Execute( const FEventGraphSamplePtr EventPtr, const FName PropertyName, const bool bReset )"
  },
  {
    "label": "HistoryList_GoTo_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HistoryList_GoTo_Execute( int32 StateIndex )"
  },
  {
    "label": "GetEventsForChangingExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetEventsForChangingExpansion( TArray<FEventGraphSamplePtr>& out_Events, const ESelectedEventTypes::Type SelectedEventType )"
  },
  {
    "label": "SetExpansionForEvents_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExpansionForEvents_Execute( const ESelectedEventTypes::Type SelectedEventType, bool bShouldExpand )"
  },
  {
    "label": "FEventGraphState()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "FEventGraphState(*this, UniqueLeafs)"
  },
  {
    "label": "CreateOneToOneMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateOneToOneMapping()"
  },
  {
    "label": "SetNewEventGraphState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNewEventGraphState( const FEventGraphDataRef AverageEventGraph, const FEventGraphDataRef MaximumEventGraph, bool bInitial )"
  },
  {
    "label": "SaveCurrentEventGraphState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveCurrentEventGraphState()"
  },
  {
    "label": "RestoreEventGraphStateFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreEventGraphStateFrom( const FEventGraphStateRef EventGraphState, const bool bRestoredFromHistoryEvent = true )"
  },
  {
    "label": "SwitchToEventGraphState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwitchToEventGraphState( int32 StateIndex )"
  },
  {
    "label": "SetEventGraphFromStateInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEventGraphFromStateInternal( const FEventGraphStateRef& EventGraphState )"
  },
  {
    "label": "HistoryBack_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HistoryBack_OnClicked()"
  },
  {
    "label": "HistoryForward_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HistoryForward_OnClicked()"
  },
  {
    "label": "GetVerticalBoxForFunctionDetails()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SVerticalBox>)",
    "insertText": "GetVerticalBoxForFunctionDetails( TSharedPtr<SVerticalBox>& out_VerticalBoxTopFuncions, const FText& Caption )"
  },
  {
    "label": "GetVerticalBoxForCurrentFunction()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SVerticalBox>)",
    "insertText": "GetVerticalBoxForCurrentFunction()"
  },
  {
    "label": "UpdateFunctionDetailsForEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFunctionDetailsForEvent( FEventGraphSamplePtr SelectedEvent )"
  },
  {
    "label": "DisableFunctionDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableFunctionDetails()"
  },
  {
    "label": "UpdateFunctionDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFunctionDetails()"
  },
  {
    "label": "RecreateWidgetsForTopEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecreateWidgetsForTopEvents( const TSharedPtr<SVerticalBox>& DestVerticalBox, const TArray<FEventPtrAndMisc>& TopEvents )"
  },
  {
    "label": "GenerateCallerCalleeGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCallerCalleeGraph( FEventGraphSamplePtr SelectedEvent )"
  },
  {
    "label": "GenerateTopEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateTopEvents( const TSet< FEventGraphSamplePtr >& EventPtrSet, TArray<FEventPtrAndMisc>& out_Results )"
  },
  {
    "label": "CalculateEventWeights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateEventWeights( TArray<FEventPtrAndMisc>& Events )"
  },
  {
    "label": "GetEventDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEventDescription( FEventGraphSamplePtr EventPtr, float Pct, const bool bSimple )"
  },
  {
    "label": "GetContentForEvent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SHorizontalBox>)",
    "insertText": "GetContentForEvent( FEventGraphSamplePtr EventPtr, float Pct, const bool bSimple )"
  },
  {
    "label": "CallingCalledFunctionButton_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "CallingCalledFunctionButton_OnClicked( FEventGraphSamplePtr EventPtr )"
  },
  {
    "label": "FillThreadFilterOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillThreadFilterOptions()"
  },
  {
    "label": "OnThreadFilterChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnThreadFilterChanged( TSharedPtr<FName> NewThread, ESelectInfo::Type SelectionType )"
  },
  {
    "label": "GetWidgetForThreadFilter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetWidgetForThreadFilter()"
  }
]