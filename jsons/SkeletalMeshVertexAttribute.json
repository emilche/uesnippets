[
  {
    "label": "FSkeletalMeshAttributeVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshAttributeVertexBuffer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSkeletalMeshVertexAttributeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshVertexAttributeInfo"
  },
  {
    "label": "FSkeletalMeshModelVertexAttribute",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshModelVertexAttribute"
  },
  {
    "label": "FSkeletalMeshVertexAttributeRenderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshVertexAttributeRenderData"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" UObject / PerPlatformProperties . h \" # include \" SkeletalMeshVertexAttribute . generated . h \" class FSkeletalMeshAttributeVertexBuffer ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Float)",
    "insertText": "UMETA(DisplayName=\"Float\", ToolTip=\"Store the vertex attribute values as a 32-bit floating point (float)\"), HalfFloat UMETA(DisplayName=\"Half-float\", ToolTip=\"Store the vertex attribute values as a 16-bit floating point (half)\"), NUInt8 UMETA(DisplayName=\"8-bit Unsigned Normalized\", ToolTip=\"Quantize and store the vertex attribute values as an unsigned normalized 8-bit integer. Values outside the [0.0 - 1.0] range are clamped.\")"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category=\"Vertex Attributes\")"
  },
  {
    "label": "IsEnabledForRender()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabledForRender()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; # if WITH_EDITORONLY_DATA struct FSkeletalMeshModelVertexAttribute { ESkeletalMeshVertexAttributeDataType DataType = ESkeletalMeshVertexAttributeDataType::Float ; TArray<float> Values ; int32 ComponentCount ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FSkeletalMeshModelVertexAttribute& Attribute)"
  },
  {
    "label": "FSkeletalMeshVertexAttributeRenderData()",
    "kind": "Method",
    "detail": "Function (} ; # endif struct FSkeletalMeshVertexAttributeRenderData { ~)",
    "insertText": "FSkeletalMeshVertexAttributeRenderData()"
  },
  {
    "label": "AddAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddAttribute(const FName InName, const ESkeletalMeshVertexAttributeDataType InDataType, const int32 InNumVertices, const int32 InComponentCount, const TArray<float>& InValues)"
  },
  {
    "label": "GetAttributeBuffer()",
    "kind": "Method",
    "detail": "Function (FSkeletalMeshAttributeVertexBuffer*)",
    "insertText": "GetAttributeBuffer(FName InName)"
  },
  {
    "label": "InitResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResources()"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUp()"
  },
  {
    "label": "GetResourceSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetResourceSize()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FSkeletalMeshVertexAttributeRenderData& RenderData)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (RenderData .)",
    "insertText": "Serialize(Ar)"
  }
]