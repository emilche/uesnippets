[
  {
    "label": "FDeviceProcessesProcessTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeviceProcessesProcessTreeNode"
  },
  {
    "label": "FDeviceProcessesProcessTreeNode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Interfaces / ITargetDevice . h \" # include \" Templates / SharedPointer . h \" class FDeviceProcessesProcessTreeNode ; class FDeviceProcessesProcessTreeNode { public :)",
    "insertText": "FDeviceProcessesProcessTreeNode(const FTargetDeviceProcessInfo& InProcessInfo) : ProcessInfo(InProcessInfo)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "AddChild(const TSharedPtr<FDeviceProcessesProcessTreeNode>& Child)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Children .)",
    "insertText": "Add(Child)"
  },
  {
    "label": "ClearChildren()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClearChildren()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (Children .)",
    "insertText": "Reset()"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (} const TArray<TSharedPtr<FDeviceProcessesProcessTreeNode>>&)",
    "insertText": "GetChildren()"
  }
]