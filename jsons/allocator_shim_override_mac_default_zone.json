[
  {
    "label": "PartitionAllocMallocHookOnBeforeForkInParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PartitionAllocMallocHookOnBeforeForkInParent()"
  },
  {
    "label": "PartitionAllocMallocHookOnAfterForkInParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PartitionAllocMallocHookOnAfterForkInParent()"
  },
  {
    "label": "PartitionAllocMallocHookOnAfterForkInChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PartitionAllocMallocHookOnAfterForkInChild()"
  },
  {
    "label": "ShimGetSizeEstimate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShimGetSizeEstimate(ptr, nullptr)"
  },
  {
    "label": "ShimMalloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShimMalloc(size, nullptr)"
  },
  {
    "label": "ShimCalloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShimCalloc(n, size, nullptr)"
  },
  {
    "label": "ShimValloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShimValloc(size, nullptr)"
  },
  {
    "label": "ShimFree()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShimFree(ptr, nullptr)"
  },
  {
    "label": "ShimRealloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShimRealloc(ptr, size, nullptr)"
  },
  {
    "label": "ShimMemalign()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShimMemalign(alignment, size, nullptr)"
  },
  {
    "label": "ShimFreeDefiniteSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShimFreeDefiniteSize(ptr, size, nullptr)"
  },
  {
    "label": "ShimBatchMalloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShimBatchMalloc(size, results, num_requested, nullptr)"
  },
  {
    "label": "ShimBatchFree()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShimBatchFree(to_be_freed, num, nullptr)"
  }
]