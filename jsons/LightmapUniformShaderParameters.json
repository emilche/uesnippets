[
  {
    "label": "FLightCacheInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightCacheInterface"
  },
  {
    "label": "FLightmapSceneShaderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightmapSceneShaderData"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineTypes . h \" # include \" RenderResource . h \" # include \" ShaderParameters . h \" # include \" UniformBuffer . h \" # include \" Containers / StaticArray . h \" class FLightCacheInterface ; const int32 MAX_NUM_LIGHTMAP_COEF = 2 ;)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FPrecomputedLightingUniformParameters, ENGINE_API) SHADER_PARAMETER(FVector4f, StaticShadowMapMasks) SHADER_PARAMETER(FVector4f, InvUniformPenumbraSizes) SHADER_PARAMETER(FVector4f, LightMapCoordinateScaleBias) SHADER_PARAMETER(FVector4f, ShadowMapCoordinateScaleBias) SHADER_PARAMETER_ARRAY_EX(FVector4f, LightMapScale, [MAX_NUM_LIGHTMAP_COEF], EShaderPrecisionModifier::Half) SHADER_PARAMETER_ARRAY_EX(FVector4f, LightMapAdd, [MAX_NUM_LIGHTMAP_COEF], EShaderPrecisionModifier::Half) SHADER_PARAMETER_ARRAY(FUintVector4, LightmapVTPackedPageTableUniform, [2]) SHADER_PARAMETER_ARRAY(FUintVector4, LightmapVTPackedUniform, [5]) END_GLOBAL_SHADER_PARAMETER_STRUCT() ENGINE_API void GetDefaultPrecomputedLightingParameters(FPrecomputedLightingUniformParameters& Parameters)"
  },
  {
    "label": "GetPrecomputedLightingParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPrecomputedLightingParameters(ERHIFeatureLevel::Type FeatureLevel, FPrecomputedLightingUniformParameters& Parameters, const FLightCacheInterface* LCI)"
  },
  {
    "label": "FLightmapSceneShaderData()",
    "kind": "Method",
    "detail": "Function (struct FLightmapSceneShaderData { enum { DataStrideInFloat4s = 1 5 } ; TStaticArray<FVector4f,DataStrideInFloat4s> Data ;)",
    "insertText": "FLightmapSceneShaderData() : Data(InPlace, NoInit)"
  },
  {
    "label": "GetDefaultPrecomputedLightingParameters()",
    "kind": "Method",
    "detail": "Function (FPrecomputedLightingUniformParameters ShaderParameters ;)",
    "insertText": "GetDefaultPrecomputedLightingParameters(ShaderParameters)"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(ShaderParameters)"
  },
  {
    "label": "FLightmapSceneShaderData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLightmapSceneShaderData(const FPrecomputedLightingUniformParameters& ShaderParameters) : Data(InPlace, NoInit)"
  },
  {
    "label": "FLightmapSceneShaderData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLightmapSceneShaderData(const class FLightCacheInterface* LCI, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(const FPrecomputedLightingUniformParameters& ShaderParameters)"
  }
]