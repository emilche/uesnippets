[
  {
    "label": "DagInit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DagInit"
  },
  {
    "label": "Init",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Init"
  },
  {
    "label": "Record",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Record"
  },
  {
    "label": "SetTheory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SetTheory"
  },
  {
    "label": "Operator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Operator"
  },
  {
    "label": "Expander",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Expander"
  },
  {
    "label": "anchor()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_TABLEGEN_SETTHEORY_H # define LLVM_TABLEGEN_SETTHEORY_H # include \" llvm / ADT / ArrayRef . h \" # include \" llvm / ADT / SetVector . h \" # include \" llvm / ADT / StringMap . h \" # include \" llvm / Support / SMLoc . h \" # include<map> # include<vector> namespace llvm { class DagInit ; class Init ; class Record ; class SetTheory { public : typedef std::vector<Record*> RecVec ; typedef SmallSetVector<Record*,1 6> RecSet ; class Operator { void)",
    "insertText": "anchor()"
  },
  {
    "label": "Operator()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "Operator()"
  },
  {
    "label": "apply()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "apply(SetTheory&, DagInit *Expr, RecSet &Elts, ArrayRef<SMLoc> Loc)"
  },
  {
    "label": "Expander()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "Expander()"
  },
  {
    "label": "expand()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "expand(SetTheory&, Record*, RecSet &Elts)"
  },
  {
    "label": "SetTheory()",
    "kind": "Method",
    "detail": "Function (} ; private : typedef std::map<Record*,RecVec> ExpandMap ; ExpandMap Expansions ; StringMap<std::unique_ptr<Operator>> Operators ; StringMap<std::unique_ptr<Expander>> Expanders ; public :)",
    "insertText": "SetTheory()"
  },
  {
    "label": "addExpander()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addExpander(StringRef ClassName, std::unique_ptr<Expander>)"
  },
  {
    "label": "addFieldExpander()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addFieldExpander(StringRef ClassName, StringRef FieldName)"
  },
  {
    "label": "addOperator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addOperator(StringRef Name, std::unique_ptr<Operator>)"
  },
  {
    "label": "evaluate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "evaluate(Init *Expr, RecSet &Elts, ArrayRef<SMLoc> Loc)"
  },
  {
    "label": "evaluate()",
    "kind": "Method",
    "detail": "Function (template<Iter> void)",
    "insertText": "evaluate(Iter begin, Iter end, RecSet &Elts, ArrayRef<SMLoc> Loc)"
  },
  {
    "label": "expand()",
    "kind": "Method",
    "detail": "Function (} const RecVec*)",
    "insertText": "expand(Record *Set)"
  }
]