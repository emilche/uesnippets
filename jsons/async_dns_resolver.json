[
  {
    "label": "AsyncDnsResolverResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsyncDnsResolverResult"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "AsyncDnsResolverFactoryInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsyncDnsResolverFactoryInterface"
  },
  {
    "label": "AsyncDnsResolverResult()",
    "kind": "Method",
    "detail": "Function (# ifndef API_ASYNC_DNS_RESOLVER_H_ # define API_ASYNC_DNS_RESOLVER_H_ # include<functional> # include<memory> # include \" rtc_base / checks . h \" # include \" rtc_base / socket_address . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { class AsyncDnsResolverResult { public : ~)",
    "insertText": "AsyncDnsResolverResult()"
  },
  {
    "label": "GetResolvedAddress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetResolvedAddress(int family, rtc::SocketAddress* addr)"
  },
  {
    "label": "GetError()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetError()"
  },
  {
    "label": "AsyncDnsResolverInterface()",
    "kind": "Method",
    "detail": "Function (} ; class RTC_EXPORT AsyncDnsResolverInterface { public : ~)",
    "insertText": "AsyncDnsResolverInterface()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const rtc::SocketAddress& addr, std::function<void()> callback)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const rtc::SocketAddress& addr, int family, std::function<void()> callback)"
  },
  {
    "label": "result()",
    "kind": "Method",
    "detail": "Function (const AsyncDnsResolverResult&)",
    "insertText": "result()"
  },
  {
    "label": "AsyncDnsResolverFactoryInterface()",
    "kind": "Method",
    "detail": "Function (} ; class AsyncDnsResolverFactoryInterface { public : ~)",
    "insertText": "AsyncDnsResolverFactoryInterface()"
  },
  {
    "label": "CreateAndResolve()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<webrtc::AsyncDnsResolverInterface>)",
    "insertText": "CreateAndResolve(const rtc::SocketAddress& addr, std::function<void()> callback)"
  },
  {
    "label": "CreateAndResolve()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<webrtc::AsyncDnsResolverInterface>)",
    "insertText": "CreateAndResolve(const rtc::SocketAddress& addr, int family, std::function<void()> callback)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<webrtc::AsyncDnsResolverInterface>)",
    "insertText": "Create()"
  }
]