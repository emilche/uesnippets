[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FSlateAccessibleWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleWidget"
  },
  {
    "label": "FSlateAccessibleMessageHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleMessageHandler"
  },
  {
    "label": "FSlateAccessibleWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleWindow"
  },
  {
    "label": "FSlateAccessibleImage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleImage"
  },
  {
    "label": "FSlateAccessibleWidget()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_ACCESSIBILITY # include \" CoreMinimal . h \" # include \" GenericPlatform / Accessibility / GenericAccessibleInterfaces . h \" class SWidget ; class SWindow ; class FSlateAccessibleWidget : public IAccessibleWidget { class FSlateAccessibleMessageHandler ; public :)",
    "insertText": "FSlateAccessibleWidget(TWeakPtr<SWidget> InWidget, EAccessibleWidgetType InWidgetType = EAccessibleWidgetType::Unknown)"
  },
  {
    "label": "FSlateAccessibleWidget()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSlateAccessibleWidget()"
  },
  {
    "label": "GetId()",
    "kind": "Method",
    "detail": "Function (AccessibleWidgetId)",
    "insertText": "GetId()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetWindow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAccessibleWidget>)",
    "insertText": "GetWindow()"
  },
  {
    "label": "GetBounds()",
    "kind": "Method",
    "detail": "Function (FBox2D)",
    "insertText": "GetBounds()"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAccessibleWidget>)",
    "insertText": "GetParent()"
  },
  {
    "label": "GetNextSibling()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAccessibleWidget>)",
    "insertText": "GetNextSibling()"
  },
  {
    "label": "GetPreviousSibling()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAccessibleWidget>)",
    "insertText": "GetPreviousSibling()"
  },
  {
    "label": "GetNextWidgetInHierarchy()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAccessibleWidget>)",
    "insertText": "GetNextWidgetInHierarchy()"
  },
  {
    "label": "GetPreviousWidgetInHierarchy()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAccessibleWidget>)",
    "insertText": "GetPreviousWidgetInHierarchy()"
  },
  {
    "label": "GetChildAt()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAccessibleWidget>)",
    "insertText": "GetChildAt(int32 Index)"
  },
  {
    "label": "GetNumberOfChildren()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberOfChildren()"
  },
  {
    "label": "GetClassName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetClassName()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "IsHidden()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHidden()"
  },
  {
    "label": "SupportsFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsFocus()"
  },
  {
    "label": "SupportsAccessibleFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsAccessibleFocus()"
  },
  {
    "label": "CanCurrentlyAcceptAccessibleFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCurrentlyAcceptAccessibleFocus()"
  },
  {
    "label": "HasUserFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasUserFocus(const FAccessibleUserIndex UserIndex)"
  },
  {
    "label": "SetUserFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetUserFocus(const FAccessibleUserIndex UserIndex)"
  },
  {
    "label": "GetWidgetType()",
    "kind": "Method",
    "detail": "Function (EAccessibleWidgetType)",
    "insertText": "GetWidgetType()"
  },
  {
    "label": "GetHelpText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetHelpText()"
  },
  {
    "label": "UpdateParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateParent(TSharedPtr<IAccessibleWidget> NewParent)"
  },
  {
    "label": "GetSlateWindow()",
    "kind": "Method",
    "detail": "Function (protected : TWeakPtr<SWidget> Widget ; EAccessibleWidgetType WidgetType ; TWeakPtr<FSlateAccessibleWidget> Parent ; TArray<TWeakPtr<FSlateAccessibleWidget>> Children ; TArray<TWeakPtr<FSlateAccessibleWidget>> ChildrenBuffer ; int32 SiblingIndex ; AccessibleWidgetId Id ; private : TSharedPtr<SWindow>)",
    "insertText": "GetSlateWindow()"
  },
  {
    "label": "FSlateAccessibleWindow()",
    "kind": "Method",
    "detail": "Function (} ; class FSlateAccessibleWindow : public FSlateAccessibleWidget,public IAccessibleWindow { public :)",
    "insertText": "FSlateAccessibleWindow(TWeakPtr<SWidget> InWidget) : FSlateAccessibleWidget(InWidget, EAccessibleWidgetType::Window)"
  },
  {
    "label": "FSlateAccessibleWindow()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSlateAccessibleWindow()"
  },
  {
    "label": "AsWindow()",
    "kind": "Method",
    "detail": "Function (} IAccessibleWindow*)",
    "insertText": "AsWindow()"
  },
  {
    "label": "GetNativeWindow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGenericWindow>)",
    "insertText": "GetNativeWindow()"
  },
  {
    "label": "GetChildAtPosition()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAccessibleWidget>)",
    "insertText": "GetChildAtPosition(int32 X, int32 Y)"
  },
  {
    "label": "GetUserFocusedWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAccessibleWidget>)",
    "insertText": "GetUserFocusedWidget(const FAccessibleUserIndex UserIndex)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "SupportsDisplayState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsDisplayState(EWindowDisplayState State)"
  },
  {
    "label": "GetDisplayState()",
    "kind": "Method",
    "detail": "Function (EWindowDisplayState)",
    "insertText": "GetDisplayState()"
  },
  {
    "label": "SetDisplayState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisplayState(EWindowDisplayState State)"
  },
  {
    "label": "IsModal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsModal()"
  },
  {
    "label": "FSlateAccessibleImage()",
    "kind": "Method",
    "detail": "Function (} ; class FSlateAccessibleImage : public FSlateAccessibleWidget { public :)",
    "insertText": "FSlateAccessibleImage(TWeakPtr<SWidget> InWidget) : FSlateAccessibleWidget(InWidget, EAccessibleWidgetType::Image)"
  },
  {
    "label": "FSlateAccessibleImage()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSlateAccessibleImage()"
  }
]