[
  {
    "label": "APhysicsVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APhysicsVolume"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" GameFramework / Volume . h \" # include \" PhysicsVolume . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() #if WITH_EDITOR ENGINE_API virtual void LoadedFromAnotherClass(const FName& OldClassName)"
  },
  {
    "label": "PostInitializeComponents()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostInitializeComponents()"
  },
  {
    "label": "Destroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroyed()"
  },
  {
    "label": "EndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPlay(const EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "GetGravityZ()",
    "kind": "Method",
    "detail": "Function (public : float)",
    "insertText": "GetGravityZ()"
  },
  {
    "label": "ActorEnteredVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActorEnteredVolume(class AActor* Other)"
  },
  {
    "label": "ActorLeavingVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActorLeavingVolume(class AActor* Other)"
  },
  {
    "label": "IsOverlapInVolume()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOverlapInVolume(const class USceneComponent& TestComponent)"
  }
]