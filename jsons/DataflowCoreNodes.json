[
  {
    "label": "FDataflowOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowOutput"
  },
  {
    "label": "FDataflowReRouteNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowReRouteNode"
  },
  {
    "label": "FDataflowBranchNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowBranchNode"
  },
  {
    "label": "FDataflowSelectNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowSelectNode"
  },
  {
    "label": "FDataflowPrintNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowPrintNode"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ChaosLog . h \" # include \" CoreMinimal . h \" # include \" Dataflow / DataflowConnection . h \" # include \" Dataflow / DataflowNodeParameters . h \" # include \" Dataflow / DataflowNode . h \" # include \" DataflowCoreNodes . generated . h \" struct FDataflowOutput ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowReRouteNode, \"ReRouteNode\", \"Core\", \"\") public: FDataflowReRouteNode(const UE::Dataflow::FNodeParameters& Param, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate(UE::Dataflow::FContext& Context, const FDataflowOutput* Out)"
  },
  {
    "label": "OnInputTypeChanged()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "OnInputTypeChanged(const FDataflowInput* Input)"
  },
  {
    "label": "OnOutputTypeChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnOutputTypeChanged(const FDataflowOutput* Input)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(meta=(Icon=\"GraphEditor.Branch_16x\"))"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowBranchNode, \"Branch\", \"FlowControl\", \"\") public: FDataflowBranchNode(const UE::Dataflow::FNodeParameters& Param, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(meta = (Icon = \"GraphEditor.Branch_16x\"))"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowSelectNode, \"Select\", \"FlowControl\", \"\") public: FDataflowSelectNode(const UE::Dataflow::FNodeParameters& Param, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "AddPins()",
    "kind": "Method",
    "detail": "Function (TArray<UE::Dataflow::FPin>)",
    "insertText": "AddPins()"
  },
  {
    "label": "CanAddPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAddPin()"
  },
  {
    "label": "GetPinsToRemove()",
    "kind": "Method",
    "detail": "Function (} TArray<UE::Dataflow::FPin>)",
    "insertText": "GetPinsToRemove()"
  },
  {
    "label": "OnPinRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPinRemoved(const UE::Dataflow::FPin& Pin)"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "GetConnectionReference()",
    "kind": "Method",
    "detail": "Function (UE::Dataflow::TConnectionReference<FDataflowAnyType>)",
    "insertText": "GetConnectionReference(int32 Index)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowPrintNode, \"Print\", \"Core\", \"\") public: FDataflowPrintNode(const UE::Dataflow::FNodeParameters& Param, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "RegisterCoreNodes()",
    "kind": "Method",
    "detail": "Function (} ; namespace UE::Dataflow { void)",
    "insertText": "RegisterCoreNodes()"
  }
]