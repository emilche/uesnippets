[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EPaddingType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPaddingType"
  },
  {
    "label": "FbxStringCompare",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FbxStringCompare"
  },
  {
    "label": "FbxStringCompareNoCase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FbxStringCompareNoCase"
  },
  {
    "label": "FbxCharPtrCompare",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FbxCharPtrCompare"
  },
  {
    "label": "FbxCharPtrCompareNoCase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FbxCharPtrCompareNoCase"
  },
  {
    "label": "FbxUTF8ToWC()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_BASE_STRING_H_ # define _FBXSDK_CORE_BASE_STRING_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / fbxsdk_nsbegin . h> FBXSDK_DLL void)",
    "insertText": "FbxUTF8ToWC(const char* pInUTF8, wchar_t*& pOutWideChar, size_t* pOutWideCharSize=NULL)"
  },
  {
    "label": "FbxWCToUTF8()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxWCToUTF8(const wchar_t* pInWideChar, char*& pOutUTF8, size_t* pOutUTF8Size=NULL)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(FBXSDK_ENV_WIN) FBXSDK_DLL void FbxWCToAnsi(const wchar_t* pInWideChar, char*& pOutANSI, size_t* pOutANSISize=NULL)"
  },
  {
    "label": "FbxAnsiToWC()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxAnsiToWC(const char* pInANSI, wchar_t*& pOutWideChar, size_t* pOutWideCharSize=NULL)"
  },
  {
    "label": "FbxAnsiToUTF8()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxAnsiToUTF8(const char* pInANSI, char*& pOutUTF8, size_t* pOutUTF8Size=NULL)"
  },
  {
    "label": "FbxUTF8ToAnsi()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxUTF8ToAnsi(const char* pInUTF8, char*& pOutANSI, size_t* pOutANSISize=NULL)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (# endif class FBXSDK_DLL FbxString { public :)",
    "insertText": "FbxString()"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxString(const FbxString& pString)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxString(const char* pString)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxString(char pChar, size_t pNbRepeat=1)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxString(const char* pCharPtr, size_t pLength)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxString(const int pValue)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxString(const float pValue)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxString(const double pValue)"
  },
  {
    "label": "GetLen()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetLen()"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Size()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (FbxString&)",
    "insertText": "Clear()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (char&)",
    "insertText": "operator(int pIndex)"
  },
  {
    "label": "Buffer()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "Buffer()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const FbxString&)",
    "insertText": "operator(const FbxString& pString)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const FbxString&)",
    "insertText": "operator(char pChar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const FbxString&)",
    "insertText": "operator(const char* pString)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const FbxString&)",
    "insertText": "operator(int pValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const FbxString&)",
    "insertText": "operator(float pValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const FbxString&)",
    "insertText": "operator(double pValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxString)",
    "insertText": "operator(const FbxString& pString1, const FbxString& pString2)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxString)",
    "insertText": "operator(const FbxString& pString, char pChar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxString)",
    "insertText": "operator(char pChar, const FbxString& pString)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxString)",
    "insertText": "operator(const FbxString& pString1, const char* pString2)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxString)",
    "insertText": "operator(const char* pString1, const FbxString& pString2)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxString)",
    "insertText": "operator(const FbxString& pString, int pValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxString)",
    "insertText": "operator(int pValue, const FbxString& pString)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxString)",
    "insertText": "operator(const FbxString& pString, float pValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxString)",
    "insertText": "operator(float pValue, const FbxString& pString)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxString)",
    "insertText": "operator(const FbxString& pString, double pValue)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (operator const)",
    "insertText": "char()"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (const FbxString&)",
    "insertText": "Copy(const char* pString, size_t pLength)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (const FbxString&)",
    "insertText": "Append(const char* pString, size_t pLength)"
  },
  {
    "label": "Compare()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Compare(const char* pString)"
  },
  {
    "label": "CompareNoCase()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CompareNoCase(const char* pString)"
  },
  {
    "label": "Swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Swap(FbxString& pString)"
  },
  {
    "label": "Upper()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "Upper()"
  },
  {
    "label": "Lower()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "Lower()"
  },
  {
    "label": "Mid()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "Mid(size_t pFirst, size_t pCount)"
  },
  {
    "label": "Mid()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "Mid(size_t pFirst)"
  },
  {
    "label": "Left()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "Left(size_t pCount)"
  },
  {
    "label": "Right()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "Right(size_t pCount)"
  },
  {
    "label": "Pad()",
    "kind": "Method",
    "detail": "Function (enum EPaddingType { eRight,eLeft,eBoth } ; FbxString)",
    "insertText": "Pad(EPaddingType pPadding, size_t pLen, char pCar=' ')"
  },
  {
    "label": "UnPad()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "UnPad(EPaddingType pPadding, char pCar='\\0')"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Find(char pChar, size_t pStartPosition=0)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Find(const char* pStrSub, size_t pStartPosition=0)"
  },
  {
    "label": "ReverseFind()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ReverseFind(char pChar)"
  },
  {
    "label": "FindOneOf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FindOneOf(const char* pStrCharSet, size_t pStartPosition=0)"
  },
  {
    "label": "FindAndReplace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindAndReplace(const char* pFind, const char* pReplaceBy, size_t pStartPosition=0)"
  },
  {
    "label": "ReplaceAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceAll(const char* pFind, const char* pReplaceBy)"
  },
  {
    "label": "ReplaceAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceAll(char pFind, char pReplaceBy)"
  },
  {
    "label": "GetTokenCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetTokenCount(const char* pSpans)"
  },
  {
    "label": "GetToken()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetToken(int pTokenIndex, const char* pSpans)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (private : char* mData ;)",
    "insertText": "FbxString(size_t pSrc1Len, const char* pSrc1Data, size_t pSrc2Len, const char* pSrc2Data)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate()"
  },
  {
    "label": "FreeBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeBuffer()"
  },
  {
    "label": "FreeBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeBuffer(char *&pOldData)"
  },
  {
    "label": "AllocCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocCopy(FbxString& pDest, size_t pCopyLen, size_t pCopyIndex)"
  },
  {
    "label": "AllocBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocBuffer(size_t pLen)"
  },
  {
    "label": "AllocBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocBuffer(size_t pLen, char*& pOldData)"
  },
  {
    "label": "AssignCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AssignCopy(size_t pSrcLen, const char* pSrcData)"
  },
  {
    "label": "ConcatInPlace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConcatInPlace(size_t pSrcLen, const char* pSrcData)"
  },
  {
    "label": "IsIn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIn(char pChar, const char* pString)"
  },
  {
    "label": "InternalFindAndReplace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InternalFindAndReplace(const char* pFind, const char* pReplaceBy, size_t& pStartPosition)"
  },
  {
    "label": "FBXSDK_INCOMPATIBLE_WITH_ARRAY()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "FBXSDK_INCOMPATIBLE_WITH_ARRAY(FbxString)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (struct FbxStringCompare { int)",
    "insertText": "operator()(const FbxString& pKeyA, const FbxString& pKeyB)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; struct FbxCharPtrCompare { int)",
    "insertText": "operator()(const char* pKeyA, const char* pKeyB)"
  },
  {
    "label": "FbxRemoveChar()",
    "kind": "Method",
    "detail": "Function (} } ; void)",
    "insertText": "FbxRemoveChar(FbxString& pString, char pToRemove)"
  },
  {
    "label": "ReverseFind()",
    "kind": "Method",
    "detail": "Function (int lPos = pString .)",
    "insertText": "ReverseFind(pToRemove)"
  },
  {
    "label": "Left()",
    "kind": "Method",
    "detail": "Function (pString = pString .)",
    "insertText": "Left(lPos) + pString.Mid(lPos + 1)"
  }
]