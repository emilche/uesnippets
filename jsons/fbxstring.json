[
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EPaddingType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPaddingType"
  },
  {
    "label": "EPaddingType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPaddingType"
  },
  {
    "label": "FbxStringCompare",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FbxStringCompare"
  },
  {
    "label": "FbxStringCompareNoCase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FbxStringCompareNoCase"
  },
  {
    "label": "FbxCharPtrCompare",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FbxCharPtrCompare"
  },
  {
    "label": "FbxCharPtrCompareNoCase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FbxCharPtrCompareNoCase"
  },
  {
    "label": "FbxUTF8ToWC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxUTF8ToWC(const char* pInUTF8, wchar_t*& pOutWideChar, size_t* pOutWideCharSize=NULL)"
  },
  {
    "label": "FbxWCToUTF8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxWCToUTF8(const wchar_t* pInWideChar, char*& pOutUTF8, size_t* pOutUTF8Size=NULL)"
  },
  {
    "label": "FbxWCToAnsi()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxWCToAnsi(const wchar_t* pInWideChar, char*& pOutANSI, size_t* pOutANSISize=NULL)"
  },
  {
    "label": "FbxAnsiToWC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxAnsiToWC(const char* pInANSI, wchar_t*& pOutWideChar, size_t* pOutWideCharSize=NULL)"
  },
  {
    "label": "FbxAnsiToUTF8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxAnsiToUTF8(const char* pInANSI, char*& pOutUTF8, size_t* pOutUTF8Size=NULL)"
  },
  {
    "label": "FbxUTF8ToAnsi()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxUTF8ToAnsi(const char* pInUTF8, char*& pOutANSI, size_t* pOutANSISize=NULL)"
  },
  {
    "label": "Swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Swap(FbxString& pString)"
  },
  {
    "label": "FindAndReplace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindAndReplace(const char* pFind, const char* pReplaceBy, size_t pStartPosition=0)"
  },
  {
    "label": "ReplaceAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceAll(const char* pFind, const char* pReplaceBy)"
  },
  {
    "label": "ReplaceAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceAll(char pFind, char pReplaceBy)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate()"
  },
  {
    "label": "FreeBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeBuffer()"
  },
  {
    "label": "FreeBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeBuffer(char *&pOldData)"
  },
  {
    "label": "AllocBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocBuffer(size_t pLen)"
  },
  {
    "label": "AllocBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocBuffer(size_t pLen, char*& pOldData)"
  },
  {
    "label": "AssignCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AssignCopy(size_t pSrcLen, const char* pSrcData)"
  },
  {
    "label": "ConcatInPlace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConcatInPlace(size_t pSrcLen, const char* pSrcData)"
  },
  {
    "label": "InternalFindAndReplace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InternalFindAndReplace(const char* pFind, const char* pReplaceBy, size_t& pStartPosition)"
  },
  {
    "label": "strcmp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "strcmp(pKeyA, pKeyB)"
  },
  {
    "label": "FBXSDK_stricmp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FBXSDK_stricmp(pKeyA, pKeyB)"
  }
]