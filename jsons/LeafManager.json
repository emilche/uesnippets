[
  {
    "label": "TreeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TreeTraits"
  },
  {
    "label": "TreeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TreeTraits"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "LeafManagerImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LeafManagerImpl"
  },
  {
    "label": "manages",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "manages"
  },
  {
    "label": "LeafManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LeafManager"
  },
  {
    "label": "LeafRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LeafRange"
  },
  {
    "label": "Iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Iterator"
  },
  {
    "label": "OffsetOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OffsetOp"
  },
  {
    "label": "MinOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MinOp"
  },
  {
    "label": "CountOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CountOp"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "LeafTransformer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LeafTransformer"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "LeafReducer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LeafReducer"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "PrefixSum",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PrefixSum"
  },
  {
    "label": "LeafManagerImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LeafManagerImpl"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Iterator(*this, mBegin)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Iterator(*this, mEnd)"
  },
  {
    "label": "RangeType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "RangeType(0, mLeafCount, grainsize)"
  },
  {
    "label": "LeafRange()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "LeafRange(0, mLeafCount, *this, grainsize)"
  },
  {
    "label": "leafNodes()",
    "kind": "Method",
    "detail": "Function (tree::LeafManager<FloatTree>)",
    "insertText": "leafNodes(lhsTree)"
  },
  {
    "label": "transform()",
    "kind": "Method",
    "detail": "Function (LeafTransformer<LeafOp>)",
    "insertText": "transform(op)"
  },
  {
    "label": "leafNodes()",
    "kind": "Method",
    "detail": "Function (tree::LeafManager<FloatTree>)",
    "insertText": "leafNodes(tree)"
  },
  {
    "label": "transform()",
    "kind": "Method",
    "detail": "Function (LeafReducer<LeafOp>)",
    "insertText": "transform(op)"
  },
  {
    "label": "OPENVDB_THROW()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "OPENVDB_THROW(ValueError, \"task is undefined\")"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (count)",
    "insertText": "for(size_t i = 1; i < leafCounts.size()"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (registry)",
    "insertText": "for(typename LeafRange::Iterator it = range.begin()"
  }
]