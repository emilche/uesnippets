[
  {
    "label": "FLumenScreenSpaceBentNormalParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenScreenSpaceBentNormalParameters"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FEngineShowFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEngineShowFlags"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRadianceCacheInterpolationParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRadianceCacheInterpolationParameters"
  },
  {
    "label": "FRadianceCacheMarkParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRadianceCacheMarkParameters"
  },
  {
    "label": "GetTracingOctahedronResolution()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" BlueNoise . h \" # include \" LumenTracingUtils . h \" # include \" ShaderParameterMacros . h \" class FLumenScreenSpaceBentNormalParameters ; class FViewInfo ; struct FEngineShowFlags ; enum class ERDGPassFlags : uint16 ; namespace LumenRadianceCache { class FRadianceCacheInterpolationParameters ; class FRadianceCacheMarkParameters ; } int32 GLumenScreenProbeGatherNumMips ; enum class EScreenProbeIrradianceFormat : uint8 { SH3,Octahedral,MAX } ; namespace LumenScreenProbeGather { int32)",
    "insertText": "GetTracingOctahedronResolution(const FViewInfo& View)"
  },
  {
    "label": "IsProbeTracingResolutionSupportedForImportanceSampling()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "IsProbeTracingResolutionSupportedForImportanceSampling(int32 TracingResolution)"
  },
  {
    "label": "UseImportanceSampling()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseImportanceSampling(const FViewInfo& View)"
  },
  {
    "label": "UseProbeSpatialFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseProbeSpatialFilter()"
  },
  {
    "label": "UseProbeTemporalFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseProbeTemporalFilter()"
  },
  {
    "label": "UseRadianceCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseRadianceCache()"
  },
  {
    "label": "UseRejectBasedOnNormal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseRejectBasedOnNormal()"
  },
  {
    "label": "GetScreenProbeIrradianceFormat()",
    "kind": "Method",
    "detail": "Function (EScreenProbeIrradianceFormat)",
    "insertText": "GetScreenProbeIrradianceFormat(const FEngineShowFlags& ShowFlags)"
  },
  {
    "label": "UseHitLighting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseHitLighting(const FViewInfo& View, EDiffuseIndirectMethod DiffuseIndirectMethod)"
  },
  {
    "label": "IrradianceProbeWithBorderRes()",
    "kind": "Method",
    "detail": "Function (uint32 IrradianceProbeRes = 6 ; uint32)",
    "insertText": "IrradianceProbeWithBorderRes(IrradianceProbeRes + 2)"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (} enum class EScreenProbeIndirectArgs { GroupPerProbe,ThreadPerProbe,TraceCompaction,ThreadPerTrace,ThreadPerGather,ThreadPerGatherWithBorder,ThreadPerLightSample,Max } ; enum class EScreenProbeIntegrateTileClassification { SimpleDiffuse,SupportImportanceSampleBRDF,SupportAll,Num } ;)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FScreenProbeImportanceSamplingParameters, ) SHADER_PARAMETER(uint32, MaxImportanceSamplingOctahedronResolution) SHADER_PARAMETER(uint32, ScreenProbeBRDFOctahedronResolution) SHADER_PARAMETER_RDG_TEXTURE(Texture2D<uint>, StructuredImportanceSampledRayInfosForTracing) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FScreenProbeParameters, ) SHADER_PARAMETER(uint32, ScreenProbeTracingOctahedronResolution) SHADER_PARAMETER(uint32, ScreenProbeLightSampleResolutionXY) SHADER_PARAMETER(uint32, ScreenProbeGatherOctahedronResolution) SHADER_PARAMETER(uint32, ScreenProbeGatherOctahedronResolutionWithBorder) SHADER_PARAMETER(uint32, ScreenProbeDownsampleFactor) SHADER_PARAMETER(FIntPoint, ScreenProbeViewSize) SHADER_PARAMETER(FIntPoint, ScreenProbeAtlasViewSize) SHADER_PARAMETER(FIntPoint, ScreenProbeAtlasBufferSize) SHADER_PARAMETER(float, ScreenProbeGatherMaxMip) SHADER_PARAMETER(float, RelativeSpeedDifferenceToConsiderLightingMoving) SHADER_PARAMETER(float, ScreenTraceNoFallbackThicknessScale) SHADER_PARAMETER(FVector2f, SampleRadianceProbeUVMul) SHADER_PARAMETER(FVector2f, SampleRadianceProbeUVAdd) SHADER_PARAMETER(FVector2f, SampleRadianceAtlasUVMul) SHADER_PARAMETER(uint32, AdaptiveScreenTileSampleResolution) SHADER_PARAMETER(uint32, NumUniformScreenProbes) SHADER_PARAMETER(uint32, MaxNumAdaptiveProbes) SHADER_PARAMETER(int32, FixedJitterIndex) SHADER_PARAMETER(uint32, ScreenProbeRayDirectionFrameIndex) SHADER_PARAMETER(uint32, bSupportsHairScreenTraces) SHADER_PARAMETER(FVector3f, TargetFormatQuantizationError) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<uint>, NumAdaptiveScreenProbes) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<uint>, AdaptiveScreenProbeData) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenTileAdaptiveProbeHeader) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenTileAdaptiveProbeIndices) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, TraceRadiance) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, TraceHit) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenProbeSceneDepth) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenProbeWorldNormal) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenProbeWorldSpeed) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenProbeTranslatedWorldPosition) SHADER_PARAMETER_RDG_TEXTURE_UAV(RWTexture2D<float3>, RWTraceRadiance) SHADER_PARAMETER_RDG_TEXTURE_UAV(RWTexture2D<uint>, RWTraceHit) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, LightSampleTraceRadiance) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, LightSampleTraceHit) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenProbeLightSampleDirection) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenProbeLightSampleFlags) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenProbeLightSampleRadiance) SHADER_PARAMETER_RDG_TEXTURE_UAV(RWTexture2D<float3>, RWLightSampleTraceRadiance) SHADER_PARAMETER_RDG_TEXTURE_UAV(RWTexture2D<uint>, RWLightSampleTraceHit) SHADER_PARAMETER_STRUCT_INCLUDE(FScreenProbeImportanceSamplingParameters, ImportanceSampling) SHADER_PARAMETER_STRUCT_REF(FBlueNoise, BlueNoise) RDG_BUFFER_ACCESS(ProbeIndirectArgs, ERHIAccess::IndirectArgs) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FScreenProbeGatherParameters, ) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenProbeRadiance) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenProbeRadianceWithBorder) SHADER_PARAMETER_RDG_TEXTURE(Texture2D<float3>, ScreenProbeRadianceSHAmbient) SHADER_PARAMETER_RDG_TEXTURE(Texture2D<float4>, ScreenProbeRadianceSHDirectional) SHADER_PARAMETER_RDG_TEXTURE(Texture2D<float3>, ScreenProbeIrradianceWithBorder) SHADER_PARAMETER_RDG_TEXTURE(Texture2D<float>, ScreenProbeMoving) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FCompactedTraceParameters, ) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<uint>, CompactedTraceTexelAllocator) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<uint>, CompactedTraceTexelData) SHADER_PARAMETER_RDG_BUFFER_SRV(StructuredBuffer<uint>, CompactedLightSampleTraceTexelData) RDG_BUFFER_ACCESS(IndirectArgs, ERHIAccess::IndirectArgs) END_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "CompactTraces()",
    "kind": "Method",
    "detail": "Function (FCompactedTraceParameters)",
    "insertText": "CompactTraces(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FScreenProbeParameters& ScreenProbeParameters, bool bCullByDistanceFromCamera, float CompactionTracingEndDistanceFromCamera, float CompactionMaxTraceDistance, bool bRenderDirectLighting, bool bCompactForFarField, ERDGPassFlags ComputePassFlags = ERDGPassFlags::Compute)"
  },
  {
    "label": "GenerateBRDF_PDF()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GenerateBRDF_PDF(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FSceneTextures& SceneTextures, FRDGTextureRef& BRDFProbabilityDensityFunction, FRDGBufferSRVRef& BRDFProbabilityDensityFunctionSH, FScreenProbeParameters& ScreenProbeParameters, ERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "GenerateImportanceSamplingRays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateImportanceSamplingRays(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FSceneTextures& SceneTextures, const LumenRadianceCache::FRadianceCacheInterpolationParameters& RadianceCacheParameters, FRDGTextureRef BRDFProbabilityDensityFunction, FRDGBufferSRVRef BRDFProbabilityDensityFunctionSH, FScreenProbeParameters& ScreenProbeParameters, ERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "TraceScreenProbes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceScreenProbes(FRDGBuilder& GraphBuilder, const FScene* Scene, const FViewInfo& View, const FLumenSceneFrameTemporaries& FrameTemporaries, bool bTraceMeshObjects, bool bRenderDirectLighting, const FSceneTextures& SceneTextures, FRDGTextureRef LightingChannelsTexture, const LumenRadianceCache::FRadianceCacheInterpolationParameters& RadianceCacheParameters, FScreenProbeParameters& ScreenProbeParameters, FLumenMeshSDFGridParameters& MeshSDFGridParameters, ERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "RenderHardwareRayTracingScreenProbe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderHardwareRayTracingScreenProbe(FRDGBuilder& GraphBuilder, const FScene* Scene, const FSceneTextureParameters& SceneTextures, FScreenProbeParameters& CommonDiffuseParameters, const FViewInfo& View, const FLumenCardTracingParameters& TracingParameters, FLumenIndirectTracingParameters& DiffuseTracingParameters, const LumenRadianceCache::FRadianceCacheInterpolationParameters& RadianceCacheParameters, bool bRenderDirectLighting, ERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "RenderHardwareRayTracingShortRangeAO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderHardwareRayTracingShortRangeAO(FRDGBuilder& GraphBuilder, const FScene* Scene, const FSceneTextureParameters& SceneTextures, const FBlueNoise& BlueNoise, float MaxScreenTraceFraction, const FViewInfo& View, FRDGTextureRef ScreenBentNormal, uint32 NumPixelRays)"
  },
  {
    "label": "FilterScreenProbes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterScreenProbes(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FSceneTextures& SceneTextures, const FScreenProbeParameters& ScreenProbeParameters, bool bRenderDirectLighting, FScreenProbeGatherParameters& GatherParameters, ERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "ComputeScreenSpaceShortRangeAO()",
    "kind": "Method",
    "detail": "Function (FLumenScreenSpaceBentNormalParameters)",
    "insertText": "ComputeScreenSpaceShortRangeAO(FRDGBuilder& GraphBuilder, const FScene* Scene, const FViewInfo& View, const FSceneTextures& SceneTextures, FRDGTextureRef LightingChannelsTexture, const FBlueNoise& BlueNoise, float MaxScreenTraceFraction, float ScreenTraceNoFallbackThicknessScale, ERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "SetupRadianceCacheInputs()",
    "kind": "Method",
    "detail": "Function (namespace LumenScreenProbeGatherRadianceCache { LumenRadianceCache::FRadianceCacheInputs)",
    "insertText": "SetupRadianceCacheInputs(const FViewInfo& View)"
  },
  {
    "label": "CanMaterialRenderInLumenTranslucencyRadianceCacheMarkPass()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanMaterialRenderInLumenTranslucencyRadianceCacheMarkPass(const FScene& Scene, const FSceneViewFamily& ViewFamily, const FPrimitiveSceneProxy& PrimitiveSceneProxy, const FMaterial& Material)"
  },
  {
    "label": "CanMaterialRenderInLumenFrontLayerTranslucencyGBufferPass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMaterialRenderInLumenFrontLayerTranslucencyGBufferPass(const FScene& Scene, const FSceneViewFamily& ViewFamily, const FPrimitiveSceneProxy& PrimitiveSceneProxy, const FMaterial& Material)"
  },
  {
    "label": "LumenTranslucencyReflectionsMarkUsedProbes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LumenTranslucencyReflectionsMarkUsedProbes(FRDGBuilder& GraphBuilder, const FSceneRenderer& SceneRenderer, FViewInfo& View, const FSceneTextures& SceneTextures, const LumenRadianceCache::FRadianceCacheMarkParameters& RadianceCacheMarkParameters)"
  }
]