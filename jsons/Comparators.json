[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "CLess",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CLess"
  },
  {
    "label": "CGreater",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CGreater"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ExportBegin . h \" # ifdef ST_SETS_PACKING_INTERNALLY # pragma)",
    "insertText": "pack(push, 4)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (template<class T> class CLess { public : bool)",
    "insertText": "operator()(const T& cL, const T& cR)"
  }
]