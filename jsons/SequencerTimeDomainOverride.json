[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTimeDomainOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimeDomainOverride"
  },
  {
    "label": "FTimeDomainOverride()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" namespace UE::Sequencer { enum class ETimeDomain : uint8 { Warped,Unwarped } ; struct FTimeDomainOverride { public :)",
    "insertText": "FTimeDomainOverride(ETimeDomain* Ptr, ETimeDomain NewValue) : ValuePtr(Ptr)"
  },
  {
    "label": "FTimeDomainOverride()",
    "kind": "Method",
    "detail": "Function (OriginalValue =* Ptr ;* Ptr = NewValue ; } })",
    "insertText": "FTimeDomainOverride(const FTimeDomainOverride& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTimeDomainOverride&)",
    "insertText": "operator(const FTimeDomainOverride& Other)"
  },
  {
    "label": "FTimeDomainOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTimeDomainOverride(FTimeDomainOverride&& Other) : ValuePtr(Other.ValuePtr) , OriginalValue(Other.OriginalValue)"
  },
  {
    "label": "FTimeDomainOverride()",
    "kind": "Method",
    "detail": "Function (Other . ValuePtr = nullptr ; } ~)",
    "insertText": "FTimeDomainOverride()"
  }
]