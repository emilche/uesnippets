[
  {
    "label": "FBrowserBufferedVideo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBrowserBufferedVideo"
  },
  {
    "label": "FCEFBrowserHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFBrowserHandler"
  },
  {
    "label": "FCEFJSScripting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFJSScripting"
  },
  {
    "label": "FSlateUpdatableTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateUpdatableTexture"
  },
  {
    "label": "IWebBrowserPopupFeatures",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWebBrowserPopupFeatures"
  },
  {
    "label": "IWebBrowserWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWebBrowserWindow"
  },
  {
    "label": "Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Rect"
  },
  {
    "label": "FSlateShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResource"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FInputEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputEvent"
  },
  {
    "label": "FWebJSScripting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWebJSScripting"
  },
  {
    "label": "FCEFImeHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFImeHandler"
  },
  {
    "label": "ITextInputMethodSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextInputMethodSystem"
  },
  {
    "label": "FCEFWebBrowserWindowRHIHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFWebBrowserWindowRHIHelper"
  },
  {
    "label": "FWebBrowserWindowInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWebBrowserWindowInfo"
  },
  {
    "label": "FWebBrowserDragRegion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWebBrowserDragRegion"
  },
  {
    "label": "FCEFWebBrowserWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFWebBrowserWindow"
  },
  {
    "label": "FCEFBrowserHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFBrowserHandler"
  },
  {
    "label": "friend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "friend"
  },
  {
    "label": "FWebBrowserSingleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWebBrowserSingleton"
  },
  {
    "label": "SWebBrowserView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWebBrowserView"
  },
  {
    "label": "CreateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SViewport>)",
    "insertText": "CreateWidget()"
  },
  {
    "label": "GetCefBrowser()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefBrowser>)",
    "insertText": "GetCefBrowser()"
  },
  {
    "label": "SetTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTitle(const CefString& InTitle)"
  },
  {
    "label": "SetUrl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUrl(const CefString& InUrl)"
  },
  {
    "label": "SetToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToolTip(const CefString& InToolTip)"
  },
  {
    "label": "GetViewRect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetViewRect(CefRect& Rect)"
  },
  {
    "label": "NotifyDocumentError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyDocumentError(CefLoadHandler::ErrorCode InErrorCode, const CefString& ErrorText, const CefString& FailedUrl)"
  },
  {
    "label": "NotifyDocumentError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyDocumentError(int ErrorCode)"
  },
  {
    "label": "NotifyDocumentLoadingStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyDocumentLoadingStateChange(bool IsLoading)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPaint(CefRenderHandler::PaintElementType Type, const CefRenderHandler::RectList& DirtyRects, const void* Buffer, int Width, int Height)"
  },
  {
    "label": "OnAcceleratedPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAcceleratedPaint(CefRenderHandler::PaintElementType type, const CefRenderHandler::RectList& DirtyRects, void* SharedHandle)"
  },
  {
    "label": "OnCursorChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCursorChange(CefCursorHandle Cursor, cef_cursor_type_t Type, const CefCursorInfo& CustomCursorInfo)"
  },
  {
    "label": "OnProcessMessageReceived()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnProcessMessageReceived(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> frame, CefProcessId SourceProcess, CefRefPtr<CefProcessMessage> Message)"
  },
  {
    "label": "OnBeforeBrowse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnBeforeBrowse(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, CefRefPtr<CefRequest> Request, bool user_gesture, bool bIsRedirect)"
  },
  {
    "label": "HandleOnBeforeResourceLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnBeforeResourceLoad(const CefString& URL, CefRequest::ResourceType Type, FRequestHeaders& AdditionalHeaders, const bool AllowUserCredentials)"
  },
  {
    "label": "HandleOnResourceLoadComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnResourceLoadComplete(const CefString& URL, CefRequest::ResourceType Type, CefResourceRequestHandler::URLRequestStatus Status, int64 ContentLength)"
  },
  {
    "label": "HandleOnConsoleMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnConsoleMessage(CefRefPtr<CefBrowser> Browser, cef_log_severity_t Level, const CefString& Message, const CefString& Source, int32 Line)"
  },
  {
    "label": "GetResourceContent()",
    "kind": "Method",
    "detail": "Function (TOptional<FString>)",
    "insertText": "GetResourceContent( CefRefPtr< CefFrame > Frame, CefRefPtr< CefRequest > Request)"
  },
  {
    "label": "SlateModifiersFromCefModifiers()",
    "kind": "Method",
    "detail": "Function (FModifierKeysState)",
    "insertText": "SlateModifiersFromCefModifiers(const CefKeyEvent& CefEvent)"
  },
  {
    "label": "OnUnhandledKeyEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnUnhandledKeyEvent(const CefKeyEvent& CefEvent)"
  },
  {
    "label": "OnJSDialog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnJSDialog(CefJSDialogHandler::JSDialogType DialogType, const CefString& MessageText, const CefString& DefaultPromptText, CefRefPtr<CefJSDialogCallback> Callback, bool& OutSuppressMessage)"
  },
  {
    "label": "OnFileDialog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnFileDialog(CefDialogHandler::FileDialogMode Mode, const CefString& DialogTitle, const CefString& DefaultFilePath, const std::vector<CefString>& AcceptFilters, int SelectedAcceptFilter, CefRefPtr<CefFileDialogCallback> Callback)"
  },
  {
    "label": "OnBeforeUnloadDialog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnBeforeUnloadDialog(const CefString& MessageText, bool IsReload, CefRefPtr<CefJSDialogCallback> Callback)"
  },
  {
    "label": "OnResetDialogState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetDialogState()"
  },
  {
    "label": "OnRenderProcessTerminated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenderProcessTerminated(CefRequestHandler::TerminationStatus Status)"
  },
  {
    "label": "RequestCreateWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestCreateWindow(const TSharedRef<IWebBrowserWindow>& NewBrowserWindow, const TSharedPtr<IWebBrowserPopupFeatures>& BrowserPopupFeatures)"
  },
  {
    "label": "SupportsCloseWindows()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsCloseWindows()"
  },
  {
    "label": "RequestCloseWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestCloseWindow(const TSharedRef<IWebBrowserWindow>& BrowserWindow)"
  },
  {
    "label": "OnBrowserClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBrowserClosing()"
  },
  {
    "label": "OnBrowserClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBrowserClosed()"
  },
  {
    "label": "SetPopupMenuPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPopupMenuPosition(CefRect PopupSize)"
  },
  {
    "label": "ShowPopupMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowPopupMenu(bool bShow)"
  },
  {
    "label": "OnImeCompositionRangeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnImeCompositionRangeChanged(\n\t\tCefRefPtr<CefBrowser> Browser,\n\t\tconst CefRange& SelectionRange,\n\t\tconst CefRenderHandler::RectList& CharacterBounds)"
  },
  {
    "label": "UpdateDragRegions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDragRegions(const TArray<FWebBrowserDragRegion>& Regions)"
  },
  {
    "label": "GetCefKeyboardModifiers()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCefKeyboardModifiers(const FKeyEvent& KeyEvent)"
  },
  {
    "label": "GetCefMouseModifiers()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCefMouseModifiers(const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "GetCefInputModifiers()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCefInputModifiers(const FInputEvent& InputEvent)"
  },
  {
    "label": "CanSupportAcceleratedPaint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSupportAcceleratedPaint()"
  },
  {
    "label": "UpdateCachedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedGeometry(const FGeometry& AllottedGeometry)"
  },
  {
    "label": "UpdateVideoBuffering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVideoBuffering()"
  },
  {
    "label": "GetProcessInfo()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefDictionaryValue>)",
    "insertText": "GetProcessInfo()"
  },
  {
    "label": "GetRenderer()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "GetRenderer()"
  },
  {
    "label": "HandleRenderingError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRenderingError()"
  },
  {
    "label": "ReleaseTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseTextures()"
  },
  {
    "label": "CreateInitialTextures()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateInitialTextures()"
  },
  {
    "label": "RequestNavigationInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestNavigationInternal(FString Url, FString Contents)"
  },
  {
    "label": "HasPendingNavigation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPendingNavigation()"
  },
  {
    "label": "ProcessPendingNavigation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPendingNavigation()"
  },
  {
    "label": "SetIsHidden()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsHidden(bool bValue)"
  },
  {
    "label": "PopulateCefKeyEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateCefKeyEvent(const FKeyEvent& InKeyEvent, CefKeyEvent& OutKeyEvent)"
  },
  {
    "label": "GetCefMouseEvent()",
    "kind": "Method",
    "detail": "Function (CefMouseEvent)",
    "insertText": "GetCefMouseEvent(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, bool bIsPopup)"
  },
  {
    "label": "IsInDragRegion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInDragRegion(const FIntPoint& Point)"
  },
  {
    "label": "LoadCustomCEF3Cursor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadCustomCEF3Cursor(cef_cursor_type_t Type)"
  }
]