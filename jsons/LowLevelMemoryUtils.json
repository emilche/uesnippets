[
  {
    "label": "FLLMArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMArray"
  },
  {
    "label": "LLMMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLMMap"
  },
  {
    "label": "Values",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Values"
  },
  {
    "label": "FBaseIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBaseIterator"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterator"
  },
  {
    "label": "FTuple",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTuple"
  },
  {
    "label": "ThisType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ThisType"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterator"
  },
  {
    "label": "FConstIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstIterator"
  },
  {
    "label": "FConstTuple",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstTuple"
  },
  {
    "label": "ThisType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ThisType"
  },
  {
    "label": "FConstIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstIterator"
  },
  {
    "label": "StripeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StripeData"
  },
  {
    "label": "PointerKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PointerKey"
  },
  {
    "label": "TSizedLLMAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSizedLLMAllocator"
  },
  {
    "label": "ForAnyElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForAnyElementType"
  },
  {
    "label": "TSizedLLMAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSizedLLMAllocator"
  },
  {
    "label": "ForElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForElementType"
  },
  {
    "label": "FDefaultBitArrayLLMAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDefaultBitArrayLLMAllocator"
  },
  {
    "label": "FDefaultSparseArrayLLMAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDefaultSparseArrayLLMAllocator"
  },
  {
    "label": "FDefaultSetLLMAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDefaultSetLLMAllocator"
  },
  {
    "label": "TFastPointerSetKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TFastPointerSetKeyFuncs"
  },
  {
    "label": "TFastPointerMapKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TFastPointerMapKeyFuncs"
  },
  {
    "label": "TFastPointerLLMMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFastPointerLLMMap"
  },
  {
    "label": "TFastPointerLLMSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFastPointerLLMSet"
  },
  {
    "label": "ETopologicalSortOrder",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETopologicalSortOrder"
  },
  {
    "label": "FVisitData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisitData"
  },
  {
    "label": "AllocationScopeLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "AllocationScopeLock(&Stripe.CriticalSection)"
  },
  {
    "label": "AllocationScopeLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "AllocationScopeLock(&Stripe.CriticalSection)"
  },
  {
    "label": "AllocationScopeLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "AllocationScopeLock(&Stripe.CriticalSection)"
  },
  {
    "label": "TKey()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TKey()"
  },
  {
    "label": "AllocationScopeLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "AllocationScopeLock(&Stripe.CriticalSection)"
  },
  {
    "label": "AllocationScopeLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "AllocationScopeLock(&Stripe.CriticalSection)"
  },
  {
    "label": "AllocationScopeLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "AllocationScopeLock(&Stripe.CriticalSection)"
  },
  {
    "label": "AllocationScopeLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "AllocationScopeLock(&Stripe.CriticalSection)"
  },
  {
    "label": "FTuple()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FTuple(Stripe.Keys[KeyIndex], Stripe.Values1[KeyIndex], Stripe.Values2[KeyIndex])"
  },
  {
    "label": "FConstTuple()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FConstTuple(Stripe.Keys[KeyIndex], Stripe.Values1[KeyIndex], Stripe.Values2[KeyIndex])"
  },
  {
    "label": "FIterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FIterator(*this, false)"
  },
  {
    "label": "FIterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FIterator(*this, true)"
  },
  {
    "label": "FConstIterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FConstIterator(*this, false)"
  },
  {
    "label": "FConstIterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FConstIterator(*this, true)"
  },
  {
    "label": "uint64()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "uint64(Pointer & 0xffff)"
  },
  {
    "label": "OnInvalidLLMAllocatorNum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInvalidLLMAllocatorNum(int32 IndexSize, int64 NewNum, SIZE_T NumBytesPerElement)"
  },
  {
    "label": "DefaultCalculateSlackReserve()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackReserve(NewMax, NumBytesPerElement, true)"
  },
  {
    "label": "DefaultCalculateSlackShrink()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackShrink(NewMax, CurrentMax, NumBytesPerElement, true)"
  },
  {
    "label": "DefaultCalculateSlackGrow()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackGrow(NewMax, CurrentMax, NumBytesPerElement, true)"
  },
  {
    "label": "ForAnyElementType()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "ForAnyElementType(const ForAnyElementType&)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(ImportantBits)"
  },
  {
    "label": "TopologicalSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TopologicalSort(T* VertexData, SizeType NumVertices, GetEdgesType GetEdges, ETopologicalSortOrder SortOrder)"
  }
]