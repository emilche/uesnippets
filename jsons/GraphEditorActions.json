[
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "FGraphEditorCommandsImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphEditorCommandsImpl"
  },
  {
    "label": "FQuickJumpCommandInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuickJumpCommandInfo"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "FGraphEditorCommandsImpl()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Framework / Commands / Commands . h \" # include \" Framework / MultiBox / MultiBoxBuilder . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Internationalization . h \" # include \" Styling / AppStyle . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" UObject / UnrealNames . h \" class FUICommandInfo ; class FGraphEditorCommandsImpl : public TCommands<FGraphEditorCommandsImpl> { public :)",
    "insertText": "FGraphEditorCommandsImpl() : TCommands<FGraphEditorCommandsImpl>( TEXT(\"GraphEditor\"), NSLOCTEXT(\"Contexts\", \"GraphEditor\", \"Graph Editor\"), NAME_None, FAppStyle::GetAppStyleSetName())"
  },
  {
    "label": "FGraphEditorCommandsImpl()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FGraphEditorCommandsImpl()"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterCommands()"
  },
  {
    "label": "GetFindReferences()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FUICommandInfo> ReconstructNodes ; TSharedPtr<FUICommandInfo> BreakNodeLinks ; TSharedPtr<FUICommandInfo> AddExecutionPin ; TSharedPtr<FUICommandInfo> InsertExecutionPinBefore ; TSharedPtr<FUICommandInfo> InsertExecutionPinAfter ; TSharedPtr<FUICommandInfo> RemoveExecutionPin ; TSharedPtr<FUICommandInfo> RemoveThisStructVarPin ; TSharedPtr<FUICommandInfo> RemoveOtherStructVarPins ; TSharedPtr<FUICommandInfo> RestoreAllStructVarPins ; TSharedPtr<FUICommandInfo> AddOptionPin ; TSharedPtr<FUICommandInfo> RemoveOptionPin ; TSharedPtr<FUICommandInfo> ChangePinType ; TSharedPtr<FUICommandInfo> DeleteAndReconnectNodes ; TSharedPtr<FUICommandInfo> ShowAllPins ; TSharedPtr<FUICommandInfo> HideNoConnectionPins ; TSharedPtr<FUICommandInfo> HideNoConnectionNoDefaultPins ; TSharedPtr<FUICommandInfo> AddParentNode ; TSharedPtr<FUICommandInfo> CreateMatchingFunction ; TSharedPtr<FUICommandInfo> RemoveBreakpoint ; TSharedPtr<FUICommandInfo> AddBreakpoint ; TSharedPtr<FUICommandInfo> EnableBreakpoint ; TSharedPtr<FUICommandInfo> DisableBreakpoint ; TSharedPtr<FUICommandInfo> ToggleBreakpoint ; TSharedPtr<FUICommandInfo> CollapseNodes ; TSharedPtr<FUICommandInfo> PromoteSelectionToFunction ; TSharedPtr<FUICommandInfo> PromoteSelectionToMacro ; TSharedPtr<FUICommandInfo> ExpandNodes ; TSharedPtr<FUICommandInfo> CollapseSelectionToFunction ; TSharedPtr<FUICommandInfo> CollapseSelectionToMacro ; TSharedPtr<FUICommandInfo> ConvertFunctionToEvent ; TSharedPtr<FUICommandInfo> ConvertEventToFunction ; TSharedPtr<FUICommandInfo> AlignNodesTop ; TSharedPtr<FUICommandInfo> AlignNodesMiddle ; TSharedPtr<FUICommandInfo> AlignNodesBottom ; TSharedPtr<FUICommandInfo> AlignNodesLeft ; TSharedPtr<FUICommandInfo> AlignNodesCenter ; TSharedPtr<FUICommandInfo> AlignNodesRight ; TSharedPtr<FUICommandInfo> StraightenConnections ; TSharedPtr<FUICommandInfo> DistributeNodesHorizontally ; TSharedPtr<FUICommandInfo> DistributeNodesVertically ; TSharedPtr<FUICommandInfo> EnableNodes ; TSharedPtr<FUICommandInfo> DisableNodes ; TSharedPtr<FUICommandInfo> EnableNodes_Always ; TSharedPtr<FUICommandInfo> EnableNodes_DevelopmentOnly ; TSharedPtr<FUICommandInfo> SelectReferenceInLevel ; TSharedPtr<FUICommandInfo> AssignReferencedActor ; TSharedPtr<FUICommandInfo> FindReferences ; TSharedPtr<FUICommandInfo>)",
    "insertText": "GetFindReferences()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const FGraphEditorCommandsImpl&)",
    "insertText": "Get()"
  },
  {
    "label": "BuildFindReferencesMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFindReferencesMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "Unregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unregister()"
  }
]