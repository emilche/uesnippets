[
  {
    "label": "FAnimNode_StateMachine",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_StateMachine"
  },
  {
    "label": "FPoseLink",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseLink"
  },
  {
    "label": "FPoseLinkBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseLinkBase"
  },
  {
    "label": "FComponentSpacePoseLink",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentSpacePoseLink"
  },
  {
    "label": "FAnimNode_Base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_Base"
  },
  {
    "label": "FAnimationBaseContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationBaseContext"
  },
  {
    "label": "FAnimationInitializeContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationInitializeContext"
  },
  {
    "label": "FAnimationUpdateContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationUpdateContext"
  },
  {
    "label": "FPoseContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseContext"
  },
  {
    "label": "FComponentSpacePoseContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentSpacePoseContext"
  },
  {
    "label": "FAnimInstanceProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimInstanceProxy"
  },
  {
    "label": "FAnimNodeFunctionRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNodeFunctionRef"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FNodeFunctionCaller",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeFunctionCaller"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AnimNodeFunctionRef . generated . h \" struct FAnimNode_StateMachine ; struct FPoseLink ; struct FPoseLinkBase ; struct FComponentSpacePoseLink ; struct FAnimNode_Base ; struct FAnimationBaseContext ; struct FAnimationInitializeContext ; struct FAnimationUpdateContext ; struct FPoseContext ; struct FComponentSpacePoseContext ; struct FAnimInstanceProxy ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API void Initialize(const UClass* InClass)"
  },
  {
    "label": "Call()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Call(UObject* InObject, void* InParameters = nullptr)"
  },
  {
    "label": "SetFromFunctionName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFromFunctionName(FName InName)"
  },
  {
    "label": "SetFromFunction()",
    "kind": "Method",
    "detail": "Function (FunctionName = InName ; ClassName = NAME_None ; } void)",
    "insertText": "SetFromFunction(UFunction* InFunction)"
  },
  {
    "label": "GetFunctionName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetFunctionName()"
  },
  {
    "label": "InitialUpdate()",
    "kind": "Method",
    "detail": "Function (} ; template<> struct TStructOpsTypeTraits<FAnimNodeFunctionRef> : public TStructOpsTypeTraitsBase2<FAnimNodeFunctionRef> { enum { WithIdenticalViaEquality = true,} ; } ; namespace UE { namespace Anim { struct FNodeFunctionCaller { private : struct::FPoseLinkBase ; struct::FPoseLink ; struct::FComponentSpacePoseLink ; struct::FAnimInstanceProxy ; struct::FAnimNode_StateMachine ; void)",
    "insertText": "InitialUpdate(const FAnimationUpdateContext& InContext, FAnimNode_Base& InNode)"
  },
  {
    "label": "BecomeRelevant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BecomeRelevant(const FAnimationUpdateContext& InContext, FAnimNode_Base& InNode)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(const FAnimationUpdateContext& InContext, FAnimNode_Base& InNode)"
  },
  {
    "label": "CallFunction()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "CallFunction(const FAnimNodeFunctionRef& InFunction, const FAnimationBaseContext& InContext, FAnimNode_Base& InNode)"
  }
]