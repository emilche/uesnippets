[
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FPluginDisallowedDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPluginDisallowedDescriptor"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Serialization / JsonWriter . h \" class FJsonObject ; class FText ; struct FPluginDisallowedDescriptor { FString Name ; # if WITH_EDITOR FString Comment ; # endif bool)",
    "insertText": "Read(const FJsonObject& Object, FText* OutFailReason = nullptr)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write(TJsonWriter<>& Writer)"
  },
  {
    "label": "UpdateJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateJson(FJsonObject& JsonObject)"
  },
  {
    "label": "ReadArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadArray(const FJsonObject& Object, const TCHAR* Name, TArray<FPluginDisallowedDescriptor>& OutPlugins, FText* OutFailReason = nullptr)"
  },
  {
    "label": "WriteArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteArray(TJsonWriter<>& Writer, const TCHAR* ArrayName, const TArray<FPluginDisallowedDescriptor>& Plugins)"
  },
  {
    "label": "UpdateArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateArray(FJsonObject& JsonObject, const TCHAR* ArrayName, const TArray<FPluginDisallowedDescriptor>& Plugins)"
  }
]