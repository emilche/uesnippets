[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSlateApplicationBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateApplicationBase"
  },
  {
    "label": "FSlateTraceMetaData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTraceMetaData"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FSlateTrace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTrace"
  },
  {
    "label": "FScopedWidgetPaintTrace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedWidgetPaintTrace"
  },
  {
    "label": "FScopedWidgetUpdateTrace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedWidgetUpdateTrace"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ProfilingDebugging / TraceAuxiliary . h \" # include \" Trace / Config . h \" # include \" Trace / Trace . h \" # include \" FastUpdate / WidgetUpdateFlags . h \" # include \" Templates / UnrealTemplate . h \" # include \" Widgets / InvalidateWidgetReason . h \" # if UE_TRACE_ENABLED&& ! IS_PROGRAM&& ! UE_BUILD_SHIPPING # define UE_SLATE_TRACE_ENABLED 1 # else # define UE_SLATE_TRACE_ENABLED 0 # endif enum class ESlateTraceApplicationFlags : uint8 { None = 0,GlobalInvalidation = 1<<0,FastWidgetPath = 1<<1,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(ESlateTraceApplicationFlags)"
  },
  {
    "label": "UE_TRACE_CHANNEL_EXTERN()",
    "kind": "Method",
    "detail": "Function (class FSlateTraceMetaData ; class SWidget ;)",
    "insertText": "UE_TRACE_CHANNEL_EXTERN(SlateChannel, SLATECORE_API)"
  },
  {
    "label": "FScopedWidgetPaintTrace()",
    "kind": "Method",
    "detail": "Function (class FSlateTrace : public FNoncopyable { public : struct FScopedWidgetPaintTrace {)",
    "insertText": "FScopedWidgetPaintTrace(const SWidget* InWidget)"
  },
  {
    "label": "FScopedWidgetPaintTrace()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FScopedWidgetPaintTrace()"
  },
  {
    "label": "FScopedWidgetUpdateTrace()",
    "kind": "Method",
    "detail": "Function (uint64 StartCycle ; const SWidget* Widget ; int32 StartPaintCount ; } ; struct FScopedWidgetUpdateTrace {)",
    "insertText": "FScopedWidgetUpdateTrace(const SWidget* InWidget)"
  },
  {
    "label": "FScopedWidgetUpdateTrace()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FScopedWidgetUpdateTrace()"
  },
  {
    "label": "ApplicationTickAndDrawWidgets()",
    "kind": "Method",
    "detail": "Function (uint64 StartCycle ; const SWidget* Widget ; EWidgetUpdateFlags UpdateFlags ; } ; void)",
    "insertText": "ApplicationTickAndDrawWidgets(float DeltaTime)"
  },
  {
    "label": "ApplicationRegisterTraceEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplicationRegisterTraceEvents(FSlateApplicationBase& SlateApplication)"
  },
  {
    "label": "WidgetInvalidated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WidgetInvalidated(const SWidget* Widget, const SWidget* Investigator, EInvalidateWidgetReason Reason)"
  },
  {
    "label": "RootInvalidated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RootInvalidated(const SWidget* Widget, const SWidget* Investigator)"
  },
  {
    "label": "RootChildOrderInvalidated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RootChildOrderInvalidated(const SWidget* Widget, const SWidget* Investigator)"
  },
  {
    "label": "AddWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWidget(const SWidget* Widget)"
  },
  {
    "label": "UpdateWidgetInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWidgetInfo(const SWidget* Widget)"
  },
  {
    "label": "RemoveWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveWidget(const SWidget* Widget)"
  },
  {
    "label": "ConditionallyUpdateWidgetInfo()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ConditionallyUpdateWidgetInfo(const SWidget* Widget)"
  },
  {
    "label": "HandleOnTraceStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnTraceStarted(FTraceAuxiliary::EConnectionType TraceType, const FString& TraceDestination)"
  },
  {
    "label": "OutputWidgetUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputWidgetUpdate(const SWidget* Widget, uint64 StartCycle, uint64 EndCycle, EWidgetUpdateFlags UpdateFlags, uint32 AffectedCount)"
  },
  {
    "label": "UE_TRACE_SLATE_BOOKMARK()",
    "kind": "Method",
    "detail": "Function (private : uint8 TraceCounter ; } ; # define)",
    "insertText": "UE_TRACE_SLATE_BOOKMARK(Format, ...) \\ if (UE_TRACE_CHANNELEXPR_IS_ENABLED(SlateChannel))"
  },
  {
    "label": "TRACE_BOOKMARK()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "TRACE_BOOKMARK(Format, ##__VA_ARGS__)"
  },
  {
    "label": "UE_TRACE_SLATE_APPLICATION_TICK_AND_DRAW_WIDGETS()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "UE_TRACE_SLATE_APPLICATION_TICK_AND_DRAW_WIDGETS(DeltaTime) \\ FSlateTrace::ApplicationTickAndDrawWidgets(DeltaTime)"
  },
  {
    "label": "UE_TRACE_SLATE_APPLICATION_REGISTER_TRACE_EVENTS()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_TRACE_SLATE_APPLICATION_REGISTER_TRACE_EVENTS(SlateApplication) \\ FSlateTrace::ApplicationRegisterTraceEvents(SlateApplication)"
  },
  {
    "label": "UE_TRACE_SLATE_WIDGET_ADDED()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_TRACE_SLATE_WIDGET_ADDED(Widget) \\ FSlateTrace::AddWidget(Widget)"
  },
  {
    "label": "UE_TRACE_SLATE_WIDGET_DEBUG_INFO()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_TRACE_SLATE_WIDGET_DEBUG_INFO(Widget) \\ FSlateTrace::UpdateWidgetInfo(Widget)"
  },
  {
    "label": "UE_TRACE_SLATE_WIDGET_REMOVED()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_TRACE_SLATE_WIDGET_REMOVED(Widget) \\ FSlateTrace::RemoveWidget(Widget)"
  },
  {
    "label": "UE_TRACE_SCOPED_SLATE_WIDGET_PAINT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_TRACE_SCOPED_SLATE_WIDGET_PAINT(Widget) \\ FSlateTrace::FScopedWidgetPaintTrace _ScopedSlateWidgetPaintTrace(Widget)"
  },
  {
    "label": "UE_TRACE_SCOPED_SLATE_WIDGET_UPDATE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_TRACE_SCOPED_SLATE_WIDGET_UPDATE(Widget) \\ FSlateTrace::FScopedWidgetUpdateTrace _ScopedSlateWidgetUpdateTrace(Widget)"
  },
  {
    "label": "UE_TRACE_SLATE_WIDGET_INVALIDATED()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_TRACE_SLATE_WIDGET_INVALIDATED(Widget, Investigator, InvalidateWidgetReason) \\ FSlateTrace::WidgetInvalidated(Widget, Investigator, InvalidateWidgetReason)"
  },
  {
    "label": "UE_TRACE_SLATE_ROOT_INVALIDATED()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_TRACE_SLATE_ROOT_INVALIDATED(Widget, Investigator) \\ FSlateTrace::RootInvalidated(Widget, Investigator)"
  },
  {
    "label": "UE_TRACE_SLATE_ROOT_CHILDORDER_INVALIDATED()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_TRACE_SLATE_ROOT_CHILDORDER_INVALIDATED(Widget, Investigator) \\ FSlateTrace::RootChildOrderInvalidated(Widget, Investigator)"
  }
]