[
  {
    "label": "VpxRateControlRtcConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpxRateControlRtcConfig"
  },
  {
    "label": "vpx_rc_mode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "vpx_rc_mode"
  },
  {
    "label": "VpxRateControlRtcConfig()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_INTERNAL_VPX_RATECTRL_RTC_H_ # define VPX_VPX_INTERNAL_VPX_RATECTRL_RTC_H_ # include \" vpx / vpx_encoder . h \" namespace libvpx { struct VpxRateControlRtcConfig { public :)",
    "insertText": "VpxRateControlRtcConfig()"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (width = 1 2 8 0 ; height = 7 2 0 ; max_quantizer = 6 3 ; min_quantizer = 2 ; target_bandwidth = 1 0 0 0 ; buf_initial_sz = 6 0 0 ; buf_optimal_sz = 6 0 0 ; buf_sz = 1 0 0 0 ; undershoot_pct = overshoot_pct = 5 0 ; max_intra_bitrate_pct = 5 0 ; max_inter_bitrate_pct = 0 ; framerate = 3 0 . 0 ; ts_number_layers = 1 ; rc_mode = VPX_CBR ; aq_mode = 0 ; layer_target_bitrate [ 0 ] = static_cast<)",
    "insertText": "int(target_bandwidth)"
  }
]