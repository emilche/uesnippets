[
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "which",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "which"
  },
  {
    "label": "Thread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Thread"
  },
  {
    "label": "StreamCollectionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StreamCollectionInterface"
  },
  {
    "label": "StatsObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StatsObserver"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "SignalingState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SignalingState"
  },
  {
    "label": "IceGatheringState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IceGatheringState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IceConnectionState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IceConnectionState"
  },
  {
    "label": "TlsCertPolicy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TlsCertPolicy"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "IceTransportsType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IceTransportsType"
  },
  {
    "label": "BundlePolicy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BundlePolicy"
  },
  {
    "label": "RtcpMuxPolicy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RtcpMuxPolicy"
  },
  {
    "label": "TcpCandidatePolicy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TcpCandidatePolicy"
  },
  {
    "label": "CandidateNetworkPolicy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CandidateNetworkPolicy"
  },
  {
    "label": "ContinualGatheringPolicy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ContinualGatheringPolicy"
  },
  {
    "label": "PortAllocatorConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PortAllocatorConfig"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "with"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "cricket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "cricket"
  },
  {
    "label": "one",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "one"
  },
  {
    "label": "RTCOfferAnswerOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCOfferAnswerOptions"
  },
  {
    "label": "StatsOutputLevel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StatsOutputLevel"
  },
  {
    "label": "PeerConnectionObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PeerConnectionObserver"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "Options",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Options"
  },
  {
    "label": "AsString()",
    "kind": "Method",
    "detail": "Function (absl::string_view)",
    "insertText": "AsString(SignalingState)"
  },
  {
    "label": "AsString()",
    "kind": "Method",
    "detail": "Function (absl::string_view)",
    "insertText": "AsString(IceGatheringState state)"
  },
  {
    "label": "AsString()",
    "kind": "Method",
    "detail": "Function (absl::string_view)",
    "insertText": "AsString(PeerConnectionState state)"
  },
  {
    "label": "AsString()",
    "kind": "Method",
    "detail": "Function (absl::string_view)",
    "insertText": "AsString(IceConnectionState state)"
  },
  {
    "label": "RTCConfiguration()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "RTCConfiguration(RTCConfigurationType type)"
  },
  {
    "label": "RTCError()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "RTCError()"
  },
  {
    "label": "RTCError()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "RTCError(RTCErrorType::INTERNAL_ERROR, \"dummy function called\")"
  },
  {
    "label": "PeerConnectionDependencies()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "PeerConnectionDependencies(PeerConnectionObserver* observer_in)"
  },
  {
    "label": "CreatePeerConnectionOrError()",
    "kind": "Method",
    "detail": "Function (RTCErrorOr<rtc::scoped_refptr<PeerConnectionInterface>>)",
    "insertText": "CreatePeerConnectionOrError(\n      const PeerConnectionInterface::RTCConfiguration& configuration,\n      PeerConnectionDependencies dependencies)"
  },
  {
    "label": "CreatePeerConnection()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<PeerConnectionInterface>)",
    "insertText": "CreatePeerConnection(\n      const PeerConnectionInterface::RTCConfiguration& configuration,\n      PeerConnectionDependencies dependencies)"
  },
  {
    "label": "CreatePeerConnection()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<PeerConnectionInterface>)",
    "insertText": "CreatePeerConnection(\n      const PeerConnectionInterface::RTCConfiguration& configuration,\n      std::unique_ptr<cricket::PortAllocator> allocator,\n      std::unique_ptr<rtc::RTCCertificateGeneratorInterface> cert_generator,\n      PeerConnectionObserver* observer)"
  },
  {
    "label": "CreateModularPeerConnectionFactory()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<PeerConnectionFactoryInterface>)",
    "insertText": "CreateModularPeerConnectionFactory(\n    PeerConnectionFactoryDependencies dependencies)"
  }
]