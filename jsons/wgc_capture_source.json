[
  {
    "label": "WgcCaptureSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WgcCaptureSource"
  },
  {
    "label": "WgcCaptureSourceFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WgcCaptureSourceFactory"
  },
  {
    "label": "WgcWindowSourceFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WgcWindowSourceFactory"
  },
  {
    "label": "WgcScreenSourceFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WgcScreenSourceFactory"
  },
  {
    "label": "WgcWindowSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WgcWindowSource"
  },
  {
    "label": "WgcScreenSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WgcScreenSource"
  },
  {
    "label": "WgcCaptureSource()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_WIN_WGC_CAPTURE_SOURCE_H_ # define MODULES_DESKTOP_CAPTURE_WIN_WGC_CAPTURE_SOURCE_H_ # include<windows . graphics . capture . h> # include<windows . graphics . h> # include<wrl / client . h> # include<memory> # include \" absl / types / optional . h \" # include \" modules / desktop_capture / desktop_capturer . h \" # include \" modules / desktop_capture / desktop_geometry . h \" namespace webrtc { class WgcCaptureSource { public :)",
    "insertText": "WgcCaptureSource(DesktopCapturer::SourceId source_id)"
  },
  {
    "label": "WgcCaptureSource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "WgcCaptureSource()"
  },
  {
    "label": "GetTopLeft()",
    "kind": "Method",
    "detail": "Function (DesktopVector)",
    "insertText": "GetTopLeft()"
  },
  {
    "label": "IsCapturable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCapturable()"
  },
  {
    "label": "FocusOnSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FocusOnSource()"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (ABI::Windows::Graphics::SizeInt32)",
    "insertText": "GetSize()"
  },
  {
    "label": "GetCaptureItem()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "GetCaptureItem(Microsoft::WRL::ComPtr< ABI::Windows::Graphics::Capture::IGraphicsCaptureItem>* result)"
  },
  {
    "label": "GetSourceId()",
    "kind": "Method",
    "detail": "Function (DesktopCapturer::SourceId)",
    "insertText": "GetSourceId()"
  },
  {
    "label": "WgcCaptureSourceFactory()",
    "kind": "Method",
    "detail": "Function (private : Microsoft::WRL::ComPtr<ABI::Windows::Graphics::Capture::IGraphicsCaptureItem> item_ ; const DesktopCapturer::SourceId source_id_ ; } ; class WgcCaptureSourceFactory { public : ~)",
    "insertText": "WgcCaptureSourceFactory()"
  },
  {
    "label": "CreateCaptureSource()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<WgcCaptureSource>)",
    "insertText": "CreateCaptureSource(DesktopCapturer::SourceId)"
  },
  {
    "label": "WgcWindowSourceFactory()",
    "kind": "Method",
    "detail": "Function (} ; class WgcWindowSourceFactory final : public WgcCaptureSourceFactory { public :)",
    "insertText": "WgcWindowSourceFactory()"
  },
  {
    "label": "WgcWindowSourceFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WgcWindowSourceFactory(const WgcWindowSourceFactory&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WgcWindowSourceFactory&)",
    "insertText": "operator(const WgcWindowSourceFactory&)"
  },
  {
    "label": "WgcScreenSourceFactory()",
    "kind": "Method",
    "detail": "Function (} ; class WgcScreenSourceFactory final : public WgcCaptureSourceFactory { public :)",
    "insertText": "WgcScreenSourceFactory()"
  },
  {
    "label": "WgcScreenSourceFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WgcScreenSourceFactory(const WgcScreenSourceFactory&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WgcScreenSourceFactory&)",
    "insertText": "operator(const WgcScreenSourceFactory&)"
  },
  {
    "label": "WgcWindowSource()",
    "kind": "Method",
    "detail": "Function (} ; class WgcWindowSource final : public WgcCaptureSource { public :)",
    "insertText": "WgcWindowSource(DesktopCapturer::SourceId source_id)"
  },
  {
    "label": "WgcWindowSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WgcWindowSource(const WgcWindowSource&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WgcWindowSource&)",
    "insertText": "operator(const WgcWindowSource&)"
  },
  {
    "label": "WgcWindowSource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "WgcWindowSource()"
  },
  {
    "label": "CreateCaptureItem()",
    "kind": "Method",
    "detail": "Function (private : HRESULT)",
    "insertText": "CreateCaptureItem(Microsoft::WRL::ComPtr< ABI::Windows::Graphics::Capture::IGraphicsCaptureItem>* result)"
  },
  {
    "label": "WgcScreenSource()",
    "kind": "Method",
    "detail": "Function (} ; class WgcScreenSource final : public WgcCaptureSource { public :)",
    "insertText": "WgcScreenSource(DesktopCapturer::SourceId source_id)"
  },
  {
    "label": "WgcScreenSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WgcScreenSource(const WgcScreenSource&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WgcScreenSource&)",
    "insertText": "operator(const WgcScreenSource&)"
  },
  {
    "label": "WgcScreenSource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "WgcScreenSource()"
  }
]