[
  {
    "label": "FNaniteVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNaniteVertexFactory"
  },
  {
    "label": "DECLARE_VERTEX_FACTORY_TYPE_API()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RenderingThread . h \" # include \" ShaderParameters . h \" # include \" VertexFactory . h \" # include \" LocalVertexFactory . h \" # include \" PrimitiveViewRelevance . h \" class FNaniteVertexFactory final : public FVertexFactory {)",
    "insertText": "DECLARE_VERTEX_FACTORY_TYPE_API(FNaniteVertexFactory, ENGINE_API)"
  },
  {
    "label": "FNaniteVertexFactory()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FNaniteVertexFactory(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "FNaniteVertexFactory()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FNaniteVertexFactory()"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  }
]