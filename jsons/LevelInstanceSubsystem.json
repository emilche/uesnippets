[
  {
    "label": "ILevelInstanceInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILevelInstanceInterface"
  },
  {
    "label": "ULevelInstanceEditorObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelInstanceEditorObject"
  },
  {
    "label": "ULevelStreamingLevelInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstance"
  },
  {
    "label": "ULevelStreamingLevelInstanceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstanceEditor"
  },
  {
    "label": "ULevelStreamingLevelInstanceEditorPropertyOverride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstanceEditorPropertyOverride"
  },
  {
    "label": "UWorldPartitionSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionSubsystem"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "FActorPropertyOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorPropertyOverride"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ULevelInstanceSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelInstanceSubsystem"
  },
  {
    "label": "FLevelInstanceEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelInstanceEditorModule"
  },
  {
    "label": "FLevelInstanceActorDetailsHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelInstanceActorDetailsHelper"
  },
  {
    "label": "FLevelInstanceEditorModeToolkitHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelInstanceEditorModeToolkitHelper"
  },
  {
    "label": "FLevelInstanceMenuUtils",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelInstanceMenuUtils"
  },
  {
    "label": "ULevelInstanceEditorMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelInstanceEditorMode"
  },
  {
    "label": "ULevelInstancePropertyOverrideAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelInstancePropertyOverrideAsset"
  },
  {
    "label": "FLevelInstanceEdit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelInstanceEdit"
  },
  {
    "label": "FPropertyOverrideEdit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyOverrideEdit"
  },
  {
    "label": "FLevelsToRemoveScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelsToRemoveScope"
  },
  {
    "label": "FLevelInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelInstance"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Subsystems / WorldSubsystem . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" UObject / NameTypes . h \" # include \" UObject / GCObject . h \" # include \" Folder . h \" # include \" LevelInstance / LevelInstanceTypes . h \" # include \" WorldPartition / Filter / WorldPartitionActorFilter . h \" # include \" WorldPartition / WorldPartitionHandle . h \" # include \" WorldPartition / WorldPartitionActorContainerID . h \" # include \" LevelInstance / LevelInstancePropertyOverrideAsset . h \" # include \" Streaming / StreamingWorldSubsystemInterface . h \" # if WITH_EDITOR # include \" EditorLevelUtils . h \" # include \" Internationalization / Text . h \" # endif # include \" LevelInstanceSubsystem . generated . h \" class ILevelInstanceInterface ; class ULevelInstanceEditorObject ; class ULevelStreamingLevelInstance ; class ULevelStreamingLevelInstanceEditor ; class ULevelStreamingLevelInstanceEditorPropertyOverride ; class UWorldPartitionSubsystem ; class UBlueprint ; struct FActorPropertyOverride ; enum class ELevelInstanceBreakFlags : uint8 { None = 0,KeepFolders = 1<<0,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(ELevelInstanceBreakFlags)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API ULevelInstanceSubsystem()"
  },
  {
    "label": "ULevelInstanceSubsystem()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ULevelInstanceSubsystem()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSubsystemCollectionBase& Collection)"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "DoesSupportWorldType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesSupportWorldType(EWorldType::Type WorldType)"
  },
  {
    "label": "OnUpdateStreamingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUpdateStreamingState()"
  },
  {
    "label": "GetLevelInstance()",
    "kind": "Method",
    "detail": "Function (ILevelInstanceInterface*)",
    "insertText": "GetLevelInstance(const FLevelInstanceID& LevelInstanceID)"
  },
  {
    "label": "GetOwningLevelInstance()",
    "kind": "Method",
    "detail": "Function (ILevelInstanceInterface*)",
    "insertText": "GetOwningLevelInstance(const ULevel* Level)"
  },
  {
    "label": "RegisterLevelInstance()",
    "kind": "Method",
    "detail": "Function (FLevelInstanceID)",
    "insertText": "RegisterLevelInstance(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "GetOwningLevel()",
    "kind": "Method",
    "detail": "Function (ULevel*)",
    "insertText": "GetOwningLevel(const ULevel* Level, bool bFollowChainToNonLevelInstanceOwningLevel = false)"
  },
  {
    "label": "UnregisterLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterLevelInstance(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "RequestLoadLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestLoadLevelInstance(ILevelInstanceInterface* LevelInstance, bool bUpdate)"
  },
  {
    "label": "RequestUnloadLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestUnloadLevelInstance(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "IsLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoaded(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "IsLoading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoading(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "ForEachLevelInstanceAncestors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachLevelInstanceAncestors(const AActor* Actor, TFunctionRef<bool(const ILevelInstanceInterface*)> Operation)"
  },
  {
    "label": "ForEachLevelInstanceAncestors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachLevelInstanceAncestors(AActor* Actor, TFunctionRef<bool(ILevelInstanceInterface*)> Operation)"
  },
  {
    "label": "ForEachLevelInstanceAncestorsAndSelf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachLevelInstanceAncestorsAndSelf(AActor* Actor, TFunctionRef<bool(ILevelInstanceInterface*)> Operation)"
  },
  {
    "label": "ForEachLevelInstanceAncestorsAndSelf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachLevelInstanceAncestorsAndSelf(const AActor* Actor, TFunctionRef<bool(const ILevelInstanceInterface*)> Operation)"
  },
  {
    "label": "GetLevelInstanceLevelStreaming()",
    "kind": "Method",
    "detail": "Function (ULevelStreamingLevelInstance*)",
    "insertText": "GetLevelInstanceLevelStreaming(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "ForEachActorInLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachActorInLevelInstance(const ILevelInstanceInterface* LevelInstance, TFunctionRef<bool(AActor* LevelActor)> Operation)"
  },
  {
    "label": "GetLevelInstanceLevel()",
    "kind": "Method",
    "detail": "Function (ULevel*)",
    "insertText": "GetLevelInstanceLevel(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "CanUseWorldAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUseWorldAsset(const ILevelInstanceInterface* LevelInstance, TSoftObjectPtr<UWorld> WorldAsset, FString* OutReason)"
  },
  {
    "label": "CheckForLoop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForLoop(const ILevelInstanceInterface* LevelInstance, TSoftObjectPtr<UWorld> WorldAsset, TArray<TPair<FText, TSoftObjectPtr<UWorld>>>* LoopInfo = nullptr, const ILevelInstanceInterface** LoopStart = nullptr)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "Tick()"
  },
  {
    "label": "OnExitEditorMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExitEditorMode()"
  },
  {
    "label": "OnTryExitEditorMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTryExitEditorMode()"
  },
  {
    "label": "CanEditLevelInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditLevelInstance(const ILevelInstanceInterface* LevelInstance, FText* OutReason = nullptr)"
  },
  {
    "label": "CanCommitLevelInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCommitLevelInstance(const ILevelInstanceInterface* LevelInstance, bool bDiscardEdits = false, FText* OutReason = nullptr)"
  },
  {
    "label": "EditLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditLevelInstance(ILevelInstanceInterface* LevelInstance, TWeakObjectPtr<AActor> ContextActorPtr = nullptr)"
  },
  {
    "label": "CommitLevelInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CommitLevelInstance(ILevelInstanceInterface* LevelInstance, bool bDiscardEdits = false, TSet<FName>* DirtyPackages = nullptr)"
  },
  {
    "label": "IsEditingLevelInstanceDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditingLevelInstanceDirty(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "IsEditingLevelInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditingLevelInstance(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "GetLevelInstanceEditorBounds()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetLevelInstanceEditorBounds(const ILevelInstanceInterface* LevelInstance, FBox& OutBounds)"
  },
  {
    "label": "GetLevelInstanceBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLevelInstanceBounds(const ILevelInstanceInterface* LevelInstance, FBox& OutBounds)"
  },
  {
    "label": "GetLevelInstanceBoundsFromPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLevelInstanceBoundsFromPackage(const FTransform& InstanceTransform, FName LevelPackage, FBox& OutBounds)"
  },
  {
    "label": "ForEachLevelInstanceChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachLevelInstanceChild(const ILevelInstanceInterface* LevelInstance, bool bRecursive, TFunctionRef<bool(const ILevelInstanceInterface*)> Operation)"
  },
  {
    "label": "ForEachLevelInstanceChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachLevelInstanceChild(ILevelInstanceInterface* LevelInstance, bool bRecursive, TFunctionRef<bool(ILevelInstanceInterface*)> Operation)"
  },
  {
    "label": "HasDirtyChildrenLevelInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDirtyChildrenLevelInstances(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "SetIsHiddenEdLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsHiddenEdLayer(ILevelInstanceInterface* LevelInstance, bool bIsHiddenEdLayer)"
  },
  {
    "label": "SetIsTemporarilyHiddenInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsTemporarilyHiddenInEditor(ILevelInstanceInterface* LevelInstance, bool bIsHidden)"
  },
  {
    "label": "SetCurrent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCurrent(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "IsCurrent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCurrent(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "CreateLevelInstanceFrom()",
    "kind": "Method",
    "detail": "Function (ILevelInstanceInterface*)",
    "insertText": "CreateLevelInstanceFrom(const TArray<AActor*>& ActorsToMove, const FNewLevelInstanceParams& CreationParams)"
  },
  {
    "label": "CanCreateLevelInstanceFrom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateLevelInstanceFrom(const TArray<AActor*>& ActorsToMove, FText* OutReason = nullptr)"
  },
  {
    "label": "MoveActorsToLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveActorsToLevel(const TArray<AActor*>& ActorsToRemove, ULevel* DestinationLevel, TArray<AActor*>* OutActors = nullptr)"
  },
  {
    "label": "MoveActorsTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveActorsTo(ILevelInstanceInterface* LevelInstance, const TArray<AActor*>& ActorsToMove, TArray<AActor*>* OutActors = nullptr)"
  },
  {
    "label": "BreakLevelInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BreakLevelInstance(ILevelInstanceInterface* LevelInstance, uint32 Levels = 1, TArray<AActor*>* OutMovedActors = nullptr, ELevelInstanceBreakFlags Flags = ELevelInstanceBreakFlags::None)"
  },
  {
    "label": "CanBreakLevelInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBreakLevelInstance(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "CanMoveActorToLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMoveActorToLevel(const AActor* Actor, FText* OutReason = nullptr)"
  },
  {
    "label": "OnActorDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorDeleted(AActor* Actor)"
  },
  {
    "label": "LevelInstanceHasLevelScriptBlueprint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LevelInstanceHasLevelScriptBlueprint(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "GetParentLevelInstance()",
    "kind": "Method",
    "detail": "Function (ILevelInstanceInterface*)",
    "insertText": "GetParentLevelInstance(const AActor* Actor)"
  },
  {
    "label": "BlockLoadLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockLoadLevelInstance(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "BlockUnloadLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockUnloadLevelInstance(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "HasChildEdit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasChildEdit(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "HasParentEdit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasParentEdit(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "GetLevelInstances()",
    "kind": "Method",
    "detail": "Function (TArray<ILevelInstanceInterface*>)",
    "insertText": "GetLevelInstances(const FString& WorldAssetPackage)"
  },
  {
    "label": "ForEachLevelInstanceActorAncestors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachLevelInstanceActorAncestors(const ULevel* Level, TFunctionRef<bool(AActor*)> Operation)"
  },
  {
    "label": "GetParentLevelInstanceActors()",
    "kind": "Method",
    "detail": "Function (TArray<AActor*>)",
    "insertText": "GetParentLevelInstanceActors(const ULevel* Level)"
  },
  {
    "label": "PrefixWithParentLevelInstanceActorLabels()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "PrefixWithParentLevelInstanceActorLabels(const FString& ActorLabel, const ULevel* Level)"
  },
  {
    "label": "CheckForLoop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForLoop(const ILevelInstanceInterface* LevelInstance, TArray<TPair<FText, TSoftObjectPtr<UWorld>>>* LoopInfo = nullptr, const ILevelInstanceInterface** LoopStart = nullptr)"
  },
  {
    "label": "OnLevelInstanceChanged()",
    "kind": "Method",
    "detail": "Function (FLevelInstanceChanged&)",
    "insertText": "OnLevelInstanceChanged()"
  },
  {
    "label": "OnLevelInstancesUpdated()",
    "kind": "Method",
    "detail": "Function (FLevelInstancesUpdated&)",
    "insertText": "OnLevelInstancesUpdated()"
  },
  {
    "label": "PassLevelInstanceFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassLevelInstanceFilter(UWorld* World, const FWorldPartitionHandle& Actor)"
  },
  {
    "label": "IsEditingLevelInstancePropertyOverrides()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditingLevelInstancePropertyOverrides(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "IsSubSelectionEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSubSelectionEnabled()"
  },
  {
    "label": "GetLevelInstances()",
    "kind": "Method",
    "detail": "Function (private : class FLevelInstanceEditorModule ; struct FLevelInstanceActorDetailsHelper ; struct FLevelInstanceEditorModeToolkitHelper ; struct FLevelInstanceMenuUtils ; class ILevelInstanceInterface ; class ULevelInstanceEditorMode ; class ULevelStreamingLevelInstanceEditor ; class ULevelStreamingLevelInstanceEditorPropertyOverride ; class ULevelInstancePropertyOverrideAsset ; TArray<ILevelInstanceInterface*>)",
    "insertText": "GetLevelInstances(const TSoftObjectPtr<ULevelInstancePropertyOverrideAsset>& PropertyOverrideAsset)"
  },
  {
    "label": "HasParentPropertyOverridesEdit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasParentPropertyOverridesEdit(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "GetEditingPropertyOverridesLevelInstance()",
    "kind": "Method",
    "detail": "Function (ILevelInstanceInterface*)",
    "insertText": "GetEditingPropertyOverridesLevelInstance()"
  },
  {
    "label": "CanCommitLevelInstancePropertyOverrides()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCommitLevelInstancePropertyOverrides(const ILevelInstanceInterface* LevelInstance, bool bDiscardEdits = false, FText* OutReason = nullptr)"
  },
  {
    "label": "CanEditLevelInstancePropertyOverrides()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditLevelInstancePropertyOverrides(const ILevelInstanceInterface* LevelInstance, FText* OutReason = nullptr)"
  },
  {
    "label": "EditLevelInstancePropertyOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditLevelInstancePropertyOverrides(ILevelInstanceInterface* LevelInstance, AActor* ContextActor)"
  },
  {
    "label": "CommitLevelInstancePropertyOverrides()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CommitLevelInstancePropertyOverrides(ILevelInstanceInterface* LevelInstance, bool bDiscardEdits = false)"
  },
  {
    "label": "CanResetPropertyOverridesForActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanResetPropertyOverridesForActor(AActor* Actor)"
  },
  {
    "label": "ResetPropertyOverridesForActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPropertyOverridesForActor(AActor* Actor)"
  },
  {
    "label": "CanResetPropertyOverrides()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanResetPropertyOverrides(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "ResetPropertyOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPropertyOverrides(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "RegisterPrimitiveColorHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPrimitiveColorHandler()"
  },
  {
    "label": "UnregisterPrimitiveColorHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterPrimitiveColorHandler()"
  },
  {
    "label": "GetLevelInstanceBoundsInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLevelInstanceBoundsInternal(const ILevelInstanceInterface* LevelInstance, bool bIsEditorBounds, FBox& OutBounds)"
  },
  {
    "label": "UpdateStreamingStateInternal()",
    "kind": "Method",
    "detail": "Function (# endif class ULevelStreamingLevelInstance ; private : void)",
    "insertText": "UpdateStreamingStateInternal()"
  },
  {
    "label": "BlockOnLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockOnLoading()"
  },
  {
    "label": "LoadLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadLevelInstance(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "UnloadLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnloadLevelInstance(const FLevelInstanceID& LevelInstanceID)"
  },
  {
    "label": "ForEachActorInLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachActorInLevel(ULevel* Level, TFunctionRef<bool(AActor * LevelActor)> Operation)"
  },
  {
    "label": "RegisterLoadedLevelStreamingLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterLoadedLevelStreamingLevelInstance(ULevelStreamingLevelInstance* LevelStreaming)"
  },
  {
    "label": "CreateNewStreamingLevelForWorld()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR ULevelStreamingLevelInstanceEditor*)",
    "insertText": "CreateNewStreamingLevelForWorld(UWorld& InWorld, const EditorLevelUtils::FCreateNewStreamingLevelForWorldParams& InParams)"
  },
  {
    "label": "ResetLoadersForWorldAssetInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetLoadersForWorldAssetInternal(const FString& WorldAsset)"
  },
  {
    "label": "OnAssetsPreDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetsPreDelete(const TArray<UObject*>& Objects)"
  },
  {
    "label": "OnPreSaveWorldWithContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreSaveWorldWithContext(UWorld* InWorld, FObjectPreSaveContext ObjectSaveContext)"
  },
  {
    "label": "OnPreWorldRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreWorldRename(UWorld* InWorld, const TCHAR* InName, UObject* NewOuter, ERenameFlags Flags, bool& bShouldFailRename)"
  },
  {
    "label": "OnWorldCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldCleanup(UWorld* InWorld, bool bSessionEnded, bool bCleanupResources)"
  },
  {
    "label": "RegisterLoadedLevelStreamingLevelInstanceEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterLoadedLevelStreamingLevelInstanceEditor(ULevelStreamingLevelInstanceEditor* LevelStreaming)"
  },
  {
    "label": "OnEditChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditChild(const FLevelInstanceID& LevelInstanceID)"
  },
  {
    "label": "OnCommitChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommitChild(const FLevelInstanceID& LevelInstanceID, bool bChildChanged)"
  },
  {
    "label": "ForEachLevelInstanceChildImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ForEachLevelInstanceChildImpl(const ILevelInstanceInterface* LevelInstance, bool bRecursive, TFunctionRef<bool(const ILevelInstanceInterface*)> Operation)"
  },
  {
    "label": "ForEachLevelInstanceChildImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ForEachLevelInstanceChildImpl(ILevelInstanceInterface* LevelInstance, bool bRecursive, TFunctionRef<bool(ILevelInstanceInterface*)> Operation)"
  },
  {
    "label": "BreakLevelInstance_Impl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakLevelInstance_Impl(ILevelInstanceInterface* LevelInstance, uint32 Levels, TArray<AActor*>& OutMovedActors, ELevelInstanceBreakFlags Flags)"
  },
  {
    "label": "ShouldIgnoreDirtyPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldIgnoreDirtyPackage(UPackage* DirtyPackage, const UWorld* EditingWorld)"
  },
  {
    "label": "FLevelInstanceEdit()",
    "kind": "Method",
    "detail": "Function (class FLevelInstanceEdit { public : TObjectPtr<ULevelStreamingLevelInstanceEditor> LevelStreaming ; TObjectPtr<ULevelInstanceEditorObject> EditorObject ; TObjectPtr<AActor> LevelInstanceActor ;)",
    "insertText": "FLevelInstanceEdit(ULevelStreamingLevelInstanceEditor* InLevelStreaming, ILevelInstanceInterface* InLevelInstance)"
  },
  {
    "label": "FLevelInstanceEdit()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLevelInstanceEdit()"
  },
  {
    "label": "GetEditWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetEditWorld()"
  },
  {
    "label": "GetLevelInstance()",
    "kind": "Method",
    "detail": "Function (ILevelInstanceInterface*)",
    "insertText": "GetLevelInstance()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetPackagesToSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPackagesToSave(TArray<UPackage*>& OutPackagesToSave)"
  },
  {
    "label": "CanDiscard()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDiscard(FText* OutReason = nullptr)"
  },
  {
    "label": "HasCommittedChanges()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCommittedChanges()"
  },
  {
    "label": "MarkCommittedChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkCommittedChanges()"
  },
  {
    "label": "FPropertyOverrideEdit()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyOverrideEdit { public :)",
    "insertText": "FPropertyOverrideEdit(ULevelStreamingLevelInstanceEditorPropertyOverride* InLevelStreaming)"
  },
  {
    "label": "FPropertyOverrideEdit()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPropertyOverrideEdit()"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Save(ILevelInstanceInterface* InLevelInstanceOverrideOwner)"
  },
  {
    "label": "GetLevelInstancePropertyOverridesContext()",
    "kind": "Method",
    "detail": "Function (} ; FActorContainerID)",
    "insertText": "GetLevelInstancePropertyOverridesContext(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "HasEditableLevelInstancePropertyOverrides()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasEditableLevelInstancePropertyOverrides(TArray<FLevelInstanceActorPropertyOverride>& InPropertyOverrides)"
  },
  {
    "label": "GetLevelInstancePropertyOverridesForActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLevelInstancePropertyOverridesForActor(const AActor* Actor, FActorContainerID PropertyOverrideContext, TArray<FLevelInstanceActorPropertyOverride>& OutPropertyOverrides)"
  },
  {
    "label": "GetLevelInstancePropertyOverridesEditOwner()",
    "kind": "Method",
    "detail": "Function (ILevelInstanceInterface*)",
    "insertText": "GetLevelInstancePropertyOverridesEditOwner(ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "GetLevelInstancePropertyOverridesEditOwner()",
    "kind": "Method",
    "detail": "Function (const ILevelInstanceInterface*)",
    "insertText": "GetLevelInstancePropertyOverridesEditOwner(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "EditLevelInstanceInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EditLevelInstanceInternal(ILevelInstanceInterface* LevelInstance, TWeakObjectPtr<AActor> ContextActorPtr, const FString& InActorNameToSelect, bool bRecursive)"
  },
  {
    "label": "CommitLevelInstanceInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CommitLevelInstanceInternal(TUniquePtr<FLevelInstanceEdit>& LevelInstanceEdit, bool bDiscardEdits = false, bool bDiscardOnFailure = false, TSet<FName>* DirtyPackages = nullptr)"
  },
  {
    "label": "CommitLevelInstancePropertyOverridesInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CommitLevelInstancePropertyOverridesInternal(TUniquePtr<FPropertyOverrideEdit>& InPropertyOverrideEdit, bool bDiscardEdits)"
  },
  {
    "label": "CanEditLevelInstanceCommon()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditLevelInstanceCommon(const ILevelInstanceInterface* LevelInstance, FText* OutReason = nullptr)"
  },
  {
    "label": "OnExitEditorModeInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExitEditorModeInternal(bool bForceExit)"
  },
  {
    "label": "TryCommitLevelInstanceEdit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCommitLevelInstanceEdit(bool bForceExit)"
  },
  {
    "label": "TryCommitLevelInstancePropertyOverrideEdit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCommitLevelInstancePropertyOverrideEdit(bool bForceExit)"
  },
  {
    "label": "GetLevelInstanceEdit()",
    "kind": "Method",
    "detail": "Function (const FLevelInstanceEdit*)",
    "insertText": "GetLevelInstanceEdit(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "IsLevelInstanceEditDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLevelInstanceEditDirty(const FLevelInstanceEdit* LevelInstanceEdit)"
  },
  {
    "label": "PromptUserForCommit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PromptUserForCommit(const FLevelInstanceEdit* InLevelInstanceEdit, bool& bOutDiscard, bool bForceCommit = false)"
  },
  {
    "label": "PromptUserForCommitPropertyOverrides()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PromptUserForCommitPropertyOverrides(const FPropertyOverrideEdit* InPropertyOverrideEdit, bool& bOutDiscard, bool bForceCommit = false)"
  },
  {
    "label": "GetLevelInstancePropertyOverrideEdit()",
    "kind": "Method",
    "detail": "Function (const FPropertyOverrideEdit*)",
    "insertText": "GetLevelInstancePropertyOverrideEdit(const ILevelInstanceInterface* LevelInstance)"
  },
  {
    "label": "RegisterLoadedLevelStreamingPropertyOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterLoadedLevelStreamingPropertyOverride(ULevelStreamingLevelInstanceEditorPropertyOverride* LevelStreaming)"
  },
  {
    "label": "UpdateLevelInstancesFromPropertyOverrideAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLevelInstancesFromPropertyOverrideAsset(const TSoftObjectPtr<ULevelInstancePropertyOverrideAsset>& PreviousAssetPath, ULevelInstancePropertyOverrideAsset* NewAsset)"
  },
  {
    "label": "ForEachLevelStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachLevelStreaming(TFunctionRef<bool(ULevelStreaming*)> Operation)"
  },
  {
    "label": "GetActorNameToSelectFromContext()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetActorNameToSelectFromContext(const ILevelInstanceInterface* LevelInstance, const AActor* ContextActor, const FString& DefaultName = FString())"
  },
  {
    "label": "SelectActorFromActorName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectActorFromActorName(ILevelInstanceInterface* LevelInstance, const FString& ActorName)"
  },
  {
    "label": "FLevelsToRemoveScope()",
    "kind": "Method",
    "detail": "Function (struct FLevelsToRemoveScope {)",
    "insertText": "FLevelsToRemoveScope(ULevelInstanceSubsystem* InOwner)"
  },
  {
    "label": "FLevelsToRemoveScope()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLevelsToRemoveScope()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  }
]