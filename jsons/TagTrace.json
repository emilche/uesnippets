[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTagData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTagData"
  },
  {
    "label": "FMemScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemScope"
  },
  {
    "label": "FDefaultMemScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDefaultMemScope"
  },
  {
    "label": "FMemScopePtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemScopePtr"
  },
  {
    "label": "MemoryTrace_AnnounceCustomTag()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Trace / Config . h \" # include \" Trace / Detail / LogScope . h \" class FName ; enum class ELLMTag : uint8 ; namespace UE { namespace LLMPrivate { class FTagData ; } } int32)",
    "insertText": "MemoryTrace_AnnounceCustomTag(int32 Tag, int32 ParentTag, const TCHAR* Display)"
  },
  {
    "label": "MemoryTrace_AnnounceFNameTag()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MemoryTrace_AnnounceFNameTag(const class FName& TagName)"
  },
  {
    "label": "MemoryTrace_GetActiveTag()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MemoryTrace_GetActiveTag()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (int32 TRACE_TAG = 2 5 7 ; # if !)",
    "insertText": "defined(UE_MEMORY_TAGS_TRACE_ENABLED)"
  },
  {
    "label": "FMemScope()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FMemScope()"
  },
  {
    "label": "FMemScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMemScope(int32 InTag, bool bShouldActivate = true)"
  },
  {
    "label": "FMemScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMemScope(ELLMTag InTag, bool bShouldActivate = true)"
  },
  {
    "label": "FMemScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMemScope(const class FName& InName, bool bShouldActivate = true)"
  },
  {
    "label": "FMemScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMemScope(const UE::LLMPrivate::FTagData* TagData, bool bShouldActivate = true)"
  },
  {
    "label": "SetTagAndActivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTagAndActivate(const class FName& InName, bool bShouldActivate = true)"
  },
  {
    "label": "ActivateScope()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ActivateScope(int32 InTag)"
  },
  {
    "label": "FDefaultMemScope()",
    "kind": "Method",
    "detail": "Function (UE::Trace::Private::FScopedLogScope Inner ; int32 PrevTag ; } ; template<TagType> class FDefaultMemScope : public FMemScope { public :)",
    "insertText": "FDefaultMemScope(TagType InTag) : FMemScope(InTag, MemoryTrace_GetActiveTag() == 0)"
  },
  {
    "label": "FMemScopePtr()",
    "kind": "Method",
    "detail": "Function (} } ; class FMemScopePtr { public :)",
    "insertText": "FMemScopePtr(uint64 InPtr)"
  },
  {
    "label": "FMemScopePtr()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMemScopePtr()"
  },
  {
    "label": "UE_MEMSCOPE()",
    "kind": "Method",
    "detail": "Function (private : UE::Trace::Private::FScopedLogScope Inner ; } ; # define)",
    "insertText": "UE_MEMSCOPE(InTag) FMemScope PREPROCESSOR_JOIN(MemScope,__LINE__)(InTag)"
  },
  {
    "label": "UE_MEMSCOPE_PTR()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_MEMSCOPE_PTR(InPtr) FMemScopePtr PREPROCESSOR_JOIN(MemPtrScope,__LINE__)((uint64)InPtr)"
  },
  {
    "label": "UE_MEMSCOPE_DEFAULT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_MEMSCOPE_DEFAULT(InTag) FDefaultMemScope PREPROCESSOR_JOIN(MemScope,__LINE__)(InTag)"
  },
  {
    "label": "UE_MEMSCOPE_UNINITIALIZED()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_MEMSCOPE_UNINITIALIZED(Line) FMemScope PREPROCESSOR_JOIN(MemScope,Line)"
  },
  {
    "label": "UE_MEMSCOPE_ACTIVATE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UE_MEMSCOPE_ACTIVATE(Line, InTag) PREPROCESSOR_JOIN(MemScope,Line).SetTagAndActivate(InTag)"
  }
]