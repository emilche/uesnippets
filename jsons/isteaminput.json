[
  {
    "label": "EInputSourceMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInputSourceMode"
  },
  {
    "label": "EInputActionOrigin",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInputActionOrigin"
  },
  {
    "label": "EXboxOrigin",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EXboxOrigin"
  },
  {
    "label": "ESteamControllerPad",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESteamControllerPad"
  },
  {
    "label": "EControllerHapticLocation",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EControllerHapticLocation"
  },
  {
    "label": "EControllerHapticType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EControllerHapticType"
  },
  {
    "label": "ESteamInputType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESteamInputType"
  },
  {
    "label": "ESteamInputConfigurationEnableType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESteamInputConfigurationEnableType"
  },
  {
    "label": "ESteamInputLEDFlag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESteamInputLEDFlag"
  },
  {
    "label": "ESteamInputGlyphSize",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESteamInputGlyphSize"
  },
  {
    "label": "ESteamInputGlyphStyle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESteamInputGlyphStyle"
  },
  {
    "label": "ESteamInputActionEventType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESteamInputActionEventType"
  },
  {
    "label": "InputAnalogActionData_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InputAnalogActionData_t"
  },
  {
    "label": "InputDigitalActionData_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InputDigitalActionData_t"
  },
  {
    "label": "InputMotionData_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InputMotionData_t"
  },
  {
    "label": "InputMotionDataV2_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InputMotionDataV2_t"
  },
  {
    "label": "SteamInputActionEvent_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SteamInputActionEvent_t"
  },
  {
    "label": "AnalogAction_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AnalogAction_t"
  },
  {
    "label": "DigitalAction_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DigitalAction_t"
  },
  {
    "label": "ScePadTriggerEffectParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScePadTriggerEffectParam"
  },
  {
    "label": "ISteamInput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamInput"
  },
  {
    "label": "SteamInputDeviceConnected_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SteamInputDeviceConnected_t"
  },
  {
    "label": "SteamInputDeviceDisconnected_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SteamInputDeviceDisconnected_t"
  },
  {
    "label": "SteamInputConfigurationLoaded_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SteamInputConfigurationLoaded_t"
  },
  {
    "label": "SteamInputGamepadSlotChange_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SteamInputGamepadSlotChange_t"
  },
  {
    "label": "k_EControllerHapticLocation_Left()",
    "kind": "Method",
    "detail": "Function (# ifndef ISTEAMINPUT_H # define ISTEAMINPUT_H # ifdef _WIN32 # pragma once # endif # include \" steam_api_common . h \" # define STEAM_INPUT_MAX_COUNT 1 6 # define STEAM_INPUT_MAX_ANALOG_ACTIONS 2 4 # define STEAM_INPUT_MAX_DIGITAL_ACTIONS 2 5 6 # define STEAM_INPUT_MAX_ORIGINS 8 # define STEAM_INPUT_MAX_ACTIVE_LAYERS 1 6 # define STEAM_INPUT_HANDLE_ALL_CONTROLLERS UINT64_MAX # define STEAM_INPUT_MIN_ANALOG_ACTION_DATA - 1 . 0 f # define STEAM_INPUT_MAX_ANALOG_ACTION_DATA 1 . 0 f enum EInputSourceMode { k_EInputSourceMode_None,k_EInputSourceMode_Dpad,k_EInputSourceMode_Buttons,k_EInputSourceMode_FourButtons,k_EInputSourceMode_AbsoluteMouse,k_EInputSourceMode_RelativeMouse,k_EInputSourceMode_JoystickMove,k_EInputSourceMode_JoystickMouse,k_EInputSourceMode_JoystickCamera,k_EInputSourceMode_ScrollWheel,k_EInputSourceMode_Trigger,k_EInputSourceMode_TouchMenu,k_EInputSourceMode_MouseJoystick,k_EInputSourceMode_MouseRegion,k_EInputSourceMode_RadialMenu,k_EInputSourceMode_SingleButton,k_EInputSourceMode_Switches } ; enum EInputActionOrigin { k_EInputActionOrigin_None,k_EInputActionOrigin_SteamController_A,k_EInputActionOrigin_SteamController_B,k_EInputActionOrigin_SteamController_X,k_EInputActionOrigin_SteamController_Y,k_EInputActionOrigin_SteamController_LeftBumper,k_EInputActionOrigin_SteamController_RightBumper,k_EInputActionOrigin_SteamController_LeftGrip,k_EInputActionOrigin_SteamController_RightGrip,k_EInputActionOrigin_SteamController_Start,k_EInputActionOrigin_SteamController_Back,k_EInputActionOrigin_SteamController_LeftPad_Touch,k_EInputActionOrigin_SteamController_LeftPad_Swipe,k_EInputActionOrigin_SteamController_LeftPad_Click,k_EInputActionOrigin_SteamController_LeftPad_DPadNorth,k_EInputActionOrigin_SteamController_LeftPad_DPadSouth,k_EInputActionOrigin_SteamController_LeftPad_DPadWest,k_EInputActionOrigin_SteamController_LeftPad_DPadEast,k_EInputActionOrigin_SteamController_RightPad_Touch,k_EInputActionOrigin_SteamController_RightPad_Swipe,k_EInputActionOrigin_SteamController_RightPad_Click,k_EInputActionOrigin_SteamController_RightPad_DPadNorth,k_EInputActionOrigin_SteamController_RightPad_DPadSouth,k_EInputActionOrigin_SteamController_RightPad_DPadWest,k_EInputActionOrigin_SteamController_RightPad_DPadEast,k_EInputActionOrigin_SteamController_LeftTrigger_Pull,k_EInputActionOrigin_SteamController_LeftTrigger_Click,k_EInputActionOrigin_SteamController_RightTrigger_Pull,k_EInputActionOrigin_SteamController_RightTrigger_Click,k_EInputActionOrigin_SteamController_LeftStick_Move,k_EInputActionOrigin_SteamController_LeftStick_Click,k_EInputActionOrigin_SteamController_LeftStick_DPadNorth,k_EInputActionOrigin_SteamController_LeftStick_DPadSouth,k_EInputActionOrigin_SteamController_LeftStick_DPadWest,k_EInputActionOrigin_SteamController_LeftStick_DPadEast,k_EInputActionOrigin_SteamController_Gyro_Move,k_EInputActionOrigin_SteamController_Gyro_Pitch,k_EInputActionOrigin_SteamController_Gyro_Yaw,k_EInputActionOrigin_SteamController_Gyro_Roll,k_EInputActionOrigin_SteamController_Reserved0,k_EInputActionOrigin_SteamController_Reserved1,k_EInputActionOrigin_SteamController_Reserved2,k_EInputActionOrigin_SteamController_Reserved3,k_EInputActionOrigin_SteamController_Reserved4,k_EInputActionOrigin_SteamController_Reserved5,k_EInputActionOrigin_SteamController_Reserved6,k_EInputActionOrigin_SteamController_Reserved7,k_EInputActionOrigin_SteamController_Reserved8,k_EInputActionOrigin_SteamController_Reserved9,k_EInputActionOrigin_SteamController_Reserved10,k_EInputActionOrigin_PS4_X,k_EInputActionOrigin_PS4_Circle,k_EInputActionOrigin_PS4_Triangle,k_EInputActionOrigin_PS4_Square,k_EInputActionOrigin_PS4_LeftBumper,k_EInputActionOrigin_PS4_RightBumper,k_EInputActionOrigin_PS4_Options,k_EInputActionOrigin_PS4_Share,k_EInputActionOrigin_PS4_LeftPad_Touch,k_EInputActionOrigin_PS4_LeftPad_Swipe,k_EInputActionOrigin_PS4_LeftPad_Click,k_EInputActionOrigin_PS4_LeftPad_DPadNorth,k_EInputActionOrigin_PS4_LeftPad_DPadSouth,k_EInputActionOrigin_PS4_LeftPad_DPadWest,k_EInputActionOrigin_PS4_LeftPad_DPadEast,k_EInputActionOrigin_PS4_RightPad_Touch,k_EInputActionOrigin_PS4_RightPad_Swipe,k_EInputActionOrigin_PS4_RightPad_Click,k_EInputActionOrigin_PS4_RightPad_DPadNorth,k_EInputActionOrigin_PS4_RightPad_DPadSouth,k_EInputActionOrigin_PS4_RightPad_DPadWest,k_EInputActionOrigin_PS4_RightPad_DPadEast,k_EInputActionOrigin_PS4_CenterPad_Touch,k_EInputActionOrigin_PS4_CenterPad_Swipe,k_EInputActionOrigin_PS4_CenterPad_Click,k_EInputActionOrigin_PS4_CenterPad_DPadNorth,k_EInputActionOrigin_PS4_CenterPad_DPadSouth,k_EInputActionOrigin_PS4_CenterPad_DPadWest,k_EInputActionOrigin_PS4_CenterPad_DPadEast,k_EInputActionOrigin_PS4_LeftTrigger_Pull,k_EInputActionOrigin_PS4_LeftTrigger_Click,k_EInputActionOrigin_PS4_RightTrigger_Pull,k_EInputActionOrigin_PS4_RightTrigger_Click,k_EInputActionOrigin_PS4_LeftStick_Move,k_EInputActionOrigin_PS4_LeftStick_Click,k_EInputActionOrigin_PS4_LeftStick_DPadNorth,k_EInputActionOrigin_PS4_LeftStick_DPadSouth,k_EInputActionOrigin_PS4_LeftStick_DPadWest,k_EInputActionOrigin_PS4_LeftStick_DPadEast,k_EInputActionOrigin_PS4_RightStick_Move,k_EInputActionOrigin_PS4_RightStick_Click,k_EInputActionOrigin_PS4_RightStick_DPadNorth,k_EInputActionOrigin_PS4_RightStick_DPadSouth,k_EInputActionOrigin_PS4_RightStick_DPadWest,k_EInputActionOrigin_PS4_RightStick_DPadEast,k_EInputActionOrigin_PS4_DPad_North,k_EInputActionOrigin_PS4_DPad_South,k_EInputActionOrigin_PS4_DPad_West,k_EInputActionOrigin_PS4_DPad_East,k_EInputActionOrigin_PS4_Gyro_Move,k_EInputActionOrigin_PS4_Gyro_Pitch,k_EInputActionOrigin_PS4_Gyro_Yaw,k_EInputActionOrigin_PS4_Gyro_Roll,k_EInputActionOrigin_PS4_DPad_Move,k_EInputActionOrigin_PS4_Reserved1,k_EInputActionOrigin_PS4_Reserved2,k_EInputActionOrigin_PS4_Reserved3,k_EInputActionOrigin_PS4_Reserved4,k_EInputActionOrigin_PS4_Reserved5,k_EInputActionOrigin_PS4_Reserved6,k_EInputActionOrigin_PS4_Reserved7,k_EInputActionOrigin_PS4_Reserved8,k_EInputActionOrigin_PS4_Reserved9,k_EInputActionOrigin_PS4_Reserved10,k_EInputActionOrigin_XBoxOne_A,k_EInputActionOrigin_XBoxOne_B,k_EInputActionOrigin_XBoxOne_X,k_EInputActionOrigin_XBoxOne_Y,k_EInputActionOrigin_XBoxOne_LeftBumper,k_EInputActionOrigin_XBoxOne_RightBumper,k_EInputActionOrigin_XBoxOne_Menu,k_EInputActionOrigin_XBoxOne_View,k_EInputActionOrigin_XBoxOne_LeftTrigger_Pull,k_EInputActionOrigin_XBoxOne_LeftTrigger_Click,k_EInputActionOrigin_XBoxOne_RightTrigger_Pull,k_EInputActionOrigin_XBoxOne_RightTrigger_Click,k_EInputActionOrigin_XBoxOne_LeftStick_Move,k_EInputActionOrigin_XBoxOne_LeftStick_Click,k_EInputActionOrigin_XBoxOne_LeftStick_DPadNorth,k_EInputActionOrigin_XBoxOne_LeftStick_DPadSouth,k_EInputActionOrigin_XBoxOne_LeftStick_DPadWest,k_EInputActionOrigin_XBoxOne_LeftStick_DPadEast,k_EInputActionOrigin_XBoxOne_RightStick_Move,k_EInputActionOrigin_XBoxOne_RightStick_Click,k_EInputActionOrigin_XBoxOne_RightStick_DPadNorth,k_EInputActionOrigin_XBoxOne_RightStick_DPadSouth,k_EInputActionOrigin_XBoxOne_RightStick_DPadWest,k_EInputActionOrigin_XBoxOne_RightStick_DPadEast,k_EInputActionOrigin_XBoxOne_DPad_North,k_EInputActionOrigin_XBoxOne_DPad_South,k_EInputActionOrigin_XBoxOne_DPad_West,k_EInputActionOrigin_XBoxOne_DPad_East,k_EInputActionOrigin_XBoxOne_DPad_Move,k_EInputActionOrigin_XBoxOne_LeftGrip_Lower,k_EInputActionOrigin_XBoxOne_LeftGrip_Upper,k_EInputActionOrigin_XBoxOne_RightGrip_Lower,k_EInputActionOrigin_XBoxOne_RightGrip_Upper,k_EInputActionOrigin_XBoxOne_Share,k_EInputActionOrigin_XBoxOne_Reserved6,k_EInputActionOrigin_XBoxOne_Reserved7,k_EInputActionOrigin_XBoxOne_Reserved8,k_EInputActionOrigin_XBoxOne_Reserved9,k_EInputActionOrigin_XBoxOne_Reserved10,k_EInputActionOrigin_XBox360_A,k_EInputActionOrigin_XBox360_B,k_EInputActionOrigin_XBox360_X,k_EInputActionOrigin_XBox360_Y,k_EInputActionOrigin_XBox360_LeftBumper,k_EInputActionOrigin_XBox360_RightBumper,k_EInputActionOrigin_XBox360_Start,k_EInputActionOrigin_XBox360_Back,k_EInputActionOrigin_XBox360_LeftTrigger_Pull,k_EInputActionOrigin_XBox360_LeftTrigger_Click,k_EInputActionOrigin_XBox360_RightTrigger_Pull,k_EInputActionOrigin_XBox360_RightTrigger_Click,k_EInputActionOrigin_XBox360_LeftStick_Move,k_EInputActionOrigin_XBox360_LeftStick_Click,k_EInputActionOrigin_XBox360_LeftStick_DPadNorth,k_EInputActionOrigin_XBox360_LeftStick_DPadSouth,k_EInputActionOrigin_XBox360_LeftStick_DPadWest,k_EInputActionOrigin_XBox360_LeftStick_DPadEast,k_EInputActionOrigin_XBox360_RightStick_Move,k_EInputActionOrigin_XBox360_RightStick_Click,k_EInputActionOrigin_XBox360_RightStick_DPadNorth,k_EInputActionOrigin_XBox360_RightStick_DPadSouth,k_EInputActionOrigin_XBox360_RightStick_DPadWest,k_EInputActionOrigin_XBox360_RightStick_DPadEast,k_EInputActionOrigin_XBox360_DPad_North,k_EInputActionOrigin_XBox360_DPad_South,k_EInputActionOrigin_XBox360_DPad_West,k_EInputActionOrigin_XBox360_DPad_East,k_EInputActionOrigin_XBox360_DPad_Move,k_EInputActionOrigin_XBox360_Reserved1,k_EInputActionOrigin_XBox360_Reserved2,k_EInputActionOrigin_XBox360_Reserved3,k_EInputActionOrigin_XBox360_Reserved4,k_EInputActionOrigin_XBox360_Reserved5,k_EInputActionOrigin_XBox360_Reserved6,k_EInputActionOrigin_XBox360_Reserved7,k_EInputActionOrigin_XBox360_Reserved8,k_EInputActionOrigin_XBox360_Reserved9,k_EInputActionOrigin_XBox360_Reserved10,k_EInputActionOrigin_Switch_A,k_EInputActionOrigin_Switch_B,k_EInputActionOrigin_Switch_X,k_EInputActionOrigin_Switch_Y,k_EInputActionOrigin_Switch_LeftBumper,k_EInputActionOrigin_Switch_RightBumper,k_EInputActionOrigin_Switch_Plus,k_EInputActionOrigin_Switch_Minus,k_EInputActionOrigin_Switch_Capture,k_EInputActionOrigin_Switch_LeftTrigger_Pull,k_EInputActionOrigin_Switch_LeftTrigger_Click,k_EInputActionOrigin_Switch_RightTrigger_Pull,k_EInputActionOrigin_Switch_RightTrigger_Click,k_EInputActionOrigin_Switch_LeftStick_Move,k_EInputActionOrigin_Switch_LeftStick_Click,k_EInputActionOrigin_Switch_LeftStick_DPadNorth,k_EInputActionOrigin_Switch_LeftStick_DPadSouth,k_EInputActionOrigin_Switch_LeftStick_DPadWest,k_EInputActionOrigin_Switch_LeftStick_DPadEast,k_EInputActionOrigin_Switch_RightStick_Move,k_EInputActionOrigin_Switch_RightStick_Click,k_EInputActionOrigin_Switch_RightStick_DPadNorth,k_EInputActionOrigin_Switch_RightStick_DPadSouth,k_EInputActionOrigin_Switch_RightStick_DPadWest,k_EInputActionOrigin_Switch_RightStick_DPadEast,k_EInputActionOrigin_Switch_DPad_North,k_EInputActionOrigin_Switch_DPad_South,k_EInputActionOrigin_Switch_DPad_West,k_EInputActionOrigin_Switch_DPad_East,k_EInputActionOrigin_Switch_ProGyro_Move,k_EInputActionOrigin_Switch_ProGyro_Pitch,k_EInputActionOrigin_Switch_ProGyro_Yaw,k_EInputActionOrigin_Switch_ProGyro_Roll,k_EInputActionOrigin_Switch_DPad_Move,k_EInputActionOrigin_Switch_Reserved1,k_EInputActionOrigin_Switch_Reserved2,k_EInputActionOrigin_Switch_Reserved3,k_EInputActionOrigin_Switch_Reserved4,k_EInputActionOrigin_Switch_Reserved5,k_EInputActionOrigin_Switch_Reserved6,k_EInputActionOrigin_Switch_Reserved7,k_EInputActionOrigin_Switch_Reserved8,k_EInputActionOrigin_Switch_Reserved9,k_EInputActionOrigin_Switch_Reserved10,k_EInputActionOrigin_Switch_RightGyro_Move,k_EInputActionOrigin_Switch_RightGyro_Pitch,k_EInputActionOrigin_Switch_RightGyro_Yaw,k_EInputActionOrigin_Switch_RightGyro_Roll,k_EInputActionOrigin_Switch_LeftGyro_Move,k_EInputActionOrigin_Switch_LeftGyro_Pitch,k_EInputActionOrigin_Switch_LeftGyro_Yaw,k_EInputActionOrigin_Switch_LeftGyro_Roll,k_EInputActionOrigin_Switch_LeftGrip_Lower,k_EInputActionOrigin_Switch_LeftGrip_Upper,k_EInputActionOrigin_Switch_RightGrip_Lower,k_EInputActionOrigin_Switch_RightGrip_Upper,k_EInputActionOrigin_Switch_JoyConButton_N,k_EInputActionOrigin_Switch_JoyConButton_E,k_EInputActionOrigin_Switch_JoyConButton_S,k_EInputActionOrigin_Switch_JoyConButton_W,k_EInputActionOrigin_Switch_Reserved15,k_EInputActionOrigin_Switch_Reserved16,k_EInputActionOrigin_Switch_Reserved17,k_EInputActionOrigin_Switch_Reserved18,k_EInputActionOrigin_Switch_Reserved19,k_EInputActionOrigin_Switch_Reserved20,k_EInputActionOrigin_PS5_X,k_EInputActionOrigin_PS5_Circle,k_EInputActionOrigin_PS5_Triangle,k_EInputActionOrigin_PS5_Square,k_EInputActionOrigin_PS5_LeftBumper,k_EInputActionOrigin_PS5_RightBumper,k_EInputActionOrigin_PS5_Option,k_EInputActionOrigin_PS5_Create,k_EInputActionOrigin_PS5_Mute,k_EInputActionOrigin_PS5_LeftPad_Touch,k_EInputActionOrigin_PS5_LeftPad_Swipe,k_EInputActionOrigin_PS5_LeftPad_Click,k_EInputActionOrigin_PS5_LeftPad_DPadNorth,k_EInputActionOrigin_PS5_LeftPad_DPadSouth,k_EInputActionOrigin_PS5_LeftPad_DPadWest,k_EInputActionOrigin_PS5_LeftPad_DPadEast,k_EInputActionOrigin_PS5_RightPad_Touch,k_EInputActionOrigin_PS5_RightPad_Swipe,k_EInputActionOrigin_PS5_RightPad_Click,k_EInputActionOrigin_PS5_RightPad_DPadNorth,k_EInputActionOrigin_PS5_RightPad_DPadSouth,k_EInputActionOrigin_PS5_RightPad_DPadWest,k_EInputActionOrigin_PS5_RightPad_DPadEast,k_EInputActionOrigin_PS5_CenterPad_Touch,k_EInputActionOrigin_PS5_CenterPad_Swipe,k_EInputActionOrigin_PS5_CenterPad_Click,k_EInputActionOrigin_PS5_CenterPad_DPadNorth,k_EInputActionOrigin_PS5_CenterPad_DPadSouth,k_EInputActionOrigin_PS5_CenterPad_DPadWest,k_EInputActionOrigin_PS5_CenterPad_DPadEast,k_EInputActionOrigin_PS5_LeftTrigger_Pull,k_EInputActionOrigin_PS5_LeftTrigger_Click,k_EInputActionOrigin_PS5_RightTrigger_Pull,k_EInputActionOrigin_PS5_RightTrigger_Click,k_EInputActionOrigin_PS5_LeftStick_Move,k_EInputActionOrigin_PS5_LeftStick_Click,k_EInputActionOrigin_PS5_LeftStick_DPadNorth,k_EInputActionOrigin_PS5_LeftStick_DPadSouth,k_EInputActionOrigin_PS5_LeftStick_DPadWest,k_EInputActionOrigin_PS5_LeftStick_DPadEast,k_EInputActionOrigin_PS5_RightStick_Move,k_EInputActionOrigin_PS5_RightStick_Click,k_EInputActionOrigin_PS5_RightStick_DPadNorth,k_EInputActionOrigin_PS5_RightStick_DPadSouth,k_EInputActionOrigin_PS5_RightStick_DPadWest,k_EInputActionOrigin_PS5_RightStick_DPadEast,k_EInputActionOrigin_PS5_DPad_North,k_EInputActionOrigin_PS5_DPad_South,k_EInputActionOrigin_PS5_DPad_West,k_EInputActionOrigin_PS5_DPad_East,k_EInputActionOrigin_PS5_Gyro_Move,k_EInputActionOrigin_PS5_Gyro_Pitch,k_EInputActionOrigin_PS5_Gyro_Yaw,k_EInputActionOrigin_PS5_Gyro_Roll,k_EInputActionOrigin_PS5_DPad_Move,k_EInputActionOrigin_PS5_LeftGrip,k_EInputActionOrigin_PS5_RightGrip,k_EInputActionOrigin_PS5_LeftFn,k_EInputActionOrigin_PS5_RightFn,k_EInputActionOrigin_PS5_Reserved5,k_EInputActionOrigin_PS5_Reserved6,k_EInputActionOrigin_PS5_Reserved7,k_EInputActionOrigin_PS5_Reserved8,k_EInputActionOrigin_PS5_Reserved9,k_EInputActionOrigin_PS5_Reserved10,k_EInputActionOrigin_PS5_Reserved11,k_EInputActionOrigin_PS5_Reserved12,k_EInputActionOrigin_PS5_Reserved13,k_EInputActionOrigin_PS5_Reserved14,k_EInputActionOrigin_PS5_Reserved15,k_EInputActionOrigin_PS5_Reserved16,k_EInputActionOrigin_PS5_Reserved17,k_EInputActionOrigin_PS5_Reserved18,k_EInputActionOrigin_PS5_Reserved19,k_EInputActionOrigin_PS5_Reserved20,k_EInputActionOrigin_SteamDeck_A,k_EInputActionOrigin_SteamDeck_B,k_EInputActionOrigin_SteamDeck_X,k_EInputActionOrigin_SteamDeck_Y,k_EInputActionOrigin_SteamDeck_L1,k_EInputActionOrigin_SteamDeck_R1,k_EInputActionOrigin_SteamDeck_Menu,k_EInputActionOrigin_SteamDeck_View,k_EInputActionOrigin_SteamDeck_LeftPad_Touch,k_EInputActionOrigin_SteamDeck_LeftPad_Swipe,k_EInputActionOrigin_SteamDeck_LeftPad_Click,k_EInputActionOrigin_SteamDeck_LeftPad_DPadNorth,k_EInputActionOrigin_SteamDeck_LeftPad_DPadSouth,k_EInputActionOrigin_SteamDeck_LeftPad_DPadWest,k_EInputActionOrigin_SteamDeck_LeftPad_DPadEast,k_EInputActionOrigin_SteamDeck_RightPad_Touch,k_EInputActionOrigin_SteamDeck_RightPad_Swipe,k_EInputActionOrigin_SteamDeck_RightPad_Click,k_EInputActionOrigin_SteamDeck_RightPad_DPadNorth,k_EInputActionOrigin_SteamDeck_RightPad_DPadSouth,k_EInputActionOrigin_SteamDeck_RightPad_DPadWest,k_EInputActionOrigin_SteamDeck_RightPad_DPadEast,k_EInputActionOrigin_SteamDeck_L2_SoftPull,k_EInputActionOrigin_SteamDeck_L2,k_EInputActionOrigin_SteamDeck_R2_SoftPull,k_EInputActionOrigin_SteamDeck_R2,k_EInputActionOrigin_SteamDeck_LeftStick_Move,k_EInputActionOrigin_SteamDeck_L3,k_EInputActionOrigin_SteamDeck_LeftStick_DPadNorth,k_EInputActionOrigin_SteamDeck_LeftStick_DPadSouth,k_EInputActionOrigin_SteamDeck_LeftStick_DPadWest,k_EInputActionOrigin_SteamDeck_LeftStick_DPadEast,k_EInputActionOrigin_SteamDeck_LeftStick_Touch,k_EInputActionOrigin_SteamDeck_RightStick_Move,k_EInputActionOrigin_SteamDeck_R3,k_EInputActionOrigin_SteamDeck_RightStick_DPadNorth,k_EInputActionOrigin_SteamDeck_RightStick_DPadSouth,k_EInputActionOrigin_SteamDeck_RightStick_DPadWest,k_EInputActionOrigin_SteamDeck_RightStick_DPadEast,k_EInputActionOrigin_SteamDeck_RightStick_Touch,k_EInputActionOrigin_SteamDeck_L4,k_EInputActionOrigin_SteamDeck_R4,k_EInputActionOrigin_SteamDeck_L5,k_EInputActionOrigin_SteamDeck_R5,k_EInputActionOrigin_SteamDeck_DPad_Move,k_EInputActionOrigin_SteamDeck_DPad_North,k_EInputActionOrigin_SteamDeck_DPad_South,k_EInputActionOrigin_SteamDeck_DPad_West,k_EInputActionOrigin_SteamDeck_DPad_East,k_EInputActionOrigin_SteamDeck_Gyro_Move,k_EInputActionOrigin_SteamDeck_Gyro_Pitch,k_EInputActionOrigin_SteamDeck_Gyro_Yaw,k_EInputActionOrigin_SteamDeck_Gyro_Roll,k_EInputActionOrigin_SteamDeck_Reserved1,k_EInputActionOrigin_SteamDeck_Reserved2,k_EInputActionOrigin_SteamDeck_Reserved3,k_EInputActionOrigin_SteamDeck_Reserved4,k_EInputActionOrigin_SteamDeck_Reserved5,k_EInputActionOrigin_SteamDeck_Reserved6,k_EInputActionOrigin_SteamDeck_Reserved7,k_EInputActionOrigin_SteamDeck_Reserved8,k_EInputActionOrigin_SteamDeck_Reserved9,k_EInputActionOrigin_SteamDeck_Reserved10,k_EInputActionOrigin_SteamDeck_Reserved11,k_EInputActionOrigin_SteamDeck_Reserved12,k_EInputActionOrigin_SteamDeck_Reserved13,k_EInputActionOrigin_SteamDeck_Reserved14,k_EInputActionOrigin_SteamDeck_Reserved15,k_EInputActionOrigin_SteamDeck_Reserved16,k_EInputActionOrigin_SteamDeck_Reserved17,k_EInputActionOrigin_SteamDeck_Reserved18,k_EInputActionOrigin_SteamDeck_Reserved19,k_EInputActionOrigin_SteamDeck_Reserved20,k_EInputActionOrigin_Count,k_EInputActionOrigin_MaximumPossibleValue = 3 2 7 6 7,} ; enum EXboxOrigin { k_EXboxOrigin_A,k_EXboxOrigin_B,k_EXboxOrigin_X,k_EXboxOrigin_Y,k_EXboxOrigin_LeftBumper,k_EXboxOrigin_RightBumper,k_EXboxOrigin_Menu,k_EXboxOrigin_View,k_EXboxOrigin_LeftTrigger_Pull,k_EXboxOrigin_LeftTrigger_Click,k_EXboxOrigin_RightTrigger_Pull,k_EXboxOrigin_RightTrigger_Click,k_EXboxOrigin_LeftStick_Move,k_EXboxOrigin_LeftStick_Click,k_EXboxOrigin_LeftStick_DPadNorth,k_EXboxOrigin_LeftStick_DPadSouth,k_EXboxOrigin_LeftStick_DPadWest,k_EXboxOrigin_LeftStick_DPadEast,k_EXboxOrigin_RightStick_Move,k_EXboxOrigin_RightStick_Click,k_EXboxOrigin_RightStick_DPadNorth,k_EXboxOrigin_RightStick_DPadSouth,k_EXboxOrigin_RightStick_DPadWest,k_EXboxOrigin_RightStick_DPadEast,k_EXboxOrigin_DPad_North,k_EXboxOrigin_DPad_South,k_EXboxOrigin_DPad_West,k_EXboxOrigin_DPad_East,k_EXboxOrigin_Count,} ; enum ESteamControllerPad { k_ESteamControllerPad_Left,k_ESteamControllerPad_Right } ; enum EControllerHapticLocation {)",
    "insertText": "k_EControllerHapticLocation_Left(1 << k_ESteamControllerPad_Left ), k_EControllerHapticLocation_Right = ( 1 << k_ESteamControllerPad_Right ), k_EControllerHapticLocation_Both = ( 1 << k_ESteamControllerPad_Left | 1 << k_ESteamControllerPad_Right)"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (enum EControllerHapticType { k_EControllerHapticType_Off,k_EControllerHapticType_Tick,k_EControllerHapticType_Click,} ; enum ESteamInputType { k_ESteamInputType_Unknown,k_ESteamInputType_SteamController,k_ESteamInputType_XBox360Controller,k_ESteamInputType_XBoxOneController,k_ESteamInputType_GenericGamepad,k_ESteamInputType_PS4Controller,k_ESteamInputType_AppleMFiController,k_ESteamInputType_AndroidController,k_ESteamInputType_SwitchJoyConPair,k_ESteamInputType_SwitchJoyConSingle,k_ESteamInputType_SwitchProController,k_ESteamInputType_MobileTouch,k_ESteamInputType_PS3Controller,k_ESteamInputType_PS5Controller,k_ESteamInputType_SteamDeckController,k_ESteamInputType_Count,k_ESteamInputType_MaximumPossibleValue = 2 5 5,} ; enum ESteamInputConfigurationEnableType { k_ESteamInputConfigurationEnableType_None = 0 x0000,k_ESteamInputConfigurationEnableType_Playstation = 0 x0001,k_ESteamInputConfigurationEnableType_Xbox = 0 x0002,k_ESteamInputConfigurationEnableType_Generic = 0 x0004,k_ESteamInputConfigurationEnableType_Switch = 0 x0008,} ; enum ESteamInputLEDFlag { k_ESteamInputLEDFlag_SetColor,k_ESteamInputLEDFlag_RestoreUserDefault } ; enum ESteamInputGlyphSize { k_ESteamInputGlyphSize_Small,k_ESteamInputGlyphSize_Medium,k_ESteamInputGlyphSize_Large,k_ESteamInputGlyphSize_Count,} ; enum ESteamInputGlyphStyle { ESteamInputGlyphStyle_Knockout = 0 x0,ESteamInputGlyphStyle_Light = 0 x1,ESteamInputGlyphStyle_Dark = 0 x2,ESteamInputGlyphStyle_NeutralColorABXY = 0 x10,ESteamInputGlyphStyle_SolidABXY = 0 x20,} ; enum ESteamInputActionEventType { ESteamInputActionEventType_DigitalAction,ESteamInputActionEventType_AnalogAction,} ; typedef uint64 InputHandle_t ; typedef uint64 InputActionSetHandle_t ; typedef uint64 InputDigitalActionHandle_t ; typedef uint64 InputAnalogActionHandle_t ; # pragma)",
    "insertText": "pack(push, 1)"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (EInputSourceMode eMode ; float x,y ; bool bActive ; } ; struct InputDigitalActionData_t { bool bState ; bool bActive ; } ; struct InputMotionData_t { float rotQuatX ; float rotQuatY ; float rotQuatZ ; float rotQuatW ; float posAccelX ; float posAccelY ; float posAccelZ ; float rotVelX ; float rotVelY ; float rotVelZ ; } ; struct InputMotionDataV2_t { float driftCorrectedQuatX ; float driftCorrectedQuatY ; float driftCorrectedQuatZ ; float driftCorrectedQuatW ; float sensorFusionQuatX ; float sensorFusionQuatY ; float sensorFusionQuatZ ; float sensorFusionQuatW ; float deferredSensorFusionQuatX ; float deferredSensorFusionQuatY ; float deferredSensorFusionQuatZ ; float deferredSensorFusionQuatW ; float gravityX ; float gravityY ; float gravityZ ; float degreesPerSecondX ; float degreesPerSecondY ; float degreesPerSecondZ ; } ; struct SteamInputActionEvent_t { InputHandle_t controllerHandle ; ESteamInputActionEventType eEventType ; struct AnalogAction_t { InputAnalogActionHandle_t actionHandle ; InputAnalogActionData_t analogActionData ; } ; struct DigitalAction_t { InputDigitalActionHandle_t actionHandle ; InputDigitalActionData_t digitalActionData ; } ; union { AnalogAction_t analogAction ; DigitalAction_t digitalAction ; } ; } ; struct ScePadTriggerEffectParam ; # pragma)",
    "insertText": "pack(pop ) typedef void ( *SteamInputActionEventCallbackPointer )( SteamInputActionEvent_t *)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (class ISteamInput { public : bool)",
    "insertText": "Init(bool bExplicitlyCallRunFrame)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Shutdown()"
  },
  {
    "label": "SetInputActionManifestFilePath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetInputActionManifestFilePath(const char *pchInputActionManifestAbsolutePath)"
  },
  {
    "label": "RunFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunFrame(bool bReservedValue = true)"
  },
  {
    "label": "BWaitForData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BWaitForData(bool bWaitForever, uint32 unTimeout)"
  },
  {
    "label": "BNewDataAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BNewDataAvailable()"
  },
  {
    "label": "GetConnectedControllers()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetConnectedControllers(STEAM_OUT_ARRAY_COUNT( STEAM_INPUT_MAX_COUNT, Receives list of connected controllers ) InputHandle_t *handlesOut)"
  },
  {
    "label": "STEAM_CALL_BACK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_BACK(SteamInputConfigurationLoaded_t ) virtual void EnableDeviceCallbacks()"
  },
  {
    "label": "STEAM_CALL_BACK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_BACK(SteamInputDeviceConnected_t ) STEAM_CALL_BACK( SteamInputDeviceDisconnected_t ) STEAM_CALL_BACK( SteamInputGamepadSlotChange_t ) virtual void EnableActionEventCallbacks( SteamInputActionEventCallbackPointer pCallback)"
  },
  {
    "label": "GetActionSetHandle()",
    "kind": "Method",
    "detail": "Function (InputActionSetHandle_t)",
    "insertText": "GetActionSetHandle(const char *pszActionSetName)"
  },
  {
    "label": "ActivateActionSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateActionSet(InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle)"
  },
  {
    "label": "GetCurrentActionSet()",
    "kind": "Method",
    "detail": "Function (InputActionSetHandle_t)",
    "insertText": "GetCurrentActionSet(InputHandle_t inputHandle)"
  },
  {
    "label": "ActivateActionSetLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateActionSetLayer(InputHandle_t inputHandle, InputActionSetHandle_t actionSetLayerHandle)"
  },
  {
    "label": "DeactivateActionSetLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeactivateActionSetLayer(InputHandle_t inputHandle, InputActionSetHandle_t actionSetLayerHandle)"
  },
  {
    "label": "DeactivateAllActionSetLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeactivateAllActionSetLayers(InputHandle_t inputHandle)"
  },
  {
    "label": "GetActiveActionSetLayers()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetActiveActionSetLayers(InputHandle_t inputHandle, STEAM_OUT_ARRAY_COUNT( STEAM_INPUT_MAX_ACTIVE_LAYERS, Receives list of active layers ) InputActionSetHandle_t *handlesOut)"
  },
  {
    "label": "GetDigitalActionHandle()",
    "kind": "Method",
    "detail": "Function (InputDigitalActionHandle_t)",
    "insertText": "GetDigitalActionHandle(const char *pszActionName)"
  },
  {
    "label": "GetDigitalActionData()",
    "kind": "Method",
    "detail": "Function (InputDigitalActionData_t)",
    "insertText": "GetDigitalActionData(InputHandle_t inputHandle, InputDigitalActionHandle_t digitalActionHandle)"
  },
  {
    "label": "GetDigitalActionOrigins()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDigitalActionOrigins(InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle, InputDigitalActionHandle_t digitalActionHandle, STEAM_OUT_ARRAY_COUNT( STEAM_INPUT_MAX_ORIGINS, Receives list of action origins ) EInputActionOrigin *originsOut)"
  },
  {
    "label": "GetStringForDigitalActionName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetStringForDigitalActionName(InputDigitalActionHandle_t eActionHandle)"
  },
  {
    "label": "GetAnalogActionHandle()",
    "kind": "Method",
    "detail": "Function (InputAnalogActionHandle_t)",
    "insertText": "GetAnalogActionHandle(const char *pszActionName)"
  },
  {
    "label": "GetAnalogActionData()",
    "kind": "Method",
    "detail": "Function (InputAnalogActionData_t)",
    "insertText": "GetAnalogActionData(InputHandle_t inputHandle, InputAnalogActionHandle_t analogActionHandle)"
  },
  {
    "label": "GetAnalogActionOrigins()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetAnalogActionOrigins(InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle, InputAnalogActionHandle_t analogActionHandle, STEAM_OUT_ARRAY_COUNT( STEAM_INPUT_MAX_ORIGINS, Receives list of action origins ) EInputActionOrigin *originsOut)"
  },
  {
    "label": "GetGlyphPNGForActionOrigin()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetGlyphPNGForActionOrigin(EInputActionOrigin eOrigin, ESteamInputGlyphSize eSize, uint32 unFlags)"
  },
  {
    "label": "GetGlyphSVGForActionOrigin()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetGlyphSVGForActionOrigin(EInputActionOrigin eOrigin, uint32 unFlags)"
  },
  {
    "label": "GetGlyphForActionOrigin_Legacy()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetGlyphForActionOrigin_Legacy(EInputActionOrigin eOrigin)"
  },
  {
    "label": "GetStringForActionOrigin()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetStringForActionOrigin(EInputActionOrigin eOrigin)"
  },
  {
    "label": "GetStringForAnalogActionName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetStringForAnalogActionName(InputAnalogActionHandle_t eActionHandle)"
  },
  {
    "label": "StopAnalogActionMomentum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopAnalogActionMomentum(InputHandle_t inputHandle, InputAnalogActionHandle_t eAction)"
  },
  {
    "label": "GetMotionData()",
    "kind": "Method",
    "detail": "Function (InputMotionData_t)",
    "insertText": "GetMotionData(InputHandle_t inputHandle)"
  },
  {
    "label": "TriggerVibration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerVibration(InputHandle_t inputHandle, unsigned short usLeftSpeed, unsigned short usRightSpeed)"
  },
  {
    "label": "TriggerVibrationExtended()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerVibrationExtended(InputHandle_t inputHandle, unsigned short usLeftSpeed, unsigned short usRightSpeed, unsigned short usLeftTriggerSpeed, unsigned short usRightTriggerSpeed)"
  },
  {
    "label": "TriggerSimpleHapticEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerSimpleHapticEvent(InputHandle_t inputHandle, EControllerHapticLocation eHapticLocation, uint8 nIntensity, char nGainDB, uint8 nOtherIntensity, char nOtherGainDB)"
  },
  {
    "label": "SetLEDColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLEDColor(InputHandle_t inputHandle, uint8 nColorR, uint8 nColorG, uint8 nColorB, unsigned int nFlags)"
  },
  {
    "label": "Legacy_TriggerHapticPulse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Legacy_TriggerHapticPulse(InputHandle_t inputHandle, ESteamControllerPad eTargetPad, unsigned short usDurationMicroSec)"
  },
  {
    "label": "Legacy_TriggerRepeatedHapticPulse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Legacy_TriggerRepeatedHapticPulse(InputHandle_t inputHandle, ESteamControllerPad eTargetPad, unsigned short usDurationMicroSec, unsigned short usOffMicroSec, unsigned short unRepeat, unsigned int nFlags)"
  },
  {
    "label": "ShowBindingPanel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShowBindingPanel(InputHandle_t inputHandle)"
  },
  {
    "label": "GetInputTypeForHandle()",
    "kind": "Method",
    "detail": "Function (ESteamInputType)",
    "insertText": "GetInputTypeForHandle(InputHandle_t inputHandle)"
  },
  {
    "label": "GetControllerForGamepadIndex()",
    "kind": "Method",
    "detail": "Function (InputHandle_t)",
    "insertText": "GetControllerForGamepadIndex(int nIndex)"
  },
  {
    "label": "GetGamepadIndexForController()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetGamepadIndexForController(InputHandle_t ulinputHandle)"
  },
  {
    "label": "GetStringForXboxOrigin()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetStringForXboxOrigin(EXboxOrigin eOrigin)"
  },
  {
    "label": "GetGlyphForXboxOrigin()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetGlyphForXboxOrigin(EXboxOrigin eOrigin)"
  },
  {
    "label": "GetActionOriginFromXboxOrigin()",
    "kind": "Method",
    "detail": "Function (EInputActionOrigin)",
    "insertText": "GetActionOriginFromXboxOrigin(InputHandle_t inputHandle, EXboxOrigin eOrigin)"
  },
  {
    "label": "TranslateActionOrigin()",
    "kind": "Method",
    "detail": "Function (EInputActionOrigin)",
    "insertText": "TranslateActionOrigin(ESteamInputType eDestinationInputType, EInputActionOrigin eSourceOrigin)"
  },
  {
    "label": "GetDeviceBindingRevision()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDeviceBindingRevision(InputHandle_t inputHandle, int *pMajor, int *pMinor)"
  },
  {
    "label": "GetRemotePlaySessionID()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetRemotePlaySessionID(InputHandle_t inputHandle)"
  },
  {
    "label": "GetSessionInputConfigurationSettings()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetSessionInputConfigurationSettings()"
  },
  {
    "label": "SetDualSenseTriggerEffect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDualSenseTriggerEffect(InputHandle_t inputHandle, const ScePadTriggerEffectParam *pParam)"
  },
  {
    "label": "SteamInput()",
    "kind": "Method",
    "detail": "Function (} ; # define STEAMINPUT_INTERFACE_VERSION \" SteamInput006 \" ISteamInput*)",
    "insertText": "SteamInput()"
  },
  {
    "label": "STEAM_DEFINE_USER_INTERFACE_ACCESSOR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_DEFINE_USER_INTERFACE_ACCESSOR(ISteamInput *, SteamInput, STEAMINPUT_INTERFACE_VERSION)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(VALVE_CALLBACK_PACK_SMALL ) #pragma pack( push, 4 ) #elif defined( VALVE_CALLBACK_PACK_LARGE ) #pragma pack( push, 8)"
  }
]