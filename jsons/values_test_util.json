[
  {
    "label": "IsJsonMatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IsJsonMatcher"
  },
  {
    "label": "ExpectDictBooleanValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpectDictBooleanValue(bool expected_value,\n                            const Value::Dict& dict,\n                            StringPiece path)"
  },
  {
    "label": "ExpectDictIntegerValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpectDictIntegerValue(int expected_value,\n                            const Value::Dict& dict,\n                            StringPiece path)"
  },
  {
    "label": "ExpectDictStringValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpectDictStringValue(StringPiece expected_value,\n                           const Value::Dict& dict,\n                           StringPiece path)"
  },
  {
    "label": "ExpectDictValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpectDictValue(const Value::Dict& expected_value,\n                     const Value::Dict& dict,\n                     StringPiece path)"
  },
  {
    "label": "ExpectDictValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpectDictValue(const Value& expected_value,\n                     const Value::Dict& dict,\n                     StringPiece path)"
  },
  {
    "label": "ExpectStringValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpectStringValue(const std::string& expected_str, const Value& actual)"
  },
  {
    "label": "IsJsonMatcher()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "IsJsonMatcher(base::StringPiece json)"
  },
  {
    "label": "IsJsonMatcher()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "IsJsonMatcher(const base::Value& value)"
  },
  {
    "label": "ParseJson()",
    "kind": "Method",
    "detail": "Function (Value)",
    "insertText": "ParseJson(StringPiece json)"
  },
  {
    "label": "ParseJsonDict()",
    "kind": "Method",
    "detail": "Function (Value::Dict)",
    "insertText": "ParseJsonDict(StringPiece json)"
  },
  {
    "label": "ParseJsonList()",
    "kind": "Method",
    "detail": "Function (Value::List)",
    "insertText": "ParseJsonList(StringPiece json)"
  }
]