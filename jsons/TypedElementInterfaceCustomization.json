[
  {
    "label": "FTypedElementInterfaceCustomizationRegistryBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTypedElementInterfaceCustomizationRegistryBase"
  },
  {
    "label": "TTypedElementInterfaceCustomizationRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TTypedElementInterfaceCustomizationRegistry"
  },
  {
    "label": "FTypedElementInterfaceCustomizationRegistryBase()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Elements / Framework / TypedElementLimits . h \" # include \" HAL / Platform . h \" # include \" Misc / AssertionMacros . h \" # include \" Templates / UniquePtr . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / NameTypes . h \" class FTypedElementInterfaceCustomizationRegistryBase { public : ~)",
    "insertText": "FTypedElementInterfaceCustomizationRegistryBase()"
  },
  {
    "label": "GetElementTypeIdFromName()",
    "kind": "Method",
    "detail": "Function (protected : FTypedHandleTypeId)",
    "insertText": "GetElementTypeIdFromName(const FName InElementTypeName)"
  },
  {
    "label": "GetElementTypeIdFromNameChecked()",
    "kind": "Method",
    "detail": "Function (FTypedHandleTypeId)",
    "insertText": "GetElementTypeIdFromNameChecked(const FName InElementTypeName)"
  },
  {
    "label": "TTypedElementInterfaceCustomizationRegistry()",
    "kind": "Method",
    "detail": "Function (} ; template<CustomizationBaseType,DefaultCustomizationType = CustomizationBaseType> class TTypedElementInterfaceCustomizationRegistry : public FTypedElementInterfaceCustomizationRegistryBase { public : template<. . . TDefaultArgs>)",
    "insertText": "TTypedElementInterfaceCustomizationRegistry(TDefaultArgs&&... DefaultArgs) : DefaultInterfaceCustomization(MakeUnique<DefaultCustomizationType>(Forward<TDefaultArgs>(DefaultArgs)...))"
  },
  {
    "label": "TTypedElementInterfaceCustomizationRegistry()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TTypedElementInterfaceCustomizationRegistry()"
  },
  {
    "label": "TTypedElementInterfaceCustomizationRegistry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TTypedElementInterfaceCustomizationRegistry(const TTypedElementInterfaceCustomizationRegistry&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TTypedElementInterfaceCustomizationRegistry&)",
    "insertText": "operator(const TTypedElementInterfaceCustomizationRegistry&)"
  },
  {
    "label": "TTypedElementInterfaceCustomizationRegistry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TTypedElementInterfaceCustomizationRegistry(TTypedElementInterfaceCustomizationRegistry&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TTypedElementInterfaceCustomizationRegistry&)",
    "insertText": "operator(TTypedElementInterfaceCustomizationRegistry&&)"
  },
  {
    "label": "SetDefaultInterfaceCustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultInterfaceCustomization(TUniquePtr<CustomizationBaseType>&& InInterfaceCustomization)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (DefaultInterfaceCustomization =)",
    "insertText": "MoveTemp(InInterfaceCustomization)"
  },
  {
    "label": "GetDefaultInterfaceCustomization()",
    "kind": "Method",
    "detail": "Function (} CustomizationBaseType*)",
    "insertText": "GetDefaultInterfaceCustomization()"
  },
  {
    "label": "RegisterInterfaceCustomizationByTypeName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterInterfaceCustomizationByTypeName(const FName InElementTypeName, TUniquePtr<CustomizationBaseType>&& InInterfaceCustomization)"
  },
  {
    "label": "RegisterInterfaceCustomizationByTypeId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterInterfaceCustomizationByTypeId(GetElementTypeIdFromNameChecked(InElementTypeName), MoveTemp(InInterfaceCustomization))"
  },
  {
    "label": "RegisterInterfaceCustomizationByTypeId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterInterfaceCustomizationByTypeId(const FTypedHandleTypeId InElementTypeId, TUniquePtr<CustomizationBaseType>&& InInterfaceCustomization)"
  },
  {
    "label": "UnregisterInterfaceCustomizationByTypeName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnregisterInterfaceCustomizationByTypeName(const FName InElementTypeName)"
  },
  {
    "label": "UnregisterInterfaceCustomizationByTypeId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterInterfaceCustomizationByTypeId(GetElementTypeIdFromNameChecked(InElementTypeName))"
  },
  {
    "label": "UnregisterInterfaceCustomizationByTypeId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnregisterInterfaceCustomizationByTypeId(const FTypedHandleTypeId InElementTypeId)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (RegisteredInterfaceCustomizations [ InElementTypeId - 1 ] .)",
    "insertText": "Reset()"
  },
  {
    "label": "GetInterfaceCustomizationByTypeName()",
    "kind": "Method",
    "detail": "Function (} CustomizationBaseType*)",
    "insertText": "GetInterfaceCustomizationByTypeName(const FName InElementTypeName, const bool bAllowFallback = true)"
  },
  {
    "label": "GetInterfaceCustomizationByTypeId()",
    "kind": "Method",
    "detail": "Function (} CustomizationBaseType*)",
    "insertText": "GetInterfaceCustomizationByTypeId(const FTypedHandleTypeId InElementTypeId, const bool bAllowFallback = true)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (CustomizationBaseType* InterfaceCustomization = RegisteredInterfaceCustomizations [ InElementTypeId - 1 ] .)",
    "insertText": "Get()"
  }
]