[
  {
    "label": "FCanvasItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasItem"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "UFont",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFont"
  },
  {
    "label": "FCanvasIcon",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCanvasIcon"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FCanvasItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasItem"
  },
  {
    "label": "FCanvasIcon",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCanvasIcon"
  },
  {
    "label": "FGameplayDebuggerCanvasContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerCanvasContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGameplayDebuggerShape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerShape"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGameplayDebuggerDataPackHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerDataPackHeader"
  },
  {
    "label": "FGameplayDebuggerDataPack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerDataPack"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGameplayDebuggerInputModifier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerInputModifier"
  },
  {
    "label": "FGameplayDebuggerInputHandler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerInputHandler"
  },
  {
    "label": "FGameplayDebuggerInputHandlerConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerInputHandlerConfig"
  },
  {
    "label": "IsAuthority()",
    "kind": "Method",
    "detail": "Function (GAMEPLAYDEBUGGER_API)",
    "insertText": "IsAuthority(UWorld* World)"
  },
  {
    "label": "FGameplayDebuggerCanvasContext()",
    "kind": "Method",
    "detail": "Function (GAMEPLAYDEBUGGER_API)",
    "insertText": "FGameplayDebuggerCanvasContext(UCanvas* InCanvas, UFont* InFont)"
  },
  {
    "label": "Print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Print(const FString& String)"
  },
  {
    "label": "Print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Print(const FColor& Color, const FString& String)"
  },
  {
    "label": "Print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Print(const FColor& Color, const float Alpha, const FString& String)"
  },
  {
    "label": "PrintAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintAt(float PosX, float PosY, const FString& String)"
  },
  {
    "label": "PrintAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintAt(float PosX, float PosY, const FColor& Color, const FString& String)"
  },
  {
    "label": "PrintAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintAt(float PosX, float PosY, const FColor& Color, const float Alpha, const FString& String)"
  },
  {
    "label": "PrintfImpl()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "PrintfImpl(const FColor& Color, const float Alpha, const TCHAR* Args, ...)"
  },
  {
    "label": "PrintfAtImpl()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "PrintfAtImpl(float PosX, float PosY, const FColor& Color, const float Alpha, const TCHAR* Args, ...)"
  },
  {
    "label": "MoveToNewLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveToNewLine()"
  },
  {
    "label": "DrawItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawItem(FCanvasItem& Item, float PosX, float PosY)"
  },
  {
    "label": "DrawIcon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawIcon(const FColor& Color, const FCanvasIcon& Icon, float PosX, float PosY, float Scale = 1.f)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(UWorld* World, FGameplayDebuggerCanvasContext& Context)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Equals(Other)"
  },
  {
    "label": "CheckDirtyAndUpdate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckDirtyAndUpdate()"
  },
  {
    "label": "RequestReplication()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestReplication(int16 SyncCounter)"
  },
  {
    "label": "OnReplicated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReplicated()"
  },
  {
    "label": "OnPacketRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPacketRequest(int16 DataVersion, int32 DataOffset)"
  },
  {
    "label": "FGameplayDebuggerInputModifier()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGameplayDebuggerInputModifier(bShift || Other.bShift, bCtrl || Other.bCtrl, bAlt || Other.bAlt, bCmd || Other.bCmd)"
  },
  {
    "label": "FGameplayDebuggerInputHandlerConfig()",
    "kind": "Method",
    "detail": "Function (GAMEPLAYDEBUGGER_API)",
    "insertText": "FGameplayDebuggerInputHandlerConfig(const FName ConfigName, const FName DefaultKeyName)"
  },
  {
    "label": "FGameplayDebuggerInputHandlerConfig()",
    "kind": "Method",
    "detail": "Function (GAMEPLAYDEBUGGER_API)",
    "insertText": "FGameplayDebuggerInputHandlerConfig(const FName ConfigName, const FName DefaultKeyName, const FGameplayDebuggerInputModifier& DefaultModifier)"
  },
  {
    "label": "UpdateConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateConfig(const FName ConfigName)"
  }
]