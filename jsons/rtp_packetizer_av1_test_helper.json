[
  {
    "label": "Av1Obu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Av1Obu"
  },
  {
    "label": "Av1Obu()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTP_PACKETIZER_AV1_TEST_HELPER_H_ # define MODULES_RTP_RTCP_SOURCE_RTP_PACKETIZER_AV1_TEST_HELPER_H_ # include<stdint . h> # include<initializer_list> # include<utility> # include<vector> namespace webrtc { uint8_t kAv1ObuTypeSequenceHeader = 1<<3 ; uint8_t kAv1ObuTypeTemporalDelimiter = 2<<3 ; uint8_t kAv1ObuTypeFrameHeader = 3<<3 ; uint8_t kAv1ObuTypeTileGroup = 4<<3 ; uint8_t kAv1ObuTypeMetadata = 5<<3 ; uint8_t kAv1ObuTypeFrame = 6<<3 ; uint8_t kAv1ObuTypeTileList = 8<<3 ; uint8_t kAv1ObuExtensionPresentBit = 0 b0 ' 0 0 0 0 ' 1 0 0 ; uint8_t kAv1ObuSizePresentBit = 0 b0 ' 0 0 0 0 ' 0 1 0 ; uint8_t kAv1ObuExtensionS1T1 = 0 b001 ' 0 1 ' 0 0 0 ; class Av1Obu { public :)",
    "insertText": "Av1Obu(uint8_t obu_type)"
  },
  {
    "label": "WithExtension()",
    "kind": "Method",
    "detail": "Function (Av1Obu&)",
    "insertText": "WithExtension(uint8_t extension)"
  },
  {
    "label": "WithoutSize()",
    "kind": "Method",
    "detail": "Function (Av1Obu&)",
    "insertText": "WithoutSize()"
  },
  {
    "label": "WithPayload()",
    "kind": "Method",
    "detail": "Function (Av1Obu&)",
    "insertText": "WithPayload(std::vector<uint8_t> payload)"
  },
  {
    "label": "BuildAv1Frame()",
    "kind": "Method",
    "detail": "Function (private : std::vector<uint8_t>)",
    "insertText": "BuildAv1Frame(std::initializer_list<Av1Obu> obus)"
  }
]