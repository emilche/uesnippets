[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "ILightSchema()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcGeom_ILight_h # define Alembic_AbcGeom_ILight_h # include<Alembic / Util / Export . h> # include<Alembic / AbcGeom / ICamera . h> # include<Alembic / AbcGeom / Foundation . h> # include<Alembic / AbcGeom / SchemaInfoDeclarations . h> namespace Alembic { namespace AbcGeom { namespace ALEMBIC_VERSION_NS { class ALEMBIC_EXPORT ILightSchema : public Abc::ISchema<LightSchemaInfo> { public : typedef ILightSchema this_type ;)",
    "insertText": "ILightSchema()"
  },
  {
    "label": "ILightSchema()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ILightSchema(const ICompoundProperty &iParent, const std::string &iName, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument() ) : Abc::ISchema<LightSchemaInfo>( iParent, iName, iArg0, iArg1)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(iArg0, iArg1)"
  },
  {
    "label": "ILightSchema()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ILightSchema(const ICompoundProperty &iProp, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument() ) : Abc::ISchema<LightSchemaInfo>( iProp, iArg0, iArg1)"
  },
  {
    "label": "getCameraSchema()",
    "kind": "Method",
    "detail": "Function (} ICameraSchema)",
    "insertText": "getCameraSchema()"
  },
  {
    "label": "isConstant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isConstant()"
  },
  {
    "label": "getNumSamples()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumSamples()"
  },
  {
    "label": "getArbGeomParams()",
    "kind": "Method",
    "detail": "Function (ICompoundProperty)",
    "insertText": "getArbGeomParams()"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (m_childBoundsProperty .)",
    "insertText": "reset()"
  },
  {
    "label": "valid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "valid()"
  },
  {
    "label": "ALEMBIC_OVERRIDE_OPERATOR_BOOL()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ALEMBIC_OVERRIDE_OPERATOR_BOOL(ILightSchema::valid())"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "init(const Abc::Argument& iArg0, const Abc::Argument& iArg1)"
  }
]