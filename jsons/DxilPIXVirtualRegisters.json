[
  {
    "label": "AllocaInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AllocaInst"
  },
  {
    "label": "Instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Instruction"
  },
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "MDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNode"
  },
  {
    "label": "StoreInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StoreInst"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "AddMD()",
    "kind": "Method",
    "detail": "Function (# include<cstdint> namespace llvm { class AllocaInst ; class Instruction ; class LLVMContext ; class MDNode ; class StoreInst ; class Value ; } namespace pix_dxil { namespace PixDxilInstNum { char MDName [ ] = \" pix - dxil - inst - num \" ; uint32_t ID = 3 ; void)",
    "insertText": "AddMD(llvm::LLVMContext &Ctx, llvm::Instruction *pI, std::uint32_t InstNum)"
  },
  {
    "label": "FromInst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromInst(llvm::Instruction const *pI, std::uint32_t *pInstNum)"
  },
  {
    "label": "AddMD()",
    "kind": "Method",
    "detail": "Function (} namespace PixDxilReg { char MDName [ ] = \" pix - dxil - reg \" ; uint32_t ID = 0 ; void)",
    "insertText": "AddMD(llvm::LLVMContext &Ctx, llvm::Instruction *pI, std::uint32_t RegNum)"
  },
  {
    "label": "FromInst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromInst(llvm::Instruction const *pI, std::uint32_t *pRegNum)"
  },
  {
    "label": "AddMD()",
    "kind": "Method",
    "detail": "Function (} namespace PixAllocaReg { char MDName [ ] = \" pix - alloca - reg \" ; uint32_t ID = 1 ; void)",
    "insertText": "AddMD(llvm::LLVMContext &Ctx, llvm::AllocaInst *pAlloca, std::uint32_t RegNum, std::uint32_t Count)"
  },
  {
    "label": "FromInst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromInst(llvm::AllocaInst const *pAlloca, std::uint32_t *pRegBase, std::uint32_t *pRegSize)"
  },
  {
    "label": "AddMD()",
    "kind": "Method",
    "detail": "Function (} namespace PixAllocaRegWrite { char MDName [ ] = \" pix - alloca - reg - write \" ; uint32_t ID = 2 ; void)",
    "insertText": "AddMD(llvm::LLVMContext &Ctx, llvm::StoreInst *pSt, llvm::MDNode *pAllocaReg, llvm::Value *Index)"
  },
  {
    "label": "FromInst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromInst(llvm::StoreInst *pI, std::uint32_t *pRegBase, std::uint32_t *pRegSize, llvm::Value **pIndex)"
  }
]