[
  {
    "label": "UFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFactory"
  },
  {
    "label": "IImportSubsystemTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IImportSubsystemTask"
  },
  {
    "label": "UImportSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UImportSubsystem"
  },
  {
    "label": "UImportSubsystem()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "UImportSubsystem()"
  },
  {
    "label": "ImportNextTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportNextTick(const TArray<FString>& Files, const FString& DestinationPath)"
  },
  {
    "label": "BroadcastAssetPreImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastAssetPreImport(UFactory* InFactory, UClass* InClass, UObject* InParent, const FName& Name, const TCHAR* Type)"
  },
  {
    "label": "BroadcastAssetPostImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastAssetPostImport(UFactory* InFactory, UObject* InCreatedObject)"
  },
  {
    "label": "BroadcastAssetReimport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastAssetReimport(UObject* InCreatedObject)"
  },
  {
    "label": "BroadcastAssetPostLODImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastAssetPostLODImport(UObject* InObject, int32 inLODIndex)"
  },
  {
    "label": "InterchangeBroadcastAssetPostImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InterchangeBroadcastAssetPostImport(UObject* InCreatedObject)"
  },
  {
    "label": "InterchangeBroadcastAssetPostReimport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InterchangeBroadcastAssetPostReimport(UObject* InCreatedObject)"
  },
  {
    "label": "HandleNextTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNextTick()"
  }
]