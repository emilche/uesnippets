[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "WriteArchive()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcCoreOgawa_ReadWrite_h # define Alembic_AbcCoreOgawa_ReadWrite_h # include<Alembic / AbcCoreAbstract / All . h> # include<Alembic / Util / Export . h> namespace Alembic { namespace AbcCoreOgawa { namespace ALEMBIC_VERSION_NS { class ALEMBIC_EXPORT WriteArchive { public :)",
    "insertText": "WriteArchive()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (::Alembic::AbcCoreAbstract::ArchiveWriterPtr)",
    "insertText": "operator()( const std::string &iFileName, const ::Alembic::AbcCoreAbstract::MetaData &iMetaData)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (::Alembic::AbcCoreAbstract::ArchiveWriterPtr)",
    "insertText": "operator()( std::ostream * iStream, const ::Alembic::AbcCoreAbstract::MetaData &iMetaData)"
  },
  {
    "label": "ReadArchive()",
    "kind": "Method",
    "detail": "Function (} ; class ALEMBIC_EXPORT ReadArchive { public :)",
    "insertText": "ReadArchive()"
  },
  {
    "label": "ReadArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadArchive(size_t iNumStreams, bool iUseMMap)"
  },
  {
    "label": "ReadArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadArchive(const std::vector< std::istream * > & iStreams)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (::Alembic::AbcCoreAbstract::ArchiveReaderPtr)",
    "insertText": "operator()( const std::string &iFileName)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (::Alembic::AbcCoreAbstract::ArchiveReaderPtr)",
    "insertText": "operator()( const std::string &iFileName, ::Alembic::AbcCoreAbstract::ReadArraySampleCachePtr iCache)"
  }
]