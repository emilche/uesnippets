[
  {
    "label": "FRenderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderResource"
  },
  {
    "label": "FSlateShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResource"
  },
  {
    "label": "FSlateTextureData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateTextureData"
  },
  {
    "label": "FSlateUpdatableTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateUpdatableTexture"
  },
  {
    "label": "FSlateUpdatableTexture()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class FRenderResource ; class FSlateShaderResource ; struct FSlateTextureData ; class FSlateUpdatableTexture { public : ~)",
    "insertText": "FSlateUpdatableTexture()"
  },
  {
    "label": "GetSlateResource()",
    "kind": "Method",
    "detail": "Function (} FSlateShaderResource*)",
    "insertText": "GetSlateResource()"
  },
  {
    "label": "GetRenderResource()",
    "kind": "Method",
    "detail": "Function (FRenderResource*)",
    "insertText": "GetRenderResource()"
  },
  {
    "label": "ResizeTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeTexture(uint32 Width, uint32 Height)"
  },
  {
    "label": "UpdateTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTexture(const TArray<uint8>& Bytes)"
  },
  {
    "label": "UpdateTextureThreadSafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTextureThreadSafe(const TArray<uint8>& Bytes)"
  },
  {
    "label": "UpdateTextureThreadSafeRaw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTextureThreadSafeRaw(uint32 Width, uint32 Height, const void* Buffer, const FIntRect& Dirty = FIntRect())"
  },
  {
    "label": "UpdateTextureThreadSafeWithTextureData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTextureThreadSafeWithTextureData(FSlateTextureData* TextureData)"
  },
  {
    "label": "UpdateTextureThreadSafeWithKeyedTextureHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTextureThreadSafeWithKeyedTextureHandle(void* TextureHandle, int KeyLockVal, int KeyUnlockVal, const FIntRect& Dirty = FIntRect())"
  }
]