[
  {
    "label": "FStackBoxSlotExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStackBoxSlotExtension"
  },
  {
    "label": "FStackBoxSlotExtension()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" WidgetReference . h \" # include \" DesignerExtension . h \" class FStackBoxSlotExtension : public FDesignerExtension { public :)",
    "insertText": "FStackBoxSlotExtension()"
  },
  {
    "label": "CanExtendSelection()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanExtendSelection(const TArray< FWidgetReference >& Selection)"
  },
  {
    "label": "ExtendSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendSelection(const TArray< FWidgetReference >& Selection, TArray< TSharedRef<FDesignerSurfaceElement> >& SurfaceElements)"
  },
  {
    "label": "HandleShiftDirection()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "HandleShiftDirection(int32 ShiftAmount)"
  },
  {
    "label": "ShiftDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShiftDirection(UWidget* Widget, int32 ShiftAmount)"
  }
]