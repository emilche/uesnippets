[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FCurveModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveModel"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FCurveEditorTreeFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorTreeFilter"
  },
  {
    "label": "FCurveEditorTreeItemID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorTreeItemID"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "FColumnNames",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColumnNames"
  },
  {
    "label": "ICurveEditorTreeItem()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" HAL / Platform . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / NameTypes . h \" enum class ECurveEditorTreeFilterType : uint32 ; class FCurveEditor ; class FCurveModel ; class FName ; class ITableRow ; class SWidget ; struct FCurveEditorTreeFilter ; struct FCurveEditorTreeItemID ; struct ICurveEditorTreeItem { ~)",
    "insertText": "ICurveEditorTreeItem()"
  },
  {
    "label": "GenerateCurveEditorTreeWidget()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<SWidget>)",
    "insertText": "GenerateCurveEditorTreeWidget(const FName& InColumnName, TWeakPtr<FCurveEditor> InCurveEditor, FCurveEditorTreeItemID InTreeItemID, const TSharedRef<ITableRow>& InTableRow)"
  },
  {
    "label": "CreateCurveModels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCurveModels(TArray<TUniquePtr<FCurveModel>>& OutCurveModels)"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesFilter(const FCurveEditorTreeFilter* InFilter)"
  }
]