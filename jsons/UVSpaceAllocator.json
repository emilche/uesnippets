[
  {
    "label": "FRect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRect"
  },
  {
    "label": "Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Rect"
  },
  {
    "label": "FMD5Hash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMD5Hash"
  },
  {
    "label": "FUVSpaceAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUVSpaceAllocator"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRect"
  },
  {
    "label": "FSegment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSegment"
  },
  {
    "label": "FRun",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRun"
  },
  {
    "label": "FUVSpaceAllocator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FUVSpaceAllocator( EMode Mode, uint32 Width, uint32 Height )"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Find( FRect& Rect )"
  },
  {
    "label": "Test()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Test( FRect Rect )"
  },
  {
    "label": "Alloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Alloc( FRect Rect )"
  },
  {
    "label": "FindBitByBit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindBitByBit( FRect& Rect, const FUVSpaceAllocator& Other )"
  },
  {
    "label": "Test()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Test( FRect Rect, const FUVSpaceAllocator& Other )"
  },
  {
    "label": "Alloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Alloc( FRect Rect, const FUVSpaceAllocator& Other )"
  },
  {
    "label": "SetBit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBit( uint32 x, uint32 y )"
  },
  {
    "label": "ClearBit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearBit( uint32 x, uint32 y )"
  },
  {
    "label": "CreateUsedSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateUsedSegments()"
  },
  {
    "label": "MergeRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeRun( FRun& Run, const FRun& OtherRun, uint32 RectOffset, uint32 RectLength, uint32 PrimaryResolution /* Resolution along the axis the run belongs to */, uint32 PerpendicularResolution )"
  },
  {
    "label": "MergeSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeSegments( const FRect& Rect, const FUVSpaceAllocator& Other )"
  },
  {
    "label": "FlipX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlipX( const FRect& Rect )"
  },
  {
    "label": "FlipY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlipY( const FRect& Rect )"
  },
  {
    "label": "CopyRuns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyRuns( TArray<FRun>& Runs, const TArray<FRun>& OtherRuns, int32 MaxSize )"
  },
  {
    "label": "InitRuns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRuns( TArray<FRun>& Runs, uint32 PrimaryResolution, uint32 PerpendicularRasterSize)"
  },
  {
    "label": "InitSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSegments()"
  },
  {
    "label": "AddUsedSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUsedSegment( FRun& Run, uint32 StartPos, uint32 Length )"
  }
]