[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FBXSDK_ABSTRACT_OBJECT_DECLARE()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_SCENE_ANIMATION_EVALUATOR_H_ # define _FBXSDK_SCENE_ANIMATION_EVALUATOR_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / fbxobject . h> # include<fbxsdk / scene / animation / fbxanimevalstate . h> # include<fbxsdk / scene / animation / fbxanimstack . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxAnimEvaluator : public FbxObject {)",
    "insertText": "FBXSDK_ABSTRACT_OBJECT_DECLARE(FbxAnimEvaluator, FbxObject)"
  },
  {
    "label": "GetNodeGlobalTransform()",
    "kind": "Method",
    "detail": "Function (public : FbxAMatrix&)",
    "insertText": "GetNodeGlobalTransform(FbxNode* pNode, const FbxTime& pTime=FBXSDK_TIME_INFINITE, FbxNode::EPivotSet pPivotSet=FbxNode::eSourcePivot, bool pApplyTarget=false, bool pForceEval=false)"
  },
  {
    "label": "GetNodeLocalTransform()",
    "kind": "Method",
    "detail": "Function (FbxAMatrix&)",
    "insertText": "GetNodeLocalTransform(FbxNode* pNode, const FbxTime& pTime=FBXSDK_TIME_INFINITE, FbxNode::EPivotSet pPivotSet=FbxNode::eSourcePivot, bool pApplyTarget=false, bool pForceEval=false)"
  },
  {
    "label": "GetNodeLocalTranslation()",
    "kind": "Method",
    "detail": "Function (FbxVector4&)",
    "insertText": "GetNodeLocalTranslation(FbxNode* pNode, const FbxTime& pTime=FBXSDK_TIME_INFINITE, FbxNode::EPivotSet pPivotSet=FbxNode::eSourcePivot, bool pApplyTarget=false, bool pForceEval=false)"
  },
  {
    "label": "GetNodeLocalRotation()",
    "kind": "Method",
    "detail": "Function (FbxVector4&)",
    "insertText": "GetNodeLocalRotation(FbxNode* pNode, const FbxTime& pTime=FBXSDK_TIME_INFINITE, FbxNode::EPivotSet pPivotSet=FbxNode::eSourcePivot, bool pApplyTarget=false, bool pForceEval=false)"
  },
  {
    "label": "GetNodeLocalScaling()",
    "kind": "Method",
    "detail": "Function (FbxVector4&)",
    "insertText": "GetNodeLocalScaling(FbxNode* pNode, const FbxTime& pTime=FBXSDK_TIME_INFINITE, FbxNode::EPivotSet pPivotSet=FbxNode::eSourcePivot, bool pApplyTarget=false, bool pForceEval=false)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__GNUC__) && (__GNUC__ < 4) template <class T> inline T GetPropertyValue(FbxProperty& pProperty, const FbxTime& pTime, bool pForceEval=false)"
  },
  {
    "label": "GetPropertyEvalState()",
    "kind": "Method",
    "detail": "Function (FbxPropertyEvalState* s =)",
    "insertText": "GetPropertyEvalState(pProperty, pTime, pForceEval)"
  },
  {
    "label": "GetPropertyValue()",
    "kind": "Method",
    "detail": "Function (} # else template<class T> T)",
    "insertText": "GetPropertyValue(FbxProperty& pProperty, const FbxTime& pTime, bool pForceEval=false)"
  },
  {
    "label": "GetPropertyCurveNode()",
    "kind": "Method",
    "detail": "Function (FbxAnimCurveNode*)",
    "insertText": "GetPropertyCurveNode(FbxProperty& pProperty, FbxAnimLayer* pAnimLayer)"
  },
  {
    "label": "ValidateTime()",
    "kind": "Method",
    "detail": "Function (FbxTime)",
    "insertText": "ValidateTime(const FbxTime& pTime)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush(FbxNode* pNode)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush(FbxProperty& pProperty)"
  },
  {
    "label": "ComputeLocalTRSFromGlobal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeLocalTRSFromGlobal(FbxVector4& pRetLT, FbxVector4& pRetLR, FbxVector4& pRetLS, FbxNode* pNode, FbxAMatrix& pGX, const FbxTime& pTime=FBXSDK_TIME_INFINITE, FbxNode::EPivotSet pPivotSet=FbxNode::eSourcePivot, bool pApplyTarget=false, bool pForceEval=false)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS protected : void)",
    "insertText": "Construct(const FbxObject* pFrom)"
  },
  {
    "label": "Destruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destruct(bool pRecursive)"
  },
  {
    "label": "EvaluateNodeTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluateNodeTransform(FbxNodeEvalState* pResult, FbxNode* pNode, const FbxTime& pTime, FbxNode::EPivotSet pPivotSet, bool pApplyTarget)"
  },
  {
    "label": "EvaluatePropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluatePropertyValue(FbxPropertyEvalState* pResult, FbxProperty& pProperty, const FbxTime& pTime)"
  },
  {
    "label": "GetDefaultEvalState()",
    "kind": "Method",
    "detail": "Function (FbxAnimEvalState*)",
    "insertText": "GetDefaultEvalState()"
  },
  {
    "label": "GetEvalState()",
    "kind": "Method",
    "detail": "Function (FbxAnimEvalState*)",
    "insertText": "GetEvalState(const FbxTime& pTime)"
  },
  {
    "label": "GetNodeEvalState()",
    "kind": "Method",
    "detail": "Function (FbxNodeEvalState*)",
    "insertText": "GetNodeEvalState(FbxNode* pNode, const FbxTime& pTime, FbxNode::EPivotSet pPivotSet, bool pApplyTarget, bool pForceEval)"
  },
  {
    "label": "GetPropertyEvalState()",
    "kind": "Method",
    "detail": "Function (FbxPropertyEvalState*)",
    "insertText": "GetPropertyEvalState(FbxProperty& pProperty, const FbxTime& pTime, bool pForceEval)"
  },
  {
    "label": "EvaluatePropertyValue()",
    "kind": "Method",
    "detail": "Function (private : FbxAnimEvalState* mEvalState ; # endif } ; template<class T> T)",
    "insertText": "EvaluatePropertyValue(FbxProperty& pProperty, const FbxTime& pTime, bool pForceEval)"
  }
]