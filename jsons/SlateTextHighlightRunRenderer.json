[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FTextBlockStyle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextBlockStyle"
  },
  {
    "label": "FSlateTextHighlightRunRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTextHighlightRunRenderer"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Framework / Text / TextLayout . h \" # include \" Framework / Text / ILayoutBlock . h \" # include \" Framework / Text / ISlateRun . h \" # include \" Framework / Text / ISlateRunRenderer . h \" class FPaintArgs ; class FSlateWindowElementList ; struct FTextBlockStyle ; class FSlateTextHighlightRunRenderer : public ISlateRunRenderer { public : TSharedRef<FSlateTextHighlightRunRenderer>)",
    "insertText": "Create()"
  },
  {
    "label": "FSlateTextHighlightRunRenderer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSlateTextHighlightRunRenderer()"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FTextLayout::FLineView& Line, const TSharedRef< ISlateRun >& Run, const TSharedRef< ILayoutBlock >& Block, const FTextBlockStyle& DefaultStyle, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  }
]