[
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "CallInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CallInst"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "Instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Instruction"
  },
  {
    "label": "OP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OP"
  },
  {
    "label": "HLResourceLookup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HLResourceLookup"
  },
  {
    "label": "ExtensionLowering",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExtensionLowering"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "GetResourceKindName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" dxc / HLSL / HLSLExtensionsCodegenHelper . h \" # include \" llvm / ADT / StringRef . h \" # include<string> # include<unordered_map> namespace llvm { class Value ; class CallInst ; class Function ; class StringRef ; class Instruction ; } namespace hlsl { class OP ; struct HLResourceLookup { bool)",
    "insertText": "GetResourceKindName(llvm::Value *HLHandle, const char **ppName)"
  },
  {
    "label": "HLResourceLookup()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "HLResourceLookup()"
  },
  {
    "label": "ExtensionLowering()",
    "kind": "Method",
    "detail": "Function (} } ; class ExtensionLowering { public : enum class Strategy { Unknown,NoTranslation,Replicate,Pack,Resource,Dxil,Custom,} ;)",
    "insertText": "ExtensionLowering(llvm::StringRef strategy, HLSLExtensionsCodegenHelper *helper, OP &hlslOp, HLResourceLookup &resourceHelper)"
  },
  {
    "label": "ExtensionLowering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtensionLowering(Strategy strategy, HLSLExtensionsCodegenHelper *helper, OP &hlslOp, HLResourceLookup &resourceHelper)"
  },
  {
    "label": "Translate()",
    "kind": "Method",
    "detail": "Function (llvm::Value*)",
    "insertText": "Translate(llvm::CallInst *CI)"
  },
  {
    "label": "GetStrategy()",
    "kind": "Method",
    "detail": "Function (Strategy)",
    "insertText": "GetStrategy(llvm::StringRef strategy)"
  },
  {
    "label": "GetStrategyName()",
    "kind": "Method",
    "detail": "Function (llvm::StringRef)",
    "insertText": "GetStrategyName(Strategy strategy)"
  },
  {
    "label": "GetExtensionName()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetExtensionName(llvm::CallInst *CI)"
  },
  {
    "label": "Unknown()",
    "kind": "Method",
    "detail": "Function (private : Strategy m_strategy ; HLSLExtensionsCodegenHelper* m_helper ; OP& m_hlslOp ; HLResourceLookup& m_hlResourceLookup ; std::string m_extraStrategyInfo ; llvm::Value*)",
    "insertText": "Unknown(llvm::CallInst *CI)"
  },
  {
    "label": "NoTranslation()",
    "kind": "Method",
    "detail": "Function (llvm::Value*)",
    "insertText": "NoTranslation(llvm::CallInst *CI)"
  },
  {
    "label": "Replicate()",
    "kind": "Method",
    "detail": "Function (llvm::Value*)",
    "insertText": "Replicate(llvm::CallInst *CI)"
  },
  {
    "label": "Pack()",
    "kind": "Method",
    "detail": "Function (llvm::Value*)",
    "insertText": "Pack(llvm::CallInst *CI)"
  },
  {
    "label": "Resource()",
    "kind": "Method",
    "detail": "Function (llvm::Value*)",
    "insertText": "Resource(llvm::CallInst *CI)"
  },
  {
    "label": "Dxil()",
    "kind": "Method",
    "detail": "Function (llvm::Value*)",
    "insertText": "Dxil(llvm::CallInst *CI)"
  },
  {
    "label": "CustomResource()",
    "kind": "Method",
    "detail": "Function (llvm::Value*)",
    "insertText": "CustomResource(llvm::CallInst *CI)"
  },
  {
    "label": "Custom()",
    "kind": "Method",
    "detail": "Function (llvm::Value*)",
    "insertText": "Custom(llvm::CallInst *CI)"
  }
]