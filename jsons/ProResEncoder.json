[
  {
    "label": "PREncoder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PREncoder"
  },
  {
    "label": "PREncodingParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PREncodingParams"
  },
  {
    "label": "PRSourceFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PRSourceFrame"
  },
  {
    "label": "PRGetCompressedFrameSize()",
    "kind": "Method",
    "detail": "Function (# ifndef PRORES_ENCODER_H # define PRORES_ENCODER_H # ifdef __cplusplus \" C \" { # endif typedef enum { kPRType422HQ = ' apch ',kPRType422 = ' apcn ',kPRType422LT = ' apcs ',kPRType422Proxy = ' apco ',kPRType4444 = ' ap4h ',kPRType4444XQ = ' ap4x ' } PRCodecType ; typedef enum { kPRProgressiveScan = 0,kPRInterlacedTopFieldFirst = 1,kPRInterlacedBottomFieldFirst = 2 } PRInterlaceMode ; # ifndef PR_PIXEL_FORMAT_DEFINED typedef enum { kPRFormat_2vuy = ' 2 vuy ',kPRFormat_v210 = ' v210 ',kPRFormat_v216 = ' v216 ',kPRFormat_y416 = ' y416 ',kPRFormat_r4fl = ' r4fl ',kPRFormat_R10k = ' R10k ',kPRFormat_r210 = ' r210 ',kPRFormat_b64a = ' b64a ' } PRPixelFormat ; # define PR_PIXEL_FORMAT_DEFINED # endif typedef struct PREncoder* PREncoderRef ; struct PREncodingParams { PRCodecType proResType ; PRInterlaceMode interlaceMode ; bool preserveAlpha ; } ; typedef struct PREncodingParams PREncodingParams ; struct PRSourceFrame { const void* baseAddr ; int rowBytes ; PRPixelFormat format ; int width ; int height ; } ; typedef struct PRSourceFrame PRSourceFrame ; void)",
    "insertText": "PRGetCompressedFrameSize(PRCodecType proResType, bool preserveAlpha, int frameWidth, int frameHeight, int* maxCompressedFrameSize, int* targetCompressedFrameSize)"
  },
  {
    "label": "PROpenEncoder()",
    "kind": "Method",
    "detail": "Function (PREncoderRef)",
    "insertText": "PROpenEncoder(int numThreads, void (*threadStartupCallback)())"
  },
  {
    "label": "PREncodeFrame()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PREncodeFrame(PREncoderRef encoder, const PREncodingParams* encodingParams, const PRSourceFrame* sourceFrame, void* destinationPtr, int destinationSize, int* compressedFrameSize, bool* allOpaqueAlpha)"
  },
  {
    "label": "PRCloseEncoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRCloseEncoder(PREncoderRef encoder)"
  }
]