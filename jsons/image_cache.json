[
  {
    "label": "ImageCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ImageCache"
  },
  {
    "label": "ImageRep",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ImageRep"
  },
  {
    "label": "ImageInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ImageInfo"
  },
  {
    "label": "CefDeleteOnThread",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CefDeleteOnThread"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "ImageType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ImageType"
  },
  {
    "label": "ImageContent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ImageContent"
  },
  {
    "label": "ImageCache()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_TESTS_CEFCLIENT_BROWSER_IMAGE_CACHE_H_ # define CEF_TESTS_CEFCLIENT_BROWSER_IMAGE_CACHE_H_ # pragma once # include<map> # include<vector> # include \" include / base / cef_bind . h \" # include \" include / base / cef_ref_counted . h \" # include \" include / cef_image . h \" # include \" include / wrapper / cef_closure_task . h \" # include \" include / wrapper / cef_helpers . h \" namespace client { class ImageCache : public base::RefCountedThreadSafe<ImageCache,CefDeleteOnUIThread> { public :)",
    "insertText": "ImageCache()"
  },
  {
    "label": "ImageRep()",
    "kind": "Method",
    "detail": "Function (struct ImageRep {)",
    "insertText": "ImageRep(const std::string& path, float scale_factor)"
  },
  {
    "label": "ImageInfo()",
    "kind": "Method",
    "detail": "Function (std::string path_ ; float scale_factor_ ; } ; typedef std::vector<ImageRep> ImageRepSet ; struct ImageInfo {)",
    "insertText": "ImageInfo(const std::string& id, const ImageRepSet& reps, bool internal, bool force_reload)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (ImageInfo)",
    "insertText": "Empty()"
  },
  {
    "label": "Create1x()",
    "kind": "Method",
    "detail": "Function (ImageInfo)",
    "insertText": "Create1x(const std::string& id, const std::string& path_1x, bool internal)"
  },
  {
    "label": "Create2x()",
    "kind": "Method",
    "detail": "Function (ImageInfo)",
    "insertText": "Create2x(const std::string& id, const std::string& path_1x, const std::string& path_2x, bool internal)"
  },
  {
    "label": "Create2x()",
    "kind": "Method",
    "detail": "Function (ImageInfo)",
    "insertText": "Create2x(const std::string& id)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (std::string id_ ; ImageRepSet reps_ ; bool internal_ ; bool force_reload_ ; } ; typedef std::vector<ImageInfo> ImageInfoSet ; typedef std::vector<CefRefPtr<CefImage>> ImageSet ; typedef base::Callback<)",
    "insertText": "void(const ImageSet&)"
  },
  {
    "label": "LoadImages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadImages(const ImageInfoSet& image_info, const LoadImagesCallback& callback)"
  },
  {
    "label": "GetCachedImage()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefImage>)",
    "insertText": "GetCachedImage(const std::string& image_id)"
  },
  {
    "label": "GetImageType()",
    "kind": "Method",
    "detail": "Function (enum ImageType { TYPE_NONE,TYPE_PNG,TYPE_JPEG,} ; ImageType)",
    "insertText": "GetImageType(const std::string& path)"
  },
  {
    "label": "LoadMissing()",
    "kind": "Method",
    "detail": "Function (struct ImageContent ; typedef std::vector<ImageContent> ImageContentSet ; void)",
    "insertText": "LoadMissing(const ImageInfoSet& image_info, const ImageSet& images, const LoadImagesCallback& callback)"
  },
  {
    "label": "LoadImageContents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadImageContents(const ImageInfo& info, ImageContent* content)"
  },
  {
    "label": "LoadImageContents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadImageContents(const std::string& path, bool internal, ImageType* type, std::string* contents)"
  },
  {
    "label": "UpdateCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCache(const ImageInfoSet& image_info, const ImageContentSet& contents, const LoadImagesCallback& callback)"
  },
  {
    "label": "CreateImage()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefImage>)",
    "insertText": "CreateImage(const std::string& image_id, const ImageContent& content)"
  }
]