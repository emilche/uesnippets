[
  {
    "label": "FScopedPlaceholderContainerTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedPlaceholderContainerTracker"
  },
  {
    "label": "FScopedPlaceholderPropertyTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedPlaceholderPropertyTracker"
  },
  {
    "label": "FLinkerPlaceholderBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerPlaceholderBase"
  },
  {
    "label": "FPlaceholderValuePropertyPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlaceholderValuePropertyPath"
  },
  {
    "label": "FLinkerPlaceholderObjectImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerPlaceholderObjectImpl"
  },
  {
    "label": "PlaceholderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PlaceholderType"
  },
  {
    "label": "TLinkerImportPlaceholder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TLinkerImportPlaceholder"
  },
  {
    "label": "UseCircularDependencyLoadDeferring()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Class . h \" # include \" UObject / ObjectRedirector . h \" # include \" UObject / ObjectResource . h \" # include \" UObject / LinkerLoad . h \" # include \" UObject / Field . h \" bool)",
    "insertText": "UseCircularDependencyLoadDeferring()"
  },
  {
    "label": "FScopedPlaceholderContainerTracker()",
    "kind": "Method",
    "detail": "Function (# if USE_CIRCULAR_DEPENDENCY_LOAD_DEFERRING return ! GEventDrivenLoaderEnabled ; # else return false ; # endif } struct FScopedPlaceholderContainerTracker { public :)",
    "insertText": "FScopedPlaceholderContainerTracker(UObject* InPlaceholderContainerCandidate) : bEnabled(UseCircularDependencyLoadDeferring())"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Push(InPlaceholderContainerCandidate)"
  },
  {
    "label": "FScopedPlaceholderContainerTracker()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FScopedPlaceholderContainerTracker()"
  },
  {
    "label": "Pop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pop()"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (} } private : const bool bEnabled ; UObject* PlaceholderReferencerCandidate ; void)",
    "insertText": "Push(UObject* InIntermediateProperty)"
  },
  {
    "label": "FScopedPlaceholderPropertyTracker()",
    "kind": "Method",
    "detail": "Function (} ; struct FScopedPlaceholderPropertyTracker { public :)",
    "insertText": "FScopedPlaceholderPropertyTracker(FFieldVariant InIntermediateProperty) : bEnabled(UseCircularDependencyLoadDeferring())"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Push(InIntermediateProperty)"
  },
  {
    "label": "FScopedPlaceholderPropertyTracker()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FScopedPlaceholderPropertyTracker()"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (} } private : const bool bEnabled ; FFieldVariant IntermediateProperty ; void)",
    "insertText": "Push(FFieldVariant InIntermediateProperty)"
  },
  {
    "label": "FLinkerPlaceholderBase()",
    "kind": "Method",
    "detail": "Function (} ; class FLinkerPlaceholderBase { public :)",
    "insertText": "FLinkerPlaceholderBase()"
  },
  {
    "label": "AddReferencingPropertyValue()",
    "kind": "Method",
    "detail": "Function (FPackageIndex PackageIndex ; TWeakObjectPtr<const UClass> DeferredObjectType ; bool)",
    "insertText": "AddReferencingPropertyValue(FFieldVariant ReferencingProperty, void* DataPtr)"
  },
  {
    "label": "HasKnownReferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasKnownReferences()"
  },
  {
    "label": "ResolveAllPlaceholderReferences()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ResolveAllPlaceholderReferences(UObject* ReplacementObj)"
  },
  {
    "label": "SetupPlaceholderSubobject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupPlaceholderSubobject(ULinkerPlaceholderExportObject* PlaceholderSubobject)"
  },
  {
    "label": "IsDeferredSubobject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDeferredSubobject()"
  },
  {
    "label": "GetPlaceholderAsUObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetPlaceholderAsUObject() PURE_VIRTUAL(FLinkerPlaceholderBase::GetPlaceholderAsUObject, return nullptr;) bool IsMarkedResolved()"
  },
  {
    "label": "MarkAsResolved()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "MarkAsResolved()"
  },
  {
    "label": "ResolvePlaceholderPropertyValues()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "ResolvePlaceholderPropertyValues(UObject* ReplacementObj)"
  },
  {
    "label": "FPlaceholderValuePropertyPath()",
    "kind": "Method",
    "detail": "Function (bool bResolveWasInvoked ; struct FPlaceholderValuePropertyPath {)",
    "insertText": "FPlaceholderValuePropertyPath(FFieldVariant ReferencingProperty)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetOwnerClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetOwnerClass()"
  },
  {
    "label": "Resolve()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Resolve(FLinkerPlaceholderBase* Placeholder, UObject* Replacement, UObject* Container)"
  },
  {
    "label": "ResolveRaw()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ResolveRaw(FLinkerPlaceholderBase* Placeholder, UObject* Replacement, void* Container)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (private : TArray<FFieldVariant> PropertyChain ; public : uint32)",
    "insertText": "GetTypeHash(const FPlaceholderValuePropertyPath& PlaceholderPropertyRef)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (uint32 Hash = 0 ;)",
    "insertText": "for(const FFieldVariant& Property : PlaceholderPropertyRef.PropertyChain)"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Property.GetRawPointer()))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} return Hash ; } bool)",
    "insertText": "operator(const FPlaceholderValuePropertyPath& Lhs, const FPlaceholderValuePropertyPath& Rhs)"
  },
  {
    "label": "AddReferencingProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencingProperty(FFieldVariant ReferencingProperty)"
  },
  {
    "label": "RemoveReferencingProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReferencingProperty(FFieldVariant ReferencingProperty)"
  },
  {
    "label": "AddReferencingScriptExpr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencingScriptExpr(PlaceholderType** ExpressionPtr)"
  },
  {
    "label": "AddChildObject()",
    "kind": "Method",
    "detail": "Function (# if USE_DEFERRED_DEPENDENCY_CHECK_VERIFICATION_TESTS void)",
    "insertText": "AddChildObject(UObject* Child)"
  },
  {
    "label": "AddDerivedFunction()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "AddDerivedFunction(UStruct* DerivedFunctionType)"
  },
  {
    "label": "ResolvePropertyReferences()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "ResolvePropertyReferences(PlaceholderType* ReplacementObj)"
  },
  {
    "label": "ResolveScriptReferences()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ResolveScriptReferences(PlaceholderType* ReplacementObj)"
  },
  {
    "label": "ResolvePropertyReferences()",
    "kind": "Method",
    "detail": "Function (TSet<FFieldVariant> ReferencingProperties ; TSet<PlaceholderType**> ReferencingScriptExpressions ; # if USE_DEFERRED_DEPENDENCY_CHECK_VERIFICATION_TESTS TArray<UObject*> ChildObjects ; # endif TSet<UStruct*> DerivedFunctions ; } ; # include \" UObject / LinkerPlaceholderBase . inl \" template<> int32 TLinkerImportPlaceholder<UClass)",
    "insertText": "ResolvePropertyReferences(UClass* ReplacementClass)"
  },
  {
    "label": "ResolvePropertyReferences()",
    "kind": "Method",
    "detail": "Function (template<> int32 TLinkerImportPlaceholder<UFunction)",
    "insertText": "ResolvePropertyReferences(UFunction* ReplacementFunc)"
  }
]