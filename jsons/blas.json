[
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (# ifndef BLAS_H # define BLAS_H # ifdef __cplusplus \" C \" { # endif # define)",
    "insertText": "BLASFUNC(FUNC)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (typedef unsigned long long BLASULONG ; # else typedef long BLASLONG ; typedef unsigned long BLASULONG ; # endif int)",
    "insertText": "BLASFUNC(xerbla)(const char *, int *info, int)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(sdot) (int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(sdsdot)(int *, float *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cdotuw) (int *, float *, int *, float *, int *, float*)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cdotcw) (int *, float *, int *, float *, int *, float*)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zdotuw) (int *, double *, int *, double *, int *, double*)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zdotcw) (int *, double *, int *, double *, int *, double*)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(saxpy) (const int *, const float *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(daxpy) (const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qaxpy) (const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(caxpy) (const int *, const float *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zaxpy) (const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xaxpy) (const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(caxpyc)(const int *, const float *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zaxpyc)(const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xaxpyc)(const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(scopy) (int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dcopy) (int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qcopy) (int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ccopy) (int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zcopy) (int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xcopy) (int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sswap) (int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dswap) (int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qswap) (int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cswap) (int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zswap) (int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xswap) (int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(sasum) (int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(scasum)(int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(isamax)(int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(idamax)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(iqamax)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(icamax)(int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(izamax)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ixamax)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ismax) (int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(idmax) (int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(iqmax) (int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(icmax) (int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(izmax) (int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ixmax) (int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(isamin)(int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(idamin)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(iqamin)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(icamin)(int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(izamin)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ixamin)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ismin)(int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(idmin)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(iqmin)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(icmin)(int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(izmin)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ixmin)(int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(samax) (int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(scamax)(int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(samin) (int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(scamin)(int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(smax) (int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(scmax) (int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(smin) (int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(scmin) (int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sscal) (int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dscal) (int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qscal) (int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cscal) (int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zscal) (int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xscal) (int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(csscal)(int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zdscal)(int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xqscal)(int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(snrm2) (int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "BLASFUNC(scnrm2)(int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(srot) (int *, float *, int *, float *, int *, float *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(drot) (int *, double *, int *, double *, int *, double *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qrot) (int *, double *, int *, double *, int *, double *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(csrot) (int *, float *, int *, float *, int *, float *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zdrot) (int *, double *, int *, double *, int *, double *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xqrot) (int *, double *, int *, double *, int *, double *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(srotg) (float *, float *, float *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(drotg) (double *, double *, double *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qrotg) (double *, double *, double *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(crotg) (float *, float *, float *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zrotg) (double *, double *, double *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xrotg) (double *, double *, double *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(srotmg)(float *, float *, float *, float *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(drotmg)(double *, double *, double *, double *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(srotm) (int *, float *, int *, float *, int *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(drotm) (int *, double *, int *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qrotm) (int *, double *, int *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sger)(int *, int *, float *, float *, int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dger)(int *, int *, double *, double *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qger)(int *, int *, double *, double *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgeru)(int *, int *, float *, float *, int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgerc)(int *, int *, float *, float *, int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgeru)(int *, int *, double *, double *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgerc)(int *, int *, double *, double *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xgeru)(int *, int *, double *, double *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xgerc)(int *, int *, double *, double *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sgemv)(const char *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dgemv)(const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qgemv)(const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgemv)(const char *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgemv)(const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xgemv)(const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(strsv) (const char *, const char *, const char *, const int *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dtrsv) (const char *, const char *, const char *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qtrsv) (const char *, const char *, const char *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ctrsv) (const char *, const char *, const char *, const int *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ztrsv) (const char *, const char *, const char *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xtrsv) (const char *, const char *, const char *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(stpsv) (char *, char *, char *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dtpsv) (char *, char *, char *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qtpsv) (char *, char *, char *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ctpsv) (char *, char *, char *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ztpsv) (char *, char *, char *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xtpsv) (char *, char *, char *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(strmv) (const char *, const char *, const char *, const int *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dtrmv) (const char *, const char *, const char *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qtrmv) (const char *, const char *, const char *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ctrmv) (const char *, const char *, const char *, const int *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ztrmv) (const char *, const char *, const char *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xtrmv) (const char *, const char *, const char *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(stpmv) (char *, char *, char *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dtpmv) (char *, char *, char *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qtpmv) (char *, char *, char *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ctpmv) (char *, char *, char *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ztpmv) (char *, char *, char *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xtpmv) (char *, char *, char *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(stbmv) (char *, char *, char *, int *, int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dtbmv) (char *, char *, char *, int *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qtbmv) (char *, char *, char *, int *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ctbmv) (char *, char *, char *, int *, int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ztbmv) (char *, char *, char *, int *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xtbmv) (char *, char *, char *, int *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(stbsv) (char *, char *, char *, int *, int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dtbsv) (char *, char *, char *, int *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qtbsv) (char *, char *, char *, int *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ctbsv) (char *, char *, char *, int *, int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ztbsv) (char *, char *, char *, int *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xtbsv) (char *, char *, char *, int *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ssymv) (const char *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dsymv) (const char *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qsymv) (const char *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sspmv) (char *, int *, float *, float *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dspmv) (char *, int *, double *, double *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qspmv) (char *, int *, double *, double *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ssyr) (const char *, const int *, const float *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dsyr) (const char *, const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qsyr) (const char *, const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ssyr2) (const char *, const int *, const float *, const float *, const int *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dsyr2) (const char *, const int *, const double *, const double *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qsyr2) (const char *, const int *, const double *, const double *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(csyr2) (const char *, const int *, const float *, const float *, const int *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zsyr2) (const char *, const int *, const double *, const double *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xsyr2) (const char *, const int *, const double *, const double *, const int *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sspr) (char *, int *, float *, float *, int *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dspr) (char *, int *, double *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qspr) (char *, int *, double *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sspr2) (char *, int *, float *, float *, int *, float *, int *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dspr2) (char *, int *, double *, double *, int *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qspr2) (char *, int *, double *, double *, int *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cspr2) (char *, int *, float *, float *, int *, float *, int *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zspr2) (char *, int *, double *, double *, int *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xspr2) (char *, int *, double *, double *, int *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cher) (char *, int *, float *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zher) (char *, int *, double *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xher) (char *, int *, double *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(chpr) (char *, int *, float *, float *, int *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zhpr) (char *, int *, double *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xhpr) (char *, int *, double *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cher2) (char *, int *, float *, float *, int *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zher2) (char *, int *, double *, double *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xher2) (char *, int *, double *, double *, int *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(chpr2) (char *, int *, float *, float *, int *, float *, int *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zhpr2) (char *, int *, double *, double *, int *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xhpr2) (char *, int *, double *, double *, int *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(chemv) (const char *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zhemv) (const char *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xhemv) (const char *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(chpmv) (char *, int *, float *, float *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zhpmv) (char *, int *, double *, double *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xhpmv) (char *, int *, double *, double *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(snorm)(char *, int *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dnorm)(char *, int *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cnorm)(char *, int *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(znorm)(char *, int *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sgbmv)(char *, int *, int *, int *, int *, float *, float *, int *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dgbmv)(char *, int *, int *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qgbmv)(char *, int *, int *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgbmv)(char *, int *, int *, int *, int *, float *, float *, int *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgbmv)(char *, int *, int *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xgbmv)(char *, int *, int *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ssbmv)(char *, int *, int *, float *, float *, int *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dsbmv)(char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qsbmv)(char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(csbmv)(char *, int *, int *, float *, float *, int *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zsbmv)(char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xsbmv)(char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(chbmv)(char *, int *, int *, float *, float *, int *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zhbmv)(char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xhbmv)(char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sgemm)(const char *, const char *, const int *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dgemm)(const char *, const char *, const int *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qgemm)(const char *, const char *, const int *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgemm)(const char *, const char *, const int *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgemm)(const char *, const char *, const int *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xgemm)(const char *, const char *, const int *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgemm3m)(char *, char *, int *, int *, int *, float *, float *, int *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgemm3m)(char *, char *, int *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xgemm3m)(char *, char *, int *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sge2mm)(char *, char *, char *, int *, int *, float *, float *, int *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dge2mm)(char *, char *, char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cge2mm)(char *, char *, char *, int *, int *, float *, float *, int *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zge2mm)(char *, char *, char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(strsm)(const char *, const char *, const char *, const char *, const int *, const int *, const float *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dtrsm)(const char *, const char *, const char *, const char *, const int *, const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qtrsm)(const char *, const char *, const char *, const char *, const int *, const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ctrsm)(const char *, const char *, const char *, const char *, const int *, const int *, const float *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ztrsm)(const char *, const char *, const char *, const char *, const int *, const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xtrsm)(const char *, const char *, const char *, const char *, const int *, const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(strmm)(const char *, const char *, const char *, const char *, const int *, const int *, const float *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dtrmm)(const char *, const char *, const char *, const char *, const int *, const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qtrmm)(const char *, const char *, const char *, const char *, const int *, const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ctrmm)(const char *, const char *, const char *, const char *, const int *, const int *, const float *, const float *, const int *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ztrmm)(const char *, const char *, const char *, const char *, const int *, const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xtrmm)(const char *, const char *, const char *, const char *, const int *, const int *, const double *, const double *, const int *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ssymm)(const char *, const char *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dsymm)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qsymm)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(csymm)(const char *, const char *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zsymm)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xsymm)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(csymm3m)(char *, char *, int *, int *, float *, float *, int *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zsymm3m)(char *, char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xsymm3m)(char *, char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ssyrk)(const char *, const char *, const int *, const int *, const float *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dsyrk)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qsyrk)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(csyrk)(const char *, const char *, const int *, const int *, const float *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zsyrk)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xsyrk)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ssyr2k)(const char *, const char *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dsyr2k)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double*, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qsyr2k)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double*, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(csyr2k)(const char *, const char *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zsyr2k)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double*, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xsyr2k)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double*, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(chemm)(const char *, const char *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zhemm)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xhemm)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(chemm3m)(char *, char *, int *, int *, float *, float *, int *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zhemm3m)(char *, char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xhemm3m)(char *, char *, int *, int *, double *, double *, int *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cherk)(const char *, const char *, const int *, const int *, const float *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zherk)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xherk)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cher2k)(const char *, const char *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zher2k)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xher2k)(const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cher2m)(const char *, const char *, const char *, const int *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zher2m)(const char *, const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double*, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xher2m)(const char *, const char *, const char *, const int *, const int *, const double *, const double *, const int *, const double*, const int *, const double *, double *, const int *)"
  }
]