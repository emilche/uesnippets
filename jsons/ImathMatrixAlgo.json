[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "extractScaling()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractScaling(const Matrix44<T>& mat, Vec3<T>& scl, bool exc = true)"
  },
  {
    "label": "sansScaling()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "sansScaling(const Matrix44<T>& mat, bool exc = true)"
  },
  {
    "label": "removeScaling()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "removeScaling(Matrix44<T>& mat, bool exc = true)"
  },
  {
    "label": "extractScalingAndShear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractScalingAndShear(const Matrix44<T>& mat, Vec3<T>& scl, Vec3<T>& shr, bool exc = true)"
  },
  {
    "label": "sansScalingAndShear()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "sansScalingAndShear(const Matrix44<T>& mat, bool exc = true)"
  },
  {
    "label": "sansScalingAndShear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sansScalingAndShear(Matrix44<T>& result, const Matrix44<T>& mat, bool exc = true)"
  },
  {
    "label": "removeScalingAndShear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "removeScalingAndShear(Matrix44<T>& mat, bool exc = true)"
  },
  {
    "label": "extractAndRemoveScalingAndShear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractAndRemoveScalingAndShear(Matrix44<T>& mat, Vec3<T>& scl, Vec3<T>& shr, bool exc = true)"
  },
  {
    "label": "extractEulerXYZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "extractEulerXYZ(const Matrix44<T>& mat, Vec3<T>& rot)"
  },
  {
    "label": "extractEulerZYX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "extractEulerZYX(const Matrix44<T>& mat, Vec3<T>& rot)"
  },
  {
    "label": "extractQuat()",
    "kind": "Method",
    "detail": "Function (Quat<T>)",
    "insertText": "extractQuat(const Matrix44<T>& mat)"
  },
  {
    "label": "extractSHRT()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractSHRT(const Matrix44<T>& mat,\n                  Vec3<T>& s,\n                  Vec3<T>& h,\n                  Vec3<T>& r,\n                  Vec3<T>& t,\n                  bool exc /*= true*/,\n                  typename Euler<T>::Order rOrder)"
  },
  {
    "label": "extractSHRT()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractSHRT(const Matrix44<T>& mat,\n                  Vec3<T>& s,\n                  Vec3<T>& h,\n                  Vec3<T>& r,\n                  Vec3<T>& t,\n                  bool exc = true)"
  },
  {
    "label": "extractSHRT()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractSHRT(const Matrix44<T>& mat,\n                  Vec3<T>& s,\n                  Vec3<T>& h,\n                  Euler<T>& r,\n                  Vec3<T>& t,\n                  bool exc = true)"
  },
  {
    "label": "checkForZeroScaleInRow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "checkForZeroScaleInRow(const T& scl, const Vec3<T>& row, bool exc = true)"
  },
  {
    "label": "outerProduct()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "outerProduct(const Vec4<T>& a, const Vec4<T>& b)"
  },
  {
    "label": "rotationMatrix()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "rotationMatrix(const Vec3<T>& fromDirection, const Vec3<T>& toDirection)"
  },
  {
    "label": "rotationMatrixWithUpDir()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "rotationMatrixWithUpDir(const Vec3<T>& fromDir, const Vec3<T>& toDir, const Vec3<T>& upDir)"
  },
  {
    "label": "opposite()",
    "kind": "Method",
    "detail": "Function (or)",
    "insertText": "opposite(the direction vectors must have a non-zero cross product)"
  },
  {
    "label": "alignZAxisWithTargetDir()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "alignZAxisWithTargetDir(Matrix44<T>& result, Vec3<T> targetDir, Vec3<T> upDir)"
  },
  {
    "label": "computeLocalFrame()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "computeLocalFrame(const Vec3<T>& p, const Vec3<T>& xDir, const Vec3<T>& normal)"
  },
  {
    "label": "addOffset()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "addOffset(const Matrix44<T>& inMat,\n                       const Vec3<T>& tOffset,\n                       const Vec3<T>& rOffset,\n                       const Vec3<T>& sOffset,\n                       const Vec3<T>& ref)"
  },
  {
    "label": "computeRSMatrix()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "computeRSMatrix(bool keepRotateA, bool keepScaleA, const Matrix44<T>& A, const Matrix44<T>& B)"
  },
  {
    "label": "extractScaling()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractScaling(const Matrix33<T>& mat, Vec2<T>& scl, bool exc = true)"
  },
  {
    "label": "sansScaling()",
    "kind": "Method",
    "detail": "Function (Matrix33<T>)",
    "insertText": "sansScaling(const Matrix33<T>& mat, bool exc = true)"
  },
  {
    "label": "removeScaling()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "removeScaling(Matrix33<T>& mat, bool exc = true)"
  },
  {
    "label": "extractScalingAndShear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractScalingAndShear(const Matrix33<T>& mat, Vec2<T>& scl, T& shr, bool exc = true)"
  },
  {
    "label": "sansScalingAndShear()",
    "kind": "Method",
    "detail": "Function (Matrix33<T>)",
    "insertText": "sansScalingAndShear(const Matrix33<T>& mat, bool exc = true)"
  },
  {
    "label": "removeScalingAndShear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "removeScalingAndShear(Matrix33<T>& mat, bool exc = true)"
  },
  {
    "label": "extractAndRemoveScalingAndShear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractAndRemoveScalingAndShear(Matrix33<T>& mat, Vec2<T>& scl, T& shr, bool exc = true)"
  },
  {
    "label": "extractEuler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "extractEuler(const Matrix22<T>& mat, T& rot)"
  },
  {
    "label": "extractEuler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "extractEuler(const Matrix33<T>& mat, T& rot)"
  },
  {
    "label": "extractSHRT()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractSHRT(const Matrix33<T>& mat, Vec2<T>& s, T& h, T& r, Vec2<T>& t, bool exc = true)"
  },
  {
    "label": "checkForZeroScaleInRow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "checkForZeroScaleInRow(const T& scl, const Vec2<T>& row, bool exc = true)"
  },
  {
    "label": "outerProduct()",
    "kind": "Method",
    "detail": "Function (Matrix33<T>)",
    "insertText": "outerProduct(const Vec3<T>& a, const Vec3<T>& b)"
  },
  {
    "label": "M()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "M(mat)"
  },
  {
    "label": "M()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "M(mat)"
  },
  {
    "label": "M()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "M(mat)"
  },
  {
    "label": "i()",
    "kind": "Method",
    "detail": "Function (Vec3<T>)",
    "insertText": "i(mat[0][0], mat[0][1], mat[0][2])"
  },
  {
    "label": "j()",
    "kind": "Method",
    "detail": "Function (Vec3<T>)",
    "insertText": "j(mat[1][0], mat[1][1], mat[1][2])"
  },
  {
    "label": "k()",
    "kind": "Method",
    "detail": "Function (Vec3<T>)",
    "insertText": "k(mat[2][0], mat[2][1], mat[2][2])"
  },
  {
    "label": "M()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "M(i[0], i[1], i[2], 0, j[0], j[1], j[2], 0, k[0], k[1], k[2], 0, 0, 0, 0, 1)"
  },
  {
    "label": "i()",
    "kind": "Method",
    "detail": "Function (Vec3<T>)",
    "insertText": "i(mat[0][0], mat[0][1], mat[0][2])"
  },
  {
    "label": "j()",
    "kind": "Method",
    "detail": "Function (Vec3<T>)",
    "insertText": "j(mat[1][0], mat[1][1], mat[1][2])"
  },
  {
    "label": "k()",
    "kind": "Method",
    "detail": "Function (Vec3<T>)",
    "insertText": "k(mat[2][0], mat[2][1], mat[2][2])"
  },
  {
    "label": "M()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "M(i[0], i[1], i[2], 0, j[0], j[1], j[2], 0, k[0], k[1], k[2], 0, 0, 0, 0, 1)"
  },
  {
    "label": "eXYZ()",
    "kind": "Method",
    "detail": "Function (Euler<T>)",
    "insertText": "eXYZ(r, Euler<T>::XYZ)"
  },
  {
    "label": "e()",
    "kind": "Method",
    "detail": "Function (Euler<T>)",
    "insertText": "e(eXYZ, rOrder)"
  },
  {
    "label": "extractSHRT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "extractSHRT(mat, s, h, r, t, exc, Euler<T>::XYZ)"
  },
  {
    "label": "zAxis2FromDir()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "zAxis2FromDir(UNINITIALIZED)"
  },
  {
    "label": "zAxis2ToDir()",
    "kind": "Method",
    "detail": "Function (Matrix44<T>)",
    "insertText": "zAxis2ToDir(UNINITIALIZED)"
  },
  {
    "label": "_xDir()",
    "kind": "Method",
    "detail": "Function (Vec3<T>)",
    "insertText": "_xDir(xDir)"
  },
  {
    "label": "_rOffset()",
    "kind": "Method",
    "detail": "Function (Vec3<T>)",
    "insertText": "_rOffset(rOffset)"
  },
  {
    "label": "M()",
    "kind": "Method",
    "detail": "Function (Matrix33<T>)",
    "insertText": "M(mat)"
  },
  {
    "label": "M()",
    "kind": "Method",
    "detail": "Function (Matrix33<T>)",
    "insertText": "M(mat)"
  },
  {
    "label": "M()",
    "kind": "Method",
    "detail": "Function (Matrix33<T>)",
    "insertText": "M(mat)"
  },
  {
    "label": "i()",
    "kind": "Method",
    "detail": "Function (Vec2<T>)",
    "insertText": "i(mat[0][0], mat[0][1])"
  },
  {
    "label": "j()",
    "kind": "Method",
    "detail": "Function (Vec2<T>)",
    "insertText": "j(mat[1][0], mat[1][1])"
  },
  {
    "label": "i()",
    "kind": "Method",
    "detail": "Function (Vec2<T>)",
    "insertText": "i(mat[0][0], mat[0][1])"
  },
  {
    "label": "j()",
    "kind": "Method",
    "detail": "Function (Vec2<T>)",
    "insertText": "j(mat[1][0], mat[1][1])"
  },
  {
    "label": "procrustesRotationAndTranslation()",
    "kind": "Method",
    "detail": "Function (M44d)",
    "insertText": "procrustesRotationAndTranslation(const Vec3<T>* A,\n                                  const Vec3<T>* B,\n                                  const T* weights,\n                                  const size_t numPoints,\n                                  const bool doScaling = false)"
  },
  {
    "label": "procrustesRotationAndTranslation()",
    "kind": "Method",
    "detail": "Function (M44d)",
    "insertText": "procrustesRotationAndTranslation(const Vec3<T>* A,\n                                  const Vec3<T>* B,\n                                  const size_t numPoints,\n                                  const bool doScaling = false)"
  },
  {
    "label": "jacobiEigenSolver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "jacobiEigenSolver(Matrix33<T>& A, Vec3<T>& S, Matrix33<T>& V, const T tol)"
  },
  {
    "label": "jacobiEigenSolver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "jacobiEigenSolver(Matrix44<T>& A, Vec4<T>& S, Matrix44<T>& V, const T tol)"
  },
  {
    "label": "maxEigenVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "maxEigenVector(TM& A, TV& S)"
  },
  {
    "label": "minEigenVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "minEigenVector(TM& A, TV& S)"
  }
]