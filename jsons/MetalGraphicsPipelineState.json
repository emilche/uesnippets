[
  {
    "label": "FMetalGraphicsPipelineState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalGraphicsPipelineState"
  },
  {
    "label": "FMetalDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalDynamicRHI"
  },
  {
    "label": "FMetalGraphicsPipelineState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RHIResources . h \" # include \" MetalState . h \" # include \" Shaders / Types / MetalAmplificationShader . h \" # include \" Shaders / Types / MetalGeometryShader . h \" # include \" Shaders / Types / MetalMeshShader . h \" # include \" Shaders / Types / MetalPixelShader . h \" # include \" Shaders / Types / MetalVertexShader . h \" class FMetalGraphicsPipelineState : public FRHIGraphicsPipelineState { class FMetalDynamicRHI ; public : ~)",
    "insertText": "FMetalGraphicsPipelineState()"
  },
  {
    "label": "GetShader()",
    "kind": "Method",
    "detail": "Function (FRHIGraphicsShader*)",
    "insertText": "GetShader(EShaderFrequency Frequency)"
  },
  {
    "label": "GetPrimitiveType()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FMetalVertexDeclaration> VertexDeclaration ; TRefCountPtr<FMetalVertexShader> VertexShader ; TRefCountPtr<FMetalPixelShader> PixelShader ; # if PLATFORM_SUPPORTS_GEOMETRY_SHADERS TRefCountPtr<FMetalGeometryShader> GeometryShader ; # endif # if PLATFORM_SUPPORTS_MESH_SHADERS TRefCountPtr<FMetalMeshShader> MeshShader ; TRefCountPtr<FMetalAmplificationShader> AmplificationShader ; # endif TRefCountPtr<FMetalDepthStencilState> DepthStencilState ; TRefCountPtr<FMetalRasterizerState> RasterizerState ; EPrimitiveType)",
    "insertText": "GetPrimitiveType()"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Compile()"
  }
]