[
  {
    "label": "FCbFieldView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbFieldView"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "FAssetIdentifier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetIdentifier"
  },
  {
    "label": "FAssetIdentifier()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / PrimaryAssetId . h \" class FCbFieldView ; class FCbWriter ; struct FAssetIdentifier { FName PackageName ; FPrimaryAssetType PrimaryAssetType ; FName ObjectName ; FName ValueName ;)",
    "insertText": "FAssetIdentifier(FName InPackageName, FName InObjectName = FName(), FName InValueName = FName()) : PackageName(InPackageName), PrimaryAssetType(), ObjectName(InObjectName), ValueName(InValueName)"
  },
  {
    "label": "FAssetIdentifier()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAssetIdentifier(const FPrimaryAssetId& PrimaryAssetId, FName InValueName = FName()) : PackageName(), PrimaryAssetType(PrimaryAssetId.PrimaryAssetType), ObjectName(PrimaryAssetId.PrimaryAssetName), ValueName(InValueName)"
  },
  {
    "label": "FAssetIdentifier()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAssetIdentifier(UObject* SourceObject, FName InValueName)"
  },
  {
    "label": "FAssetIdentifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAssetIdentifier()"
  },
  {
    "label": "GetPrimaryAssetId()",
    "kind": "Method",
    "detail": "Function (} FPrimaryAssetId)",
    "insertText": "GetPrimaryAssetId()"
  },
  {
    "label": "FPrimaryAssetId()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "FPrimaryAssetId()"
  },
  {
    "label": "IsPackage()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPackage()"
  },
  {
    "label": "IsObject()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsObject()"
  },
  {
    "label": "IsValue()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValue()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToString()"
  },
  {
    "label": "AppendString()",
    "kind": "Method",
    "detail": "Function (TStringBuilder<2 5 6> Builder ;)",
    "insertText": "AppendString(Builder)"
  },
  {
    "label": "AppendString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AppendString(FStringBuilderBase& Builder)"
  },
  {
    "label": "GetPrimaryAssetId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPrimaryAssetId().AppendString(Builder)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (Builder .)",
    "insertText": "Append(TEXT(\".\"))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "if(ValueName != NAME_None)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (Builder .)",
    "insertText": "Append(TEXT(\"::\"))"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (} } FAssetIdentifier)",
    "insertText": "FromString(const FString& String)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FString PackageString ; FString ObjectString ; FString ValueString ;)",
    "insertText": "if(!String.Split(TEXT(\"::\"), &PackageString, &ValueString))"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (PackageString = String ; } FPrimaryAssetId PrimaryId =)",
    "insertText": "FromString(PackageString)"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FString(PackageString).Split(TEXT(\".\"), &PackageString, &ObjectString)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FAssetIdentifier& A, const FAssetIdentifier& B)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (uint32 Hash = 0 ;)",
    "insertText": "if(Key.ObjectName.IsNone() && Key.ValueName.IsNone())"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (} Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Key.PackageName))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Key.PrimaryAssetType))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Key.ObjectName))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Key.ValueName))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (uint8 FieldBits = 0 ;)",
    "insertText": "if(Ar.IsSaving())"
  },
  {
    "label": "FieldBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldBits(AssetIdentifier.PackageName != NAME_None)"
  },
  {
    "label": "FieldBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldBits(AssetIdentifier.PrimaryAssetType.IsValid())"
  },
  {
    "label": "FieldBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldBits(AssetIdentifier.ObjectName != NAME_None)"
  },
  {
    "label": "FieldBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldBits(AssetIdentifier.ValueName != NAME_None)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} Ar<<FieldBits ;)",
    "insertText": "if(FieldBits & (1 << 0))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Ar<<AssetIdentifier . PackageName ; })",
    "insertText": "if(FieldBits & (1 << 1))"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FName = AssetIdentifier . PrimaryAssetType .)",
    "insertText": "GetName()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Ar<<;)",
    "insertText": "if(Ar.IsLoading())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (AssetIdentifier . PrimaryAssetType = ; } })",
    "insertText": "if(FieldBits & (1 << 2))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Ar<<AssetIdentifier . ObjectName ; })",
    "insertText": "if(FieldBits & (1 << 3))"
  },
  {
    "label": "LexicalLess()",
    "kind": "Method",
    "detail": "Function (Ar<<AssetIdentifier . ValueName ; } return Ar ; } bool)",
    "insertText": "LexicalLess(const FAssetIdentifier& Other)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(PackageName != Other.PackageName)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(ObjectName != Other.ObjectName)"
  },
  {
    "label": "LexicalLess()",
    "kind": "Method",
    "detail": "Function (} return ValueName .)",
    "insertText": "LexicalLess(Other.ValueName)"
  },
  {
    "label": "FastLess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FastLess(const FAssetIdentifier& Other)"
  },
  {
    "label": "FastLess()",
    "kind": "Method",
    "detail": "Function (} return ValueName .)",
    "insertText": "FastLess(Other.ValueName)"
  },
  {
    "label": "WriteCompactBinary()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteCompactBinary(FCbWriter& Writer)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (private : FCbWriter&)",
    "insertText": "operator(FCbWriter& Writer, const FAssetIdentifier& Identifier)"
  },
  {
    "label": "WriteCompactBinary()",
    "kind": "Method",
    "detail": "Function (Identifier .)",
    "insertText": "WriteCompactBinary(Writer)"
  },
  {
    "label": "SerializeForLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeForLog(FCbWriter& Writer, const FAssetIdentifier& Value)"
  }
]