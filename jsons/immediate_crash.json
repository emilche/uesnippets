[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef BUILD_RUST_STD_IMMEDIATE_CRASH_H_ # define BUILD_RUST_STD_IMMEDIATE_CRASH_H_ # include \" build / build_config . h \" # if)",
    "insertText": "defined(COMPILER_GCC) #if BUILDFLAG(IS_NACL) #define TRAP_SEQUENCE1_() __builtin_trap() #define TRAP_SEQUENCE2_() asm volatile(\"\") #elif defined(ARCH_CPU_X86_FAMILY) #define TRAP_SEQUENCE1_() asm volatile(\"int3\") #if BUILDFLAG(IS_APPLE) #define TRAP_SEQUENCE2_() asm volatile(\"\") #else #define TRAP_SEQUENCE2_() asm volatile(\"ud2\") #endif #elif defined(ARCH_CPU_ARMEL) #define TRAP_SEQUENCE1_() asm volatile(\"bkpt #0\") #define TRAP_SEQUENCE2_() asm volatile(\"udf #0\") #elif defined(ARCH_CPU_ARM64) #define TRAP_SEQUENCE1_() asm volatile(\"brk #0\") #define TRAP_SEQUENCE2_() asm volatile(\"hlt #0\") #else #define TRAP_SEQUENCE1_() __builtin_trap() #define TRAP_SEQUENCE2_() asm volatile(\"\") #endif #elif defined(COMPILER_MSVC) #if !defined(__clang__) #define TRAP_SEQUENCE1_() __debugbreak() #define TRAP_SEQUENCE2_() #elif defined(ARCH_CPU_ARM64) #define TRAP_SEQUENCE1_() __debugbreak() #define TRAP_SEQUENCE2_() __asm volatile(\"\") #else #define TRAP_SEQUENCE1_() asm volatile(\"int3\") #define TRAP_SEQUENCE2_() asm volatile(\"ud2\") #endif #else #error No supported trap sequence! #endif #define TRAP_SEQUENCE_()"
  },
  {
    "label": "TRAP_SEQUENCE1_()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "TRAP_SEQUENCE1_()"
  },
  {
    "label": "TRAP_SEQUENCE2_()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "TRAP_SEQUENCE2_()"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(false) #if !defined(COMPILER_GCC) || defined(__clang__) #define WRAPPED_TRAP_SEQUENCE_() TRAP_SEQUENCE_() #else #define WRAPPED_TRAP_SEQUENCE_()"
  },
  {
    "label": "TRAP_SEQUENCE_()",
    "kind": "Method",
    "detail": "Function (\\ [ ] {)",
    "insertText": "TRAP_SEQUENCE_()"
  }
]