[
  {
    "label": "FSlateOpenGLShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateOpenGLShader"
  },
  {
    "label": "FSlateOpenGLVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateOpenGLVS"
  },
  {
    "label": "FSlateOpenGLPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateOpenGLPS"
  },
  {
    "label": "FSlateOpenGLShaderProgram",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateOpenGLShaderProgram"
  },
  {
    "label": "FSlateOpenGLElementProgram",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateOpenGLElementProgram"
  },
  {
    "label": "FSlateOpenGLShader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" StandaloneRendererPlatformHeaders . h \" # include \" Rendering / RenderingCommon . h \" # include \" SlateOpenGLTextures . h \" class FSlateOpenGLShader { public :)",
    "insertText": "FSlateOpenGLShader()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Create(const FString& Filename)"
  },
  {
    "label": "GetShaderID()",
    "kind": "Method",
    "detail": "Function (GLuint)",
    "insertText": "GetShaderID()"
  },
  {
    "label": "FSlateOpenGLVS()",
    "kind": "Method",
    "detail": "Function (protected : GLuint ShaderID ; } ; class FSlateOpenGLVS : public FSlateOpenGLShader { public :)",
    "insertText": "FSlateOpenGLVS()"
  },
  {
    "label": "FSlateOpenGLPS()",
    "kind": "Method",
    "detail": "Function (} ; class FSlateOpenGLPS : public FSlateOpenGLShader { public :)",
    "insertText": "FSlateOpenGLPS()"
  },
  {
    "label": "FSlateOpenGLShaderProgram()",
    "kind": "Method",
    "detail": "Function (} ; class FSlateOpenGLShaderProgram { public :)",
    "insertText": "FSlateOpenGLShaderProgram()"
  },
  {
    "label": "CreateProgram()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateProgram(const FSlateOpenGLVS& VertexShader, const FSlateOpenGLPS& PixelShader)"
  },
  {
    "label": "BindProgram()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindProgram()"
  },
  {
    "label": "LinkShaders()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "LinkShaders(const FSlateOpenGLVS& VertexShader, const FSlateOpenGLPS& PixelShader)"
  },
  {
    "label": "SetViewProjectionMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewProjectionMatrix(const FMatrix& InVP)"
  },
  {
    "label": "SetVertexShaderParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVertexShaderParams(const FVector4f& ShaderParams)"
  },
  {
    "label": "SetTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTexture(FSlateOpenGLTexture *Texture, uint32 AddressU, uint32 AddressV)"
  },
  {
    "label": "SetDrawEffects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawEffects(ESlateDrawEffect InDrawEffects)"
  },
  {
    "label": "SetShaderType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderType(uint32 InShaderType)"
  },
  {
    "label": "SetShaderParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderParams(const FShaderParams& InShaderParams)"
  },
  {
    "label": "SetGammaValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGammaValues(const FVector2f& InGammaValues)"
  }
]