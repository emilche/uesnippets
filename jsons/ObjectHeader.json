[
  {
    "label": "ObjectHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ObjectHeader"
  },
  {
    "label": "ObjectHeader()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcCoreAbstract_ObjectHeader_h # define Alembic_AbcCoreAbstract_ObjectHeader_h # include<Alembic / AbcCoreAbstract / Foundation . h> # include<Alembic / AbcCoreAbstract / MetaData . h> namespace Alembic { namespace AbcCoreAbstract { namespace ALEMBIC_VERSION_NS { class ObjectHeader { public :)",
    "insertText": "ObjectHeader() : m_name() , m_fullName() , m_metaData()"
  },
  {
    "label": "ObjectHeader()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ObjectHeader(const std::string &iName, const MetaData &iMetaData ) : m_name( iName ) , m_fullName( \"\" ) , m_metaData( iMetaData)"
  },
  {
    "label": "ObjectHeader()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ObjectHeader(const std::string &iName, const std::string &iFullName, const MetaData &iMetaData ) : m_name( iName ) , m_fullName( iFullName ) , m_metaData( iMetaData)"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (} const std::string&)",
    "insertText": "getName()"
  },
  {
    "label": "getFullName()",
    "kind": "Method",
    "detail": "Function (m_name = iName ; } const std::string&)",
    "insertText": "getFullName()"
  },
  {
    "label": "getMetaData()",
    "kind": "Method",
    "detail": "Function (m_fullName = iFullName ; } const MetaData&)",
    "insertText": "getMetaData()"
  }
]