[
  {
    "label": "FAndroidCrashContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAndroidCrashContext"
  },
  {
    "label": "FAndroidMemoryWarningContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAndroidMemoryWarningContext"
  },
  {
    "label": "FAndroidCrashContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / GenericPlatformCrashContext . h \" # include \" Containers / Map . h \" struct FAndroidCrashContext : public FGenericCrashContext { int32 Signal ; uint32 CrashingThreadId ; siginfo* Info ; void* Context ;)",
    "insertText": "FAndroidCrashContext(ECrashContextType InType, const TCHAR* InErrorMessage)"
  },
  {
    "label": "FAndroidCrashContext()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FAndroidCrashContext()"
  },
  {
    "label": "InitFromSignal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitFromSignal(int32 InSignal, siginfo* InInfo, void* InContext, uint32 InCrashingThreadId)"
  },
  {
    "label": "GetPortableCallStack()",
    "kind": "Method",
    "detail": "Function (Signal = InSignal ; CrashingThreadId = InCrashingThreadId ; Info = InInfo ; Context = InContext ; } void)",
    "insertText": "GetPortableCallStack(const uint64* StackFrames, int32 NumStackFrames, TArray<FCrashStackFrame>& OutCallStack)"
  },
  {
    "label": "AddPlatformSpecificProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPlatformSpecificProperties()"
  },
  {
    "label": "CaptureCrashInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureCrashInfo()"
  },
  {
    "label": "StoreCrashInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreCrashInfo(bool bWriteLog)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (const int32 CrashReportMaxPathSize = 5 1 2 ; void)",
    "insertText": "Initialize()"
  },
  {
    "label": "GetCurrentReportDirectoryPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCurrentReportDirectoryPath()"
  },
  {
    "label": "GetGlobalCrashDirectoryPath()",
    "kind": "Method",
    "detail": "Function (} const FString)",
    "insertText": "GetGlobalCrashDirectoryPath()"
  },
  {
    "label": "GetGlobalCrashDirectoryPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetGlobalCrashDirectoryPath(char(&DirectoryNameOUT)[CrashReportMaxPathSize])"
  },
  {
    "label": "AddAndroidCrashProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAndroidCrashProperty(const FString& Key, const FString& Value)"
  },
  {
    "label": "SetOverrideCallstack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOverrideCallstack(const FString& OverrideCallstackIN)"
  },
  {
    "label": "GenerateReportDirectoryName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateReportDirectoryName(char(&DirectoryNameOUT)[CrashReportMaxPathSize])"
  },
  {
    "label": "DumpAllThreadCallstacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpAllThreadCallstacks(FAsyncThreadBackTrace* BackTrace, int NumThreads)"
  },
  {
    "label": "ItoANSI()",
    "kind": "Method",
    "detail": "Function (const ANSICHAR*)",
    "insertText": "ItoANSI(uint64 Val, uint64 Base, uint32 Len = 0)"
  },
  {
    "label": "GetPortableCallstack_TEMP()",
    "kind": "Method",
    "detail": "Function (TArray<FCrashStackFrame>&)",
    "insertText": "GetPortableCallstack_TEMP()"
  },
  {
    "label": "FAndroidMemoryWarningContext()",
    "kind": "Method",
    "detail": "Function (private : FString OverrideCallstack ; TMap<FString,FString> AdditionalProperties ; char ReportDirectory [ CrashReportMaxPathSize ] ; } ; struct FAndroidMemoryWarningContext : public FGenericMemoryWarningContext {)",
    "insertText": "FAndroidMemoryWarningContext() : LastTrimMemoryState(FAndroidPlatformMemory::ETrimValues::Unknown)"
  }
]