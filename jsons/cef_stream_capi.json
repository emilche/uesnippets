[
  {
    "label": "_cef_read_handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_read_handler_t"
  },
  {
    "label": "_cef_stream_reader_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_stream_reader_t"
  },
  {
    "label": "_cef_write_handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_write_handler_t"
  },
  {
    "label": "_cef_stream_writer_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_stream_writer_t"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_STREAM_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_STREAM_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_read_handler_t { cef_base_ref_counted_t base ;)",
    "insertText": "size_t(CEF_CALLBACK* read)(struct _cef_read_handler_t* self, void* ptr, size_t size, size_t n)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* seek)(struct _cef_read_handler_t* self, int64 offset, int whence)"
  },
  {
    "label": "int64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int64(CEF_CALLBACK* tell)(struct _cef_read_handler_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* eof)(struct _cef_read_handler_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* may_block)(struct _cef_read_handler_t* self)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (} cef_read_handler_t ; typedef struct _cef_stream_reader_t { cef_base_ref_counted_t base ;)",
    "insertText": "size_t(CEF_CALLBACK* read)(struct _cef_stream_reader_t* self, void* ptr, size_t size, size_t n)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* seek)(struct _cef_stream_reader_t* self, int64 offset, int whence)"
  },
  {
    "label": "int64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int64(CEF_CALLBACK* tell)(struct _cef_stream_reader_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* eof)(struct _cef_stream_reader_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* may_block)(struct _cef_stream_reader_t* self)"
  },
  {
    "label": "cef_stream_reader_create_for_file()",
    "kind": "Method",
    "detail": "Function (} cef_stream_reader_t ; CEF_EXPORT cef_stream_reader_t*)",
    "insertText": "cef_stream_reader_create_for_file(const cef_string_t* fileName)"
  },
  {
    "label": "cef_stream_reader_create_for_data()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_stream_reader_t*)",
    "insertText": "cef_stream_reader_create_for_data(void* data, size_t size)"
  },
  {
    "label": "cef_stream_reader_create_for_handler()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_stream_reader_t*)",
    "insertText": "cef_stream_reader_create_for_handler(cef_read_handler_t* handler)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (typedef struct _cef_write_handler_t { cef_base_ref_counted_t base ;)",
    "insertText": "size_t(CEF_CALLBACK* write)(struct _cef_write_handler_t* self, const void* ptr, size_t size, size_t n)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* seek)(struct _cef_write_handler_t* self, int64 offset, int whence)"
  },
  {
    "label": "int64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int64(CEF_CALLBACK* tell)(struct _cef_write_handler_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* flush)(struct _cef_write_handler_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* may_block)(struct _cef_write_handler_t* self)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (} cef_write_handler_t ; typedef struct _cef_stream_writer_t { cef_base_ref_counted_t base ;)",
    "insertText": "size_t(CEF_CALLBACK* write)(struct _cef_stream_writer_t* self, const void* ptr, size_t size, size_t n)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* seek)(struct _cef_stream_writer_t* self, int64 offset, int whence)"
  },
  {
    "label": "int64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int64(CEF_CALLBACK* tell)(struct _cef_stream_writer_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* flush)(struct _cef_stream_writer_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* may_block)(struct _cef_stream_writer_t* self)"
  },
  {
    "label": "cef_stream_writer_create_for_file()",
    "kind": "Method",
    "detail": "Function (} cef_stream_writer_t ; CEF_EXPORT cef_stream_writer_t*)",
    "insertText": "cef_stream_writer_create_for_file(const cef_string_t* fileName)"
  },
  {
    "label": "cef_stream_writer_create_for_handler()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_stream_writer_t*)",
    "insertText": "cef_stream_writer_create_for_handler(cef_write_handler_t* handler)"
  }
]