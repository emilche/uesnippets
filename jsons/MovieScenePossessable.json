[
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "FMovieSceneSequenceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceID"
  },
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "FMovieScenePossessable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieScenePossessable"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Misc / Guid . h \" # include \" MovieSceneDynamicBinding . h \" # include \" MovieSceneObjectBindingID . h \" # include \" MovieSceneSequenceID . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / SoftObjectPtr . h \" # include \" MovieScenePossessable . generated . h \" class IMovieScenePlayer ; class UClass ; class UMovieScene ; struct FMovieSceneSequenceID ; namespace UE::MovieScene { struct FSharedPlaybackState ; })",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY(FMovieScenePossessable) public: FMovieScenePossessable()"
  },
  {
    "label": "FMovieScenePossessable()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieScenePossessable(const FString& InitName, UClass* InitPossessedObjectClass) : Guid(FGuid::NewGuid()) , Name(InitName) #if WITH_EDITORONLY_DATA , PossessedObjectClass(InitPossessedObjectClass)"
  },
  {
    "label": "GetGuid()",
    "kind": "Method",
    "detail": "Function (} public : const FGuid&)",
    "insertText": "GetGuid()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (Guid = InGuid ; } const FString&)",
    "insertText": "GetName()"
  },
  {
    "label": "GetPossessedObjectClass()",
    "kind": "Method",
    "detail": "Function (Name = InName ; } # if WITH_EDITORONLY_DATA const UClass*)",
    "insertText": "GetPossessedObjectClass()"
  },
  {
    "label": "SetPossessedObjectClass()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetPossessedObjectClass(UClass* InClass)"
  },
  {
    "label": "FixupPossessedObjectClass()",
    "kind": "Method",
    "detail": "Function (PossessedObjectClass = InClass ; } void)",
    "insertText": "FixupPossessedObjectClass(UMovieSceneSequence* InSequence, UObject* Context)"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (# endif const FGuid&)",
    "insertText": "GetParent()"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParent(const FGuid& InParentGuid, UMovieScene* Owner)"
  },
  {
    "label": "GetSpawnableObjectBindingID()",
    "kind": "Method",
    "detail": "Function (const FMovieSceneObjectBindingID&)",
    "insertText": "GetSpawnableObjectBindingID()"
  },
  {
    "label": "BindSpawnableObject()",
    "kind": "Method",
    "detail": "Function (SpawnableObjectBindingID = InSpawnableObjectBindingID ; } bool)",
    "insertText": "BindSpawnableObject(FMovieSceneSequenceID SequenceID, UObject* Object, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FGuid& InGuid)"
  }
]