[
  {
    "label": "FConfigAccessData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConfigAccessData"
  },
  {
    "label": "FConfigAccessData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / ConfigAccessTracking . h \" # if UE_WITH_CONFIG_TRACKING | | WITH_EDITOR # include \" Containers / ArrayView . h \" # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" Containers / UnrealString . h \" # include \" Interfaces / ITargetPlatform . h \" # include \" Templates / TypeHash . h \" namespace UE::ConfigAccessTracking { struct FConfigAccessData { FNameEntryId ConfigPlatform ; FNameEntryId FileName ; FNameEntryId SectionName ; FMinimalName ValueName ; const ITargetPlatform* RequestingPlatform = nullptr ; ELoadType LoadType = ELoadType::Uninitialized ;)",
    "insertText": "FConfigAccessData()"
  },
  {
    "label": "FConfigAccessData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConfigAccessData(ELoadType InLoadType, FName InConfigPlatform, FName InFileName, FName InSectionName, FName InValueName, const ITargetPlatform* InRequestingPlatform)"
  },
  {
    "label": "FConfigAccessData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConfigAccessData(ELoadType InLoadType, FNameEntryId InConfigPlatform, FNameEntryId InFileName, FNameEntryId InSectionName, FMinimalName InValueName, const ITargetPlatform* InRequestingPlatform)"
  },
  {
    "label": "FConfigAccessData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConfigAccessData(ELoadType InLoadType, FNameEntryId InConfigPlatform, FNameEntryId InFileName)"
  },
  {
    "label": "GetConfigPlatform()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetConfigPlatform()"
  },
  {
    "label": "GetFileName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetFileName()"
  },
  {
    "label": "GetSectionName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetSectionName()"
  },
  {
    "label": "GetValueName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetValueName()"
  },
  {
    "label": "GetFileOnlyData()",
    "kind": "Method",
    "detail": "Function (FConfigAccessData)",
    "insertText": "GetFileOnlyData()"
  },
  {
    "label": "GetPathOnlyData()",
    "kind": "Method",
    "detail": "Function (FConfigAccessData)",
    "insertText": "GetPathOnlyData()"
  },
  {
    "label": "FullPathToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "FullPathToString()"
  },
  {
    "label": "AppendFullPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendFullPath(FStringBuilderBase& Out)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (FConfigAccessData)",
    "insertText": "Parse(FStringView Text)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FConfigAccessData& Data)"
  },
  {
    "label": "IsSameConfigFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSameConfigFile(const FConfigAccessData& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FConfigAccessData& Other)"
  },
  {
    "label": "EscapeConfigTrackingTokenToString()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "EscapeConfigTrackingTokenToString(FName Token, FStringBuilderBase& Result)"
  },
  {
    "label": "EscapeConfigTrackingTokenAppendString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EscapeConfigTrackingTokenAppendString(FName Token, FStringBuilderBase& Result)"
  },
  {
    "label": "TryTokenizeConfigTrackingString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryTokenizeConfigTrackingString(FStringView Text, TArrayView<FStringBuilderBase*> OutTokens)"
  },
  {
    "label": "TEXTVIEW()",
    "kind": "Method",
    "detail": "Function (FStringView PlatformAgnosticName =)",
    "insertText": "TEXTVIEW(\"<Editor>\")"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "LexToString(UE::ConfigAccessTracking::ELoadType LoadType)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(UE::ConfigAccessTracking::ELoadType& OutLoadType, FStringView Text)"
  },
  {
    "label": "FConfigAccessData()",
    "kind": "Method",
    "detail": "Function (namespace UE::ConfigAccessTracking {)",
    "insertText": "FConfigAccessData(ELoadType InLoadType, FName InConfigPlatform, FName InFileName, FName InSectionName, FName InValueName, const ITargetPlatform* InRequestingPlatform) : FConfigAccessData(InLoadType, InConfigPlatform.GetComparisonIndex(), InFileName.GetComparisonIndex(), InSectionName.GetComparisonIndex(), FMinimalName(InValueName), InRequestingPlatform)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const UE::ConfigAccessTracking::FConfigAccessData& Data)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (uint32 Hash = static_cast<)",
    "insertText": "uint32(Data.LoadType)"
  },
  {
    "label": "HashCombineFast()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombineFast(Hash, Data.ConfigPlatform.ToUnstableInt())"
  },
  {
    "label": "HashCombineFast()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombineFast(Hash, Data.FileName.ToUnstableInt())"
  },
  {
    "label": "HashCombineFast()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombineFast(Hash, Data.SectionName.ToUnstableInt())"
  },
  {
    "label": "HashCombineFast()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombineFast(Hash, GetTypeHash(Data.ValueName))"
  },
  {
    "label": "HashCombineFast()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombineFast(Hash, GetTypeHash(Data.RequestingPlatform))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(ConfigPlatform != Other.ConfigPlatform)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(FileName != Other.FileName)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(SectionName != Other.SectionName)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(ValueName != Other.ValueName)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(RequestingPlatform != Other.RequestingPlatform)"
  }
]