[
  {
    "label": "convert()",
    "kind": "Method",
    "detail": "Function (# ifndef NV_IMAGE_PIXELFORMAT_H # define NV_IMAGE_PIXELFORMAT_H # include<nvimage / nvimage . h> namespace nv { namespace PixelFormat { uint)",
    "insertText": "convert(uint c, uint inbits, uint outbits)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "return(c << (outbits - inbits)) | convert(c, inbits, outbits - inbits)"
  },
  {
    "label": "maskShiftAndSize()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "maskShiftAndSize(uint mask, uint * shift, uint * size)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (* shift = 0 ;* size = 0 ; return ; }* shift = 0 ;)",
    "insertText": "while((mask & 1) == 0)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (mask>> = 1 ; }* size = 0 ;)",
    "insertText": "while((mask & 1) == 1)"
  }
]