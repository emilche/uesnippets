[
  {
    "label": "FArrangedWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedWidget"
  },
  {
    "label": "FLayoutGeometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayoutGeometry"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Layout / Margin . h \" # include \" Layout / PaintGeometry . h \" # include \" Layout / SlateRect . h \" # include \" Layout / SlateRotatedRect . h \" # include \" Layout / SlateRotatedRect . h \" # include \" Math / TransformCalculus . h \" # include \" Math / TransformCalculus2D . h \" # include \" Math / UnrealMathSSE . h \" # include \" Math / Vector2D . h \" # include \" Rendering / SlateLayoutTransform . h \" # include \" Rendering / SlateRenderTransform . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / ObjectMacros . h \" # include \" Types / SlateVector2 . h \" # include \" Geometry . generated . h \" class FArrangedWidget ; class FLayoutGeometry ; class SWidget ; template<T> struct TIsPODType ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: SLATECORE_API FGeometry()"
  },
  {
    "label": "FGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGeometry(const FGeometry& RHS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FGeometry&)",
    "insertText": "operator(const FGeometry& RHS)"
  },
  {
    "label": "FGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGeometry(const UE::Slate::FDeprecateVector2DParameter& OffsetFromParent, const UE::Slate::FDeprecateVector2DParameter& ParentAbsolutePosition, const UE::Slate::FDeprecateVector2DParameter& InLocalSize, float InScale ) : Size(InLocalSize) , Scale(1.0f) , AbsolutePosition(0.0f, 0.0f) , bHasRenderTransform(false)"
  },
  {
    "label": "TransformPoint()",
    "kind": "Method",
    "detail": "Function (FVector2f LayoutOffset =)",
    "insertText": "TransformPoint(InScale, UE::Slate::CastToVector2f(OffsetFromParent))"
  },
  {
    "label": "ParentAccumulatedLayoutTransform()",
    "kind": "Method",
    "detail": "Function (FSlateLayoutTransform)",
    "insertText": "ParentAccumulatedLayoutTransform(InScale, UE::Slate::CastToVector2f(ParentAbsolutePosition))"
  },
  {
    "label": "LocalLayoutTransform()",
    "kind": "Method",
    "detail": "Function (FSlateLayoutTransform)",
    "insertText": "LocalLayoutTransform(LayoutOffset)"
  },
  {
    "label": "Concatenate()",
    "kind": "Method",
    "detail": "Function (FSlateLayoutTransform AccumulatedLayoutTransform =)",
    "insertText": "Concatenate(LocalLayoutTransform, ParentAccumulatedLayoutTransform)"
  },
  {
    "label": "FSlateRenderTransform()",
    "kind": "Method",
    "detail": "Function (AccumulatedRenderTransform = TransformCast<)",
    "insertText": "FSlateRenderTransform(AccumulatedLayoutTransform)"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (const_cast<)",
    "insertText": "FVector2f(AbsolutePosition ) = FVector2f(AccumulatedLayoutTransform.GetTranslation())"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (const_cast<)",
    "insertText": "float(Scale ) = AccumulatedLayoutTransform.GetScale()"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (const_cast<)",
    "insertText": "FVector2f(Position ) = FVector2f(LocalLayoutTransform.GetTranslation())"
  },
  {
    "label": "FGeometry()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "FGeometry(const UE::Slate::FDeprecateVector2DParameter& InLocalSize, const FSlateLayoutTransform& InLocalLayoutTransform, const FSlateRenderTransform& InLocalRenderTransform, const UE::Slate::FDeprecateVector2DParameter& InLocalRenderTransformPivot, const FSlateLayoutTransform& ParentAccumulatedLayoutTransform, const FSlateRenderTransform& ParentAccumulatedRenderTransform) : Size(InLocalSize) , Scale(1.0f) , AbsolutePosition(0.0f, 0.0f) , AccumulatedRenderTransform( Concatenate( Inverse(TransformPoint(FScale2D(UE::Slate::CastToVector2f(InLocalSize)), UE::Slate::CastToVector2f(InLocalRenderTransformPivot))), InLocalRenderTransform, TransformPoint(FScale2D(UE::Slate::CastToVector2f(InLocalSize)), UE::Slate::CastToVector2f(InLocalRenderTransformPivot)), InLocalLayoutTransform, ParentAccumulatedRenderTransform ) ), bHasRenderTransform(true)"
  },
  {
    "label": "Concatenate()",
    "kind": "Method",
    "detail": "Function (FSlateLayoutTransform AccumulatedLayoutTransform =)",
    "insertText": "Concatenate(InLocalLayoutTransform, ParentAccumulatedLayoutTransform)"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (const_cast<)",
    "insertText": "FVector2f(Position ) = FVector2f(InLocalLayoutTransform.GetTranslation())"
  },
  {
    "label": "FGeometry()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FGeometry(const UE::Slate::FDeprecateVector2DParameter& InLocalSize, const FSlateLayoutTransform& InLocalLayoutTransform, const FSlateLayoutTransform& ParentAccumulatedLayoutTransform, const FSlateRenderTransform& ParentAccumulatedRenderTransform, bool bParentHasRenderTransform) : Size(UE::Slate::CastToVector2f(InLocalSize)) , Scale(1.0f) , AbsolutePosition(0.0f, 0.0f) , AccumulatedRenderTransform(Concatenate(InLocalLayoutTransform, ParentAccumulatedRenderTransform)) , bHasRenderTransform(bParentHasRenderTransform)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "operator(const FGeometry& Other)"
  },
  {
    "label": "MakeRoot()",
    "kind": "Method",
    "detail": "Function (} public : FGeometry)",
    "insertText": "MakeRoot(const UE::Slate::FDeprecateVector2DParameter& InLocalSize, const FSlateLayoutTransform& LayoutTransform)"
  },
  {
    "label": "MakeRoot()",
    "kind": "Method",
    "detail": "Function (} FGeometry)",
    "insertText": "MakeRoot(const UE::Slate::FDeprecateVector2DParameter& InLocalSize, const FSlateLayoutTransform& LayoutTransform, const FSlateRenderTransform& RenderTransform)"
  },
  {
    "label": "MakeChild()",
    "kind": "Method",
    "detail": "Function (} FGeometry)",
    "insertText": "MakeChild(const UE::Slate::FDeprecateVector2DParameter& InLocalSize, const FSlateLayoutTransform& LayoutTransform, const FSlateRenderTransform& RenderTransform, const UE::Slate::FDeprecateVector2DParameter& RenderTransformPivot)"
  },
  {
    "label": "MakeChild()",
    "kind": "Method",
    "detail": "Function (} FGeometry)",
    "insertText": "MakeChild(const UE::Slate::FDeprecateVector2DParameter& InLocalSize, const FSlateLayoutTransform& LayoutTransform)"
  },
  {
    "label": "MakeChild()",
    "kind": "Method",
    "detail": "Function (} FGeometry)",
    "insertText": "MakeChild(const FSlateRenderTransform& RenderTransform, const UE::Slate::FDeprecateVector2DParameter& RenderTransformPivot = FVector2f(0.5f, 0.5f))"
  },
  {
    "label": "MakeChild()",
    "kind": "Method",
    "detail": "Function (} FArrangedWidget)",
    "insertText": "MakeChild(const TSharedRef<SWidget>& ChildWidget, const FLayoutGeometry& LayoutGeometry)"
  },
  {
    "label": "MakeChild()",
    "kind": "Method",
    "detail": "Function (FArrangedWidget)",
    "insertText": "MakeChild(const TSharedRef<SWidget>& ChildWidget, const UE::Slate::FDeprecateVector2DParameter& InLocalSize, const FSlateLayoutTransform& LayoutTransform)"
  },
  {
    "label": "MakeChild()",
    "kind": "Method",
    "detail": "Function (} # endif FArrangedWidget)",
    "insertText": "MakeChild(const TSharedRef<SWidget>& ChildWidget, const UE::Slate::FDeprecateVector2DParameter& ChildOffset, const UE::Slate::FDeprecateVector2DParameter& InLocalSize, float ChildScale = 1.0f)"
  },
  {
    "label": "ToPaintGeometry()",
    "kind": "Method",
    "detail": "Function (} FPaintGeometry)",
    "insertText": "ToPaintGeometry(const UE::Slate::FDeprecateVector2DParameter& InLocalSize, const FSlateLayoutTransform& InLayoutTransform)"
  },
  {
    "label": "Concatenate()",
    "kind": "Method",
    "detail": "Function (FSlateLayoutTransform NewAccumulatedLayoutTransform =)",
    "insertText": "Concatenate(InLayoutTransform, GetAccumulatedLayoutTransform())"
  },
  {
    "label": "ToPaintGeometry()",
    "kind": "Method",
    "detail": "Function (} FPaintGeometry)",
    "insertText": "ToPaintGeometry(const UE::Slate::FDeprecateVector2DParameter& InLocalSize, const FSlateLayoutTransform& InLayoutTransform, const FSlateRenderTransform& RenderTransform, const UE::Slate::FDeprecateVector2DParameter& RenderTransformPivot = FVector2f(0.5f, 0.5f))"
  },
  {
    "label": "ToPaintGeometry()",
    "kind": "Method",
    "detail": "Function (} FPaintGeometry)",
    "insertText": "ToPaintGeometry(const FSlateLayoutTransform& LayoutTransform)"
  },
  {
    "label": "ToOffsetPaintGeometry()",
    "kind": "Method",
    "detail": "Function (} # endif FPaintGeometry)",
    "insertText": "ToOffsetPaintGeometry(const UE::Slate::FDeprecateVector2DParameter& LocalOffset)"
  },
  {
    "label": "ToInflatedPaintGeometry()",
    "kind": "Method",
    "detail": "Function (} FPaintGeometry)",
    "insertText": "ToInflatedPaintGeometry(const UE::Slate::FDeprecateVector2DParameter& InflateAmount)"
  },
  {
    "label": "CastToVector2f()",
    "kind": "Method",
    "detail": "Function (FVector2f InflateAmount2f = UE::)",
    "insertText": "CastToVector2f(InflateAmount)"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (FVector2f NewSize =)",
    "insertText": "FVector2f(Size)"
  },
  {
    "label": "IsUnderLocation()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsUnderLocation(const UE::Slate::FDeprecateVector2DParameter& AbsoluteCoordinate)"
  },
  {
    "label": "TransformRect()",
    "kind": "Method",
    "detail": "Function (FSlateRotatedRect Rect =)",
    "insertText": "TransformRect(GetAccumulatedRenderTransform(), FSlateRotatedRect(FSlateRect(FVector2f(0.0f, 0.0f), FVector2f(Size))))"
  },
  {
    "label": "AbsoluteToLocal()",
    "kind": "Method",
    "detail": "Function (} UE::Slate::FDeprecateVector2DResult)",
    "insertText": "AbsoluteToLocal(UE::Slate::FDeprecateVector2DParameter AbsoluteCoordinate)"
  },
  {
    "label": "LocalToAbsolute()",
    "kind": "Method",
    "detail": "Function (} UE::Slate::FDeprecateVector2DResult)",
    "insertText": "LocalToAbsolute(UE::Slate::FDeprecateVector2DParameter LocalCoordinate)"
  },
  {
    "label": "LocalToRoundedLocal()",
    "kind": "Method",
    "detail": "Function (} UE::Slate::FDeprecateVector2DResult)",
    "insertText": "LocalToRoundedLocal(UE::Slate::FDeprecateVector2DParameter LocalCoordinate)"
  },
  {
    "label": "LocalToAbsolute()",
    "kind": "Method",
    "detail": "Function (const FVector2f AbsoluteCoordinate =)",
    "insertText": "LocalToAbsolute(UE::Slate::CastToVector2f(LocalCoordinate))"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (const FVector2f AbsoluteCoordinateRounded =)",
    "insertText": "FVector2f(FMath::RoundToFloat(AbsoluteCoordinate.X), FMath::RoundToFloat(AbsoluteCoordinate.Y))"
  },
  {
    "label": "GetLayoutBoundingRect()",
    "kind": "Method",
    "detail": "Function (} FSlateRect)",
    "insertText": "GetLayoutBoundingRect()"
  },
  {
    "label": "GetLayoutBoundingRect()",
    "kind": "Method",
    "detail": "Function (} FSlateRect)",
    "insertText": "GetLayoutBoundingRect(const FMargin& LocalSpaceExtendBy)"
  },
  {
    "label": "GetLayoutBoundingRect()",
    "kind": "Method",
    "detail": "Function (} FSlateRect)",
    "insertText": "GetLayoutBoundingRect(const FSlateRect& LocalSpaceRect)"
  },
  {
    "label": "GetRenderBoundingRect()",
    "kind": "Method",
    "detail": "Function (} FSlateRect)",
    "insertText": "GetRenderBoundingRect()"
  },
  {
    "label": "GetRenderBoundingRect()",
    "kind": "Method",
    "detail": "Function (} FSlateRect)",
    "insertText": "GetRenderBoundingRect(const FMargin& LocalSpaceExtendBy)"
  },
  {
    "label": "GetRenderBoundingRect()",
    "kind": "Method",
    "detail": "Function (} FSlateRect)",
    "insertText": "GetRenderBoundingRect(const FSlateRect& LocalSpaceRect)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToString()"
  },
  {
    "label": "GetLocalSize()",
    "kind": "Method",
    "detail": "Function (} UE::Slate::FDeprecateVector2DResult)",
    "insertText": "GetLocalSize()"
  },
  {
    "label": "AppendTransform()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AppendTransform(const FSlateLayoutTransform& LayoutTransform)"
  },
  {
    "label": "Concatenate()",
    "kind": "Method",
    "detail": "Function (FSlateLayoutTransform AccumulatedLayoutTransform)",
    "insertText": "Concatenate(GetAccumulatedLayoutTransform(), LayoutTransform)"
  },
  {
    "label": "Concatenate()",
    "kind": "Method",
    "detail": "Function (AccumulatedRenderTransform)",
    "insertText": "Concatenate(AccumulatedRenderTransform, LayoutTransform)"
  },
  {
    "label": "GetAbsolutePosition()",
    "kind": "Method",
    "detail": "Function (} UE::Slate::FDeprecateVector2DResult)",
    "insertText": "GetAbsolutePosition()"
  },
  {
    "label": "GetAbsoluteSize()",
    "kind": "Method",
    "detail": "Function (} UE::Slate::FDeprecateVector2DResult)",
    "insertText": "GetAbsoluteSize()"
  },
  {
    "label": "GetAbsolutePositionAtCoordinates()",
    "kind": "Method",
    "detail": "Function (} UE::Slate::FDeprecateVector2DResult)",
    "insertText": "GetAbsolutePositionAtCoordinates(const UE::Slate::FDeprecateVector2DParameter& NormalCoordinates)"
  },
  {
    "label": "GetLocalPositionAtCoordinates()",
    "kind": "Method",
    "detail": "Function (} UE::Slate::FDeprecateVector2DResult)",
    "insertText": "GetLocalPositionAtCoordinates(const UE::Slate::FDeprecateVector2DParameter& NormalCoordinates)"
  },
  {
    "label": "HasRenderTransform()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasRenderTransform()"
  }
]