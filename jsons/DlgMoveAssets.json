[
  {
    "label": "SDlgMoveAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDlgMoveAsset"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FDlgMoveAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDlgMoveAsset"
  },
  {
    "label": "EResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EResult"
  },
  {
    "label": "FDlgMoveAsset()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class SDlgMoveAsset ; class SWindow ; class FDlgMoveAsset { public :)",
    "insertText": "FDlgMoveAsset(bool bInLegacyOrMapPackage, const FString& InPackage, const FString& InGroup, const FString& InName, const FText& InTitle)"
  },
  {
    "label": "ShowModal()",
    "kind": "Method",
    "detail": "Function (enum EResult { Cancel = 0,OK,OKToAll,} ; EResult)",
    "insertText": "ShowModal()"
  },
  {
    "label": "GetNewPackage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNewPackage()"
  },
  {
    "label": "GetNewGroup()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNewGroup()"
  },
  {
    "label": "GetNewName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNewName()"
  }
]