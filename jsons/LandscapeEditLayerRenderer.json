[
  {
    "label": "ALandscape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscape"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "ULandscapeInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeInfo"
  },
  {
    "label": "ULandscapeLayerInfoObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeLayerInfoObject"
  },
  {
    "label": "ULandscapeScratchRenderTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeScratchRenderTarget"
  },
  {
    "label": "ULandscapeEditLayerRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeEditLayerRenderer"
  },
  {
    "label": "ILandscapeEditLayerRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILandscapeEditLayerRenderer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FWeightmapPaintLayerInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeightmapPaintLayerInfo"
  },
  {
    "label": "FEditLayerTargetTypeState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditLayerTargetTypeState"
  },
  {
    "label": "ILandscapeEditLayerRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILandscapeEditLayerRenderer"
  },
  {
    "label": "FEditLayerRendererState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditLayerRendererState"
  },
  {
    "label": "passed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "passed"
  },
  {
    "label": "FMergeRenderParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeRenderParams"
  },
  {
    "label": "FMergeRenderStep",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeRenderStep"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMergeRenderBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeRenderBatch"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FComponentMergeRenderInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentMergeRenderInfo"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FMergeRenderContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMergeRenderContext"
  },
  {
    "label": "FOnRenderBatchTargetGroupDoneParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnRenderBatchTargetGroupDoneParams"
  },
  {
    "label": "FOOBox2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOOBox2D"
  },
  {
    "label": "FInputWorldArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInputWorldArea"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FOutputWorldArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputWorldArea"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEditLayerRenderItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditLayerRenderItem"
  },
  {
    "label": "IEditLayerRendererProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditLayerRendererProvider"
  },
  {
    "label": "ULandscapeEditLayerRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeEditLayerRenderer"
  },
  {
    "label": "ILandscapeEditLayerRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILandscapeEditLayerRenderer"
  },
  {
    "label": "FRenderParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderParams"
  },
  {
    "label": "ConvertTargetLayerNamesToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertTargetLayerNamesToString(const TArrayView<const FName>& InTargetLayerNames)"
  },
  {
    "label": "SetTargetTypeMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTargetTypeMask(ELandscapeToolTargetTypeFlags InTargetTypeMask)"
  },
  {
    "label": "AddTargetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTargetType(ELandscapeToolTargetType InTargetType)"
  },
  {
    "label": "AddTargetTypeMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTargetTypeMask(ELandscapeToolTargetTypeFlags InTargetTypeMask)"
  },
  {
    "label": "RemoveTargetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTargetType(ELandscapeToolTargetType InTargetType)"
  },
  {
    "label": "RemoveTargetTypeMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTargetTypeMask(ELandscapeToolTargetTypeFlags InTargetTypeMask)"
  },
  {
    "label": "AddWeightmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWeightmap(FName InWeightmapLayerName)"
  },
  {
    "label": "RemoveWeightmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveWeightmap(FName InWeightmapLayerName)"
  },
  {
    "label": "FEditLayerRendererState()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FEditLayerRendererState(ILandscapeEditLayerRenderer* InRenderer, const ULandscapeInfo* InLandscapeInfo)"
  },
  {
    "label": "EnableTargetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableTargetType(ELandscapeToolTargetType InTargetType)"
  },
  {
    "label": "EnableTargetTypeMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableTargetTypeMask(ELandscapeToolTargetTypeFlags InTargetTypeMask)"
  },
  {
    "label": "DisableTargetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableTargetType(ELandscapeToolTargetType InTargetType)"
  },
  {
    "label": "DisableTargetTypeMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableTargetTypeMask(ELandscapeToolTargetTypeFlags InTargetTypeMask)"
  },
  {
    "label": "EnableTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnableTarget(ELandscapeToolTargetType InTargetType, FName InWeightmapLayerName = NAME_None)"
  },
  {
    "label": "DisableTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableTarget(FName InWeightmapLayerName)"
  },
  {
    "label": "CycleBlendRenderTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CycleBlendRenderTargets(ERHIAccess InDesiredWriteAccess = ERHIAccess::None)"
  },
  {
    "label": "IncrementVisualLogOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementVisualLogOffset()"
  },
  {
    "label": "ResetVisualLogOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetVisualLogOffset()"
  },
  {
    "label": "GetVisualLogAlpha()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVisualLogAlpha()"
  },
  {
    "label": "RenderValidityRenderTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderValidityRenderTargets(const FMergeRenderBatch& InRenderBatch)"
  },
  {
    "label": "RenderExpandedRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderExpandedRenderTarget(const FMergeRenderBatch& InRenderBatch)"
  },
  {
    "label": "AllocateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateResources()"
  },
  {
    "label": "FreeResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeResources()"
  },
  {
    "label": "AllocateBatchResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateBatchResources(const FMergeRenderBatch& InRenderBatch)"
  },
  {
    "label": "FreeBatchResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeBatchResources(const FMergeRenderBatch& InRenderBatch)"
  },
  {
    "label": "context()",
    "kind": "Method",
    "detail": "Function (this)",
    "insertText": "context(means we won't ever need more than this size of a render target during the whole merge */\n\tFIntPoint MaxNeededResolution = FIntPoint(ForceInit)"
  },
  {
    "label": "FInputWorldArea()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FInputWorldArea(EType::Infinite)"
  },
  {
    "label": "FInputWorldArea()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FInputWorldArea(EType::SpecificComponent, InComponentKey, InLocalArea)"
  },
  {
    "label": "FOutputWorldArea()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FOutputWorldArea(EType::LocalComponent)"
  },
  {
    "label": "FOutputWorldArea()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FOutputWorldArea(EType::SpecificComponent, InComponentKey)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(ILandscapeEditLayerRenderer::GetRendererStateInfo, )"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(ILandscapeEditLayerRenderer::GetEditLayerRendererDebugName, return TEXT(\"\")"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(ILandscapeEditLayerRenderer::GetRenderItems, return { }; )"
  }
]