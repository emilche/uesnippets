[
  {
    "label": "ABrush",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ABrush"
  },
  {
    "label": "ACameraActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ACameraActor"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "AGameModeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameModeBase"
  },
  {
    "label": "AGameStateBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameStateBase"
  },
  {
    "label": "APhysicsVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APhysicsVolume"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "AServerStreamingLevelsVisibility",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AServerStreamingLevelsVisibility"
  },
  {
    "label": "AWorldDataLayers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldDataLayers"
  },
  {
    "label": "AWorldSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldSettings"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "UDataLayerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerManager"
  },
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FConstPawnIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstPawnIterator"
  },
  {
    "label": "FRegisterComponentContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRegisterComponentContext"
  },
  {
    "label": "FTimerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimerManager"
  },
  {
    "label": "FWorldInGamePerformanceTrackers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldInGamePerformanceTrackers"
  },
  {
    "label": "IInterface_PostProcessVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInterface_PostProcessVolume"
  },
  {
    "label": "UAISystemBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISystemBase"
  },
  {
    "label": "UChaosEventRelay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChaosEventRelay"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "UDemoNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDemoNetDriver"
  },
  {
    "label": "UGameViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameViewportClient"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevelStreaming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreaming"
  },
  {
    "label": "ULocalPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalPlayer"
  },
  {
    "label": "UMaterialParameterCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialParameterCollection"
  },
  {
    "label": "UMaterialParameterCollectionInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialParameterCollectionInstance"
  },
  {
    "label": "UModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UModel"
  },
  {
    "label": "UNavigationSystemBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationSystemBase"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "FPhysScene_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysScene_Chaos"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FUniqueNetIdRepl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniqueNetIdRepl"
  },
  {
    "label": "FEncryptionKeyResponse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEncryptionKeyResponse"
  },
  {
    "label": "FParticlePerfStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticlePerfStats"
  },
  {
    "label": "TOctree2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TOctree2"
  },
  {
    "label": "TActorIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TActorIterator"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "UWorldProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldProxy"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FSeamlessTravelHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSeamlessTravelHandler"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "FStartPhysicsTickFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStartPhysicsTickFunction"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FEndPhysicsTickFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEndPhysicsTickFunction"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "UChildActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChildActorComponent"
  },
  {
    "label": "UPackageMapClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMapClient"
  },
  {
    "label": "UNetActorFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetActorFactory"
  },
  {
    "label": "being",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "being"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "FActorsInitializedParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorsInitializedParams"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "AGameStateBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameStateBase"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "UDemoNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDemoNetDriver"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FWorldCachedViewInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldCachedViewInfo"
  },
  {
    "label": "allows",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "allows"
  },
  {
    "label": "FWorldPartitionEvents",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionEvents"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "ULayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULayer"
  },
  {
    "label": "UThumbnailInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UThumbnailInfo"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "ULineBatchComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULineBatchComponent"
  },
  {
    "label": "ULineBatchComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULineBatchComponent"
  },
  {
    "label": "ULineBatchComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULineBatchComponent"
  },
  {
    "label": "AGameNetworkManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameNetworkManager"
  },
  {
    "label": "UPhysicsCollisionHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsCollisionHandler"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UDemoNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDemoNetDriver"
  },
  {
    "label": "AParticleEventManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AParticleEventManager"
  },
  {
    "label": "UNavigationSystemBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationSystemBase"
  },
  {
    "label": "AGameModeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameModeBase"
  },
  {
    "label": "AGameStateBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameStateBase"
  },
  {
    "label": "UAISystemBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISystemBase"
  },
  {
    "label": "UAvoidanceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAvoidanceManager"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "FHierarchicalLODBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHierarchicalLODBuilder"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UGameInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameInstance"
  },
  {
    "label": "UMaterialParameterCollectionInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialParameterCollectionInstance"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "UPhysicsFieldComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsFieldComponent"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FTimerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimerManager"
  },
  {
    "label": "FLatentActionManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLatentActionManager"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "FFXSystemInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystemInterface"
  },
  {
    "label": "AAudioVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AAudioVolume"
  },
  {
    "label": "UWorldComposition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldComposition"
  },
  {
    "label": "UContentBundleManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleManager"
  },
  {
    "label": "FWorldNotifyStreamingLevelLoading",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldNotifyStreamingLevelLoading"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "have",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "have"
  },
  {
    "label": "UAvoidanceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAvoidanceManager"
  },
  {
    "label": "UAvoidanceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAvoidanceManager"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "ALevelScriptActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALevelScriptActor"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UMaterialParameterCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialParameterCollection"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlayer"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "UChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChannel"
  },
  {
    "label": "FInBunch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInBunch"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "AAudioVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AAudioVolume"
  },
  {
    "label": "FReverbSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReverbSettings"
  },
  {
    "label": "FInteriorSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInteriorSettings"
  },
  {
    "label": "FAudioDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDevice"
  },
  {
    "label": "ULevelStreaming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreaming"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UWorldProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldProxy"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FWorldNotifyStreamingLevelLoading",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldNotifyStreamingLevelLoading"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogSpawn, Warning, All)"
  },
  {
    "label": "CopyWorldData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyWorldData()"
  },
  {
    "label": "SeamlessTravelLoadCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SeamlessTravelLoadCallback(const FName& PackageName, UPackage* LevelPackage, EAsyncLoadingResult::Type Result)"
  },
  {
    "label": "SetHandlerLoadedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHandlerLoadedData(UObject* InLevelPackage, UWorld* InLoadedWorld)"
  },
  {
    "label": "StartLoadingMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartLoadingMap(FString MapPackageToLoadFrom)"
  },
  {
    "label": "StartLoadingDestination()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartLoadingDestination()"
  },
  {
    "label": "StartTravel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartTravel(UWorld* InCurrentWorld, const FURL& InURL)"
  },
  {
    "label": "CancelTravel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelTravel()"
  },
  {
    "label": "SetPauseAtMidpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPauseAtMidpoint(bool bNowPaused)"
  },
  {
    "label": "MakeUniqueActorName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "MakeUniqueActorName(ULevel* Level, const UClass* Class, FName BaseName, bool bGloballyUnique)"
  },
  {
    "label": "IsGloballyUniqueName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGloballyUniqueName(FName Name)"
  },
  {
    "label": "GetBaseName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetBaseName(FName Name)"
  },
  {
    "label": "PollAsynchronousCompletion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollAsynchronousCompletion()"
  },
  {
    "label": "WaitAsynchronousCompletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitAsynchronousCompletion()"
  },
  {
    "label": "GetAsynchronousResults()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAsynchronousResults(TArray<uint8>& OutData)"
  },
  {
    "label": "AddLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLevel(ULevel* const Level)"
  },
  {
    "label": "RemoveLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLevel(ULevel* const Level)"
  },
  {
    "label": "SetPersistentLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPersistentLevel(ULevel* const Level)"
  },
  {
    "label": "Add_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add_Internal(ULevelStreaming* StreamingLevel, bool bGuaranteedNotInContainer)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "BeginConsideration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginConsideration()"
  },
  {
    "label": "EndConsideration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndConsideration()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Remove(ULevelStreaming* StreamingLevel)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAt(int32 Index)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Reevaluate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reevaluate(ULevelStreaming* StreamingLevel)"
  },
  {
    "label": "BroadcastWorldPartitionInitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastWorldPartitionInitialized(UWorld* InWorld, UWorldPartition* InWorldPartition)"
  },
  {
    "label": "BroadcastWorldPartitionUninitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastWorldPartitionUninitialized(UWorld* InWorld, UWorldPartition* InWorldPartition)"
  },
  {
    "label": "AddStreamingLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStreamingLevel(ULevelStreaming* StreamingLevelToAdd)"
  },
  {
    "label": "AddStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStreamingLevels(TArrayView<ULevelStreaming* const> StreamingLevelsToAdd)"
  },
  {
    "label": "AddUniqueStreamingLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUniqueStreamingLevel(ULevelStreaming* StreamingLevelToAdd)"
  },
  {
    "label": "AddUniqueStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUniqueStreamingLevels(TArrayView<ULevelStreaming* const> StreamingLevelsToAdd)"
  },
  {
    "label": "SetStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStreamingLevels(TArray<ULevelStreaming*>&& StreamingLevels)"
  },
  {
    "label": "SetStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStreamingLevels(TArrayView<ULevelStreaming* const> StreamingLevels)"
  },
  {
    "label": "RemoveStreamingLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveStreamingLevel(ULevelStreaming* StreamingLevelToRemove)"
  },
  {
    "label": "RemoveStreamingLevelAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveStreamingLevelAt(int32 IndexToRemove)"
  },
  {
    "label": "RemoveStreamingLevels()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveStreamingLevels(TArrayView<ULevelStreaming* const> StreamingLevelsToRemove)"
  },
  {
    "label": "ClearStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearStreamingLevels()"
  },
  {
    "label": "UpdateStreamingLevelShouldBeConsidered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStreamingLevelShouldBeConsidered(ULevelStreaming* StreamingLevelToConsider)"
  },
  {
    "label": "UpdateStreamingLevelPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStreamingLevelPriority(ULevelStreaming* StreamingLevel)"
  },
  {
    "label": "PopulateStreamingLevelsToConsider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateStreamingLevelsToConsider()"
  },
  {
    "label": "SetBegunPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBegunPlay(bool bHasBegunPlay)"
  },
  {
    "label": "ConditionallyCreateDefaultLevelCollections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionallyCreateDefaultLevelCollections()"
  },
  {
    "label": "HandleTimelineScrubbed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTimelineScrubbed()"
  },
  {
    "label": "SetNavigationSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNavigationSystem(UNavigationSystemBase* InNavigationSystem)"
  },
  {
    "label": "SetCurrentLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCurrentLevel( class ULevel* InLevel )"
  },
  {
    "label": "CreateFXSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFXSystem()"
  },
  {
    "label": "InitializeSubsystems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeSubsystems()"
  },
  {
    "label": "PostInitializeSubsystems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitializeSubsystems()"
  },
  {
    "label": "ChangeFeatureLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeFeatureLevel(ERHIFeatureLevel::Type InFeatureLevel, bool bShowSlowProgressDialog = true, bool bForceUpdate = false)"
  },
  {
    "label": "ShaderPlatformChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShaderPlatformChanged()"
  },
  {
    "label": "RecreateScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecreateScene(ERHIFeatureLevel::Type InFeatureLevel, bool bBroadcastChange = true)"
  },
  {
    "label": "PurgeScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PurgeScene()"
  },
  {
    "label": "RestoreScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreScene()"
  },
  {
    "label": "OnAddExtraObjectsToDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddExtraObjectsToDelete(const TArray<UObject*>& InObjectsToDelete, TSet<UObject*>& OutSecondaryObjects)"
  },
  {
    "label": "ResetAsyncTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAsyncTrace()"
  },
  {
    "label": "WaitForAllAsyncTraceTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForAllAsyncTraceTasks()"
  },
  {
    "label": "FinishAsyncTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishAsyncTrace()"
  },
  {
    "label": "RepairSingletonActorOfClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepairSingletonActorOfClass(TSubclassOf<AActor> ActorClass)"
  },
  {
    "label": "RepairWorldSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepairWorldSettings()"
  },
  {
    "label": "RepairSingletonActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepairSingletonActors()"
  },
  {
    "label": "RepairStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepairStreamingLevels()"
  },
  {
    "label": "RepairChaosActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepairChaosActors()"
  },
  {
    "label": "RepairDefaultBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepairDefaultBrush()"
  },
  {
    "label": "BroadcastTickDispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastTickDispatch(float DeltaTime)"
  },
  {
    "label": "BroadcastPostTickDispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPostTickDispatch()"
  },
  {
    "label": "BroadcastPreTickFlush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPreTickFlush(float DeltaTime)"
  },
  {
    "label": "BroadcastTickFlush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastTickFlush(float DeltaTime)"
  },
  {
    "label": "BroadcastPostTickFlush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPostTickFlush(float DeltaTime)"
  },
  {
    "label": "BroadcastSelectedLevelsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastSelectedLevelsChanged()"
  },
  {
    "label": "SetShouldForceUnloadStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldForceUnloadStreamingLevels(bool bInShouldForceUnloadStreamingLevels)"
  },
  {
    "label": "SetShouldForceVisibleStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldForceVisibleStreamingLevels(bool bInShouldForceVisibleStreamingLevels)"
  },
  {
    "label": "InsertPostProcessVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertPostProcessVolume(IInterface_PostProcessVolume* InVolume)"
  },
  {
    "label": "RemovePostProcessVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePostProcessVolume(IInterface_PostProcessVolume* InVolume)"
  },
  {
    "label": "AddPostProcessingSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPostProcessingSettings(FVector ViewLocation, FSceneView* SceneView)"
  },
  {
    "label": "AsyncLineTraceByChannel()",
    "kind": "Method",
    "detail": "Function (FTraceHandle)",
    "insertText": "AsyncLineTraceByChannel(EAsyncTraceType InTraceType, const FVector& Start,const FVector& End, ECollisionChannel TraceChannel, const FCollisionQueryParams& Params = FCollisionQueryParams::DefaultQueryParam, const FCollisionResponseParams& ResponseParam = FCollisionResponseParams::DefaultResponseParam, const FTraceDelegate* InDelegate = nullptr, uint32 UserData = 0 )"
  },
  {
    "label": "AsyncLineTraceByObjectType()",
    "kind": "Method",
    "detail": "Function (FTraceHandle)",
    "insertText": "AsyncLineTraceByObjectType(EAsyncTraceType InTraceType, const FVector& Start,const FVector& End, const FCollisionObjectQueryParams& ObjectQueryParams, const FCollisionQueryParams& Params = FCollisionQueryParams::DefaultQueryParam, const FTraceDelegate* InDelegate = nullptr, uint32 UserData = 0 )"
  },
  {
    "label": "AsyncLineTraceByProfile()",
    "kind": "Method",
    "detail": "Function (FTraceHandle)",
    "insertText": "AsyncLineTraceByProfile(EAsyncTraceType InTraceType, const FVector& Start, const FVector& End, FName ProfileName, const FCollisionQueryParams& Params = FCollisionQueryParams::DefaultQueryParam, const FTraceDelegate* InDelegate = nullptr, uint32 UserData = 0)"
  },
  {
    "label": "AsyncSweepByChannel()",
    "kind": "Method",
    "detail": "Function (FTraceHandle)",
    "insertText": "AsyncSweepByChannel(EAsyncTraceType InTraceType, const FVector& Start, const FVector& End, const FQuat& Rot, ECollisionChannel TraceChannel, const FCollisionShape& CollisionShape, const FCollisionQueryParams& Params = FCollisionQueryParams::DefaultQueryParam, const FCollisionResponseParams& ResponseParam = FCollisionResponseParams::DefaultResponseParam, const FTraceDelegate* InDelegate = nullptr, uint32 UserData = 0)"
  },
  {
    "label": "AsyncSweepByObjectType()",
    "kind": "Method",
    "detail": "Function (FTraceHandle)",
    "insertText": "AsyncSweepByObjectType(EAsyncTraceType InTraceType, const FVector& Start, const FVector& End, const FQuat& Rot, const FCollisionObjectQueryParams& ObjectQueryParams, const FCollisionShape& CollisionShape, const FCollisionQueryParams& Params = FCollisionQueryParams::DefaultQueryParam, const FTraceDelegate* InDelegate = nullptr, uint32 UserData = 0)"
  },
  {
    "label": "AsyncSweepByProfile()",
    "kind": "Method",
    "detail": "Function (FTraceHandle)",
    "insertText": "AsyncSweepByProfile(EAsyncTraceType InTraceType, const FVector& Start, const FVector& End, const FQuat& Rot, FName ProfileName, const FCollisionShape& CollisionShape, const FCollisionQueryParams& Params = FCollisionQueryParams::DefaultQueryParam, const FTraceDelegate* InDelegate = nullptr, uint32 UserData = 0)"
  },
  {
    "label": "AsyncOverlapByChannel()",
    "kind": "Method",
    "detail": "Function (FTraceHandle)",
    "insertText": "AsyncOverlapByChannel(const FVector& Pos, const FQuat& Rot, ECollisionChannel TraceChannel, const FCollisionShape& CollisionShape, const FCollisionQueryParams& Params = FCollisionQueryParams::DefaultQueryParam, const FCollisionResponseParams& ResponseParam = FCollisionResponseParams::DefaultResponseParam, const FOverlapDelegate* InDelegate = nullptr, uint32 UserData = 0)"
  },
  {
    "label": "AsyncOverlapByObjectType()",
    "kind": "Method",
    "detail": "Function (FTraceHandle)",
    "insertText": "AsyncOverlapByObjectType(const FVector& Pos, const FQuat& Rot, const FCollisionObjectQueryParams& ObjectQueryParams, const FCollisionShape& CollisionShape, const FCollisionQueryParams& Params = FCollisionQueryParams::DefaultQueryParam, const FOverlapDelegate* InDelegate = nullptr, uint32 UserData = 0)"
  },
  {
    "label": "AsyncOverlapByProfile()",
    "kind": "Method",
    "detail": "Function (FTraceHandle)",
    "insertText": "AsyncOverlapByProfile(const FVector& Pos, const FQuat& Rot, FName ProfileName, const FCollisionShape& CollisionShape, const FCollisionQueryParams& Params = FCollisionQueryParams::DefaultQueryParam, const FOverlapDelegate* InDelegate = nullptr, uint32 UserData = 0)"
  },
  {
    "label": "QueryTraceData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QueryTraceData(const FTraceHandle& Handle, FTraceDatum& OutData)"
  },
  {
    "label": "QueryOverlapData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QueryOverlapData(const FTraceHandle& Handle, FOverlapDatum& OutData)"
  },
  {
    "label": "IsTraceHandleValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTraceHandleValid(const FTraceHandle& Handle, bool bOverlapTrace)"
  },
  {
    "label": "GetCollisionProfileChannelAndResponseParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCollisionProfileChannelAndResponseParams(FName ProfileName, ECollisionChannel& CollisionChannel, FCollisionResponseParams& ResponseParams)"
  },
  {
    "label": "RegisterAutoActivateCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAutoActivateCamera(ACameraActor* CameraActor, int32 PlayerIndex)"
  },
  {
    "label": "CreatePhysicsScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePhysicsScene(const AWorldSettings* Settings = nullptr)"
  },
  {
    "label": "SetPhysicsScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPhysicsScene(FPhysScene* InScene)"
  },
  {
    "label": "AddPhysicsVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPhysicsVolume(APhysicsVolume* Volume)"
  },
  {
    "label": "RemovePhysicsVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePhysicsVolume(APhysicsVolume* Volume)"
  },
  {
    "label": "SetAllowDeferredPhysicsStateCreation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowDeferredPhysicsStateCreation(bool bAllow)"
  },
  {
    "label": "SetWorldDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldDataLayers(AWorldDataLayers* NewWorldDataLayers)"
  },
  {
    "label": "AddController()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddController( AController* Controller )"
  },
  {
    "label": "RemoveController()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveController( AController* Controller )"
  },
  {
    "label": "AddNetworkActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNetworkActor( AActor* Actor )"
  },
  {
    "label": "NotifyPostRegisterAllActorComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPostRegisterAllActorComponents(AActor* Actor)"
  },
  {
    "label": "NotifyPreUnregisterAllActorComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPreUnregisterAllActorComponents(AActor* Actor)"
  },
  {
    "label": "AddMovieSceneSequenceTickHandler()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "AddMovieSceneSequenceTickHandler(const FOnMovieSceneSequenceTick::FDelegate& InHandler)"
  },
  {
    "label": "RemoveMovieSceneSequenceTickHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMovieSceneSequenceTickHandler(FDelegateHandle InHandle)"
  },
  {
    "label": "DeclareConstructClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeclareConstructClasses(TArray<FTopLevelAssetPath>& OutConstructClasses, const UClass* SpecificSubclass)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "ClearWorldComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearWorldComponents()"
  },
  {
    "label": "UpdateWorldComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWorldComponents(bool bRerunConstructionScripts, bool bCurrentLevelOnly, FRegisterComponentContext* Context = nullptr)"
  },
  {
    "label": "UpdateCullDistanceVolumes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateCullDistanceVolumes(AActor* ActorToUpdate = nullptr, UPrimitiveComponent* ComponentToUpdate = nullptr)"
  },
  {
    "label": "CleanupWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupWorld(bool bSessionEnded = true, bool bCleanupResources = true, UWorld* NewWorld = nullptr)"
  },
  {
    "label": "InvalidateModelGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateModelGeometry( ULevel* InLevel )"
  },
  {
    "label": "InvalidateModelSurface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateModelSurface(bool bCurrentLevelOnly)"
  },
  {
    "label": "CommitModelSurfaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitModelSurfaces()"
  },
  {
    "label": "InvalidateAllSkyCaptures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateAllSkyCaptures()"
  },
  {
    "label": "UpdateAllSkyCaptures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllSkyCaptures()"
  },
  {
    "label": "PropagateLightingScenarioChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateLightingScenarioChange()"
  },
  {
    "label": "UpdateLevelStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLevelStreaming()"
  },
  {
    "label": "ReleasePhysicsScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleasePhysicsScene()"
  },
  {
    "label": "FlushLevelStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushLevelStreaming(EFlushLevelStreamingType FlushType = EFlushLevelStreamingType::Full)"
  },
  {
    "label": "TriggerStreamingDataRebuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerStreamingDataRebuild()"
  },
  {
    "label": "ConditionallyBuildStreamingData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionallyBuildStreamingData()"
  },
  {
    "label": "AsyncLoadAlwaysLoadedLevelsForSeamlessTravel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncLoadAlwaysLoadedLevelsForSeamlessTravel()"
  },
  {
    "label": "SetupParameterCollectionInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupParameterCollectionInstances()"
  },
  {
    "label": "AddParameterCollectionInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParameterCollectionInstance(class UMaterialParameterCollection* Collection, bool bUpdateScene)"
  },
  {
    "label": "UpdateParameterCollectionInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateParameterCollectionInstances(bool bUpdateInstanceUniformBuffers, bool bRecreateUniformBuffer)"
  },
  {
    "label": "OnPostGC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostGC()"
  },
  {
    "label": "HasAsyncLevelRequests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAsyncLevelRequests()"
  },
  {
    "label": "FlushAsyncLevelRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAsyncLevelRequests()"
  },
  {
    "label": "ReInitWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReInitWorld()"
  },
  {
    "label": "DestroyWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyWorld( bool bInformEngineOfWorld, UWorld* NewWorld = nullptr )"
  },
  {
    "label": "MarkObjectsPendingKill()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkObjectsPendingKill()"
  },
  {
    "label": "CleanupActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupActors()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick( ELevelTick TickType, float DeltaSeconds )"
  },
  {
    "label": "SetupPhysicsTickFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupPhysicsTickFunctions(float DeltaSeconds)"
  },
  {
    "label": "RunTickGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunTickGroup(ETickingGroup Group, bool bBlockTillComplete)"
  },
  {
    "label": "MarkActorComponentForNeededEndOfFrameUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkActorComponentForNeededEndOfFrameUpdate(UActorComponent* Component, bool bForceGameThread)"
  },
  {
    "label": "ClearActorComponentEndOfFrameUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearActorComponentEndOfFrameUpdate(UActorComponent* Component)"
  },
  {
    "label": "SetMaterialParameterCollectionInstanceNeedsUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialParameterCollectionInstanceNeedsUpdate()"
  },
  {
    "label": "SendAllEndOfFrameUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendAllEndOfFrameUpdates()"
  },
  {
    "label": "FlushDeferredParameterCollectionInstanceUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushDeferredParameterCollectionInstanceUpdates()"
  },
  {
    "label": "TickNetClient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickNetClient( float DeltaSeconds )"
  },
  {
    "label": "ProcessLevelStreamingVolumes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessLevelStreamingVolumes(FVector* OverrideViewLocation=NULL)"
  },
  {
    "label": "BlockTillLevelStreamingCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockTillLevelStreamingCompleted()"
  },
  {
    "label": "EnsureCollisionTreeIsBuilt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureCollisionTreeIsBuilt()"
  },
  {
    "label": "SelectLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectLevel( ULevel* InLevel )"
  },
  {
    "label": "DeSelectLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeSelectLevel( ULevel* InLevel )"
  },
  {
    "label": "SetSelectedLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedLevels( const TArray<class ULevel*>& InLevels )"
  },
  {
    "label": "ShrinkLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShrinkLevel()"
  },
  {
    "label": "AddOnFeatureLevelChangedHandler()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "AddOnFeatureLevelChangedHandler(const FOnFeatureLevelChanged::FDelegate& InHandler)"
  },
  {
    "label": "RemoveOnFeatureLevelChangedHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveOnFeatureLevelChangedHandler(FDelegateHandle InHandle)"
  },
  {
    "label": "AddLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddLevel( ULevel* InLevel )"
  },
  {
    "label": "RemoveLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveLevel( ULevel* InLevel )"
  },
  {
    "label": "FindOrAddCollectionByType_Index()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddCollectionByType_Index(const ELevelCollectionType InType)"
  },
  {
    "label": "SetActiveLevelCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveLevelCollection(int32 LevelCollectionIndex)"
  },
  {
    "label": "DuplicateRequestedLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateRequestedLevels(const FName MapName)"
  },
  {
    "label": "Exec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Exec( UWorld* InWorld, const TCHAR* Cmd, FOutputDevice& Ar=*GLog )"
  },
  {
    "label": "CleanupWorldInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupWorldInternal(bool bSessionEnded, bool bCleanupResources, bool bWorldChanged)"
  },
  {
    "label": "HandleTraceTagCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleTraceTagCommand( const TCHAR* Cmd, FOutputDevice& Ar )"
  },
  {
    "label": "HandleFlushPersistentDebugLinesCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleFlushPersistentDebugLinesCommand( const TCHAR* Cmd, FOutputDevice& Ar )"
  },
  {
    "label": "HandleLogActorCountsCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleLogActorCountsCommand( const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld )"
  },
  {
    "label": "HandleDemoRecordCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDemoRecordCommand( const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld )"
  },
  {
    "label": "HandleDemoPlayCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDemoPlayCommand( const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld )"
  },
  {
    "label": "HandleDemoStopCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDemoStopCommand( const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld )"
  },
  {
    "label": "HandleDemoScrubCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDemoScrubCommand(const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld)"
  },
  {
    "label": "HandleDemoPauseCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDemoPauseCommand(const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld)"
  },
  {
    "label": "HandleDemoSpeedCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDemoSpeedCommand(const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld)"
  },
  {
    "label": "HandleDemoCheckpointCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDemoCheckpointCommand(const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld)"
  },
  {
    "label": "DestroyDemoNetDriver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDemoNetDriver()"
  },
  {
    "label": "ClearDemoNetDriver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDemoNetDriver()"
  },
  {
    "label": "ClearNetDriver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearNetDriver(UNetDriver* Driver)"
  },
  {
    "label": "Listen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Listen( FURL& InURL )"
  },
  {
    "label": "EditorDestroyActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EditorDestroyActor( AActor* Actor, bool bShouldModifyLevel )"
  },
  {
    "label": "DestroyActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DestroyActor( AActor* Actor, bool bNetForce=false, bool bShouldModifyLevel=true )"
  },
  {
    "label": "SetGameState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGameState(AGameStateBase* NewGameState)"
  },
  {
    "label": "CopyGameState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyGameState(AGameModeBase* FromGameMode, AGameStateBase* FromGameState)"
  },
  {
    "label": "FindTeleportSpot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindTeleportSpot( const AActor* TestActor, FVector& PlaceLocation, FRotator PlaceRotation )"
  },
  {
    "label": "EncroachingBlockingGeometry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EncroachingBlockingGeometry( const AActor* TestActor, FVector TestLocation, FRotator TestRotation, FVector* ProposedAdjustment = NULL )"
  },
  {
    "label": "StartPhysicsSim()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartPhysicsSim()"
  },
  {
    "label": "FinishPhysicsSim()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishPhysicsSim()"
  },
  {
    "label": "SetGameMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetGameMode(const FURL& InURL)"
  },
  {
    "label": "InitializeActorsForPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeActorsForPlay(const FURL& InURL, bool bResetTime = true, FRegisterComponentContext* Context = nullptr)"
  },
  {
    "label": "BeginTearingDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTearingDown()"
  },
  {
    "label": "BeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPlay()"
  },
  {
    "label": "EndPlay()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndPlay(EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "DestroySwappedPC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DestroySwappedPC(UNetConnection* Connection)"
  },
  {
    "label": "PreLoginCheckError()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PreLoginCheckError(UNetConnection* Connection, const FString& ErrorMsg)"
  },
  {
    "label": "PreLoginComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreLoginComplete(const FString& ErrorMsg, TWeakObjectPtr<UNetConnection> WeakConnection)"
  },
  {
    "label": "PreLoginCompleteSplit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreLoginCompleteSplit(const FString& ErrorMsg, TWeakObjectPtr<UNetConnection> WeakConnection, FUniqueNetIdRepl SplitRequestUniqueIdRepl, FString SplitRequestURL)"
  },
  {
    "label": "WelcomePlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WelcomePlayer(UNetConnection* Connection)"
  },
  {
    "label": "InternalUpdateStreamingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalUpdateStreamingState()"
  },
  {
    "label": "TransferBlueprintDebugReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransferBlueprintDebugReferences(UWorld* NewWorld)"
  },
  {
    "label": "NotifyOfBlueprintDebuggingAssociation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyOfBlueprintDebuggingAssociation(class UBlueprint* Blueprint, UObject* DebugObject)"
  },
  {
    "label": "BroadcastLevelsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastLevelsChanged()"
  },
  {
    "label": "SetAudioDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAudioDevice(const FAudioDeviceHandle& InHandle)"
  },
  {
    "label": "LoadSecondaryLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSecondaryLevels(bool bForce = false, TSet<FName>* PackageNamesToSkip = nullptr)"
  },
  {
    "label": "RefreshStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshStreamingLevels()"
  },
  {
    "label": "RefreshStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshStreamingLevels( const TArray<class ULevelStreaming*>& InLevelsToRefresh )"
  },
  {
    "label": "IssueEditorLoadWarnings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IssueEditorLoadWarnings()"
  },
  {
    "label": "ServerTravel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ServerTravel(const FString& InURL, bool bAbsolute = false, bool bShouldSkipGameNotify = false)"
  },
  {
    "label": "SeamlessTravel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SeamlessTravel(const FString& InURL, bool bAbsolute = false)"
  },
  {
    "label": "SetSeamlessTravelMidpointPause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSeamlessTravelMidpointPause(bool bNowPaused)"
  },
  {
    "label": "PrepareMapChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareMapChange(const TArray<FName>& LevelNames)"
  },
  {
    "label": "CancelPendingMapChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelPendingMapChange()"
  },
  {
    "label": "CommitMapChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitMapChange()"
  },
  {
    "label": "SetMapNeedsLightingFullyRebuilt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMapNeedsLightingFullyRebuilt(int32 InNumLightingUnbuiltObjects, int32 InNumUnbuiltReflectionCaptures)"
  },
  {
    "label": "clients()",
    "kind": "Method",
    "detail": "Function (UWorld)",
    "insertText": "clients(for instance, preview world in the Blueprint Editor\n \t * to not worry about replacing features from GameInstance. Alternatively we could mandate that they implement a game instance\n\t * for their scene.\n\t */\n\tFLatentActionManager& GetLatentActionManager()"
  },
  {
    "label": "RequestNewWorldOrigin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestNewWorldOrigin(FIntVector InNewOriginLocation)"
  },
  {
    "label": "SetNewWorldOrigin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetNewWorldOrigin(FIntVector InNewOriginLocation)"
  },
  {
    "label": "NavigateTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NavigateTo(FIntVector InLocation)"
  },
  {
    "label": "UpdateConstraintActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateConstraintActors()"
  },
  {
    "label": "GetLightMapsAndShadowMaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLightMapsAndShadowMaps(ULevel* Level, TArray<UTexture2D*>& OutLightMapsAndShadowMaps, bool bForceLazyLoad = true)"
  },
  {
    "label": "RenameToPIEWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameToPIEWorld(int32 PIEInstanceID)"
  },
  {
    "label": "ConvertToPIEPackageName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertToPIEPackageName(const FString& PackageName, int32 PIEInstanceID)"
  },
  {
    "label": "StripPIEPrefixFromPackageName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "StripPIEPrefixFromPackageName(const FString& PackageName, const FString& Prefix)"
  },
  {
    "label": "BuildPIEPackagePrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "BuildPIEPackagePrefix(int32 PIEInstanceID)"
  },
  {
    "label": "RemovePIEPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "RemovePIEPrefix(const FString &Source, int32* OutPIEInstanceID = nullptr)"
  },
  {
    "label": "IsWorldOrWorldExternalPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWorldOrWorldExternalPackage(UPackage* Package)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FWorldInitializationEvent, UWorld* /*World*/, const UWorld::InitializationValues /*IVS*/)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FiveParams()",
    "kind": "Method",
    "detail": "Function (WITH_EDITOR)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FiveParams(FWorldPreRenameEvent, UWorld* /*World*/, const TCHAR* /*InName*/, UObject* /*NewOuter*/, ERenameFlags /*Flags*/, bool& /*bShouldFailRename*/)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (events)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnLevelChanged, ULevel*, UWorld*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (etc)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FWorldGetAssetTagsWithContext, const UWorld*, FAssetRegistryTagsContext)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (started)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnWorldPIEStarted, UGameInstance*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (ready)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnWorldPIEReady, UGameInstance*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (created)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnWorldPIEMapCreated, UGameInstance*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (created)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnWorldPIEMapReady, UGameInstance*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (ended)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnWorldPIEEnded, UGameInstance*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (SavePackage)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FWorldCollectSaveReferencesEvent, UWorld*, FArchive&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (level)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FLevelOffsetEvent, ULevel*,  UWorld*, const FVector&, bool)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (level)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FLevelTransformEvent, ULevel*, const FTransform&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (refreshing)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FRefreshLevelScriptActionsEvent, UWorld*)"
  },
  {
    "label": "InternalGetNetMode()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "InternalGetNetMode()"
  },
  {
    "label": "IsRunningDedicatedServer()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsRunningDedicatedServer()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "ToString(EWorldType::Type Type)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "ToString(ENetMode NetMode)"
  }
]