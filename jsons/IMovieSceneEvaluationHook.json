[
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEvaluationHookParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEvaluationHookParams"
  },
  {
    "label": "UMovieSceneEvaluationHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEvaluationHook"
  },
  {
    "label": "IMovieSceneEvaluationHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieSceneEvaluationHook"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / Interface . h \" # include \" MovieSceneSequenceID . h \" # include \" Misc / Guid . h \" # include \" Evaluation / MovieScenePlayback . h \" # include \" IMovieSceneEvaluationHook . generated . h \" class IMovieScenePlayer ; class UMovieSceneEntitySystemLinker ; namespace UE { namespace MovieScene { struct FSharedPlaybackState ; enum class EEvaluationHookEvent { Begin,Update,End,Trigger,} ; struct FEvaluationHookParams { FGuid ObjectBindingID ; FMovieSceneContext Context ; FMovieSceneSequenceID SequenceID = MovieSceneSequenceID::Root ; int32 TriggerIndex = INDEX_NONE ; } ; } })",
    "insertText": "UINTERFACE(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class IMovieSceneEvaluationHook { public : using FSharedPlaybackState = UE::MovieScene::FSharedPlaybackState ;)",
    "insertText": "GENERATED_BODY() MOVIESCENE_API virtual void Begin(TSharedRef<FSharedPlaybackState> SharedPlaybackState, const UE::MovieScene::FEvaluationHookParams& Params)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(TSharedRef<FSharedPlaybackState> SharedPlaybackState, const UE::MovieScene::FEvaluationHookParams& Params)"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "End(TSharedRef<FSharedPlaybackState> SharedPlaybackState, const UE::MovieScene::FEvaluationHookParams& Params)"
  },
  {
    "label": "Trigger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Trigger(TSharedRef<FSharedPlaybackState> SharedPlaybackState, const UE::MovieScene::FEvaluationHookParams& Params)"
  }
]