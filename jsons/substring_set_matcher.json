[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "fields",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "fields"
  },
  {
    "label": "AhoCorasickEdge",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AhoCorasickEdge"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "alignas"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "SubstringSetMatcher()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SubstringSetMatcher()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Build(const std::vector<MatcherStringPattern>& patterns)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Build(std::vector<const MatcherStringPattern*> patterns)"
  },
  {
    "label": "AhoCorasickNode()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "AhoCorasickNode()"
  },
  {
    "label": "GetEdgeNoInline()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetEdgeNoInline(label)"
  },
  {
    "label": "SetEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEdge(uint32_t label, NodeID node)"
  },
  {
    "label": "SetFailure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFailure(NodeID failure)"
  },
  {
    "label": "GetEdge()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetEdge(kMatchIDLabel)"
  },
  {
    "label": "GetEdge()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetEdge(kOutputLinkLabel)"
  },
  {
    "label": "BuildAhoCorasickTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildAhoCorasickTree(const SubstringPatternVector& patterns)"
  },
  {
    "label": "InsertPatternIntoAhoCorasickTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertPatternIntoAhoCorasickTree(const MatcherStringPattern* pattern)"
  },
  {
    "label": "CreateFailureAndOutputEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFailureAndOutputEdges()"
  }
]