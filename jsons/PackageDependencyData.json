[
  {
    "label": "FPackageDependencyData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageDependencyData"
  },
  {
    "label": "FPackageDependency",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageDependency"
  },
  {
    "label": "FSearchableNamesDependency",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSearchableNamesDependency"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / AssetData . h \" # include \" AssetRegistry / IAssetRegistry . h \" # include \" Containers / ArrayView . h \" # include \" Containers / BitArray . h \" # include \" UObject / Linker . h \" class FPackageDependencyData { public : struct FPackageDependency { FName PackageName ; UE::AssetRegistry::EDependencyProperty Property ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FPackageDependency& Dependency)"
  },
  {
    "label": "uint8()",
    "kind": "Method",
    "detail": "Function (Ar<<Dependency . PackageName ; uint8 PropertyAsInteger = static_cast<)",
    "insertText": "uint8(Dependency.Property)"
  },
  {
    "label": "EDependencyProperty()",
    "kind": "Method",
    "detail": "Function (Ar<<PropertyAsInteger ; Dependency . Property = static_cast<UE::)",
    "insertText": "EDependencyProperty(PropertyAsInteger)"
  },
  {
    "label": "SerializeForCache()",
    "kind": "Method",
    "detail": "Function (Ar<<Dependency . PackageName<<Dependency . ObjectName<<Dependency . ValueNames ; return Ar ; } } ; FName PackageName ; FAssetPackageData PackageData ; TArray<FPackageDependency> PackageDependencies ; TArray<FSearchableNamesDependency> SearchableNameDependencies ; bool bHasPackageData = false ; bool bHasDependencyData = false ; void)",
    "insertText": "SerializeForCache(FArchive& Ar)"
  },
  {
    "label": "SerializeForCache()",
    "kind": "Method",
    "detail": "Function (Ar<<PackageName ; PackageData .)",
    "insertText": "SerializeForCache(Ar)"
  },
  {
    "label": "LoadDependenciesFromPackageHeader()",
    "kind": "Method",
    "detail": "Function (Ar<<PackageDependencies ; Ar<<SearchableNameDependencies ; } void)",
    "insertText": "LoadDependenciesFromPackageHeader(FName PackageName, TConstArrayView<FObjectImport> ImportMap, TArray<FName>& SoftPackageReferenceList, TMap<FPackageIndex, TArray<FName>>& SearchableNames, TBitArray<>& ImportUsedInGame, TBitArray<>& SoftPackageUsedInGame, TArray<TPair<FName, UE::AssetRegistry::EExtraDependencyFlags>>& ExtraPackageDependencies)"
  },
  {
    "label": "GetAllocatedSize()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetAllocatedSize()"
  }
]