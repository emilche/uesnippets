[
  {
    "label": "STATICMESHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STATICMESHEDITOR_API"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "UMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshComponent"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AStaticMeshActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AStaticMeshActor"
  },
  {
    "label": "AStaticMeshActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AStaticMeshActor"
  },
  {
    "label": "AStaticMeshActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AStaticMeshActor"
  },
  {
    "label": "AStaticMeshActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AStaticMeshActor"
  },
  {
    "label": "AStaticMeshActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AStaticMeshActor"
  },
  {
    "label": "UStaticMeshEditorSubsystem()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UStaticMeshEditorSubsystem()"
  },
  {
    "label": "SetLodsWithNotification()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "SetLodsWithNotification(UStaticMesh* StaticMesh, const FStaticMeshReductionOptions& ReductionOptions, bool bApplyChanges)"
  },
  {
    "label": "SetLodsWithNotification()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SetLodsWithNotification(StaticMesh, ReductionOptions, true)"
  },
  {
    "label": "GetLodReductionSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLodReductionSettings(const UStaticMesh* StaticMesh, const int32 LodIndex, FMeshReductionSettings& OutReductionOptions)"
  },
  {
    "label": "SetLodReductionSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLodReductionSettings(UStaticMesh* StaticMesh, const int32 LodIndex, const FMeshReductionSettings& ReductionOptions)"
  },
  {
    "label": "GetLodBuildSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLodBuildSettings(const UStaticMesh* StaticMesh, const int32 LodIndex, FMeshBuildSettings& OutBuildOptions)"
  },
  {
    "label": "SetLodBuildSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLodBuildSettings(UStaticMesh* StaticMesh, const int32 LodIndex, const FMeshBuildSettings& BuildOptions)"
  },
  {
    "label": "GetLODGroup()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetLODGroup(UStaticMesh* StaticMesh)"
  },
  {
    "label": "SetLODGroup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLODGroup(UStaticMesh* StaticMesh, FName LODGroup, bool bRebuildImmediately=true)"
  },
  {
    "label": "ImportLOD()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ImportLOD(UStaticMesh* BaseStaticMesh, const int32 LODIndex, const FString& SourceFilename)"
  },
  {
    "label": "ReimportAllCustomLODs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReimportAllCustomLODs(UStaticMesh* StaticMesh)"
  },
  {
    "label": "SetLodFromStaticMesh()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "SetLodFromStaticMesh(UStaticMesh* DestinationStaticMesh, int32 DestinationLodIndex, UStaticMesh* SourceStaticMesh, int32 SourceLodIndex, bool bReuseExistingMaterialSlots)"
  },
  {
    "label": "GetLodCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLodCount(UStaticMesh* StaticMesh)"
  },
  {
    "label": "RemoveLods()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveLods(UStaticMesh* StaticMesh)"
  },
  {
    "label": "GetLodScreenSizes()",
    "kind": "Method",
    "detail": "Function (TArray<float>)",
    "insertText": "GetLodScreenSizes(UStaticMesh* StaticMesh)"
  },
  {
    "label": "SetLodScreenSizes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLodScreenSizes(UStaticMesh* StaticMesh, const TArray<float>& ScreenSizes)"
  },
  {
    "label": "GetNaniteSettings()",
    "kind": "Method",
    "detail": "Function (FMeshNaniteSettings)",
    "insertText": "GetNaniteSettings(UStaticMesh* StaticMesh)"
  },
  {
    "label": "SetNaniteSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNaniteSettings(UStaticMesh* StaticMesh, FMeshNaniteSettings NaniteSettings, bool bApplyChanges=true)"
  },
  {
    "label": "AddSimpleCollisionsWithNotification()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddSimpleCollisionsWithNotification(UStaticMesh* StaticMesh, const EScriptCollisionShapeType ShapeType, bool bApplyChanges)"
  },
  {
    "label": "AddSimpleCollisionsWithNotification()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AddSimpleCollisionsWithNotification(StaticMesh, ShapeType, true)"
  },
  {
    "label": "GetSimpleCollisionCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSimpleCollisionCount(UStaticMesh* StaticMesh)"
  },
  {
    "label": "GetCollisionComplexity()",
    "kind": "Method",
    "detail": "Function (TEnumAsByte<ECollisionTraceFlag>)",
    "insertText": "GetCollisionComplexity(UStaticMesh* StaticMesh)"
  },
  {
    "label": "GetConvexCollisionCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetConvexCollisionCount(UStaticMesh* StaticMesh)"
  },
  {
    "label": "SetConvexDecompositionCollisionsWithNotification()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetConvexDecompositionCollisionsWithNotification(UStaticMesh* StaticMesh, int32 HullCount, int32 MaxHullVerts, int32 HullPrecision, bool bApplyChanges)"
  },
  {
    "label": "BulkSetConvexDecompositionCollisionsWithNotification()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BulkSetConvexDecompositionCollisionsWithNotification(const TArray<UStaticMesh*>& StaticMeshes, int32 HullCount, int32 MaxHullVerts, int32 HullPrecision, bool bApplyChanges)"
  },
  {
    "label": "SetConvexDecompositionCollisionsWithNotification()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SetConvexDecompositionCollisionsWithNotification(StaticMesh, HullCount, MaxHullVerts, HullPrecision, true)"
  },
  {
    "label": "BulkSetConvexDecompositionCollisionsWithNotification()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "BulkSetConvexDecompositionCollisionsWithNotification(StaticMeshes, HullCount, MaxHullVerts, HullPrecision, true)"
  },
  {
    "label": "RemoveCollisionsWithNotification()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveCollisionsWithNotification(UStaticMesh* StaticMesh, bool bApplyChanges)"
  },
  {
    "label": "RemoveCollisionsWithNotification()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "RemoveCollisionsWithNotification(StaticMesh, true)"
  },
  {
    "label": "EnableSectionCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableSectionCollision(UStaticMesh* StaticMesh, bool bCollisionEnabled, int32 LODIndex, int32 SectionIndex)"
  },
  {
    "label": "IsSectionCollisionEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSectionCollisionEnabled(UStaticMesh* StaticMesh, int32 LODIndex, int32 SectionIndex)"
  },
  {
    "label": "EnableSectionCastShadow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableSectionCastShadow(UStaticMesh* StaticMesh, bool bCastShadow, int32 LODIndex, int32 SectionIndex)"
  },
  {
    "label": "SetLODMaterialSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLODMaterialSlot(UStaticMesh* StaticMesh, int32 MaterialSlotIndex, int32 LODIndex, int32 SectionIndex)"
  },
  {
    "label": "GetLODMaterialSlot()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLODMaterialSlot(UStaticMesh* StaticMesh, int32 LODIndex, int32 SectionIndex)"
  },
  {
    "label": "HasVertexColors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasVertexColors(UStaticMesh* StaticMesh)"
  },
  {
    "label": "HasInstanceVertexColors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasInstanceVertexColors(UStaticMeshComponent* StaticMeshComponent)"
  },
  {
    "label": "SetGenerateLightmapUVs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetGenerateLightmapUVs(UStaticMesh* StaticMesh, bool bGenerateLightmapUVs)"
  },
  {
    "label": "GetNumberVerts()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberVerts(UStaticMesh* StaticMesh, int32 LODIndex)"
  },
  {
    "label": "GetNumberMaterials()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberMaterials(UStaticMesh* StaticMesh)"
  },
  {
    "label": "SetAllowCPUAccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowCPUAccess(UStaticMesh* StaticMesh, bool bAllowCPUAccess)"
  },
  {
    "label": "GetNumUVChannels()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumUVChannels(UStaticMesh* StaticMesh, int32 LODIndex)"
  },
  {
    "label": "AddUVChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddUVChannel(UStaticMesh* StaticMesh, int32 LODIndex)"
  },
  {
    "label": "InsertUVChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InsertUVChannel(UStaticMesh* StaticMesh, int32 LODIndex, int32 UVChannelIndex)"
  },
  {
    "label": "RemoveUVChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveUVChannel(UStaticMesh* StaticMesh, int32 LODIndex, int32 UVChannelIndex)"
  },
  {
    "label": "GeneratePlanarUVChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GeneratePlanarUVChannel(UStaticMesh* StaticMesh, int32 LODIndex, int32 UVChannelIndex, const FVector& Position, const FRotator& Orientation, const FVector2D& Tiling)"
  },
  {
    "label": "GenerateCylindricalUVChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateCylindricalUVChannel(UStaticMesh* StaticMesh, int32 LODIndex, int32 UVChannelIndex, const FVector& Position, const FRotator& Orientation, const FVector2D& Tiling)"
  },
  {
    "label": "GenerateBoxUVChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateBoxUVChannel(UStaticMesh* StaticMesh, int32 LODIndex, int32 UVChannelIndex, const FVector& Position, const FRotator& Orientation, const FVector& Size)"
  },
  {
    "label": "ReplaceMeshComponentsMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceMeshComponentsMaterials(const TArray<class UMeshComponent*>& MeshComponents, class UMaterialInterface* MaterialToBeReplaced, class UMaterialInterface* NewMaterial)"
  },
  {
    "label": "ReplaceMeshComponentsMaterialsOnActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceMeshComponentsMaterialsOnActors(const TArray<class AActor*>& Actors, class UMaterialInterface* MaterialToBeReplaced, class UMaterialInterface* NewMaterial)"
  },
  {
    "label": "ReplaceMeshComponentsMeshes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceMeshComponentsMeshes(const TArray<class UStaticMeshComponent*>& MeshComponents, class UStaticMesh* MeshToBeReplaced, class UStaticMesh* NewMesh)"
  },
  {
    "label": "ReplaceMeshComponentsMeshesOnActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceMeshComponentsMeshesOnActors(const TArray<class AActor*>& Actors, class UStaticMesh* MeshToBeReplaced, class UStaticMesh* NewMesh)"
  },
  {
    "label": "MergeStaticMeshActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MergeStaticMeshActors(const TArray<class AStaticMeshActor*>& ActorsToMerge, const FMergeStaticMeshActorsOptions& MergeOptions, class AStaticMeshActor*& OutMergedActor)"
  },
  {
    "label": "CreateProxyMeshActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateProxyMeshActor(const TArray<class AStaticMeshActor*>& ActorsToMerge, const FCreateProxyMeshActorOptions& MergeOptions, class AStaticMeshActor*& OutMergedActor)"
  }
]