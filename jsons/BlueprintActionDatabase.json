[
  {
    "label": "FBlueprintActionDatabaseRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionDatabaseRegistrar"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UBlueprintNodeSpawner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintNodeSpawner"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnum"
  },
  {
    "label": "UField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UField"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UScriptStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScriptStruct"
  },
  {
    "label": "FEdGraphPinType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphPinType"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FComponentTypeEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentTypeEntry"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Misc / NamePermissionList . h \" # include \" Stats / Stats . h \" # include \" Stats / Stats2 . h \" # include \" Tickable . h \" # include \" TickableEditorObject . h \" # include \" UObject / GCObject . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectKey . h \" # include \" UObject / SoftObjectPath . h \" # include \" UObject / TopLevelAssetPath . h \" class FBlueprintActionDatabaseRegistrar ; class FReferenceCollector ; class UBlueprint ; class UBlueprintNodeSpawner ; class UClass ; class UEnum ; class UField ; class UFunction ; class UObject ; class UScriptStruct ; struct FEdGraphPinType ; class FBlueprintActionDatabase : public FGCObject,public FTickableEditorObject { public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnDatabaseEntryUpdated, UObject*)"
  },
  {
    "label": "FBlueprintActionDatabase()",
    "kind": "Method",
    "detail": "Function (typedef TMap<FObjectKey,int32> FPrimingQueue ; typedef TArray<TObjectPtr<UBlueprintNodeSpawner>> FActionList ; typedef TMap<FObjectKey,FActionList> FActionRegistry ; typedef TMap<FSoftObjectPath,FActionList> FUnloadedActionRegistry ; public : ~)",
    "insertText": "FBlueprintActionDatabase()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FBlueprintActionDatabase&)",
    "insertText": "Get()"
  },
  {
    "label": "TryGet()",
    "kind": "Method",
    "detail": "Function (FBlueprintActionDatabase*)",
    "insertText": "TryGet()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "GetTickableTickType()",
    "kind": "Method",
    "detail": "Function (ETickableTickType)",
    "insertText": "GetTickableTickType()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "GetAllActions()",
    "kind": "Method",
    "detail": "Function (FActionRegistry const&)",
    "insertText": "GetAllActions()"
  },
  {
    "label": "RefreshAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshAll()"
  },
  {
    "label": "RefreshWorlds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshWorlds()"
  },
  {
    "label": "DeferredRemoveEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferredRemoveEntry(FObjectKey const& InKey)"
  },
  {
    "label": "RefreshClassActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshClassActions(UClass* const Class)"
  },
  {
    "label": "RefreshAssetActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshAssetActions(UObject* const AssetObject)"
  },
  {
    "label": "RefreshComponentActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshComponentActions()"
  },
  {
    "label": "ClearAssetActions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClearAssetActions(UObject* const AssetObject)"
  },
  {
    "label": "ClearAssetActions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClearAssetActions(const FObjectKey& AssetObjectKey)"
  },
  {
    "label": "ClearUnloadedAssetActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearUnloadedAssetActions(const FSoftObjectPath& ObjectPath)"
  },
  {
    "label": "ClearUnloadedAssetActions()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "ClearUnloadedAssetActions(FSoftObjectPath(ObjectPath))"
  },
  {
    "label": "MoveUnloadedAssetActions()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } void)",
    "insertText": "MoveUnloadedAssetActions(const FSoftObjectPath& SourceObjectPath, const FSoftObjectPath& TargetObjectPath)"
  },
  {
    "label": "MoveUnloadedAssetActions()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "MoveUnloadedAssetActions(FSoftObjectPath(SourceObjectPath), FSoftObjectPath(TargetObjectPath))"
  },
  {
    "label": "OnEntryUpdated()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } FOnDatabaseEntryUpdated&)",
    "insertText": "OnEntryUpdated()"
  },
  {
    "label": "IsClassAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassAllowed(const FTopLevelAssetPath& InClassPath, EPermissionsContext InContext)"
  },
  {
    "label": "HasClassFiltering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasClassFiltering()"
  },
  {
    "label": "IsFieldAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFieldAllowed(UField const* InField, EPermissionsContext InContext)"
  },
  {
    "label": "IsFunctionAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFunctionAllowed(UFunction const* InFunction, EPermissionsContext InContext)"
  },
  {
    "label": "IsEnumAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnumAllowed(UEnum const* InEnum, EPermissionsContext InContext)"
  },
  {
    "label": "IsEnumAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnumAllowed(const FTopLevelAssetPath& InEnumPath, EPermissionsContext InContext)"
  },
  {
    "label": "IsStructAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStructAllowed(UScriptStruct const* InStruct, EPermissionsContext InContext)"
  },
  {
    "label": "IsStructAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStructAllowed(const FTopLevelAssetPath& InStructPath, EPermissionsContext InContext)"
  },
  {
    "label": "IsPinTypeAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPinTypeAllowed(const FEdGraphPinType& InPinType, const FTopLevelAssetPath& InUnloadedAssetPath = FTopLevelAssetPath())"
  },
  {
    "label": "RegisterAllNodeActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAllNodeActions(FBlueprintActionDatabaseRegistrar& Registrar)"
  },
  {
    "label": "OnBlueprintChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlueprintChanged(UBlueprint*)"
  },
  {
    "label": "PreRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreRefresh(bool bRefreshAll)"
  }
]