[
  {
    "label": "ITargetDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetDevice"
  },
  {
    "label": "ITargetDeviceService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetDeviceService"
  },
  {
    "label": "AddTargetDevice()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / UnrealString . h \" # include \" Interfaces / ITargetDevice . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class ITargetDevice ; class ITargetDeviceService ; typedef TSharedPtr<class ITargetDeviceService,ESPMode::ThreadSafe> ITargetDeviceServicePtr ; typedef TSharedRef<class ITargetDeviceService,ESPMode::ThreadSafe> ITargetDeviceServiceRef ; class ITargetDeviceService { public : void)",
    "insertText": "AddTargetDevice(TSharedPtr<ITargetDevice, ESPMode::ThreadSafe> InDevice)"
  },
  {
    "label": "CanStart()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanStart(FName InFlavor = NAME_None)"
  },
  {
    "label": "GetClaimHost()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetClaimHost()"
  },
  {
    "label": "GetClaimUser()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetClaimUser()"
  },
  {
    "label": "GetDevice()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITargetDevice,ESPMode::ThreadSafe>)",
    "insertText": "GetDevice(FName InFlavor = NAME_None)"
  },
  {
    "label": "GetDeviceName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDeviceName()"
  },
  {
    "label": "GetDevicePlatformName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetDevicePlatformName()"
  },
  {
    "label": "GetDevicePlatformDisplayName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDevicePlatformDisplayName()"
  },
  {
    "label": "IsRunning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRunning()"
  },
  {
    "label": "IsShared()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShared()"
  },
  {
    "label": "NumTargetDevices()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumTargetDevices()"
  },
  {
    "label": "RemoveTargetDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTargetDevice(TSharedPtr<ITargetDevice, ESPMode::ThreadSafe> InDevice)"
  },
  {
    "label": "SetShared()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShared(bool InShared)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Start()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "ITargetDeviceService()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "ITargetDeviceService()"
  }
]