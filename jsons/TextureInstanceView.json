[
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UStreamableRenderAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStreamableRenderAsset"
  },
  {
    "label": "FStreamingViewInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamingViewInfo"
  },
  {
    "label": "FRenderAssetStreamingSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderAssetStreamingSettings"
  },
  {
    "label": "FRenderAssetInstanceView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderAssetInstanceView"
  },
  {
    "label": "FBounds4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBounds4"
  },
  {
    "label": "FElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FElement"
  },
  {
    "label": "FCompiledElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompiledElement"
  },
  {
    "label": "FRenderAssetDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderAssetDesc"
  },
  {
    "label": "FRenderAssetLinkConstIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderAssetLinkConstIterator"
  },
  {
    "label": "FRenderAssetLinkIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderAssetLinkIterator"
  },
  {
    "label": "FRenderAssetIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderAssetIterator"
  },
  {
    "label": "FStreamingViewInfoExtra",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamingViewInfoExtra"
  },
  {
    "label": "FRenderAssetInstanceAsyncView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderAssetInstanceAsyncView"
  },
  {
    "label": "FBoundsViewInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoundsViewInfo"
  },
  {
    "label": "MAX_TEXTURE_SIZE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Templates / RefCounting . h \" # include \" Containers / ChunkedArray . h \" # include \" Streaming / StreamingTexture . h \" class UPrimitiveComponent ; class UStreamableRenderAsset ; struct FStreamingViewInfo ; struct FRenderAssetStreamingSettings ; # define)",
    "insertText": "MAX_TEXTURE_SIZE(float(1 << (MAX_TEXTURE_MIP_COUNT - 1)))"
  },
  {
    "label": "FBounds4()",
    "kind": "Method",
    "detail": "Function (public : struct FBounds4 {)",
    "insertText": "FBounds4()"
  },
  {
    "label": "MS_ALIGN()",
    "kind": "Method",
    "detail": "Function (FVector4 OriginX ; FVector4 OriginY ; FVector4 OriginZ ; FVector4 RangeOriginX ; FVector4 RangeOriginY ; FVector4 RangeOriginZ ; FVector4f ExtentX ; FVector4f ExtentY ; FVector4f ExtentZ ; FVector4f RadiusOrComponentScale ;)",
    "insertText": "MS_ALIGN(16)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (FVector4f MinDistanceSq ; FVector4f MinRangeSq ; FVector4f MaxRangeSq ; FVector4f LastRenderTime ; void)",
    "insertText": "Set(int32 Index, const FBoxSphereBounds& Bounds, uint32 InPackedRelativeBox, float LastRenderTime, const FVector& RangeOrigin, float MinDistanceSq, float MinRangeSq, float MaxRangeSq)"
  },
  {
    "label": "UnpackBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnpackBounds(int32 Index, const UPrimitiveComponent* Component)"
  },
  {
    "label": "FullUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FullUpdate(int32 Index, const FVector& NewOrigin, const FVector& NewBoxExtent, float NewSphereRadius, float LastRenderTime)"
  },
  {
    "label": "FElement()",
    "kind": "Method",
    "detail": "Function (} ; struct FElement {)",
    "insertText": "FElement() : Component(nullptr) , RenderAsset(nullptr) , BoundsIndex(INDEX_NONE) , TexelFactor(0) , PrevRenderAssetLink(INDEX_NONE) , NextRenderAssetLink(INDEX_NONE) , NextComponentLink(INDEX_NONE)"
  },
  {
    "label": "FCompiledElement()",
    "kind": "Method",
    "detail": "Function (} const UPrimitiveComponent* Component ; const UStreamableRenderAsset* RenderAsset ; int32 BoundsIndex ; float TexelFactor ; bool bForceLoad ; int32 PrevRenderAssetLink ; int32 NextRenderAssetLink ; int32 NextComponentLink ; } ; struct FCompiledElement {)",
    "insertText": "FCompiledElement()"
  },
  {
    "label": "FCompiledElement()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCompiledElement(const FElement& InElement) : BoundsIndex(InElement.BoundsIndex), TexelFactor(InElement.TexelFactor), bForceLoad(InElement.bForceLoad)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} int32 BoundsIndex ; float TexelFactor ; bool bForceLoad ; bool)",
    "insertText": "operator(const FCompiledElement& Rhs)"
  },
  {
    "label": "FRenderAssetLinkConstIterator()",
    "kind": "Method",
    "detail": "Function (} int32 HeadLink ; const int32 LODGroup ; } ; class FRenderAssetLinkConstIterator { public :)",
    "insertText": "FRenderAssetLinkConstIterator(const FRenderAssetInstanceView& InState, const UStreamableRenderAsset* InAsset)"
  },
  {
    "label": "OutputToLog()",
    "kind": "Method",
    "detail": "Function (CurrElementIndex = State . Elements [ CurrElementIndex ] . NextRenderAssetLink ; } void)",
    "insertText": "OutputToLog(float MaxNormalizedSize, float MaxNormalizedSize_VisibleOnly, const TCHAR* Prefix)"
  },
  {
    "label": "ClampTexelFactor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClampTexelFactor(float CMin, float CMax)"
  },
  {
    "label": "FRenderAssetInstanceView()",
    "kind": "Method",
    "detail": "Function (float& TexelFactor = const_cast<)",
    "insertText": "FRenderAssetInstanceView(State)"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (TexelFactor = FMath::Clamp<)",
    "insertText": "float(TexelFactor, CMin, CMax)"
  },
  {
    "label": "FRenderAssetIterator()",
    "kind": "Method",
    "detail": "Function (} } ; class FRenderAssetIterator { public :)",
    "insertText": "FRenderAssetIterator(const FRenderAssetInstanceView& InState) : MapIt(InState.RenderAssetMap)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "operator()"
  },
  {
    "label": "GetLODGroup()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetLODGroup()"
  },
  {
    "label": "FRenderAssetInstanceView()",
    "kind": "Method",
    "detail": "Function (} private : TMap<const UStreamableRenderAsset*,FRenderAssetDesc>::TConstIterator MapIt ; } ;)",
    "insertText": "FRenderAssetInstanceView() : MaxTexelFactor(FLT_MAX)"
  },
  {
    "label": "NumBounds4()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "NumBounds4()"
  },
  {
    "label": "GetBounds4()",
    "kind": "Method",
    "detail": "Function (} const FBounds4&)",
    "insertText": "GetBounds4(int32 Bounds4Index)"
  },
  {
    "label": "GetElementIterator()",
    "kind": "Method",
    "detail": "Function (} FRenderAssetLinkConstIterator)",
    "insertText": "GetElementIterator(const UStreamableRenderAsset* InTexture)"
  },
  {
    "label": "GetRenderAssetIterator()",
    "kind": "Method",
    "detail": "Function (} FRenderAssetIterator)",
    "insertText": "GetRenderAssetIterator()"
  },
  {
    "label": "HasCompiledElements()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasCompiledElements()"
  },
  {
    "label": "GetCompiledElements()",
    "kind": "Method",
    "detail": "Function (} const TArray<FCompiledElement>*)",
    "insertText": "GetCompiledElements(const UStreamableRenderAsset* Asset)"
  },
  {
    "label": "HasComponentWithForcedLOD()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasComponentWithForcedLOD(const UStreamableRenderAsset* Asset)"
  },
  {
    "label": "HasAnyComponentWithForcedLOD()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasAnyComponentWithForcedLOD()"
  },
  {
    "label": "CreateView()",
    "kind": "Method",
    "detail": "Function (} TRefCountPtr<const FRenderAssetInstanceView>)",
    "insertText": "CreateView(const FRenderAssetInstanceView* RefView)"
  },
  {
    "label": "CreateViewWithUninitializedBounds()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FRenderAssetInstanceView>)",
    "insertText": "CreateViewWithUninitializedBounds(const FRenderAssetInstanceView* RefView)"
  },
  {
    "label": "SwapData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapData(FRenderAssetInstanceView* Lfs, FRenderAssetInstanceView* Rhs)"
  },
  {
    "label": "GetMaxTexelFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaxTexelFactor()"
  },
  {
    "label": "GetDistanceAndRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDistanceAndRange(const UPrimitiveComponent* Component, const FBoxSphereBounds& RenderAssetInstanceBounds, float& MinDistanceSq, float& MinRangeSq, float& MaxRangeSq)"
  },
  {
    "label": "FRenderAssetInstanceAsyncView()",
    "kind": "Method",
    "detail": "Function (protected : TArray<FBounds4> Bounds4 ; TChunkedArray<FElement> Elements ; TMap<const UStreamableRenderAsset*,FRenderAssetDesc> RenderAssetMap ; TMap<const UStreamableRenderAsset*,TArray<FCompiledElement>> CompiledRenderAssetMap ; TMap<const UStreamableRenderAsset*,int32> CompiledNumForcedLODCompMap ; float MaxTexelFactor ; } ; struct FStreamingViewInfoExtra { float ScreenSizeFloat ; float ExtraBoostForVisiblePrimitiveFloat ; } ; typedef TArray<FStreamingViewInfoExtra,TInlineAllocator<4>> FStreamingViewInfoExtraArray ; class FRenderAssetInstanceAsyncView { public :)",
    "insertText": "FRenderAssetInstanceAsyncView() : MaxLevelRenderAssetScreenSize(UE_MAX_FLT)"
  },
  {
    "label": "FRenderAssetInstanceAsyncView()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRenderAssetInstanceAsyncView(const FRenderAssetInstanceView* InView) : View(InView), MaxLevelRenderAssetScreenSize(UE_MAX_FLT)"
  },
  {
    "label": "UpdateBoundSizes_Async()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateBoundSizes_Async(const TArray<FStreamingViewInfo>& ViewInfos, const FStreamingViewInfoExtraArray& ViewInfoExtras, float LastUpdateTime, const FRenderAssetStreamingSettings& Settings)"
  },
  {
    "label": "GetRenderAssetScreenSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRenderAssetScreenSize(EStreamableRenderAssetType AssetType, const UStreamableRenderAsset* InAsset, float& MaxSize, float& MaxSize_VisibleOnly, int32& MaxNumForcedLODs, const float MaxAssetSize, const TCHAR* LogPrefix)"
  },
  {
    "label": "HasComponentWithForcedLOD()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasComponentWithForcedLOD(const UStreamableRenderAsset* InAsset)"
  },
  {
    "label": "OnTaskDone()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnTaskDone()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (BoundsViewInfo .)",
    "insertText": "Empty()"
  },
  {
    "label": "GetMaxLevelRenderAssetScreenSize()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetMaxLevelRenderAssetScreenSize()"
  }
]