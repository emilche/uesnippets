[
  {
    "label": "ApmDataDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ApmDataDumper"
  },
  {
    "label": "into",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "into"
  },
  {
    "label": "MatchedFilterLagAggregator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatchedFilterLagAggregator"
  },
  {
    "label": "PreEchoLagAggregator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PreEchoLagAggregator"
  },
  {
    "label": "HighestPeakAggregator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HighestPeakAggregator"
  },
  {
    "label": "MatchedFilterLagAggregator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "MatchedFilterLagAggregator(ApmDataDumper* data_dumper,\n                             size_t max_filter_lag,\n                             const EchoCanceller3Config::Delay& delay_config)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(bool hard_reset)"
  },
  {
    "label": "Aggregate()",
    "kind": "Method",
    "detail": "Function (absl::optional<DelayEstimate>)",
    "insertText": "Aggregate(\n      const absl::optional<const MatchedFilter::LagEstimate>& lag_estimate)"
  },
  {
    "label": "PreEchoLagAggregator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "PreEchoLagAggregator(size_t max_filter_lag, size_t down_sampling_factor)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Aggregate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Aggregate(int pre_echo_lag)"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dump(ApmDataDumper* const data_dumper)"
  },
  {
    "label": "HighestPeakAggregator()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "HighestPeakAggregator(size_t max_filter_lag)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Aggregate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Aggregate(int lag)"
  }
]