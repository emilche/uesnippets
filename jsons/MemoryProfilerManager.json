[
  {
    "label": "FMemorySharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemorySharedState"
  },
  {
    "label": "SMemoryProfilerWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMemoryProfilerWindow"
  },
  {
    "label": "FMemoryProfilerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryProfilerManager"
  },
  {
    "label": "FMemoryProfilerActionManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryProfilerActionManager"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Ticker . h \" # include \" Framework / Commands / UICommandList . h \" # include \" Logging / LogMacros . h \" # include \" Insights / InsightsManager . h \" # include \" Insights / IUnrealInsightsModule . h \" # include \" Insights / MemoryProfiler / MemoryProfilerCommands . h \" namespace UE::Insights::MemoryProfiler { class FMemorySharedState ; class SMemoryProfilerWindow ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMemoryProfiler, Log, All)"
  },
  {
    "label": "FMemoryProfilerManager()",
    "kind": "Method",
    "detail": "Function (class FMemoryProfilerManager : public TSharedFromThis<FMemoryProfilerManager>,public IInsightsComponent { class FMemoryProfilerActionManager ; public :)",
    "insertText": "FMemoryProfilerManager(TSharedRef<FUICommandList> InCommandList)"
  },
  {
    "label": "FMemoryProfilerManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMemoryProfilerManager()"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMemoryProfilerManager>)",
    "insertText": "CreateInstance()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMemoryProfilerManager>)",
    "insertText": "Get()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(IUnrealInsightsModule& InsightsModule)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "RegisterMajorTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMajorTabs(IUnrealInsightsModule& InsightsModule)"
  },
  {
    "label": "UnregisterMajorTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterMajorTabs()"
  },
  {
    "label": "OnWindowClosedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowClosedEvent()"
  },
  {
    "label": "GetCommandList()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<FUICommandList>)",
    "insertText": "GetCommandList()"
  },
  {
    "label": "GetCommands()",
    "kind": "Method",
    "detail": "Function (const FMemoryProfilerCommands&)",
    "insertText": "GetCommands()"
  },
  {
    "label": "GetActionManager()",
    "kind": "Method",
    "detail": "Function (FMemoryProfilerActionManager&)",
    "insertText": "GetActionManager()"
  },
  {
    "label": "GetProfilerWindow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SMemoryProfilerWindow>)",
    "insertText": "GetProfilerWindow()"
  },
  {
    "label": "GetSharedState()",
    "kind": "Method",
    "detail": "Function (} FMemorySharedState*)",
    "insertText": "GetSharedState()"
  },
  {
    "label": "IsTimingViewVisible()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsTimingViewVisible()"
  },
  {
    "label": "ShowHideTimingView()",
    "kind": "Method",
    "detail": "Function (bIsTimingViewVisible = bIsVisible ; } void)",
    "insertText": "ShowHideTimingView(const bool bIsVisible)"
  },
  {
    "label": "IsMemInvestigationViewVisible()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsMemInvestigationViewVisible()"
  },
  {
    "label": "ShowHideMemInvestigationView()",
    "kind": "Method",
    "detail": "Function (bIsMemInvestigationViewVisible = bIsVisible ; } void)",
    "insertText": "ShowHideMemInvestigationView(const bool bIsVisible)"
  },
  {
    "label": "IsMemTagTreeViewVisible()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsMemTagTreeViewVisible()"
  },
  {
    "label": "ShowHideMemTagTreeView()",
    "kind": "Method",
    "detail": "Function (bIsMemTagTreeViewVisible = bIsVisible ; } void)",
    "insertText": "ShowHideMemTagTreeView(const bool bIsVisible)"
  },
  {
    "label": "IsModulesViewVisible()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsModulesViewVisible()"
  },
  {
    "label": "ShowHideModulesView()",
    "kind": "Method",
    "detail": "Function (bIsModulesViewVisible = bIsVisible ; } void)",
    "insertText": "ShowHideModulesView(const bool bIsVisible)"
  },
  {
    "label": "GetLogListingName()",
    "kind": "Method",
    "detail": "Function (const FName&)",
    "insertText": "GetLogListingName()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "SpawnTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "CanSpawnTab()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSpawnTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "AssignProfilerWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignProfilerWindow(const TSharedRef<SMemoryProfilerWindow>& InProfilerWindow)"
  },
  {
    "label": "RemoveProfilerWindow()",
    "kind": "Method",
    "detail": "Function (ProfilerWindowWeakPtr = InProfilerWindow ; } void)",
    "insertText": "RemoveProfilerWindow()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (ProfilerWindowWeakPtr .)",
    "insertText": "Reset()"
  }
]