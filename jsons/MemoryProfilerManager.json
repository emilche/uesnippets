[
  {
    "label": "FMemorySharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemorySharedState"
  },
  {
    "label": "SMemoryProfilerWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMemoryProfilerWindow"
  },
  {
    "label": "manages",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "manages"
  },
  {
    "label": "FMemoryProfilerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryProfilerManager"
  },
  {
    "label": "FMemoryProfilerActionManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryProfilerActionManager"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMemoryProfilerManager>)",
    "insertText": "CreateInstance()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMemoryProfilerManager>)",
    "insertText": "Get()"
  },
  {
    "label": "ShowHideTimingView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowHideTimingView(const bool bIsVisible)"
  },
  {
    "label": "ShowHideMemInvestigationView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowHideMemInvestigationView(const bool bIsVisible)"
  },
  {
    "label": "ShowHideMemTagTreeView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowHideMemTagTreeView(const bool bIsVisible)"
  },
  {
    "label": "ShowHideModulesView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowHideModulesView(const bool bIsVisible)"
  },
  {
    "label": "OnSessionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSessionChanged()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "SpawnTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Tick(float DeltaTime)"
  }
]