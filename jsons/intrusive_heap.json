[
  {
    "label": "Foo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Foo"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "IntrusiveHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IntrusiveHeap"
  },
  {
    "label": "DefaultHeapHandleAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DefaultHeapHandleAccessor"
  },
  {
    "label": "IntrusiveHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IntrusiveHeap"
  },
  {
    "label": "InputIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InputIterator"
  },
  {
    "label": "InputIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InputIterator"
  },
  {
    "label": "WithLeafElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WithLeafElement"
  },
  {
    "label": "WithElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WithElement"
  },
  {
    "label": "optimization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "optimization"
  },
  {
    "label": "Impl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Impl"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "with"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "WithHeapHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WithHeapHandle"
  },
  {
    "label": "InputIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InputIterator"
  },
  {
    "label": "Foo()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "Foo(int)"
  },
  {
    "label": "GetHeapHandle()",
    "kind": "Method",
    "detail": "Function (HeapHandle)",
    "insertText": "GetHeapHandle(const T*)"
  },
  {
    "label": "SetHeapHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeapHandle(T*, HeapHandle)"
  },
  {
    "label": "ClearHeapHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearHeapHandle(T*)"
  },
  {
    "label": "class()",
    "kind": "Method",
    "detail": "Function (helper)",
    "insertText": "class(see InternalHeapHandleStorage)"
  },
  {
    "label": "Invalid()",
    "kind": "Method",
    "detail": "Function (HeapHandle)",
    "insertText": "Invalid()"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear()"
  },
  {
    "label": "InsertImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "InsertImpl(value)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insert(InputIterator first, InputIterator last)"
  },
  {
    "label": "emplace()",
    "kind": "Method",
    "detail": "Function (const_iterator)",
    "insertText": "emplace(Args&&... args)"
  },
  {
    "label": "take()",
    "kind": "Method",
    "detail": "Function (value_type)",
    "insertText": "take(size_type pos)"
  },
  {
    "label": "take()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "take(0u)"
  },
  {
    "label": "erase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "erase(size_type pos)"
  },
  {
    "label": "ReplaceImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ReplaceImpl(pos, element)"
  },
  {
    "label": "ReplaceTopImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ReplaceTopImpl(element)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (const_iterator)",
    "insertText": "Update(size_type pos)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Update(index)"
  },
  {
    "label": "ToIndex()",
    "kind": "Method",
    "detail": "Function (size_type)",
    "insertText": "ToIndex(const_iterator pos)"
  },
  {
    "label": "ToIndex()",
    "kind": "Method",
    "detail": "Function (size_type)",
    "insertText": "ToIndex(const_reverse_iterator pos)"
  },
  {
    "label": "SetHeapHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeapHandle(size_type i)"
  },
  {
    "label": "ClearHeapHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearHeapHandle(size_type i)"
  },
  {
    "label": "GetHeapHandle()",
    "kind": "Method",
    "detail": "Function (HeapHandle)",
    "insertText": "GetHeapHandle(size_type i)"
  },
  {
    "label": "Less()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Less(size_type i, size_type j)"
  },
  {
    "label": "Less()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Less(const T& element, size_type i)"
  },
  {
    "label": "Less()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Less(size_type i, const T& element)"
  },
  {
    "label": "MakeHole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeHole(size_type pos)"
  },
  {
    "label": "FillHole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillHole(size_type hole, U element)"
  },
  {
    "label": "MoveHole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveHole(size_type new_hole_pos, size_type old_hole_pos)"
  },
  {
    "label": "MoveHoleUpAndFill()",
    "kind": "Method",
    "detail": "Function (size_type)",
    "insertText": "MoveHoleUpAndFill(size_type hole_pos, U element)"
  },
  {
    "label": "MoveHoleDownAndFill()",
    "kind": "Method",
    "detail": "Function (size_type)",
    "insertText": "MoveHoleDownAndFill(size_type hole_pos, U element)"
  },
  {
    "label": "InsertImpl()",
    "kind": "Method",
    "detail": "Function (const_iterator)",
    "insertText": "InsertImpl(U element)"
  },
  {
    "label": "ReplaceImpl()",
    "kind": "Method",
    "detail": "Function (const_iterator)",
    "insertText": "ReplaceImpl(size_type pos, U element)"
  },
  {
    "label": "ReplaceTopImpl()",
    "kind": "Method",
    "detail": "Function (const_iterator)",
    "insertText": "ReplaceTopImpl(U element)"
  },
  {
    "label": "InternalHeapHandleStorage()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "InternalHeapHandleStorage()"
  },
  {
    "label": "WithHeapHandle()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "WithHeapHandle(Args&&... args)"
  }
]