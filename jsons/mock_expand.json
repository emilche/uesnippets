[
  {
    "label": "MockExpand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockExpand"
  },
  {
    "label": "MockExpandFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockExpandFactory"
  },
  {
    "label": "MockExpand()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_MOCK_MOCK_EXPAND_H_ # define MODULES_AUDIO_CODING_NETEQ_MOCK_MOCK_EXPAND_H_ # include \" modules / audio_coding / neteq / expand . h \" # include \" test / gmock . h \" namespace webrtc { class MockExpand : public Expand { public :)",
    "insertText": "MockExpand(BackgroundNoise* background_noise, SyncBuffer* sync_buffer, RandomVector* random_vector, StatisticsCalculator* statistics, int fs, size_t num_channels) : Expand(background_noise, sync_buffer, random_vector, statistics, fs, num_channels)"
  },
  {
    "label": "MockExpand()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "MockExpand()"
  },
  {
    "label": "Die()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Die()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(void, Die, ())"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Reset, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, Process, (AudioMultiVector * output), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetParametersForNormalAfterExpand, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetParametersForMergeAfterExpand, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, overlap_length, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (} ; } namespace webrtc { class MockExpandFactory : public ExpandFactory { public :)",
    "insertText": "MOCK_METHOD(Expand*, Create, (BackgroundNoise * background_noise, SyncBuffer* sync_buffer, RandomVector* random_vector, StatisticsCalculator* statistics, int fs, size_t num_channels), (const, override))"
  }
]