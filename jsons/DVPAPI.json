[
  {
    "label": "DVPSysmemBufferDescRec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DVPSysmemBufferDescRec"
  },
  {
    "label": "DVPGpuExternaResourceDescRec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DVPGpuExternaResourceDescRec"
  },
  {
    "label": "DVPSyncObjectDescRec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DVPSyncObjectDescRec"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef __DVAPI_H_ # define __DVAPI_H_ # include<stdint . h> # if)",
    "insertText": "defined(WIN32) #define DVPAPI_INTERFACE __declspec( dllexport ) DVPStatus #if defined(DVP_STATIC) #ifdef _WIN64 #pragma comment(linker, \"/INCLUDE:_tls_used\") #pragma comment(linker, \"/INCLUDE:dvp_callback\") #else #pragma comment(linker, \"/INCLUDE:__tls_used\") #pragma comment(linker, \"/INCLUDE:_dvp_callback\")"
  },
  {
    "label": "DVPStatus()",
    "kind": "Method",
    "detail": "Function (typedef uint64_t DVPSyncObjectHandle ; typedef enum { DVP_STATUS_OK = 0,DVP_STATUS_INVALID_PARAMETER = 1,DVP_STATUS_UNSUPPORTED = 2,DVP_STATUS_END_ENUMERATION = 3,DVP_STATUS_INVALID_DEVICE = 4,DVP_STATUS_OUT_OF_MEMORY = 5,DVP_STATUS_INVALID_OPERATION = 6,DVP_STATUS_TIMEOUT = 7,DVP_STATUS_INVALID_CONTEXT = 8,DVP_STATUS_INVALID_RESOURCE_TYPE = 9,DVP_STATUS_INVALID_FORMAT_OR_TYPE = 1 0,DVP_STATUS_DEVICE_UNINITIALIZED = 1 1,DVP_STATUS_UNSIGNALED = 1 2,DVP_STATUS_SYNC_ERROR = 1 3,DVP_STATUS_SYNC_STILL_BOUND = 1 4,DVP_STATUS_ERROR = - 1 } DVPStatus ; typedef enum { DVP_BUFFER,DVP_DEPTH_COMPONENT,DVP_RGBA,DVP_BGRA,DVP_RED,DVP_GREEN,DVP_BLUE,DVP_ALPHA,DVP_RGB,DVP_BGR,DVP_RG,DVP_LUMINANCE,DVP_LUMINANCE_ALPHA,DVP_CUDA_1_CHANNEL,DVP_CUDA_2_CHANNELS,DVP_CUDA_4_CHANNELS,DVP_RGBA_INTEGER,DVP_BGRA_INTEGER,DVP_RED_INTEGER,DVP_GREEN_INTEGER,DVP_BLUE_INTEGER,DVP_ALPHA_INTEGER,DVP_RGB_INTEGER,DVP_BGR_INTEGER,DVP_RG_INTEGER,DVP_LUMINANCE_INTEGER,DVP_LUMINANCE_ALPHA_INTEGER } DVPBufferFormats ; typedef enum { DVP_UNSIGNED_BYTE,DVP_BYTE,DVP_UNSIGNED_SHORT,DVP_SHORT,DVP_UNSIGNED_INT,DVP_INT,DVP_FLOAT,DVP_HALF_FLOAT,DVP_UNSIGNED_BYTE_3_3_2,DVP_UNSIGNED_BYTE_2_3_3_REV,DVP_UNSIGNED_SHORT_5_6_5,DVP_UNSIGNED_SHORT_5_6_5_REV,DVP_UNSIGNED_SHORT_4_4_4_4,DVP_UNSIGNED_SHORT_4_4_4_4_REV,DVP_UNSIGNED_SHORT_5_5_5_1,DVP_UNSIGNED_SHORT_1_5_5_5_REV,DVP_UNSIGNED_INT_8_8_8_8,DVP_UNSIGNED_INT_8_8_8_8_REV,DVP_UNSIGNED_INT_10_10_10_2,DVP_UNSIGNED_INT_2_10_10_10_REV } DVPBufferTypes ; typedef enum { DVP_OPAQUE_FD,DVP_OPAQUE_WIN32,DVP_OPAQUE_WIN32_KMT } DVPExternalHandleTypes ; typedef struct DVPSysmemBufferDescRec { uint32_t width ; uint32_t height ; uint32_t stride ; uint32_t size ; DVPBufferFormats format ; DVPBufferTypes type ; void* bufAddr ; } DVPSysmemBufferDesc ; typedef struct DVPGpuExternaResourceDescRec { uint32_t width ; uint32_t height ; uint32_t size ; DVPBufferFormats format ; DVPBufferTypes type ; DVPExternalHandleTypes handleType ; union { void* handle ; int fd ; } external ; } DVPGpuExternalResourceDesc ; # define DVP_SYNC_OBJECT_FLAGS_USE_EVENTS 0 x00000001 typedef struct DVPSyncObjectDescRec { uint32_t* sem ; uint32_t flags ;)",
    "insertText": "DVPStatus(*externalClientWaitFunc) (DVPSyncObjectHandle sync, uint32_t value, bool GEQ, uint64_t timeout)"
  },
  {
    "label": "dvpBegin()",
    "kind": "Method",
    "detail": "Function (} DVPSyncObjectDesc ; # define DVP_TIMEOUT_IGNORED 0 xFFFFFFFFFFFFFFFFull # define DVP_DEVICE_FLAGS_SHARE_APP_CONTEXT 0 x000000001 DVPAPI_INTERFACE)",
    "insertText": "dvpBegin()"
  },
  {
    "label": "dvpEnd()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpEnd()"
  },
  {
    "label": "dvpCreateBuffer()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpCreateBuffer(DVPSysmemBufferDesc *desc, DVPBufferHandle *hBuf)"
  },
  {
    "label": "dvpDestroyBuffer()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpDestroyBuffer(DVPBufferHandle hBuf)"
  },
  {
    "label": "dvpFreeBuffer()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpFreeBuffer(DVPBufferHandle gpuBufferHandle)"
  },
  {
    "label": "dvpMemcpyLined()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMemcpyLined(DVPBufferHandle srcBuffer, DVPSyncObjectHandle srcSync, uint32_t srcAcquireValue, uint64_t timeout, DVPBufferHandle dstBuffer, DVPSyncObjectHandle dstSync, uint32_t dstReleaseValue, uint32_t startingLine, uint32_t numberOfLines)"
  },
  {
    "label": "dvpMemcpyLined()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMemcpyLined(DVPBufferHandle srcBuffer, DVPSyncObjectHandle srcSync, uint32_t srcAcquireValue, uint64_t timeout, DVPBufferHandle dstBuffer, DVPSyncObjectHandle dstSync, uint32_t dstReleaseValue, uint32_t srcStartingLine, uint32_t dstStartingLine, uint32_t numberOfLines)"
  },
  {
    "label": "dvpMemcpy()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMemcpy(DVPBufferHandle srcBuffer, DVPSyncObjectHandle srcSync, uint32_t srcAcquireValue, uint64_t timeout, DVPBufferHandle dstBuffer, DVPSyncObjectHandle dstSync, uint32_t dstReleaseValue, uint32_t srcOffset, uint32_t dstOffset, uint32_t count)"
  },
  {
    "label": "dvpMemcpy2D()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMemcpy2D(DVPBufferHandle srcBuffer, DVPSyncObjectHandle srcSync, uint32_t srcAcquireValue, uint64_t timeout, DVPBufferHandle dstBuffer, DVPSyncObjectHandle dstSync, uint32_t dstReleaseValue, uint32_t startY, uint32_t startX, uint32_t height, uint32_t width)"
  },
  {
    "label": "dvpMemcpy2D()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMemcpy2D(DVPBufferHandle srcBuffer, DVPSyncObjectHandle srcSync, uint32_t srcAcquireValue, uint64_t timeout, DVPBufferHandle dstBuffer, DVPSyncObjectHandle dstSync, uint32_t dstReleaseValue, uint32_t srcY, uint32_t srcX, uint32_t dstY, uint32_t dstX, uint32_t height, uint32_t width)"
  },
  {
    "label": "dvpMapBufferEndAPI()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMapBufferEndAPI(DVPBufferHandle gpuBufferHandle)"
  },
  {
    "label": "dvpMapBufferEndDVP()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMapBufferEndDVP(DVPBufferHandle gpuBufferHandle)"
  },
  {
    "label": "dvpMapBufferWaitAPI()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMapBufferWaitAPI(DVPBufferHandle gpuBufferHandle)"
  },
  {
    "label": "dvpMapBufferWaitDVP()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMapBufferWaitDVP(DVPBufferHandle gpuBufferHandle)"
  },
  {
    "label": "dvpSyncObjCompletion()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpSyncObjCompletion(DVPSyncObjectHandle syncObject, uint64_t *timeStamp)"
  },
  {
    "label": "dvpImportSyncObject()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpImportSyncObject(DVPSyncObjectDesc *desc, DVPSyncObjectHandle *syncObject)"
  },
  {
    "label": "dvpFreeSyncObject()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpFreeSyncObject(DVPSyncObjectHandle syncObject)"
  },
  {
    "label": "dvpSyncObjClientWaitComplete()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpSyncObjClientWaitComplete(DVPSyncObjectHandle syncObject, uint64_t timeout)"
  },
  {
    "label": "dvpSyncObjClientWaitPartial()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpSyncObjClientWaitPartial(DVPSyncObjectHandle syncObject, uint32_t value, uint64_t timeout)"
  },
  {
    "label": "dvpGetLibrayVersion()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpGetLibrayVersion(uint32_t *major, uint32_t *minor)"
  }
]