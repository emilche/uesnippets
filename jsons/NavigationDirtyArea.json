[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FNavigationElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationElement"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNavigationDirtyArea",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationDirtyArea"
  },
  {
    "label": "Geometry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Math / Box . h \" # include \" UObject / WeakObjectPtr . h \" class UObject ; struct FNavigationElement ; enum class ENavigationDirtyFlag : uint8 { None = 0,)",
    "insertText": "Geometry(1 << 0), DynamicModifier = (1 << 1), UseAgentHeight = (1 << 2), NavigationBounds = (1 << 3)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(ENavigationDirtyFlag)"
  },
  {
    "label": "FBox()",
    "kind": "Method",
    "detail": "Function (struct FNavigationDirtyArea { FBox Bounds =)",
    "insertText": "FBox(ForceInit)"
  },
  {
    "label": "FNavigationDirtyArea()",
    "kind": "Method",
    "detail": "Function (# endif TSharedPtr<const FNavigationElement> OptionalSourceElement ; ENavigationDirtyFlag Flags = ENavigationDirtyFlag::None ;)",
    "insertText": "FNavigationDirtyArea()"
  },
  {
    "label": "FNavigationDirtyArea()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNavigationDirtyArea(const FBox& InBounds, ENavigationDirtyFlag InFlags, const TSharedPtr<const FNavigationElement>& InOptionalSourceElement = nullptr)"
  },
  {
    "label": "FNavigationDirtyArea()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNavigationDirtyArea(const FNavigationDirtyArea& Other)"
  },
  {
    "label": "FNavigationDirtyArea()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNavigationDirtyArea(FNavigationDirtyArea&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FNavigationDirtyArea&)",
    "insertText": "operator(const FNavigationDirtyArea& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FNavigationDirtyArea&)",
    "insertText": "operator(FNavigationDirtyArea&& Other)"
  },
  {
    "label": "HasFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasFlag(const ENavigationDirtyFlag Flag)"
  },
  {
    "label": "GetSourceDescription()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetSourceDescription()"
  }
]