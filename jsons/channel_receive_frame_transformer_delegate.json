[
  {
    "label": "ChannelReceiveFrameTransformerDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ChannelReceiveFrameTransformerDelegate"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef AUDIO_CHANNEL_RECEIVE_FRAME_TRANSFORMER_DELEGATE_H_ # define AUDIO_CHANNEL_RECEIVE_FRAME_TRANSFORMER_DELEGATE_H_ # include<memory> # include \" api / frame_transformer_interface . h \" # include \" api / sequence_checker . h \" # include \" rtc_base / system / no_unique_address . h \" # include \" rtc_base / task_queue . h \" # include \" rtc_base / thread . h \" namespace webrtc { class ChannelReceiveFrameTransformerDelegate : public TransformedFrameCallback { public : using ReceiveFrameCallback = std::function<)",
    "insertText": "void(rtc::ArrayView<const uint8_t> packet, const RTPHeader& header)"
  },
  {
    "label": "ChannelReceiveFrameTransformerDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChannelReceiveFrameTransformerDelegate(ReceiveFrameCallback receive_frame_callback, rtc::scoped_refptr<FrameTransformerInterface> frame_transformer, TaskQueueBase* channel_receive_thread)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Transform(rtc::ArrayView<const uint8_t> packet, const RTPHeader& header, uint32_t ssrc)"
  },
  {
    "label": "OnTransformedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTransformedFrame(std::unique_ptr<TransformableFrameInterface> frame)"
  },
  {
    "label": "ReceiveFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveFrame(std::unique_ptr<TransformableFrameInterface> frame)"
  },
  {
    "label": "ChannelReceiveFrameTransformerDelegate()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "ChannelReceiveFrameTransformerDelegate()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : RTC_NO_UNIQUE_ADDRESS SequenceChecker sequence_checker_ ; ReceiveFrameCallback receive_frame_callback_)",
    "insertText": "RTC_GUARDED_BY(sequence_checker_)"
  }
]