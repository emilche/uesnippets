[
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "SMDiagnostic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMDiagnostic"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "Twine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Twine"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "DiagnosticPrinter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticPrinter"
  },
  {
    "label": "DiagnosticPrinterRawOStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticPrinterRawOStream"
  },
  {
    "label": "DiagnosticPrinter()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_DIAGNOSTICPRINTER_H # define LLVM_IR_DIAGNOSTICPRINTER_H # include<string> namespace llvm { class Module ; class raw_ostream ; class SMDiagnostic ; class StringRef ; class Twine ; class Value ; class DiagnosticPrinter { public : ~)",
    "insertText": "DiagnosticPrinter()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} DiagnosticPrinter&)",
    "insertText": "operator(char C)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(unsigned char C)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(signed char C)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(StringRef Str)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(const char *Str)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(const std::string &Str)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(unsigned long N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(long N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(unsigned long long N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(long long N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(const void *P)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(unsigned int N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(int N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(double N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(const Twine &Str)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(const Value &V)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(const Module &M)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(const SMDiagnostic &Diag)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DiagnosticPrinter&)",
    "insertText": "operator(std::ios_base &(*iomanip)(std::ios_base &))"
  },
  {
    "label": "DiagnosticPrinterRawOStream()",
    "kind": "Method",
    "detail": "Function (} ; class DiagnosticPrinterRawOStream : public DiagnosticPrinter { protected : raw_ostream& Stream ; public :)",
    "insertText": "DiagnosticPrinterRawOStream(raw_ostream &Stream) : Stream(Stream)"
  }
]