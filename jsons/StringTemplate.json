[
  {
    "label": "FStringTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStringTemplate"
  },
  {
    "label": "FErrorInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FErrorInfo"
  },
  {
    "label": "FChunk",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChunk"
  },
  {
    "label": "FStringTemplateResolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStringTemplateResolver"
  },
  {
    "label": "FStringTemplate()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" # include \" Containers / UnrealString . h \" # include \" Containers / StringView . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" class FStringTemplate { public : struct FErrorInfo { FStringView Message ; int32 Line ; int32 Offset ; } ; public :)",
    "insertText": "FStringTemplate()"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Load(FString TemplateString, FErrorInfo& Errorinfo)"
  },
  {
    "label": "GetTemplateString()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetTemplateString()"
  },
  {
    "label": "FStringTemplateResolver()",
    "kind": "Method",
    "detail": "Function (private : struct FChunk { FStringView Text ; bool bIsParameter ; } ; FString TemplateString ; TArray<FChunk> Chunks ; int32 NumNamedParameters = 0 ; class FStringTemplateResolver ; } ; class FStringTemplateResolver { public :)",
    "insertText": "FStringTemplateResolver(const FStringTemplate& Template, uint32 ResolvedStringSizeHint = 0)"
  },
  {
    "label": "GetTemplate()",
    "kind": "Method",
    "detail": "Function (const FStringTemplate&)",
    "insertText": "GetTemplate()"
  },
  {
    "label": "Advance()",
    "kind": "Method",
    "detail": "Function (NamedParameters = Parameters ; } void)",
    "insertText": "Advance(FStringView NextNamelessParameterValue)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "Finalize(uint32 ResolvedStringSizeHint = 0)"
  }
]