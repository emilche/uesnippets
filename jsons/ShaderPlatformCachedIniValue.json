[
  {
    "label": "FShaderPlatformCachedIniValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderPlatformCachedIniValue"
  },
  {
    "label": "GetEditorShaderPlatform()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / IConsoleManager . h \" # include \" RHIShaderPlatform . h \" # include \" RHIStrings . h \" EShaderPlatform)",
    "insertText": "GetEditorShaderPlatform(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "FShaderPlatformCachedIniValue()",
    "kind": "Method",
    "detail": "Function (template<Type> struct FShaderPlatformCachedIniValue {)",
    "insertText": "FShaderPlatformCachedIniValue(const TCHAR* InCVarName) : CVarName(InCVarName) , CVar(nullptr)"
  },
  {
    "label": "FShaderPlatformCachedIniValue()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FShaderPlatformCachedIniValue(IConsoleVariable* InCVar) : CVar(InCVar)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} Type)",
    "insertText": "Get(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "GetEditorShaderPlatform()",
    "kind": "Method",
    "detail": "Function (Type Value { } ; const EShaderPlatform ActualShaderPlatform =)",
    "insertText": "GetEditorShaderPlatform(ShaderPlatform)"
  },
  {
    "label": "ShaderPlatformToPlatformName()",
    "kind": "Method",
    "detail": "Function (FName IniPlatformName =)",
    "insertText": "ShaderPlatformToPlatformName(ActualShaderPlatform)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (CVar =)",
    "insertText": "Get().FindConsoleVariable(*CVarName)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(IniPlatformName == FPlatformProperties::IniPlatformName() || ActualShaderPlatform == GMaxRHIShaderPlatform)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (CVar ->)",
    "insertText": "GetValue(Value)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (CVar =)",
    "insertText": "Get().RegisterConsoleVariable(*CVarName, Type(), TEXT(\"\"), ECVF_ReadOnly)"
  },
  {
    "label": "GetPlatformValueVariable()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<IConsoleVariable> OtherPlatformVar = CVar ->)",
    "insertText": "GetPlatformValueVariable(IniPlatformName)"
  },
  {
    "label": "checkf()",
    "kind": "Method",
    "detail": "Function (} # else)",
    "insertText": "checkf(IniPlatformName == FName(FPlatformProperties::IniPlatformName()), TEXT(\"FShaderPlatformCachedIniValue can only look up the current platform when ALLOW_OTHER_PLATFORM_CONFIG is false\"))"
  }
]