[
  {
    "label": "FActiveTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveTimerHandle"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SearchDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SearchDirection"
  },
  {
    "label": "FSearchResultData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSearchResultData"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Styling / SlateTypes . h \" # include \" Styling / CoreStyle . h \" # include \" Widgets / Input / SEditableTextBox . h \" # define LOCTEXT_NAMESPACE \" Slate \" class FActiveTimerHandle ; class SSearchBox : public SEditableTextBox { public : enum SearchDirection { Previous,Next,} ; struct FSearchResultData { int32 NumSearchResults ; int32 CurrentSearchResultIndex ; } ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSearch, SSearchBox::SearchDirection)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SSearchBox) : _Style( &FCoreStyle::Get().GetWidgetStyle<FSearchBoxStyle>(\"SearchBox\") ) , _HintText( LOCTEXT(\"SearchHint\", \"Search\") ) , _InitialText() , _SearchResultData() , _IsSearching(false) , _OnTextChanged() , _OnTextCommitted() , _OnVerifyTextChanged() , _OnSearch() , _SelectAllTextWhenFocused( true ) , _DelayChangeNotificationsWhileTyping( true ) , _DelayChangeNotificationsWhileTypingSeconds(0.25f)"
  },
  {
    "label": "SLATE_STYLE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_STYLE_ARGUMENT(FSearchBoxStyle, Style ) SLATE_ATTRIBUTE( FText, HintText ) SLATE_ATTRIBUTE( FText, InitialText ) SLATE_ATTRIBUTE( TOptional<FSearchResultData>, SearchResultData ) SLATE_ATTRIBUTE( bool, IsSearching ) SLATE_EVENT( FOnTextChanged, OnTextChanged ) SLATE_EVENT( FOnTextCommitted, OnTextCommitted ) SLATE_EVENT( FOnVerifyTextChanged, OnVerifyTextChanged ) SLATE_EVENT( FOnSearch, OnSearch ) SLATE_ATTRIBUTE( bool, SelectAllTextWhenFocused ) SLATE_ATTRIBUTE( float, MinDesiredWidth ) SLATE_ATTRIBUTE( bool, DelayChangeNotificationsWhileTyping ) SLATE_ATTRIBUTE( float, DelayChangeNotificationsWhileTypingSeconds ) SLATE_EVENT(FOnKeyDown, OnKeyDownHandler) SLATE_EVENT(FOnClicked, OnSearchGlassClicked) SLATE_END_ARGS() SLATE_API void Construct( const FArguments& InArgs)"
  },
  {
    "label": "HandleTextChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleTextChanged(const FText& NewText)"
  },
  {
    "label": "HandleTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTextCommitted(const FText& NewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "TriggerOnTextChanged()",
    "kind": "Method",
    "detail": "Function (private : EActiveTimerReturnType)",
    "insertText": "TriggerOnTextChanged(double InCurrentTime, float InDeltaTime, FText NewText)"
  },
  {
    "label": "GetSearchResultText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSearchResultText()"
  },
  {
    "label": "GetSearchResultNavigationButtonVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSearchResultNavigationButtonVisibility()"
  },
  {
    "label": "GetXVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetXVisibility()"
  },
  {
    "label": "GetSearchResultDataVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSearchResultDataVisibility()"
  },
  {
    "label": "GetIsSearchingThrobberVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetIsSearchingThrobberVisibility()"
  },
  {
    "label": "GetSearchGlassVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSearchGlassVisibility()"
  },
  {
    "label": "OnClickedSearch()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClickedSearch(SSearchBox::SearchDirection Direction)"
  },
  {
    "label": "OnClearSearch()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClearSearch()"
  },
  {
    "label": "GetWidgetFont()",
    "kind": "Method",
    "detail": "Function (FSlateFontInfo)",
    "insertText": "GetWidgetFont()"
  }
]