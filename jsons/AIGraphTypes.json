[
  {
    "label": "AIGRAPH_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AIGRAPH_API"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / WeakObjectPtr . h \" # include \" AIGraphTypes . generated . h \")",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FGraphNodeClassData()"
  },
  {
    "label": "FGraphNodeClassData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FGraphNodeClassData(UClass* InClass, const FString& InDeprecatedMessage)"
  },
  {
    "label": "FGraphNodeClassData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGraphNodeClassData(const FTopLevelAssetPath& InGeneratedClassPath, UClass* InClass)"
  },
  {
    "label": "FGraphNodeClassData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGraphNodeClassData(const FString& InAssetName, const FString& InGeneratedClassPackage, const FString& InClassName, UClass* InClass)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString()"
  },
  {
    "label": "GetClassName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetClassName()"
  },
  {
    "label": "GetCategory()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCategory()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltip()"
  },
  {
    "label": "GetClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetClass(bool bSilent = false)"
  },
  {
    "label": "IsAbstract()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAbstract()"
  },
  {
    "label": "IsDeprecated()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsDeprecated()"
  },
  {
    "label": "GetDeprecatedMessage()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetDeprecatedMessage()"
  },
  {
    "label": "AddUniqueSubNode()",
    "kind": "Method",
    "detail": "Function (FString DeprecatedMessage ; } ; struct FGraphNodeClassNode { FGraphNodeClassData Data ; FString ParentClassName ; TSharedPtr<FGraphNodeClassNode> ParentNode ; TArray<TSharedPtr<FGraphNodeClassNode>> SubNodes ; void)",
    "insertText": "AddUniqueSubNode(TSharedPtr<FGraphNodeClassNode> SubNode)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (} ; struct FGraphNodeClassHelper {)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnPackageListUpdated)"
  },
  {
    "label": "FGraphNodeClassHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGraphNodeClassHelper(UClass* InRootClass)"
  },
  {
    "label": "FGraphNodeClassHelper()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FGraphNodeClassHelper()"
  },
  {
    "label": "GatherClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherClasses(const UClass* BaseClass, TArray<FGraphNodeClassData>& AvailableClasses)"
  },
  {
    "label": "GetDeprecationMessage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDeprecationMessage(const UClass* Class)"
  },
  {
    "label": "OnAssetAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetAdded(const struct FAssetData& AssetData)"
  },
  {
    "label": "OnAssetRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRemoved(const struct FAssetData& AssetData)"
  },
  {
    "label": "InvalidateCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateCache()"
  },
  {
    "label": "OnReloadComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReloadComplete(EReloadCompleteReason Reason)"
  },
  {
    "label": "AddUnknownClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUnknownClass(const FGraphNodeClassData& ClassData)"
  },
  {
    "label": "IsClassKnown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassKnown(const FGraphNodeClassData& ClassData)"
  },
  {
    "label": "GetObservedBlueprintClassCount()",
    "kind": "Method",
    "detail": "Function (FOnPackageListUpdated OnPackageListUpdated ; int32)",
    "insertText": "GetObservedBlueprintClassCount(UClass* BaseNativeClass)"
  },
  {
    "label": "AddObservedBlueprintClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObservedBlueprintClasses(UClass* BaseNativeClass)"
  },
  {
    "label": "UpdateAvailableBlueprintClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAvailableBlueprintClasses()"
  },
  {
    "label": "AddForcedHiddenClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddForcedHiddenClass(UClass* Class)"
  },
  {
    "label": "SetForcedHiddenClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForcedHiddenClasses(const TSet<UClass*>& Classes)"
  },
  {
    "label": "SetGatherBlueprints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGatherBlueprints(bool bGather)"
  },
  {
    "label": "CreateClassDataNode()",
    "kind": "Method",
    "detail": "Function (private : UClass* RootNodeClass ; TSharedPtr<FGraphNodeClassNode> RootNode ; TArray<FName> UnknownPackages ; TMap<UClass*,int32> BlueprintClassCount ; TSet<UClass*> ForcedHiddenClasses ; bool bGatherBlueprints = true ; TSharedPtr<FGraphNodeClassNode>)",
    "insertText": "CreateClassDataNode(const struct FAssetData& AssetData)"
  },
  {
    "label": "FindBaseClassNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphNodeClassNode>)",
    "insertText": "FindBaseClassNode(TSharedPtr<FGraphNodeClassNode> Node, const FString& ClassName)"
  },
  {
    "label": "FindAllSubClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAllSubClasses(TSharedPtr<FGraphNodeClassNode> Node, TArray<FGraphNodeClassData>& AvailableClasses)"
  },
  {
    "label": "BuildClassGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildClassGraph()"
  },
  {
    "label": "AddClassGraphChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddClassGraphChildren(TSharedPtr<FGraphNodeClassNode> Node, TArray<TSharedPtr<FGraphNodeClassNode> >& NodeList)"
  },
  {
    "label": "IsHidingClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHidingClass(UClass* Class)"
  },
  {
    "label": "IsHidingParentClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHidingParentClass(UClass* Class)"
  },
  {
    "label": "IsPackageSaved()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPackageSaved(FName PackageName)"
  }
]