[
  {
    "label": "AIGRAPH_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AIGRAPH_API"
  },
  {
    "label": "masked",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "masked"
  },
  {
    "label": "instead",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "instead"
  },
  {
    "label": "wants",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "wants"
  },
  {
    "label": "from",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "from"
  },
  {
    "label": "up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "up"
  },
  {
    "label": "if",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "if"
  },
  {
    "label": "from",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "from"
  },
  {
    "label": "AIGRAPH_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AIGRAPH_API"
  },
  {
    "label": "AIGRAPH_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AIGRAPH_API"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "AddUniqueSubNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUniqueSubNode(TSharedPtr<FGraphNodeClassNode> SubNode)"
  },
  {
    "label": "GatherClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherClasses(const UClass* BaseClass, TArray<FGraphNodeClassData>& AvailableClasses)"
  },
  {
    "label": "GetDeprecationMessage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDeprecationMessage(const UClass* Class)"
  },
  {
    "label": "OnAssetAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetAdded(const struct FAssetData& AssetData)"
  },
  {
    "label": "OnAssetRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRemoved(const struct FAssetData& AssetData)"
  },
  {
    "label": "InvalidateCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateCache()"
  },
  {
    "label": "OnReloadComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReloadComplete(EReloadCompleteReason Reason)"
  },
  {
    "label": "AddUnknownClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUnknownClass(const FGraphNodeClassData& ClassData)"
  },
  {
    "label": "IsClassKnown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassKnown(const FGraphNodeClassData& ClassData)"
  },
  {
    "label": "GetObservedBlueprintClassCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetObservedBlueprintClassCount(UClass* BaseNativeClass)"
  },
  {
    "label": "AddObservedBlueprintClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObservedBlueprintClasses(UClass* BaseNativeClass)"
  },
  {
    "label": "UpdateAvailableBlueprintClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAvailableBlueprintClasses()"
  },
  {
    "label": "AddForcedHiddenClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddForcedHiddenClass(UClass* Class)"
  },
  {
    "label": "SetForcedHiddenClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForcedHiddenClasses(const TSet<UClass*>& Classes)"
  },
  {
    "label": "SetGatherBlueprints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGatherBlueprints(bool bGather)"
  },
  {
    "label": "CreateClassDataNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphNodeClassNode>)",
    "insertText": "CreateClassDataNode(const struct FAssetData& AssetData)"
  },
  {
    "label": "FindBaseClassNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphNodeClassNode>)",
    "insertText": "FindBaseClassNode(TSharedPtr<FGraphNodeClassNode> Node, const FString& ClassName)"
  },
  {
    "label": "FindAllSubClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAllSubClasses(TSharedPtr<FGraphNodeClassNode> Node, TArray<FGraphNodeClassData>& AvailableClasses)"
  },
  {
    "label": "BuildClassGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildClassGraph()"
  },
  {
    "label": "AddClassGraphChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddClassGraphChildren(TSharedPtr<FGraphNodeClassNode> Node, TArray<TSharedPtr<FGraphNodeClassNode> >& NodeList)"
  },
  {
    "label": "IsHidingClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHidingClass(UClass* Class)"
  },
  {
    "label": "IsHidingParentClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHidingParentClass(UClass* Class)"
  },
  {
    "label": "IsPackageSaved()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPackageSaved(FName PackageName)"
  }
]