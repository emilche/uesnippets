[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FWidgetStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetStyle"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" HAL / Platform . h \" # include \" Math / Vector2D . h \" # include \" Rendering / RenderingCommon . h \" # include \" Templates / SharedPointer . h \" # include \" Views / SInteractiveCurveEditorView . h \" class FCurveEditor ; class FPaintArgs ; class FSlateRect ; class FSlateWindowElementList ; class FText ; class FWidgetStyle ; struct FGeometry ; class SCurveEditorViewStacked : public SInteractiveCurveEditorView { public : void)",
    "insertText": "Construct(const FArguments& InArgs, TWeakPtr<FCurveEditor> InCurveEditor)"
  },
  {
    "label": "IsValueSnapEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValueSnapEnabled()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float LayoutScaleMultiplier)"
  },
  {
    "label": "PaintView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PaintView(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 BaseLayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "GetGridLinesY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetGridLinesY(TSharedRef<const FCurveEditor> CurveEditor, TArray<float>& MajorGridLines, TArray<float>& MinorGridLines, TArray<FText>* MajorGridLabels = nullptr)"
  },
  {
    "label": "DrawViewGrids()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawViewGrids(const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 BaseLayerId, ESlateDrawEffect DrawEffects)"
  },
  {
    "label": "DrawLabels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawLabels(const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 BaseLayerId, ESlateDrawEffect DrawEffects)"
  },
  {
    "label": "DrawBufferedCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawBufferedCurves(const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 BaseLayerId, ESlateDrawEffect DrawEffects)"
  }
]