[
  {
    "label": "RandomVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RandomVector"
  },
  {
    "label": "RandomVector()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_RANDOM_VECTOR_H_ # define MODULES_AUDIO_CODING_NETEQ_RANDOM_VECTOR_H_ # include<stddef . h> # include<stdint . h> namespace webrtc { class RandomVector { public : const size_t kRandomTableSize = 2 5 6 ; const int16_t kRandomTable [ kRandomTableSize ] ;)",
    "insertText": "RandomVector() : seed_(777), seed_increment_(1)"
  },
  {
    "label": "RandomVector()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RandomVector(const RandomVector&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RandomVector&)",
    "insertText": "operator(const RandomVector&)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Generate(size_t length, int16_t* output)"
  },
  {
    "label": "IncreaseSeedIncrement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncreaseSeedIncrement(int16_t increase_by)"
  },
  {
    "label": "seed_increment()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "seed_increment()"
  }
]