[
  {
    "label": "FMetalCommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalCommandList"
  },
  {
    "label": "FMetalCommandQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalCommandQueue"
  },
  {
    "label": "FMetalGraphicsPipelineState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalGraphicsPipelineState"
  },
  {
    "label": "FMetalCommandBufferFence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalCommandBufferFence"
  },
  {
    "label": "FMetalDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalDevice"
  },
  {
    "label": "FMetalCommandBufferStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalCommandBufferStats"
  },
  {
    "label": "FMetalShaderPipeline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalShaderPipeline"
  },
  {
    "label": "FMetalCommandBufferDebug",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalCommandBufferDebug"
  },
  {
    "label": "FMetalCommandData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalCommandData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DispatchIndirectArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DispatchIndirectArgs"
  },
  {
    "label": "FMetalCommandDebug",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalCommandDebug"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FMetalBarrierScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalBarrierScope"
  },
  {
    "label": "FMetalCommandEncoderFence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalCommandEncoderFence"
  },
  {
    "label": "hides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "hides"
  },
  {
    "label": "FMetalCommandEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalCommandEncoder"
  },
  {
    "label": "FMetalBufferBindings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalBufferBindings"
  },
  {
    "label": "FSizeConstants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSizeConstants"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release(void)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(void)"
  },
  {
    "label": "ResetLive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetLive(void)"
  },
  {
    "label": "StartCommandBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartCommandBuffer(void)"
  },
  {
    "label": "EndCommandBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndCommandBuffer()"
  },
  {
    "label": "IsBlitCommandEncoderActive()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "IsBlitCommandEncoderActive()"
  },
  {
    "label": "BeginRenderCommandEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRenderCommandEncoding(void)"
  },
  {
    "label": "BeginComputeCommandEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginComputeCommandEncoding(MTL::DispatchType Type = MTL::DispatchTypeSerial)"
  },
  {
    "label": "BeginAccelerationStructureCommandEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginAccelerationStructureCommandEncoding(void)"
  },
  {
    "label": "BeginBlitCommandEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginBlitCommandEncoding(void)"
  },
  {
    "label": "EndEncoding()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FMetalFence>)",
    "insertText": "EndEncoding(void)"
  },
  {
    "label": "InsertCommandBufferFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertCommandBufferFence(TSharedPtr<FMetalCommandBufferFence, ESPMode::ThreadSafe>& Fence, FMetalCommandBufferCompletionHandler Handler)"
  },
  {
    "label": "AddCompletionHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCompletionHandler(FMetalCommandBufferCompletionHandler& Handler)"
  },
  {
    "label": "UpdateFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFence(FMetalFence* Fence)"
  },
  {
    "label": "WaitForFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForFence(FMetalFence* Fence)"
  },
  {
    "label": "SignalEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SignalEvent(MTLEventPtr Event, uint32_t SignalCount)"
  },
  {
    "label": "WaitForEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForEvent(MTLEventPtr Event, uint32_t SignalCount)"
  },
  {
    "label": "InsertDebugSignpost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertDebugSignpost(NS::String* String)"
  },
  {
    "label": "PushDebugGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushDebugGroup(NS::String* String)"
  },
  {
    "label": "PopDebugGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopDebugGroup(void)"
  },
  {
    "label": "SetRenderPassDescriptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderPassDescriptor(MTL::RenderPassDescriptor* RenderPass)"
  },
  {
    "label": "SetRenderPassStoreActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderPassStoreActions(MTL::StoreAction const* const ColorStore, MTL::StoreAction const DepthStore, MTL::StoreAction const StencilStore)"
  },
  {
    "label": "SetRenderPipelineState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderPipelineState(FMetalShaderPipeline* const PipelineState)"
  },
  {
    "label": "SetViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewport(MTL::Viewport const Viewport[], uint32 NumActive)"
  },
  {
    "label": "SetFrontFacingWinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrontFacingWinding(MTL::Winding const FrontFacingWinding)"
  },
  {
    "label": "SetCullMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCullMode(MTL::CullMode const CullMode)"
  },
  {
    "label": "SetDepthBias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDepthBias(float const DepthBias, float const SlopeScale, float const Clamp)"
  },
  {
    "label": "SetScissorRect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScissorRect(MTL::ScissorRect const Rect[], uint32 NumActive)"
  },
  {
    "label": "SetTriangleFillMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTriangleFillMode(MTL::TriangleFillMode const FillMode)"
  },
  {
    "label": "SetDepthClipMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDepthClipMode(MTL::DepthClipMode DepthClipMode)"
  },
  {
    "label": "SetBlendColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBlendColor(float const Red, float const Green, float const Blue, float const Alpha)"
  },
  {
    "label": "SetDepthStencilState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDepthStencilState(MTL::DepthStencilState* DepthStencilState)"
  },
  {
    "label": "SetStencilReferenceValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStencilReferenceValue(uint32 const ReferenceValue)"
  },
  {
    "label": "SetVisibilityResultMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibilityResultMode(MTL::VisibilityResultMode const Mode, NS::UInteger const Offset)"
  },
  {
    "label": "SetShaderAccelerationStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderAccelerationStructure(MTL::FunctionType const FunctionType, MTL::AccelerationStructure * AccelerationStructure, NS::UInteger const Index)"
  },
  {
    "label": "SetShaderBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderBuffer(MTL::FunctionType const FunctionType, FMetalBufferPtr Buffer, NS::UInteger const Offset, NS::UInteger const Length, NS::UInteger const Index, MTL::ResourceUsage const Usage, EPixelFormat const Format = PF_Unknown, NS::UInteger const ElementRowPitch = 0, TArray<TTuple<MTL::Resource*, MTL::ResourceUsage>> ReferencedResources = {})"
  },
  {
    "label": "SetShaderData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderData(MTL::FunctionType const FunctionType, FMetalBufferData* Data, NS::UInteger const Offset, NS::UInteger const Index, EPixelFormat const Format = PF_Unknown, NS::UInteger const ElementRowPitch = 0)"
  },
  {
    "label": "SetShaderBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderBytes(MTL::FunctionType const FunctionType, uint8 const* Bytes, NS::UInteger const Length, NS::UInteger const Index)"
  },
  {
    "label": "SetShaderTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderTexture(MTL::FunctionType const FunctionType, MTL::Texture* Texture, NS::UInteger const Index, MTL::ResourceUsage const Usage)"
  },
  {
    "label": "SetShaderSamplerState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderSamplerState(MTL::FunctionType const FunctionType, MTL::SamplerState* Sampler, NS::UInteger const Index)"
  },
  {
    "label": "SetShaderSideTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderSideTable(MTL::FunctionType const FunctionType, NS::UInteger const Index)"
  },
  {
    "label": "UseIndirectArgumentResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseIndirectArgumentResource(MTL::Texture* Texture, MTL::ResourceUsage const Usage)"
  },
  {
    "label": "UseIndirectArgumentResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseIndirectArgumentResource(FMetalBufferPtr Buffer, MTL::ResourceUsage const Usage)"
  },
  {
    "label": "TransitionResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransitionResources(MTL::Resource* Resource)"
  },
  {
    "label": "SetComputePipelineState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComputePipelineState(FMetalShaderPipelinePtr State)"
  },
  {
    "label": "SplitCommandBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitCommandBuffers()"
  },
  {
    "label": "SetShaderBufferOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderBufferOffset(MTL::FunctionType const FunctionType, NS::UInteger const Offset, NS::UInteger const Length, NS::UInteger const Index)"
  },
  {
    "label": "SetShaderBufferInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderBufferInternal(MTL::FunctionType Function, uint32 Index)"
  },
  {
    "label": "FenceResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FenceResource(MTL::Texture* Resource, const MTL::FunctionType Function, bool bIsRenderTarget = false)"
  },
  {
    "label": "FenceResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FenceResource(MTL::Buffer* Resource, const MTL::FunctionType Function)"
  },
  {
    "label": "UseResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseResource(MTL::Resource* Resource, MTL::ResourceUsage const Usage)"
  },
  {
    "label": "UseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseResources(TArray<MTL::Resource*> const& Resources, MTL::ResourceUsage const Usage, MTL::RenderStages RenderStages = 0)"
  },
  {
    "label": "UseHeaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseHeaps(TArray<MTL::Heap*> const& Heaps, const MTL::FunctionType Function)"
  }
]