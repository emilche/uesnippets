[
  {
    "label": "AudioBweTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioBweTest"
  },
  {
    "label": "AudioBweTest()",
    "kind": "Method",
    "detail": "Function (# ifndef AUDIO_TEST_AUDIO_BWE_INTEGRATION_TEST_H_ # define AUDIO_TEST_AUDIO_BWE_INTEGRATION_TEST_H_ # include<memory> # include<string> # include \" api / task_queue / task_queue_base . h \" # include \" api / test / simulated_network . h \" # include \" test / call_test . h \" namespace webrtc { namespace test { class AudioBweTest : public test::EndToEndTest { public :)",
    "insertText": "AudioBweTest()"
  },
  {
    "label": "AudioInputFile()",
    "kind": "Method",
    "detail": "Function (protected : std::string)",
    "insertText": "AudioInputFile()"
  },
  {
    "label": "GetNetworkPipeConfig()",
    "kind": "Method",
    "detail": "Function (BuiltInNetworkBehaviorConfig)",
    "insertText": "GetNetworkPipeConfig()"
  },
  {
    "label": "GetNumVideoStreams()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetNumVideoStreams()"
  },
  {
    "label": "GetNumAudioStreams()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetNumAudioStreams()"
  },
  {
    "label": "GetNumFlexfecStreams()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetNumFlexfecStreams()"
  },
  {
    "label": "CreateCapturer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<TestAudioDeviceModule::Capturer>)",
    "insertText": "CreateCapturer()"
  },
  {
    "label": "OnFakeAudioDevicesCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFakeAudioDevicesCreated(TestAudioDeviceModule* send_audio_device, TestAudioDeviceModule* recv_audio_device)"
  },
  {
    "label": "CreateSendTransport()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<test::PacketTransport>)",
    "insertText": "CreateSendTransport(TaskQueueBase* task_queue, Call* sender_call)"
  },
  {
    "label": "CreateReceiveTransport()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<test::PacketTransport>)",
    "insertText": "CreateReceiveTransport(TaskQueueBase* task_queue)"
  },
  {
    "label": "PerformTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformTest()"
  }
]