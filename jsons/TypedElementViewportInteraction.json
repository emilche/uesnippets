[
  {
    "label": "UTypedElementSelectionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementSelectionSet"
  },
  {
    "label": "FInputDeviceState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputDeviceState"
  },
  {
    "label": "FTypedElementHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementHandle"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EDITORFRAMEWORK_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EDITORFRAMEWORK_API"
  },
  {
    "label": "EDITORFRAMEWORK_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EDITORFRAMEWORK_API"
  },
  {
    "label": "EDITORFRAMEWORK_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EDITORFRAMEWORK_API"
  },
  {
    "label": "GetGizmoPivotLocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetGizmoPivotLocation(const TTypedElement<ITypedElementWorldInterface>& InElementWorldHandle, const UE::Widget::EWidgetMode InWidgetMode, FVector& OutPivotLocation)"
  },
  {
    "label": "PreGizmoManipulationStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreGizmoManipulationStarted(TArrayView<const FTypedElementHandle> InElementHandles, const UE::Widget::EWidgetMode InWidgetMode)"
  },
  {
    "label": "GizmoManipulationStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GizmoManipulationStarted(const TTypedElement<ITypedElementWorldInterface>& InElementWorldHandle, const UE::Widget::EWidgetMode InWidgetMode)"
  },
  {
    "label": "GizmoManipulationDeltaUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GizmoManipulationDeltaUpdate(const TTypedElement<ITypedElementWorldInterface>& InElementWorldHandle, const UE::Widget::EWidgetMode InWidgetMode, const EAxisList::Type InDragAxis, const FInputDeviceState& InInputState, const FTransform& InDeltaTransform, const FVector& InPivotLocation)"
  },
  {
    "label": "GizmoManipulationStopped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GizmoManipulationStopped(const TTypedElement<ITypedElementWorldInterface>& InElementWorldHandle, const UE::Widget::EWidgetMode InWidgetMode, const ETypedElementViewportInteractionGizmoManipulationType InManipulationType)"
  },
  {
    "label": "PostGizmoManipulationStopped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostGizmoManipulationStopped(TArrayView<const FTypedElementHandle> InElementHandles, const UE::Widget::EWidgetMode InWidgetMode)"
  },
  {
    "label": "MirrorElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MirrorElement(const TTypedElement<ITypedElementWorldInterface>& InElementWorldHandle, const FVector& InMirrorScale, const FVector& InPivotLocation)"
  },
  {
    "label": "GetFocusBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFocusBounds(const TTypedElement<ITypedElementWorldInterface>& InElementWorldHandle, FBoxSphereBounds& OutBounds)"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsSet()"
  },
  {
    "label": "BeginGizmoManipulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginGizmoManipulation(FTypedElementListConstRef InElementsToMove, const UE::Widget::EWidgetMode InWidgetMode)"
  },
  {
    "label": "UpdateGizmoManipulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGizmoManipulation(FTypedElementListConstRef InElementsToMove, const UE::Widget::EWidgetMode InWidgetMode, const EAxisList::Type InDragAxis, const FInputDeviceState& InInputState, const FTransform& InDeltaTransform)"
  },
  {
    "label": "EndGizmoManipulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndGizmoManipulation(FTypedElementListConstRef InElementsToMove, const UE::Widget::EWidgetMode InWidgetMode, const ETypedElementViewportInteractionGizmoManipulationType InManipulationType)"
  },
  {
    "label": "ApplyDeltaToElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyDeltaToElement(const FTypedElementHandle& InElementHandle, const UE::Widget::EWidgetMode InWidgetMode, const EAxisList::Type InDragAxis, const FInputDeviceState& InInputState, const FTransform& InDeltaTransform)"
  },
  {
    "label": "MirrorElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MirrorElement(const FTypedElementHandle& InElementHandle, const FVector& InMirrorScale)"
  },
  {
    "label": "GetFocusBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFocusBounds(FTypedElementListConstRef InElements, FBoxSphereBounds& OutBox)"
  }
]