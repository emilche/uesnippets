[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "SHLODOutliner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHLODOutliner"
  },
  {
    "label": "FLODActorDropTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLODActorDropTarget"
  },
  {
    "label": "FLODActorItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLODActorItem"
  },
  {
    "label": "FLODActorDropTarget()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" Engine / LODActor . h \" # include \" HLODOutlinerDragDrop . h \" # include \" Internationalization / Text . h \" # include \" ITreeItem . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" TreeItemID . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class SWidget ; class UToolMenu ; namespace HLODOutliner { class SHLODOutliner ; struct FLODActorDropTarget : IDropTarget { TWeakObjectPtr<ALODActor> LODActor ;)",
    "insertText": "FLODActorDropTarget(ALODActor* InLODActor) : LODActor(InLODActor)"
  },
  {
    "label": "ValidateDrop()",
    "kind": "Method",
    "detail": "Function (} public : FDragValidationInfo)",
    "insertText": "ValidateDrop(FDragDropPayload& DraggedObjects)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDrop(FDragDropPayload& DraggedObjects, const FDragValidationInfo& ValidationInfo, TSharedRef<SWidget> DroppedOnWidget)"
  },
  {
    "label": "FLODActorItem()",
    "kind": "Method",
    "detail": "Function (} ; struct FLODActorItem : ITreeItem { TWeakObjectPtr<ALODActor> LODActor ; FTreeItemID ID ;)",
    "insertText": "FLODActorItem(ALODActor* InLODActor)"
  },
  {
    "label": "CanInteract()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanInteract()"
  },
  {
    "label": "GenerateContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateContextMenu(UToolMenu* Menu, SHLODOutliner& Outliner)"
  },
  {
    "label": "GetDisplayString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDisplayString()"
  },
  {
    "label": "GetTint()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetTint()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (FTreeItemID)",
    "insertText": "GetID()"
  },
  {
    "label": "GetRawNumTrianglesAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetRawNumTrianglesAsText()"
  },
  {
    "label": "GetReducedNumTrianglesAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetReducedNumTrianglesAsText()"
  },
  {
    "label": "GetReductionPercentageAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetReductionPercentageAsText()"
  },
  {
    "label": "GetLevelAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLevelAsText()"
  },
  {
    "label": "PopulateDragDropPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateDragDropPayload(FDragDropPayload& Payload)"
  }
]