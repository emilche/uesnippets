[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FGPUSortManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSortManager"
  },
  {
    "label": "FGPUSpriteEmitterInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUSpriteEmitterInfo"
  },
  {
    "label": "FGPUSpriteResourceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUSpriteResourceData"
  },
  {
    "label": "FGPUSpriteResources",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSpriteResources"
  },
  {
    "label": "FParticleEmitterInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEmitterInstance"
  },
  {
    "label": "FRHIUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIUniformBuffer"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "UVectorFieldComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVectorFieldComponent"
  },
  {
    "label": "FGlobalDistanceFieldParameterData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalDistanceFieldParameterData"
  },
  {
    "label": "FSceneUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneUniformBuffer"
  },
  {
    "label": "UVectorField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVectorField"
  },
  {
    "label": "FVectorFieldResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVectorFieldResource"
  },
  {
    "label": "FVectorFieldInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVectorFieldInstance"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FFXSystemInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystemInterface"
  },
  {
    "label": "FScreenPassRenderTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScreenPassRenderTarget"
  },
  {
    "label": "FFXSystemSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystemSet"
  },
  {
    "label": "SupportsGPUParticles()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / IConsoleManager . h \" # include \" RenderUtils . h \" # include \" RenderGraphDefinitions . h \" # include \" SceneView . h \" class FCanvas ; class FGPUSortManager ; struct FGPUSpriteEmitterInfo ; struct FGPUSpriteResourceData ; class FGPUSpriteResources ; struct FParticleEmitterInstance ; class FRHIUniformBuffer ; class FScene ; class FSceneInterface ; class UVectorFieldComponent ; class FGlobalDistanceFieldParameterData ; class FSceneUniformBuffer ; struct FParticleEmitterInstance ; struct FGPUSpriteEmitterInfo ; struct FGPUSpriteResourceData ; class FGPUSpriteResources ; class UVectorField ; class UVectorFieldComponent ; class FVectorFieldResource ; class FVectorFieldInstance ; class FPrimitiveDrawInterface ; class FSceneView ; class FCanvas ; namespace FXConsoleVariables { int32 VisualizeGPUSimulation ; int32 bAllowGPUSorting ; int32 bAllowCulling ; int32 bFreezeGPUSimulation ; int32 bFreezeParticleSimulation ; int32 bAllowAsyncTick ; float ParticleSlackGPU ; int32 MaxParticleTilePreAllocation ; int32 MaxCPUParticlesPerEmitter ; int32 MaxGPUParticlesSpawnedPerFrame ; int32 GPUSpawnWarningThreshold ; float GPUCollisionDepthBounds ; TAutoConsoleVariable<int32> TestGPUSort ; int32 bAllowGPUParticles ; } bool)",
    "insertText": "SupportsGPUParticles(EShaderPlatform Platform)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (class FFXSystemInterface { public : FFXSystemInterface*)",
    "insertText": "Create(ERHIFeatureLevel::Type InFeatureLevel, FSceneInterface* Scene)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy(FFXSystemInterface* FXSystem)"
  },
  {
    "label": "QueueDestroyGPUSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueDestroyGPUSimulation(FFXSystemInterface* FXSystem)"
  },
  {
    "label": "RegisterCustomFXSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCustomFXSystem(const FName& InterfaceName, const FCreateCustomFXSystemDelegate& InCreateDelegate)"
  },
  {
    "label": "UnregisterCustomFXSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCustomFXSystem(const FName& InterfaceName)"
  },
  {
    "label": "GetInterface()",
    "kind": "Method",
    "detail": "Function (FFXSystemInterface*)",
    "insertText": "GetInterface(const FName& InName)"
  },
  {
    "label": "DestroyGPUSimulation()",
    "kind": "Method",
    "detail": "Function (bIsPendingKill = true ; } void)",
    "insertText": "DestroyGPUSimulation()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Tick(UWorld* World, float DeltaSeconds)"
  },
  {
    "label": "Suspend()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "Suspend()"
  },
  {
    "label": "Resume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resume()"
  },
  {
    "label": "DrawDebug()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "DrawDebug(FCanvas* Canvas)"
  },
  {
    "label": "ShouldDebugDraw_RenderThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldDebugDraw_RenderThread()"
  },
  {
    "label": "DrawSceneDebug_RenderThread()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DrawSceneDebug_RenderThread(FRDGBuilder& GraphBuilder, const FSceneView& View, FRDGTextureRef SceneColor, FRDGTextureRef SceneDepth)"
  },
  {
    "label": "AddVectorField()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddVectorField(UVectorFieldComponent* VectorFieldComponent)"
  },
  {
    "label": "RemoveVectorField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveVectorField(UVectorFieldComponent* VectorFieldComponent)"
  },
  {
    "label": "UpdateVectorField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVectorField(UVectorFieldComponent* VectorFieldComponent)"
  },
  {
    "label": "PreInitViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreInitViews(FRDGBuilder& GraphBuilder, bool bAllowGPUParticleUpdate, const TArrayView<const FSceneViewFamily*>& ViewFamilies, const FSceneViewFamily* CurrentFamily)"
  },
  {
    "label": "PostInitViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitViews(FRDGBuilder& GraphBuilder, TConstStridedView<FSceneView> Views, bool bAllowGPUParticleUpdate)"
  },
  {
    "label": "UsesGlobalDistanceField()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "UsesGlobalDistanceField()"
  },
  {
    "label": "UsesDepthBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesDepthBuffer()"
  },
  {
    "label": "RequiresEarlyViewUniformBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresEarlyViewUniformBuffer()"
  },
  {
    "label": "RequiresRayTracingScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresRayTracingScene()"
  },
  {
    "label": "PreRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreRender(FRDGBuilder& GraphBuilder, TConstStridedView<FSceneView> Views, FSceneUniformBuffer &SceneUniformBuffer, bool bAllowGPUParticleUpdate)"
  },
  {
    "label": "PostRenderOpaque()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostRenderOpaque(FRDGBuilder& GraphBuilder, TConstStridedView<FSceneView> Views, FSceneUniformBuffer &SceneUniformBuffer, bool bAllowGPUParticleUpdate)"
  },
  {
    "label": "IsPendingKill()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPendingKill()"
  },
  {
    "label": "SetSceneTexturesUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSceneTexturesUniformBuffer(const TUniformBufferRef<FSceneTextureUniformParameters>& InSceneTexturesUniformParams)"
  },
  {
    "label": "GetSceneInterface()",
    "kind": "Method",
    "detail": "Function (} FSceneInterface*)",
    "insertText": "GetSceneInterface()"
  },
  {
    "label": "GetScene()",
    "kind": "Method",
    "detail": "Function (SceneInterface = InSceneInterface ; } FScene*)",
    "insertText": "GetScene()"
  },
  {
    "label": "FFXSystemInterface()",
    "kind": "Method",
    "detail": "Function (Scene = InScene ; } protected : class FFXSystemSet ; ~)",
    "insertText": "FFXSystemInterface()"
  },
  {
    "label": "BeginCreateGPUSpriteResources()",
    "kind": "Method",
    "detail": "Function (} private : bool bIsPendingKill = false ; FSceneInterface* SceneInterface = nullptr ; FScene* Scene = nullptr ; TMap<FName,FCreateCustomFXSystemDelegate> CreateCustomFXDelegates ; } ; FGPUSpriteResources*)",
    "insertText": "BeginCreateGPUSpriteResources(const FGPUSpriteResourceData& InResourceData)"
  },
  {
    "label": "BeginUpdateGPUSpriteResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginUpdateGPUSpriteResources(FGPUSpriteResources* Resources, const FGPUSpriteResourceData& InResourceData)"
  },
  {
    "label": "BeginReleaseGPUSpriteResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginReleaseGPUSpriteResources(FGPUSpriteResources* Resources)"
  }
]