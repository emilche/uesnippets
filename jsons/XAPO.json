[
  {
    "label": "XAPO_REGISTRATION_PROPERTIES",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "XAPO_REGISTRATION_PROPERTIES"
  },
  {
    "label": "XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS"
  },
  {
    "label": "XAPO_BUFFER_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "XAPO_BUFFER_FLAGS"
  },
  {
    "label": "XAPO_PROCESS_BUFFER_PARAMETERS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "XAPO_PROCESS_BUFFER_PARAMETERS"
  },
  {
    "label": "DEFINE_IID()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" comdecl . h \")",
    "insertText": "DEFINE_IID(IXAPO,A90BC001,E897,E897,55,E4,9E,47,00,00,00,00)"
  },
  {
    "label": "DEFINE_IID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_IID(IXAPOParameters,A90BC001,E897,E897,55,E4,9E,47,00,00,00,01)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if !)",
    "insertText": "defined(GUID_DEFS_ONLY) #if defined(_XBOX) #include <xtl.h> #include <xobjbase.h> #else #include <windows.h> #include <objbase.h> #endif #include \"audiodefs.h\" #define FACILITY_XAPO 0x897 #define XAPO_E_FORMAT_UNSUPPORTED MAKE_HRESULT(SEVERITY_ERROR, FACILITY_XAPO, 0x01) #define XAPO_MIN_CHANNELS 1 #define XAPO_MAX_CHANNELS 64 #define XAPO_MIN_FRAMERATE 1000 #define XAPO_MAX_FRAMERATE 200000 #define XAPO_REGISTRATION_STRING_LENGTH 256 #define XAPO_FLAG_CHANNELS_MUST_MATCH 0x00000001 #define XAPO_FLAG_FRAMERATE_MUST_MATCH 0x00000002 #define XAPO_FLAG_BITSPERSAMPLE_MUST_MATCH 0x00000004 #define XAPO_FLAG_BUFFERCOUNT_MUST_MATCH 0x00000008 #define XAPO_FLAG_INPLACE_REQUIRED 0x00000020 #define XAPO_FLAG_INPLACE_SUPPORTED 0x00000010 #pragma pack(push, 1)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (CLSID clsid ; WCHAR FriendlyName [ XAPO_REGISTRATION_STRING_LENGTH ] ; WCHAR CopyrightInfo [ XAPO_REGISTRATION_STRING_LENGTH ] ; UINT32 MajorVersion ; UINT32 MinorVersion ; UINT32 Flags ; UINT32 MinInputBufferCount ; UINT32 MaxInputBufferCount ; UINT32 MinOutputBufferCount ; UINT32 MaxOutputBufferCount ; } XAPO_REGISTRATION_PROPERTIES ; typedef struct XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS { const WAVEFORMATEX* pFormat ; UINT32 MaxFrameCount ; } XAPO_LOCKFORPROCESS_PARAMETERS ; typedef enum XAPO_BUFFER_FLAGS { XAPO_BUFFER_SILENT,XAPO_BUFFER_VALID,} XAPO_BUFFER_FLAGS ; typedef struct XAPO_PROCESS_BUFFER_PARAMETERS { void* pBuffer ; XAPO_BUFFER_FLAGS BufferFlags ; UINT32 ValidFrameCount ; } XAPO_PROCESS_BUFFER_PARAMETERS ; # if)",
    "insertText": "defined(_XBOX) #define XAPO_ALLOC_ATTRIBUTES MAKE_XALLOC_ATTRIBUTES ( \\ 0, \\ FALSE, \\ FALSE, \\ FALSE, \\ eXALLOCAllocatorId_XAUDIO2, \\ XALLOC_ALIGNMENT_DEFAULT, \\ XALLOC_MEMPROTECT_READWRITE, \\ FALSE, \\ XALLOC_MEMTYPE_HEAP \\ ) #define XAPOAlloc(size) XMemAlloc(size, XAPO_ALLOC_ATTRIBUTES) #define XAPOFree(p) XMemFree(p, XAPO_ALLOC_ATTRIBUTES) #else #define XAPOAlloc(size) CoTaskMemAlloc(size) #define XAPOFree(p) CoTaskMemFree(p) #endif #undef INTERFACE #define INTERFACE IXAPO DECLARE_INTERFACE_(IXAPO, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetRegistrationProperties) (THIS_ __deref_out XAPO_REGISTRATION_PROPERTIES** ppRegistrationProperties)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(IsInputFormatSupported) (THIS_ const WAVEFORMATEX* pOutputFormat, const WAVEFORMATEX* pRequestedInputFormat, __deref_opt_out WAVEFORMATEX** ppSupportedInputFormat)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(IsOutputFormatSupported) (THIS_ const WAVEFORMATEX* pInputFormat, const WAVEFORMATEX* pRequestedOutputFormat, __deref_opt_out WAVEFORMATEX** ppSupportedOutputFormat)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Initialize) (THIS_ __in_bcount_opt(DataByteSize) const void* pData, UINT32 DataByteSize)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(void, Reset) (THIS)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(LockForProcess) (THIS_ UINT32 InputLockedParameterCount, __in_ecount_opt(InputLockedParameterCount) const XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS* pInputLockedParameters, UINT32 OutputLockedParameterCount, __in_ecount_opt(OutputLockedParameterCount) const XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS* pOutputLockedParameters)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(void, UnlockForProcess) (THIS)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(void, Process) (THIS_ UINT32 InputProcessParameterCount, __in_ecount_opt(InputProcessParameterCount) const XAPO_PROCESS_BUFFER_PARAMETERS* pInputProcessParameters, UINT32 OutputProcessParameterCount, __inout_ecount_opt(OutputProcessParameterCount) XAPO_PROCESS_BUFFER_PARAMETERS* pOutputProcessParameters, BOOL IsEnabled)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(UINT32, CalcInputFrames) (THIS_ UINT32 OutputFrameCount)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(UINT32, CalcOutputFrames) (THIS_ UINT32 InputFrameCount)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (} ; # undef INTERFACE # define INTERFACE IXAPOParameters)",
    "insertText": "DECLARE_INTERFACE_(IXAPOParameters, IUnknown)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(void, SetParameters) (THIS_ __in_bcount(ParameterByteSize) const void* pParameters, UINT32 ParameterByteSize)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(void, GetParameters) (THIS_ __out_bcount(ParameterByteSize) void* pParameters, UINT32 ParameterByteSize)"
  }
]