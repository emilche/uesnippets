[
  {
    "label": "FArchiveProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveProxy"
  },
  {
    "label": "FBulkData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBulkData"
  },
  {
    "label": "FBulkDataSerializationParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBulkDataSerializationParams"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FArchiveProxy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Internationalization / TextNamespaceFwd . h \" # include \" Serialization / Archive . h \" class FArchiveProxy : public FArchive { public :)",
    "insertText": "FArchiveProxy(FArchive& InInnerArchive)"
  },
  {
    "label": "FArchiveProxy()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FArchiveProxy()"
  },
  {
    "label": "FArchiveProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FArchiveProxy(FArchiveProxy&&)"
  },
  {
    "label": "FArchiveProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FArchiveProxy(const FArchiveProxy&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchiveProxy&)",
    "insertText": "operator(FArchiveProxy&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchiveProxy&)",
    "insertText": "operator(const FArchiveProxy&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FName& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InnerArchive<<Value ; return* this ; } FArchive&)",
    "insertText": "operator(FText& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InnerArchive<<Value ; return* this ; } FArchive&)",
    "insertText": "operator(UObject*& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InnerArchive<<Value ; return* this ; } FArchive&)",
    "insertText": "operator(FObjectPtr& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InnerArchive<<Value ; return* this ; } FArchive&)",
    "insertText": "operator(FLazyObjectPtr& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InnerArchive<<Value ; return* this ; } FArchive&)",
    "insertText": "operator(FSoftObjectPath& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InnerArchive<<Value ; return* this ; } FArchive&)",
    "insertText": "operator(FSoftObjectPtr& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InnerArchive<<Value ; return* this ; } FArchive&)",
    "insertText": "operator(FWeakObjectPtr& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InnerArchive<<Value ; return* this ; } FArchive&)",
    "insertText": "operator(FField*& Value)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (InnerArchive<<Value ; return* this ; } void)",
    "insertText": "Serialize(void* V, int64 Length)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "Serialize(V, Length)"
  },
  {
    "label": "SerializeBits()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SerializeBits(void* Bits, int64 LengthBits)"
  },
  {
    "label": "SerializeBits()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "SerializeBits(Bits, LengthBits)"
  },
  {
    "label": "SerializeInt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SerializeInt(uint32& Value, uint32 Max)"
  },
  {
    "label": "SerializeInt()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "SerializeInt(Value, Max)"
  },
  {
    "label": "SerializeIntPacked()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SerializeIntPacked(uint32& Value)"
  },
  {
    "label": "SerializeIntPacked()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "SerializeIntPacked(Value)"
  },
  {
    "label": "Preload()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Preload(UObject* Object)"
  },
  {
    "label": "Preload()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "Preload(Object)"
  },
  {
    "label": "CountBytes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CountBytes(SIZE_T InNum, SIZE_T InMax)"
  },
  {
    "label": "CountBytes()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "CountBytes(InNum, InMax)"
  },
  {
    "label": "GetArchiveName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetArchiveName()"
  },
  {
    "label": "GetLinker()",
    "kind": "Method",
    "detail": "Function (FLinker*)",
    "insertText": "GetLinker()"
  },
  {
    "label": "SetLocalizationNamespace()",
    "kind": "Method",
    "detail": "Function (} # if USE_STABLE_LOCALIZATION_KEYS void)",
    "insertText": "SetLocalizationNamespace(const FString& InLocalizationNamespace)"
  },
  {
    "label": "GetLocalizationNamespace()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLocalizationNamespace()"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (# endif int64)",
    "insertText": "Tell()"
  },
  {
    "label": "TotalSize()",
    "kind": "Method",
    "detail": "Function (} int64)",
    "insertText": "TotalSize()"
  },
  {
    "label": "AtEnd()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AtEnd()"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Seek(int64 InPos)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "Seek(InPos)"
  },
  {
    "label": "AttachBulkData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AttachBulkData(UObject* Owner, FBulkData* BulkData)"
  },
  {
    "label": "AttachBulkData()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "AttachBulkData(Owner, BulkData)"
  },
  {
    "label": "DetachBulkData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DetachBulkData(FBulkData* BulkData, bool bEnsureBulkDataIsLoaded)"
  },
  {
    "label": "DetachBulkData()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "DetachBulkData(BulkData, bEnsureBulkDataIsLoaded)"
  },
  {
    "label": "SerializeBulkData()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SerializeBulkData(class FBulkData& BulkData, const struct FBulkDataSerializationParams& Params)"
  },
  {
    "label": "Precache()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Precache(int64 PrecacheOffset, int64 PrecacheSize)"
  },
  {
    "label": "SetCompressionMap()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetCompressionMap(TArray<FCompressedChunk>* CompressedChunks, ECompressionFlags CompressionFlags)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Flush()"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Close()"
  },
  {
    "label": "MarkScriptSerializationStart()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MarkScriptSerializationStart(const UObject* Obj)"
  },
  {
    "label": "MarkScriptSerializationStart()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "MarkScriptSerializationStart(Obj)"
  },
  {
    "label": "MarkScriptSerializationEnd()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MarkScriptSerializationEnd(const UObject* Obj)"
  },
  {
    "label": "MarkScriptSerializationEnd()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "MarkScriptSerializationEnd(Obj)"
  },
  {
    "label": "GetCustomVersions()",
    "kind": "Method",
    "detail": "Function (} const FCustomVersionContainer&)",
    "insertText": "GetCustomVersions()"
  },
  {
    "label": "SetCustomVersions()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCustomVersions(const FCustomVersionContainer& NewVersions)"
  },
  {
    "label": "SetCustomVersions()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "SetCustomVersions(NewVersions)"
  },
  {
    "label": "ResetCustomVersions()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetCustomVersions()"
  },
  {
    "label": "MarkSearchableName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MarkSearchableName(const TObjectPtr<const UObject>& TypeObject, const FName& ValueName)"
  },
  {
    "label": "MarkSearchableName()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "MarkSearchableName(TypeObject, ValueName)"
  },
  {
    "label": "GetArchetypeFromLoader()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetArchetypeFromLoader(const UObject* Obj)"
  },
  {
    "label": "AttachExternalReadDependency()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AttachExternalReadDependency(FExternalReadCallback& ReadCallback)"
  },
  {
    "label": "ShouldSkipProperty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldSkipProperty(const FProperty* InProperty)"
  },
  {
    "label": "UseToResolveEnumerators()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "UseToResolveEnumerators()"
  },
  {
    "label": "FlushCache()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FlushCache()"
  },
  {
    "label": "ForceBlueprintFinalization()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ForceBlueprintFinalization()"
  },
  {
    "label": "SetFilterEditorOnly()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetFilterEditorOnly(bool InFilterEditorOnly)"
  },
  {
    "label": "SetFilterEditorOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterEditorOnly(InFilterEditorOnly)"
  },
  {
    "label": "PushDebugDataString()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR void)",
    "insertText": "PushDebugDataString(const FName& DebugData)"
  },
  {
    "label": "PushDebugDataString()",
    "kind": "Method",
    "detail": "Function (InnerArchive .)",
    "insertText": "PushDebugDataString(DebugData)"
  },
  {
    "label": "PopDebugDataString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PopDebugDataString()"
  },
  {
    "label": "SetSerializedProperty()",
    "kind": "Method",
    "detail": "Function (} # endif void)",
    "insertText": "SetSerializedProperty(FProperty* InProperty)"
  },
  {
    "label": "SetSerializedProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSerializedProperty(InProperty)"
  },
  {
    "label": "SetSerializedPropertyChain()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetSerializedPropertyChain(const FArchiveSerializedPropertyChain* InSerializedPropertyChain, class FProperty* InSerializedPropertyOverride = nullptr)"
  },
  {
    "label": "SetSerializedPropertyChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSerializedPropertyChain(InSerializedPropertyChain, InSerializedPropertyOverride)"
  },
  {
    "label": "PushSerializedProperty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PushSerializedProperty(class FProperty* InProperty, const bool bIsEditorOnlyProperty)"
  },
  {
    "label": "PushSerializedProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushSerializedProperty(InProperty, bIsEditorOnlyProperty)"
  },
  {
    "label": "PopSerializedProperty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PopSerializedProperty(class FProperty* InProperty, const bool bIsEditorOnlyProperty)"
  },
  {
    "label": "PopSerializedProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopSerializedProperty(InProperty, bIsEditorOnlyProperty)"
  },
  {
    "label": "IsEditorOnlyPropertyOnTheStack()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITORONLY_DATA bool)",
    "insertText": "IsEditorOnlyPropertyOnTheStack()"
  },
  {
    "label": "IsProxyOf()",
    "kind": "Method",
    "detail": "Function (} # endif bool)",
    "insertText": "IsProxyOf(FArchive* InOther)"
  },
  {
    "label": "GetCacheableArchive()",
    "kind": "Method",
    "detail": "Function (} FArchive*)",
    "insertText": "GetCacheableArchive()"
  },
  {
    "label": "GetInnermostState()",
    "kind": "Method",
    "detail": "Function (}::FArchiveState&)",
    "insertText": "GetInnermostState()"
  }
]