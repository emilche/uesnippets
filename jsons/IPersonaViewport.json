[
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "IPinnedCommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPinnedCommandList"
  },
  {
    "label": "IPersonaViewportState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPersonaViewportState"
  },
  {
    "label": "FPersonaViewportNotificationOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPersonaViewportNotificationOptions"
  },
  {
    "label": "IPersonaViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaViewport"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Framework / MultiBox / MultiBoxExtender . h \" # include \" Logging / TokenizedMessage . h \" class FEditorViewportClient ; class IPinnedCommandList ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(FReply, FPersonaViewportKeyDownDelegate, const FGeometry&, const FKeyEvent&)"
  },
  {
    "label": "FPersonaViewportNotificationOptions()",
    "kind": "Method",
    "detail": "Function (struct IPersonaViewportState { } ; struct FPersonaViewportNotificationOptions {)",
    "insertText": "FPersonaViewportNotificationOptions()"
  },
  {
    "label": "FPersonaViewportNotificationOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPersonaViewportNotificationOptions(const TAttribute<EVisibility> InOnGetVisibility) :OnGetVisibility(InOnGetVisibility)"
  },
  {
    "label": "SaveState()",
    "kind": "Method",
    "detail": "Function (} ; TAttribute<EVisibility> OnGetVisibility ; TAttribute<const FSlateBrush*> OnGetBrushOverride ; } ; class IPersonaViewport : public SCompoundWidget { public : TSharedRef<IPersonaViewportState>)",
    "insertText": "SaveState()"
  },
  {
    "label": "RestoreState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreState(TSharedRef<IPersonaViewportState> InState)"
  },
  {
    "label": "GetViewportClient()",
    "kind": "Method",
    "detail": "Function (FEditorViewportClient&)",
    "insertText": "GetViewportClient()"
  },
  {
    "label": "GetPinnedCommandList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IPinnedCommandList>)",
    "insertText": "GetPinnedCommandList()"
  },
  {
    "label": "AddNotification()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SWidget>)",
    "insertText": "AddNotification(TAttribute<EMessageSeverity::Type> InSeverity, TAttribute<bool> InCanBeDismissed, const TSharedRef<SWidget>& InNotificationWidget, FPersonaViewportNotificationOptions InOptions)"
  },
  {
    "label": "RemoveNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNotification(const TWeakPtr<SWidget>& InContainingWidget)"
  },
  {
    "label": "AddToolbarExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToolbarExtender(FName MenuToExtend, FMenuExtensionDelegate MenuBuilderDelegate)"
  },
  {
    "label": "GetKeyDownDelegate()",
    "kind": "Method",
    "detail": "Function (FPersonaViewportKeyDownDelegate&)",
    "insertText": "GetKeyDownDelegate()"
  },
  {
    "label": "AddOverlayWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOverlayWidget(TSharedRef<SWidget> InOverlaidWidget, int32 ZOrder=INDEX_NONE)"
  },
  {
    "label": "RemoveOverlayWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveOverlayWidget(TSharedRef<SWidget> InOverlaidWidget)"
  }
]