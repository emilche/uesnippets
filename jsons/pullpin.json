[
  {
    "label": "CPullPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CPullPin"
  },
  {
    "label": "ThreadMsg",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ThreadMsg"
  },
  {
    "label": "ThreadProc()",
    "kind": "Method",
    "detail": "Function (# ifndef __PULLPIN_H__ # define __PULLPIN_H__ class CPullPin : public CAMThread { IAsyncReader* m_pReader ; REFERENCE_TIME m_tStart ; REFERENCE_TIME m_tStop ; REFERENCE_TIME m_tDuration ; BOOL m_bSync ; enum ThreadMsg { TM_Pause,TM_Start,TM_Exit,} ; ThreadMsg m_State ; DWORD)",
    "insertText": "ThreadProc(void)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Process(void)"
  },
  {
    "label": "CleanupCancelled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupCancelled(void)"
  },
  {
    "label": "PauseThread()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "PauseThread()"
  },
  {
    "label": "StartThread()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "StartThread()"
  },
  {
    "label": "StopThread()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "StopThread()"
  },
  {
    "label": "QueueSample()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "QueueSample(__inout REFERENCE_TIME& tCurrent, REFERENCE_TIME tAlignStop, BOOL bDiscontinuity)"
  },
  {
    "label": "CollectAndDeliver()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CollectAndDeliver(REFERENCE_TIME tStart, REFERENCE_TIME tStop)"
  },
  {
    "label": "DeliverSample()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "DeliverSample(IMediaSample* pSample, REFERENCE_TIME tStart, REFERENCE_TIME tStop)"
  },
  {
    "label": "CPullPin()",
    "kind": "Method",
    "detail": "Function (protected : IMemAllocator* m_pAlloc ; public :)",
    "insertText": "CPullPin()"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Connect(IUnknown* pUnk, IMemAllocator* pAlloc, BOOL bSync)"
  },
  {
    "label": "Disconnect()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Disconnect()"
  },
  {
    "label": "DecideAllocator()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "DecideAllocator(IMemAllocator* pAlloc, __inout_opt ALLOCATOR_PROPERTIES * pProps)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Seek(REFERENCE_TIME tStart, REFERENCE_TIME tStop)"
  },
  {
    "label": "Duration()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Duration(__out REFERENCE_TIME* ptDuration)"
  },
  {
    "label": "Active()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Active(void)"
  },
  {
    "label": "Inactive()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Inactive(void)"
  },
  {
    "label": "AlignDown()",
    "kind": "Method",
    "detail": "Function (LONGLONG)",
    "insertText": "AlignDown(LONGLONG ll, LONG lAlign)"
  },
  {
    "label": "AlignUp()",
    "kind": "Method",
    "detail": "Function (} ; LONGLONG)",
    "insertText": "AlignUp(LONGLONG ll, LONG lAlign)"
  },
  {
    "label": "GetReader()",
    "kind": "Method",
    "detail": "Function (} ; IAsyncReader*)",
    "insertText": "GetReader()"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (m_pReader ->)",
    "insertText": "AddRef()"
  },
  {
    "label": "EndOfStream()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "EndOfStream(void)"
  },
  {
    "label": "OnError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnError(HRESULT hr)"
  },
  {
    "label": "BeginFlush()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "BeginFlush()"
  },
  {
    "label": "EndFlush()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "EndFlush()"
  }
]