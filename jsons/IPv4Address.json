[
  {
    "label": "FIPv4Address",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIPv4Address"
  },
  {
    "label": "GCC_ALIGN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Interfaces / IPv4 / IPv4SubnetMask . h \" # include \" Internationalization / Text . h \" # include \" Serialization / Archive . h \" struct FIPv4Address { union { struct { # if PLATFORM_LITTLE_ENDIAN # ifdef _MSC_VER uint8 D,C,B,A ; # else uint8 D)",
    "insertText": "GCC_ALIGN(4)"
  },
  {
    "label": "FIPv4Address()",
    "kind": "Method",
    "detail": "Function (uint8 C,B,A ; # endif # else uint8 A,B,C,D ; # endif } ; uint32 Value ; } ; public :)",
    "insertText": "FIPv4Address()"
  },
  {
    "label": "FIPv4Address()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FIPv4Address(uint8 InA, uint8 InB, uint8 InC, uint8 InD) #if PLATFORM_LITTLE_ENDIAN : D(InD) , C(InC) , B(InB) , A(InA) #else : A(InA) , B(InB) , C(InC) , D(InD)"
  },
  {
    "label": "FIPv4Address()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FIPv4Address(uint32 InValue) : Value(InValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "operator(const FIPv4Address& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FIPv4Address)",
    "insertText": "operator(const FIPv4SubnetMask& SubnetMask)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FIPv4Address& IpAddress)"
  },
  {
    "label": "IsLinkLocal()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsLinkLocal()"
  },
  {
    "label": "IsLinkLocalMulticast()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsLinkLocalMulticast()"
  },
  {
    "label": "IsLoopbackAddress()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsLoopbackAddress()"
  },
  {
    "label": "IsMulticastAddress()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsMulticastAddress()"
  },
  {
    "label": "IsOrganizationLocalMulticast()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsOrganizationLocalMulticast()"
  },
  {
    "label": "IsSiteLocalAddress()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSiteLocalAddress()"
  },
  {
    "label": "IsSiteLocalMulticast()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSiteLocalMulticast()"
  },
  {
    "label": "IsSessionFrontendMulticast()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSessionFrontendMulticast()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToString()"
  },
  {
    "label": "ToText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ToText()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} public : uint32)",
    "insertText": "GetTypeHash(const FIPv4Address& Address)"
  }
]