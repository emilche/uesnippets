[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FTranslationPickerInputProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTranslationPickerInputProcessor"
  },
  {
    "label": "FWidgetStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetStyle"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FTranslationPickerTextItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTranslationPickerTextItem"
  },
  {
    "label": "STranslationPickerFloatingWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STranslationPickerFloatingWindow"
  },
  {
    "label": "STranslationPickerOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STranslationPickerOverlay"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Layout / PaintGeometry . h \" # include \" Layout / WidgetPath . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / SListView . h \" class FPaintArgs ; class FSlateRect ; class FSlateWindowElementList ; class FText ; class FTranslationPickerInputProcessor ; class FWidgetStyle ; class ITableRow ; class STableViewBase ; class SToolTip ; class SWidget ; class SWindow ; struct FGeometry ; struct FTranslationPickerTextItem ; # define LOCTEXT_NAMESPACE \" TranslationPicker \" class STranslationPickerFloatingWindow : public SCompoundWidget {)",
    "insertText": "SLATE_BEGIN_ARGS(STranslationPickerFloatingWindow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakPtr<SWindow>, ParentWindow) SLATE_END_ARGS() virtual ~STranslationPickerFloatingWindow()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (private : class FTranslationPickerInputProcessor ; FReply)",
    "insertText": "Close()"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "Exit()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "PickTextFromWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PickTextFromWidget(TSharedRef<SWidget> Widget, const FWidgetPath& Path, bool IsToolTip)"
  },
  {
    "label": "PickTextFromChildWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PickTextFromChildWidgets(TSharedRef<SWidget> Widget, const FWidgetPath& Path, bool IsToolTip)"
  },
  {
    "label": "SwitchToEditWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SwitchToEditWindow()"
  },
  {
    "label": "GetNearestPoint()",
    "kind": "Method",
    "detail": "Function (FVector2f)",
    "insertText": "GetNearestPoint(const FSlateRect& Rect, const FVector2f& Point, bool& Contains)"
  },
  {
    "label": "DistSquaredToRect()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "DistSquaredToRect(const FSlateRect& Rect, const FVector2f& Point, bool& Contains)"
  },
  {
    "label": "IsNearlyEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNearlyEqual(const FSlateRect& RectLHS, const FSlateRect& RectRHS)"
  },
  {
    "label": "GetRect()",
    "kind": "Method",
    "detail": "Function (FSlateRect)",
    "insertText": "GetRect(const FPaintGeometry& Geometry)"
  },
  {
    "label": "UpdateListItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateListItems()"
  },
  {
    "label": "SetViewportMouseIgnoreLook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewportMouseIgnoreLook(bool bLookIgnore)"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetWorld()"
  },
  {
    "label": "GetPaintGeometry()",
    "kind": "Method",
    "detail": "Function (FPaintGeometry)",
    "insertText": "GetPaintGeometry(const TSharedPtr<SWidget>& PickedWidget, const FWidgetPath& PickedPath, bool IsToolTip)"
  },
  {
    "label": "GetGeometry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetGeometry(const TSharedRef<const SWidget>& Widget, FPaintGeometry& PaintGeometry, const FSlateLayoutTransform& TransformOffset)"
  },
  {
    "label": "TextListView_OnGenerateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "TextListView_OnGenerateWidget(TSharedPtr<FTranslationPickerTextItem> InItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTranslationPickerInputProcessor> InputProcessor ; TWeakPtr<SWindow> ParentWindow ; TSharedPtr<SToolTip> WindowContents ; TArray<TSharedPtr<FTranslationPickerTextItem>> TextListItems ; typedef SListView<TSharedPtr<FTranslationPickerTextItem>> STextListView ; TSharedPtr<STextListView> TextListView ; FVector2f MousePosPrev ; FWeakWidgetPath LastTickHoveringWidgetPath ; bool bMouseLookInputIgnored = false ; } ; class STranslationPickerOverlay : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(STranslationPickerOverlay)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (_Visibility = EVisibility::HitTestInvisible ; })",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (} private : int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  }
]