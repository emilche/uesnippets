[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FTranslationPickerInputProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTranslationPickerInputProcessor"
  },
  {
    "label": "FWidgetStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetStyle"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FTranslationPickerTextItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTranslationPickerTextItem"
  },
  {
    "label": "STranslationPickerFloatingWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STranslationPickerFloatingWindow"
  },
  {
    "label": "FTranslationPickerInputProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTranslationPickerInputProcessor"
  },
  {
    "label": "STranslationPickerOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STranslationPickerOverlay"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "Close()"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "Exit()"
  },
  {
    "label": "PickTextFromWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PickTextFromWidget(TSharedRef<SWidget> Widget, const FWidgetPath& Path, bool IsToolTip)"
  },
  {
    "label": "PickTextFromChildWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PickTextFromChildWidgets(TSharedRef<SWidget> Widget, const FWidgetPath& Path, bool IsToolTip)"
  },
  {
    "label": "SwitchToEditWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SwitchToEditWindow()"
  },
  {
    "label": "GetNearestPoint()",
    "kind": "Method",
    "detail": "Function (FVector2f)",
    "insertText": "GetNearestPoint(const FSlateRect& Rect, const FVector2f& Point, bool& Contains)"
  },
  {
    "label": "DistSquaredToRect()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "DistSquaredToRect(const FSlateRect& Rect, const FVector2f& Point, bool& Contains)"
  },
  {
    "label": "IsNearlyEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNearlyEqual(const FSlateRect& RectLHS, const FSlateRect& RectRHS)"
  },
  {
    "label": "GetRect()",
    "kind": "Method",
    "detail": "Function (FSlateRect)",
    "insertText": "GetRect(const FPaintGeometry& Geometry)"
  },
  {
    "label": "UpdateListItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateListItems()"
  },
  {
    "label": "SetViewportMouseIgnoreLook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewportMouseIgnoreLook(bool bLookIgnore)"
  },
  {
    "label": "TextListView_OnGenerateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "TextListView_OnGenerateWidget(TSharedPtr<FTranslationPickerTextItem> InItem, const TSharedRef<STableViewBase>& OwnerTable)"
  }
]