[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TCompressedFloatDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCompressedFloatDetails"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "FObjectInitializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectInitializer"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "FModuleInputSetup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FModuleInputSetup"
  },
  {
    "label": "FModuleInputSetup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FModuleInputSetup"
  },
  {
    "label": "FModuleInputSetup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FModuleInputSetup"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "type()",
    "kind": "Method",
    "detail": "Function (different)",
    "insertText": "type(e.g. Val = FVector(1, 1, 1)"
  },
  {
    "label": "Result()",
    "kind": "Method",
    "detail": "Function (FModuleInputValue)",
    "insertText": "Result(Lhs)"
  },
  {
    "label": "Result()",
    "kind": "Method",
    "detail": "Function (FModuleInputValue)",
    "insertText": "Result(Lhs)"
  },
  {
    "label": "Result()",
    "kind": "Method",
    "detail": "Function (FModuleInputValue)",
    "insertText": "Result(Lhs)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, UPackageMap* Map, bool& bOutSuccess)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(const FModuleInputValue& From)"
  },
  {
    "label": "SetMagnitude()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMagnitude(float NewSize)"
  },
  {
    "label": "IsNonZero()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsNonZero()"
  },
  {
    "label": "MAxis2D()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MAxis2D(Value.X, Value.Y)"
  },
  {
    "label": "CalcControlFunction()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalcControlFunction(float InputValue)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(TArray<FModuleInputSetup>& SetupData, FInputNameMap& NameMapOut)"
  },
  {
    "label": "ZeroValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ZeroValues()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, UPackageMap* Map, bool& bOutSuccess)"
  },
  {
    "label": "AddInput()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddInput(EModuleInputValueType Type, TSubclassOf<UDefaultModularVehicleInputModifier>& InputModifierClass)"
  },
  {
    "label": "RemoveAllInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllInputs()"
  },
  {
    "label": "Lerp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Lerp(const FModuleInputContainer& Min, const FModuleInputContainer& Max, float Alpha)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(const FModuleInputContainer& From)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(const FName& InName, const FModuleInputValue& InValue)"
  },
  {
    "label": "MergeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeValue(const FName& InName, const FModuleInputValue& InValue)"
  }
]