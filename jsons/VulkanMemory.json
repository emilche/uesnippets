[
  {
    "label": "FVulkanCommandListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandListContext"
  },
  {
    "label": "FVulkanDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDevice"
  },
  {
    "label": "FVulkanQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanQueue"
  },
  {
    "label": "FVulkanCmdBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCmdBuffer"
  },
  {
    "label": "FVulkanTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanTexture"
  },
  {
    "label": "TVulkanTrackBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TVulkanTrackBase"
  },
  {
    "label": "FFenceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFenceManager"
  },
  {
    "label": "FDeviceMemoryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeviceMemoryManager"
  },
  {
    "label": "FDeviceMemoryAllocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeviceMemoryAllocation"
  },
  {
    "label": "FVulkanSubresourceAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanSubresourceAllocator"
  },
  {
    "label": "FVulkanResourceHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanResourceHeap"
  },
  {
    "label": "FMemoryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryManager"
  },
  {
    "label": "FRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRange"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FVulkanAllocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanAllocation"
  },
  {
    "label": "FVulkanAllocationInternal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanAllocationInternal"
  },
  {
    "label": "FResourceHeapStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceHeapStats"
  },
  {
    "label": "FVulkanEvictable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanEvictable"
  },
  {
    "label": "FVulkanTrackInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanTrackInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EVulkanAllocationType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EVulkanAllocationType"
  },
  {
    "label": "EVulkanAllocationMetaType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EVulkanAllocationMetaType"
  },
  {
    "label": "ELegacyVulkanAllocationFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELegacyVulkanAllocationFlags"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRefCount",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRefCount"
  },
  {
    "label": "FDeviceChild",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeviceChild"
  },
  {
    "label": "FDeviceMemoryAllocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeviceMemoryAllocation"
  },
  {
    "label": "FDeviceMemoryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeviceMemoryManager"
  },
  {
    "label": "FDeviceMemoryBlockKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeviceMemoryBlockKey"
  },
  {
    "label": "FDeviceMemoryBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeviceMemoryBlock"
  },
  {
    "label": "FFreeBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreeBlock"
  },
  {
    "label": "FDeviceMemoryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeviceMemoryManager"
  },
  {
    "label": "FMemoryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryManager"
  },
  {
    "label": "FHeapInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeapInfo"
  },
  {
    "label": "FRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRange"
  },
  {
    "label": "FVulkanPageSizeBucket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanPageSizeBucket"
  },
  {
    "label": "FVulkanAllocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanAllocation"
  },
  {
    "label": "FVulkanAllocationInternal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanAllocationInternal"
  },
  {
    "label": "FVulkanSubresourceAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanSubresourceAllocator"
  },
  {
    "label": "FMemoryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryManager"
  },
  {
    "label": "FVulkanResourceHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanResourceHeap"
  },
  {
    "label": "FVulkanResourceHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanResourceHeap"
  },
  {
    "label": "FMemoryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryManager"
  },
  {
    "label": "FVulkanSubresourceAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanSubresourceAllocator"
  },
  {
    "label": "EVulkanFreeFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EVulkanFreeFlags"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMemoryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryManager"
  },
  {
    "label": "FVulkanAllocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanAllocation"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVulkanResourceHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanResourceHeap"
  },
  {
    "label": "FUBPendingFree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUBPendingFree"
  },
  {
    "label": "FStagingBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStagingBuffer"
  },
  {
    "label": "FStagingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStagingManager"
  },
  {
    "label": "FStagingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStagingManager"
  },
  {
    "label": "FMemoryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryManager"
  },
  {
    "label": "FPendingItemsPerCmdBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingItemsPerCmdBuffer"
  },
  {
    "label": "FPendingItems",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingItems"
  },
  {
    "label": "FFreeEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreeEntry"
  },
  {
    "label": "FFence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFence"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFenceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFenceManager"
  },
  {
    "label": "FFenceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFenceManager"
  },
  {
    "label": "FGPUEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUEvent"
  },
  {
    "label": "FTempBlockAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTempBlockAllocator"
  },
  {
    "label": "FTempMemoryBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTempMemoryBlock"
  },
  {
    "label": "FInternalAlloc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInternalAlloc"
  },
  {
    "label": "VULKANRHI_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VULKANRHI_API"
  },
  {
    "label": "FVulkanCustomMemManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanCustomMemManager"
  },
  {
    "label": "FType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FType"
  },
  {
    "label": "L()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "L(&Lock)"
  },
  {
    "label": "L()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "L(&Lock)"
  },
  {
    "label": "L()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "L(&Lock)"
  },
  {
    "label": "Unmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unmap()"
  },
  {
    "label": "FlushMappedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushMappedMemory(VkDeviceSize InOffset, VkDeviceSize InSize)"
  },
  {
    "label": "InvalidateMappedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateMappedMemory(VkDeviceSize InOffset, VkDeviceSize InSize)"
  },
  {
    "label": "UpdateMemoryProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMemoryProperties()"
  },
  {
    "label": "FDeviceMemoryManager()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FDeviceMemoryManager()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FVulkanDevice* InDevice)"
  },
  {
    "label": "Deinit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinit()"
  },
  {
    "label": "GetEvictedMemoryProperties()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetEvictedMemoryProperties()"
  },
  {
    "label": "GetPrimaryHeapStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPrimaryHeapStatus(uint64& OutAllocated, uint64& OutLimit)"
  },
  {
    "label": "GetMemoryTypeFromProperties()",
    "kind": "Method",
    "detail": "Function (VkResult)",
    "insertText": "GetMemoryTypeFromProperties(uint32 TypeBits, VkMemoryPropertyFlags Properties, uint32* OutTypeIndex)"
  },
  {
    "label": "GetMemoryTypeFromPropertiesExcluding()",
    "kind": "Method",
    "detail": "Function (VkResult)",
    "insertText": "GetMemoryTypeFromPropertiesExcluding(uint32 TypeBits, VkMemoryPropertyFlags Properties, uint32 ExcludeTypeIndex, uint32* OutTypeIndex)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(FDeviceMemoryAllocation*& Allocation)"
  },
  {
    "label": "GetHeapIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetHeapIndex(uint32 MemoryTypeIndex)"
  },
  {
    "label": "FreeInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeInternal(FDeviceMemoryAllocation* Allocation)"
  },
  {
    "label": "TrimMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimMemory(bool bFullTrim)"
  },
  {
    "label": "GetMemoryDump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMemoryDump(TArray<FResourceHeapStats>& OutDeviceHeapsStats)"
  },
  {
    "label": "DumpMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMemory()"
  },
  {
    "label": "JoinConsecutiveRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JoinConsecutiveRanges(TArray<FRange>& Ranges)"
  },
  {
    "label": "InsertAndTryToMerge()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "InsertAndTryToMerge(TArray<FRange>& Ranges, const FRange& Item, int32 ProposedIndex)"
  },
  {
    "label": "AppendAndTryToMerge()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AppendAndTryToMerge(TArray<FRange>& Ranges, const FRange& Item)"
  },
  {
    "label": "AllocateFromEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateFromEntry(TArray<FRange>& Ranges, int32 Index, uint32 SizeToAllocate)"
  },
  {
    "label": "SanityCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SanityCheck(TArray<FRange>& Ranges)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Add(TArray<FRange>& Ranges, const FRange& Item)"
  },
  {
    "label": "FVulkanAllocation()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanAllocation()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(EVulkanAllocationType Type, EVulkanAllocationMetaType MetaType, uint64 Handle, uint32 InSize, uint32 AlignedOffset, uint32 AllocatorIndex, uint32 AllocationIndex, uint32 BufferId)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(FVulkanDevice& Device)"
  },
  {
    "label": "Swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Swap(FVulkanAllocation& Other)"
  },
  {
    "label": "Reference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reference(const FVulkanAllocation& Other)"
  },
  {
    "label": "Disown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Disown()"
  },
  {
    "label": "Own()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Own()"
  },
  {
    "label": "FlushMappedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushMappedMemory(FVulkanDevice* Device)"
  },
  {
    "label": "InvalidateMappedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateMappedMemory(FVulkanDevice* Device)"
  },
  {
    "label": "BindBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindBuffer(FVulkanDevice* Device, VkBuffer Buffer)"
  },
  {
    "label": "BindImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindImage(FVulkanDevice* Device, VkImage Image)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FVulkanAllocation& Alloc, FVulkanEvictable* InAllocationOwner, uint32 AllocationOffset, uint32 AllocationSize, uint32 Alignment)"
  },
  {
    "label": "FVulkanSubresourceAllocator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanSubresourceAllocator(EVulkanAllocationType InType, FMemoryManager* InOwner, uint8 InSubResourceAllocatorFlags, FDeviceMemoryAllocation* InDeviceMemoryAllocation,\n\t\t\tuint32 InMemoryTypeIndex, VkMemoryPropertyFlags InMemoryPropertyFlags,\n\t\t\tuint32 InAlignment, VkBuffer InBuffer, uint32 InBufferSize, uint32 InBufferId, VkBufferUsageFlags InBufferUsageFlags, int32 InPoolSizeIndex)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy(FVulkanDevice* Device)"
  },
  {
    "label": "TryAllocate2()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryAllocate2(FVulkanAllocation& OutAllocation, FVulkanEvictable* Owner, uint32 InSize, uint32 InAlignment, EVulkanAllocationMetaType InMetaType, const char* File, uint32 Line)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(FVulkanAllocation& Allocation)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush(VkDeviceSize Offset, VkDeviceSize AllocationSize)"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate(VkDeviceSize Offset, VkDeviceSize AllocationSize)"
  },
  {
    "label": "GetMemoryUsed()",
    "kind": "Method",
    "detail": "Function (TArrayView<uint32>)",
    "insertText": "GetMemoryUsed()"
  },
  {
    "label": "GetNumSubAllocations()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumSubAllocations()"
  },
  {
    "label": "DumpFullHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpFullHeap()"
  },
  {
    "label": "DefragTick()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DefragTick(FVulkanDevice& Device, FVulkanCommandListContext& Context, FVulkanResourceHeap* Heap, uint32 Count)"
  },
  {
    "label": "CanDefrag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDefrag()"
  },
  {
    "label": "EvictToHost()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "EvictToHost(FVulkanDevice& Device, FVulkanCommandListContext& Context)"
  },
  {
    "label": "SetFreePending()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFreePending(FVulkanAllocation& Allocation)"
  },
  {
    "label": "FreeInternalData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeInternalData(int32 Index)"
  },
  {
    "label": "AllocateInternalData()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AllocateInternalData()"
  },
  {
    "label": "JoinFreeBlocks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "JoinFreeBlocks()"
  },
  {
    "label": "FVulkanResourceHeap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanResourceHeap(FMemoryManager* InOwner, uint32 InMemoryTypeIndex, uint32 InOverridePageSize = 0)"
  },
  {
    "label": "FreePage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreePage(FVulkanSubresourceAllocator* InPage)"
  },
  {
    "label": "ReleasePage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleasePage(FVulkanSubresourceAllocator* InPage)"
  },
  {
    "label": "ReleaseFreedPages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseFreedPages(bool bImmediately)"
  },
  {
    "label": "EvictOne()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "EvictOne(FVulkanDevice& Device, FVulkanCommandListContext& Context)"
  },
  {
    "label": "DefragTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefragTick(FVulkanDevice& Device, FVulkanCommandListContext& Context, uint32 Count)"
  },
  {
    "label": "DumpMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMemory(FResourceHeapStats& Stats)"
  },
  {
    "label": "SetDefragging()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefragging(FVulkanSubresourceAllocator* Allocator)"
  },
  {
    "label": "GetIsDefragging()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsDefragging(FVulkanSubresourceAllocator* Allocator)"
  },
  {
    "label": "GetPageSizeBucket()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPageSizeBucket(FVulkanPageSizeBucket& BucketOut, EType Type, uint32 AllocationSize, bool bForceSingleAllocation)"
  },
  {
    "label": "GetPageSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPageSize()"
  },
  {
    "label": "TryRealloc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRealloc(FVulkanAllocation& OutAllocation, FVulkanEvictable* AllocationOwner, EType Type, uint32 Size, uint32 Alignment, EVulkanAllocationMetaType MetaType)"
  },
  {
    "label": "AllocateResource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateResource(FVulkanAllocation& OutAllocation, FVulkanEvictable* AllocationOwner, EType Type, uint32 Size, uint32 Alignment, bool bMapAllocation, bool bForceSeparateAllocation, EVulkanAllocationMetaType MetaType, bool bExternal, const char* File, uint32 Line)"
  },
  {
    "label": "AllocateDedicatedImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateDedicatedImage(FVulkanAllocation& OutAllocation, FVulkanEvictable* AllocationOwner, VkImage Image, uint32 Size, uint32 Alignment, EVulkanAllocationMetaType MetaType, bool bExternal, const char* File, uint32 Line)"
  },
  {
    "label": "FMemoryManager()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMemoryManager(FVulkanDevice* InDevice)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Deinit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinit()"
  },
  {
    "label": "CalculateBufferAlignment()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "CalculateBufferAlignment(FVulkanDevice& InDevice, EBufferUsageFlags InUEUsage, bool bZeroSize)"
  },
  {
    "label": "CalculateBufferPriority()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateBufferPriority(const VkBufferUsageFlags BufferUsageFlags)"
  },
  {
    "label": "FreeVulkanAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeVulkanAllocation(FVulkanAllocation& Allocation, EVulkanFreeFlags FreeFlags = EVulkanFreeFlag_None)"
  },
  {
    "label": "FreeVulkanAllocationPooledBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeVulkanAllocationPooledBuffer(FVulkanAllocation& Allocation)"
  },
  {
    "label": "FreeVulkanAllocationBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeVulkanAllocationBuffer(FVulkanAllocation& Allocation)"
  },
  {
    "label": "FreeVulkanAllocationImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeVulkanAllocationImage(FVulkanAllocation& Allocation)"
  },
  {
    "label": "FreeVulkanAllocationImageDedicated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeVulkanAllocationImageDedicated(FVulkanAllocation& Allocation)"
  },
  {
    "label": "AllocateBufferPooled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateBufferPooled(FVulkanAllocation& Allocation, FVulkanEvictable* AllocationOwner, uint32 Size, uint32 MinAlignment, VkBufferUsageFlags BufferUsageFlags, VkMemoryPropertyFlags MemoryPropertyFlags, EVulkanAllocationMetaType MetaType, const char* File, uint32 Line)"
  },
  {
    "label": "AllocateImageMemory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateImageMemory(FVulkanAllocation& Allocation, FVulkanEvictable* AllocationOwner, const VkMemoryRequirements& MemoryReqs, VkMemoryPropertyFlags MemoryPropertyFlags, EVulkanAllocationMetaType MetaType, bool bExternal, const char* File, uint32 Line)"
  },
  {
    "label": "AllocateDedicatedImageMemory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateDedicatedImageMemory(FVulkanAllocation& Allocation, FVulkanEvictable* AllocationOwner, VkImage Image, const VkMemoryRequirements& MemoryReqs, VkMemoryPropertyFlags MemoryPropertyFlags, EVulkanAllocationMetaType MetaType, bool bExternal, const char* File, uint32 Line)"
  },
  {
    "label": "AllocateBufferMemory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateBufferMemory(FVulkanAllocation& Allocation, FVulkanEvictable* AllocationOwner, const VkMemoryRequirements& MemoryReqs, VkMemoryPropertyFlags MemoryPropertyFlags, EVulkanAllocationMetaType MetaType, bool bExternal, bool bForceSeparateAllocation, const char* File, uint32 Line)"
  },
  {
    "label": "AllocateBufferMemory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateBufferMemory(FVulkanAllocation& OutAllocation, VkBuffer InBuffer, EVulkanAllocationFlags InAllocFlags, const TCHAR* InDebugName, uint32 InForceMinAlignment = 1)"
  },
  {
    "label": "RegisterSubresourceAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterSubresourceAllocator(FVulkanSubresourceAllocator* SubresourceAllocator)"
  },
  {
    "label": "UnregisterSubresourceAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSubresourceAllocator(FVulkanSubresourceAllocator* SubresourceAllocator)"
  },
  {
    "label": "ReleaseSubresourceAllocator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReleaseSubresourceAllocator(FVulkanSubresourceAllocator* SubresourceAllocator)"
  },
  {
    "label": "ReleaseFreedPages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseFreedPages(FVulkanCommandListContext& Context)"
  },
  {
    "label": "DumpMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMemory(bool bFullDump = true)"
  },
  {
    "label": "AllocUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocUniformBuffer(FVulkanAllocation& OutAllocation, uint32 Size)"
  },
  {
    "label": "FreeUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeUniformBuffer(FVulkanAllocation& InAllocation)"
  },
  {
    "label": "HandleOOM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOOM(bool bCanResume = false, VkResult Result = VK_SUCCESS, uint64 AllocationSize = 0, uint32 MemoryTypeIndex = 0)"
  },
  {
    "label": "UpdateEvictThreshold()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateEvictThreshold(bool bLog)"
  },
  {
    "label": "ScopedReadLock()",
    "kind": "Method",
    "detail": "Function (FRWScopeLock)",
    "insertText": "ScopedReadLock(AllBufferAllocationsLock, SLT_ReadOnly)"
  },
  {
    "label": "ReleaseFreedResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseFreedResources(bool bImmediately)"
  },
  {
    "label": "DestroyResourceAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyResourceAllocations()"
  },
  {
    "label": "ProcessPendingUBFreesNoLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPendingUBFreesNoLock(bool bForce)"
  },
  {
    "label": "ProcessPendingUBFrees()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPendingUBFrees(bool bForce)"
  },
  {
    "label": "FStagingBuffer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FStagingBuffer(FVulkanDevice* InDevice)"
  },
  {
    "label": "FlushMappedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushMappedMemory()"
  },
  {
    "label": "InvalidateMappedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateMappedMemory()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "Deinit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinit()"
  },
  {
    "label": "ReleaseBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseBuffer(FVulkanCmdBuffer* CmdBuffer, FStagingBuffer*& StagingBuffer)"
  },
  {
    "label": "ProcessPendingFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPendingFree(bool bImmediately, bool bFreeToOS)"
  },
  {
    "label": "GetMemoryDump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMemoryDump(FResourceHeapStats& Stats)"
  },
  {
    "label": "DumpMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMemory()"
  },
  {
    "label": "ProcessPendingFreeNoLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPendingFreeNoLock(bool bImmediately, bool bFreeToOS)"
  },
  {
    "label": "FFence()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FFence(FVulkanDevice* InDevice, FFenceManager* InOwner, bool bCreateSignaled)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FVulkanDevice* InDevice)"
  },
  {
    "label": "Deinit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinit()"
  },
  {
    "label": "CheckFenceState()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CheckFenceState(Fence)"
  },
  {
    "label": "WaitForFence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitForFence(FFence* Fence, uint64 TimeInNanoseconds)"
  },
  {
    "label": "ResetFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetFence(FFence* Fence)"
  },
  {
    "label": "ReleaseFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseFence(FFence*& Fence)"
  },
  {
    "label": "WaitAndReleaseFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitAndReleaseFence(FFence*& Fence, uint64 TimeInNanoseconds)"
  },
  {
    "label": "CheckFenceState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckFenceState(FFence* Fence)"
  },
  {
    "label": "DestroyFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyFence(FFence* Fence)"
  },
  {
    "label": "FGPUEvent()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FGPUEvent(FVulkanDevice* InDevice)"
  },
  {
    "label": "UpdateBlocks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBlocks()"
  },
  {
    "label": "InternalAlloc()",
    "kind": "Method",
    "detail": "Function (FInternalAlloc)",
    "insertText": "InternalAlloc(uint32 InSize, FVulkanCmdBuffer* CmdBuffer)"
  },
  {
    "label": "FSemaphore()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSemaphore(FVulkanDevice& InDevice)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(void* pUserData, void* pMem)"
  },
  {
    "label": "InternalAllocationNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalAllocationNotification(void* pUserData, size_t size, VkInternalAllocationType allocationType, VkSystemAllocationScope allocationScope)"
  },
  {
    "label": "InternalFreeNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalFreeNotification(void* pUserData, size_t size, VkInternalAllocationType allocationType, VkSystemAllocationScope allocationScope)"
  }
]