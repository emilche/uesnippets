[
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "ModulePass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ModulePass"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "FunctionPass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionPass"
  },
  {
    "label": "Instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Instruction"
  },
  {
    "label": "PassRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PassRegistry"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "PostDominatorTree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PostDominatorTree"
  },
  {
    "label": "DxilResourceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilResourceBase"
  },
  {
    "label": "WaveSensitivityAnalysis",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WaveSensitivityAnalysis"
  },
  {
    "label": "HLSLExtensionsCodegenHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HLSLExtensionsCodegenHelper"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (# pragma once namespace llvm { class Module ; class ModulePass ; class Function ; class FunctionPass ; class Instruction ; class PassRegistry ; class StringRef ; struct PostDominatorTree ; } namespace hlsl { class DxilResourceBase ; class WaveSensitivityAnalysis { public : WaveSensitivityAnalysis*)",
    "insertText": "create(llvm::PostDominatorTree &PDT)"
  },
  {
    "label": "WaveSensitivityAnalysis()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "WaveSensitivityAnalysis()"
  },
  {
    "label": "Analyze()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Analyze(llvm::Function *F)"
  },
  {
    "label": "IsWaveSensitive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWaveSensitive(llvm::Instruction *op)"
  },
  {
    "label": "ClearPauseResumePasses()",
    "kind": "Method",
    "detail": "Function (} ; class HLSLExtensionsCodegenHelper ; bool)",
    "insertText": "ClearPauseResumePasses(llvm::Module &M)"
  },
  {
    "label": "GetPauseResumePasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPauseResumePasses(llvm::Module &M, llvm::StringRef &pause, llvm::StringRef &resume)"
  },
  {
    "label": "SetPauseResumePasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPauseResumePasses(llvm::Module &M, llvm::StringRef pause, llvm::StringRef resume)"
  },
  {
    "label": "createDxilLowerCreateHandleForLibPass()",
    "kind": "Method",
    "detail": "Function (} namespace llvm { ModulePass*)",
    "insertText": "createDxilLowerCreateHandleForLibPass()"
  },
  {
    "label": "createDxilAllocateResourcesForLibPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilAllocateResourcesForLibPass()"
  },
  {
    "label": "createDxilCleanupDynamicResourceHandlePass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilCleanupDynamicResourceHandlePass()"
  },
  {
    "label": "createDxilEliminateOutputDynamicIndexingPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilEliminateOutputDynamicIndexingPass()"
  },
  {
    "label": "createDxilGenerationPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilGenerationPass(bool NotOptimized, hlsl::HLSLExtensionsCodegenHelper *extensionsHelper)"
  },
  {
    "label": "createHLEmitMetadataPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createHLEmitMetadataPass()"
  },
  {
    "label": "createHLEnsureMetadataPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createHLEnsureMetadataPass()"
  },
  {
    "label": "createDxilFinalizeModulePass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilFinalizeModulePass()"
  },
  {
    "label": "createDxilEmitMetadataPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilEmitMetadataPass()"
  },
  {
    "label": "createDxilExpandTrigIntrinsicsPass()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createDxilExpandTrigIntrinsicsPass()"
  },
  {
    "label": "createDxilConvergentMarkPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilConvergentMarkPass()"
  },
  {
    "label": "createDxilConvergentClearPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilConvergentClearPass()"
  },
  {
    "label": "createDxilDeadFunctionEliminationPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilDeadFunctionEliminationPass()"
  },
  {
    "label": "createHLDeadFunctionEliminationPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createHLDeadFunctionEliminationPass()"
  },
  {
    "label": "createHLPreprocessPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createHLPreprocessPass()"
  },
  {
    "label": "createDxilPrecisePropagatePass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilPrecisePropagatePass()"
  },
  {
    "label": "createDxilPreserveAllOutputsPass()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createDxilPreserveAllOutputsPass()"
  },
  {
    "label": "createDxilPromoteLocalResources()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createDxilPromoteLocalResources()"
  },
  {
    "label": "createDxilPromoteStaticResources()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilPromoteStaticResources()"
  },
  {
    "label": "createDxilLegalizeResources()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilLegalizeResources()"
  },
  {
    "label": "createDxilLegalizeEvalOperationsPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilLegalizeEvalOperationsPass()"
  },
  {
    "label": "createDxilLegalizeSampleOffsetPass()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createDxilLegalizeSampleOffsetPass()"
  },
  {
    "label": "createDxilSimpleGVNHoistPass()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createDxilSimpleGVNHoistPass()"
  },
  {
    "label": "createInvalidateUndefResourcesPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createInvalidateUndefResourcesPass()"
  },
  {
    "label": "createSimplifyInstPass()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createSimplifyInstPass()"
  },
  {
    "label": "createDxilTranslateRawBuffer()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilTranslateRawBuffer()"
  },
  {
    "label": "createNoPausePassesPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createNoPausePassesPass()"
  },
  {
    "label": "createPausePassesPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createPausePassesPass()"
  },
  {
    "label": "createResumePassesPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createResumePassesPass()"
  },
  {
    "label": "createMatrixBitcastLowerPass()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createMatrixBitcastLowerPass()"
  },
  {
    "label": "createDxilCleanupAddrSpaceCastPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilCleanupAddrSpaceCastPass()"
  },
  {
    "label": "createDxilRenameResourcesPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilRenameResourcesPass()"
  },
  {
    "label": "initializeDxilLowerCreateHandleForLibPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilLowerCreateHandleForLibPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilAllocateResourcesForLibPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilAllocateResourcesForLibPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilCleanupDynamicResourceHandlePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilCleanupDynamicResourceHandlePass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilEliminateOutputDynamicIndexingPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilEliminateOutputDynamicIndexingPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilGenerationPassPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilGenerationPassPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeHLEnsureMetadataPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeHLEnsureMetadataPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeHLEmitMetadataPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeHLEmitMetadataPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilFinalizeModulePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilFinalizeModulePass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilEmitMetadataPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilEmitMetadataPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilEraseDeadRegionPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilEraseDeadRegionPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilExpandTrigIntrinsicsPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilExpandTrigIntrinsicsPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilDeadFunctionEliminationPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilDeadFunctionEliminationPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeHLDeadFunctionEliminationPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeHLDeadFunctionEliminationPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeHLPreprocessPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeHLPreprocessPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilConvergentMarkPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilConvergentMarkPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilConvergentClearPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilConvergentClearPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilPrecisePropagatePassPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilPrecisePropagatePassPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilPreserveAllOutputsPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilPreserveAllOutputsPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilPromoteLocalResourcesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilPromoteLocalResourcesPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilPromoteStaticResourcesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilPromoteStaticResourcesPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilLegalizeResourcesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilLegalizeResourcesPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilLegalizeEvalOperationsPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilLegalizeEvalOperationsPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilLegalizeSampleOffsetPassPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilLegalizeSampleOffsetPassPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilSimpleGVNHoistPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilSimpleGVNHoistPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeInvalidateUndefResourcesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeInvalidateUndefResourcesPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeSimplifyInstPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeSimplifyInstPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilTranslateRawBufferPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilTranslateRawBufferPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeNoPausePassesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeNoPausePassesPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializePausePassesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializePausePassesPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeResumePassesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeResumePassesPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeMatrixBitcastLowerPassPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeMatrixBitcastLowerPassPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilCleanupAddrSpaceCastPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilCleanupAddrSpaceCastPass(llvm::PassRegistry &)"
  },
  {
    "label": "initializeDxilRenameResourcesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilRenameResourcesPass(llvm::PassRegistry &)"
  },
  {
    "label": "createDxilValidateWaveSensitivityPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilValidateWaveSensitivityPass()"
  },
  {
    "label": "initializeDxilValidateWaveSensitivityPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilValidateWaveSensitivityPass(llvm::PassRegistry &)"
  },
  {
    "label": "createCleanupDxBreakPass()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createCleanupDxBreakPass()"
  },
  {
    "label": "initializeCleanupDxBreakPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeCleanupDxBreakPass(llvm::PassRegistry &)"
  },
  {
    "label": "createDxilLoopDeletionPass()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createDxilLoopDeletionPass(bool NoSink)"
  },
  {
    "label": "initializeDxilLoopDeletionPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilLoopDeletionPass(llvm::PassRegistry &)"
  },
  {
    "label": "createHLLegalizeParameter()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createHLLegalizeParameter()"
  },
  {
    "label": "initializeHLLegalizeParameterPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeHLLegalizeParameterPass(llvm::PassRegistry &)"
  },
  {
    "label": "AreDxilResourcesDense()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreDxilResourcesDense(llvm::Module *M, hlsl::DxilResourceBase **ppNonDense)"
  },
  {
    "label": "createDxilNoOptLegalizePass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilNoOptLegalizePass()"
  },
  {
    "label": "initializeDxilNoOptLegalizePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilNoOptLegalizePass(llvm::PassRegistry &)"
  },
  {
    "label": "createDxilNoOptSimplifyInstructionsPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilNoOptSimplifyInstructionsPass()"
  },
  {
    "label": "initializeDxilNoOptSimplifyInstructionsPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilNoOptSimplifyInstructionsPass(llvm::PassRegistry &)"
  },
  {
    "label": "createDxilMutateResourceToHandlePass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilMutateResourceToHandlePass()"
  },
  {
    "label": "initializeDxilMutateResourceToHandlePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilMutateResourceToHandlePass(llvm::PassRegistry &)"
  },
  {
    "label": "createDxilDeleteRedundantDebugValuesPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilDeleteRedundantDebugValuesPass()"
  },
  {
    "label": "initializeDxilDeleteRedundantDebugValuesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilDeleteRedundantDebugValuesPass(llvm::PassRegistry &)"
  },
  {
    "label": "createDxilSimpleGVNEliminateRegionPass()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createDxilSimpleGVNEliminateRegionPass()"
  },
  {
    "label": "initializeDxilSimpleGVNEliminateRegionPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilSimpleGVNEliminateRegionPass(llvm::PassRegistry &)"
  },
  {
    "label": "createDxilModuleInitPass()",
    "kind": "Method",
    "detail": "Function (ModulePass*)",
    "insertText": "createDxilModuleInitPass()"
  },
  {
    "label": "initializeDxilModuleInitPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilModuleInitPass(llvm::PassRegistry &)"
  }
]