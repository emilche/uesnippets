[
  {
    "label": "FThreadTrackEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadTrackEvent"
  },
  {
    "label": "FContextSwitchesSharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContextSwitchesSharedState"
  },
  {
    "label": "FContextSwitchesTimingTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContextSwitchesTimingTrack"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Insights / ViewModels / TimingEventsTrack . h \" class FThreadTrackEvent ; namespace UE::Insights::ContextSwitches { class FContextSwitchesSharedState ; class FContextSwitchesTimingTrack : public FTimingEventsTrack {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FContextSwitchesTimingTrack, FTimingEventsTrack) public: explicit FContextSwitchesTimingTrack(FContextSwitchesSharedState& InSharedState, const FString& InName, uint32 InTimelineIndex, uint32 InThreadId) : FTimingEventsTrack(InName) , SharedState(InSharedState) , TimelineIndex(InTimelineIndex) , ThreadId(InThreadId)"
  },
  {
    "label": "FContextSwitchesTimingTrack()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FContextSwitchesTimingTrack()"
  },
  {
    "label": "GetTimelineIndex()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTimelineIndex()"
  },
  {
    "label": "BuildFilteredDrawState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFilteredDrawState(ITimingEventsTrackDrawStateBuilder& Builder, const ITimingTrackUpdateContext& Context)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(const ITimingTrackDrawContext& Context)"
  },
  {
    "label": "PostDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDraw(const ITimingTrackDrawContext& Context)"
  },
  {
    "label": "InitTooltip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTooltip(FTooltipDrawState& InOutTooltip, const ITimingEvent& InTooltipEvent)"
  },
  {
    "label": "BuildContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildContextMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "SearchEvent()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<const ITimingEvent>)",
    "insertText": "SearchEvent(const FTimingEventSearchParameters& InSearchParameters)"
  },
  {
    "label": "GetEvent()",
    "kind": "Method",
    "detail": "Function (protected : const TSharedPtr<const ITimingEvent>)",
    "insertText": "GetEvent(double InTime, double SecondsPerPixel, int32 Depth)"
  },
  {
    "label": "DrawLineEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawLineEvents(const ITimingTrackDrawContext& Context, const float OffsetY = 1.0f)"
  }
]