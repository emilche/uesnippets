[
  {
    "label": "DIOBJECTATTRIBUTES",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIOBJECTATTRIBUTES"
  },
  {
    "label": "DIFFOBJECTATTRIBUTES",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIFFOBJECTATTRIBUTES"
  },
  {
    "label": "DIOBJECTCALIBRATION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIOBJECTCALIBRATION"
  },
  {
    "label": "DIPOVCALIBRATION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIPOVCALIBRATION"
  },
  {
    "label": "DIEFFECTATTRIBUTES",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIEFFECTATTRIBUTES"
  },
  {
    "label": "DIFFDEVICEATTRIBUTES",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIFFDEVICEATTRIBUTES"
  },
  {
    "label": "DIDRIVERVERSIONS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIDRIVERVERSIONS"
  },
  {
    "label": "DIDEVICESTATE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIDEVICESTATE"
  },
  {
    "label": "DIHIDFFINITINFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIHIDFFINITINFO"
  },
  {
    "label": "IDirectInputEffectDriver",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectInputEffectDriver"
  },
  {
    "label": "joypos_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "joypos_tag"
  },
  {
    "label": "joyrange_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "joyrange_tag"
  },
  {
    "label": "joyreguservalues_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "joyreguservalues_tag"
  },
  {
    "label": "joyreghwsettings_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "joyreghwsettings_tag"
  },
  {
    "label": "joyreghwvalues_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "joyreghwvalues_tag"
  },
  {
    "label": "joyreghwconfig_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "joyreghwconfig_tag"
  },
  {
    "label": "joycalibrate_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "joycalibrate_tag"
  },
  {
    "label": "DIJOYTYPEINFO_DX5",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIJOYTYPEINFO_DX5"
  },
  {
    "label": "DIJOYTYPEINFO_DX6",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIJOYTYPEINFO_DX6"
  },
  {
    "label": "DIJOYTYPEINFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIJOYTYPEINFO"
  },
  {
    "label": "DIJOYCONFIG_DX5",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIJOYCONFIG_DX5"
  },
  {
    "label": "DIJOYCONFIG",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIJOYCONFIG"
  },
  {
    "label": "DIJOYUSERVALUES",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIJOYUSERVALUES"
  },
  {
    "label": "IDirectInputJoyConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectInputJoyConfig"
  },
  {
    "label": "IDirectInputJoyConfig8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDirectInputJoyConfig8"
  },
  {
    "label": "message()",
    "kind": "Method",
    "detail": "Function (# ifndef __DINPUTD_INCLUDED__ # define __DINPUTD_INCLUDED__ # ifndef DIRECTINPUT_VERSION # define DIRECTINPUT_VERSION 0 x0800 # pragma)",
    "insertText": "message(__FILE__ \": DIRECTINPUT_VERSION undefined. Defaulting to version 0x0800\")"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef DIJ_RINGZERO)",
    "insertText": "DEFINE_GUID(IID_IDirectInputEffectDriver, 0x02538130,0x898F,0x11D0,0x9A,0xD0,0x00,0xA0,0xC9,0xA0,0x6E,0x35)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDirectInputJoyConfig, 0x1DE12AB1,0xC9F5,0x11CF,0xBF,0xC7,0x44,0x45,0x53,0x54,0x00,0x00)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDirectInputPIDDriver, 0xEEC6993A,0xB3FD,0x11D2,0xA9,0x16,0x00,0xC0,0x4F,0xB9,0x86,0x38)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDirectInputJoyConfig8, 0xeb0d7dfa,0x1990,0x4f27,0xb4,0xd6,0xed,0xf2,0xee,0xc4,0xa4,0x4c)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# endif typedef struct DIOBJECTATTRIBUTES { DWORD dwFlags ; WORD wUsagePage ; WORD wUsage ; } DIOBJECTATTRIBUTES,* LPDIOBJECTATTRIBUTES ; typedef const DIOBJECTATTRIBUTES* LPCDIOBJECTATTRIBUTES ; typedef struct DIFFOBJECTATTRIBUTES { DWORD dwFFMaxForce ; DWORD dwFFForceResolution ; } DIFFOBJECTATTRIBUTES,* LPDIFFOBJECTATTRIBUTES ; typedef const DIFFOBJECTATTRIBUTES* LPCDIFFOBJECTATTRIBUTES ; typedef struct DIOBJECTCALIBRATION { LONG lMin ; LONG lCenter ; LONG lMax ; } DIOBJECTCALIBRATION,* LPDIOBJECTCALIBRATION ; typedef const DIOBJECTCALIBRATION* LPCDIOBJECTCALIBRATION ; typedef struct DIPOVCALIBRATION { LONG lMin [ 5 ] ; LONG lMax [ 5 ] ; } DIPOVCALIBRATION,* LPDIPOVCALIBRATION ; typedef const DIPOVCALIBRATION* LPCDIPOVCALIBRATION ; typedef struct DIEFFECTATTRIBUTES { DWORD dwEffectId ; DWORD dwEffType ; DWORD dwStaticParams ; DWORD dwDynamicParams ; DWORD dwCoords ; } DIEFFECTATTRIBUTES,* LPDIEFFECTATTRIBUTES ; typedef const DIEFFECTATTRIBUTES* LPCDIEFFECTATTRIBUTES ; typedef struct DIFFDEVICEATTRIBUTES { DWORD dwFlags ; DWORD dwFFSamplePeriod ; DWORD dwFFMinTimeResolution ; } DIFFDEVICEATTRIBUTES,* LPDIFFDEVICEATTRIBUTES ; typedef const DIFFDEVICEATTRIBUTES* LPCDIFFDEVICEATTRIBUTES ; typedef struct DIDRIVERVERSIONS { DWORD dwSize ; DWORD dwFirmwareRevision ; DWORD dwHardwareRevision ; DWORD dwFFDriverVersion ; } DIDRIVERVERSIONS,* LPDIDRIVERVERSIONS ; typedef const DIDRIVERVERSIONS* LPCDIDRIVERVERSIONS ; typedef struct DIDEVICESTATE { DWORD dwSize ; DWORD dwState ; DWORD dwLoad ; } DIDEVICESTATE,* LPDIDEVICESTATE ; # define DEV_STS_EFFECT_RUNNING DIEGES_PLAYING # ifndef DIJ_RINGZERO typedef struct DIHIDFFINITINFO { DWORD dwSize ; LPWSTR pwszDeviceInterface ; GUID GuidInstance ; } DIHIDFFINITINFO,* LPDIHIDFFINITINFO ; # undef INTERFACE # define INTERFACE IDirectInputEffectDriver)",
    "insertText": "DECLARE_INTERFACE_(IDirectInputEffectDriver, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID * ppvObj)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(ULONG,AddRef)(THIS)"
  },
  {
    "label": "STDMETHOD_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD_(ULONG,Release)(THIS)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(DeviceID)(THIS_ DWORD,DWORD,DWORD,DWORD,LPVOID)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetVersions)(THIS_ LPDIDRIVERVERSIONS)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Escape)(THIS_ DWORD,DWORD,LPDIEFFESCAPE)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetGain)(THIS_ DWORD,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SendForceFeedbackCommand)(THIS_ DWORD,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetForceFeedbackState)(THIS_ DWORD,LPDIDEVICESTATE)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(DownloadEffect)(THIS_ DWORD,DWORD,LPDWORD,LPCDIEFFECT,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(DestroyEffect)(THIS_ DWORD,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(StartEffect)(THIS_ DWORD,DWORD,DWORD,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(StopEffect)(THIS_ DWORD,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetEffectStatus)(THIS_ DWORD,DWORD,LPDWORD)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} ; typedef struct IDirectInputEffectDriver* LPDIRECTINPUTEFFECTDRIVER ; # if !)",
    "insertText": "defined(__cplusplus) || defined(CINTERFACE) #define IDirectInputEffectDriver_QueryInterface(p,a,b) (p)->lpVtbl->QueryInterface(p,a,b) #define IDirectInputEffectDriver_AddRef(p) (p)->lpVtbl->AddRef(p) #define IDirectInputEffectDriver_Release(p) (p)->lpVtbl->Release(p) #define IDirectInputEffectDriver_DeviceID(p,a,b,c,d,e) (p)->lpVtbl->DeviceID(p,a,b,c,d,e) #define IDirectInputEffectDriver_GetVersions(p,a) (p)->lpVtbl->GetVersions(p,a) #define IDirectInputEffectDriver_Escape(p,a,b,c) (p)->lpVtbl->Escape(p,a,b,c) #define IDirectInputEffectDriver_SetGain(p,a,b) (p)->lpVtbl->SetGain(p,a,b) #define IDirectInputEffectDriver_SendForceFeedbackCommand(p,a,b) (p)->lpVtbl->SendForceFeedbackCommand(p,a,b) #define IDirectInputEffectDriver_GetForceFeedbackState(p,a,b) (p)->lpVtbl->GetForceFeedbackState(p,a,b) #define IDirectInputEffectDriver_DownloadEffect(p,a,b,c,d,e) (p)->lpVtbl->DownloadEffect(p,a,b,c,d,e) #define IDirectInputEffectDriver_DestroyEffect(p,a,b) (p)->lpVtbl->DestroyEffect(p,a,b) #define IDirectInputEffectDriver_StartEffect(p,a,b,c,d) (p)->lpVtbl->StartEffect(p,a,b,c,d) #define IDirectInputEffectDriver_StopEffect(p,a,b) (p)->lpVtbl->StopEffect(p,a,b) #define IDirectInputEffectDriver_GetEffectStatus(p,a,b,c) (p)->lpVtbl->GetEffectStatus(p,a,b,c) #else #define IDirectInputEffectDriver_QueryInterface(p,a,b) (p)->QueryInterface(a,b) #define IDirectInputEffectDriver_AddRef(p) (p)->AddRef() #define IDirectInputEffectDriver_Release(p) (p)->Release() #define IDirectInputEffectDriver_DeviceID(p,a,b,c,d,e) (p)->DeviceID(a,b,c,d,e) #define IDirectInputEffectDriver_GetVersions(p,a) (p)->GetVersions(a) #define IDirectInputEffectDriver_Escape(p,a,b,c) (p)->Escape(a,b,c) #define IDirectInputEffectDriver_SetGain(p,a,b) (p)->SetGain(a,b) #define IDirectInputEffectDriver_SendForceFeedbackCommand(p,a,b) (p)->SendForceFeedbackCommand(a,b) #define IDirectInputEffectDriver_GetForceFeedbackState(p,a,b) (p)->GetForceFeedbackState(a,b) #define IDirectInputEffectDriver_DownloadEffect(p,a,b,c,d,e) (p)->DownloadEffect(a,b,c,d,e) #define IDirectInputEffectDriver_DestroyEffect(p,a,b) (p)->DestroyEffect(a,b) #define IDirectInputEffectDriver_StartEffect(p,a,b,c,d) (p)->StartEffect(a,b,c,d) #define IDirectInputEffectDriver_StopEffect(p,a,b) (p)->StopEffect(a,b) #define IDirectInputEffectDriver_GetEffectStatus(p,a,b,c) (p)->GetEffectStatus(a,b,c)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (DWORD dwX ; DWORD dwY ; DWORD dwZ ; DWORD dwR ; DWORD dwU ; DWORD dwV ; } JOYPOS,FAR* LPJOYPOS ; typedef struct joyrange_tag { JOYPOS jpMin ; JOYPOS jpMax ; JOYPOS jpCenter ; } JOYRANGE,FAR* LPJOYRANGE ; typedef struct joyreguservalues_tag { DWORD dwTimeOut ; JOYRANGE jrvRanges ; JOYPOS jpDeadZone ; } JOYREGUSERVALUES,FAR* LPJOYREGUSERVALUES ; typedef struct joyreghwsettings_tag { DWORD dwFlags ; DWORD dwNumButtons ; } JOYREGHWSETTINGS,FAR* LPJOYHWSETTINGS ; typedef struct joyreghwvalues_tag { JOYRANGE jrvHardware ; DWORD dwPOVValues [ JOY_POV_NUMDIRS ] ; DWORD dwCalFlags ; } JOYREGHWVALUES,FAR* LPJOYREGHWVALUES ; typedef struct joyreghwconfig_tag { JOYREGHWSETTINGS hws ; DWORD dwUsageSettings ; JOYREGHWVALUES hwv ; DWORD dwType ; DWORD dwReserved ; } JOYREGHWCONFIG,FAR* LPJOYREGHWCONFIG ; typedef struct joycalibrate_tag { UINT wXbase ; UINT wXdelta ; UINT wYbase ; UINT wYdelta ; UINT wZbase ; UINT wZdelta ; } JOYCALIBRATE ; typedef JOYCALIBRATE FAR* LPJOYCALIBRATE ; # endif # ifndef DIJ_RINGZERO # define MAX_JOYSTRING 2 5 6 typedef)",
    "insertText": "BOOL(FAR PASCAL * LPDIJOYTYPECALLBACK)(LPCWSTR, LPVOID)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# ifndef MAX_JOYSTICKOEMVXDNAME # define MAX_JOYSTICKOEMVXDNAME 2 6 0 # endif # define DITC_REGHWSETTINGS 0 x00000001 # define DITC_CLSIDCONFIG 0 x00000002 # define DITC_DISPLAYNAME 0 x00000004 # define DITC_CALLOUT 0 x00000008 # define DITC_HARDWAREID 0 x00000010 # define DITC_FLAGS1 0 x00000020 # define DITC_FLAGS2 0 x00000040 # define DITC_MAPFILE 0 x00000080 typedef struct DIJOYTYPEINFO_DX5 { DWORD dwSize ; JOYREGHWSETTINGS hws ; CLSID clsidConfig ; WCHAR wszDisplayName [ MAX_JOYSTRING ] ; WCHAR wszCallout [ MAX_JOYSTICKOEMVXDNAME ] ; } DIJOYTYPEINFO_DX5,* LPDIJOYTYPEINFO_DX5 ; typedef const DIJOYTYPEINFO_DX5* LPCDIJOYTYPEINFO_DX5 ; typedef struct DIJOYTYPEINFO_DX6 { DWORD dwSize ; JOYREGHWSETTINGS hws ; CLSID clsidConfig ; WCHAR wszDisplayName [ MAX_JOYSTRING ] ; WCHAR wszCallout [ MAX_JOYSTICKOEMVXDNAME ] ; WCHAR wszHardwareId [ MAX_JOYSTRING ] ; DWORD dwFlags1 ; } DIJOYTYPEINFO_DX6,* LPDIJOYTYPEINFO_DX6 ; typedef const DIJOYTYPEINFO_DX6* LPCDIJOYTYPEINFO_DX6 ; typedef struct DIJOYTYPEINFO { DWORD dwSize ; JOYREGHWSETTINGS hws ; CLSID clsidConfig ; WCHAR wszDisplayName [ MAX_JOYSTRING ] ; WCHAR wszCallout [ MAX_JOYSTICKOEMVXDNAME ] ; #)",
    "insertText": "if(DIRECTINPUT_VERSION >= 0x05b2)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (DWORD dwFlags1 ; #)",
    "insertText": "if(DIRECTINPUT_VERSION >= 0x0800)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (# endif } DIJOYCONFIG,* LPDIJOYCONFIG ; typedef const DIJOYCONFIG* LPCDIJOYCONFIG ; # define DIJU_USERVALUES 0 x00000001 # define DIJU_GLOBALDRIVER 0 x00000002 # define DIJU_GAMEPORTEMULATOR 0 x00000004 typedef struct DIJOYUSERVALUES { DWORD dwSize ; JOYREGUSERVALUES ruv ; WCHAR wszGlobalDriver [ MAX_JOYSTRING ] ; WCHAR wszGameportEmulator [ MAX_JOYSTRING ] ; } DIJOYUSERVALUES,* LPDIJOYUSERVALUES ; typedef const DIJOYUSERVALUES* LPCDIJOYUSERVALUES ;)",
    "insertText": "DEFINE_GUID(GUID_KeyboardClass, 0x4D36E96B,0xE325,0x11CE,0xBF,0xC1,0x08,0x00,0x2B,0xE1,0x03,0x18)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_MediaClass, 0x4D36E96C,0xE325,0x11CE,0xBF,0xC1,0x08,0x00,0x2B,0xE1,0x03,0x18)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_MouseClass, 0x4D36E96F,0xE325,0x11CE,0xBF,0xC1,0x08,0x00,0x2B,0xE1,0x03,0x18)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(GUID_HIDClass, 0x745A17A0,0x74D3,0x11D0,0xB6,0xFE,0x00,0xA0,0xC9,0x0F,0x57,0xDA)"
  },
  {
    "label": "DECLARE_INTERFACE_()",
    "kind": "Method",
    "detail": "Function (# undef INTERFACE # define INTERFACE IDirectInputJoyConfig)",
    "insertText": "DECLARE_INTERFACE_(IDirectInputJoyConfig, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Acquire)(THIS)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(Unacquire)(THIS)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetCooperativeLevel)(THIS_ HWND,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SendNotify)(THIS)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(EnumTypes)(THIS_ LPDIJOYTYPECALLBACK,LPVOID)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetTypeInfo)(THIS_ LPCWSTR,LPDIJOYTYPEINFO,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetTypeInfo)(THIS_ LPCWSTR,LPCDIJOYTYPEINFO,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(DeleteType)(THIS_ LPCWSTR)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetConfig)(THIS_ UINT,LPDIJOYCONFIG,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetConfig)(THIS_ UINT,LPCDIJOYCONFIG,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(DeleteConfig)(THIS_ UINT)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(GetUserValues)(THIS_ LPDIJOYUSERVALUES,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetUserValues)(THIS_ LPCDIJOYUSERVALUES,DWORD)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(AddNewHardware)(THIS_ HWND,REFGUID)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(OpenTypeKey)(THIS_ LPCWSTR,DWORD,PHKEY)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(OpenConfigKey)(THIS_ UINT,DWORD,PHKEY)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} ; typedef struct IDirectInputJoyConfig* LPDIRECTINPUTJOYCONFIG ; # if !)",
    "insertText": "defined(__cplusplus) || defined(CINTERFACE) #define IDirectInputJoyConfig_QueryInterface(p,a,b) (p)->lpVtbl->QueryInterface(p,a,b) #define IDirectInputJoyConfig_AddRef(p) (p)->lpVtbl->AddRef(p) #define IDirectInputJoyConfig_Release(p) (p)->lpVtbl->Release(p) #define IDirectInputJoyConfig_Acquire(p) (p)->lpVtbl->Acquire(p) #define IDirectInputJoyConfig_Unacquire(p) (p)->lpVtbl->Unacquire(p) #define IDirectInputJoyConfig_SetCooperativeLevel(p,a,b) (p)->lpVtbl->SetCooperativeLevel(p,a,b) #define IDirectInputJoyConfig_SendNotify(p) (p)->lpVtbl->SendNotify(p) #define IDirectInputJoyConfig_EnumTypes(p,a,b) (p)->lpVtbl->EnumTypes(p,a,b) #define IDirectInputJoyConfig_GetTypeInfo(p,a,b,c) (p)->lpVtbl->GetTypeInfo(p,a,b,c) #define IDirectInputJoyConfig_SetTypeInfo(p,a,b,c) (p)->lpVtbl->SetTypeInfo(p,a,b,c) #define IDirectInputJoyConfig_DeleteType(p,a) (p)->lpVtbl->DeleteType(p,a) #define IDirectInputJoyConfig_GetConfig(p,a,b,c) (p)->lpVtbl->GetConfig(p,a,b,c) #define IDirectInputJoyConfig_SetConfig(p,a,b,c) (p)->lpVtbl->SetConfig(p,a,b,c) #define IDirectInputJoyConfig_DeleteConfig(p,a) (p)->lpVtbl->DeleteConfig(p,a) #define IDirectInputJoyConfig_GetUserValues(p,a,b) (p)->lpVtbl->GetUserValues(p,a,b) #define IDirectInputJoyConfig_SetUserValues(p,a,b) (p)->lpVtbl->SetUserValues(p,a,b) #define IDirectInputJoyConfig_AddNewHardware(p,a,b) (p)->lpVtbl->AddNewHardware(p,a,b) #define IDirectInputJoyConfig_OpenTypeKey(p,a,b,c) (p)->lpVtbl->OpenTypeKey(p,a,b,c) #define IDirectInputJoyConfig_OpenConfigKey(p,a,b,c) (p)->lpVtbl->OpenConfigKey(p,a,b,c) #else #define IDirectInputJoyConfig_QueryInterface(p,a,b) (p)->QueryInterface(a,b) #define IDirectInputJoyConfig_AddRef(p) (p)->AddRef() #define IDirectInputJoyConfig_Release(p) (p)->Release() #define IDirectInputJoyConfig_Acquire(p) (p)->Acquire() #define IDirectInputJoyConfig_Unacquire(p) (p)->Unacquire() #define IDirectInputJoyConfig_SetCooperativeLevel(p,a,b) (p)->SetCooperativeLevel(a,b) #define IDirectInputJoyConfig_SendNotify(p) (p)->SendNotify() #define IDirectInputJoyConfig_EnumTypes(p,a,b) (p)->EnumTypes(a,b) #define IDirectInputJoyConfig_GetTypeInfo(p,a,b,c) (p)->GetTypeInfo(a,b,c) #define IDirectInputJoyConfig_SetTypeInfo(p,a,b,c) (p)->SetTypeInfo(a,b,c) #define IDirectInputJoyConfig_DeleteType(p,a) (p)->DeleteType(a) #define IDirectInputJoyConfig_GetConfig(p,a,b,c) (p)->GetConfig(a,b,c) #define IDirectInputJoyConfig_SetConfig(p,a,b,c) (p)->SetConfig(a,b,c) #define IDirectInputJoyConfig_DeleteConfig(p,a) (p)->DeleteConfig(a) #define IDirectInputJoyConfig_GetUserValues(p,a,b) (p)->GetUserValues(a,b) #define IDirectInputJoyConfig_SetUserValues(p,a,b) (p)->SetUserValues(a,b) #define IDirectInputJoyConfig_AddNewHardware(p,a,b) (p)->AddNewHardware(a,b) #define IDirectInputJoyConfig_OpenTypeKey(p,a,b,c) (p)->OpenTypeKey(a,b,c) #define IDirectInputJoyConfig_OpenConfigKey(p,a,b,c) (p)->OpenConfigKey(a,b,c) #endif #endif #if(DIRECTINPUT_VERSION >= 0x0800) #ifndef DIJ_RINGZERO #undef INTERFACE #define INTERFACE IDirectInputJoyConfig8 DECLARE_INTERFACE_(IDirectInputJoyConfig8, IUnknown)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(SetTypeInfo)(THIS_ LPCWSTR,LPCDIJOYTYPEINFO,DWORD,LPWSTR)"
  },
  {
    "label": "STDMETHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHOD(OpenAppStatusKey)(THIS_ PHKEY)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} ; typedef struct IDirectInputJoyConfig8* LPDIRECTINPUTJOYCONFIG8 ; # if !)",
    "insertText": "defined(__cplusplus) || defined(CINTERFACE) #define IDirectInputJoyConfig8_QueryInterface(p,a,b) (p)->lpVtbl->QueryInterface(p,a,b) #define IDirectInputJoyConfig8_AddRef(p) (p)->lpVtbl->AddRef(p) #define IDirectInputJoyConfig8_Release(p) (p)->lpVtbl->Release(p) #define IDirectInputJoyConfig8_Acquire(p) (p)->lpVtbl->Acquire(p) #define IDirectInputJoyConfig8_Unacquire(p) (p)->lpVtbl->Unacquire(p) #define IDirectInputJoyConfig8_SetCooperativeLevel(p,a,b) (p)->lpVtbl->SetCooperativeLevel(p,a,b) #define IDirectInputJoyConfig8_SendNotify(p) (p)->lpVtbl->SendNotify(p) #define IDirectInputJoyConfig8_EnumTypes(p,a,b) (p)->lpVtbl->EnumTypes(p,a,b) #define IDirectInputJoyConfig8_GetTypeInfo(p,a,b,c) (p)->lpVtbl->GetTypeInfo(p,a,b,c) #define IDirectInputJoyConfig8_SetTypeInfo(p,a,b,c,d) (p)->lpVtbl->SetTypeInfo(p,a,b,c,d) #define IDirectInputJoyConfig8_DeleteType(p,a) (p)->lpVtbl->DeleteType(p,a) #define IDirectInputJoyConfig8_GetConfig(p,a,b,c) (p)->lpVtbl->GetConfig(p,a,b,c) #define IDirectInputJoyConfig8_SetConfig(p,a,b,c) (p)->lpVtbl->SetConfig(p,a,b,c) #define IDirectInputJoyConfig8_DeleteConfig(p,a) (p)->lpVtbl->DeleteConfig(p,a) #define IDirectInputJoyConfig8_GetUserValues(p,a,b) (p)->lpVtbl->GetUserValues(p,a,b) #define IDirectInputJoyConfig8_SetUserValues(p,a,b) (p)->lpVtbl->SetUserValues(p,a,b) #define IDirectInputJoyConfig8_AddNewHardware(p,a,b) (p)->lpVtbl->AddNewHardware(p,a,b) #define IDirectInputJoyConfig8_OpenTypeKey(p,a,b,c) (p)->lpVtbl->OpenTypeKey(p,a,b,c) #define IDirectInputJoyConfig8_OpenAppStatusKey(p,a) (p)->lpVtbl->OpenAppStatusKey(p,a) #else #define IDirectInputJoyConfig8_QueryInterface(p,a,b) (p)->QueryInterface(a,b) #define IDirectInputJoyConfig8_AddRef(p) (p)->AddRef() #define IDirectInputJoyConfig8_Release(p) (p)->Release() #define IDirectInputJoyConfig8_Acquire(p) (p)->Acquire() #define IDirectInputJoyConfig8_Unacquire(p) (p)->Unacquire() #define IDirectInputJoyConfig8_SetCooperativeLevel(p,a,b) (p)->SetCooperativeLevel(a,b) #define IDirectInputJoyConfig8_SendNotify(p) (p)->SendNotify() #define IDirectInputJoyConfig8_EnumTypes(p,a,b) (p)->EnumTypes(a,b) #define IDirectInputJoyConfig8_GetTypeInfo(p,a,b,c) (p)->GetTypeInfo(a,b,c) #define IDirectInputJoyConfig8_SetTypeInfo(p,a,b,c,d) (p)->SetTypeInfo(a,b,c,d) #define IDirectInputJoyConfig8_DeleteType(p,a) (p)->DeleteType(a) #define IDirectInputJoyConfig8_GetConfig(p,a,b,c) (p)->GetConfig(a,b,c) #define IDirectInputJoyConfig8_SetConfig(p,a,b,c) (p)->SetConfig(a,b,c) #define IDirectInputJoyConfig8_DeleteConfig(p,a) (p)->DeleteConfig(a) #define IDirectInputJoyConfig8_GetUserValues(p,a,b) (p)->GetUserValues(a,b) #define IDirectInputJoyConfig8_SetUserValues(p,a,b) (p)->SetUserValues(a,b) #define IDirectInputJoyConfig8_AddNewHardware(p,a,b) (p)->AddNewHardware(a,b) #define IDirectInputJoyConfig8_OpenTypeKey(p,a,b,c) (p)->OpenTypeKey(a,b,c) #define IDirectInputJoyConfig8_OpenAppStatusKey(p,a) (p)->OpenAppStatusKey(a) #endif #endif #define DIRECTINPUT_NOTIFICATION_MSGSTRINGA \"DIRECTINPUT_NOTIFICATION_MSGSTRING\" #define DIRECTINPUT_NOTIFICATION_MSGSTRINGW L\"DIRECTINPUT_NOTIFICATION_MSGSTRING\" #ifdef UNICODE #define DIRECTINPUT_NOTIFICATION_MSGSTRING DIRECTINPUT_NOTIFICATION_MSGSTRINGW #else #define DIRECTINPUT_NOTIFICATION_MSGSTRING DIRECTINPUT_NOTIFICATION_MSGSTRINGA #endif #define DIMSGWP_NEWAPPSTART 0x00000001 #define DIMSGWP_DX8APPSTART 0x00000002 #define DIMSGWP_DX8MAPPERAPPSTART 0x00000003 #endif #define DIAPPIDFLAG_NOTIME 0x00000001 #define DIAPPIDFLAG_NOSIZE 0x00000002 #define DIRECTINPUT_REGSTR_VAL_APPIDFLAGA \"AppIdFlag\" #define DIRECTINPUT_REGSTR_KEY_LASTAPPA \"MostRecentApplication\" #define DIRECTINPUT_REGSTR_KEY_LASTMAPAPPA \"MostRecentMapperApplication\" #define DIRECTINPUT_REGSTR_VAL_VERSIONA \"Version\" #define DIRECTINPUT_REGSTR_VAL_NAMEA \"Name\" #define DIRECTINPUT_REGSTR_VAL_IDA \"Id\" #define DIRECTINPUT_REGSTR_VAL_MAPPERA \"UsesMapper\" #define DIRECTINPUT_REGSTR_VAL_LASTSTARTA \"MostRecentStart\" #define DIRECTINPUT_REGSTR_VAL_APPIDFLAGW L\"AppIdFlag\" #define DIRECTINPUT_REGSTR_KEY_LASTAPPW L\"MostRecentApplication\" #define DIRECTINPUT_REGSTR_KEY_LASTMAPAPPW L\"MostRecentMapperApplication\" #define DIRECTINPUT_REGSTR_VAL_VERSIONW L\"Version\" #define DIRECTINPUT_REGSTR_VAL_NAMEW L\"Name\" #define DIRECTINPUT_REGSTR_VAL_IDW L\"Id\" #define DIRECTINPUT_REGSTR_VAL_MAPPERW L\"UsesMapper\" #define DIRECTINPUT_REGSTR_VAL_LASTSTARTW L\"MostRecentStart\" #ifdef UNICODE #define DIRECTINPUT_REGSTR_VAL_APPIDFLAG DIRECTINPUT_REGSTR_VAL_APPIDFLAGW #define DIRECTINPUT_REGSTR_KEY_LASTAPP DIRECTINPUT_REGSTR_KEY_LASTAPPW #define DIRECTINPUT_REGSTR_KEY_LASTMAPAPP DIRECTINPUT_REGSTR_KEY_LASTMAPAPPW #define DIRECTINPUT_REGSTR_VAL_VERSION DIRECTINPUT_REGSTR_VAL_VERSIONW #define DIRECTINPUT_REGSTR_VAL_NAME DIRECTINPUT_REGSTR_VAL_NAMEW #define DIRECTINPUT_REGSTR_VAL_ID DIRECTINPUT_REGSTR_VAL_IDW #define DIRECTINPUT_REGSTR_VAL_MAPPER DIRECTINPUT_REGSTR_VAL_MAPPERW #define DIRECTINPUT_REGSTR_VAL_LASTSTART DIRECTINPUT_REGSTR_VAL_LASTSTARTW #else #define DIRECTINPUT_REGSTR_VAL_APPIDFLAG DIRECTINPUT_REGSTR_VAL_APPIDFLAGA #define DIRECTINPUT_REGSTR_KEY_LASTAPP DIRECTINPUT_REGSTR_KEY_LASTAPPA #define DIRECTINPUT_REGSTR_KEY_LASTMAPAPP DIRECTINPUT_REGSTR_KEY_LASTMAPAPPA #define DIRECTINPUT_REGSTR_VAL_VERSION DIRECTINPUT_REGSTR_VAL_VERSIONA #define DIRECTINPUT_REGSTR_VAL_NAME DIRECTINPUT_REGSTR_VAL_NAMEA #define DIRECTINPUT_REGSTR_VAL_ID DIRECTINPUT_REGSTR_VAL_IDA #define DIRECTINPUT_REGSTR_VAL_MAPPER DIRECTINPUT_REGSTR_VAL_MAPPERA #define DIRECTINPUT_REGSTR_VAL_LASTSTART DIRECTINPUT_REGSTR_VAL_LASTSTARTA #endif #define DIERR_NOMOREITEMS \\ MAKE_HRESULT(SEVERITY_ERROR, FACILITY_WIN32, ERROR_NO_MORE_ITEMS)"
  }
]