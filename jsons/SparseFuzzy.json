[
  {
    "label": "isApprox()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_SPARSE_FUZZY_H # define EIGEN_SPARSE_FUZZY_H namespace Eigen { template<Derived> template<OtherDerived> bool SparseMatrixBase<Derived)",
    "insertText": "isApprox(const SparseMatrixBase<OtherDerived>& other, const RealScalar &prec)"
  },
  {
    "label": "actualA()",
    "kind": "Method",
    "detail": "Function (const internal::nested_eval<Derived,2,PlainObject>::type)",
    "insertText": "actualA(derived())"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (internal::conditional<)",
    "insertText": "bool(IsRowMajor)==bool(OtherDerived::IsRowMajor), const typename internal::nested_eval<OtherDerived,2,PlainObject>::type, const PlainObject>::type actualB(other.derived())"
  }
]