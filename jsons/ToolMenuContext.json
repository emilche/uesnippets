[
  {
    "label": "FUIAction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUIAction"
  },
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "TOOLMENUS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TOOLMENUS_API"
  },
  {
    "label": "UToolMenus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenus"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FToolMenuEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuEntry"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / SortedMap . h \" # include \" ToolMenuContext . generated . h \" struct FUIAction ; class FUICommandInfo ; class FUICommandList ; class FTabManager ; class FExtender ;)",
    "insertText": "UCLASS(BlueprintType, Abstract)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: using FContextObjectCleanup = TFunction<void(UObject*)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (using FContextCleanup = TFunction<)",
    "insertText": "void()"
  },
  {
    "label": "FToolMenuContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FToolMenuContext()"
  },
  {
    "label": "FToolMenuContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FToolMenuContext(UObject* InContext)"
  },
  {
    "label": "FToolMenuContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FToolMenuContext(UObject* InContext, FContextObjectCleanup&& InCleanup)"
  },
  {
    "label": "FToolMenuContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FToolMenuContext(TSharedPtr<FUICommandList> InCommandList, TSharedPtr<FExtender> InExtender = TSharedPtr<FExtender>(), UObject* InContext = nullptr)"
  },
  {
    "label": "FindContext()",
    "kind": "Method",
    "detail": "Function (template<TContextType> TContextType*)",
    "insertText": "FindContext()"
  },
  {
    "label": "FindByClass()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "FindByClass(UClass* InClass)"
  },
  {
    "label": "AppendCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendCommandList(const TSharedRef<FUICommandList>& InCommandList)"
  },
  {
    "label": "AppendCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendCommandList(const TSharedPtr<FUICommandList>& InCommandList)"
  },
  {
    "label": "GetActionForCommand()",
    "kind": "Method",
    "detail": "Function (const FUIAction*)",
    "insertText": "GetActionForCommand(TSharedPtr<const FUICommandInfo> Command, TSharedPtr<const FUICommandList>& OutCommandList)"
  },
  {
    "label": "GetActionForCommand()",
    "kind": "Method",
    "detail": "Function (const FUIAction*)",
    "insertText": "GetActionForCommand(TSharedPtr<const FUICommandInfo> Command)"
  },
  {
    "label": "AddExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExtender(const TSharedPtr<FExtender>& InExtender)"
  },
  {
    "label": "GetAllExtenders()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtender>)",
    "insertText": "GetAllExtenders()"
  },
  {
    "label": "ResetExtenders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetExtenders()"
  },
  {
    "label": "AppendObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendObjects(const TArray<UObject*>& InObjects)"
  },
  {
    "label": "AddObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObject(UObject* InObject)"
  },
  {
    "label": "AddObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObject(UObject* InObject, FContextObjectCleanup&& InCleanup)"
  },
  {
    "label": "AddCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCleanup(FContextCleanup&& InCleanup)"
  },
  {
    "label": "CleanupObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupObjects()"
  },
  {
    "label": "IsEditing()",
    "kind": "Method",
    "detail": "Function (class UToolMenus ; class UToolMenu ; struct FToolMenuEntry ; bool)",
    "insertText": "IsEditing()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (bIsEditing = InIsEditing ; } private : void)",
    "insertText": "Empty()"
  }
]