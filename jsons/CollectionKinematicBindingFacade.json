[
  {
    "label": "FKinematicBindingFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKinematicBindingFacade"
  },
  {
    "label": "FKinematicBindingFacade()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GeometryCollection / ManagedArrayAccessor . h \" # include \" GeometryCollection / ManagedArrayCollection . h \" # include \" GeometryCollection / Facades / CollectionSelectionFacade . h \" namespace GeometryCollection::Facades { class FKinematicBindingFacade { public : typedef GeometryCollection::Facades::FSelectionFacade::FSelectionKey FBindingKey ; const FName KinematicGroup ; const FName KinematicBoneBindingIndex ; const FName KinematicBoneBindingToGroup ;)",
    "insertText": "FKinematicBindingFacade(FManagedArrayCollection& InCollection)"
  },
  {
    "label": "FKinematicBindingFacade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FKinematicBindingFacade(const FManagedArrayCollection& InCollection)"
  },
  {
    "label": "DefineSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefineSchema()"
  },
  {
    "label": "IsConst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConst()"
  },
  {
    "label": "SetBoneBindings()",
    "kind": "Method",
    "detail": "Function (FBindingKey)",
    "insertText": "SetBoneBindings(const int32 BoneIndex, const TArray<int32>& Vertices, const TArray<float>& Weights)"
  },
  {
    "label": "GetBoneBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBoneBindings(const FBindingKey& Key, int32& OutBoneIndex, TArray<int32>& OutBoneVerts, TArray<float>& OutBoneWeights)"
  },
  {
    "label": "AddKinematicBinding()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddKinematicBinding(const FBindingKey& Key)"
  },
  {
    "label": "NumKinematicBindings()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumKinematicBindings()"
  },
  {
    "label": "GetKinematicBindingKey()",
    "kind": "Method",
    "detail": "Function (} FBindingKey)",
    "insertText": "GetKinematicBindingKey(int Index)"
  }
]