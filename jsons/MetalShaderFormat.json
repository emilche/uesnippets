[
  {
    "label": "EAppleSDKType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAppleSDKType"
  },
  {
    "label": "FMetalCompilerToolchain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalCompilerToolchain"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "PackedVersion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PackedVersion"
  },
  {
    "label": "FMetalShaderBytecodeJob",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalShaderBytecodeJob"
  },
  {
    "label": "FMetalShaderBytecode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalShaderBytecode"
  },
  {
    "label": "NAME_SF_METAL()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RHIDefinitions . h \" # include \" HAL / PlatformProcess . h \" # include \" HAL / FileManager . h \" # include \" Misc / Paths . h \" # include \" RHIFeatureLevel . h \" # include \" RHIShaderPlatform . h \" # ifndef UE_METAL_USE_METAL_SHADER_CONVERTER # define UE_METAL_USE_METAL_SHADER_CONVERTER PLATFORM_SUPPORTS_BINDLESS_RENDERING # endif enum EAppleSDKType { AppleSDKMac,AppleSDKMobile,AppleSDKCount,} ; FName)",
    "insertText": "NAME_SF_METAL(TEXT(\"SF_METAL\"))"
  },
  {
    "label": "NAME_SF_METAL_MRT()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NAME_SF_METAL_MRT(TEXT(\"SF_METAL_MRT\"))"
  },
  {
    "label": "NAME_SF_METAL_TVOS()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NAME_SF_METAL_TVOS(TEXT(\"SF_METAL_TVOS\"))"
  },
  {
    "label": "NAME_SF_METAL_MRT_TVOS()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NAME_SF_METAL_MRT_TVOS(TEXT(\"SF_METAL_MRT_TVOS\"))"
  },
  {
    "label": "NAME_SF_METAL_SM5()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NAME_SF_METAL_SM5(TEXT(\"SF_METAL_SM5\"))"
  },
  {
    "label": "NAME_SF_METAL_SM6()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NAME_SF_METAL_SM6(TEXT(\"SF_METAL_SM6\"))"
  },
  {
    "label": "NAME_SF_METAL_SIM()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NAME_SF_METAL_SIM(TEXT(\"SF_METAL_SIM\"))"
  },
  {
    "label": "NAME_SF_METAL_MACES3_1()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NAME_SF_METAL_MACES3_1(TEXT(\"SF_METAL_MACES3_1\"))"
  },
  {
    "label": "NAME_SF_METAL_MRT_MAC()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NAME_SF_METAL_MRT_MAC(TEXT(\"SF_METAL_MRT_MAC\"))"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMetalCompilerSetup, Log, All)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMetalShaderCompiler, Log, All)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (class FMetalCompilerToolchain { public : enum class EMetalToolchainStatus : int32 { Success,ToolchainNotFound,CouldNotParseCompilerVersion,CouldNotParseTargetVersion,CouldNotFindMetalStdLib,} ; struct PackedVersion { union { struct { int32 Major : 1 6 ; int32 Minor : 8 ; int32 Patch : 8 ; } ; int32 Version ; } ; } ; void)",
    "insertText": "Init()"
  },
  {
    "label": "Teardown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Teardown()"
  },
  {
    "label": "CompileMetalShader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileMetalShader(struct FMetalShaderBytecodeJob& Job, struct FMetalShaderBytecode& Output)"
  },
  {
    "label": "ExecGenericCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecGenericCommand(const TCHAR* Command, const TCHAR* Params, int32* OutReturnCode, FString* OutStdOut, FString* OutStdErr, bool bIsConsoleApp = false)"
  },
  {
    "label": "ExecMetalFrontend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecMetalFrontend(EAppleSDKType SDK, const TCHAR* Parameters, int32* OutReturnCode, FString* OutStdOut, FString* OutStdErr)"
  },
  {
    "label": "ExecMetalLib()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecMetalLib(EAppleSDKType SDK, const TCHAR* Parameters, int32* OutReturnCode, FString* OutStdOut, FString* OutStdErr)"
  },
  {
    "label": "ExecMetalAr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecMetalAr(EAppleSDKType SDK, const TCHAR* ScriptFile, int32* OutReturnCode, FString* OutStdOut, FString* OutStdErr)"
  },
  {
    "label": "ExecAirPack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecAirPack(EAppleSDKType SDK, const TCHAR* Parameters, int32* OutReturnCode, FString* OutStdOut, FString* OutStdErr)"
  },
  {
    "label": "IsCompilerAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompilerAvailable()"
  },
  {
    "label": "GetTargetVersion()",
    "kind": "Method",
    "detail": "Function (PackedVersion)",
    "insertText": "GetTargetVersion(EShaderPlatform Platform)"
  },
  {
    "label": "GetCompilerVersionString()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetCompilerVersionString(EShaderPlatform Platform)"
  },
  {
    "label": "GetLocalTempDir()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetLocalTempDir()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bool bLocalTempDirCreated = false ;)",
    "insertText": "if(!bLocalTempDirCreated)"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (LocalTempFolder =)",
    "insertText": "Combine(FPlatformProcess::UserTempDir(), TEXT(\"MetalShaderCompilation\"), FString::Printf(TEXT(\"%u\"), FPlatformProcess::GetCurrentProcessId()))"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (bool bSuccess =)",
    "insertText": "Get().MakeDirectory(*LocalTempFolder, true)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} } bLocalTempDirCreated = true ; } return LocalTempFolder ; } const FMetalCompilerToolchain*)",
    "insertText": "Get()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "IsMobile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMobile(const EShaderPlatform Platform)"
  },
  {
    "label": "IsMobile()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsMobile(const FName& Format)"
  },
  {
    "label": "MetalShaderFormatToLegacyShaderPlatform()",
    "kind": "Method",
    "detail": "Function (EShaderPlatform Platform =)",
    "insertText": "MetalShaderFormatToLegacyShaderPlatform(Format)"
  },
  {
    "label": "IsTVOS()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsTVOS(const EShaderPlatform Platform)"
  },
  {
    "label": "MetalShaderPlatformToSDK()",
    "kind": "Method",
    "detail": "Function (EAppleSDKType)",
    "insertText": "MetalShaderPlatformToSDK(EShaderPlatform Platform)"
  },
  {
    "label": "DoWindowsSetup()",
    "kind": "Method",
    "detail": "Function (# endif # if PLATFORM_WINDOWS EMetalToolchainStatus)",
    "insertText": "DoWindowsSetup()"
  },
  {
    "label": "FetchCompilerVersion()",
    "kind": "Method",
    "detail": "Function (# endif EMetalToolchainStatus)",
    "insertText": "FetchCompilerVersion()"
  },
  {
    "label": "FetchMetalStandardLibraryPath()",
    "kind": "Method",
    "detail": "Function (EMetalToolchainStatus)",
    "insertText": "FetchMetalStandardLibraryPath()"
  }
]