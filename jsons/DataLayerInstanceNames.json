[
  {
    "label": "FDataLayerInstanceNames",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataLayerInstanceNames"
  },
  {
    "label": "FStreamingGenerationActorDescView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamingGenerationActorDescView"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DataLayerInstanceNames . generated . h \")",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FDataLayerInstanceNames() : bIsFirstDataLayerExternal(false)"
  },
  {
    "label": "FDataLayerInstanceNames()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bIsForcedEmptyNonExternalDataLayers = false ; # endif })",
    "insertText": "FDataLayerInstanceNames(const TArray<FName>& InDataLayers, bool bInIsFirstDataLayerExternal) : bIsFirstDataLayerExternal(bInIsFirstDataLayerExternal) , DataLayers(InDataLayers)"
  },
  {
    "label": "FDataLayerInstanceNames()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bIsForcedEmptyNonExternalDataLayers = false ; # endif })",
    "insertText": "FDataLayerInstanceNames(const TArray<FName>& InNonExternalDataLayers, FName InExternalDataLayer)"
  },
  {
    "label": "IsNone()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bIsForcedEmptyNonExternalDataLayers = false ; # endif bIsFirstDataLayerExternal = ! InExternalDataLayer .)",
    "insertText": "IsNone()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (DataLayers .)",
    "insertText": "Add(InExternalDataLayer)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (} DataLayers .)",
    "insertText": "Append(InNonExternalDataLayers)"
  },
  {
    "label": "GetExternalDataLayer()",
    "kind": "Method",
    "detail": "Function (} const FName)",
    "insertText": "GetExternalDataLayer()"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (} TArray<FName>::RangedForConstIteratorType)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (} TArray<FName>::RangedForIteratorType)",
    "insertText": "end()"
  },
  {
    "label": "rbegin()",
    "kind": "Method",
    "detail": "Function (} TArray<FName>::RangedForReverseIteratorType)",
    "insertText": "rbegin()"
  },
  {
    "label": "rend()",
    "kind": "Method",
    "detail": "Function (} TArray<FName>::RangedForReverseIteratorType)",
    "insertText": "rend()"
  },
  {
    "label": "GetNonExternalDataLayers()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const FName>)",
    "insertText": "GetNonExternalDataLayers()"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (TArray<FName> EmptyArray ;)",
    "insertText": "check(!bIsFirstDataLayerExternal || !DataLayers.IsEmpty())"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (const int32 Offset = bIsFirstDataLayerExternal ? 1 : 0 ; const int32 NonExternalDataLayersCount = DataLayers .)",
    "insertText": "Num()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Contains(FName InDataLayer)"
  },
  {
    "label": "HasExternalDataLayer()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasExternalDataLayer()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bIsForcedEmptyNonExternalDataLayers = true ;)",
    "insertText": "if(bIsFirstDataLayerExternal)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (DataLayers = { DataLayers [ 0 ] } ; } else { DataLayers .)",
    "insertText": "Empty()"
  }
]