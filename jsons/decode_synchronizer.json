[
  {
    "label": "DecodeSynchronizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecodeSynchronizer"
  },
  {
    "label": "ScheduledFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScheduledFrame"
  },
  {
    "label": "SynchronizedFrameDecodeScheduler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SynchronizedFrameDecodeScheduler"
  },
  {
    "label": "DecodeSynchronizer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DecodeSynchronizer(Clock* clock,\n                     Metronome* metronome,\n                     TaskQueueBase* worker_queue)"
  },
  {
    "label": "CreateSynchronizedFrameScheduler()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameDecodeScheduler>)",
    "insertText": "CreateSynchronizedFrameScheduler()"
  },
  {
    "label": "ScheduledFrame()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ScheduledFrame(uint32_t rtp_timestamp,\n                   FrameDecodeTiming::FrameSchedule schedule,\n                   FrameDecodeScheduler::FrameReleaseCallback callback)"
  },
  {
    "label": "SynchronizedFrameDecodeScheduler()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "SynchronizedFrameDecodeScheduler(DecodeSynchronizer* sync)"
  },
  {
    "label": "ReleaseNextFrame()",
    "kind": "Method",
    "detail": "Function (ScheduledFrame)",
    "insertText": "ReleaseNextFrame()"
  },
  {
    "label": "LatestDecodeTime()",
    "kind": "Method",
    "detail": "Function (Timestamp)",
    "insertText": "LatestDecodeTime()"
  },
  {
    "label": "OnFrameScheduled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrameScheduled(SynchronizedFrameDecodeScheduler* scheduler)"
  },
  {
    "label": "RemoveFrameScheduler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFrameScheduler(SynchronizedFrameDecodeScheduler* scheduler)"
  },
  {
    "label": "ScheduleNextTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleNextTick()"
  },
  {
    "label": "OnTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTick()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (schedulers_)",
    "insertText": "RTC_GUARDED_BY(worker_queue_)"
  }
]