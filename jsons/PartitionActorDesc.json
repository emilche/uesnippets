[
  {
    "label": "FPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPartitionActorDesc"
  },
  {
    "label": "FPartitionActorDescFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPartitionActorDescFactory"
  },
  {
    "label": "FPartitionActorDesc()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Containers / Map . h \" # include \" WorldPartition / WorldPartitionActorDesc . h \" class FPartitionActorDesc : public FWorldPartitionActorDesc { class FPartitionActorDescFactory ; public : uint32 GridSize ; int64 GridIndexX ; int64 GridIndexY ; int64 GridIndexZ ; FGuid GridGuid ;)",
    "insertText": "FPartitionActorDesc()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Init(const AActor* InActor)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Equals(const FWorldPartitionActorDesc* Other)"
  },
  {
    "label": "GetSizeOf()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSizeOf()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "TransferWorldData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransferWorldData(const FWorldPartitionActorDesc* From)"
  },
  {
    "label": "SetGridIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGridIndices(double LocationX, double LocationY, double LocationZ)"
  }
]