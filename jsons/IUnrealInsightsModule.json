[
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FWorkspaceItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkspaceItem"
  },
  {
    "label": "FStoreClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStoreClient"
  },
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "IInsightsManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInsightsManager"
  },
  {
    "label": "TRACEINSIGHTS_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRACEINSIGHTS_API"
  },
  {
    "label": "FInsightsMajorTabConfig()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Framework / Docking / LayoutExtender . h \" # include \" Framework / Docking / TabManager . h \" # include \" Framework / MultiBox / MultiBoxExtender . h \" # include \" Internationalization / Text . h \" # include \" Modules / ModuleInterface . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FExtender ; class FWorkspaceItem ; namespace UE::Trace { class FStoreClient ; } namespace TraceServices { class IAnalysisSession ; } namespace Insights { class IInsightsManager ; } struct FInsightsManagerTabs { const FName StartPageTabId ; const FName TraceStoreTabId ; const FName ConnectionTabId ; const FName LauncherTabId ; const FName SessionInfoTabId ; const FName TimingProfilerTabId ; const FName LoadingProfilerTabId ; const FName MemoryProfilerTabId ; const FName NetworkingProfilerTabId ; const FName AutomationWindowTabId ; const FName MessageLogTabId ; const FName TraceControlTabId ; } ; struct FTimingProfilerTabs { const FName ToolbarID ; const FName FramesTrackID ; const FName TimingViewID ; const FName TimersID ; const FName CallersID ; const FName CalleesID ; const FName StatsCountersID ; const FName LogViewID ; } ; struct FInsightsMajorTabConfig {)",
    "insertText": "FInsightsMajorTabConfig() : Layout(nullptr) , WorkspaceGroup(nullptr) , bIsAvailable(true)"
  },
  {
    "label": "Unavailable()",
    "kind": "Method",
    "detail": "Function (} FInsightsMajorTabConfig)",
    "insertText": "Unavailable()"
  },
  {
    "label": "FInsightsMajorTabExtender()",
    "kind": "Method",
    "detail": "Function (FInsightsMajorTabConfig Config ; Config . bIsAvailable = false ; return Config ; } FName ConfigId ; FText ConfigDisplayName ; TOptional<FText> TabLabel ; TOptional<FText> TabTooltip ; TOptional<FSlateIcon> TabIcon ; TSharedPtr<FTabManager::FLayout> Layout ; TSharedPtr<FWorkspaceItem> WorkspaceGroup ; bool bIsAvailable ; } ; struct FInsightsMajorTabExtender {)",
    "insertText": "FInsightsMajorTabExtender(TSharedPtr<FTabManager>& InTabManager, TSharedRef<FWorkspaceItem> InWorkspaceGroup) : MenuExtender(MakeShared<FExtender>()) , TabManager(InTabManager) , WorkspaceGroup(InWorkspaceGroup)"
  },
  {
    "label": "GetMenuExtender()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FExtender>&)",
    "insertText": "GetMenuExtender()"
  },
  {
    "label": "GetTabManager()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FTabManager>)",
    "insertText": "GetTabManager()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnInsightsMajorTabCreated, FName , TSharedRef<FTabManager>)"
  },
  {
    "label": "IUnrealInsightsModule()",
    "kind": "Method",
    "detail": "Function (class IUnrealInsightsModule : public IModuleInterface { public : ~)",
    "insertText": "IUnrealInsightsModule()"
  },
  {
    "label": "RegisterComponent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterComponent(TSharedPtr<IInsightsComponent> Component)"
  },
  {
    "label": "UnregisterComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterComponent(TSharedPtr<IInsightsComponent> Component)"
  },
  {
    "label": "CreateDefaultStore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDefaultStore()"
  },
  {
    "label": "GetDefaultStoreDir()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultStoreDir()"
  },
  {
    "label": "GetStoreClient()",
    "kind": "Method",
    "detail": "Function (UE::Trace::FStoreClient*)",
    "insertText": "GetStoreClient()"
  },
  {
    "label": "ConnectToStore()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectToStore(const TCHAR* InStoreHost, uint32 InStorePort=0)"
  },
  {
    "label": "GetInsightsManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<::Insights::IInsightsManager>)",
    "insertText": "GetInsightsManager()"
  },
  {
    "label": "GetAnalysisSession()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<const TraceServices::IAnalysisSession>)",
    "insertText": "GetAnalysisSession()"
  },
  {
    "label": "StartAnalysisForTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAnalysisForTrace(uint32 InTraceId, bool InAutoQuit = false)"
  },
  {
    "label": "StartAnalysisForLastLiveSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAnalysisForLastLiveSession(float InRetryTime = 1.0f)"
  },
  {
    "label": "StartAnalysisForTraceFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAnalysisForTraceFile(const TCHAR* InTraceFile, bool InAutoQuit = false)"
  },
  {
    "label": "RegisterMajorTabConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMajorTabConfig(const FName& InMajorTabId, const FInsightsMajorTabConfig& InConfig)"
  },
  {
    "label": "UnregisterMajorTabConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterMajorTabConfig(const FName& InMajorTabId)"
  },
  {
    "label": "OnRegisterMajorTabExtension()",
    "kind": "Method",
    "detail": "Function (FOnRegisterMajorTabExtensions&)",
    "insertText": "OnRegisterMajorTabExtension(const FName& InMajorTabId)"
  },
  {
    "label": "OnMajorTabCreated()",
    "kind": "Method",
    "detail": "Function (FOnInsightsMajorTabCreated&)",
    "insertText": "OnMajorTabCreated()"
  },
  {
    "label": "FindMajorTabConfig()",
    "kind": "Method",
    "detail": "Function (const FInsightsMajorTabConfig&)",
    "insertText": "FindMajorTabConfig(const FName& InMajorTabId)"
  },
  {
    "label": "FindMajorTabLayoutExtension()",
    "kind": "Method",
    "detail": "Function (FOnRegisterMajorTabExtensions*)",
    "insertText": "FindMajorTabLayoutExtension(const FName& InMajorTabId)"
  },
  {
    "label": "SetUnrealInsightsLayoutIni()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUnrealInsightsLayoutIni(const FString& InIniPath)"
  },
  {
    "label": "CreateSessionViewer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSessionViewer(bool bAllowDebugTools = false)"
  },
  {
    "label": "ShutdownUserInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownUserInterface()"
  },
  {
    "label": "ScheduleCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleCommand(const FString& InCmd)"
  },
  {
    "label": "InitializeTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTesting(bool InInitAutomationModules, bool InAutoQuit)"
  },
  {
    "label": "Exec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Exec(const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} ; class IInsightsComponent { public : void)",
    "insertText": "Initialize(IUnrealInsightsModule& Module)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "RegisterMajorTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMajorTabs(IUnrealInsightsModule& InsightsModule)"
  },
  {
    "label": "UnregisterMajorTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterMajorTabs()"
  },
  {
    "label": "OnWindowClosedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowClosedEvent()"
  }
]