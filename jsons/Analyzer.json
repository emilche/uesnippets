[
  {
    "label": "EventLogAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EventLogAnalyzer"
  },
  {
    "label": "EventLogAnalyzer()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_TOOLS_RTC_EVENT_LOG_VISUALIZER_ANALYZER_H_ # define RTC_TOOLS_RTC_EVENT_LOG_VISUALIZER_ANALYZER_H_ # include<map> # include<memory> # include<set> # include<string> # include<utility> # include<vector> # include \" logging / rtc_event_log / rtc_event_log_parser . h \" # include \" modules / audio_coding / neteq / tools / neteq_stats_getter . h \" # include \" rtc_base / strings / string_builder . h \" # include \" rtc_tools / rtc_event_log_visualizer / analyzer_common . h \" # include \" rtc_tools / rtc_event_log_visualizer / plot_base . h \" namespace webrtc { class EventLogAnalyzer { public :)",
    "insertText": "EventLogAnalyzer(const ParsedRtcEventLog& log, bool normalize_time)"
  },
  {
    "label": "EventLogAnalyzer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventLogAnalyzer(const ParsedRtcEventLog& log, const AnalyzerConfig& config)"
  },
  {
    "label": "CreatePacketGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePacketGraph(PacketDirection direction, Plot* plot)"
  },
  {
    "label": "CreateRtcpTypeGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRtcpTypeGraph(PacketDirection direction, Plot* plot)"
  },
  {
    "label": "CreateAccumulatedPacketsGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAccumulatedPacketsGraph(PacketDirection direction, Plot* plot)"
  },
  {
    "label": "CreatePacketRateGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePacketRateGraph(PacketDirection direction, Plot* plot)"
  },
  {
    "label": "CreateTotalPacketRateGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTotalPacketRateGraph(PacketDirection direction, Plot* plot)"
  },
  {
    "label": "CreatePlayoutGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePlayoutGraph(Plot* plot)"
  },
  {
    "label": "CreateAudioLevelGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAudioLevelGraph(PacketDirection direction, Plot* plot)"
  },
  {
    "label": "CreateSequenceNumberGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSequenceNumberGraph(Plot* plot)"
  },
  {
    "label": "CreateIncomingPacketLossGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateIncomingPacketLossGraph(Plot* plot)"
  },
  {
    "label": "CreateIncomingDelayGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateIncomingDelayGraph(Plot* plot)"
  },
  {
    "label": "CreateFractionLossGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFractionLossGraph(Plot* plot)"
  },
  {
    "label": "CreateTotalIncomingBitrateGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTotalIncomingBitrateGraph(Plot* plot)"
  },
  {
    "label": "CreateTotalOutgoingBitrateGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTotalOutgoingBitrateGraph(Plot* plot, bool show_detector_state = false, bool show_alr_state = false, bool show_link_capacity = false)"
  },
  {
    "label": "CreateStreamBitrateGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateStreamBitrateGraph(PacketDirection direction, Plot* plot)"
  },
  {
    "label": "CreateBitrateAllocationGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateBitrateAllocationGraph(PacketDirection direction, Plot* plot)"
  },
  {
    "label": "CreateGoogCcSimulationGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGoogCcSimulationGraph(Plot* plot)"
  },
  {
    "label": "CreateSendSideBweSimulationGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSendSideBweSimulationGraph(Plot* plot)"
  },
  {
    "label": "CreateReceiveSideBweSimulationGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateReceiveSideBweSimulationGraph(Plot* plot)"
  },
  {
    "label": "CreateNetworkDelayFeedbackGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNetworkDelayFeedbackGraph(Plot* plot)"
  },
  {
    "label": "CreatePacerDelayGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePacerDelayGraph(Plot* plot)"
  },
  {
    "label": "CreateTimestampGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTimestampGraph(PacketDirection direction, Plot* plot)"
  },
  {
    "label": "CreateSenderAndReceiverReportPlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSenderAndReceiverReportPlot(PacketDirection direction, rtc::FunctionView<float(const rtcp::ReportBlock&)> fy, std::string title, std::string yaxis_label, Plot* plot)"
  },
  {
    "label": "CreateIceCandidatePairConfigGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateIceCandidatePairConfigGraph(Plot* plot)"
  },
  {
    "label": "CreateIceConnectivityCheckGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateIceConnectivityCheckGraph(Plot* plot)"
  },
  {
    "label": "CreateDtlsTransportStateGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDtlsTransportStateGraph(Plot* plot)"
  },
  {
    "label": "CreateDtlsWritableStateGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDtlsWritableStateGraph(Plot* plot)"
  },
  {
    "label": "CreateTriageNotifications()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTriageNotifications()"
  },
  {
    "label": "PrintNotifications()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintNotifications(FILE* file)"
  },
  {
    "label": "CreateAccumulatedPacketsTimeSeries()",
    "kind": "Method",
    "detail": "Function (private : template<IterableType> void)",
    "insertText": "CreateAccumulatedPacketsTimeSeries(Plot* plot, const IterableType& packets, const std::string& label)"
  },
  {
    "label": "GetCandidatePairLogDescriptionFromId()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetCandidatePairLogDescriptionFromId(uint32_t candidate_pair_id)"
  }
]