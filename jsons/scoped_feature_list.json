[
  {
    "label": "FeatureRefAndParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FeatureRefAndParams"
  },
  {
    "label": "FeatureRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FeatureRef"
  },
  {
    "label": "are",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "are"
  },
  {
    "label": "ScopedFeatureList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedFeatureList"
  },
  {
    "label": "Features",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Features"
  },
  {
    "label": "FeatureWithStudyGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FeatureWithStudyGroup"
  },
  {
    "label": "ScopedFeatureList()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ScopedFeatureList(const Feature& enable_feature)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "InitWithEmptyFeatureAndFieldTrialLists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWithEmptyFeatureAndFieldTrialLists()"
  },
  {
    "label": "InitWithNullFeatureAndFieldTrialLists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWithNullFeatureAndFieldTrialLists()"
  },
  {
    "label": "InitWithFeatureList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWithFeatureList(std::unique_ptr<FeatureList> feature_list)"
  },
  {
    "label": "InitFromCommandLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromCommandLine(const std::string& enable_features,\n                           const std::string& disable_features)"
  },
  {
    "label": "InitWithFeatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWithFeatures(const std::vector<FeatureRef>& enabled_features,\n                        const std::vector<FeatureRef>& disabled_features)"
  },
  {
    "label": "InitAndEnableFeature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAndEnableFeature(const Feature& feature)"
  },
  {
    "label": "InitAndEnableFeatureWithParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAndEnableFeatureWithParameters(\n      const Feature& feature,\n      const FieldTrialParams& feature_parameters)"
  },
  {
    "label": "InitWithFeaturesAndParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWithFeaturesAndParameters(\n      const std::vector<FeatureRefAndParams>& enabled_features,\n      const std::vector<FeatureRef>& disabled_features)"
  },
  {
    "label": "InitAndDisableFeature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAndDisableFeature(const Feature& feature)"
  },
  {
    "label": "InitWithFeatureState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWithFeatureState(const Feature& feature, bool enabled)"
  },
  {
    "label": "InitWithFeaturesImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWithFeaturesImpl(\n      const std::vector<FeatureRef>& enabled_features,\n      const std::vector<FeatureRefAndParams>& enabled_features_and_params,\n      const std::vector<FeatureRef>& disabled_features,\n      bool keep_existing_states = true)"
  },
  {
    "label": "InitWithMergedFeatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWithMergedFeatures(Features&& merged_features,\n                              bool create_associated_field_trials,\n                              bool keep_existing_states)"
  }
]