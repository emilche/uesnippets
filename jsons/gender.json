[
  {
    "label": "GenderInfoTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GenderInfoTest"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "GenderInfo_initCache()",
    "kind": "Method",
    "detail": "Function (# ifndef _GENDER # define _GENDER # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / locid . h \" # include \" unicode / ugender . h \" # include \" unicode / uobject . h \" class GenderInfoTest ; U_NAMESPACE_BEGIN void U_CALLCONV)",
    "insertText": "GenderInfo_initCache(UErrorCode &status)"
  },
  {
    "label": "getInstance()",
    "kind": "Method",
    "detail": "Function (class U_I18N_API GenderInfo : public UObject { public : const GenderInfo* U_EXPORT2)",
    "insertText": "getInstance(const Locale& locale, UErrorCode& status)"
  },
  {
    "label": "getListGender()",
    "kind": "Method",
    "detail": "Function (UGender)",
    "insertText": "getListGender(const UGender* genders, int32_t length, UErrorCode& status)"
  },
  {
    "label": "GenderInfo()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "GenderInfo()"
  },
  {
    "label": "GenderInfo()",
    "kind": "Method",
    "detail": "Function (private : int32_t _style ;)",
    "insertText": "GenderInfo(const GenderInfo& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (GenderInfo&)",
    "insertText": "operator(const GenderInfo&)"
  },
  {
    "label": "getNeutralInstance()",
    "kind": "Method",
    "detail": "Function (const GenderInfo*)",
    "insertText": "getNeutralInstance()"
  },
  {
    "label": "getMixedNeutralInstance()",
    "kind": "Method",
    "detail": "Function (const GenderInfo*)",
    "insertText": "getMixedNeutralInstance()"
  },
  {
    "label": "getMaleTaintsInstance()",
    "kind": "Method",
    "detail": "Function (const GenderInfo*)",
    "insertText": "getMaleTaintsInstance()"
  },
  {
    "label": "loadInstance()",
    "kind": "Method",
    "detail": "Function (const GenderInfo*)",
    "insertText": "loadInstance(const Locale& locale, UErrorCode& status)"
  }
]