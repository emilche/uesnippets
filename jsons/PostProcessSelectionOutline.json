[
  {
    "label": "FSceneUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneUniformBuffer"
  },
  {
    "label": "FRasterResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRasterResults"
  },
  {
    "label": "FSelectionOutlineInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSelectionOutlineInputs"
  },
  {
    "label": "AddSelectionOutlinePass()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" ScreenPass . h \" # include \" OverridePassSequence . h \" # include \" PostProcess / LensDistortion . h \" class FSceneUniformBuffer ; namespace Nanite { struct FRasterResults ; } struct FSelectionOutlineInputs { FScreenPassRenderTarget OverrideOutput ; FScreenPassTexture SceneColor ; FScreenPassTexture SceneDepth ; FSceneTextureShaderParameters SceneTextures ; FLensDistortionLUT LensDistortionLUT ; } ; FScreenPassTexture)",
    "insertText": "AddSelectionOutlinePass(FRDGBuilder& GraphBuilder, const FViewInfo& View, FSceneUniformBuffer &SceneUniformBuffer, const FSelectionOutlineInputs& Inputs, const Nanite::FRasterResults* NaniteRasterResults, FRDGTextureRef& DepthStencilTexture)"
  }
]