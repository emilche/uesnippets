[
  {
    "label": "PointerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PointerType"
  },
  {
    "label": "IntegerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IntegerType"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "LLVMContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContextImpl"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "GraphType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GraphType"
  },
  {
    "label": "GraphTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GraphTraits"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "TypeID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TypeID"
  },
  {
    "label": "isa_impl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "isa_impl"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_TYPE_H # define LLVM_IR_TYPE_H # include \" llvm - c / Core . h \" # include \" llvm / ADT / APFloat . h \" # include \" llvm / ADT / SmallPtrSet . h \" # include \" llvm / Support / CBindingWrapping . h \" # include \" llvm / Support / Casting . h \" # include \" llvm / Support / DataTypes . h \" # include \" llvm / Support / ErrorHandling . h \" namespace llvm { class PointerType ; class IntegerType ; class raw_ostream ; class Module ; class LLVMContext ; class LLVMContextImpl ; class StringRef ; template<class GraphType> struct GraphTraits ; class Type { public : enum TypeID { VoidTyID = 0,HalfTyID,FloatTyID,DoubleTyID,X86_FP80TyID,FP128TyID,PPC_FP128TyID,LabelTyID,MetadataTyID,X86_MMXTyID,IntegerTyID,FunctionTyID,StructTyID,ArrayTyID,PointerTyID,VectorTyID } ; private : LLVMContext& Context ; uint32_t IDAndSubclassData ; protected : class LLVMContextImpl ;)",
    "insertText": "Type(LLVMContext &C, TypeID tid) : Context(C), IDAndSubclassData(0), NumContainedTys(0), ContainedTys(nullptr)"
  },
  {
    "label": "setTypeID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTypeID(tid)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "Type()"
  },
  {
    "label": "setTypeID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTypeID(TypeID ID)"
  },
  {
    "label": "IDAndSubclassData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IDAndSubclassData(ID & 0xFF) | (IDAndSubclassData & 0xFFFFFF00)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(getTypeID() == ID && \"TypeID data too large for field\")"
  },
  {
    "label": "getSubclassData()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getSubclassData()"
  },
  {
    "label": "IDAndSubclassData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IDAndSubclassData(IDAndSubclassData & 0xFF) | (val << 8)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(getSubclassData() == val && \"Subclass data too large for field\")"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (} unsigned NumContainedTys ; Type* const* ContainedTys ; public : void)",
    "insertText": "print(raw_ostream &O)"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (LLVM_DUMP_METHOD void)",
    "insertText": "dump()"
  },
  {
    "label": "getContext()",
    "kind": "Method",
    "detail": "Function (LLVMContext&)",
    "insertText": "getContext()"
  },
  {
    "label": "isVoidTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isVoidTy()"
  },
  {
    "label": "isHalfTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isHalfTy()"
  },
  {
    "label": "isFloatTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isFloatTy()"
  },
  {
    "label": "isDoubleTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isDoubleTy()"
  },
  {
    "label": "isX86_FP80Ty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isX86_FP80Ty()"
  },
  {
    "label": "isFP128Ty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isFP128Ty()"
  },
  {
    "label": "isPPC_FP128Ty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isPPC_FP128Ty()"
  },
  {
    "label": "isFloatingPointTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isFloatingPointTy()"
  },
  {
    "label": "getFltSemantics()",
    "kind": "Method",
    "detail": "Function (} const fltSemantics&)",
    "insertText": "getFltSemantics()"
  },
  {
    "label": "isX86_MMXTy()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "isX86_MMXTy()"
  },
  {
    "label": "isFPOrFPVectorTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isFPOrFPVectorTy()"
  },
  {
    "label": "isLabelTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isLabelTy()"
  },
  {
    "label": "isMetadataTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isMetadataTy()"
  },
  {
    "label": "isIntegerTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isIntegerTy()"
  },
  {
    "label": "isIntegerTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isIntegerTy(unsigned Bitwidth)"
  },
  {
    "label": "isIntOrIntVectorTy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isIntOrIntVectorTy()"
  },
  {
    "label": "isFunctionTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isFunctionTy()"
  },
  {
    "label": "isStructTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isStructTy()"
  },
  {
    "label": "isArrayTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isArrayTy()"
  },
  {
    "label": "isPointerTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isPointerTy()"
  },
  {
    "label": "isPtrOrPtrVectorTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isPtrOrPtrVectorTy()"
  },
  {
    "label": "isVectorTy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isVectorTy()"
  },
  {
    "label": "canLosslesslyBitCastTo()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "canLosslesslyBitCastTo(Type *Ty)"
  },
  {
    "label": "isEmptyTy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isEmptyTy()"
  },
  {
    "label": "isFirstClassType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isFirstClassType()"
  },
  {
    "label": "isSingleValueType()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isSingleValueType()"
  },
  {
    "label": "isAggregateType()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isAggregateType()"
  },
  {
    "label": "isSized()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isSized(SmallPtrSetImpl<const Type*> *Visited = nullptr)"
  },
  {
    "label": "getPrimitiveSizeInBits()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getPrimitiveSizeInBits()"
  },
  {
    "label": "getScalarSizeInBits()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getScalarSizeInBits()"
  },
  {
    "label": "getFPMantissaWidth()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getFPMantissaWidth()"
  },
  {
    "label": "getScalarType()",
    "kind": "Method",
    "detail": "Function (const Type*)",
    "insertText": "getScalarType()"
  },
  {
    "label": "subtype_begin()",
    "kind": "Method",
    "detail": "Function (typedef Type* const* subtype_iterator ; subtype_iterator)",
    "insertText": "subtype_begin()"
  },
  {
    "label": "subtype_rbegin()",
    "kind": "Method",
    "detail": "Function (} typedef std::reverse_iterator<subtype_iterator> subtype_reverse_iterator ; subtype_reverse_iterator)",
    "insertText": "subtype_rbegin()"
  },
  {
    "label": "subtype_rend()",
    "kind": "Method",
    "detail": "Function (} subtype_reverse_iterator)",
    "insertText": "subtype_rend()"
  },
  {
    "label": "getContainedType()",
    "kind": "Method",
    "detail": "Function (} Type*)",
    "insertText": "getContainedType(unsigned i)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(i < NumContainedTys && \"Index out of range!\")"
  },
  {
    "label": "getFunctionParamType()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getFunctionParamType(unsigned i)"
  },
  {
    "label": "getFunctionNumParams()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getFunctionNumParams()"
  },
  {
    "label": "isFunctionVarArg()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isFunctionVarArg()"
  },
  {
    "label": "getStructName()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "getStructName()"
  },
  {
    "label": "getStructNumElements()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getStructNumElements()"
  },
  {
    "label": "getStructElementType()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getStructElementType(unsigned N)"
  },
  {
    "label": "getSequentialElementType()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getSequentialElementType()"
  },
  {
    "label": "getArrayNumElements()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getArrayNumElements()"
  },
  {
    "label": "getArrayElementType()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getArrayElementType()"
  },
  {
    "label": "getVectorNumElements()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getVectorNumElements()"
  },
  {
    "label": "getVectorElementType()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getVectorElementType()"
  },
  {
    "label": "getPointerElementType()",
    "kind": "Method",
    "detail": "Function (} Type*)",
    "insertText": "getPointerElementType()"
  },
  {
    "label": "getPointerAddressSpace()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getPointerAddressSpace()"
  },
  {
    "label": "getPrimitiveType()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getPrimitiveType(LLVMContext &C, TypeID IDNumber)"
  },
  {
    "label": "getVoidTy()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getVoidTy(LLVMContext &C)"
  },
  {
    "label": "getLabelTy()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getLabelTy(LLVMContext &C)"
  },
  {
    "label": "getHalfTy()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getHalfTy(LLVMContext &C)"
  },
  {
    "label": "getFloatTy()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getFloatTy(LLVMContext &C)"
  },
  {
    "label": "getDoubleTy()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getDoubleTy(LLVMContext &C)"
  },
  {
    "label": "getMetadataTy()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getMetadataTy(LLVMContext &C)"
  },
  {
    "label": "getX86_FP80Ty()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getX86_FP80Ty(LLVMContext &C)"
  },
  {
    "label": "getFP128Ty()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getFP128Ty(LLVMContext &C)"
  },
  {
    "label": "getPPC_FP128Ty()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getPPC_FP128Ty(LLVMContext &C)"
  },
  {
    "label": "getX86_MMXTy()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getX86_MMXTy(LLVMContext &C)"
  },
  {
    "label": "getIntNTy()",
    "kind": "Method",
    "detail": "Function (IntegerType*)",
    "insertText": "getIntNTy(LLVMContext &C, unsigned N)"
  },
  {
    "label": "getInt1Ty()",
    "kind": "Method",
    "detail": "Function (IntegerType*)",
    "insertText": "getInt1Ty(LLVMContext &C)"
  },
  {
    "label": "getInt8Ty()",
    "kind": "Method",
    "detail": "Function (IntegerType*)",
    "insertText": "getInt8Ty(LLVMContext &C)"
  },
  {
    "label": "getInt16Ty()",
    "kind": "Method",
    "detail": "Function (IntegerType*)",
    "insertText": "getInt16Ty(LLVMContext &C)"
  },
  {
    "label": "getInt32Ty()",
    "kind": "Method",
    "detail": "Function (IntegerType*)",
    "insertText": "getInt32Ty(LLVMContext &C)"
  },
  {
    "label": "getInt64Ty()",
    "kind": "Method",
    "detail": "Function (IntegerType*)",
    "insertText": "getInt64Ty(LLVMContext &C)"
  },
  {
    "label": "getInt128Ty()",
    "kind": "Method",
    "detail": "Function (IntegerType*)",
    "insertText": "getInt128Ty(LLVMContext &C)"
  },
  {
    "label": "getHalfPtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getHalfPtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getFloatPtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getFloatPtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getDoublePtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getDoublePtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getX86_FP80PtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getX86_FP80PtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getFP128PtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getFP128PtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getPPC_FP128PtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getPPC_FP128PtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getX86_MMXPtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getX86_MMXPtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getIntNPtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getIntNPtrTy(LLVMContext &C, unsigned N, unsigned AS = 0)"
  },
  {
    "label": "getInt1PtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getInt1PtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getInt8PtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getInt8PtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getInt16PtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getInt16PtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getInt32PtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getInt32PtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getInt64PtrTy()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getInt64PtrTy(LLVMContext &C, unsigned AS = 0)"
  },
  {
    "label": "getPointerTo()",
    "kind": "Method",
    "detail": "Function (PointerType*)",
    "insertText": "getPointerTo(unsigned AddrSpace = 0)"
  },
  {
    "label": "isSizedDerivedType()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "isSizedDerivedType(SmallPtrSetImpl<const Type*> *Visited = nullptr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; raw_ostream&)",
    "insertText": "operator(raw_ostream &OS, Type &T)"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (T .)",
    "insertText": "print(OS)"
  },
  {
    "label": "getEntryNode()",
    "kind": "Method",
    "detail": "Function (} } ; template<> struct GraphTraits<Type*> { typedef Type NodeType ; typedef Type::subtype_iterator ChildIteratorType ; NodeType*)",
    "insertText": "getEntryNode(Type *T)"
  },
  {
    "label": "child_end()",
    "kind": "Method",
    "detail": "Function (} ChildIteratorType)",
    "insertText": "child_end(NodeType *N)"
  },
  {
    "label": "getEntryNode()",
    "kind": "Method",
    "detail": "Function (} } ; template<> struct GraphTraits<const Type*> { typedef const Type NodeType ; typedef Type::subtype_iterator ChildIteratorType ; NodeType*)",
    "insertText": "getEntryNode(NodeType *T)"
  },
  {
    "label": "DEFINE_ISA_CONVERSION_FUNCTIONS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "DEFINE_ISA_CONVERSION_FUNCTIONS(Type, LLVMTypeRef) inline Type **unwrap(LLVMTypeRef* Tys)"
  },
  {
    "label": "wrap()",
    "kind": "Method",
    "detail": "Function (} LLVMTypeRef*)",
    "insertText": "wrap(Type **Tys)"
  }
]