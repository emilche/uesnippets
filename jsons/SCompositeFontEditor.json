[
  {
    "label": "IFontEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFontEditor"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SInlineEditableTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInlineEditableTextBlock"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UFont",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFont"
  },
  {
    "label": "UFontFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFontFace"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FCharacterRangeTileViewEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterRangeTileViewEntry"
  },
  {
    "label": "FCompositeFallbackFont",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompositeFallbackFont"
  },
  {
    "label": "FCompositeFont",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompositeFont"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FSubTypefaceListViewEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubTypefaceListViewEntry"
  },
  {
    "label": "FTypeface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypeface"
  },
  {
    "label": "FTypefaceListViewEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypefaceListViewEntry"
  },
  {
    "label": "SCompositeFontEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCompositeFontEditor"
  },
  {
    "label": "STypefaceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STypefaceEditor"
  },
  {
    "label": "STypefaceEntryEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STypefaceEntryEditor"
  },
  {
    "label": "FSubFaceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubFaceInfo"
  },
  {
    "label": "SSubTypefaceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSubTypefaceEditor"
  },
  {
    "label": "SCharacterRangeEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCharacterRangeEditor"
  },
  {
    "label": "SFontScalingFactorEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFontScalingFactorEditor"
  },
  {
    "label": "SFontOverrideSelector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFontOverrideSelector"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" Delegates / Delegate . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Fonts / UnicodeBlockRange . h \" # include \" Framework / SlateDelegates . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Misc / Attribute . h \" # include \" Misc / Optional . h \" # include \" Serialization / Archive . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" Types / SlateConstants . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Input / SComboBox . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STileView . h \" class IFontEditor ; class ITableRow ; class SInlineEditableTextBlock ; class SWidget ; class UFont ; class UFontFace ; struct FAssetData ; struct FCharacterRangeTileViewEntry ; struct FCompositeFallbackFont ; struct FCompositeFont ; struct FGeometry ; struct FSubTypefaceListViewEntry ; struct FTypeface ; struct FTypefaceListViewEntry ; typedef TSharedPtr<FTypefaceListViewEntry> FTypefaceListViewEntryPtr ; typedef TSharedPtr<FSubTypefaceListViewEntry> FSubTypefaceListViewEntryPtr ; typedef TSharedPtr<FCharacterRangeTileViewEntry> FCharacterRangeTileViewEntryPtr ; class SCompositeFontEditor : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SCompositeFontEditor) : _FontEditor()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakPtr<IFontEditor>, FontEditor) SLATE_END_ARGS() ~SCompositeFontEditor()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "FlushCachedFont()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCachedFont()"
  },
  {
    "label": "GetFontObject()",
    "kind": "Method",
    "detail": "Function (UFont*)",
    "insertText": "GetFontObject()"
  },
  {
    "label": "GetCompositeFont()",
    "kind": "Method",
    "detail": "Function (private : FCompositeFont*)",
    "insertText": "GetCompositeFont()"
  },
  {
    "label": "GetDefaultTypeface()",
    "kind": "Method",
    "detail": "Function (FTypeface*)",
    "insertText": "GetDefaultTypeface()"
  },
  {
    "label": "GetConstDefaultTypeface()",
    "kind": "Method",
    "detail": "Function (const FTypeface*)",
    "insertText": "GetConstDefaultTypeface()"
  },
  {
    "label": "GetFallbackTypeface()",
    "kind": "Method",
    "detail": "Function (FTypeface*)",
    "insertText": "GetFallbackTypeface()"
  },
  {
    "label": "GetConstFallbackTypeface()",
    "kind": "Method",
    "detail": "Function (const FTypeface*)",
    "insertText": "GetConstFallbackTypeface()"
  },
  {
    "label": "GetFallbackFont()",
    "kind": "Method",
    "detail": "Function (FCompositeFallbackFont*)",
    "insertText": "GetFallbackFont()"
  },
  {
    "label": "UpdateSubTypefaceList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSubTypefaceList()"
  },
  {
    "label": "MakeSubTypefaceEntryWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeSubTypefaceEntryWidget(FSubTypefaceListViewEntryPtr InSubTypefaceEntry, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnAddSubFontFamily()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddSubFontFamily()"
  },
  {
    "label": "OnDeleteSubFontFamily()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteSubFontFamily(const FSubTypefaceListViewEntryPtr& SubTypefaceEntryToRemove)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<IFontEditor> FontEditorPtr ; TSharedPtr<class STypefaceEditor> DefaultTypefaceEditor ; TSharedPtr<class STypefaceEditor> FallbackTypefaceEditor ; TArray<FSubTypefaceListViewEntryPtr> SubTypefaceEntries ; TSharedPtr<SListView<FSubTypefaceListViewEntryPtr>> SubTypefaceEntriesListView ; } ; class STypefaceEditor : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(STypefaceEditor) : _CompositeFontEditor(nullptr) , _Typeface(nullptr) , _TypefaceDisplayName() , _OnDisplayNameCommitted() , _TypefaceDisplayNameToolTip() , _HeaderContent() , _BodyContent()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(SCompositeFontEditor*, CompositeFontEditor) SLATE_ATTRIBUTE(FTypeface*, Typeface) SLATE_ATTRIBUTE(FText, TypefaceDisplayName) SLATE_EVENT(FOnTextCommitted, OnDisplayNameCommitted) SLATE_ATTRIBUTE(FText, TypefaceDisplayNameToolTip) SLATE_NAMED_SLOT(FArguments, HeaderContent) SLATE_NAMED_SLOT(FArguments, BodyContent) SLATE_END_ARGS() ~STypefaceEditor()"
  },
  {
    "label": "RequestRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRename()"
  },
  {
    "label": "UpdateFontList()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateFontList()"
  },
  {
    "label": "MakeTypefaceEntryWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeTypefaceEntryWidget(FTypefaceListViewEntryPtr InTypefaceEntry, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnAddFont()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddFont()"
  },
  {
    "label": "OnDeleteFont()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteFont(const FTypefaceListViewEntryPtr& TypefaceEntryToRemove)"
  },
  {
    "label": "OnVerifyFontName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnVerifyFontName(const FTypefaceListViewEntryPtr& TypefaceEntryBeingRenamed, const FName& NewName, FText& OutFailureReason)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (SCompositeFontEditor* CompositeFontEditorPtr ; TAttribute<FTypeface*> Typeface ; TArray<FTypefaceListViewEntryPtr> TypefaceEntries ; TSharedPtr<SInlineEditableTextBlock> NameEditableTextBox ; TSharedPtr<STileView<FTypefaceListViewEntryPtr>> TypefaceEntriesTileView ; } ; class STypefaceEntryEditor : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnDeleteFont, const FTypefaceListViewEntryPtr&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_ThreeParams(bool, FOnVerifyFontName, const FTypefaceListViewEntryPtr& , const FName& , FText&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(STypefaceEntryEditor) : _CompositeFontEditor(nullptr) , _TypefaceEntry() , _OnDeleteFont() , _OnVerifyFontName()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(SCompositeFontEditor*, CompositeFontEditor) SLATE_ARGUMENT(FTypefaceListViewEntryPtr, TypefaceEntry) SLATE_EVENT(FOnDeleteFont, OnDeleteFont) SLATE_EVENT(FOnVerifyFontName, OnVerifyFontName) SLATE_END_ARGS() ~STypefaceEntryEditor()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "GetTypefaceEntryName()",
    "kind": "Method",
    "detail": "Function (private : struct FSubFaceInfo { int32 Index ; FText Description ; } ; FText)",
    "insertText": "GetTypefaceEntryName()"
  },
  {
    "label": "OnTypefaceEntryNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTypefaceEntryNameCommitted(const FText& InNewName, ETextCommit::Type InCommitType)"
  },
  {
    "label": "OnTypefaceEntryChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnTypefaceEntryChanged(const FText& InNewName, FText& OutFailureReason)"
  },
  {
    "label": "GetFontFaceAssetPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFontFaceAssetPath()"
  },
  {
    "label": "OnFontFaceAssetChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFontFaceAssetChanged(const FAssetData& InAssetData)"
  },
  {
    "label": "OnBrowseTypefaceEntryFontPath()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnBrowseTypefaceEntryFontPath()"
  },
  {
    "label": "OnTypefaceEntryFontPathPicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTypefaceEntryFontPathPicked(const FString& InNewFontFilename)"
  },
  {
    "label": "OnDeleteFontClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDeleteFontClicked()"
  },
  {
    "label": "CacheSubFaceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheSubFaceData()"
  },
  {
    "label": "GetSubFaceVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSubFaceVisibility()"
  },
  {
    "label": "GetCurrentSubFaceSelectionDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCurrentSubFaceSelectionDisplayName()"
  },
  {
    "label": "OnSubFaceSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSubFaceSelectionChanged(TSharedPtr<FSubFaceInfo> InSubFace, ESelectInfo::Type)"
  },
  {
    "label": "MakeSubFaceSelectionWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeSubFaceSelectionWidget(TSharedPtr<FSubFaceInfo> InSubFace)"
  },
  {
    "label": "GetUpgradeDataVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetUpgradeDataVisibility()"
  },
  {
    "label": "OnUpgradeDataClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnUpgradeDataClicked()"
  },
  {
    "label": "SaveFontFaceAsAsset()",
    "kind": "Method",
    "detail": "Function (UFontFace*)",
    "insertText": "SaveFontFaceAsAsset(const UFontFace* InFontFace, const TCHAR* InDefaultNameOverride)"
  },
  {
    "label": "GetPreviewFontStyle()",
    "kind": "Method",
    "detail": "Function (FSlateFontInfo)",
    "insertText": "GetPreviewFontStyle()"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (SCompositeFontEditor* CompositeFontEditorPtr ; FTypefaceListViewEntryPtr TypefaceEntry ; FOnDeleteFont OnDeleteFont ; FOnVerifyFontName OnVerifyFontName ; TSharedPtr<SInlineEditableTextBlock> NameEditableTextBox ; TSharedPtr<SComboBox<TSharedPtr<FSubFaceInfo>>> SubFacesCombo ; TArray<TSharedPtr<FSubFaceInfo>> SubFacesData ; } ; class SSubTypefaceEditor : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnDeleteSubFontFamily, const FSubTypefaceListViewEntryPtr&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SSubTypefaceEditor) : _CompositeFontEditor(nullptr) , _SubTypeface() , _ParentTypeface(nullptr) , _OnDeleteSubFontFamily()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(SCompositeFontEditor*, CompositeFontEditor) SLATE_ARGUMENT(FSubTypefaceListViewEntryPtr, SubTypeface) SLATE_ATTRIBUTE(const FTypeface*, ParentTypeface) SLATE_EVENT(FOnDeleteSubFontFamily, OnDeleteSubFontFamily) SLATE_END_ARGS() ~SSubTypefaceEditor()"
  },
  {
    "label": "GetTypeface()",
    "kind": "Method",
    "detail": "Function (private : FTypeface*)",
    "insertText": "GetTypeface()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "OnDisplayNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisplayNameCommitted(const FText& InNewName, ETextCommit::Type InCommitType)"
  },
  {
    "label": "OnDeleteSubFontFamilyClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDeleteSubFontFamilyClicked()"
  },
  {
    "label": "UpdateCharacterRangesList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCharacterRangesList()"
  },
  {
    "label": "MakeCharacterRangesEntryWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeCharacterRangesEntryWidget(FCharacterRangeTileViewEntryPtr InCharacterRangeEntry, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnAddCharacterRangeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddCharacterRangeClicked()"
  },
  {
    "label": "OnDeleteCharacterRangeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDeleteCharacterRangeClicked(FCharacterRangeTileViewEntryPtr InCharacterRangeEntry)"
  },
  {
    "label": "GetCultures()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCultures()"
  },
  {
    "label": "OnCulturesCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCulturesCommitted(const FText& InCultures, ETextCommit::Type InCommitType)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (SCompositeFontEditor* CompositeFontEditorPtr ; FSubTypefaceListViewEntryPtr SubTypeface ; TAttribute<const FTypeface*> ParentTypeface ; FOnDeleteSubFontFamily OnDeleteSubFontFamily ; TSharedPtr<STypefaceEditor> TypefaceEditor ; TArray<FCharacterRangeTileViewEntryPtr> CharacterRangeEntries ; TSharedPtr<STileView<FCharacterRangeTileViewEntryPtr>> CharacterRangeEntriesTileView ; } ; class SCharacterRangeEditor : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SCharacterRangeEditor) : _CompositeFontEditor(nullptr) , _CharacterRange()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(SCompositeFontEditor*, CompositeFontEditor) SLATE_ARGUMENT(FCharacterRangeTileViewEntryPtr, CharacterRange) SLATE_END_ARGS() ~SCharacterRangeEditor()"
  },
  {
    "label": "GetRangeComponentAsTCHAR()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "GetRangeComponentAsTCHAR(int32 InComponentIndex)"
  },
  {
    "label": "GetRangeComponentAsHexString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetRangeComponentAsHexString(int32 InComponentIndex)"
  },
  {
    "label": "GetRangeComponentAsOptional()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "GetRangeComponentAsOptional(int32 InComponentIndex)"
  },
  {
    "label": "GetRangeComponent()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetRangeComponent(const int32 InComponentIndex)"
  },
  {
    "label": "OnRangeComponentCommittedAsTCHAR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeComponentCommittedAsTCHAR(const FText& InNewValue, ETextCommit::Type InCommitType, int32 InComponentIndex)"
  },
  {
    "label": "OnRangeComponentCommittedAsHexString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeComponentCommittedAsHexString(const FText& InNewValue, ETextCommit::Type InCommitType, int32 InComponentIndex)"
  },
  {
    "label": "OnRangeComponentCommittedAsNumeric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeComponentCommittedAsNumeric(int32 InNewValue, ETextCommit::Type InCommitType, int32 InComponentIndex)"
  },
  {
    "label": "SetRangeComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRangeComponent(const int32 InNewValue, const int32 InComponentIndex)"
  },
  {
    "label": "CacheCurrentRangeSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheCurrentRangeSelection()"
  },
  {
    "label": "GetCurrentRangeSelectionDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCurrentRangeSelectionDisplayName()"
  },
  {
    "label": "OnRangeSelectionComboOpening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeSelectionComboOpening()"
  },
  {
    "label": "OnRangeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeSelectionChanged(TSharedPtr<FUnicodeBlockRange> InNewRangeSelection, ESelectInfo::Type)"
  },
  {
    "label": "MakeRangeSelectionWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeRangeSelectionWidget(TSharedPtr<FUnicodeBlockRange> InRangeSelection)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (SCompositeFontEditor* CompositeFontEditorPtr ; FCharacterRangeTileViewEntryPtr CharacterRange ; TSharedPtr<SComboBox<TSharedPtr<FUnicodeBlockRange>>> RangeSelectionCombo ; TArray<TSharedPtr<FUnicodeBlockRange>> RangeSelectionComboData ; TOptional<FUnicodeBlockRange> CurrentRangeSelection ; } ; class SFontScalingFactorEditor : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SFontScalingFactorEditor) : _CompositeFontEditor(nullptr) , _FallbackFont(nullptr)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(SCompositeFontEditor*, CompositeFontEditor) SLATE_ATTRIBUTE(FCompositeFallbackFont*, FallbackFont) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetScalingFactorAsOptional()",
    "kind": "Method",
    "detail": "Function (private : TOptional<float>)",
    "insertText": "GetScalingFactorAsOptional()"
  },
  {
    "label": "OnScalingFactorCommittedAsNumeric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnScalingFactorCommittedAsNumeric(float InNewValue, ETextCommit::Type InCommitType)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (SCompositeFontEditor* CompositeFontEditorPtr ; TAttribute<FCompositeFallbackFont*> FallbackFont ; } ; class SFontOverrideSelector : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SFontOverrideSelector) : _CompositeFontEditor(nullptr) , _TypefaceEditor(nullptr) , _Typeface(nullptr) , _ParentTypeface(nullptr)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(SCompositeFontEditor*, CompositeFontEditor) SLATE_ATTRIBUTE(STypefaceEditor*, TypefaceEditor) SLATE_ATTRIBUTE(FTypeface*, Typeface) SLATE_ATTRIBUTE(const FTypeface*, ParentTypeface) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetAddFontOverrideVisibility()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "GetAddFontOverrideVisibility()"
  },
  {
    "label": "IsFontOverrideComboEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFontOverrideComboEnabled()"
  },
  {
    "label": "OnAddFontOverrideComboOpening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddFontOverrideComboOpening()"
  },
  {
    "label": "OnAddFontOverrideSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddFontOverrideSelectionChanged(TSharedPtr<FName> InNewSelection, ESelectInfo::Type)"
  },
  {
    "label": "MakeAddFontOverrideWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAddFontOverrideWidget(TSharedPtr<FName> InFontEntry)"
  }
]