[
  {
    "label": "IFontEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFontEditor"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SInlineEditableTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInlineEditableTextBlock"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UFont",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFont"
  },
  {
    "label": "UFontFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFontFace"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FCharacterRangeTileViewEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterRangeTileViewEntry"
  },
  {
    "label": "FCompositeFallbackFont",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompositeFallbackFont"
  },
  {
    "label": "FCompositeFont",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompositeFont"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FSubTypefaceListViewEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubTypefaceListViewEntry"
  },
  {
    "label": "FTypeface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypeface"
  },
  {
    "label": "FTypefaceListViewEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypefaceListViewEntry"
  },
  {
    "label": "SCompositeFontEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCompositeFontEditor"
  },
  {
    "label": "STypefaceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STypefaceEditor"
  },
  {
    "label": "STypefaceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STypefaceEditor"
  },
  {
    "label": "STypefaceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STypefaceEditor"
  },
  {
    "label": "STypefaceEntryEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STypefaceEntryEditor"
  },
  {
    "label": "FSubFaceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubFaceInfo"
  },
  {
    "label": "SSubTypefaceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSubTypefaceEditor"
  },
  {
    "label": "SCharacterRangeEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCharacterRangeEditor"
  },
  {
    "label": "SFontScalingFactorEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFontScalingFactorEditor"
  },
  {
    "label": "SFontOverrideSelector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFontOverrideSelector"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "FlushCachedFont()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCachedFont()"
  },
  {
    "label": "UpdateSubTypefaceList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSubTypefaceList()"
  },
  {
    "label": "MakeSubTypefaceEntryWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeSubTypefaceEntryWidget(FSubTypefaceListViewEntryPtr InSubTypefaceEntry, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnAddSubFontFamily()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddSubFontFamily()"
  },
  {
    "label": "OnDeleteSubFontFamily()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteSubFontFamily(const FSubTypefaceListViewEntryPtr& SubTypefaceEntryToRemove)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "RequestRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRename()"
  },
  {
    "label": "UpdateFontList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFontList()"
  },
  {
    "label": "MakeTypefaceEntryWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeTypefaceEntryWidget(FTypefaceListViewEntryPtr InTypefaceEntry, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnAddFont()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddFont()"
  },
  {
    "label": "OnDeleteFont()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteFont(const FTypefaceListViewEntryPtr& TypefaceEntryToRemove)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnTypefaceEntryNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTypefaceEntryNameCommitted(const FText& InNewName, ETextCommit::Type InCommitType)"
  },
  {
    "label": "OnFontFaceAssetChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFontFaceAssetChanged(const FAssetData& InAssetData)"
  },
  {
    "label": "OnBrowseTypefaceEntryFontPath()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnBrowseTypefaceEntryFontPath()"
  },
  {
    "label": "OnTypefaceEntryFontPathPicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTypefaceEntryFontPathPicked(const FString& InNewFontFilename)"
  },
  {
    "label": "OnDeleteFontClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDeleteFontClicked()"
  },
  {
    "label": "CacheSubFaceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheSubFaceData()"
  },
  {
    "label": "OnSubFaceSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSubFaceSelectionChanged(TSharedPtr<FSubFaceInfo> InSubFace, ESelectInfo::Type)"
  },
  {
    "label": "MakeSubFaceSelectionWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeSubFaceSelectionWidget(TSharedPtr<FSubFaceInfo> InSubFace)"
  },
  {
    "label": "OnUpgradeDataClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnUpgradeDataClicked()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnDisplayNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisplayNameCommitted(const FText& InNewName, ETextCommit::Type InCommitType)"
  },
  {
    "label": "OnDeleteSubFontFamilyClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDeleteSubFontFamilyClicked()"
  },
  {
    "label": "UpdateCharacterRangesList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCharacterRangesList()"
  },
  {
    "label": "MakeCharacterRangesEntryWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeCharacterRangesEntryWidget(FCharacterRangeTileViewEntryPtr InCharacterRangeEntry, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnAddCharacterRangeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddCharacterRangeClicked()"
  },
  {
    "label": "OnDeleteCharacterRangeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDeleteCharacterRangeClicked(FCharacterRangeTileViewEntryPtr InCharacterRangeEntry)"
  },
  {
    "label": "OnCulturesCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCulturesCommitted(const FText& InCultures, ETextCommit::Type InCommitType)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnRangeComponentCommittedAsTCHAR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeComponentCommittedAsTCHAR(const FText& InNewValue, ETextCommit::Type InCommitType, int32 InComponentIndex)"
  },
  {
    "label": "OnRangeComponentCommittedAsHexString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeComponentCommittedAsHexString(const FText& InNewValue, ETextCommit::Type InCommitType, int32 InComponentIndex)"
  },
  {
    "label": "OnRangeComponentCommittedAsNumeric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeComponentCommittedAsNumeric(int32 InNewValue, ETextCommit::Type InCommitType, int32 InComponentIndex)"
  },
  {
    "label": "SetRangeComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRangeComponent(const int32 InNewValue, const int32 InComponentIndex)"
  },
  {
    "label": "CacheCurrentRangeSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheCurrentRangeSelection()"
  },
  {
    "label": "OnRangeSelectionComboOpening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeSelectionComboOpening()"
  },
  {
    "label": "OnRangeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeSelectionChanged(TSharedPtr<FUnicodeBlockRange> InNewRangeSelection, ESelectInfo::Type)"
  },
  {
    "label": "MakeRangeSelectionWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeRangeSelectionWidget(TSharedPtr<FUnicodeBlockRange> InRangeSelection)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnScalingFactorCommittedAsNumeric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnScalingFactorCommittedAsNumeric(float InNewValue, ETextCommit::Type InCommitType)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnAddFontOverrideComboOpening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddFontOverrideComboOpening()"
  },
  {
    "label": "OnAddFontOverrideSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddFontOverrideSelectionChanged(TSharedPtr<FName> InNewSelection, ESelectInfo::Type)"
  },
  {
    "label": "MakeAddFontOverrideWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAddFontOverrideWidget(TSharedPtr<FName> InFontEntry)"
  }
]