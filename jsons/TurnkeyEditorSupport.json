[
  {
    "label": "FTurnkeyEditorSupport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTurnkeyEditorSupport"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FAnalyticsEventAttribute",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnalyticsEventAttribute"
  },
  {
    "label": "GetUATOptions()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Interfaces / ITurnkeySupportModule . h \" # if UE_WITH_TURNKEY_SUPPORT class FTurnkeyEditorSupport { public : FString)",
    "insertText": "GetUATOptions()"
  },
  {
    "label": "PrepareToLaunchRunningMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareToLaunchRunningMap(const FString& DeviceId, const FString& DeviceName)"
  },
  {
    "label": "LaunchRunningMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LaunchRunningMap(const FString& DeviceId, const FString& DeviceName, const FString& ProjectPath, bool bUseTurnkey, bool bOnSimulator = false)"
  },
  {
    "label": "AddEditorOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEditorOptions(struct FToolMenuSection& MenuBuilder)"
  },
  {
    "label": "SaveAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveAll()"
  },
  {
    "label": "DoesProjectHaveCode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesProjectHaveCode()"
  },
  {
    "label": "RunUAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunUAT(const FString& CommandLine, const FText& PlatformDisplayName, const FText& TaskName, const FText& TaskShortName, const struct FSlateBrush* TaskIcon, const TArray<struct FAnalyticsEventAttribute>* OptionalAnalyticsParamArray = nullptr, TFunction<void(FString, double)> ResultCallback=TFunction<void(FString, double)>())"
  },
  {
    "label": "ShowOKCancelDialog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShowOKCancelDialog(FText Message, FText Title)"
  },
  {
    "label": "ShowRestartToast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowRestartToast()"
  },
  {
    "label": "ShowRebuildToast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowRebuildToast()"
  },
  {
    "label": "CheckSupportedPlatforms()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckSupportedPlatforms(FName IniPlatformName)"
  },
  {
    "label": "ShowInstallationHelp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInstallationHelp(FName IniPlatformName, FString DocLink)"
  },
  {
    "label": "IsPIERunning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPIERunning()"
  }
]