[
  {
    "label": "FAssetEditorModeManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorModeManager"
  },
  {
    "label": "FEditorModeTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorModeTools"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FToolMenuContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuContext"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SStandaloneAssetEditorToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SStandaloneAssetEditorToolkitHost"
  },
  {
    "label": "FWorkspaceItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkspaceItem"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FExtensibilityManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtensibilityManager"
  },
  {
    "label": "IHasMenuExtensibility",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHasMenuExtensibility"
  },
  {
    "label": "IHasToolBarExtensibility",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHasToolBarExtensibility"
  },
  {
    "label": "FReadOnlyAssetEditorCustomization",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReadOnlyAssetEditorCustomization"
  },
  {
    "label": "FAssetEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorToolkit"
  },
  {
    "label": "FWidgetDrawerConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetDrawerConfig"
  },
  {
    "label": "instead",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "instead"
  },
  {
    "label": "UAssetEditorToolkitMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetEditorToolkitMenuContext"
  },
  {
    "label": "FGCEditingObjects",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGCEditingObjects"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" UObject / GCObject . h \" # include \" Framework / Docking / TabManager . h \" # include \" Toolkits / IToolkit . h \" # include \" AssetDefinition . h \" # include \" Framework / Commands / UICommandList . h \" # include \" Framework / MultiBox / MultiBoxExtender . h \" # include \" Framework / Docking / LayoutService . h \" # include \" Toolkits / IToolkitHost . h \" # include \" Toolkits / BaseToolkit . h \" # include \" UnrealEdMisc . h \" # include \" Subsystems / AssetEditorSubsystem . h \" class FAssetEditorModeManager ; class FEditorModeTools ; class FMenuBuilder ; struct FToolMenuContext ; struct FToolMenuSection ; class SBorder ; class SStandaloneAssetEditorToolkitHost ; class FWorkspaceItem ; class UToolMenu ;)",
    "insertText": "DECLARE_DELEGATE_RetVal(bool, FRequestAssetEditorClose)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(void, FAssetEditorClosing)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (enum class EAssetEditorToolkitTabLocation : int32 { Docked,Standalone,} ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(TSharedRef<FExtender>, FAssetEditorExtender, const TSharedRef<FUICommandList>, const TArray<UObject*>)"
  },
  {
    "label": "FExtensibilityManager()",
    "kind": "Method",
    "detail": "Function (class FExtensibilityManager { public : ~)",
    "insertText": "FExtensibilityManager()"
  },
  {
    "label": "AddExtender()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddExtender(TSharedPtr<FExtender> Extender)"
  },
  {
    "label": "AddUnique()",
    "kind": "Method",
    "detail": "Function (Extenders .)",
    "insertText": "AddUnique(Extender)"
  },
  {
    "label": "RemoveExtender()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveExtender(TSharedPtr<FExtender> Extender)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (Extenders .)",
    "insertText": "Remove(Extender)"
  },
  {
    "label": "GetExtenderDelegates()",
    "kind": "Method",
    "detail": "Function (} TArray<FAssetEditorExtender>&)",
    "insertText": "GetExtenderDelegates()"
  },
  {
    "label": "GetAllExtenders()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtender>)",
    "insertText": "GetAllExtenders(const TSharedRef<FUICommandList>& CommandList, const TArray<UObject*>& ContextSensitiveObjects)"
  },
  {
    "label": "GetMenuExtensibilityManager()",
    "kind": "Method",
    "detail": "Function (private : TArray<TSharedPtr<FExtender>> Extenders ; TArray<FAssetEditorExtender> ExtenderDelegates ; } ; class IHasMenuExtensibility { public : TSharedPtr<FExtensibilityManager>)",
    "insertText": "GetMenuExtensibilityManager()"
  },
  {
    "label": "GetToolBarExtensibilityManager()",
    "kind": "Method",
    "detail": "Function (} ; class IHasToolBarExtensibility { public : TSharedPtr<FExtensibilityManager>)",
    "insertText": "GetToolBarExtensibilityManager()"
  },
  {
    "label": "FAssetEditorToolkit()",
    "kind": "Method",
    "detail": "Function (} ; struct FReadOnlyAssetEditorCustomization { FNamePermissionList MainMenuPermissionList ; FNamePermissionList ToolbarPermissionList ; TMap<FName,FNamePermissionList> MainMenuSubmenuPermissionLists ; } ; class FAssetEditorToolkit : public IAssetEditorInstance,public FBaseToolkit,public TSharedFromThis<FAssetEditorToolkit> { public :)",
    "insertText": "FAssetEditorToolkit()"
  },
  {
    "label": "InitAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAssetEditor(const EToolkitMode::Type Mode, const TSharedPtr<IToolkitHost>& InitToolkitHost, const FName AppIdentifier, const TSharedRef<FTabManager::FLayout>& StandaloneDefaultLayout, const bool bCreateDefaultStandaloneMenu, const bool bCreateDefaultToolbar, const TArray<UObject*>& ObjectsToEdit, const bool bInIsToolbarFocusable = false, const bool bInUseSmallToolbarIcons = false, const TOptional<EAssetOpenMethod>& InOpenMethod = TOptional<EAssetOpenMethod>())"
  },
  {
    "label": "InitAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAssetEditor(const EToolkitMode::Type Mode, const TSharedPtr<IToolkitHost>& InitToolkitHost, const FName AppIdentifier, const TSharedRef<FTabManager::FLayout>& StandaloneDefaultLayout, const bool bCreateDefaultStandaloneMenu, const bool bCreateDefaultToolbar, UObject* ObjectToEdit, const bool bInIsToolbarFocusable = false, const bool bInUseSmallToolbarIcons = false, const TOptional<EAssetOpenMethod>& InOpenMethod = TOptional<EAssetOpenMethod>())"
  },
  {
    "label": "FAssetEditorToolkit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAssetEditorToolkit(const FAssetEditorToolkit&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAssetEditorToolkit&)",
    "insertText": "operator(const FAssetEditorToolkit&)"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<FTabManager>& TabManager)"
  },
  {
    "label": "IsAssetEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetEditor()"
  },
  {
    "label": "GetObjectsCurrentlyBeingEdited()",
    "kind": "Method",
    "detail": "Function (const TArray<UObject*>*)",
    "insertText": "GetObjectsCurrentlyBeingEdited()"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitName()"
  },
  {
    "label": "GetTabSuffix()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTabSuffix()"
  },
  {
    "label": "GetToolkitToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitToolTipText()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetEditorModeManager()",
    "kind": "Method",
    "detail": "Function (FEditorModeTools&)",
    "insertText": "GetEditorModeManager()"
  },
  {
    "label": "GetEditorName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetEditorName()"
  },
  {
    "label": "FocusWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FocusWindow(UObject* ObjectToFocusOn = nullptr)"
  },
  {
    "label": "CloseWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseWindow(EAssetEditorCloseReason InCloseReason)"
  },
  {
    "label": "IsPrimaryEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPrimaryEditor()"
  },
  {
    "label": "GetEditingAssetTypeName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetEditingAssetTypeName()"
  },
  {
    "label": "GetAssociatedTabManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabManager>)",
    "insertText": "GetAssociatedTabManager()"
  },
  {
    "label": "GetLastActivationTime()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetLastActivationTime()"
  },
  {
    "label": "RemoveEditingAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEditingAsset(UObject* Asset)"
  },
  {
    "label": "GetOpenMethod()",
    "kind": "Method",
    "detail": "Function (EAssetOpenMethod)",
    "insertText": "GetOpenMethod()"
  },
  {
    "label": "FillDefaultFileMenuCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillDefaultFileMenuCommands(FToolMenuSection& InSection)"
  },
  {
    "label": "FillDefaultAssetMenuCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillDefaultAssetMenuCommands(FToolMenuSection& InSection)"
  },
  {
    "label": "FillDefaultHelpMenuCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillDefaultHelpMenuCommands(FToolMenuSection& InSection)"
  },
  {
    "label": "GetPreviousWorldCentricToolkitHost()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IToolkitHost>)",
    "insertText": "GetPreviousWorldCentricToolkitHost()"
  },
  {
    "label": "SetPreviousWorldCentricToolkitHostForNewAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviousWorldCentricToolkitHostForNewAssetEditor(TSharedRef< IToolkitHost > ToolkitHost)"
  },
  {
    "label": "RegisterDrawer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDrawer(struct FWidgetDrawerConfig&& Drawer, int32 SlotIndex = INDEX_NONE)"
  },
  {
    "label": "RestoreFromLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreFromLayout(const TSharedRef<FTabManager::FLayout>& NewLayout)"
  },
  {
    "label": "GetTabManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabManager>)",
    "insertText": "GetTabManager()"
  },
  {
    "label": "GenerateToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateToolbar()"
  },
  {
    "label": "RegenerateMenusAndToolbars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegenerateMenusAndToolbars()"
  },
  {
    "label": "GetToolMenuToolbarName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolMenuToolbarName(FName& OutParentName)"
  },
  {
    "label": "InitToolMenuContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitToolMenuContext(FToolMenuContext& MenuContext)"
  },
  {
    "label": "GetToolMenuToolbarName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolMenuToolbarName()"
  },
  {
    "label": "GetToolMenuAppName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolMenuAppName()"
  },
  {
    "label": "GetToolMenuName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolMenuName()"
  },
  {
    "label": "PostRegenerateMenusAndToolbars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRegenerateMenusAndToolbars()"
  },
  {
    "label": "OnToolkitHostingStarted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnToolkitHostingStarted(const TSharedRef<IToolkit>& Toolkit)"
  },
  {
    "label": "OnToolkitHostingFinished()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnToolkitHostingFinished(const TSharedRef<IToolkit>& Toolkit)"
  },
  {
    "label": "AddViewportOverlayWidget()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddViewportOverlayWidget(TSharedRef<SWidget> InViewportOverlayWidget, int32 ZOrder = INDEX_NONE)"
  },
  {
    "label": "RemoveViewportOverlayWidget()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveViewportOverlayWidget(TSharedRef<SWidget> InViewportOverlayWidget)"
  },
  {
    "label": "AddMenuExtender()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddMenuExtender(TSharedPtr<FExtender> Extender)"
  },
  {
    "label": "RemoveMenuExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMenuExtender(TSharedPtr<FExtender> Extender)"
  },
  {
    "label": "AddToolbarExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToolbarExtender(TSharedPtr<FExtender> Extender)"
  },
  {
    "label": "RemoveToolbarExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveToolbarExtender(TSharedPtr<FExtender> Extender)"
  },
  {
    "label": "GetSharedMenuExtensibilityManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtensibilityManager>)",
    "insertText": "GetSharedMenuExtensibilityManager()"
  },
  {
    "label": "GetSharedToolBarExtensibilityManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtensibilityManager>)",
    "insertText": "GetSharedToolBarExtensibilityManager()"
  },
  {
    "label": "SetMenuOverlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMenuOverlay(TSharedRef<SWidget> Widget)"
  },
  {
    "label": "AddToolbarWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToolbarWidget(TSharedRef<SWidget> Widget)"
  },
  {
    "label": "RemoveAllToolbarWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllToolbarWidgets()"
  },
  {
    "label": "IsActuallyAnAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActuallyAnAsset()"
  },
  {
    "label": "GetLabelForObject()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLabelForObject(const UObject* InObject)"
  },
  {
    "label": "GetToolTipTextForObject()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipTextForObject(const UObject* InObject)"
  },
  {
    "label": "AddGraphEditorPinActionsToContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGraphEditorPinActionsToContextMenu(FToolMenuSection& InSection)"
  },
  {
    "label": "OnViewportDragEnter()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnViewportDragEnter(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnViewportDragLeave()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnViewportDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnViewportDrop()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnViewportDrop(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "PostInitAssetEditor()",
    "kind": "Method",
    "detail": "Function (} protected : class UAssetEditorToolkitMenuContext ; void)",
    "insertText": "PostInitAssetEditor()"
  },
  {
    "label": "HasEditingObject()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasEditingObject()"
  },
  {
    "label": "GetEditingObject()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetEditingObject()"
  },
  {
    "label": "GetEditingObjects()",
    "kind": "Method",
    "detail": "Function (const TArray<UObject*>&)",
    "insertText": "GetEditingObjects()"
  },
  {
    "label": "GetEditingObjectPtrs()",
    "kind": "Method",
    "detail": "Function (TArray<TObjectPtr<UObject>>&)",
    "insertText": "GetEditingObjectPtrs()"
  },
  {
    "label": "GenerateCommonActionsToolbar()",
    "kind": "Method",
    "detail": "Function (UToolMenu*)",
    "insertText": "GenerateCommonActionsToolbar(FToolMenuContext& MenuContext)"
  },
  {
    "label": "GenerateReadOnlyToolbar()",
    "kind": "Method",
    "detail": "Function (UToolMenu*)",
    "insertText": "GenerateReadOnlyToolbar(FToolMenuContext& MenuContext)"
  },
  {
    "label": "GetSaveableObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSaveableObjects(TArray<UObject*>& OutObjects)"
  },
  {
    "label": "AddEditingObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEditingObject(UObject* Object)"
  },
  {
    "label": "RemoveEditingObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEditingObject(UObject* Object)"
  },
  {
    "label": "CanSaveAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSaveAsset()"
  },
  {
    "label": "IsSaveAssetVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSaveAssetVisible()"
  },
  {
    "label": "SaveAsset_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveAsset_Execute()"
  },
  {
    "label": "OnAssetsSaved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetsSaved(const TArray<UObject*>& SavedObjects)"
  },
  {
    "label": "CanSaveAssetAs()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanSaveAssetAs()"
  },
  {
    "label": "IsSaveAssetAsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSaveAssetAsVisible()"
  },
  {
    "label": "SaveAssetAs_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveAssetAs_Execute()"
  },
  {
    "label": "ShouldReopenEditorForSavedAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldReopenEditorForSavedAsset(const UObject* Asset)"
  },
  {
    "label": "CanFindInContentBrowser()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanFindInContentBrowser()"
  },
  {
    "label": "IsFindInContentBrowserButtonVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFindInContentBrowserButtonVisible()"
  },
  {
    "label": "BrowseDocumentation_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BrowseDocumentation_Execute()"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationLink()"
  },
  {
    "label": "CanReimport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReimport()"
  },
  {
    "label": "CanReimport_Internal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReimport_Internal()"
  },
  {
    "label": "CanReimport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReimport(UObject* EditingObject)"
  },
  {
    "label": "Reimport_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reimport_Execute()"
  },
  {
    "label": "Reimport_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reimport_Execute(UObject* EditingObject)"
  },
  {
    "label": "ShouldPromptForNewFilesOnReload()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldPromptForNewFilesOnReload(const UObject& object)"
  },
  {
    "label": "OnClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClose()"
  },
  {
    "label": "SwitchToStandaloneEditor_Execute()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SwitchToStandaloneEditor_Execute(TWeakPtr< FAssetEditorToolkit > ThisToolkitWeakRef)"
  },
  {
    "label": "SwitchToWorldCentricEditor_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwitchToWorldCentricEditor_Execute(TWeakPtr< FAssetEditorToolkit > ThisToolkitWeakRef)"
  },
  {
    "label": "GetDefaultTabIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetDefaultTabIcon()"
  },
  {
    "label": "GetDefaultTabColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetDefaultTabColor()"
  },
  {
    "label": "CreateEditorModeManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEditorModeManager()"
  },
  {
    "label": "SetupReadOnlyMenuProfiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupReadOnlyMenuProfiles(FReadOnlyAssetEditorCustomization& OutReadOnlyCustomization)"
  },
  {
    "label": "GetReadOnlyMenuProfileName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetReadOnlyMenuProfileName()"
  },
  {
    "label": "SaveToConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveToConfig(GEditorLayoutIni, LayoutToSave)"
  },
  {
    "label": "InitializeReadOnlyMenuProfiles()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "InitializeReadOnlyMenuProfiles()"
  },
  {
    "label": "FGCEditingObjects()",
    "kind": "Method",
    "detail": "Function (private : class FGCEditingObjects : public FGCObject { public :)",
    "insertText": "FGCEditingObjects(FAssetEditorToolkit& InOwnerToolkit) : OwnerToolkit(InOwnerToolkit)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  }
]