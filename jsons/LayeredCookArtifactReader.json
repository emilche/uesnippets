[
  {
    "label": "FLayeredCookArtifactReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayeredCookArtifactReader"
  },
  {
    "label": "FLayeredCookArtifactReader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CookArtifactReaderCommon . h \" # include \" Templates / SharedPointer . h \" class FLayeredCookArtifactReader : public FCookArtifactReaderCommon { public :)",
    "insertText": "FLayeredCookArtifactReader()"
  },
  {
    "label": "AddLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLayer(TSharedRef<ICookArtifactReader> InLayer)"
  },
  {
    "label": "RemoveLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveLayer(TSharedRef<ICookArtifactReader> InLayer)"
  },
  {
    "label": "EmptyLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyLayers()"
  },
  {
    "label": "FileExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FileExists(const TCHAR* Filename)"
  },
  {
    "label": "FileSize()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "FileSize(const TCHAR* Filename)"
  },
  {
    "label": "OpenRead()",
    "kind": "Method",
    "detail": "Function (IFileHandle*)",
    "insertText": "OpenRead(const TCHAR* Filename)"
  },
  {
    "label": "IterateDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IterateDirectory(const TCHAR* Directory, IPlatformFile::FDirectoryVisitor& Visitor)"
  }
]