[
  {
    "label": "_cef_settings_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_settings_t"
  },
  {
    "label": "_cef_request_context_settings_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_request_context_settings_t"
  },
  {
    "label": "_cef_browser_settings_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_settings_t"
  },
  {
    "label": "_cef_urlparts_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_urlparts_t"
  },
  {
    "label": "_cef_cookie_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_cookie_t"
  },
  {
    "label": "_cef_point_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_point_t"
  },
  {
    "label": "_cef_rect_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_rect_t"
  },
  {
    "label": "_cef_size_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_size_t"
  },
  {
    "label": "_cef_range_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_range_t"
  },
  {
    "label": "_cef_insets_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_insets_t"
  },
  {
    "label": "_cef_draggable_region_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_draggable_region_t"
  },
  {
    "label": "_cef_screen_info_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_screen_info_t"
  },
  {
    "label": "_cef_mouse_event_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_mouse_event_t"
  },
  {
    "label": "_cef_touch_event_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_touch_event_t"
  },
  {
    "label": "_cef_key_event_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_key_event_t"
  },
  {
    "label": "_cef_popup_features_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_popup_features_t"
  },
  {
    "label": "_cef_cursor_info_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_cursor_info_t"
  },
  {
    "label": "_cef_pdf_print_settings_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_pdf_print_settings_t"
  },
  {
    "label": "_cef_box_layout_settings_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_box_layout_settings_t"
  },
  {
    "label": "_cef_composition_underline_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_composition_underline_t"
  },
  {
    "label": "_cef_audio_parameters_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_audio_parameters_t"
  },
  {
    "label": "_cef_media_sink_device_info_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_media_sink_device_info_t"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_INTERNAL_CEF_TYPES_H_ # define CEF_INCLUDE_INTERNAL_CEF_TYPES_H_ # pragma once # include \" include / base / cef_basictypes . h \" # include \" include / internal / cef_string . h \" # include \" include / internal / cef_string_list . h \" # include \" include / internal / cef_time . h \" # if)",
    "insertText": "defined(OS_WIN) #include \"include/internal/cef_types_win.h\" #elif defined(OS_MAC) #include \"include/internal/cef_types_mac.h\" #elif defined(OS_LINUX)"
  },
  {
    "label": "CefColorGetA()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "CefColorGetA(color) (((color) >> 24) & 0xFF) #define CefColorGetR(color) (((color) >> 16) & 0xFF) #define CefColorGetG(color) (((color) >> 8) & 0xFF) #define CefColorGetB(color) (((color) >> 0) & 0xFF) #define CefColorSetARGB(a, r, g, b) \\ static_cast<cef_color_t>( \\ (static_cast<unsigned>(a) << 24) | (static_cast<unsigned>(r) << 16) | \\ (static_cast<unsigned>(g) << 8) | (static_cast<unsigned>(b) << 0)) #define CefInt64Set(int32_low, int32_high) \\ static_cast<int64>((static_cast<uint32>(int32_low)) | \\ (static_cast<int64>(static_cast<int32>(int32_high))) \\ << 32) #define CefInt64GetLow(int64_val) static_cast<int32>(int64_val) #define CefInt64GetHigh(int64_val) \\ static_cast<int32>((static_cast<int64>(int64_val) >> 32) & 0xFFFFFFFFL)"
  },
  {
    "label": "NET_ERROR()",
    "kind": "Method",
    "detail": "Function (# endif typedef enum { LOGSEVERITY_DEFAULT,LOGSEVERITY_VERBOSE,LOGSEVERITY_DEBUG = LOGSEVERITY_VERBOSE,LOGSEVERITY_INFO,LOGSEVERITY_WARNING,LOGSEVERITY_ERROR,LOGSEVERITY_FATAL,LOGSEVERITY_DISABLE = 9 9 } cef_log_severity_t ; typedef enum { STATE_DEFAULT = 0,STATE_ENABLED,STATE_DISABLED,} cef_state_t ; typedef struct _cef_settings_t { size_t size ; int no_sandbox ; cef_string_t browser_subprocess_path ; cef_string_t framework_dir_path ; cef_string_t main_bundle_path ; int chrome_runtime ; int multi_threaded_message_loop ; int external_message_pump ; int windowless_rendering_enabled ; int command_line_args_disabled ; cef_string_t cache_path ; cef_string_t root_cache_path ; cef_string_t user_data_path ; int persist_session_cookies ; int persist_user_preferences ; cef_string_t user_agent ; cef_string_t user_agent_product ; cef_string_t locale ; cef_string_t log_file ; cef_log_severity_t log_severity ; cef_string_t javascript_flags ; cef_string_t resources_dir_path ; cef_string_t locales_dir_path ; int pack_loading_disabled ; int remote_debugging_port ; int uncaught_exception_stack_size ; int ignore_certificate_errors ; cef_color_t background_color ; cef_string_t accept_language_list ; cef_string_t cookieable_schemes_list ; int cookieable_schemes_exclude_defaults ; cef_string_t application_client_id_for_file_scanning ; } cef_settings_t ; typedef struct _cef_request_context_settings_t { size_t size ; cef_string_t cache_path ; int persist_session_cookies ; int persist_user_preferences ; int ignore_certificate_errors ; cef_string_t accept_language_list ; cef_string_t cookieable_schemes_list ; int cookieable_schemes_exclude_defaults ; } cef_request_context_settings_t ; typedef struct _cef_browser_settings_t { size_t size ; int windowless_frame_rate ; cef_string_t standard_font_family ; cef_string_t fixed_font_family ; cef_string_t serif_font_family ; cef_string_t sans_serif_font_family ; cef_string_t cursive_font_family ; cef_string_t fantasy_font_family ; int default_font_size ; int default_fixed_font_size ; int minimum_font_size ; int minimum_logical_font_size ; cef_string_t default_encoding ; cef_state_t remote_fonts ; cef_state_t javascript ; cef_state_t javascript_close_windows ; cef_state_t javascript_access_clipboard ; cef_state_t javascript_dom_paste ; cef_state_t plugins ; cef_state_t universal_access_from_file_urls ; cef_state_t file_access_from_file_urls ; cef_state_t image_loading ; cef_state_t image_shrink_standalone_to_fit ; cef_state_t text_area_resize ; cef_state_t tab_to_links ; cef_state_t local_storage ; cef_state_t databases ; cef_state_t application_cache ; cef_state_t webgl ; cef_color_t background_color ; cef_string_t accept_language_list ; } cef_browser_settings_t ; typedef enum { RV_CANCEL = 0,RV_CONTINUE,RV_CONTINUE_ASYNC,} cef_return_value_t ; typedef struct _cef_urlparts_t { cef_string_t spec ; cef_string_t scheme ; cef_string_t username ; cef_string_t password ; cef_string_t host ; cef_string_t port ; cef_string_t origin ; cef_string_t path ; cef_string_t query ; cef_string_t fragment ; } cef_urlparts_t ; typedef enum { CEF_COOKIE_PRIORITY_LOW = - 1,CEF_COOKIE_PRIORITY_MEDIUM = 0,CEF_COOKIE_PRIORITY_HIGH = 1,} cef_cookie_priority_t ; typedef enum { CEF_COOKIE_SAME_SITE_UNSPECIFIED,CEF_COOKIE_SAME_SITE_NO_RESTRICTION,CEF_COOKIE_SAME_SITE_LAX_MODE,CEF_COOKIE_SAME_SITE_STRICT_MODE,} cef_cookie_same_site_t ; typedef struct _cef_cookie_t { cef_string_t name ; cef_string_t value ; cef_string_t domain ; cef_string_t path ; int secure ; int httponly ; cef_time_t creation ; cef_time_t last_access ; int has_expires ; cef_time_t expires ; cef_cookie_same_site_t same_site ; cef_cookie_priority_t priority ; } cef_cookie_t ; typedef enum { TS_ABNORMAL_TERMINATION,TS_PROCESS_WAS_KILLED,TS_PROCESS_CRASHED,TS_PROCESS_OOM,} cef_termination_status_t ; typedef enum { PK_DIR_CURRENT,PK_DIR_EXE,PK_DIR_MODULE,PK_DIR_TEMP,PK_FILE_EXE,PK_FILE_MODULE,PK_LOCAL_APP_DATA,PK_USER_DATA,PK_DIR_RESOURCES,} cef_path_key_t ; typedef enum { ST_LOCALSTORAGE = 0,ST_SESSIONSTORAGE,} cef_storage_type_t ; typedef enum { ERR_NONE = 0,# define)",
    "insertText": "NET_ERROR(label, value)"
  }
]