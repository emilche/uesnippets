[
  {
    "label": "FeedbackGeneratorImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FeedbackGeneratorImpl"
  },
  {
    "label": "FeedbackGeneratorImpl()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_NETWORK_FEEDBACK_GENERATOR_H_ # define TEST_NETWORK_FEEDBACK_GENERATOR_H_ # include<cstdint> # include<queue> # include<utility> # include<vector> # include \" api / transport / network_types . h \" # include \" api / transport / test / feedback_generator_interface . h \" # include \" call / simulated_network . h \" # include \" test / network / network_emulation . h \" # include \" test / network / network_emulation_manager . h \" # include \" test / time_controller / simulated_time_controller . h \" namespace webrtc { class FeedbackGeneratorImpl : public FeedbackGenerator,public TwoWayFakeTrafficRoute<SentPacket,std::vector<PacketResult>>::TrafficHandlerInterface { public :)",
    "insertText": "FeedbackGeneratorImpl(Config config)"
  },
  {
    "label": "Now()",
    "kind": "Method",
    "detail": "Function (Timestamp)",
    "insertText": "Now()"
  },
  {
    "label": "Sleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sleep(TimeDelta duration)"
  },
  {
    "label": "SendPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendPacket(size_t size)"
  },
  {
    "label": "PopFeedback()",
    "kind": "Method",
    "detail": "Function (std::vector<TransportPacketsFeedback>)",
    "insertText": "PopFeedback()"
  },
  {
    "label": "SetSendConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSendConfig(BuiltInNetworkBehaviorConfig config)"
  },
  {
    "label": "SetReturnConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReturnConfig(BuiltInNetworkBehaviorConfig config)"
  },
  {
    "label": "SetSendLinkCapacity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSendLinkCapacity(DataRate capacity)"
  },
  {
    "label": "OnRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRequest(SentPacket packet, Timestamp arrival_time)"
  },
  {
    "label": "OnResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResponse(std::vector<PacketResult> packet_results, Timestamp arrival_time)"
  }
]