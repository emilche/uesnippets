[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FCurveEditorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditorTree"
  },
  {
    "label": "FCurveEditorTreeFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorTreeFilter"
  },
  {
    "label": "ICurveEditorTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ICurveEditorTreeItem"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "FCurveEditorTreeDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditorTreeDelegate"
  },
  {
    "label": "FCurveEditorTreeEvents",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorTreeEvents"
  },
  {
    "label": "FSortedCurveEditorTreeItems",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortedCurveEditorTreeItems"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "FCurveEditorFilterStates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorFilterStates"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "FScopedCurveEditorTreeEventGuard()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FScopedCurveEditorTreeEventGuard(FCurveEditorTree* InTree)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Broadcast()"
  },
  {
    "label": "GetOrCreateCurves()",
    "kind": "Method",
    "detail": "Function (FCurveModelID>)",
    "insertText": "GetOrCreateCurves(FCurveEditor* CurveEditor)"
  },
  {
    "label": "DestroyCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyCurves(FCurveEditor* CurveEditor)"
  },
  {
    "label": "DestroyUnpinnedCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyUnpinnedCurves(FCurveEditor* CurveEditor)"
  },
  {
    "label": "RemoveItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveItem(FCurveEditorTreeItemID ItemID, FCurveEditor* CurveEditor)"
  },
  {
    "label": "RunFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunFilters()"
  },
  {
    "label": "AddFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFilter(TWeakPtr<FCurveEditorTreeFilter> NewFilter)"
  },
  {
    "label": "RemoveFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFilter(TWeakPtr<FCurveEditorTreeFilter> FilterToRemove)"
  },
  {
    "label": "ClearFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearFilters()"
  },
  {
    "label": "SetSortPredicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSortPredicate(FTreeItemSortPredicate InSortPredicate)"
  },
  {
    "label": "SortTreeItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortTreeItems()"
  },
  {
    "label": "SetDirectSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDirectSelection(TArray<FCurveEditorTreeItemID>&& TreeItems, FCurveEditor* InCurveEditor)"
  },
  {
    "label": "RemoveFromSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromSelection(TArrayView<const FCurveEditorTreeItemID> TreeItems, FCurveEditor* InCurveEditor)"
  },
  {
    "label": "FScopedCurveEditorTreeEventGuard()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FScopedCurveEditorTreeEventGuard(this)"
  },
  {
    "label": "Compact()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compact()"
  },
  {
    "label": "ToggleExpansionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleExpansionState(bool bRecursive)"
  },
  {
    "label": "SetItemExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemExpansion(FCurveEditorTreeItemID InTreeItemID, bool bInExpansion)"
  },
  {
    "label": "RecreateModelsFromExistingSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecreateModelsFromExistingSelection(FCurveEditor* CurveEditor)"
  },
  {
    "label": "RemoveChildrenRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildrenRecursive(TArray<FCurveEditorTreeItemID>&& Children, FCurveEditor* CurveEditor)"
  },
  {
    "label": "PerformFilterPass()",
    "kind": "Method",
    "detail": "Function (ECurveEditorTreeFilterState)",
    "insertText": "PerformFilterPass(TArrayView<const FCurveEditorTreeFilter* const> FilterPtrs, TArrayView<const FCurveEditorTreeItemID> ItemsToFilter, ECurveEditorTreeFilterState InheritedState)"
  },
  {
    "label": "SortTreeItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortTreeItems(FSortedCurveEditorTreeItems& TreeItemIDsToSort)"
  }
]