[
  {
    "label": "FDummyViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDummyViewport"
  },
  {
    "label": "FDummyViewport()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UnrealClient . h \" class FDummyViewport : public FViewport { public :)",
    "insertText": "FDummyViewport(FViewportClient* InViewportClient)"
  },
  {
    "label": "FDummyViewport()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDummyViewport()"
  },
  {
    "label": "BeginRenderFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRenderFrame(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "EndRenderFrame()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "EndRenderFrame(FRHICommandListImmediate& RHICmdList, bool bPresent, bool bLockToVsync)"
  },
  {
    "label": "SetupHDR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetupHDR(EDisplayColorGamut InDisplayColorGamut, EDisplayOutputFormat InDisplayOutputFormat, bool bInSceneHDREnabled)"
  },
  {
    "label": "GetWindow()",
    "kind": "Method",
    "detail": "Function (DisplayColorGamut = InDisplayColorGamut ; DisplayOutputFormat = InDisplayOutputFormat ; bSceneHDREnabled = bInSceneHDREnabled ; } void*)",
    "insertText": "GetWindow()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Destroy()"
  },
  {
    "label": "SetUserFocus()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetUserFocus(bool bFocus)"
  },
  {
    "label": "FIntPoint()",
    "kind": "Method",
    "detail": "Function (MousePosition =)",
    "insertText": "FIntPoint(0, 0)"
  },
  {
    "label": "SetMouse()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetMouse(int32 x, int32 y)"
  },
  {
    "label": "ProcessInput()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProcessInput(float DeltaTime)"
  },
  {
    "label": "VirtualDesktopPixelToViewport()",
    "kind": "Method",
    "detail": "Function (} FVector2D)",
    "insertText": "VirtualDesktopPixelToViewport(FIntPoint VirtualDesktopPointPx)"
  },
  {
    "label": "DeferInvalidateHitProxy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DeferInvalidateHitProxy()"
  },
  {
    "label": "GetViewportFrame()",
    "kind": "Method",
    "detail": "Function (} FViewportFrame*)",
    "insertText": "GetViewportFrame()"
  },
  {
    "label": "GetDisplayOutputFormat()",
    "kind": "Method",
    "detail": "Function (EDisplayOutputFormat)",
    "insertText": "GetDisplayOutputFormat()"
  },
  {
    "label": "GetSceneHDREnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSceneHDREnabled()"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFriendlyName()"
  }
]