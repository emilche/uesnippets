[
  {
    "label": "MockDevicesChangedObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockDevicesChangedObserver"
  },
  {
    "label": "MockDevicesChangedObserver()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_MOCK_DEVICES_CHANGED_OBSERVER_H_ # define BASE_TEST_MOCK_DEVICES_CHANGED_OBSERVER_H_ # include \" base / system / system_monitor . h \" # include \" testing / gmock / include / gmock / gmock . h \" namespace base { class MockDevicesChangedObserver : public base::SystemMonitor::DevicesChangedObserver { public :)",
    "insertText": "MockDevicesChangedObserver()"
  },
  {
    "label": "MockDevicesChangedObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MockDevicesChangedObserver(const MockDevicesChangedObserver&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MockDevicesChangedObserver&)",
    "insertText": "operator(const MockDevicesChangedObserver&)"
  },
  {
    "label": "MOCK_METHOD1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD1(OnDevicesChanged, void(base::SystemMonitor::DeviceType device_type))"
  }
]