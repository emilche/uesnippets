[
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FFixedObjectBindingID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFixedObjectBindingID"
  },
  {
    "label": "FSequencerOutlinerDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerOutlinerDragDropOp"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Input / DragAndDrop . h \" # include \" SequencerObjectBindingDragDropOp . h \" class FSequencer ; namespace UE { namespace MovieScene { struct FFixedObjectBindingID ; } namespace Sequencer { class FSequencerOutlinerDragDropOp : public FSequencerObjectBindingDragDropOp { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FSequencerOutlinerDragDropOp, FSequencerObjectBindingDragDropOp ) static TSharedRef<FSequencerOutlinerDragDropOp> New(TArray<TWeakViewModelPtr<IOutlinerExtension>>&& InDraggedNodes, FText InDefaultText, const FSlateBrush* InDefaultIcon)"
  },
  {
    "label": "GetDraggedBindings()",
    "kind": "Method",
    "detail": "Function (public : TArray<MovieScene::FFixedObjectBindingID>)",
    "insertText": "GetDraggedBindings()"
  },
  {
    "label": "GetDraggedRebindableBindings()",
    "kind": "Method",
    "detail": "Function (TArray<MovieScene::FFixedObjectBindingID>)",
    "insertText": "GetDraggedRebindableBindings()"
  },
  {
    "label": "GetDraggedBindingsImpl()",
    "kind": "Method",
    "detail": "Function (TArray<MovieScene::FFixedObjectBindingID>)",
    "insertText": "GetDraggedBindingsImpl(TFunctionRef<bool(const TWeakViewModelPtr<IOutlinerExtension>&)> InFilter)"
  },
  {
    "label": "HoverTargetChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HoverTargetChanged()"
  },
  {
    "label": "DroppedOnPanel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "DroppedOnPanel(const TSharedRef< class SWidget >& Panel, FVector2D ScreenPosition, FVector2D GraphPosition, UEdGraph& Graph)"
  }
]