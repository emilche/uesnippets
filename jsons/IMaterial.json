[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "IMaterialSchema()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcMaterial_IMaterial_h # define Alembic_AbcMaterial_IMaterial_h # include<Alembic / Abc / All . h> # include<Alembic / Util / Export . h> # include<Alembic / AbcMaterial / SchemaInfoDeclarations . h> namespace Alembic { namespace AbcMaterial { namespace ALEMBIC_VERSION_NS { class ALEMBIC_EXPORT IMaterialSchema : public Abc::ISchema<MaterialSchemaInfo> { public : typedef IMaterialSchema this_type ;)",
    "insertText": "IMaterialSchema()"
  },
  {
    "label": "IMaterialSchema()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMaterialSchema(const ICompoundProperty &iParent, const std::string &iName, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument() ) : Abc::ISchema<MaterialSchemaInfo>( iParent, iName, iArg0, iArg1)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init()"
  },
  {
    "label": "IMaterialSchema()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMaterialSchema(const ICompoundProperty &iProp, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument() ) : Abc::ISchema<MaterialSchemaInfo>( iProp, iArg0, iArg1)"
  },
  {
    "label": "getTargetNames()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "getTargetNames(std::vector<std::string> & iTargetNames)"
  },
  {
    "label": "getShaderTypesForTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getShaderTypesForTarget(const std::string & iTargetName, std::vector<std::string> & oShaderTypeNames)"
  },
  {
    "label": "getShader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getShader(const std::string & iTarget, const std::string & iShaderType, std::string & oResult)"
  },
  {
    "label": "getShaderParameters()",
    "kind": "Method",
    "detail": "Function (Abc::ICompoundProperty)",
    "insertText": "getShaderParameters(const std::string & iTarget, const std::string & iShaderType)"
  },
  {
    "label": "NetworkNode()",
    "kind": "Method",
    "detail": "Function (class ALEMBIC_EXPORT NetworkNode { public :)",
    "insertText": "NetworkNode()"
  },
  {
    "label": "NetworkNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NetworkNode(Abc::ICompoundProperty iCompound)"
  },
  {
    "label": "NetworkNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NetworkNode(Abc::ICompoundProperty iParent, const std::string & iNodeName)"
  },
  {
    "label": "valid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "valid()"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "getName()"
  },
  {
    "label": "getTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getTarget(std::string & oResult)"
  },
  {
    "label": "getNodeType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getNodeType(std::string & oResult)"
  },
  {
    "label": "getParameters()",
    "kind": "Method",
    "detail": "Function (Abc::ICompoundProperty)",
    "insertText": "getParameters()"
  },
  {
    "label": "getNumConnections()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumConnections()"
  },
  {
    "label": "getConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getConnection(size_t iIndex, std::string & oInputName, std::string & oConnectedNodeName, std::string & oConnectedOutputName)"
  },
  {
    "label": "getConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getConnection(const std::string & iInputName, std::string & oConnectedNodeName, std::string & oConnectedOutputName)"
  },
  {
    "label": "splitConnectionValue()",
    "kind": "Method",
    "detail": "Function (private : Abc::ICompoundProperty m_compound ; bool m_connectionsChecked ; std::vector<std::string> m_connections ; std::map<std::string,std::string> m_connectionsMap ; void)",
    "insertText": "splitConnectionValue(const std::string & v, std::string & a, std::string & b)"
  },
  {
    "label": "getNumNetworkNodes()",
    "kind": "Method",
    "detail": "Function (} ; size_t)",
    "insertText": "getNumNetworkNodes()"
  },
  {
    "label": "getNetworkNodeNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNetworkNodeNames(std::vector<std::string> & oNames)"
  },
  {
    "label": "getNetworkNode()",
    "kind": "Method",
    "detail": "Function (NetworkNode)",
    "insertText": "getNetworkNode(size_t iIndex)"
  },
  {
    "label": "getNetworkNode()",
    "kind": "Method",
    "detail": "Function (NetworkNode)",
    "insertText": "getNetworkNode(const std::string & iNodeName)"
  },
  {
    "label": "getNetworkTerminalTargetNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNetworkTerminalTargetNames(std::vector<std::string> & oTargetNames)"
  },
  {
    "label": "getNetworkTerminalShaderTypesForTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNetworkTerminalShaderTypesForTarget(const std::string & iTargetName, std::vector<std::string> & oShaderTypeNames)"
  },
  {
    "label": "getNetworkTerminal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getNetworkTerminal(const std::string & iTarget, const std::string & iShaderType, std::string & oNodeName, std::string & oOutputName)"
  },
  {
    "label": "getNumNetworkInterfaceParameterMappings()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumNetworkInterfaceParameterMappings()"
  },
  {
    "label": "getNetworkInterfaceParameterMapping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getNetworkInterfaceParameterMapping(size_t iIndex, std::string & oInterfaceParamName, std::string & oMapToNodeName, std::string & oMapToParamName)"
  },
  {
    "label": "getNetworkInterfaceParameterMappingNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNetworkInterfaceParameterMappingNames(std::vector<std::string> & oNames)"
  },
  {
    "label": "getNetworkInterfaceParameterMapping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getNetworkInterfaceParameterMapping(const std::string & iInterfaceParamName, std::string & oMapToNodeName, std::string & oMapToParamName)"
  },
  {
    "label": "getNetworkInterfaceParameters()",
    "kind": "Method",
    "detail": "Function (Abc::ICompoundProperty)",
    "insertText": "getNetworkInterfaceParameters()"
  }
]