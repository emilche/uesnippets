[
  {
    "label": "MockEncoderSelector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockEncoderSelector"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_MOCK_ENCODER_SELECTOR_H_ # define API_TEST_MOCK_ENCODER_SELECTOR_H_ # include \" api / video_codecs / video_encoder_factory . h \" # include \" test / gmock . h \" namespace webrtc { class MockEncoderSelector : public VideoEncoderFactory::EncoderSelectorInterface { public :)",
    "insertText": "MOCK_METHOD(void, OnCurrentEncoder, (const SdpVideoFormat& format), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(absl::optional<SdpVideoFormat>, OnAvailableBitrate, (const DataRate& rate), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(absl::optional<SdpVideoFormat>, OnResolutionChange, (const RenderResolution& resolution), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(absl::optional<SdpVideoFormat>, OnEncoderBroken, (), (override))"
  }
]