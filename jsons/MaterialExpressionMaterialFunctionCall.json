[
  {
    "label": "UMaterialFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialFunction"
  },
  {
    "label": "FMaterialFunctionCompileState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialFunctionCompileState"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FFunctionExpressionInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFunctionExpressionInput"
  },
  {
    "label": "UMaterialExpressionFunctionInput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionFunctionInput"
  },
  {
    "label": "FFunctionExpressionOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFunctionExpressionOutput"
  },
  {
    "label": "UMaterialExpressionFunctionOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionFunctionOutput"
  },
  {
    "label": "UMaterialExpressionMaterialFunctionCall",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionMaterialFunctionCall"
  },
  {
    "label": "UMaterialFunctionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialFunctionInterface"
  },
  {
    "label": "FMaterialParameterInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialParameterInfo"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Guid . h \" # include \" MaterialExpressionIO . h \" # include \" MaterialTypes . h \" # include \" Materials / MaterialExpression . h \" # include \" MaterialExpressionMaterialFunctionCall . generated . h \" class UMaterialFunction ; class FMaterialFunctionCompileState ; struct FPropertyChangedEvent ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(transient)"
  },
  {
    "label": "FFunctionExpressionInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFunctionExpressionInput() : ExpressionInput(NULL)"
  },
  {
    "label": "FFunctionExpressionOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFunctionExpressionOutput() : ExpressionOutput(NULL)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(hidecategories=object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=MaterialExpressionMaterialFunctionCall, meta=(DisallowedClasses=\"/Script/Engine.MaterialFunctionInstance\"))"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PreEditChange(FProperty* PropertyAboutToChange)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "IterateDependentFunctions()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA bool)",
    "insertText": "IterateDependentFunctions(TFunctionRef<bool(UMaterialFunctionInterface*)> Predicate)"
  },
  {
    "label": "GetDependentFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDependentFunctions(TArray<UMaterialFunctionInterface*>& DependentFunctions)"
  },
  {
    "label": "UnlinkFunctionFromCaller()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "UnlinkFunctionFromCaller(FMaterialCompiler* Compiler)"
  },
  {
    "label": "LinkFunctionIntoCaller()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LinkFunctionIntoCaller(FMaterialCompiler* Compiler)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR int32)",
    "insertText": "Compile(class FMaterialCompiler* Compiler, int32 OutputIndex)"
  },
  {
    "label": "GetCaption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCaption(TArray<FString>& OutCaptions)"
  },
  {
    "label": "GetInputsView()",
    "kind": "Method",
    "detail": "Function (TArrayView<FExpressionInput*>)",
    "insertText": "GetInputsView()"
  },
  {
    "label": "GetInput()",
    "kind": "Method",
    "detail": "Function (FExpressionInput*)",
    "insertText": "GetInput(int32 InputIndex)"
  },
  {
    "label": "GetInputName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetInputName(int32 InputIndex)"
  },
  {
    "label": "IsInputConnectionRequired()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInputConnectionRequired(int32 InputIndex)"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDescription()"
  },
  {
    "label": "GetConnectorToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetConnectorToolTip(int32 InputIndex, int32 OutputIndex, TArray<FString>& OutToolTip)"
  },
  {
    "label": "GetExpressionToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetExpressionToolTip(TArray<FString>& OutToolTip)"
  },
  {
    "label": "MatchesSearchQuery()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesSearchQuery(const TCHAR* SearchQuery)"
  },
  {
    "label": "IsResultMaterialAttributes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsResultMaterialAttributes(int32 OutputIndex)"
  },
  {
    "label": "IsResultSubstrateMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsResultSubstrateMaterial(int32 OutputIndex)"
  },
  {
    "label": "GatherSubstrateMaterialInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherSubstrateMaterialInfo(FSubstrateMaterialInfo& SubstrateMaterialInfo, int32 OutputIndex)"
  },
  {
    "label": "SubstrateGenerateMaterialTopologyTree()",
    "kind": "Method",
    "detail": "Function (FSubstrateOperator*)",
    "insertText": "SubstrateGenerateMaterialTopologyTree(class FMaterialCompiler* Compiler, class UMaterialExpression* Parent, int32 OutputIndex)"
  },
  {
    "label": "GetInputType()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetInputType(int32 InputIndex)"
  },
  {
    "label": "GetInputNameWithType()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetInputNameWithType(int32 InputIndex, bool bWithType)"
  },
  {
    "label": "SetMaterialFunctionEx()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMaterialFunctionEx(UMaterialFunctionInterface* OldFunctionResource, UMaterialFunctionInterface* NewResource)"
  },
  {
    "label": "UpdateFromFunctionResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFromFunctionResource(bool bRecreateAndLinkNode = true)"
  },
  {
    "label": "SetSharedCompileState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSharedCompileState(FMaterialFunctionCompileState* SharedState)"
  },
  {
    "label": "GenerateHLSLExpression()",
    "kind": "Method",
    "detail": "Function (SharedCompileState = SharedState ; } bool)",
    "insertText": "GenerateHLSLExpression(FMaterialHLSLGenerator& Generator, UE::HLSLTree::FScope& Scope, int32 OutputIndex, UE::HLSLTree::FExpression const*& OutExpression)"
  },
  {
    "label": "FixupReferencingExpressions()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "FixupReferencingExpressions(const TArray<FFunctionExpressionOutput>& NewOutputs, const TArray<FFunctionExpressionOutput>& OriginalOutputs, TConstArrayView<TObjectPtr<UMaterialExpression>> Expressions, TArray<FExpressionInput*>& MaterialInputs, bool bMatchByName)"
  }
]