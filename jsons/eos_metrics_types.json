[
  {
    "label": "EOS_MetricsHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EOS_MetricsHandle"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" eos_common . h \" # pragma)",
    "insertText": "pack(push, 8)"
  },
  {
    "label": "EOS_ENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_ENUM(EOS_EUserControllerType, EOS_UCT_Unknown = 0, EOS_UCT_MouseKeyboard = 1, EOS_UCT_GamepadControl = 2, EOS_UCT_TouchControl = 3)"
  },
  {
    "label": "EOS_ENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_ENUM(EOS_EMetricsAccountIdType, EOS_MAIT_Epic = 0, EOS_MAIT_External = 1)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_METRICS_BEGINPLAYERSESSION_API_LATEST 1)",
    "insertText": "EOS_STRUCT(EOS_Metrics_BeginPlayerSessionOptions, ( int32_t ApiVersion; EOS_EMetricsAccountIdType AccountIdType; union { EOS_EpicAccountId Epic; const char* External; } AccountId; const char* DisplayName; EOS_EUserControllerType ControllerType; const char* ServerIp; const char* GameSessionId; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_METRICS_ENDPLAYERSESSION_API_LATEST 1)",
    "insertText": "EOS_STRUCT(EOS_Metrics_EndPlayerSessionOptions, ( int32_t ApiVersion; EOS_EMetricsAccountIdType AccountIdType; union { EOS_EpicAccountId Epic; const char* External; } AccountId; ))"
  }
]