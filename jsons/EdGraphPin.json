[
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSimpleMemberReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimpleMemberReference"
  },
  {
    "label": "FEdGraphPinType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphPinType"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "EBlueprintPinStyleType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlueprintPinStyleType"
  },
  {
    "label": "FEdGraphPinReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphPinReference"
  },
  {
    "label": "EEdGraphPinDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EEdGraphPinDirection"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UEdGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphSchema"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "UEdGraphPin_Deprecated",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin_Deprecated"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectPtr . h \" # include \" Misc / Guid . h \" # include \" UObject / Class . h \" # include \" UObject / WeakObjectPtr . h \" # include \" Templates / Casts . h \" # include \" EdGraph / EdGraphNode . h \" # include \" EdGraphPin . generated . h \" class UEdGraphPin ; enum class EPinResolveType : uint8 ; enum class EPinInsertPosition { Before,After,} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "FSimpleMemberReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSimpleMemberReference() : MemberParent(nullptr)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(FSimpleMemberReference())"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FSimpleMemberReference& Other)"
  },
  {
    "label": "GetMemberParentClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "GetMemberParentClass()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FSimpleMemberReference& Data)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Ar<<Data . MemberParent ; Ar<<Data . MemberName ; Ar<<Data . MemberGuid ; return Ar ; })",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "IsArray()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsArray()"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSet()"
  },
  {
    "label": "IsMap()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsMap()"
  },
  {
    "label": "FEdGraphPinType()",
    "kind": "Method",
    "detail": "Function (} public :)",
    "insertText": "FEdGraphPinType() : PinSubCategoryObject(nullptr) , ContainerType(EPinContainerType::None) , bIsArray_DEPRECATED(false) , bIsReference(false) , bIsConst(false) , bIsWeakPointer(false) , bIsUObjectWrapper(false) , bSerializeAsSinglePrecisionFloat(false)"
  },
  {
    "label": "FEdGraphPinType()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEdGraphPinType(FName InPinCategory, FName InPinSubCategory, UObject* InPinSubCategoryObject, EPinContainerType InPinContainerType, bool bInIsReference, const FEdGraphTerminalType& InValueTerminalType ) : PinCategory(InPinCategory) , PinSubCategory(InPinSubCategory) , PinSubCategoryObject(InPinSubCategoryObject) , PinValueType(InValueTerminalType) , ContainerType(InPinContainerType) , bIsArray_DEPRECATED(false) , bIsReference(bInIsReference) , bIsConst(false) , bIsWeakPointer(false) , bIsUObjectWrapper(false) , bSerializeAsSinglePrecisionFloat(false)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FEdGraphPinType& Other)"
  },
  {
    "label": "ResetToDefaults()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetToDefaults()"
  },
  {
    "label": "FEdGraphTerminalType()",
    "kind": "Method",
    "detail": "Function (PinCategory = NAME_None ; PinSubCategory = NAME_None ; PinSubCategoryObject = nullptr ; PinValueType =)",
    "insertText": "FEdGraphTerminalType()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (ContainerType = EPinContainerType::None ; bIsReference = false ; bIsWeakPointer = false ; bIsUObjectWrapper = false ; bSerializeAsSinglePrecisionFloat = false ; bIsConst = false ; } bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "DeclareCustomVersions()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "DeclareCustomVersions(FArchive& Ar)"
  },
  {
    "label": "GetPinTypeForTerminalType()",
    "kind": "Method",
    "detail": "Function (# endif FEdGraphPinType)",
    "insertText": "GetPinTypeForTerminalType(const FEdGraphTerminalType& TerminalType)"
  },
  {
    "label": "GetTerminalTypeForContainer()",
    "kind": "Method",
    "detail": "Function (FEdGraphPinType)",
    "insertText": "GetTerminalTypeForContainer(const FEdGraphPinType& ContainerType)"
  },
  {
    "label": "ToPinContainerType()",
    "kind": "Method",
    "detail": "Function (EPinContainerType)",
    "insertText": "ToPinContainerType(const bool bInIsArray, const bool bInIsSet, const bool bInIsMap)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (EPinContainerType ContainerType = EPinContainerType::None ;)",
    "insertText": "if(bInIsArray)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (ContainerType = EPinContainerType::Array ; } else)",
    "insertText": "if(bInIsSet)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (ContainerType = EPinContainerType::Set ; } else)",
    "insertText": "if(bInIsMap)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (ContainerType = EPinContainerType::Map ; } return ContainerType ; } } ; template<> struct TStructOpsTypeTraits<FEdGraphPinType> : public TStructOpsTypeTraitsBase2<FEdGraphPinType> { enum { WithSerializer = true,WithPostSerialize = true } ; EPropertyObjectReferenceType WithSerializerObjectReferences = EPropertyObjectReferenceType::Strong ; } ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (BPST_Original)",
    "insertText": "UMETA(DisplayName=\"Circles, Grid, Diamond\"), BPST_VariantA UMETA(DisplayName=\"Directional Circles\")"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FEdGraphPinReference() : OwningNode(nullptr)"
  },
  {
    "label": "FEdGraphPinReference()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEdGraphPinReference(UEdGraphPin* InPin) : OwningNode(nullptr)"
  },
  {
    "label": "SetPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPin(InPin)"
  },
  {
    "label": "FEdGraphPinReference()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEdGraphPinReference(const UEdGraphPin* InPin) : OwningNode(nullptr)"
  },
  {
    "label": "SetPin()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetPin(const UEdGraphPin* NewPin)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "Get()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FEdGraphPinReference& EdGraphPinReference)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FEdGraphPinReference& Other)"
  },
  {
    "label": "ShouldSavePinIfOrphaned()",
    "kind": "Method",
    "detail": "Function (uint8 bAdvancedView : 1 ; uint8 bDisplayAsMutableRef : 1 ; uint8 bAllowFriendlyName : 1 ; uint8 bOrphanedPin : 1 ; bool)",
    "insertText": "ShouldSavePinIfOrphaned()"
  },
  {
    "label": "CreatePin()",
    "kind": "Method",
    "detail": "Function (private : uint8 bSavePinIfOrphaned : 1 ; public : uint8 bUseBackwardsCompatForEmptyAutogeneratedValue : 1 ; # endif uint8 bWasTrashed : 1 ; # if WITH_EDITORONLY_DATA FText PinFriendlyName ; # endif FString PinToolTip ; FEdGraphPinType PinType ; FString DefaultValue ; FString AutogeneratedDefaultValue ; TObjectPtr<class UObject> DefaultObject ; FText DefaultTextValue ; TArray<UEdGraphPin*> LinkedTo ; TArray<UEdGraphPin*> SubPins ; UEdGraphPin* ParentPin ; UEdGraphPin* ReferencePassThroughConnection ; # if WITH_EDITORONLY_DATA FGuid PersistentGuid ; # endif public : UEdGraphPin*)",
    "insertText": "CreatePin(UEdGraphNode* InOwningNode)"
  },
  {
    "label": "MakeLinkTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeLinkTo(UEdGraphPin* ToPin, bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "BreakLinkTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakLinkTo(UEdGraphPin* ToPin, bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "BreakAllPinLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakAllPinLinks(bool bNotifyNodes = false, bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "MovePersistentDataFromOldPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MovePersistentDataFromOldPin(UEdGraphPin& SourcePin)"
  },
  {
    "label": "CopyPersistentDataFromOldPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPersistentDataFromOldPin(const UEdGraphPin& SourcePin)"
  },
  {
    "label": "AssignByRefPassThroughConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignByRefPassThroughConnection(UEdGraphPin* InTargetPin)"
  },
  {
    "label": "HasAnyConnections()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAnyConnections()"
  },
  {
    "label": "GetComplementaryDirection()",
    "kind": "Method",
    "detail": "Function (EEdGraphPinDirection)",
    "insertText": "GetComplementaryDirection(EEdGraphPinDirection InDirection)"
  },
  {
    "label": "SafeSetHidden()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SafeSetHidden(bool bIsHidden)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA)",
    "insertText": "if(SubPins.Num() == 0)"
  },
  {
    "label": "GetDefaultAsString()",
    "kind": "Method",
    "detail": "Function (bHidden = bIsHidden ; } # endif } FString)",
    "insertText": "GetDefaultAsString()"
  },
  {
    "label": "IsDefaultAsStringEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDefaultAsStringEmpty()"
  },
  {
    "label": "GetDefaultAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDefaultAsText()"
  },
  {
    "label": "DoesDefaultValueMatchAutogenerated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesDefaultValueMatchAutogenerated()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetLinkInfoString()",
    "kind": "Method",
    "detail": "Function (# endif const FString)",
    "insertText": "GetLinkInfoString(const FString& InFunctionName, const FString& InInfoData, const UEdGraphPin* InToPin)"
  },
  {
    "label": "ResetDefaultValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDefaultValue()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (DefaultValue .)",
    "insertText": "Empty()"
  },
  {
    "label": "GetEmpty()",
    "kind": "Method",
    "detail": "Function (DefaultObject = nullptr ; DefaultTextValue =)",
    "insertText": "GetEmpty()"
  },
  {
    "label": "AddStructReferencedObjects()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA bHidden = false ; bNotConnectable = false ; bDefaultValueIsReadOnly = false ; bDefaultValueIsIgnored = false ; bOrphanedPin = false ; bSavePinIfOrphaned = true ; bAllowFriendlyName = true ; # endif } void)",
    "insertText": "AddStructReferencedObjects(class FReferenceCollector& Collector)"
  },
  {
    "label": "SerializeAsOwningNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeAsOwningNode(FArchive& Ar, TArray<UEdGraphPin*>& ArrayRef)"
  },
  {
    "label": "DeclarePinCustomVersions()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "DeclarePinCustomVersions(FArchive& Ar)"
  },
  {
    "label": "Modify()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "Modify(bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "SetOwningNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwningNode(UEdGraphNode* NewOwningNode)"
  },
  {
    "label": "MarkAsGarbage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAsGarbage()"
  },
  {
    "label": "FindPinCreatedFromDeprecatedPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "FindPinCreatedFromDeprecatedPin(class UEdGraphPin_Deprecated* DeprecatedPin)"
  },
  {
    "label": "ExportTextItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportTextItem(FString& ValueStr, int32 PortFlags)"
  },
  {
    "label": "ImportTextItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportTextItem(const TCHAR*& Buffer, int32 PortFlags, class UObject* Parent, FOutputDevice* ErrorText)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FString)",
    "insertText": "GetName()"
  },
  {
    "label": "GetFName()",
    "kind": "Method",
    "detail": "Function (} const FName)",
    "insertText": "GetFName()"
  },
  {
    "label": "IsPendingKill()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPendingKill()"
  },
  {
    "label": "ShutdownVerification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownVerification()"
  },
  {
    "label": "Purge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Purge()"
  },
  {
    "label": "UEdGraphPin()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UEdGraphPin()"
  },
  {
    "label": "ResolveAllPinReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveAllPinReferences()"
  },
  {
    "label": "AreOrphanPinsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreOrphanPinsEnabled()"
  },
  {
    "label": "SanitizePinsPostUndoRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SanitizePinsPostUndoRedo()"
  },
  {
    "label": "UEdGraphPin()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "UEdGraphPin(UEdGraphNode* InOwningNode, const FGuid& PinGuid)"
  },
  {
    "label": "InitFromDeprecatedPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromDeprecatedPin(class UEdGraphPin_Deprecated* DeprecatedPin)"
  },
  {
    "label": "DestroyImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyImpl(bool bClearLinks)"
  },
  {
    "label": "ConvertConnectedGhostNodesToRealNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertConnectedGhostNodesToRealNodes(UEdGraphNode* InNode, bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "ResolveReferencesToPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveReferencesToPin(UEdGraphPin* Pin, bool bStrictValidation = true)"
  },
  {
    "label": "SerializePinArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializePinArray(FArchive& Ar, TArray<UEdGraphPin*>& ArrayRef, UEdGraphPin* RequestingPin, EPinResolveType ResolveType)"
  },
  {
    "label": "SerializePin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializePin(FArchive& Ar, UEdGraphPin*& PinRef, int32 ArrayIdx, UEdGraphPin* RequestingPin, EPinResolveType ResolveType, TArray<UEdGraphPin*>& OldPins)"
  },
  {
    "label": "ExportText_PinReference()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ExportText_PinReference(const UEdGraphPin* Pin)"
  },
  {
    "label": "ExportText_PinArray()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ExportText_PinArray(const TArray<UEdGraphPin*>& PinArray)"
  },
  {
    "label": "ImportText_PinArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportText_PinArray(const TCHAR*& Buffer, TArray<UEdGraphPin*>& ArrayRef, UEdGraphPin* RequestingPin, EPinResolveType ResolveType)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "IsSafeForRootSet()",
    "kind": "Method",
    "detail": "Function (# endif public : bool)",
    "insertText": "IsSafeForRootSet()"
  }
]