[
  {
    "label": "ServiceDirectoryTestBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ServiceDirectoryTestBase"
  },
  {
    "label": "ServiceDirectoryTestBase()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FUCHSIA_SERVICE_DIRECTORY_TEST_BASE_H_ # define BASE_FUCHSIA_SERVICE_DIRECTORY_TEST_BASE_H_ # include<lib / sys / cpp / outgoing_directory . h> # include<lib / sys / cpp / service_directory . h> # include<zircon / types . h> # include<memory> # include \" base / fuchsia / scoped_service_binding . h \" # include \" base / fuchsia / test_interface_impl . h \" # include \" base / test / scoped_run_loop_timeout . h \" # include \" base / test / task_environment . h \" # include \" base / testfidl / cpp / fidl . h \" # include \" testing / gtest / include / gtest / gtest . h \" namespace base { class ServiceDirectoryTestBase : public testing::Test { public :)",
    "insertText": "ServiceDirectoryTestBase()"
  },
  {
    "label": "ServiceDirectoryTestBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServiceDirectoryTestBase(const ServiceDirectoryTestBase&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ServiceDirectoryTestBase&)",
    "insertText": "operator(const ServiceDirectoryTestBase&)"
  },
  {
    "label": "VerifyTestInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyTestInterface(fidl::InterfacePtr<testfidl::TestInterface>* stub, zx_status_t expected_error)"
  }
]