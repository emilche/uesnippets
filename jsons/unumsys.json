[
  {
    "label": "UNumberingSystem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UNumberingSystem"
  },
  {
    "label": "UNumberingSystem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UNumberingSystem"
  },
  {
    "label": "UNumberingSystem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UNumberingSystem"
  },
  {
    "label": "LocalUNumberingSystemPointer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LocalUNumberingSystemPointer"
  },
  {
    "label": "unumsys_open()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "unumsys_open(const char *locale, UErrorCode *status)"
  },
  {
    "label": "unumsys_openByName()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "unumsys_openByName(const char *name, UErrorCode *status)"
  },
  {
    "label": "unumsys_close()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "unumsys_close(UNumberingSystem *unumsys)"
  },
  {
    "label": "unumsys_openAvailableNames()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "unumsys_openAvailableNames(UErrorCode *status)"
  },
  {
    "label": "unumsys_getName()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "unumsys_getName(const UNumberingSystem *unumsys)"
  },
  {
    "label": "unumsys_isAlgorithmic()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "unumsys_isAlgorithmic(const UNumberingSystem *unumsys)"
  },
  {
    "label": "unumsys_getRadix()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "unumsys_getRadix(const UNumberingSystem *unumsys)"
  },
  {
    "label": "unumsys_getDescription()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "unumsys_getDescription(const UNumberingSystem *unumsys, UChar *result,\n                       int32_t resultLength, UErrorCode *status)"
  }
]