[
  {
    "label": "FOpenGL4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenGL4"
  },
  {
    "label": "SupportsDrawIndirect()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" OpenGLPlatform . h \" # if UGL_PLATFORM_SUPPORTS_GL4 # include \" UObject / UObjectHierarchyFwd . h \" # include \" Misc / AssertionMacros . h \" # include \" OpenGL3 . h \" struct FOpenGL4 : public FOpenGL3 { bool)",
    "insertText": "SupportsDrawIndirect()"
  },
  {
    "label": "glBlendFuncSeparatei()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glBlendFuncSeparatei(Buf, SrcRGB, DstRGB, SrcAlpha, DstAlpha)"
  },
  {
    "label": "BlendEquationSeparatei()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BlendEquationSeparatei(GLuint Buf, GLenum ModeRGB, GLenum ModeAlpha)"
  },
  {
    "label": "glBlendEquationSeparatei()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glBlendEquationSeparatei(Buf, ModeRGB, ModeAlpha)"
  },
  {
    "label": "BlendFunci()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BlendFunci(GLuint Buf, GLenum Src, GLenum Dst)"
  },
  {
    "label": "glBlendFunci()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glBlendFunci(Buf, Src, Dst)"
  },
  {
    "label": "BlendEquationi()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BlendEquationi(GLuint Buf, GLenum Mode)"
  },
  {
    "label": "glBlendEquationi()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glBlendEquationi(Buf, Mode)"
  },
  {
    "label": "PatchParameteri()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PatchParameteri(GLenum Pname, GLint Value)"
  },
  {
    "label": "glPatchParameteri()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glPatchParameteri(Pname, Value)"
  },
  {
    "label": "BindImageTexture()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BindImageTexture(GLuint Unit, GLuint Texture, GLint Level, GLboolean Layered, GLint Layer, GLenum Access, GLenum Format)"
  },
  {
    "label": "glBindImageTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glBindImageTexture(Unit, Texture, Level, Layered, Layer, Access, Format)"
  },
  {
    "label": "DispatchCompute()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DispatchCompute(GLuint NumGroupsX, GLuint NumGroupsY, GLuint NumGroupsZ)"
  },
  {
    "label": "glDispatchCompute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glDispatchCompute(NumGroupsX, NumGroupsY, NumGroupsZ)"
  },
  {
    "label": "DispatchComputeIndirect()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DispatchComputeIndirect(GLintptr Offset)"
  },
  {
    "label": "glDispatchComputeIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glDispatchComputeIndirect(Offset)"
  },
  {
    "label": "MemoryBarrier()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MemoryBarrier(GLbitfield Barriers)"
  },
  {
    "label": "glMemoryBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glMemoryBarrier(Barriers)"
  },
  {
    "label": "DrawArraysIndirect()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DrawArraysIndirect(GLenum Mode, const void *Offset)"
  },
  {
    "label": "glDrawArraysIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glDrawArraysIndirect(Mode, Offset)"
  },
  {
    "label": "DrawElementsIndirect()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DrawElementsIndirect(GLenum Mode, GLenum Type, const void *Offset)"
  },
  {
    "label": "glDrawElementsIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glDrawElementsIndirect(Mode, Type, Offset)"
  },
  {
    "label": "BindVertexBuffer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BindVertexBuffer(GLuint BindingIndex, GLuint Buffer, GLintptr Offset, GLsizei Stride)"
  },
  {
    "label": "glBindVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glBindVertexBuffer(BindingIndex, Buffer, Offset, Stride)"
  },
  {
    "label": "VertexAttribFormat()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "VertexAttribFormat(GLuint AttribIndex, GLint Size, GLenum Type, GLboolean Normalized, GLuint RelativeOffset)"
  },
  {
    "label": "glVertexAttribFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glVertexAttribFormat(AttribIndex, Size, Type, Normalized, RelativeOffset)"
  },
  {
    "label": "VertexAttribIFormat()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "VertexAttribIFormat(GLuint AttribIndex, GLint Size, GLenum Type, GLuint RelativeOffset)"
  },
  {
    "label": "glVertexAttribIFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glVertexAttribIFormat(AttribIndex, Size, Type, RelativeOffset)"
  },
  {
    "label": "VertexAttribBinding()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "VertexAttribBinding(GLuint AttribIndex, GLuint BindingIndex)"
  },
  {
    "label": "glVertexAttribBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glVertexAttribBinding(AttribIndex, BindingIndex)"
  },
  {
    "label": "VertexBindingDivisor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "VertexBindingDivisor(GLuint BindingIndex, GLuint Divisor)"
  },
  {
    "label": "glVertexBindingDivisor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glVertexBindingDivisor(BindingIndex, Divisor)"
  },
  {
    "label": "TexBufferRange()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "TexBufferRange(GLenum Target, GLenum InternalFormat, GLuint Buffer, GLintptr Offset, GLsizeiptr Size)"
  },
  {
    "label": "glTexBufferRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glTexBufferRange(Target, InternalFormat, Buffer, Offset, Size)"
  },
  {
    "label": "TextureView()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "TextureView(GLuint ViewName, GLenum ViewTarget, GLuint SrcName, GLenum InternalFormat, GLuint MinLevel, GLuint NumLevels, GLuint MinLayer, GLuint NumLayers)"
  },
  {
    "label": "glTextureView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glTextureView(ViewName, ViewTarget, SrcName, InternalFormat, MinLevel, NumLevels, MinLayer, NumLayers)"
  },
  {
    "label": "ClearBufferData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClearBufferData(GLenum Target, GLenum InternalFormat, GLenum Format, GLenum Type, const uint32* Data)"
  },
  {
    "label": "glClearBufferData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glClearBufferData(Target, InternalFormat, Format, Type, Data)"
  },
  {
    "label": "ProcessQueryGLInt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProcessQueryGLInt()"
  },
  {
    "label": "ProcessExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessExtensions(const FString& ExtensionsString)"
  },
  {
    "label": "GetMaxComputeUniformComponents()",
    "kind": "Method",
    "detail": "Function (GLint)",
    "insertText": "GetMaxComputeUniformComponents()"
  },
  {
    "label": "GetReadHalfFloatPixelsEnum()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetReadHalfFloatPixelsEnum()"
  }
]