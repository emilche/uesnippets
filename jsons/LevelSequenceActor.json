[
  {
    "label": "ULevelSequenceBurnIn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelSequenceBurnIn"
  },
  {
    "label": "ULevelSequencePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelSequencePlayer"
  },
  {
    "label": "UMovieSceneSequenceTickManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequenceTickManager"
  },
  {
    "label": "ULevelSequenceBurnInInitSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelSequenceBurnInInitSettings"
  },
  {
    "label": "ULevelSequenceBurnInOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelSequenceBurnInOptions"
  },
  {
    "label": "ALevelSequenceActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALevelSequenceActor"
  },
  {
    "label": "FBoundActorProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoundActorProxy"
  },
  {
    "label": "AReplicatedLevelSequenceActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AReplicatedLevelSequenceActor"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / SoftObjectPath . h \" # include \" GameFramework / Actor . h \" # include \" IMovieScenePlaybackClient . h \" # include \" MovieSceneSequencePlaybackSettings . h \" # include \" MovieSceneBindingOwnerInterface . h \" # include \" MovieSceneBindingOverrides . h \" # include \" LevelSequenceCameraSettings . h \" # include \" WorldPartition / IWorldPartitionObjectResolver . h \" # include \" LevelSequenceActor . generated . h \" class ULevelSequenceBurnIn ; class ULevelSequencePlayer ; class UMovieSceneSequenceTickManager ;)",
    "insertText": "UCLASS(Blueprintable, DefaultToInstanced, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(config=EditorPerProjectUserSettings, PerObjectConfig, DefaultToInstanced, BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() LEVELSEQUENCE_API ULevelSequenceBurnInOptions(const FObjectInitializer& Init)"
  },
  {
    "label": "ResetSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSettings()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (protected : # if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# endif } ;)",
    "insertText": "UCLASS(hideCategories=(Rendering, Physics, HLOD, Activation, Input), MinimalAPI)"
  },
  {
    "label": "DECLARE_DYNAMIC_DELEGATE()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "DECLARE_DYNAMIC_DELEGATE(FOnLevelSequenceLoaded)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() LEVELSEQUENCE_API ALevelSequenceActor(const FObjectInitializer& Init)"
  },
  {
    "label": "RefreshBurnIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshBurnIn()"
  },
  {
    "label": "RetrieveBindingOverrides()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "RetrieveBindingOverrides(const FGuid& InBindingId, FMovieSceneSequenceID InSequenceID, TArray<UObject*, TInlineAllocator<1>>& OutObjects)"
  },
  {
    "label": "GetInstanceData()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetInstanceData()"
  },
  {
    "label": "GetAspectRatioAxisConstraint()",
    "kind": "Method",
    "detail": "Function (TOptional<EAspectRatioAxisConstraint>)",
    "insertText": "GetAspectRatioAxisConstraint()"
  },
  {
    "label": "GetIsReplicatedPlayback()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsReplicatedPlayback()"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "DeclareConstructClasses()",
    "kind": "Method",
    "detail": "Function (public : # if WITH_EDITORONLY_DATA void)",
    "insertText": "DeclareConstructClasses(TArray<FTopLevelAssetPath>& OutConstructClasses, const UClass* SpecificSubclass)"
  },
  {
    "label": "PreInitializeComponents()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "PreInitializeComponents()"
  },
  {
    "label": "PostInitializeComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitializeComponents()"
  },
  {
    "label": "BeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPlay()"
  },
  {
    "label": "EndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPlay(const EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "RewindForReplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RewindForReplay()"
  },
  {
    "label": "PostNetReceive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostNetReceive()"
  },
  {
    "label": "CanChangeIsSpatiallyLoadedFlag()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "CanChangeIsSpatiallyLoadedFlag()"
  },
  {
    "label": "GetReferencedContentObjects()",
    "kind": "Method",
    "detail": "Function (WorldPartitionResolveData = InWorldPartitionResolveData ; } bool)",
    "insertText": "GetReferencedContentObjects(TArray<UObject*>& Objects)"
  },
  {
    "label": "InitializePlayer()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "InitializePlayer()"
  },
  {
    "label": "InitializePlayerWithSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializePlayerWithSequence(ULevelSequence* LevelSequenceAsset)"
  },
  {
    "label": "OnSequenceLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSequenceLoaded(const FName& PackageName, UPackage* Package, EAsyncLoadingResult::Type Result)"
  },
  {
    "label": "GetObjectPickerProxy()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR TSharedPtr<FStructOnScope>)",
    "insertText": "GetObjectPickerProxy(TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "UpdateObjectFromProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateObjectFromProxy(FStructOnScope& Proxy, IPropertyHandle& ObjectPropertyHandle)"
  },
  {
    "label": "RetrieveOwnedSequence()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSequence*)",
    "insertText": "RetrieveOwnedSequence()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() #if WITH_EDITORONLY_DATA UPROPERTY(EditInstanceOnly, AdvancedDisplay, Category=\"General\")"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(TSharedPtr<IPropertyHandle> InPropertyHandle)"
  },
  {
    "label": "OnReflectedPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReflectedPropertyChanged()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle> ReflectedProperty ; # endif } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: LEVELSEQUENCE_API AReplicatedLevelSequenceActor(const FObjectInitializer& Init)"
  }
]