[
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "CheckNan",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckNan"
  },
  {
    "label": "CheckInf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckInf"
  },
  {
    "label": "CheckFinite",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckFinite"
  },
  {
    "label": "CheckMagnitude",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckMagnitude"
  },
  {
    "label": "CheckRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckRange"
  },
  {
    "label": "CheckMin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckMin"
  },
  {
    "label": "CheckMax",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckMax"
  },
  {
    "label": "CheckNormGrad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckNormGrad"
  },
  {
    "label": "CheckEikonal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckEikonal"
  },
  {
    "label": "CheckDivergence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckDivergence"
  },
  {
    "label": "Diagnose",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Diagnose"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "CheckValues",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CheckValues"
  },
  {
    "label": "CheckValues",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CheckValues"
  },
  {
    "label": "Diagnose",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Diagnose"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "CheckLevelSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CheckLevelSet"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "CheckFogVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CheckFogVolume"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "InactiveVoxelValues",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InactiveVoxelValues"
  },
  {
    "label": "InactiveTileValues",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InactiveTileValues"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "checkLevelSet()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "checkLevelSet(const GridType& grid, size_t number=9)"
  },
  {
    "label": "checkFogVolume()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "checkFogVolume(const GridType& grid, size_t number=6)"
  },
  {
    "label": "uniqueInactiveValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "uniqueInactiveValues(const GridType& grid,\n    std::vector<typename GridType::ValueType>& values, size_t numValues)"
  },
  {
    "label": "cc()",
    "kind": "Method",
    "detail": "Function (CheckValues<CheckT>)",
    "insertText": "cc(mask, mGrid, check)"
  },
  {
    "label": "MaskType()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "MaskType()"
  },
  {
    "label": "c()",
    "kind": "Method",
    "detail": "Function (CheckRange<GridType>)",
    "insertText": "c(-background, background)"
  },
  {
    "label": "c()",
    "kind": "Method",
    "detail": "Function (GridType::ValueOffCIter>)",
    "insertText": "c(background)"
  },
  {
    "label": "c()",
    "kind": "Method",
    "detail": "Function (CheckLevelSet<GridType>)",
    "insertText": "c(grid)"
  },
  {
    "label": "c()",
    "kind": "Method",
    "detail": "Function (GridType::ValueOffCIter>)",
    "insertText": "c(0)"
  },
  {
    "label": "c()",
    "kind": "Method",
    "detail": "Function (CheckRange<GridType>)",
    "insertText": "c(0, 1)"
  },
  {
    "label": "c()",
    "kind": "Method",
    "detail": "Function (CheckFogVolume<GridType>)",
    "insertText": "c(grid)"
  },
  {
    "label": "runParallel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "runParallel()"
  },
  {
    "label": "runSerial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "runSerial()"
  },
  {
    "label": "InactiveVoxelValues()",
    "kind": "Method",
    "detail": "Function (inline)",
    "insertText": "InactiveVoxelValues(const InactiveVoxelValues<TreeType>&, tbb::split)"
  },
  {
    "label": "join()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "join(const InactiveVoxelValues<TreeType>&)"
  },
  {
    "label": "runParallel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "runParallel(IterRange&)"
  },
  {
    "label": "runSerial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "runSerial(IterRange&)"
  },
  {
    "label": "InactiveTileValues()",
    "kind": "Method",
    "detail": "Function (inline)",
    "insertText": "InactiveTileValues(const InactiveTileValues<TreeType>&, tbb::split)"
  },
  {
    "label": "join()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "join(const InactiveTileValues<TreeType>&)"
  },
  {
    "label": "leafs()",
    "kind": "Method",
    "detail": "Function (tree::LeafManager<TreeType>)",
    "insertText": "leafs(tree)"
  },
  {
    "label": "voxelOp()",
    "kind": "Method",
    "detail": "Function (diagnostics_internal::InactiveVoxelValues<TreeType>)",
    "insertText": "voxelOp(leafs, numValues)"
  },
  {
    "label": "tileOp()",
    "kind": "Method",
    "detail": "Function (diagnostics_internal::InactiveTileValues<TreeType>)",
    "insertText": "tileOp(numValues)"
  },
  {
    "label": "range()",
    "kind": "Method",
    "detail": "Function (TreeType::ValueOffCIter>)",
    "insertText": "range(iter)"
  }
]