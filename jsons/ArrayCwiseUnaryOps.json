[
  {
    "label": "ShiftRightXpr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ShiftRightXpr"
  },
  {
    "label": "ShiftLeftXpr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ShiftLeftXpr"
  },
  {
    "label": "abs()",
    "kind": "Method",
    "detail": "Function (typedef CwiseUnaryOp<internal::scalar_abs_op<Scalar>,const Derived> AbsReturnType ; typedef CwiseUnaryOp<internal::scalar_arg_op<Scalar>,const Derived> ArgReturnType ; typedef CwiseUnaryOp<internal::scalar_abs2_op<Scalar>,const Derived> Abs2ReturnType ; typedef CwiseUnaryOp<internal::scalar_sqrt_op<Scalar>,const Derived> SqrtReturnType ; typedef CwiseUnaryOp<internal::scalar_rsqrt_op<Scalar>,const Derived> RsqrtReturnType ; typedef CwiseUnaryOp<internal::scalar_sign_op<Scalar>,const Derived> SignReturnType ; typedef CwiseUnaryOp<internal::scalar_inverse_op<Scalar>,const Derived> InverseReturnType ; typedef CwiseUnaryOp<internal::scalar_boolean_not_op<Scalar>,const Derived> BooleanNotReturnType ; typedef CwiseUnaryOp<internal::scalar_exp_op<Scalar>,const Derived> ExpReturnType ; typedef CwiseUnaryOp<internal::scalar_expm1_op<Scalar>,const Derived> Expm1ReturnType ; typedef CwiseUnaryOp<internal::scalar_log_op<Scalar>,const Derived> LogReturnType ; typedef CwiseUnaryOp<internal::scalar_log1p_op<Scalar>,const Derived> Log1pReturnType ; typedef CwiseUnaryOp<internal::scalar_log10_op<Scalar>,const Derived> Log10ReturnType ; typedef CwiseUnaryOp<internal::scalar_log2_op<Scalar>,const Derived> Log2ReturnType ; typedef CwiseUnaryOp<internal::scalar_cos_op<Scalar>,const Derived> CosReturnType ; typedef CwiseUnaryOp<internal::scalar_sin_op<Scalar>,const Derived> SinReturnType ; typedef CwiseUnaryOp<internal::scalar_tan_op<Scalar>,const Derived> TanReturnType ; typedef CwiseUnaryOp<internal::scalar_acos_op<Scalar>,const Derived> AcosReturnType ; typedef CwiseUnaryOp<internal::scalar_asin_op<Scalar>,const Derived> AsinReturnType ; typedef CwiseUnaryOp<internal::scalar_atan_op<Scalar>,const Derived> AtanReturnType ; typedef CwiseUnaryOp<internal::scalar_tanh_op<Scalar>,const Derived> TanhReturnType ; typedef CwiseUnaryOp<internal::scalar_logistic_op<Scalar>,const Derived> LogisticReturnType ; typedef CwiseUnaryOp<internal::scalar_sinh_op<Scalar>,const Derived> SinhReturnType ; # if EIGEN_HAS_CXX11_MATH typedef CwiseUnaryOp<internal::scalar_atanh_op<Scalar>,const Derived> AtanhReturnType ; typedef CwiseUnaryOp<internal::scalar_asinh_op<Scalar>,const Derived> AsinhReturnType ; typedef CwiseUnaryOp<internal::scalar_acosh_op<Scalar>,const Derived> AcoshReturnType ; # endif typedef CwiseUnaryOp<internal::scalar_cosh_op<Scalar>,const Derived> CoshReturnType ; typedef CwiseUnaryOp<internal::scalar_square_op<Scalar>,const Derived> SquareReturnType ; typedef CwiseUnaryOp<internal::scalar_cube_op<Scalar>,const Derived> CubeReturnType ; typedef CwiseUnaryOp<internal::scalar_round_op<Scalar>,const Derived> RoundReturnType ; typedef CwiseUnaryOp<internal::scalar_rint_op<Scalar>,const Derived> RintReturnType ; typedef CwiseUnaryOp<internal::scalar_floor_op<Scalar>,const Derived> FloorReturnType ; typedef CwiseUnaryOp<internal::scalar_ceil_op<Scalar>,const Derived> CeilReturnType ; typedef CwiseUnaryOp<internal::scalar_isnan_op<Scalar>,const Derived> IsNaNReturnType ; typedef CwiseUnaryOp<internal::scalar_isinf_op<Scalar>,const Derived> IsInfReturnType ; typedef CwiseUnaryOp<internal::scalar_isfinite_op<Scalar>,const Derived> IsFiniteReturnType ; EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const AbsReturnType)",
    "insertText": "abs()"
  },
  {
    "label": "arg()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const ArgReturnType)",
    "insertText": "arg()"
  },
  {
    "label": "abs2()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Abs2ReturnType)",
    "insertText": "abs2()"
  },
  {
    "label": "exp()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const ExpReturnType)",
    "insertText": "exp()"
  },
  {
    "label": "expm1()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const Expm1ReturnType)",
    "insertText": "expm1()"
  },
  {
    "label": "log()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const LogReturnType)",
    "insertText": "log()"
  },
  {
    "label": "log1p()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const Log1pReturnType)",
    "insertText": "log1p()"
  },
  {
    "label": "log10()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const Log10ReturnType)",
    "insertText": "log10()"
  },
  {
    "label": "log2()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const Log2ReturnType)",
    "insertText": "log2()"
  },
  {
    "label": "sqrt()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const SqrtReturnType)",
    "insertText": "sqrt()"
  },
  {
    "label": "rsqrt()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const RsqrtReturnType)",
    "insertText": "rsqrt()"
  },
  {
    "label": "sign()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const SignReturnType)",
    "insertText": "sign()"
  },
  {
    "label": "cos()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const CosReturnType)",
    "insertText": "cos()"
  },
  {
    "label": "sin()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const SinReturnType)",
    "insertText": "sin()"
  },
  {
    "label": "tan()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const TanReturnType)",
    "insertText": "tan()"
  },
  {
    "label": "atan()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const AtanReturnType)",
    "insertText": "atan()"
  },
  {
    "label": "acos()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const AcosReturnType)",
    "insertText": "acos()"
  },
  {
    "label": "asin()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const AsinReturnType)",
    "insertText": "asin()"
  },
  {
    "label": "tanh()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const TanhReturnType)",
    "insertText": "tanh()"
  },
  {
    "label": "sinh()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const SinhReturnType)",
    "insertText": "sinh()"
  },
  {
    "label": "cosh()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const CoshReturnType)",
    "insertText": "cosh()"
  },
  {
    "label": "atanh()",
    "kind": "Method",
    "detail": "Function (} # if EIGEN_HAS_CXX11_MATH EIGEN_DEVICE_FUNC const AtanhReturnType)",
    "insertText": "atanh()"
  },
  {
    "label": "asinh()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const AsinhReturnType)",
    "insertText": "asinh()"
  },
  {
    "label": "acosh()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const AcoshReturnType)",
    "insertText": "acosh()"
  },
  {
    "label": "logistic()",
    "kind": "Method",
    "detail": "Function (} # endif EIGEN_DEVICE_FUNC const LogisticReturnType)",
    "insertText": "logistic()"
  },
  {
    "label": "inverse()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const InverseReturnType)",
    "insertText": "inverse()"
  },
  {
    "label": "square()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const SquareReturnType)",
    "insertText": "square()"
  },
  {
    "label": "cube()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const CubeReturnType)",
    "insertText": "cube()"
  },
  {
    "label": "rint()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const RintReturnType)",
    "insertText": "rint()"
  },
  {
    "label": "round()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const RoundReturnType)",
    "insertText": "round()"
  },
  {
    "label": "floor()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const FloorReturnType)",
    "insertText": "floor()"
  },
  {
    "label": "ceil()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const CeilReturnType)",
    "insertText": "ceil()"
  },
  {
    "label": "shiftRight()",
    "kind": "Method",
    "detail": "Function (} template<int N> struct ShiftRightXpr { typedef CwiseUnaryOp<internal::scalar_shift_right_op<Scalar,N>,const Derived> Type ; } ; template<int N> EIGEN_DEVICE_FUNC ShiftRightXpr<N>::Type)",
    "insertText": "shiftRight()"
  },
  {
    "label": "shiftLeft()",
    "kind": "Method",
    "detail": "Function (} template<int N> struct ShiftLeftXpr { typedef CwiseUnaryOp<internal::scalar_shift_left_op<Scalar,N>,const Derived> Type ; } ; template<int N> EIGEN_DEVICE_FUNC ShiftLeftXpr<N>::Type)",
    "insertText": "shiftLeft()"
  },
  {
    "label": "isNaN()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const IsNaNReturnType)",
    "insertText": "isNaN()"
  },
  {
    "label": "isInf()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const IsInfReturnType)",
    "insertText": "isInf()"
  },
  {
    "label": "isFinite()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const IsFiniteReturnType)",
    "insertText": "isFinite()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const BooleanNotReturnType)",
    "insertText": "operator()"
  },
  {
    "label": "EIGEN_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT((internal::is_same<bool,Scalar>::value), THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL)"
  },
  {
    "label": "lgamma()",
    "kind": "Method",
    "detail": "Function (} typedef CwiseUnaryOp<internal::scalar_lgamma_op<Scalar>,const Derived> LgammaReturnType ; typedef CwiseUnaryOp<internal::scalar_digamma_op<Scalar>,const Derived> DigammaReturnType ; typedef CwiseUnaryOp<internal::scalar_erf_op<Scalar>,const Derived> ErfReturnType ; typedef CwiseUnaryOp<internal::scalar_erfc_op<Scalar>,const Derived> ErfcReturnType ; typedef CwiseUnaryOp<internal::scalar_ndtri_op<Scalar>,const Derived> NdtriReturnType ; EIGEN_DEVICE_FUNC const LgammaReturnType)",
    "insertText": "lgamma()"
  },
  {
    "label": "digamma()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const DigammaReturnType)",
    "insertText": "digamma()"
  },
  {
    "label": "erf()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const ErfReturnType)",
    "insertText": "erf()"
  },
  {
    "label": "erfc()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const ErfcReturnType)",
    "insertText": "erfc()"
  },
  {
    "label": "ndtri()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const NdtriReturnType)",
    "insertText": "ndtri()"
  }
]