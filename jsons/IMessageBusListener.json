[
  {
    "label": "FMessageAddress",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMessageAddress"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IBusListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBusListener"
  },
  {
    "label": "IBusListener()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / TaskGraphInterfaces . h \" struct FMessageAddress ; enum class EMessageBusNotification : uint8 { Registered = 0,Unregistered } ; class IBusListener { public : ~)",
    "insertText": "IBusListener()"
  },
  {
    "label": "GetListenerThread()",
    "kind": "Method",
    "detail": "Function (} ENamedThreads::Type)",
    "insertText": "GetListenerThread()"
  },
  {
    "label": "NotifyRegistration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyRegistration(const FMessageAddress& Address, EMessageBusNotification Notification)"
  }
]