[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FBulkData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBulkData"
  },
  {
    "label": "FLinkerSave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerSave"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FPackageFileVersion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageFileVersion"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCompressionSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompressionSettings"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "a",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "a"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "with"
  },
  {
    "label": "FEditorBulkData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorBulkData"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "FSharedBufferWithID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedBufferWithID"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTocEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTocEntry"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ErrorVerbosity",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ErrorVerbosity"
  },
  {
    "label": "FCompressionSettings()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FCompressionSettings()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(ECompressedBufferCompressor InCompressor, ECompressedBufferCompressionLevel InCompressionLevel)"
  },
  {
    "label": "SetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToDefault()"
  },
  {
    "label": "SetToDisabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToDisabled()"
  },
  {
    "label": "GetCompressionLevel()",
    "kind": "Method",
    "detail": "Function (ECompressedBufferCompressionLevel)",
    "insertText": "GetCompressionLevel()"
  },
  {
    "label": "FEditorBulkData()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FEditorBulkData(FEditorBulkData&& Other)"
  },
  {
    "label": "FEditorBulkData()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FEditorBulkData(const FEditorBulkData& Other)"
  },
  {
    "label": "CreateFromBulkData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFromBulkData(FBulkData& BulkData, const FGuid& Guid, UObject* Owner)"
  },
  {
    "label": "CreateLegacyUniqueIdentifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateLegacyUniqueIdentifier(UObject* Owner)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, UObject* Owner, bool bAllowRegister=true)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "UnloadData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnloadData()"
  },
  {
    "label": "DetachFromDisk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachFromDisk(FArchive* Ar, bool bEnsurePayloadIsLoaded)"
  },
  {
    "label": "UpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePayload(FSharedBuffer InPayload, UObject* Owner = nullptr)"
  },
  {
    "label": "UpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePayload(FCompressedBuffer InPayload, UObject* Owner = nullptr)"
  },
  {
    "label": "FSharedBufferWithID()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FSharedBufferWithID(FSharedBuffer InPayload)"
  },
  {
    "label": "UpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePayload(FSharedBufferWithID InPayload, UObject* Owner = nullptr)"
  },
  {
    "label": "SetCompressionOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompressionOptions(ECompressionOptions Option)"
  },
  {
    "label": "SetCompressionOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompressionOptions(ECompressedBufferCompressor Compressor, ECompressedBufferCompressionLevel CompressionLevel)"
  },
  {
    "label": "GetCustomVersions()",
    "kind": "Method",
    "detail": "Function (FCustomVersionContainer)",
    "insertText": "GetCustomVersions(FArchive& InlineArchive)"
  },
  {
    "label": "TearOff()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearOff()"
  },
  {
    "label": "SerializeForRegistry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeForRegistry(FArchive& Ar)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(Flags, EFlags::LegacyKeyWasGuidDerived)"
  },
  {
    "label": "UpdatePayloadId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePayloadId()"
  },
  {
    "label": "UpdateRegistrationOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRegistrationOwner(UObject* Owner)"
  },
  {
    "label": "SetVirtualizationOptOut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVirtualizationOptOut(bool bOptOut)"
  },
  {
    "label": "FEditorBulkData()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FEditorBulkData(const FEditorBulkData& Other, ETornOff)"
  },
  {
    "label": "SerializeToLegacyPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeToLegacyPath(FLinkerSave& LinkerSave, FCompressedBuffer PayloadToSerialize, EFlags UpdatedFlags, UObject* Owner)"
  },
  {
    "label": "SerializeToPackageTrailer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeToPackageTrailer(FLinkerSave& LinkerSave, FCompressedBuffer PayloadToSerialize, EFlags UpdatedFlags, UObject* Owner)"
  },
  {
    "label": "UpdatePayloadImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePayloadImpl(FSharedBuffer&& InPayload, const FIoHash& InPayloadID, UObject* Owner)"
  },
  {
    "label": "PushData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushData(const FPackagePath& InPackagePath)"
  },
  {
    "label": "UpdateKeyIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateKeyIfNeeded()"
  },
  {
    "label": "IsDataVirtualized()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsDataVirtualized(Flags)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(InFlags, EFlags::IsVirtualized)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(Flags, EFlags::HasPayloadSidecarFile)"
  },
  {
    "label": "IsReferencingOldBulkData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsReferencingOldBulkData(Flags)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(InFlags, EFlags::ReferencesLegacyFile)"
  },
  {
    "label": "IsReferencingWorkspaceDomain()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsReferencingWorkspaceDomain(Flags)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(InFlags, EFlags::ReferencesWorkspaceDomain)"
  },
  {
    "label": "IsReferencingByPackagePath()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsReferencingByPackagePath(Flags)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(InFlags, EFlags::ReferencesLegacyFile | EFlags::ReferencesWorkspaceDomain)"
  },
  {
    "label": "IsStoredInPackageTrailer()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsStoredInPackageTrailer(Flags)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(InFlags, EFlags::StoredInPackageTrailer)"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Register(UObject* Owner, const TCHAR* LogCallerName, bool bAllowUpdateId)"
  },
  {
    "label": "Unregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unregister()"
  },
  {
    "label": "OnExitMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExitMemory()"
  },
  {
    "label": "UpdateRegistrationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRegistrationData(UObject* Owner, const TCHAR* LogCallerName, bool bAllowUpdateId)"
  },
  {
    "label": "ValidatePackageTrailerBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidatePackageTrailerBuilder(const FLinkerSave* LinkerSave, const FIoHash& Id, EFlags PayloadFlags)"
  },
  {
    "label": "serialization()",
    "kind": "Method",
    "detail": "Function (during)",
    "insertText": "serialization(i.e. the payload was virtualized or the package was\n\t * saved to disk.&\n\t */\n\tPrivate::FCompressionSettings CompressionSettings;\n};\n\nENUM_CLASS_FLAGS(FEditorBulkData::EFlags)"
  },
  {
    "label": "IoHashToGuid()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "IoHashToGuid(const FIoHash& Hash)"
  }
]