[
  {
    "label": "BasicIStreamWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BasicIStreamWrapper"
  },
  {
    "label": "RAPIDJSON_DIAG_OFF()",
    "kind": "Method",
    "detail": "Function (# ifndef RAPIDJSON_ISTREAMWRAPPER_H_ # define RAPIDJSON_ISTREAMWRAPPER_H_ # include \" stream . h \" # include<iosfwd> # include<ios> # ifdef __clang__ RAPIDJSON_DIAG_PUSH)",
    "insertText": "RAPIDJSON_DIAG_OFF(padded) #elif defined(_MSC_VER) RAPIDJSON_DIAG_PUSH RAPIDJSON_DIAG_OFF(4351)"
  },
  {
    "label": "BasicIStreamWrapper()",
    "kind": "Method",
    "detail": "Function (public : typedef StreamType::char_type Ch ;)",
    "insertText": "BasicIStreamWrapper(StreamType &stream) : stream_(stream), buffer_(peekBuffer_), bufferSize_(4), bufferLast_(0), current_(buffer_), readCount_(0), count_(0), eof_(false)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Read()"
  },
  {
    "label": "BasicIStreamWrapper()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "BasicIStreamWrapper(StreamType &stream, char* buffer, size_t bufferSize) : stream_(stream), buffer_(buffer), bufferSize_(bufferSize), bufferLast_(0), current_(buffer_), readCount_(0), count_(0), eof_(false)"
  },
  {
    "label": "RAPIDJSON_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_ASSERT(bufferSize >= 4)"
  },
  {
    "label": "Peek()",
    "kind": "Method",
    "detail": "Function (} Ch)",
    "insertText": "Peek()"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Put(Ch)"
  },
  {
    "label": "RAPIDJSON_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_ASSERT(false)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Flush()"
  },
  {
    "label": "PutBegin()",
    "kind": "Method",
    "detail": "Function (} Ch*)",
    "insertText": "PutBegin()"
  },
  {
    "label": "BasicIStreamWrapper()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "BasicIStreamWrapper()"
  },
  {
    "label": "BasicIStreamWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BasicIStreamWrapper(const BasicIStreamWrapper&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (BasicIStreamWrapper&)",
    "insertText": "operator(const BasicIStreamWrapper&)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (count_ + = readCount_ ; readCount_ = bufferSize_ ; bufferLast_ = buffer_ + readCount_ - 1 ; current_ = buffer_ ;)",
    "insertText": "if(!stream_.read(buffer_, static_cast<std::streamsize>(bufferSize_)))"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (readCount_ = static_cast<)",
    "insertText": "size_t(stream_.gcount())"
  }
]