[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FSkeletonTreeAttachedAssetItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreeAttachedAssetItem"
  },
  {
    "label": "FSkeletonTreeBoneItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreeBoneItem"
  },
  {
    "label": "FSkeletonTreeSocketItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreeSocketItem"
  },
  {
    "label": "FSkeletonTreeVirtualBoneItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreeVirtualBoneItem"
  },
  {
    "label": "FTextFilterExpressionEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextFilterExpressionEvaluator"
  },
  {
    "label": "FUICommandList_Pinnable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList_Pinnable"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "SBlendProfilePicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlendProfilePicker"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "UBlendProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendProfile"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FNotificationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNotificationInfo"
  },
  {
    "label": "IPinnedCommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPinnedCommandList"
  },
  {
    "label": "FPackageReloadedEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageReloadedEvent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SSkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSkeletonTree"
  },
  {
    "label": "ISkeletonTreeBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeBuilder"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "FSelectedSocketInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSelectedSocketInfo"
  },
  {
    "label": "USkeletalMeshSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshSocket"
  },
  {
    "label": "SBoneTreeMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBoneTreeMenu"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "FSkeletonTreeAttachedAssetItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreeAttachedAssetItem"
  },
  {
    "label": "FSkeletonTreeSocketItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreeSocketItem"
  },
  {
    "label": "FSkeletonTreeVirtualBoneItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreeVirtualBoneItem"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "ISkeletonTreeBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeBuilder"
  },
  {
    "label": "FTextFilterExpressionEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextFilterExpressionEvaluator"
  },
  {
    "label": "FScopedSavedSelection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedSavedSelection"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<FEditableSkeleton>& InEditableSkeleton, const FSkeletonTreeArgs& InSkeletonTreeArgs)"
  },
  {
    "label": "CreateTreeColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTreeColumns()"
  },
  {
    "label": "CreateFromSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFromSkeleton()"
  },
  {
    "label": "ApplyFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyFilter()"
  },
  {
    "label": "SetInitialExpansionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitialExpansionState()"
  },
  {
    "label": "NotifyUser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyUser( FNotificationInfo& NotificationInfo )"
  },
  {
    "label": "OnItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemScrolledIntoView( TSharedPtr<ISkeletonTreeItem> InItem, const TSharedPtr<ITableRow>& InWidget)"
  },
  {
    "label": "OnTreeDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTreeDoubleClick( TSharedPtr<ISkeletonTreeItem> InItem )"
  },
  {
    "label": "SetBoneTranslationRetargetingModeRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoneTranslationRetargetingModeRecursive(EBoneTranslationRetargetingMode::Type NewRetargetingMode)"
  },
  {
    "label": "RemoveFromLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromLOD(int32 LODIndex, bool bIncludeSelected, bool bIncludeBelowLODs)"
  },
  {
    "label": "OnLODSwitched()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLODSwitched()"
  },
  {
    "label": "OnPreviewMeshChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewMeshChanged(USkeletalMesh* InOldSkeletalMesh, USkeletalMesh* InNewSkeletalMesh)"
  },
  {
    "label": "HandleTreeRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTreeRefresh()"
  },
  {
    "label": "PostRenameSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRenameSocket(UObject* InAttachedObject, const FName& InOldName, const FName& InNewName)"
  },
  {
    "label": "PostDuplicateSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDuplicateSocket(UObject* InAttachedObject, const FName& InSocketName)"
  },
  {
    "label": "PostSetSocketParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSetSocketParent()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "MakeTreeRowWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeTreeRowWidget(TSharedPtr<ISkeletonTreeItem> InInfo, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "GetFilteredChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilteredChildren(TSharedPtr<ISkeletonTreeItem> InInfo, TArray< TSharedPtr<ISkeletonTreeItem> >& OutChildren)"
  },
  {
    "label": "RegisterNewMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNewMenu()"
  },
  {
    "label": "RegisterFilterMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterFilterMenu()"
  },
  {
    "label": "OnCopyBoneNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyBoneNames()"
  },
  {
    "label": "OnResetBoneTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetBoneTransforms()"
  },
  {
    "label": "OnPasteSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteSockets(bool bPasteToSelectedBone)"
  },
  {
    "label": "OnAddSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddSocket()"
  },
  {
    "label": "OnRenameSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameSelected()"
  },
  {
    "label": "OnCustomizeSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCustomizeSocket()"
  },
  {
    "label": "OnPromoteSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPromoteSocket()"
  },
  {
    "label": "CreateVirtualBoneMenu()",
    "kind": "Method",
    "detail": "Function (SBoneTreeMenu>)",
    "insertText": "CreateVirtualBoneMenu(SSkeletonTree* InSkeletonTree)"
  },
  {
    "label": "OnVirtualTargetBonePicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnVirtualTargetBonePicked(FName TargetBoneName, TArray<TSharedPtr<class ISkeletonTreeItem>> SourceBones)"
  },
  {
    "label": "FillAttachAssetSubmenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillAttachAssetSubmenu(FMenuBuilder& MenuBuilder, const TSharedPtr<class ISkeletonTreeItem> TargetItem)"
  },
  {
    "label": "OnAssetSelectedFromPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetSelectedFromPicker(const FAssetData& AssetData, const TSharedPtr<class ISkeletonTreeItem> TargetItem)"
  },
  {
    "label": "OnRemoveAllAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveAllAssets()"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(TSharedPtr<class ISkeletonTreeItem> Selection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged( const FText& SearchText )"
  },
  {
    "label": "SetBoneFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoneFilter(EBoneFilter InBoneFilter )"
  },
  {
    "label": "SetSocketFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSocketFilter(ESocketFilter InSocketFilter )"
  },
  {
    "label": "OnChangeShowingAdvancedOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangeShowingAdvancedOptions()"
  },
  {
    "label": "OnChangeShowingDebugVisualizationOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangeShowingDebugVisualizationOptions()"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown( const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent )"
  },
  {
    "label": "OnDeleteSelectedRows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteSelectedRows()"
  },
  {
    "label": "DeleteAttachedAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteAttachedAssets(const TArray<TSharedPtr<class FSkeletonTreeAttachedAssetItem>>& InDisplayedAttachedAssetInfos )"
  },
  {
    "label": "DeleteSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSockets(const TArray<TSharedPtr<class FSkeletonTreeSocketItem>>& InDisplayedSocketInfos )"
  },
  {
    "label": "DeleteVirtualBones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteVirtualBones(const TArray<TSharedPtr<class FSkeletonTreeVirtualBoneItem>>& InDisplayedVirtualBonestInfos)"
  },
  {
    "label": "OnBlendProfileSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlendProfileSelected(UBlendProfile* NewProfile)"
  },
  {
    "label": "RecursiveSetBlendProfileScales()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecursiveSetBlendProfileScales(float InScaleToSet)"
  },
  {
    "label": "CreateMenuForBoneReduction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateMenuForBoneReduction(FMenuBuilder& MenuBuilder, SSkeletonTree* SkeletonTree, int32 LODIndex, bool bIncludeSelected)"
  },
  {
    "label": "HandleFocusCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFocusCamera()"
  },
  {
    "label": "HandleFrameSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFrameSelection()"
  },
  {
    "label": "HandleFilterSkeletonTreeItem()",
    "kind": "Method",
    "detail": "Function (ESkeletonTreeFilterResult)",
    "insertText": "HandleFilterSkeletonTreeItem(const FSkeletonTreeFilterArgs& InArgs, const TSharedPtr<class ISkeletonTreeItem>& InItem)"
  },
  {
    "label": "HandleSelectedBoneChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSelectedBoneChanged(const FName& InBoneName, ESelectInfo::Type InSelectInfo)"
  },
  {
    "label": "HandleSelectedSocketChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSelectedSocketChanged(const FSelectedSocketInfo& InSocketInfo)"
  },
  {
    "label": "HandleDeselectAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDeselectAll()"
  },
  {
    "label": "HandlePackageReloaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePackageReloaded(const EPackageReloadPhase InPackageReloadPhase, FPackageReloadedEvent* InPackageReloadedEvent)"
  },
  {
    "label": "OnCreateBlendProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateBlendProfile(const EBlendProfileMode InMode)"
  },
  {
    "label": "OnDeleteCurrentBlendProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteCurrentBlendProfile()"
  },
  {
    "label": "OnRenameBlendProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameBlendProfile()"
  },
  {
    "label": "RegisterBlendProfileMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterBlendProfileMenu()"
  },
  {
    "label": "CreateBlendProfileMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateBlendProfileMenu(UToolMenu* InMenu)"
  },
  {
    "label": "GetBlendProfileColumnMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetBlendProfileColumnMenuContent()"
  },
  {
    "label": "ExpandTreeOnSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandTreeOnSelection(TSharedPtr<ISkeletonTreeItem> RowToExpand, bool bForce = false)"
  },
  {
    "label": "AddVirtualBones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVirtualBones(const TArray<FVirtualBone>& VirtualBones)"
  }
]