[
  {
    "label": "FLevelInstanceActorImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelInstanceActorImpl"
  },
  {
    "label": "FLevelInstanceActorImpl()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GameFramework / Actor . h \" # include \" LevelInstance / LevelInstanceTypes . h \" # include \" LevelInstance / LevelInstanceInterface . h \" # include \" LevelInstance / LevelInstanceSubsystem . h \" # include \" Templates / UnrealTemplate . h \" class FLevelInstanceActorImpl { private : ILevelInstanceInterface* LevelInstance ; FLevelInstanceID LevelInstanceID ; # if WITH_EDITOR FLevelInstanceID CachedLevelInstanceID ; bool bCachedIsTemporarilyHiddenInEditor ; bool bGuardLoadUnload ; bool bAllowPartialLoading ; public : TSoftObjectPtr<UWorld> CachedWorldAsset ; # endif public :)",
    "insertText": "FLevelInstanceActorImpl() : FLevelInstanceActorImpl(nullptr)"
  },
  {
    "label": "FLevelInstanceActorImpl()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLevelInstanceActorImpl(ILevelInstanceInterface* InLevelInstance) : LevelInstance(InLevelInstance) #if WITH_EDITOR , bCachedIsTemporarilyHiddenInEditor(false) , bGuardLoadUnload(false) , bAllowPartialLoading(true)"
  },
  {
    "label": "FLevelInstanceActorImpl()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FLevelInstanceActorImpl()"
  },
  {
    "label": "RegisterLevelInstance()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterLevelInstance()"
  },
  {
    "label": "UnregisterLevelInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterLevelInstance()"
  },
  {
    "label": "GetLevelInstanceID()",
    "kind": "Method",
    "detail": "Function (const FLevelInstanceID&)",
    "insertText": "GetLevelInstanceID()"
  },
  {
    "label": "HasValidLevelInstanceID()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidLevelInstanceID()"
  },
  {
    "label": "IsLoadingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoadingEnabled()"
  },
  {
    "label": "OnLevelInstanceLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelInstanceLoaded()"
  },
  {
    "label": "SupportsPropertyOverrides()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "SupportsPropertyOverrides()"
  },
  {
    "label": "SupportsPartialEditorLoading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsPartialEditorLoading()"
  },
  {
    "label": "ResolveSubobject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResolveSubobject(const TCHAR* SubObjectPath, UObject*& OutObject, bool bLoadIfExists)"
  },
  {
    "label": "PreEditUndo()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "PreEditUndo(TFunctionRef<void()> SuperCall)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo(TFunctionRef<void()> SuperCall)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo(TSharedPtr<ITransactionObjectAnnotation> TransactionAnnotation, TFunctionRef<void(TSharedPtr<ITransactionObjectAnnotation> TransactionAnnotation)> SuperCall)"
  },
  {
    "label": "PostEditImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditImport(TFunctionRef<void()> SuperCall)"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditChange(const FProperty* Property)"
  },
  {
    "label": "CanEditChangeComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditChangeComponent(const UActorComponent* Component, const FProperty* InProperty)"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditChange(FProperty* Property, bool bWorldAssetChange, TFunctionRef<void(FProperty*)> SuperCall)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent, bool bWorldAssetChange, TFunction<void(FPropertyChangedEvent&)> SuperCall)"
  },
  {
    "label": "CanDeleteSelectedActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteSelectedActor(FText& OutReason)"
  },
  {
    "label": "SetIsTemporarilyHiddenInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsTemporarilyHiddenInEditor(bool bIsHidden, TFunctionRef<void(bool)> SuperCall)"
  },
  {
    "label": "SetIsHiddenEdLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetIsHiddenEdLayer(bool bIsHiddenEdLayer, TFunctionRef<bool(bool)> SuperCall)"
  },
  {
    "label": "EditorGetUnderlyingActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorGetUnderlyingActors(TSet<AActor*>& OutUnderlyingActors)"
  },
  {
    "label": "IsLockLocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLockLocation()"
  },
  {
    "label": "IsActorLabelEditable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorLabelEditable()"
  },
  {
    "label": "IsUserManaged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUserManaged()"
  },
  {
    "label": "ShouldExport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldExport()"
  },
  {
    "label": "GetBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetBounds(FBox& OutBounds)"
  },
  {
    "label": "GetEditorBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEditorBounds(FBox& OutBounds)"
  },
  {
    "label": "PushSelectionToProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushSelectionToProxies()"
  },
  {
    "label": "PushLevelInstanceEditingStateToProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushLevelInstanceEditingStateToProxies(bool bInEditingState)"
  },
  {
    "label": "CheckForErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForErrors()"
  },
  {
    "label": "IsLockedActor()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsLockedActor()"
  },
  {
    "label": "PostEditUndoInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndoInternal()"
  }
]