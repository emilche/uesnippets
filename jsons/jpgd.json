[
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "directly",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "directly"
  },
  {
    "label": "itself",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "itself"
  },
  {
    "label": "jpgd_status",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "jpgd_status"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "jpeg_decoder_stream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "jpeg_decoder_stream"
  },
  {
    "label": "jpeg_decoder_file_stream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "jpeg_decoder_file_stream"
  },
  {
    "label": "jpeg_decoder_mem_stream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "jpeg_decoder_mem_stream"
  },
  {
    "label": "jpeg_decoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "jpeg_decoder"
  },
  {
    "label": "huff_tables",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "huff_tables"
  },
  {
    "label": "coeff_buf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "coeff_buf"
  },
  {
    "label": "mem_block",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mem_block"
  },
  {
    "label": "jpeg_decoder_file_stream()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "jpeg_decoder_file_stream()"
  },
  {
    "label": "open()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "open(const char* Pfilename)"
  },
  {
    "label": "close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "close()"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "read(uint8* pBuf, int max_bytes_to_read, bool* pEOF_flag)"
  },
  {
    "label": "open()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "open(const uint8* pSrc_data, uint size)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "read(uint8* pBuf, int max_bytes_to_read, bool* pEOF_flag)"
  },
  {
    "label": "begin_decoding()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "begin_decoding()"
  },
  {
    "label": "decode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "decode(const void** pScan_line, uint* pScan_line_len)"
  },
  {
    "label": "jpeg_decoder()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "jpeg_decoder(const jpeg_decoder&)"
  },
  {
    "label": "free_all_blocks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "free_all_blocks()"
  },
  {
    "label": "stop_decoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "stop_decoding(jpgd_status status)"
  },
  {
    "label": "word_clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "word_clear(void* p, uint16 c, uint n)"
  },
  {
    "label": "prep_in_buffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "prep_in_buffer()"
  },
  {
    "label": "read_dht_marker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "read_dht_marker()"
  },
  {
    "label": "read_dqt_marker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "read_dqt_marker()"
  },
  {
    "label": "read_sof_marker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "read_sof_marker()"
  },
  {
    "label": "skip_variable_marker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "skip_variable_marker()"
  },
  {
    "label": "read_dri_marker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "read_dri_marker()"
  },
  {
    "label": "read_sos_marker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "read_sos_marker()"
  },
  {
    "label": "next_marker()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "next_marker()"
  },
  {
    "label": "process_markers()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "process_markers()"
  },
  {
    "label": "locate_soi_marker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "locate_soi_marker()"
  },
  {
    "label": "locate_sof_marker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "locate_sof_marker()"
  },
  {
    "label": "locate_sos_marker()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "locate_sos_marker()"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(jpeg_decoder_stream* pStream, uint32_t flags)"
  },
  {
    "label": "create_look_ups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "create_look_ups()"
  },
  {
    "label": "fix_in_buffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fix_in_buffer()"
  },
  {
    "label": "transform_mcu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "transform_mcu(int mcu_row)"
  },
  {
    "label": "load_next_row()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "load_next_row()"
  },
  {
    "label": "decode_next_row()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decode_next_row()"
  },
  {
    "label": "make_huff_table()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "make_huff_table(int index, huff_tables* pH)"
  },
  {
    "label": "check_quant_tables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "check_quant_tables()"
  },
  {
    "label": "check_huff_tables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "check_huff_tables()"
  },
  {
    "label": "calc_mcu_block_order()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "calc_mcu_block_order()"
  },
  {
    "label": "init_scan()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "init_scan()"
  },
  {
    "label": "init_frame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init_frame()"
  },
  {
    "label": "process_restart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "process_restart()"
  },
  {
    "label": "decode_scan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decode_scan(pDecode_block_func decode_block_func)"
  },
  {
    "label": "init_progressive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init_progressive()"
  },
  {
    "label": "init_sequential()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init_sequential()"
  },
  {
    "label": "decode_start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decode_start()"
  },
  {
    "label": "decode_init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decode_init(jpeg_decoder_stream* pStream, uint32_t flags)"
  },
  {
    "label": "H2V2Convert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "H2V2Convert()"
  },
  {
    "label": "H2V2ConvertFiltered()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "H2V2ConvertFiltered()"
  },
  {
    "label": "H2V1Convert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "H2V1Convert()"
  },
  {
    "label": "H2V1ConvertFiltered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "H2V1ConvertFiltered()"
  },
  {
    "label": "H1V2Convert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "H1V2Convert()"
  },
  {
    "label": "H1V2ConvertFiltered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "H1V2ConvertFiltered()"
  },
  {
    "label": "H1V1Convert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "H1V1Convert()"
  },
  {
    "label": "gray_convert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "gray_convert()"
  },
  {
    "label": "find_eoi()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "find_eoi()"
  },
  {
    "label": "get_char()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "get_char()"
  },
  {
    "label": "get_char()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "get_char(bool* pPadding_flag)"
  },
  {
    "label": "stuff_char()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "stuff_char(uint8 q)"
  },
  {
    "label": "get_octet()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "get_octet()"
  },
  {
    "label": "get_bits()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "get_bits(int num_bits)"
  },
  {
    "label": "get_bits_no_markers()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "get_bits_no_markers(int numbits)"
  },
  {
    "label": "huff_decode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "huff_decode(huff_tables* pH)"
  },
  {
    "label": "huff_decode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "huff_decode(huff_tables* pH, int& extrabits)"
  },
  {
    "label": "decode_next_mcu_row()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "decode_next_mcu_row()"
  },
  {
    "label": "decode_block_dc_first()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decode_block_dc_first(jpeg_decoder* pD, int component_id, int block_x, int block_y)"
  },
  {
    "label": "decode_block_dc_refine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decode_block_dc_refine(jpeg_decoder* pD, int component_id, int block_x, int block_y)"
  },
  {
    "label": "decode_block_ac_first()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decode_block_ac_first(jpeg_decoder* pD, int component_id, int block_x, int block_y)"
  },
  {
    "label": "decode_block_ac_refine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decode_block_ac_refine(jpeg_decoder* pD, int component_id, int block_x, int block_y)"
  }
]