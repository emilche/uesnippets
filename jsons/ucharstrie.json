[
  {
    "label": "Appendable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Appendable"
  },
  {
    "label": "UCharsTrieBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCharsTrieBuilder"
  },
  {
    "label": "UVector32",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVector32"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "owns",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "owns"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "State",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "State"
  },
  {
    "label": "UCharsTrie",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCharsTrie"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "UCharsTrieBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCharsTrieBuilder"
  },
  {
    "label": "nextImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "nextImpl(uchars_, uchar)"
  },
  {
    "label": "firstForCodePoint()",
    "kind": "Method",
    "detail": "Function (UStringTrieResult)",
    "insertText": "firstForCodePoint(UChar32 cp)"
  },
  {
    "label": "next()",
    "kind": "Method",
    "detail": "Function (UStringTrieResult)",
    "insertText": "next(int32_t uchar)"
  },
  {
    "label": "nextForCodePoint()",
    "kind": "Method",
    "detail": "Function (UStringTrieResult)",
    "insertText": "nextForCodePoint(UChar32 cp)"
  },
  {
    "label": "next()",
    "kind": "Method",
    "detail": "Function (UStringTrieResult)",
    "insertText": "next(ConstChar16Ptr s, int32_t length)"
  },
  {
    "label": "next()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "next(UErrorCode &errorCode)"
  },
  {
    "label": "skipValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "skipValue(pos, leadUnit&0x7fff)"
  },
  {
    "label": "branchNext()",
    "kind": "Method",
    "detail": "Function (UStringTrieResult)",
    "insertText": "branchNext(const char16_t *pos, int32_t length, int32_t uchar)"
  },
  {
    "label": "nextImpl()",
    "kind": "Method",
    "detail": "Function (UStringTrieResult)",
    "insertText": "nextImpl(const char16_t *pos, int32_t uchar)"
  },
  {
    "label": "findUniqueValue()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "findUniqueValue(const char16_t *pos, UBool haveUniqueValue, int32_t &uniqueValue)"
  },
  {
    "label": "getNextBranchUChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNextBranchUChars(const char16_t *pos, int32_t length, Appendable &out)"
  }
]