[
  {
    "label": "client_error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "client_error"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "client_error()",
    "kind": "Method",
    "detail": "Function (# pragma once # ifndef RPC_CLIENT_ERROR_H # define RPC_CLIENT_ERROR_H # include<stdexcept> # include<cstdint> namespace rpc { namespace detail { class client_error : public std::exception { public : enum class code : uint16_t { no_such_function = 1,wrong_arity = 2,protocol_error = 4 } ;)",
    "insertText": "client_error(code c, const std::string &msg)"
  },
  {
    "label": "what()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "what()"
  }
]