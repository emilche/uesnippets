[
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SGraphEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphEditor"
  },
  {
    "label": "SSoundCuePalette",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSoundCuePalette"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "USoundCue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundCue"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Rect"
  },
  {
    "label": "FAudioDebugger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDebugger"
  },
  {
    "label": "FSoundCueEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundCueEditor"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FSoundCueEditor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AudioDefines . h \" # include \" CoreMinimal . h \" # include \" UObject / GCObject . h \" # include \" Toolkits / IToolkitHost . h \" # include \" ISoundCueEditor . h \" # include \" Misc / NotifyHook . h \" # include \" EditorUndoClient . h \" class IDetailsView ; class SGraphEditor ; class SSoundCuePalette ; class UEdGraphNode ; class USoundCue ; struct FPropertyChangedEvent ; struct Rect ; namespace Audio { class FAudioDebugger ; } class FSoundCueEditor : public ISoundCueEditor,public FGCObject,public FNotifyHook,public FEditorUndoClient { public :)",
    "insertText": "FSoundCueEditor()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "InitSoundCueEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSoundCueEditor(const EToolkitMode::Type Mode, const TSharedPtr< class IToolkitHost >& InitToolkitHost, UObject* ObjectToEdit)"
  },
  {
    "label": "GetSoundCue()",
    "kind": "Method",
    "detail": "Function (USoundCue*)",
    "insertText": "GetSoundCue()"
  },
  {
    "label": "SetSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelection(TArray<UObject*> SelectedObjects)"
  },
  {
    "label": "GetBoundsForSelectedNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetBoundsForSelectedNodes(class FSlateRect& Rect, float Padding)"
  },
  {
    "label": "GetNumberOfSelectedNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberOfSelectedNodes()"
  },
  {
    "label": "GetSelectedNodes()",
    "kind": "Method",
    "detail": "Function (TSet<UObject*>)",
    "insertText": "GetSelectedNodes()"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationLink()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bSuccess)"
  },
  {
    "label": "SpawnTab_GraphCanvas()",
    "kind": "Method",
    "detail": "Function (} private : TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_GraphCanvas(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_Properties()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Properties(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_Palette()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Palette(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnPreviewTextChanged()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnPreviewTextChanged(const FString& Text)"
  },
  {
    "label": "OnSelectedNodesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectedNodesChanged(const TSet<class UObject*>& NewSelection)"
  },
  {
    "label": "OnNodeTitleCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNodeTitleCommitted(const FText& NewText, ETextCommit::Type CommitInfo, UEdGraphNode* NodeBeingChanged)"
  },
  {
    "label": "SelectAllNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllNodes()"
  },
  {
    "label": "CanSelectAllNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSelectAllNodes()"
  },
  {
    "label": "DeleteSelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedNodes()"
  },
  {
    "label": "CanDeleteNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteNodes()"
  },
  {
    "label": "DeleteSelectedDuplicatableNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedDuplicatableNodes()"
  },
  {
    "label": "CutSelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CutSelectedNodes()"
  },
  {
    "label": "CanCutNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCutNodes()"
  },
  {
    "label": "CopySelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySelectedNodes()"
  },
  {
    "label": "CanCopyNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCopyNodes()"
  },
  {
    "label": "PasteNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteNodes()"
  },
  {
    "label": "PasteNodesHere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteNodesHere(const FVector2D& Location)"
  },
  {
    "label": "CanPasteNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPasteNodes()"
  },
  {
    "label": "DuplicateNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateNodes()"
  },
  {
    "label": "CanDuplicateNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDuplicateNodes()"
  },
  {
    "label": "UndoGraphAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UndoGraphAction()"
  },
  {
    "label": "RedoGraphAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RedoGraphAction()"
  },
  {
    "label": "OnAlignTop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignTop()"
  },
  {
    "label": "OnAlignMiddle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignMiddle()"
  },
  {
    "label": "OnAlignBottom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignBottom()"
  },
  {
    "label": "OnAlignLeft()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignLeft()"
  },
  {
    "label": "OnAlignCenter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignCenter()"
  },
  {
    "label": "OnAlignRight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignRight()"
  },
  {
    "label": "OnStraightenConnections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStraightenConnections()"
  },
  {
    "label": "OnDistributeNodesH()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDistributeNodesH()"
  },
  {
    "label": "OnDistributeNodesV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDistributeNodesV()"
  },
  {
    "label": "NotifyPostChange()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "NotifyPostChange(const FPropertyChangedEvent& PropertyChangedEvent, FProperty* PropertyThatChanged)"
  },
  {
    "label": "CreateInternalWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateInternalWidgets()"
  },
  {
    "label": "ExtendToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendToolbar()"
  },
  {
    "label": "BindGraphCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindGraphCommands()"
  },
  {
    "label": "PlayCue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayCue()"
  },
  {
    "label": "PlayNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayNode()"
  },
  {
    "label": "CanPlayNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPlayNode()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "TogglePlayback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TogglePlayback()"
  },
  {
    "label": "ToggleSolo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleSolo()"
  },
  {
    "label": "CanExcuteToggleSolo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExcuteToggleSolo()"
  },
  {
    "label": "IsSoloToggled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSoloToggled()"
  },
  {
    "label": "ToggleMute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleMute()"
  },
  {
    "label": "CanExcuteToggleMute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExcuteToggleMute()"
  },
  {
    "label": "IsMuteToggled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMuteToggled()"
  },
  {
    "label": "PlaySingleNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlaySingleNode(UEdGraphNode* Node)"
  },
  {
    "label": "SyncInBrowser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncInBrowser()"
  },
  {
    "label": "CanSyncInBrowser()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSyncInBrowser()"
  },
  {
    "label": "AddInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInput()"
  },
  {
    "label": "CanAddInput()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAddInput()"
  },
  {
    "label": "DeleteInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteInput()"
  },
  {
    "label": "CanDeleteInput()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteInput()"
  },
  {
    "label": "OnCreateComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateComment()"
  },
  {
    "label": "CreateGraphEditorWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SGraphEditor>)",
    "insertText": "CreateGraphEditorWidget()"
  }
]