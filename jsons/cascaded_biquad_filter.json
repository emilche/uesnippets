[
  {
    "label": "CascadedBiQuadFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CascadedBiQuadFilter"
  },
  {
    "label": "BiQuadParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BiQuadParam"
  },
  {
    "label": "BiQuadCoefficients",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BiQuadCoefficients"
  },
  {
    "label": "BiQuad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BiQuad"
  },
  {
    "label": "BiQuadParam()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_UTILITY_CASCADED_BIQUAD_FILTER_H_ # define MODULES_AUDIO_PROCESSING_UTILITY_CASCADED_BIQUAD_FILTER_H_ # include<stddef . h> # include<complex> # include<vector> # include \" api / array_view . h \" namespace webrtc { class CascadedBiQuadFilter { public : struct BiQuadParam {)",
    "insertText": "BiQuadParam(std::complex<float> zero, std::complex<float> pole, float gain, bool mirror_zero_along_i_axis = false)"
  },
  {
    "label": "BiQuadParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BiQuadParam(const BiQuadParam&)"
  },
  {
    "label": "BiQuad()",
    "kind": "Method",
    "detail": "Function (std::complex<float> zero ; std::complex<float> pole ; float gain ; bool mirror_zero_along_i_axis ; } ; struct BiQuadCoefficients { float b [ 3 ] ; float a [ 2 ] ; } ; struct BiQuad {)",
    "insertText": "BiQuad(const BiQuadCoefficients& coefficients) : coefficients(coefficients), x(), y()"
  },
  {
    "label": "BiQuad()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "BiQuad(const CascadedBiQuadFilter::BiQuadParam& param)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "CascadedBiQuadFilter()",
    "kind": "Method",
    "detail": "Function (BiQuadCoefficients coefficients ; float x [ 2 ] ; float y [ 2 ] ; } ;)",
    "insertText": "CascadedBiQuadFilter(const CascadedBiQuadFilter::BiQuadCoefficients& coefficients, size_t num_biquads)"
  },
  {
    "label": "CascadedBiQuadFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CascadedBiQuadFilter(const std::vector<CascadedBiQuadFilter::BiQuadParam>& biquad_params)"
  },
  {
    "label": "CascadedBiQuadFilter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CascadedBiQuadFilter()"
  },
  {
    "label": "CascadedBiQuadFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CascadedBiQuadFilter(const CascadedBiQuadFilter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CascadedBiQuadFilter&)",
    "insertText": "operator(const CascadedBiQuadFilter&)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Process(rtc::ArrayView<const float> x, rtc::ArrayView<float> y)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Process(rtc::ArrayView<float> y)"
  },
  {
    "label": "ApplyBiQuad()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ApplyBiQuad(rtc::ArrayView<const float> x, rtc::ArrayView<float> y, CascadedBiQuadFilter::BiQuad* biquad)"
  }
]