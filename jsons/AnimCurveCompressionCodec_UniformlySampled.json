[
  {
    "label": "UAnimCurveCompressionCodec_UniformlySampled",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCurveCompressionCodec_UniformlySampled"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Animation / AnimCurveCompressionCodec . h \" # include \" AnimCurveCompressionCodec_UniformlySampled . generated . h \")",
    "insertText": "UCLASS(meta = (DisplayName = \"Uniformly Sampled\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() #if WITH_EDITORONLY_DATA UPROPERTY(Category = Compression, EditAnywhere)"
  },
  {
    "label": "Compress()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITORONLY_DATA bool)",
    "insertText": "Compress(const FCompressibleAnimData& AnimSeq, FAnimCurveCompressionResult& OutResult)"
  },
  {
    "label": "PopulateDDCKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateDDCKey(FArchive& Ar)"
  },
  {
    "label": "DecompressCurves()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "DecompressCurves(const FCompressedAnimSequence& AnimSeq, FBlendedCurve& Curves, float CurrentTime)"
  },
  {
    "label": "DecompressCurve()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "DecompressCurve(const FCompressedAnimSequence& AnimSeq, FName CurveName, float CurrentTime)"
  }
]