[
  {
    "label": "TimestampWrapAroundHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimestampWrapAroundHandler"
  },
  {
    "label": "AudioDeviceModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioDeviceModule"
  },
  {
    "label": "FrameDecryptorInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameDecryptorInterface"
  },
  {
    "label": "PacketRouter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PacketRouter"
  },
  {
    "label": "RateLimiter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RateLimiter"
  },
  {
    "label": "ReceiveStatistics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReceiveStatistics"
  },
  {
    "label": "RtcEventLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventLog"
  },
  {
    "label": "RtpPacketReceived",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpPacketReceived"
  },
  {
    "label": "RtpRtcp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpRtcp"
  },
  {
    "label": "CallReceiveStatistics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CallReceiveStatistics"
  },
  {
    "label": "ChannelSendInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ChannelSendInterface"
  },
  {
    "label": "needed",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "needed"
  },
  {
    "label": "ChannelReceiveInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ChannelReceiveInterface"
  },
  {
    "label": "CreateChannelReceive()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<ChannelReceiveInterface>)",
    "insertText": "CreateChannelReceive(\n    Clock* clock,\n    NetEqFactory* neteq_factory,\n    AudioDeviceModule* audio_device_module,\n    Transport* rtcp_send_transport,\n    RtcEventLog* rtc_event_log,\n    uint32_t local_ssrc,\n    uint32_t remote_ssrc,\n    size_t jitter_buffer_max_packets,\n    bool jitter_buffer_fast_playout,\n    int jitter_buffer_min_delay_ms,\n    bool enable_non_sender_rtt,\n    rtc::scoped_refptr<AudioDecoderFactory> decoder_factory,\n    absl::optional<AudioCodecPairId> codec_pair_id,\n    rtc::scoped_refptr<FrameDecryptorInterface> frame_decryptor,\n    const webrtc::CryptoOptions& crypto_options,\n    rtc::scoped_refptr<FrameTransformerInterface> frame_transformer)"
  }
]