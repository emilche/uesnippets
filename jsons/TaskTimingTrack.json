[
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FThreadTrackEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadTrackEvent"
  },
  {
    "label": "STimingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingView"
  },
  {
    "label": "FTaskTimingTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskTimingTrack"
  },
  {
    "label": "FTaskTimingSharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskTimingSharedState"
  },
  {
    "label": "FTaskTimingSharedState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Async / TaskTrace . h \" # include \" Insights / ITimingViewExtender . h \" # include \" Insights / ViewModels / TimingEventsTrack . h \" class FUICommandList ; class FThreadTrackEvent ; namespace UE::Insights::TimingProfiler { class STimingView ; } namespace UE::Insights::TaskGraphProfiler { class FTaskTimingTrack ; class FTaskTimingSharedState : public Timing::ITimingViewExtender,public TSharedFromThis<FTaskTimingSharedState> { public :)",
    "insertText": "FTaskTimingSharedState(TimingProfiler::STimingView* InTimingView)"
  },
  {
    "label": "FTaskTimingSharedState()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTaskTimingSharedState()"
  },
  {
    "label": "GetTaskTrack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTaskTimingTrack>)",
    "insertText": "GetTaskTrack()"
  },
  {
    "label": "OnBeginSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSession(Timing::ITimingViewSession& InSession)"
  },
  {
    "label": "OnEndSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSession(Timing::ITimingViewSession& InSession)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(Timing::ITimingViewSession& InSession, const TraceServices::IAnalysisSession& InAnalysisSession)"
  },
  {
    "label": "ExtendFilterMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendFilterMenu(Timing::ITimingViewSession& InSession, FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "ExtendOtherTracksFilterMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendOtherTracksFilterMenu(Timing::ITimingViewSession& InSession, FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "IsTaskTrackToggleOn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTaskTrackToggleOn()"
  },
  {
    "label": "ShowTaskTrack()",
    "kind": "Method",
    "detail": "Function (bShowHideTaskTrack = bOnOff ; } void)",
    "insertText": "ShowTaskTrack()"
  },
  {
    "label": "SetTaskTrackToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTaskTrackToggle(true)"
  },
  {
    "label": "HideTaskTrack()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HideTaskTrack()"
  },
  {
    "label": "SetTaskTrackToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTaskTrackToggle(false)"
  },
  {
    "label": "SetTaskId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetTaskId(TaskTrace::FId InTaskId)"
  },
  {
    "label": "SetResetOnNextTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResetOnNextTick(bool bInValue)"
  },
  {
    "label": "GetTimingView()",
    "kind": "Method",
    "detail": "Function (bResetOnNextTick = bInValue ; } TSharedPtr<TimingProfiler::STimingView>)",
    "insertText": "GetTimingView()"
  },
  {
    "label": "InitCommandList()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InitCommandList(TSharedPtr<TimingProfiler::STimingView> TimingView)"
  },
  {
    "label": "BuildTasksSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTasksSubMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "ContextMenu_ShowTaskTransitions_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowTaskTransitions_Execute()"
  },
  {
    "label": "ContextMenu_ShowTaskTransitions_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowTaskTransitions_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowTaskTransitions_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowTaskTransitions_IsChecked()"
  },
  {
    "label": "ContextMenu_ShowTaskConnections_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowTaskConnections_Execute()"
  },
  {
    "label": "ContextMenu_ShowTaskConnections_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowTaskConnections_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowTaskConnections_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowTaskConnections_IsChecked()"
  },
  {
    "label": "ContextMenu_ShowTaskPrerequisites_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowTaskPrerequisites_Execute()"
  },
  {
    "label": "ContextMenu_ShowTaskPrerequisites_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowTaskPrerequisites_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowTaskPrerequisites_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowTaskPrerequisites_IsChecked()"
  },
  {
    "label": "ContextMenu_ShowTaskSubsequents_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowTaskSubsequents_Execute()"
  },
  {
    "label": "ContextMenu_ShowTaskSubsequents_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowTaskSubsequents_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowTaskSubsequents_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowTaskSubsequents_IsChecked()"
  },
  {
    "label": "ContextMenu_ShowParentTasks_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowParentTasks_Execute()"
  },
  {
    "label": "ContextMenu_ShowParentTasks_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowParentTasks_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowParentTasks_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowParentTasks_IsChecked()"
  },
  {
    "label": "ContextMenu_ShowNestedTasks_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowNestedTasks_Execute()"
  },
  {
    "label": "ContextMenu_ShowNestedTasks_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowNestedTasks_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowNestedTasks_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowNestedTasks_IsChecked()"
  },
  {
    "label": "ContextMenu_ShowCriticalPath_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowCriticalPath_Execute()"
  },
  {
    "label": "ContextMenu_ShowCriticalPath_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowCriticalPath_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowCriticalPath_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowCriticalPath_IsChecked()"
  },
  {
    "label": "ContextMenu_ShowTaskTrack_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowTaskTrack_Execute()"
  },
  {
    "label": "ContextMenu_ShowTaskTrack_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowTaskTrack_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowTaskTrack_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowTaskTrack_IsChecked()"
  },
  {
    "label": "ContextMenu_ShowDetailedTaskTrackInfo_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowDetailedTaskTrackInfo_Execute()"
  },
  {
    "label": "ContextMenu_ShowDetailedTaskTrackInfo_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowDetailedTaskTrackInfo_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowDetailedTaskTrackInfo_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowDetailedTaskTrackInfo_IsChecked()"
  },
  {
    "label": "OnTaskSettingsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTaskSettingsChanged()"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (private : Timing::ITimingViewSession* TimingViewSession ; bool bShowHideTaskTrack ; bool bResetOnNextTick = false ; TSharedPtr<FTaskTimingTrack> TaskTrack ; } ; class FTaskTimingTrack : public FTimingEventsTrack {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FTaskTimingTrack, FTimingEventsTrack) public: explicit FTaskTimingTrack(FTaskTimingSharedState& InSharedState, const FString& InName, uint32 InTimelineIndex) : FTimingEventsTrack(InName) , TimelineIndex(InTimelineIndex) , SharedState(InSharedState)"
  },
  {
    "label": "FTaskTimingTrack()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FTaskTimingTrack()"
  },
  {
    "label": "GetTimelineIndex()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTimelineIndex()"
  },
  {
    "label": "BuildFilteredDrawState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFilteredDrawState(ITimingEventsTrackDrawStateBuilder& Builder, const ITimingTrackUpdateContext& Context)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "PostDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDraw(const ITimingTrackDrawContext& Context)"
  },
  {
    "label": "InitTooltip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTooltip(FTooltipDrawState& InOutTooltip, const ITimingEvent& InTooltipEvent)"
  },
  {
    "label": "GetEvent()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<const ITimingEvent>)",
    "insertText": "GetEvent(float InPosX, float InPosY, const FTimingTrackViewport& Viewport)"
  },
  {
    "label": "SetDirtyFlag()",
    "kind": "Method",
    "detail": "Function (TaskId = InTaskId ;)",
    "insertText": "SetDirtyFlag()"
  },
  {
    "label": "GetTaskId()",
    "kind": "Method",
    "detail": "Function (} TaskTrace::FId)",
    "insertText": "GetTaskId()"
  },
  {
    "label": "GetEventRelations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetEventRelations(const FThreadTrackEvent& InSelectedEvent)"
  },
  {
    "label": "SetShowDetailedInfoOnTaskTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowDetailedInfoOnTaskTrack(bool InValue)"
  },
  {
    "label": "GetShowDetailedInfoOnTaskTrack()",
    "kind": "Method",
    "detail": "Function (bShowDetailInfoOnTaskTrack = InValue ; } bool)",
    "insertText": "GetShowDetailedInfoOnTaskTrack()"
  }
]