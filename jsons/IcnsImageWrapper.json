[
  {
    "label": "FIcnsImageWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIcnsImageWrapper"
  },
  {
    "label": "FIcnsImageWrapper()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ImageWrapperBase . h \" class FIcnsImageWrapper : public FImageWrapperBase { public :)",
    "insertText": "FIcnsImageWrapper()"
  },
  {
    "label": "SetCompressed()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "SetCompressed(const void* InCompressedData, int64 InCompressedSize)"
  },
  {
    "label": "SetRaw()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRaw(const void* InRawData, int64 InRawSize, const int32 InWidth, const int32 InHeight, const ERGBFormat InFormat, const int32 InBitDepth, const int32 InBytesPerRow = 0)"
  },
  {
    "label": "Compress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compress(int32 Quality)"
  },
  {
    "label": "Uncompress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uncompress(const ERGBFormat InFormat, int32 InBitDepth)"
  },
  {
    "label": "CanSetRawFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSetRawFormat(const ERGBFormat InFormat, const int32 InBitDepth)"
  },
  {
    "label": "GetSupportedRawFormat()",
    "kind": "Method",
    "detail": "Function (ERawImageFormat::Type)",
    "insertText": "GetSupportedRawFormat(const ERawImageFormat::Type InFormat)"
  }
]