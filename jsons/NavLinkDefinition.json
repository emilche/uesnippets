[
  {
    "label": "UNavAreaBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavAreaBase"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FNavigationLinkBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationLinkBase"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FNavigationLink",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationLink"
  },
  {
    "label": "FNavigationSegmentLink",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationSegmentLink"
  },
  {
    "label": "UNavLinkDefinition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavLinkDefinition"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" CoreMinimal . h \" # endif # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / Class . h \" # include \" Templates / SubclassOf . h \" # include \" AI / Navigation / NavigationTypes . h \" # include \" AI / Navigation / NavAgentSelector . h \" # include \" NavLinkDefinition . generated . h \" class UNavAreaBase ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (enum Type : int { BothWays,LeftToRight,RightToLeft,} ; })",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category=Default, meta=(ClampMin = \"0.0\"))"
  },
  {
    "label": "FNavigationLinkBase()",
    "kind": "Method",
    "detail": "Function (uint8 bIsGenerated : 1 ;)",
    "insertText": "FNavigationLinkBase()"
  },
  {
    "label": "FNavigationLinkBase()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FNavigationLinkBase(const FNavigationLinkBase&)"
  },
  {
    "label": "FNavigationLinkBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNavigationLinkBase(FNavigationLinkBase&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FNavigationLinkBase&)",
    "insertText": "operator(const FNavigationLinkBase& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FNavigationLinkBase&)",
    "insertText": "operator(FNavigationLinkBase&& Other)"
  },
  {
    "label": "InitializeAreaClass()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "InitializeAreaClass(const bool bForceRefresh = false)"
  },
  {
    "label": "SetAreaClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAreaClass(UClass* InAreaClass)"
  },
  {
    "label": "GetAreaClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetAreaClass()"
  },
  {
    "label": "HasMetaArea()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMetaArea()"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "DescribeCustomFlags()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "DescribeCustomFlags(const TArray<FString>& EditableFlagNames, UClass* NavLinkPropertiesOwnerClass = nullptr)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category=Default, BlueprintReadWrite, meta=(MakeEditWidget=\"\"))"
  },
  {
    "label": "FNavigationLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNavigationLink() : Left(0,-50, 0), Right(0, 50, 0)"
  },
  {
    "label": "FNavigationLink()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNavigationLink(const FVector& InLeft, const FVector& InRight) : Left(InLeft), Right(InRight)"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (} FNavigationLink)",
    "insertText": "Transform(const FTransform& Transformation)"
  },
  {
    "label": "TransformPosition()",
    "kind": "Method",
    "detail": "Function (FNavigationLink Result =* this ; Result . Left = Transformation .)",
    "insertText": "TransformPosition(Result.Left)"
  },
  {
    "label": "TransformPosition()",
    "kind": "Method",
    "detail": "Function (Result . Right = Transformation .)",
    "insertText": "TransformPosition(Result.Right)"
  },
  {
    "label": "Rotate()",
    "kind": "Method",
    "detail": "Function (FNavigationLink Result =* this ; Result . Left + = Translation ; Result . Right + = Translation ; return Result ; } FNavigationLink)",
    "insertText": "Rotate(const FRotator& Rotation)"
  },
  {
    "label": "RotateVector()",
    "kind": "Method",
    "detail": "Function (FNavigationLink Result =* this ; Result . Left = Rotation .)",
    "insertText": "RotateVector(Result.Left)"
  },
  {
    "label": "RotateVector()",
    "kind": "Method",
    "detail": "Function (Result . Right = Rotation .)",
    "insertText": "RotateVector(Result.Right)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category=Default, meta=(MakeEditWidget=\"\"))"
  },
  {
    "label": "FNavigationSegmentLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNavigationSegmentLink() : LeftStart(-25, -50, 0), LeftEnd(25, -50,0), RightStart(-25, 50, 0), RightEnd(25, 50, 0)"
  },
  {
    "label": "FNavigationSegmentLink()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNavigationSegmentLink(const FVector& InLeftStart, const FVector& InLeftEnd, const FVector& InRightStart, const FVector& InRightEnd) : LeftStart(InLeftStart), LeftEnd(InLeftEnd), RightStart(InRightStart), RightEnd(InRightEnd)"
  },
  {
    "label": "TransformPosition()",
    "kind": "Method",
    "detail": "Function (FNavigationSegmentLink Result =* this ; Result . LeftStart = Transformation .)",
    "insertText": "TransformPosition(Result.LeftStart)"
  },
  {
    "label": "TransformPosition()",
    "kind": "Method",
    "detail": "Function (Result . LeftEnd = Transformation .)",
    "insertText": "TransformPosition(Result.LeftEnd)"
  },
  {
    "label": "TransformPosition()",
    "kind": "Method",
    "detail": "Function (Result . RightStart = Transformation .)",
    "insertText": "TransformPosition(Result.RightStart)"
  },
  {
    "label": "TransformPosition()",
    "kind": "Method",
    "detail": "Function (Result . RightEnd = Transformation .)",
    "insertText": "TransformPosition(Result.RightEnd)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (FNavigationSegmentLink Result =* this ; Result . LeftStart + = Translation ; Result . LeftEnd + = Translation ; Result . RightStart + = Translation ; Result . RightEnd + = Translation ; return Result ; } } ; template<> struct TStructOpsTypeTraits<FNavigationSegmentLink> : public TStructOpsTypeTraits<FNavigationLinkBase> { } ;)",
    "insertText": "UCLASS(abstract, Config=Engine, Blueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=OffMeshLinks)"
  },
  {
    "label": "GetLinksDefinition()",
    "kind": "Method",
    "detail": "Function (const TArray<FNavigationLink>&)",
    "insertText": "GetLinksDefinition(class UClass* LinkDefinitionClass)"
  },
  {
    "label": "GetSegmentLinksDefinition()",
    "kind": "Method",
    "detail": "Function (const TArray<FNavigationSegmentLink>&)",
    "insertText": "GetSegmentLinksDefinition(class UClass* LinkDefinitionClass)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "InitializeAreaClass()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "InitializeAreaClass()"
  },
  {
    "label": "HasMetaAreaClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMetaAreaClass()"
  },
  {
    "label": "HasAdjustableLinks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAdjustableLinks()"
  }
]