[
  {
    "label": "ReassemblyQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReassemblyQueue"
  },
  {
    "label": "DeferredResetStreams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DeferredResetStreams"
  },
  {
    "label": "ReassemblyQueue()",
    "kind": "Method",
    "detail": "Function (# ifndef NET_DCSCTP_RX_REASSEMBLY_QUEUE_H_ # define NET_DCSCTP_RX_REASSEMBLY_QUEUE_H_ # include<stddef . h> # include<cstdint> # include<memory> # include<set> # include<string> # include<utility> # include<vector> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" # include \" net / dcsctp / common / internal_types . h \" # include \" net / dcsctp / common / sequence_numbers . h \" # include \" net / dcsctp / packet / chunk / forward_tsn_common . h \" # include \" net / dcsctp / packet / data . h \" # include \" net / dcsctp / packet / parameter / outgoing_ssn_reset_request_parameter . h \" # include \" net / dcsctp / packet / parameter / reconfiguration_response_parameter . h \" # include \" net / dcsctp / public / dcsctp_handover_state . h \" # include \" net / dcsctp / public / dcsctp_message . h \" # include \" net / dcsctp / rx / reassembly_streams . h \" namespace dcsctp { class ReassemblyQueue { public : float kHighWatermarkLimit = 0 . 9 ;)",
    "insertText": "ReassemblyQueue(absl::string_view log_prefix, TSN peer_initial_tsn, size_t max_size_bytes, bool use_message_interleaving = false)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(TSN tsn, Data data)"
  },
  {
    "label": "HasMessages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMessages()"
  },
  {
    "label": "FlushMessages()",
    "kind": "Method",
    "detail": "Function (} std::vector<DcSctpMessage>)",
    "insertText": "FlushMessages()"
  },
  {
    "label": "Handle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Handle(const AnyForwardTsnChunk& forward_tsn)"
  },
  {
    "label": "ResetStreams()",
    "kind": "Method",
    "detail": "Function (ReconfigurationResponseParameter::Result)",
    "insertText": "ResetStreams(const OutgoingSSNResetRequestParameter& req, TSN cum_tsn_ack)"
  },
  {
    "label": "MaybeResetStreamsDeferred()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MaybeResetStreamsDeferred(TSN cum_ack_tsn)"
  },
  {
    "label": "queued_bytes()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "queued_bytes()"
  },
  {
    "label": "AddHandoverState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHandoverState(DcSctpSocketHandoverState& state)"
  },
  {
    "label": "RestoreFromState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreFromState(const DcSctpSocketHandoverState& state)"
  },
  {
    "label": "IsConsistent()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsConsistent()"
  },
  {
    "label": "AddReassembledMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReassembledMessage(rtc::ArrayView<const UnwrappedTSN> tsns, DcSctpMessage message)"
  },
  {
    "label": "MaybeMoveLastAssembledWatermarkFurther()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeMoveLastAssembledWatermarkFurther()"
  },
  {
    "label": "DeferredResetStreams()",
    "kind": "Method",
    "detail": "Function (struct DeferredResetStreams {)",
    "insertText": "DeferredResetStreams(OutgoingSSNResetRequestParameter req) : req(std::move(req))"
  }
]