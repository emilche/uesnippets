[
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "FAssetMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetMapping"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UAssetMappingTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetMappingTable"
  },
  {
    "label": "UAssetMappingTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetMappingTable"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "SetTargetAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTargetAsset(UAnimationAsset* InTargetAsset)"
  },
  {
    "label": "IsValidMapping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidMapping(UAnimationAsset* InSourceAsset, UAnimationAsset* InTargetAsset)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "RefreshAssetList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshAssetList(const TArray<UAnimationAsset*>& AnimAssets)"
  },
  {
    "label": "RemapAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemapAsset(UAnimationAsset* SourceAsset, UAnimationAsset* TargetAsset)"
  },
  {
    "label": "GetAllAnimationSequencesReferred()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAllAnimationSequencesReferred(TArray<class UAnimationAsset*>& AnimationSequences, bool bRecursive = true)"
  },
  {
    "label": "ReplaceReferredAnimations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceReferredAnimations(const TMap<UAnimationAsset*, UAnimationAsset*>& ReplacementMap)"
  },
  {
    "label": "RemovedUnusedSources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovedUnusedSources()"
  }
]