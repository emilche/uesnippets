[
  {
    "label": "UAnimInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimInstance"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "ECopyOptions",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECopyOptions"
  },
  {
    "label": "FCopyOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCopyOptions"
  },
  {
    "label": "picker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "picker"
  },
  {
    "label": "picker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "picker"
  },
  {
    "label": "SetObjectBeingDebugged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectBeingDebugged(UAnimBlueprint* InAnimBlueprint, UAnimInstance* InAnimInstance)"
  },
  {
    "label": "MakeTrackButton()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeTrackButton(FText HoverText, FOnGetContent MenuContent, const TAttribute<bool>& HoverState)"
  },
  {
    "label": "MakeAnimNotifyPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAnimNotifyPicker(UAnimSequenceBase* Sequence, const FOnClassPicked& OnClassPicked)"
  },
  {
    "label": "MakeAnimNotifyStatePicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAnimNotifyStatePicker(UAnimSequenceBase* Sequence, const FOnClassPicked& OnClassPicked)"
  }
]