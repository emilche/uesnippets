[
  {
    "label": "TRAITS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRAITS"
  },
  {
    "label": "OTypedScalarProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OTypedScalarProperty"
  },
  {
    "label": "getInterpretation()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_Abc_OTypedScalarProperty_h # define Alembic_Abc_OTypedScalarProperty_h # include<Alembic / Abc / Foundation . h> # include<Alembic / Abc / OScalarProperty . h> # include<Alembic / Abc / TypedPropertyTraits . h> namespace Alembic { namespace Abc { namespace ALEMBIC_VERSION_NS { template<class TRAITS> class OTypedScalarProperty : public OScalarProperty { public : typedef TRAITS traits_type ; typedef OTypedScalarProperty<TRAITS> this_type ; typedef TRAITS::value_type value_type ; const char*)",
    "insertText": "getInterpretation()"
  },
  {
    "label": "matches()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "matches(const AbcA::MetaData &iMetaData, SchemaInterpMatching iMatching = kStrictMatching)"
  },
  {
    "label": "matches()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "matches(const AbcA::PropertyHeader &iHeader, SchemaInterpMatching iMatching = kStrictMatching)"
  },
  {
    "label": "OTypedScalarProperty()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OTypedScalarProperty()"
  },
  {
    "label": "OTypedScalarProperty()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OTypedScalarProperty(AbcA::CompoundPropertyWriterPtr iParent, const std::string &iName, const Argument &iArg0 = Argument(), const Argument &iArg1 = Argument(), const Argument &iArg2 = Argument(), const Argument &iArg3 = Argument())"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(iParent, iName, iArg0, iArg1, iArg2, iArg3)"
  },
  {
    "label": "OTypedScalarProperty()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OTypedScalarProperty(OCompoundProperty iParent, const std::string &iName, const Argument &iArg0 = Argument(), const Argument &iArg1 = Argument(), const Argument &iArg2 = Argument())"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(iParent.getPtr(), iName, GetErrorHandlerPolicy( iParent ), iArg0, iArg1, iArg2)"
  },
  {
    "label": "OTypedScalarProperty()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OTypedScalarProperty(AbcA::ScalarPropertyWriterPtr iProp, const Argument &iArg0 = Argument(), const Argument &iArg1 = Argument() ) : OScalarProperty( iProp, GetErrorHandlerPolicy( iProp, iArg0, iArg1 ))"
  },
  {
    "label": "ALEMBIC_ABC_SAFE_CALL_BEGIN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ALEMBIC_ABC_SAFE_CALL_BEGIN(\"OTypedScalarProperty::OTypedScalarProperty()\")"
  },
  {
    "label": "getHeader()",
    "kind": "Method",
    "detail": "Function (const AbcA::PropertyHeader& pheader = iProp ->)",
    "insertText": "getHeader()"
  },
  {
    "label": "ABCA_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ABCA_ASSERT(matches( pheader, GetSchemaInterpMatching( iArg0,iArg1 ) ), \"Incorrect match of header datatype: \" << pheader.getDataType() << \" to expected: \" << TRAITS::dataType() << \",\\n...or incorrect match of interpretation: \" << pheader.getMetaData().get( \"interpretation\" ) << \" to expected: \" << TRAITS::interpretation())"
  },
  {
    "label": "ALEMBIC_ABC_SAFE_CALL_END_RESET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ALEMBIC_ABC_SAFE_CALL_END_RESET()"
  },
  {
    "label": "OTypedScalarProperty()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OTypedScalarProperty(AbcA::ScalarPropertyWriterPtr iProp, WrapExistingFlag iWrapFlag, const Argument &iArg0 = Argument(), const Argument &iArg1 = Argument())"
  },
  {
    "label": "OTypedScalarProperty()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "OTypedScalarProperty(iProp, iArg0, iArg1)"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set(const value_type &iVal)"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set(reinterpret_cast<const void *>( &iVal ))"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "init(AbcA::CompoundPropertyWriterPtr iParent, const std::string &iName, const Argument &iArg0, const Argument &iArg1, const Argument &iArg2, const Argument &iArg3)"
  },
  {
    "label": "setInto()",
    "kind": "Method",
    "detail": "Function (Arguments args ; iArg0 .)",
    "insertText": "setInto(args)"
  },
  {
    "label": "getErrorHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getErrorHandler().setPolicy( args.getErrorHandlerPolicy())"
  },
  {
    "label": "ALEMBIC_ABC_SAFE_CALL_BEGIN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ALEMBIC_ABC_SAFE_CALL_BEGIN(\"OTypedScalarProperty::init()\")"
  },
  {
    "label": "ABCA_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ABCA_ASSERT(iParent, \"NULL CompoundPropertyWriterPtr\")"
  },
  {
    "label": "getMetaData()",
    "kind": "Method",
    "detail": "Function (AbcA::MetaData mdata = args .)",
    "insertText": "getMetaData()"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (mdata .)",
    "insertText": "set(\"interpretation\", getInterpretation())"
  },
  {
    "label": "getTimeSampling()",
    "kind": "Method",
    "detail": "Function (} AbcA::TimeSamplingPtr tsPtr = args .)",
    "insertText": "getTimeSampling()"
  },
  {
    "label": "getTimeSamplingIndex()",
    "kind": "Method",
    "detail": "Function (uint32_t tsIndex = args .)",
    "insertText": "getTimeSamplingIndex()"
  },
  {
    "label": "getObject()",
    "kind": "Method",
    "detail": "Function (tsIndex = iParent ->)",
    "insertText": "getObject()->getArchive()->addTimeSampling( *tsPtr)"
  },
  {
    "label": "createScalarProperty()",
    "kind": "Method",
    "detail": "Function (} m_property = iParent ->)",
    "insertText": "createScalarProperty(iName, mdata, TRAITS::dataType(), tsIndex)"
  }
]