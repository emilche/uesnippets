[
  {
    "label": "SGridPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGridPanel"
  },
  {
    "label": "FTraceViewModel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTraceViewModel"
  },
  {
    "label": "STraceStoreWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STraceStoreWindow"
  },
  {
    "label": "FTraceListColumns",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTraceListColumns"
  },
  {
    "label": "STraceListRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STraceListRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableRow . h \" # include \" InsightsCore / Widgets / SLazyToolTip . h \" class SGridPanel ; namespace UE::Insights { struct FTraceViewModel ; class STraceStoreWindow ; struct FTraceListColumns { const FName Date ; const FName Name ; const FName Uri ; const FName Platform ; const FName AppName ; const FName BuildConfig ; const FName BuildTarget ; const FName BuildBranch ; const FName BuildVersion ; const FName Size ; const FName Status ; } ; class STraceListRow : public SMultiColumnTableRow<TSharedPtr<FTraceViewModel>>,public ILazyToolTipCreator {)",
    "insertText": "SLATE_BEGIN_ARGS(STraceListRow)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: void Construct(const FArguments& InArgs, TSharedPtr<FTraceViewModel> InTrace, TSharedRef<STraceStoreWindow> InParentWidget, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "IsRenaming()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRenaming()"
  },
  {
    "label": "RenameTextBox_OnValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameTextBox_OnValueCommitted(const FText& InText, ETextCommit::Type InCommitType)"
  },
  {
    "label": "Rename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rename(FTraceViewModel& Trace, const FText& InText)"
  },
  {
    "label": "GetTraceIndexAndId()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceIndexAndId()"
  },
  {
    "label": "GetTraceName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceName()"
  },
  {
    "label": "GetTraceTextColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetTraceTextColor()"
  },
  {
    "label": "GetTraceNameHighlightText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceNameHighlightText()"
  },
  {
    "label": "GetTraceUri()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceUri()"
  },
  {
    "label": "GetColorForPath()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetColorForPath()"
  },
  {
    "label": "GetTracePlatform()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTracePlatform()"
  },
  {
    "label": "GetTraceAppName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceAppName()"
  },
  {
    "label": "GetTraceCommandLine()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceCommandLine()"
  },
  {
    "label": "GetTraceCommandLineHighlightText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceCommandLineHighlightText()"
  },
  {
    "label": "GetTraceBranch()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceBranch()"
  },
  {
    "label": "GetTraceBuildVersion()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceBuildVersion()"
  },
  {
    "label": "GetTraceChangelist()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceChangelist()"
  },
  {
    "label": "TraceChangelistVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "TraceChangelistVisibility()"
  },
  {
    "label": "GetTraceBuildConfiguration()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceBuildConfiguration()"
  },
  {
    "label": "GetTraceBuildTarget()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceBuildTarget()"
  },
  {
    "label": "GetTraceTimestamp()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceTimestamp()"
  },
  {
    "label": "GetTraceTimestampForTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceTimestampForTooltip()"
  },
  {
    "label": "GetTraceSize()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceSize()"
  },
  {
    "label": "GetTraceSizeForTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceSizeForTooltip()"
  },
  {
    "label": "GetColorBySize()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetColorBySize()"
  },
  {
    "label": "GetTraceStatus()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceStatus()"
  },
  {
    "label": "GetTraceStatusForTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTraceStatusForTooltip()"
  },
  {
    "label": "GetTraceTooltip()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IToolTip>)",
    "insertText": "GetTraceTooltip()"
  },
  {
    "label": "CreateTooltip()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SToolTip>)",
    "insertText": "CreateTooltip()"
  },
  {
    "label": "AddGridPanelRow()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddGridPanelRow(TSharedPtr<SGridPanel> Grid, int32 Row, const FText& InHeaderText, typename TAttribute<FText>::FGetter::template TConstMethodPtr<STraceListRow> InValueTextFn, typename TAttribute<FText>::FGetter::template TConstMethodPtr<STraceListRow> InHighlightTextFn = nullptr, typename TAttribute<EVisibility>::FGetter::template TConstMethodPtr<STraceListRow> InVisibilityFn = nullptr)"
  }
]