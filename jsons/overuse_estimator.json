[
  {
    "label": "OverUseDetectorOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OverUseDetectorOptions"
  },
  {
    "label": "OveruseEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OveruseEstimator"
  },
  {
    "label": "OverUseDetectorOptions()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_REMOTE_BITRATE_ESTIMATOR_OVERUSE_ESTIMATOR_H_ # define MODULES_REMOTE_BITRATE_ESTIMATOR_OVERUSE_ESTIMATOR_H_ # include<stdint . h> # include<deque> # include \" api / network_state_predictor . h \" namespace webrtc { struct OverUseDetectorOptions {)",
    "insertText": "OverUseDetectorOptions()"
  },
  {
    "label": "OveruseEstimator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "OveruseEstimator()"
  },
  {
    "label": "OveruseEstimator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OveruseEstimator(const OveruseEstimator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OveruseEstimator&)",
    "insertText": "operator(const OveruseEstimator&)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(int64_t t_delta, double ts_delta, int size_delta, BandwidthUsage current_hypothesis, int64_t now_ms)"
  },
  {
    "label": "UpdateNoiseEstimate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNoiseEstimate(double residual, double ts_delta, bool stable_state)"
  }
]