[
  {
    "label": "tiff",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tiff"
  },
  {
    "label": "FTiffImageWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTiffImageWrapper"
  },
  {
    "label": "DataTypeDest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataTypeDest"
  },
  {
    "label": "DataTypeSrc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataTypeSrc"
  },
  {
    "label": "Adapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Adapter"
  },
  {
    "label": "ReadWriteAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReadWriteAdapter"
  },
  {
    "label": "FTIFFReadMemoryFile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTIFFReadMemoryFile"
  },
  {
    "label": "FTiffImageWrapper()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ImageWrapperBase . h \" # if WITH_LIBTIFF struct tiff ; typedef struct tiff TIFF ; namespace UE::ImageWrapper::Private { class FTiffImageWrapper : public FImageWrapperBase { public : ~)",
    "insertText": "FTiffImageWrapper()"
  },
  {
    "label": "FTiffImageWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTiffImageWrapper(FTiffImageWrapper&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTiffImageWrapper&)",
    "insertText": "operator(FTiffImageWrapper&&)"
  },
  {
    "label": "FTiffImageWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTiffImageWrapper(const FTiffImageWrapper&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTiffImageWrapper&)",
    "insertText": "operator(const FTiffImageWrapper&)"
  },
  {
    "label": "Compress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compress(int32 Quality)"
  },
  {
    "label": "Uncompress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uncompress(const ERGBFormat InFormat, int32 InBitDepth)"
  },
  {
    "label": "Uncompress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uncompress(const ERGBFormat InFormat, int32 InBitDepth, FDecompressedImageOutput& OutDecompressedImage)"
  },
  {
    "label": "SetCompressed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCompressed(const void* InCompressedData, int64 InCompressedSize)"
  },
  {
    "label": "CanSetRawFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSetRawFormat(const ERGBFormat InFormat, const int32 InBitDepth)"
  },
  {
    "label": "GetSupportedRawFormat()",
    "kind": "Method",
    "detail": "Function (ERawImageFormat::Type)",
    "insertText": "GetSupportedRawFormat(const ERawImageFormat::Type InFormat)"
  },
  {
    "label": "Uncompress_Internal()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "Uncompress_Internal(const ERGBFormat InFormat, int32 InBitDepth)"
  },
  {
    "label": "ReleaseTiffImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseTiffImage()"
  },
  {
    "label": "UnpackIntoRawBuffer()",
    "kind": "Method",
    "detail": "Function (template<class DataTypeDest> void)",
    "insertText": "UnpackIntoRawBuffer(const uint8 NumOfChannelDst)"
  },
  {
    "label": "CallUnpackIntoRawBufferImpl()",
    "kind": "Method",
    "detail": "Function (template<class DataTypeDest,class DataTypeSrc,class Adapter> void)",
    "insertText": "CallUnpackIntoRawBufferImpl(uint8 NumOfChannelDest, const bool bIsTiled)"
  },
  {
    "label": "DefaultCallUnpackIntoRawBufferImpl()",
    "kind": "Method",
    "detail": "Function (template<class DataTypeDest,class DataTypeSrc> void)",
    "insertText": "DefaultCallUnpackIntoRawBufferImpl(uint8 NumOfChannelDest, const bool bIsTiled)"
  },
  {
    "label": "PaletteCallUnpackIntoRawBufferImpl()",
    "kind": "Method",
    "detail": "Function (template<class DataTypeDest,class DataTypeSrc,class Adapter> void)",
    "insertText": "PaletteCallUnpackIntoRawBufferImpl(uint8 NumOfChannelDest, const bool bIsTiled)"
  },
  {
    "label": "UnpackIntoRawBufferImpl()",
    "kind": "Method",
    "detail": "Function (template<class DataTypeDest,class DataTypeSrc,bool bIsTiled,class ReadWriteAdapter> bool)",
    "insertText": "UnpackIntoRawBufferImpl(const uint8 NumOfChannelDest, const bool bAddAlpha)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (int64 CurrentPosition = 0 ; TIFF* Tiff = nullptr ; uint16 Photometric = 0 ; uint16 Compression = 0 ; uint16 BitsPerSample = 0 ; uint16 SamplesPerPixel = 0 ; uint16 SampleFormat = 0 ; int64 CurrSubImageWidth = 0 ; int64 CurrSubImageHeight = 0 ; TArray64<uint8> SubImageBuffer ; struct FTIFFReadMemoryFile ; void)",
    "insertText": "Reset()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (CurrentPosition = 0 ; Photometric = 0 ; Compression = 0 ; BitsPerSample = 0 ; SamplesPerPixel = 0 ; SampleFormat = 0 ; SubImageBuffer .)",
    "insertText": "Empty()"
  }
]