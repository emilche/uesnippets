[
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "simplifies",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "simplifies"
  },
  {
    "label": "FFileManagerGeneric",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFileManagerGeneric"
  },
  {
    "label": "FArchiveFileReaderGeneric",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveFileReaderGeneric"
  },
  {
    "label": "FArchiveFileReaderGenericTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveFileReaderGenericTest"
  },
  {
    "label": "FArchiveFileWriterGeneric",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveFileWriterGeneric"
  },
  {
    "label": "CreateFileReaderInternal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreateFileReaderInternal( Filename, ReadFlags, PLATFORM_FILE_READER_BUFFER_SIZE )"
  },
  {
    "label": "CreateFileWriterInternal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreateFileWriterInternal( Filename, WriteFlags, PLATFORM_FILE_WRITER_BUFFER_SIZE )"
  },
  {
    "label": "CreateFileWriterInternal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreateFileWriterInternal( Filename, WriteFlags, PLATFORM_DEBUG_FILE_WRITER_BUFFER_SIZE )"
  },
  {
    "label": "GetTimeStampPair()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTimeStampPair(const TCHAR* PathA, const TCHAR* PathB, FDateTime& OutTimeStampA, FDateTime& OutTimeStampB)"
  },
  {
    "label": "DefaultConvertToRelativePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DefaultConvertToRelativePath( const TCHAR* Filename )"
  },
  {
    "label": "CopyWithProgress()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "CopyWithProgress(const TCHAR* InDestFile, const TCHAR* InSrcFile, bool ReplaceExisting, bool EvenIfReadOnly, bool Attributes, FCopyProgress* Progress, EFileRead ReadFlags, EFileWrite WriteFlags)"
  },
  {
    "label": "FindFilesRecursiveInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindFilesRecursiveInternal( TArray<FString>& FileNames, const TCHAR* StartDirectory, const TCHAR* Filename, bool Files, bool Directories)"
  },
  {
    "label": "FArchiveFileReaderGeneric()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FArchiveFileReaderGeneric( IFileHandle* InHandle, const TCHAR* InFilename, int64 InSize, uint32 InBufferSize = PLATFORM_FILE_READER_BUFFER_SIZE, uint32 InFlags = FILEREAD_None )"
  },
  {
    "label": "InternalPrecache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InternalPrecache( int64 PrecacheOffset, int64 PrecacheSize )"
  },
  {
    "label": "SeekLowLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SeekLowLevel(int64 InPos)"
  },
  {
    "label": "CloseLowLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseLowLevel()"
  },
  {
    "label": "ReadLowLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadLowLevel(uint8* Dest, int64 CountToRead, int64& OutBytesRead)"
  },
  {
    "label": "FArchiveFileWriterGeneric()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FArchiveFileWriterGeneric( IFileHandle* InHandle, const TCHAR* InFilename, int64 InPos, uint32 InBufferSize = PLATFORM_FILE_WRITER_BUFFER_SIZE, uint32 InFlags = FILEWRITE_None)"
  },
  {
    "label": "FlushBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FlushBuffer()"
  },
  {
    "label": "SeekLowLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SeekLowLevel(int64 InPos)"
  },
  {
    "label": "CloseLowLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseLowLevel()"
  },
  {
    "label": "WriteLowLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteLowLevel(const uint8* Src, int64 CountToWrite)"
  },
  {
    "label": "LogWriteError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogWriteError(const TCHAR* Message)"
  }
]