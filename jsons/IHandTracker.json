[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IHandTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHandTracker"
  },
  {
    "label": "GetModularFeatureName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Features / IModularFeature . h \" # include \" Math / Quat . h \" # include \" Math / Transform . h \" # include \" Math / UnrealMathSSE . h \" # include \" UObject / NameTypes . h \" enum class EControllerHand : uint8 ; enum class EHandKeypoint : uint8 ; class IHandTracker : public IModularFeature { public : FName)",
    "insertText": "GetModularFeatureName()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (FName FeatureName =)",
    "insertText": "FName(TEXT(\"HandTracker\"))"
  },
  {
    "label": "IsHandTrackingStateValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHandTrackingStateValid()"
  },
  {
    "label": "GetKeypointState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetKeypointState(EControllerHand Hand, EHandKeypoint Keypoint, FTransform& OutTransform, float& OutRadius)"
  }
]