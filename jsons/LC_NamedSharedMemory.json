[
  {
    "label": "NamedSharedMemory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NamedSharedMemory"
  },
  {
    "label": "DoesOwnNamedSharedMemory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Windows / MinimalWindowsApi . h \" namespace Process { struct NamedSharedMemory ; namespace Current { bool)",
    "insertText": "DoesOwnNamedSharedMemory(const NamedSharedMemory* memory)"
  },
  {
    "label": "CreateNamedSharedMemory()",
    "kind": "Method",
    "detail": "Function (} NamedSharedMemory*)",
    "insertText": "CreateNamedSharedMemory(const wchar_t* name, size_t size)"
  },
  {
    "label": "DestroyNamedSharedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyNamedSharedMemory(NamedSharedMemory*& memory)"
  },
  {
    "label": "ReadNamedSharedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadNamedSharedMemory(const NamedSharedMemory* memory, void* buffer, size_t size)"
  },
  {
    "label": "WriteNamedSharedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteNamedSharedMemory(NamedSharedMemory* memory, const void* buffer, size_t size)"
  },
  {
    "label": "ReadNamedSharedMemory()",
    "kind": "Method",
    "detail": "Function (template<T> T)",
    "insertText": "ReadNamedSharedMemory(const NamedSharedMemory* memory)"
  },
  {
    "label": "ReadNamedSharedMemory()",
    "kind": "Method",
    "detail": "Function (T value = { } ;)",
    "insertText": "ReadNamedSharedMemory(memory, &value, sizeof(T))"
  },
  {
    "label": "WriteNamedSharedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteNamedSharedMemory(memory, &value, sizeof(T))"
  }
]