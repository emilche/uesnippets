[
  {
    "label": "PccUtilityFunctionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PccUtilityFunctionInterface"
  },
  {
    "label": "VivaceUtilityFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VivaceUtilityFunction"
  },
  {
    "label": "ModifiedVivaceUtilityFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ModifiedVivaceUtilityFunction"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_CONGESTION_CONTROLLER_PCC_UTILITY_FUNCTION_H_ # define MODULES_CONGESTION_CONTROLLER_PCC_UTILITY_FUNCTION_H_ # include \" modules / congestion_controller / pcc / monitor_interval . h \" namespace webrtc { namespace pcc { class PccUtilityFunctionInterface { public : double)",
    "insertText": "Compute(const PccMonitorInterval& monitor_interval)"
  },
  {
    "label": "PccUtilityFunctionInterface()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "PccUtilityFunctionInterface()"
  },
  {
    "label": "VivaceUtilityFunction()",
    "kind": "Method",
    "detail": "Function (} ; class VivaceUtilityFunction : public PccUtilityFunctionInterface { public :)",
    "insertText": "VivaceUtilityFunction(double delay_gradient_coefficient, double loss_coefficient, double throughput_coefficient, double throughput_power, double delay_gradient_threshold, double delay_gradient_negative_bound)"
  },
  {
    "label": "VivaceUtilityFunction()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "VivaceUtilityFunction()"
  },
  {
    "label": "ModifiedVivaceUtilityFunction()",
    "kind": "Method",
    "detail": "Function (private : const double delay_gradient_coefficient_ ; const double loss_coefficient_ ; const double throughput_power_ ; const double throughput_coefficient_ ; const double delay_gradient_threshold_ ; const double delay_gradient_negative_bound_ ; } ; class ModifiedVivaceUtilityFunction : public PccUtilityFunctionInterface { public :)",
    "insertText": "ModifiedVivaceUtilityFunction(double delay_gradient_coefficient, double loss_coefficient, double throughput_coefficient, double throughput_power, double delay_gradient_threshold, double delay_gradient_negative_bound)"
  },
  {
    "label": "ModifiedVivaceUtilityFunction()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ModifiedVivaceUtilityFunction()"
  }
]