[
  {
    "label": "TPropertyWithSetterAndGetter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPropertyWithSetterAndGetter"
  },
  {
    "label": "TPropertyWithSetterAndGetter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / UnrealType . h \" template<PropertyBaseClass> class TPropertyWithSetterAndGetter : public PropertyBaseClass { public : template<PropertyCodegenParams>)",
    "insertText": "TPropertyWithSetterAndGetter(FFieldVariant InOwner, const PropertyCodegenParams& Prop) : PropertyBaseClass(InOwner, Prop) , SetterFunc(Prop.SetterFunc) , GetterFunc(Prop.GetterFunc)"
  },
  {
    "label": "HasSetter()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasSetter()"
  },
  {
    "label": "SetterFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetterFunc(Container, InValue)"
  },
  {
    "label": "CallGetter()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CallGetter(const void* Container, void* OutValue)"
  },
  {
    "label": "GetterFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetterFunc(Container, OutValue)"
  }
]