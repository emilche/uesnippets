[
  {
    "label": "FSoftObjectPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftObjectPath"
  },
  {
    "label": "TSetKeyFuncs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSetKeyFuncs"
  },
  {
    "label": "FCachedAssetKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedAssetKey"
  },
  {
    "label": "FCachedAssetKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedAssetKeyFuncs"
  },
  {
    "label": "FAssetObjectNameKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetObjectNameKeyFuncs"
  },
  {
    "label": "FAssetDataMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetDataMap"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterator"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterator"
  },
  {
    "label": "FAssetObjectNameKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetObjectNameKeyFuncs"
  },
  {
    "label": "FAssetDataOrArrayIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetDataOrArrayIndex"
  },
  {
    "label": "FIndirectAssetDataArrays",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIndirectAssetDataArrays"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterator"
  },
  {
    "label": "FArrayOrNextIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FArrayOrNextIndex"
  },
  {
    "label": "FAssetPackageNameKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetPackageNameKeyFuncs"
  },
  {
    "label": "FAssetPackageNameMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetPackageNameMap"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterator"
  },
  {
    "label": "FIterationSentinel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterationSentinel"
  },
  {
    "label": "FIteratorValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIteratorValue"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterator"
  },
  {
    "label": "FIterationSentinel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterationSentinel"
  },
  {
    "label": "FAssetPackageNameKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetPackageNameKeyFuncs"
  },
  {
    "label": "FCachedAssetKey()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FCachedAssetKey(const FAssetData* InAssetData)"
  },
  {
    "label": "FCachedAssetKey()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FCachedAssetKey(const FAssetData& InAssetData)"
  },
  {
    "label": "FCachedAssetKey()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FCachedAssetKey(FTopLevelAssetPath InAssetPath)"
  },
  {
    "label": "FCachedAssetKey()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FCachedAssetKey(const FSoftObjectPath& InObjectPath)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FCachedAssetKey& A)"
  },
  {
    "label": "FCachedAssetKey()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FCachedAssetKey(*Element)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key)"
  },
  {
    "label": "FAssetDataMap()",
    "kind": "Method",
    "detail": "Function (ASSETREGISTRY_API)",
    "insertText": "FAssetDataMap()"
  },
  {
    "label": "FAssetDataMap()",
    "kind": "Method",
    "detail": "Function (ASSETREGISTRY_API)",
    "insertText": "FAssetDataMap(FAssetDataMap&& Other)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty(int32 ReservedSize = 0)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (FAssetDataPtrIndex)",
    "insertText": "Add(FAssetData* AssetData, bool* bAlreadyInSet = nullptr)"
  },
  {
    "label": "AddKeyLookup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddKeyLookup(FAssetData* AssetData, FAssetDataPtrIndex AssetIndex, bool* bAlreadyInSet = nullptr)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Remove(const FCachedAssetKey& Key)"
  },
  {
    "label": "RemoveOnlyKeyLookup()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveOnlyKeyLookup(const FCachedAssetKey& Key)"
  },
  {
    "label": "FIterator()",
    "kind": "Method",
    "detail": "Function (ASSETREGISTRY_API)",
    "insertText": "FIterator(const FAssetDataMap& InOwner, int32 InIndex)"
  },
  {
    "label": "pointers()",
    "kind": "Method",
    "detail": "Function (inuse)",
    "insertText": "pointers(which are 4-byte aligned and so have 0 in that\n\t * bit; IsInUse reads this low bit.\n\t */\n\tstatic bool IsInUse(const FAssetData* DataFromAssetDatas)"
  },
  {
    "label": "AddToFreeList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToFreeList(FAssetDataPtrIndex Index)"
  },
  {
    "label": "PopFreeIndex()",
    "kind": "Method",
    "detail": "Function (FAssetDataPtrIndex)",
    "insertText": "PopFreeIndex()"
  },
  {
    "label": "CreateEmptyList()",
    "kind": "Method",
    "detail": "Function (FAssetDataOrArrayIndex)",
    "insertText": "CreateEmptyList()"
  },
  {
    "label": "CreateAssetDataPtrIndex()",
    "kind": "Method",
    "detail": "Function (FAssetDataOrArrayIndex)",
    "insertText": "CreateAssetDataPtrIndex(FAssetDataPtrIndex AssetIndex)"
  },
  {
    "label": "CreateArrayIndex()",
    "kind": "Method",
    "detail": "Function (FAssetDataOrArrayIndex)",
    "insertText": "CreateArrayIndex(FAssetDataArrayIndex ArrayIndex)"
  },
  {
    "label": "AddElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddElement(FAssetDataOrArrayIndex& Array, FAssetDataPtrIndex AssetIndex)"
  },
  {
    "label": "RemoveElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveElement(FAssetDataOrArrayIndex& Array, FAssetDataPtrIndex AssetIndex)"
  },
  {
    "label": "RemoveAllElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllElements(FAssetDataOrArrayIndex& Array)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "AllocateArrayIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AllocateArrayIndex()"
  },
  {
    "label": "ReleaseArrayIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseArrayIndex(int32 Index)"
  },
  {
    "label": "FAssetPackageNameMap()",
    "kind": "Method",
    "detail": "Function (ASSETREGISTRY_API)",
    "insertText": "FAssetPackageNameMap(FAssetDataMap& InAssetDataMap, FIndirectAssetDataArrays& InIndirectAssetDataArrays)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty(int32 ReservedSize=0)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FName PackageName, FAssetDataPtrIndex AssetIndex)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FName PackageName, FAssetDataPtrIndex AssetIndex)"
  },
  {
    "label": "FIterator()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FIterator(const FAssetPackageNameMap& InOwner)"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString(Builder)"
  },
  {
    "label": "FAssetDataOrArrayIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FAssetDataOrArrayIndex()"
  }
]