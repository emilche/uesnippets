[
  {
    "label": "FStoreConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStoreConnection"
  },
  {
    "label": "FInsightsAutomationController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInsightsAutomationController"
  },
  {
    "label": "STraceStoreWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STraceStoreWindow"
  },
  {
    "label": "SConnectionWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SConnectionWindow"
  },
  {
    "label": "FTraceInsightsFrontendModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceInsightsFrontendModule"
  },
  {
    "label": "FTraceInsightsFrontendModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Ticker . h \" # include \" Framework / Docking / TabManager . h \" # include \" InsightsFrontend / InsightsFrontendSettings . h \" # include \" InsightsFrontend / ITraceInsightsFrontendModule . h \" namespace UE::Trace { class FStoreConnection ; } namespace UE::Insights { class FInsightsAutomationController ; class STraceStoreWindow ; class SConnectionWindow ; class FTraceInsightsFrontendModule : public ITraceInsightsFrontendModule { public : ~)",
    "insertText": "FTraceInsightsFrontendModule()"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "SupportsDynamicReloading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsDynamicReloading()"
  },
  {
    "label": "CreateFrontendWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFrontendWindow(const FCreateFrontendWindowParams& Params)"
  },
  {
    "label": "GetTraceStoreWindow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<STraceStoreWindow>)",
    "insertText": "GetTraceStoreWindow()"
  },
  {
    "label": "GetConnectionWindow()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<SConnectionWindow>)",
    "insertText": "GetConnectionWindow()"
  },
  {
    "label": "RunAutomationTests()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RunAutomationTests(const FString& InCmd)"
  },
  {
    "label": "GetSettings()",
    "kind": "Method",
    "detail": "Function (FInsightsFrontendSettings&)",
    "insertText": "GetSettings()"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners()"
  },
  {
    "label": "SpawnTraceStoreTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTraceStoreTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnTraceStoreTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTraceStoreTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnConnectionTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnConnectionTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnConnectionTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConnectionTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  }
]