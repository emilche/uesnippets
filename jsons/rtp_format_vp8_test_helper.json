[
  {
    "label": "RtpFormatVp8TestHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpFormatVp8TestHelper"
  },
  {
    "label": "RtpFormatVp8TestHelper()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTP_FORMAT_VP8_TEST_HELPER_H_ # define MODULES_RTP_RTCP_SOURCE_RTP_FORMAT_VP8_TEST_HELPER_H_ # include \" api / array_view . h \" # include \" modules / rtp_rtcp / source / rtp_format_vp8 . h \" # include \" modules / video_coding / codecs / vp8 / include / vp8_globals . h \" # include \" rtc_base / buffer . h \" namespace webrtc { class RtpFormatVp8TestHelper { public :)",
    "insertText": "RtpFormatVp8TestHelper(const RTPVideoHeaderVP8* hdr, size_t payload_len)"
  },
  {
    "label": "RtpFormatVp8TestHelper()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtpFormatVp8TestHelper()"
  },
  {
    "label": "RtpFormatVp8TestHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtpFormatVp8TestHelper(const RtpFormatVp8TestHelper&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RtpFormatVp8TestHelper&)",
    "insertText": "operator(const RtpFormatVp8TestHelper&)"
  },
  {
    "label": "GetAllPacketsAndCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllPacketsAndCheck(RtpPacketizerVp8* packetizer, rtc::ArrayView<const size_t> expected_sizes)"
  },
  {
    "label": "payload()",
    "kind": "Method",
    "detail": "Function (rtc::ArrayView<const uint8_t>)",
    "insertText": "payload()"
  },
  {
    "label": "CheckHeader()",
    "kind": "Method",
    "detail": "Function (} private : int)",
    "insertText": "CheckHeader(rtc::ArrayView<const uint8_t> rtp_payload, bool first)"
  },
  {
    "label": "CheckPictureID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckPictureID(rtc::ArrayView<const uint8_t> rtp_payload, int* offset)"
  },
  {
    "label": "CheckTl0PicIdx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckTl0PicIdx(rtc::ArrayView<const uint8_t> rtp_payload, int* offset)"
  },
  {
    "label": "CheckTIDAndKeyIdx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckTIDAndKeyIdx(rtc::ArrayView<const uint8_t> rtp_payload, int* offset)"
  },
  {
    "label": "CheckPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckPayload(const uint8_t* data_ptr)"
  }
]