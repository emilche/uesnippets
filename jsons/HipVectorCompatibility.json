[
  {
    "label": "Scalar_accessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Scalar_accessor"
  },
  {
    "label": "NAME",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NAME"
  },
  {
    "label": "HIP_SCALAR_ACCESSOR_BUILDER()",
    "kind": "Method",
    "detail": "Function (# ifndef HIP_VECTOR_COMPATIBILITY_H # define HIP_VECTOR_COMPATIBILITY_H namespace hip_impl { template<,,unsigned int> struct Scalar_accessor ; } namespace Eigen { namespace internal { # define)",
    "insertText": "HIP_SCALAR_ACCESSOR_BUILDER(NAME)"
  },
  {
    "label": "HIP_SCALAR_ACCESSOR_BUILDER_RETVAL()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "HIP_SCALAR_ACCESSOR_BUILDER_RETVAL(NAME)"
  },
  {
    "label": "HIP_SCALAR_ACCESSOR_BUILDER_IGAMMA()",
    "kind": "Method",
    "detail": "Function (} ; \\ template<T,U,unsigned int n> \\ struct NAME # # _retval<hip_impl::Scalar_accessor<T,U,n>> : NAME # # _retval<T> { } ; # define)",
    "insertText": "HIP_SCALAR_ACCESSOR_BUILDER_IGAMMA(NAME)"
  }
]