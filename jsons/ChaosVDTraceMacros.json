[
  {
    "label": "CVD_DEFINE_TRACE_VECTOR()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # if WITH_CHAOS_VISUAL_DEBUGGER # ifndef CVD_DEFINE_TRACE_VECTOR # define)",
    "insertText": "CVD_DEFINE_TRACE_VECTOR(Type, Name) \\ UE_TRACE_EVENT_FIELD(Type, Name##X) \\ UE_TRACE_EVENT_FIELD(Type, Name##Y) \\ UE_TRACE_EVENT_FIELD(Type, Name##Z) #endif #ifndef CVD_DEFINE_TRACE_ROTATOR #define CVD_DEFINE_TRACE_ROTATOR(Type, Name) \\ UE_TRACE_EVENT_FIELD(Type, Name##X) \\ UE_TRACE_EVENT_FIELD(Type, Name##Y) \\ UE_TRACE_EVENT_FIELD(Type, Name##Z) \\ UE_TRACE_EVENT_FIELD(Type, Name##W) #endif #ifndef CVD_TRACE_VECTOR_ON_EVENT #define CVD_TRACE_VECTOR_ON_EVENT(EventName, Name, Vector) \\ EventName.Name##X(Vector.X) \\ << EventName.Name##Y(Vector.Y) \\ << EventName.Name##Z(Vector.Z) #endif #ifndef CVD_TRACE_ROTATOR_ON_EVENT #define CVD_TRACE_ROTATOR_ON_EVENT(EventName, Name, Rotator) \\ EventName.Name##X(Rotator.X) \\ << EventName.Name##Y(Rotator.Y) \\ << EventName.Name##Z(Rotator.Z) \\ << EventName.Name##W(Rotator.W) #endif #ifndef CVD_TRACE_PARTICLE #define CVD_TRACE_PARTICLE(ParticleHandle) \\ FChaosVisualDebuggerTrace::TraceParticle(ParticleHandle)"
  },
  {
    "label": "CVD_TRACE_PARTICLES()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_PARTICLES # define)",
    "insertText": "CVD_TRACE_PARTICLES(ParticleHandles) \\ FChaosVisualDebuggerTrace::TraceParticles(ParticleHandles)"
  },
  {
    "label": "CVD_TRACE_PARTICLES_VIEW()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_PARTICLES_VIEW # define)",
    "insertText": "CVD_TRACE_PARTICLES_VIEW(ParticleHandlesView) \\ FChaosVisualDebuggerTrace::TraceParticlesView(ParticleHandlesView)"
  },
  {
    "label": "CVD_TRACE_PARTICLES_SOA()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_PARTICLES_SOA # define)",
    "insertText": "CVD_TRACE_PARTICLES_SOA(ParticleSoA, ...) \\ FChaosVisualDebuggerTrace::TraceParticlesSoA(ParticleSoA, ##__VA_ARGS__)"
  },
  {
    "label": "CVD_TRACE_SOLVER_START_FRAME()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_SOLVER_START_FRAME # define)",
    "insertText": "CVD_TRACE_SOLVER_START_FRAME(SolverType, SolverRef)"
  },
  {
    "label": "SolverType()",
    "kind": "Method",
    "detail": "Function (\\ FChaosVisualDebuggerTrace::GetCVDContext<)",
    "insertText": "SolverType(SolverRef, StartContextData)"
  },
  {
    "label": "TraceSolverFrameStart()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "TraceSolverFrameStart(StartContextData, FChaosVisualDebuggerTrace::GetDebugName<SolverType>(SolverRef), SolverRef.GetCVDFrameNumber())"
  },
  {
    "label": "CVD_TRACE_SOLVER_END_FRAME()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_SOLVER_END_FRAME # define)",
    "insertText": "CVD_TRACE_SOLVER_END_FRAME(SolverType, SolverRef)"
  },
  {
    "label": "SolverType()",
    "kind": "Method",
    "detail": "Function (\\ FChaosVisualDebuggerTrace::GetCVDContext<)",
    "insertText": "SolverType(SolverRef, EndContextData)"
  },
  {
    "label": "TraceSolverFrameEnd()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "TraceSolverFrameEnd(EndContextData)"
  },
  {
    "label": "CVD_SCOPE_TRACE_SOLVER_FRAME()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_SCOPE_TRACE_SOLVER_FRAME # define)",
    "insertText": "CVD_SCOPE_TRACE_SOLVER_FRAME(SolverType, SolverRef) \\ FChaosVDScopeSolverFrame<SolverType> ScopeSolverFrame(SolverRef)"
  },
  {
    "label": "CVD_TRACE_SOLVER_STEP_START()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_SOLVER_STEP_START # define)",
    "insertText": "CVD_TRACE_SOLVER_STEP_START(StepName) \\ FChaosVisualDebuggerTrace::TraceSolverStepStart(StepName)"
  },
  {
    "label": "CVD_TRACE_SOLVER_STEP_END()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_SOLVER_STEP_END # define)",
    "insertText": "CVD_TRACE_SOLVER_STEP_END() \\ FChaosVisualDebuggerTrace::TraceSolverStepEnd()"
  },
  {
    "label": "CVD_SCOPE_TRACE_SOLVER_STEP()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_SCOPE_TRACE_SOLVER_STEP # define)",
    "insertText": "CVD_SCOPE_TRACE_SOLVER_STEP(DataChannel, StepName) \\ CVD_SCOPED_DATA_CHANNEL_OVERRIDE(DataChannel) \\ FChaosVDScopeSolverStep ScopeSolverStep(StepName) #endif #ifndef CVD_TRACE_BINARY_DATA #define CVD_TRACE_BINARY_DATA(InData, TypeName, ...) \\ FChaosVisualDebuggerTrace::TraceBinaryData(InData, TypeName, ##__VA_ARGS__)"
  },
  {
    "label": "CVD_TRACE_SOLVER_SIMULATION_SPACE()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_SOLVER_SIMULATION_SPACE # define)",
    "insertText": "CVD_TRACE_SOLVER_SIMULATION_SPACE(InSimulationSpace) \\ FChaosVisualDebuggerTrace::TraceSolverSimulationSpace(InSimulationSpace)"
  },
  {
    "label": "CVD_TRACE_PARTICLE_DESTROYED()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_PARTICLE_DESTROYED # define)",
    "insertText": "CVD_TRACE_PARTICLE_DESTROYED(DestroyedParticleHandle) \\ FChaosVisualDebuggerTrace::TraceParticleDestroyed(DestroyedParticleHandle)"
  },
  {
    "label": "CVD_TRACE_MID_PHASE()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_MID_PHASE # define)",
    "insertText": "CVD_TRACE_MID_PHASE(MidPhase) \\ FChaosVisualDebuggerTrace::TraceMidPhase(MidPhase)"
  },
  {
    "label": "CVD_TRACE_COLLISION_CONSTRAINT()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_COLLISION_CONSTRAINT # define)",
    "insertText": "CVD_TRACE_COLLISION_CONSTRAINT(Constraint) \\ FChaosVisualDebuggerTrace::TraceCollisionConstraint(Constraint)"
  },
  {
    "label": "CVD_TRACE_COLLISION_CONSTRAINT_VIEW()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_COLLISION_CONSTRAINT_VIEW # define)",
    "insertText": "CVD_TRACE_COLLISION_CONSTRAINT_VIEW(ConstraintView) \\ FChaosVisualDebuggerTrace::TraceCollisionConstraintView(ConstraintView)"
  },
  {
    "label": "CVD_TRACE_STEP_MID_PHASES_FROM_COLLISION_CONSTRAINTS()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_STEP_MID_PHASES_FROM_COLLISION_CONSTRAINTS # define)",
    "insertText": "CVD_TRACE_STEP_MID_PHASES_FROM_COLLISION_CONSTRAINTS(DataChannel, CollisionConstraints) \\ CVD_SCOPED_DATA_CHANNEL_OVERRIDE(DataChannel) \\ FChaosVisualDebuggerTrace::TraceMidPhasesFromCollisionConstraints(CollisionConstraints)"
  },
  {
    "label": "CVD_TRACE_INVALIDATE_CACHED_GEOMETRY()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_INVALIDATE_CACHED_GEOMETRY # define)",
    "insertText": "CVD_TRACE_INVALIDATE_CACHED_GEOMETRY(ImplicitObjectPtr) \\ FChaosVisualDebuggerTrace::InvalidateGeometryFromCache(ImplicitObjectPtr)"
  },
  {
    "label": "CVD_TRACE_SCENE_QUERY_START()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_SCOPED_SCENE_QUERY # define)",
    "insertText": "CVD_TRACE_SCENE_QUERY_START(InputGeometry, GeometryOrientation, Start, End, TraceChannel, Params, ResponseParams, ObjectParams, QueryType, QueryMode, SolverID, bIsRetry) \\ FChaosVisualDebuggerTrace::TraceSceneQueryStart(InputGeometry, GeometryOrientation, Start, End, TraceChannel, Params, ResponseParams, ObjectParams, QueryType, QueryMode, SolverID, bIsRetry)"
  },
  {
    "label": "CVD_TRACE_SCOPED_SCENE_QUERY_VISIT()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_SCOPED_SCENE_QUERY_VISIT # define)",
    "insertText": "CVD_TRACE_SCOPED_SCENE_QUERY_VISIT(InQueryVisitData) \\ FChaosVDScopeSceneQueryVisit CVDQueryVisit(InQueryVisitData)"
  },
  {
    "label": "CVD_TRACE_SCENE_QUERY_VISIT()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_SCENE_QUERY_VISIT # define)",
    "insertText": "CVD_TRACE_SCENE_QUERY_VISIT(InQueryVisitData) \\ FChaosVisualDebuggerTrace::TraceSceneQueryVisit(InQueryVisitData)"
  },
  {
    "label": "CVD_TRACE_JOINT_CONSTRAINTS()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_JOINT_CONSTRAINTS # define)",
    "insertText": "CVD_TRACE_JOINT_CONSTRAINTS(DataChannel, InJointConstraints)"
  },
  {
    "label": "CVD_SCOPED_DATA_CHANNEL_OVERRIDE()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "CVD_SCOPED_DATA_CHANNEL_OVERRIDE(DataChannel) \\ FChaosVisualDebuggerTrace::TraceJointsConstraints(InJointConstraints)"
  },
  {
    "label": "CVD_TRACE_CHARACTER_GROUND_CONSTRAINTS()",
    "kind": "Method",
    "detail": "Function (\\ } # endif # ifndef CVD_TRACE_CHARACTER_GROUND_CONSTRAINTS # define)",
    "insertText": "CVD_TRACE_CHARACTER_GROUND_CONSTRAINTS(DataChannel, InConstraints)"
  },
  {
    "label": "CVD_SCOPED_DATA_CHANNEL_OVERRIDE()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "CVD_SCOPED_DATA_CHANNEL_OVERRIDE(DataChannel) \\ FChaosVisualDebuggerTrace::TraceCharacterGroundConstraints(InConstraints)"
  },
  {
    "label": "CVD_TRACE_CONSTRAINTS_CONTAINER()",
    "kind": "Method",
    "detail": "Function (\\ } # endif # ifndef CVD_TRACE_CONSTRAINTS_CONTAINER # define)",
    "insertText": "CVD_TRACE_CONSTRAINTS_CONTAINER(ContainerView) \\ FChaosVisualDebuggerTrace::TraceConstraintsContainer(ContainerView)"
  },
  {
    "label": "CVD_TRACE_ACCELERATION_STRUCTURES()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_TRACE_ACCELERATION_STRUCTURES # define)",
    "insertText": "CVD_TRACE_ACCELERATION_STRUCTURES(AccelerationStructuresCollections, SolverType, SolverRef, DataChannel)"
  },
  {
    "label": "SolverType()",
    "kind": "Method",
    "detail": "Function (\\ FChaosVDContext StartAccelerationStrutureCVDContextData ; \\ FChaosVisualDebuggerTrace::GetCVDContext<)",
    "insertText": "SolverType(SolverRef, StartAccelerationStrutureCVDContextData)"
  },
  {
    "label": "CVD_SCOPE_CONTEXT()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "CVD_SCOPE_CONTEXT(StartAccelerationStrutureCVDContextData)"
  },
  {
    "label": "CVD_SCOPED_DATA_CHANNEL_OVERRIDE()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "CVD_SCOPED_DATA_CHANNEL_OVERRIDE(DataChannel) \\ FChaosVisualDebuggerTrace::TraceSceneAccelerationStructures(AccelerationStructuresCollections)"
  },
  {
    "label": "CVD_TRACE_NETWORK_TICK_OFFSET()",
    "kind": "Method",
    "detail": "Function (\\ } # endif # ifndef CVD_TRACE_NETWORK_TICK_OFFSET # define)",
    "insertText": "CVD_TRACE_NETWORK_TICK_OFFSET(TickOffset, SolverID)"
  },
  {
    "label": "TraceNetworkTickOffset()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "TraceNetworkTickOffset(TickOffset, SolverID)"
  }
]