[
  {
    "label": "ConvertFloatImpl()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_STRINGS_INTERNAL_STR_FORMAT_FLOAT_CONVERSION_H_ # define ABSL_STRINGS_INTERNAL_STR_FORMAT_FLOAT_CONVERSION_H_ # include \" absl / strings / internal / str_format / extension . h \" namespace absl { ABSL_NAMESPACE_BEGIN namespace str_format_internal { bool)",
    "insertText": "ConvertFloatImpl(float v, const FormatConversionSpecImpl &conv, FormatSinkImpl *sink)"
  },
  {
    "label": "ConvertFloatImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertFloatImpl(double v, const FormatConversionSpecImpl &conv, FormatSinkImpl *sink)"
  },
  {
    "label": "ConvertFloatImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertFloatImpl(long double v, const FormatConversionSpecImpl &conv, FormatSinkImpl *sink)"
  }
]