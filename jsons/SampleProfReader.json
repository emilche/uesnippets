[
  {
    "label": "SampleProfileReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleProfileReader"
  },
  {
    "label": "SampleProfileReaderText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleProfileReaderText"
  },
  {
    "label": "SampleProfileReaderBinary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleProfileReaderBinary"
  },
  {
    "label": "SampleProfileReader()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_PROFILEDATA_SAMPLEPROFREADER_H # define LLVM_PROFILEDATA_SAMPLEPROFREADER_H # include \" llvm / ADT / DenseMap . h \" # include \" llvm / ADT / StringMap . h \" # include \" llvm / ADT / StringRef . h \" # include \" llvm / ADT / Twine . h \" # include \" llvm / IR / DiagnosticInfo . h \" # include \" llvm / IR / Function . h \" # include \" llvm / IR / LLVMContext . h \" # include \" llvm / ProfileData / SampleProf . h \" # include \" llvm / Support / Debug . h \" # include \" llvm / Support / ErrorHandling . h \" # include \" llvm / Support / ErrorOr . h \" # include \" llvm / Support / MemoryBuffer . h \" # include \" llvm / Support / raw_ostream . h \" namespace llvm { namespace sampleprof { class SampleProfileReader { public :)",
    "insertText": "SampleProfileReader(std::unique_ptr<MemoryBuffer> B, LLVMContext &C) : Profiles(0), Ctx(C), Buffer(std::move(B))"
  },
  {
    "label": "SampleProfileReader()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "SampleProfileReader()"
  },
  {
    "label": "readHeader()",
    "kind": "Method",
    "detail": "Function (} std::error_code)",
    "insertText": "readHeader()"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (std::error_code)",
    "insertText": "read()"
  },
  {
    "label": "dumpFunctionProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dumpFunctionProfile(StringRef FName, raw_ostream &OS = dbgs())"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dump(raw_ostream &OS = dbgs())"
  },
  {
    "label": "getSamplesFor()",
    "kind": "Method",
    "detail": "Function (FunctionSamples*)",
    "insertText": "getSamplesFor(const Function &F)"
  },
  {
    "label": "getProfiles()",
    "kind": "Method",
    "detail": "Function (} StringMap<FunctionSamples>&)",
    "insertText": "getProfiles()"
  },
  {
    "label": "diagnose()",
    "kind": "Method",
    "detail": "Function (Ctx .)",
    "insertText": "diagnose(DiagnosticInfoSampleProfile(Buffer->getBufferIdentifier(), LineNumber, Msg))"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (} ErrorOr<std::unique_ptr<SampleProfileReader>>)",
    "insertText": "create(StringRef Filename, LLVMContext &C)"
  },
  {
    "label": "SampleProfileReaderText()",
    "kind": "Method",
    "detail": "Function (protected : StringMap<FunctionSamples> Profiles ; LLVMContext& Ctx ; std::unique_ptr<MemoryBuffer> Buffer ; } ; class SampleProfileReaderText : public SampleProfileReader { public :)",
    "insertText": "SampleProfileReaderText(std::unique_ptr<MemoryBuffer> B, LLVMContext &C) : SampleProfileReader(std::move(B), C)"
  },
  {
    "label": "SampleProfileReaderBinary()",
    "kind": "Method",
    "detail": "Function (} ; class SampleProfileReaderBinary : public SampleProfileReader { public :)",
    "insertText": "SampleProfileReaderBinary(std::unique_ptr<MemoryBuffer> B, LLVMContext &C) : SampleProfileReader(std::move(B), C), Data(nullptr), End(nullptr)"
  },
  {
    "label": "hasFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasFormat(const MemoryBuffer &Buffer)"
  },
  {
    "label": "readNumber()",
    "kind": "Method",
    "detail": "Function (protected : template<T> ErrorOr<T>)",
    "insertText": "readNumber()"
  },
  {
    "label": "readString()",
    "kind": "Method",
    "detail": "Function (ErrorOr<StringRef>)",
    "insertText": "readString()"
  },
  {
    "label": "at_eof()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "at_eof()"
  }
]