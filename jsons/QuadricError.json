[
  {
    "label": "TQuadricError",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TQuadricError"
  },
  {
    "label": "TVolPresQuadricError",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TVolPresQuadricError"
  },
  {
    "label": "FPlaneData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlaneData"
  },
  {
    "label": "TAttrBasedQuadricError",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TAttrBasedQuadricError"
  },
  {
    "label": "TQuadricError()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TQuadricError()"
  },
  {
    "label": "MultiplySymmetricMatrix()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MultiplySymmetricMatrix(SM, vectmp)"
  },
  {
    "label": "SolveAxEqualsb()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SolveAxEqualsb(OutResult, -bx, -by, -bz, minThresh)"
  },
  {
    "label": "TVolPresQuadricError()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TVolPresQuadricError()"
  },
  {
    "label": "gvol()",
    "kind": "Method",
    "detail": "Function (FPlaneData)",
    "insertText": "gvol(1. / 3., PlaneData)"
  },
  {
    "label": "BasisMatrix()",
    "kind": "Method",
    "detail": "Function (TMatrix3<RealType>)",
    "insertText": "BasisMatrix(P2-P0, P1-P0, NFace, true)"
  },
  {
    "label": "DataVec()",
    "kind": "Method",
    "detail": "Function (FVector3d)",
    "insertText": "DataVec(ScaledAttr[2] - ScaledAttr[0], ScaledAttr[1] - ScaledAttr[0], 0.)"
  },
  {
    "label": "TAttrBasedQuadricError()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TAttrBasedQuadricError()"
  },
  {
    "label": "gvol()",
    "kind": "Method",
    "detail": "Function (BaseClass::FPlaneData)",
    "insertText": "gvol(1. / 3., BaseClass::PlaneData)"
  },
  {
    "label": "Gradattr()",
    "kind": "Method",
    "detail": "Function (TVector<RealType>)",
    "insertText": "Gradattr(grad[0].X * attr[0] + grad[1].X * attr[1] + grad[2].X * attr[2],\n\t\t\t                        grad[0].Y * attr[0] + grad[1].Y * attr[1] + grad[2].Y * attr[2],\n\t\t\t                        grad[0].Z * attr[0] + grad[1].Z * attr[1] + grad[2].Z * attr[2])"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Evaluate(point, attr)"
  },
  {
    "label": "SeamQuadric()",
    "kind": "Method",
    "detail": "Function (TQuadricError<RealType>)",
    "insertText": "SeamQuadric(ConstraintNormal, p0)"
  }
]