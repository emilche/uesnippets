[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "IDocumentationPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDocumentationPage"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "TAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TAttribute"
  },
  {
    "label": "FDocumentation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentation"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" DocumentationRedirectRegistry . h \" # include \" IDocumentation . h \" # include \" Internationalization / CulturePointer . h \" # include \" Templates / SharedPointer . h \" class FText ; class IDocumentationPage ; class SVerticalBox ; class SWidget ; template<ObjectType> class TAttribute ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogDocumentation, Log, All)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (class FDocumentation : public IDocumentation { public : TSharedRef<IDocumentation>)",
    "insertText": "Create()"
  },
  {
    "label": "FDocumentation()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "FDocumentation()"
  },
  {
    "label": "OpenHome()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenHome(FDocumentationSourceInfo Source = FDocumentationSourceInfo(), const FString& BaseUrlId = FString())"
  },
  {
    "label": "OpenHome()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenHome(const FCultureRef& Culture, FDocumentationSourceInfo Source = FDocumentationSourceInfo(), const FString& BaseUrlId = FString())"
  },
  {
    "label": "OpenAPIHome()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenAPIHome(FDocumentationSourceInfo Source = FDocumentationSourceInfo())"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Open(const FString& Link, FDocumentationSourceInfo Source = FDocumentationSourceInfo(), const FString& BaseUrlId = FString())"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Open(const FString& Link, const FCultureRef& Culture, FDocumentationSourceInfo Source = FDocumentationSourceInfo(), const FString& BaseUrlId = FString())"
  },
  {
    "label": "CreateAnchor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateAnchor(const TAttribute<FString>& Link, const FString& PreviewLink = FString(), const FString& PreviewExcerptName = FString(), const TAttribute<FString>& BaseUrlId = FString())"
  },
  {
    "label": "GetPage()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDocumentationPage>)",
    "insertText": "GetPage(const FString& Link, const TSharedPtr< FParserConfiguration >& Config, const FDocumentationStyle& Style = FDocumentationStyle())"
  },
  {
    "label": "PageExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PageExists(const FString& Link)"
  },
  {
    "label": "PageExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PageExists(const FString& Link, const FCultureRef& Culture)"
  },
  {
    "label": "GetSourcePaths()",
    "kind": "Method",
    "detail": "Function (const TArray<FString>&)",
    "insertText": "GetSourcePaths()"
  },
  {
    "label": "CreateToolTip()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SToolTip>)",
    "insertText": "CreateToolTip(const TAttribute<FText>& Text, const TSharedPtr<SWidget>& OverrideContent, const FString& Link, const FString& ExcerptName)"
  },
  {
    "label": "CreateToolTip()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SToolTip>)",
    "insertText": "CreateToolTip(const TAttribute<FText>& Text, const TSharedPtr<SWidget>& OverrideContent, const FString& Link, const FString& ExcerptName, const TAttribute<FText>& Shortcut)"
  },
  {
    "label": "CreateToolTip()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SToolTip>)",
    "insertText": "CreateToolTip(const TAttribute<FText>& Text, const TSharedRef<SWidget>& OverrideContent, const TSharedPtr<SVerticalBox>& DocVerticalBox, const FString& Link, const FString& ExcerptName)"
  },
  {
    "label": "RegisterBaseUrl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterBaseUrl(const FString& Id, const FString& Url)"
  },
  {
    "label": "GetBaseUrl()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetBaseUrl(const FString& Id)"
  },
  {
    "label": "RegisterRedirect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterRedirect(const FName& Owner, const FDocumentationRedirect& Redirect)"
  },
  {
    "label": "UnregisterRedirects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterRedirects(const FName& Owner)"
  },
  {
    "label": "OpenUrl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenUrl(const FString& Link, const FCultureRef& Culture, FDocumentationSourceInfo Source, const FString& BaseUrlId)"
  },
  {
    "label": "RedirectUrl()",
    "kind": "Method",
    "detail": "Function (FDocumentationUrl)",
    "insertText": "RedirectUrl(const FDocumentationUrl& OriginalUrl)"
  },
  {
    "label": "RegisterConfigRedirects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterConfigRedirects()"
  },
  {
    "label": "HandleSDKNotInstalled()",
    "kind": "Method",
    "detail": "Function (private : TMap<FString,TWeakPtr<IDocumentationPage>> LoadedPages ; TMap<const FString,const FString> RegisteredBaseUrls ; FDocumentationRedirectRegistry RedirectRegistry ; TArray<FString> SourcePaths ; void)",
    "insertText": "HandleSDKNotInstalled(const FString& PlatformName, const FString& InDocumentationPage)"
  },
  {
    "label": "AddSourcePath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddSourcePath(const FString& Path)"
  }
]