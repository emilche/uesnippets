[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "IsNullaryCallableImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsNullaryCallableImpl"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "IsNullaryCallableImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsNullaryCallableImpl"
  },
  {
    "label": "ValueType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueType"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "IsNullaryCallable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsNullaryCallable"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "GeneratorType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GeneratorType"
  },
  {
    "label": "EquivalenceClassType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EquivalenceClassType"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "IsEquivalenceClass",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsEquivalenceClass"
  },
  {
    "label": "IsEquivalenceClass",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsEquivalenceClass"
  },
  {
    "label": "ValueType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueType"
  },
  {
    "label": "Head",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Head"
  },
  {
    "label": "IsEquivalenceClass",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsEquivalenceClass"
  },
  {
    "label": "ValueType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueType"
  },
  {
    "label": "OrderedEquivalenceClasses",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OrderedEquivalenceClasses"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "ResultOfGenerator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ResultOfGenerator"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "ResultOfGenerator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ResultOfGenerator"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "AreGeneratorsWithTheSameReturnTypeImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreGeneratorsWithTheSameReturnTypeImpl"
  },
  {
    "label": "AreGeneratorsWithTheSameReturnTypeImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreGeneratorsWithTheSameReturnTypeImpl"
  },
  {
    "label": "Head",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Head"
  },
  {
    "label": "AreGeneratorsWithTheSameReturnTypeImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreGeneratorsWithTheSameReturnTypeImpl"
  },
  {
    "label": "AreGeneratorsWithTheSameReturnType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreGeneratorsWithTheSameReturnType"
  },
  {
    "label": "AreEquivalenceClassesOfTheSameType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreEquivalenceClassesOfTheSameType"
  },
  {
    "label": "AreEquivalenceClassesOfTheSameType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreEquivalenceClassesOfTheSameType"
  },
  {
    "label": "AreEquivalenceClassesOfTheSameType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreEquivalenceClassesOfTheSameType"
  },
  {
    "label": "ValueType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueType"
  },
  {
    "label": "AreEquivalenceClassesOfTheSameType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreEquivalenceClassesOfTheSameType"
  },
  {
    "label": "HeadNextFun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HeadNextFun"
  },
  {
    "label": "AreEquivalenceClassesOfTheSameType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreEquivalenceClassesOfTheSameType"
  },
  {
    "label": "HeadHeadFun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HeadHeadFun"
  },
  {
    "label": "AreEquivalenceClassesOfTheSameType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreEquivalenceClassesOfTheSameType"
  },
  {
    "label": "HeadHeadFun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HeadHeadFun"
  },
  {
    "label": "HeadNextFun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HeadNextFun"
  },
  {
    "label": "AreEquivalenceClassesOfTheSameType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AreEquivalenceClassesOfTheSameType"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "ForEachParameterFun",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ForEachParameterFun"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "Tup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Tup"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "ForEveryTwoImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ForEveryTwoImpl"
  },
  {
    "label": "Lhs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Lhs"
  },
  {
    "label": "WithBoundLhs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WithBoundLhs"
  },
  {
    "label": "Rhs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Rhs"
  },
  {
    "label": "Lhs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Lhs"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "Container",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Container"
  },
  {
    "label": "Container",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Container"
  },
  {
    "label": "H",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "H"
  },
  {
    "label": "If",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "If"
  },
  {
    "label": "If",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "If"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  },
  {
    "label": "If",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "If"
  },
  {
    "label": "Fun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fun"
  }
]