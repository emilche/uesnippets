[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "IEditorUtilityExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditorUtilityExtension"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FAssetActionUtilityPrototype",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetActionUtilityPrototype"
  },
  {
    "label": "FBlutilityMenuExtensions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlutilityMenuExtensions"
  },
  {
    "label": "FFunctionAndUtil",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFunctionAndUtil"
  },
  {
    "label": "GetBlutilityClasses()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EditorUtilityAssetPrototype . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" HAL / Platform . h \" # include \" Templates / Function . h \" # include \" UObject / Interface . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / TopLevelAssetPath . h \" # include \" UObject / UObjectGlobals . h \" class AActor ; class FMenuBuilder ; class FProperty ; class FString ; class FText ; class IEditorUtilityExtension ; struct FToolMenuSection ; class UFunction ; class UObject ; class FAssetActionUtilityPrototype ; class FBlutilityMenuExtensions { public : void)",
    "insertText": "GetBlutilityClasses(TArray<FAssetData>& OutAssets, FTopLevelAssetPath InClassName)"
  },
  {
    "label": "CreateActorBlutilityActionsMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateActorBlutilityActionsMenu(FToolMenuSection& InSection, TMap<TSharedRef<FAssetActionUtilityPrototype>, TSet<int32>> Utils, const TArray<AActor*> SelectedSupportedActors)"
  },
  {
    "label": "CreateAssetBlutilityActionsMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAssetBlutilityActionsMenu(FToolMenuSection& InSection, TMap<TSharedRef<FAssetActionUtilityPrototype>, TSet<int32>> Utils, const TArray<FAssetData> SelectedSupportedAssets)"
  },
  {
    "label": "FFunctionAndUtil()",
    "kind": "Method",
    "detail": "Function (protected : struct FFunctionAndUtil {)",
    "insertText": "FFunctionAndUtil(const FBlutilityFunctionData& InFunctionData, const TSharedRef<FAssetActionUtilityPrototype>& InUtil, TSet<int32>& InSelection) : FunctionData(InFunctionData) , Util(InUtil) , SelectionIndices(InSelection)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FFunctionAndUtil& InFunction)"
  },
  {
    "label": "CreateBlutilityActionsMenu()",
    "kind": "Method",
    "detail": "Function (} } return nullptr ; } FBlutilityFunctionData FunctionData ; TSharedRef<FAssetActionUtilityPrototype> Util ; TSet<int32> SelectionIndices ; } ; protected : template<SelectionType> void)",
    "insertText": "CreateBlutilityActionsMenu(FMenuBuilder& MenuBuilder, TMap<TSharedRef<FAssetActionUtilityPrototype>, TSet<int32>> Utils, const FText& MenuLabel, const FText& MenuToolTip, TFunction<bool(const FProperty* Property)> IsValidPropertyType, const TArray<SelectionType> Selection, const FName& IconName = \"GraphEditor.Event_16x\")"
  },
  {
    "label": "CreateBlutilityActionsMenu()",
    "kind": "Method",
    "detail": "Function (template<SelectionType> void)",
    "insertText": "CreateBlutilityActionsMenu(FToolMenuSection& InSection, TMap<TSharedRef<FAssetActionUtilityPrototype>, TSet<int32>> Utils, const FName& MenuName, const FText& MenuLabel, const FText& MenuToolTip, TFunction<bool(const FProperty* Property)> IsValidPropertyType, const TArray<SelectionType> Selection, const FName& IconName = \"GraphEditor.Event_16x\")"
  },
  {
    "label": "OpenEditorForUtility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenEditorForUtility(const FFunctionAndUtil& FunctionAndUtil)"
  },
  {
    "label": "ExtractFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractFunctions(TMap<TSharedRef<FAssetActionUtilityPrototype>, TSet<int32>>& Utils, TMap<FString, TArray<FFunctionAndUtil>>& OutCategoryFunctions)"
  }
]