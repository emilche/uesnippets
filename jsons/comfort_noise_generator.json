[
  {
    "label": "ComfortNoiseGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ComfortNoiseGenerator"
  },
  {
    "label": "EstimateComfortNoise_SSE2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EstimateComfortNoise_SSE2(const std::array<float, kFftLengthBy2Plus1>& N2,\n                               uint32_t* seed,\n                               FftData* lower_band_noise,\n                               FftData* upper_band_noise)"
  },
  {
    "label": "EstimateComfortNoise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EstimateComfortNoise(const std::array<float, kFftLengthBy2Plus1>& N2,\n                          uint32_t* seed,\n                          FftData* lower_band_noise,\n                          FftData* upper_band_noise)"
  },
  {
    "label": "ComfortNoiseGenerator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ComfortNoiseGenerator(const EchoCanceller3Config& config,\n                        Aec3Optimization optimization,\n                        size_t num_capture_channels)"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compute(bool saturated_capture,\n               rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>>\n                   capture_spectrum,\n               rtc::ArrayView<FftData> lower_band_noise,\n               rtc::ArrayView<FftData> upper_band_noise)"
  }
]