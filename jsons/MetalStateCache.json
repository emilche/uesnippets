[
  {
    "label": "FMetalGraphicsPipelineState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalGraphicsPipelineState"
  },
  {
    "label": "FMetalComputeShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalComputeShader"
  },
  {
    "label": "FMetalQueryBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalQueryBuffer"
  },
  {
    "label": "FMetalDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalDevice"
  },
  {
    "label": "EMetalPipelineFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMetalPipelineFlags"
  },
  {
    "label": "EMetalRenderFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMetalRenderFlags"
  },
  {
    "label": "FMetalStateCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalStateCache"
  },
  {
    "label": "ShaderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderType"
  },
  {
    "label": "ShaderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderType"
  },
  {
    "label": "FMetalBufferBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalBufferBinding"
  },
  {
    "label": "FMetalBufferBindings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalBufferBindings"
  },
  {
    "label": "FMetalTextureBindings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalTextureBindings"
  },
  {
    "label": "FMetalSamplerBindings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalSamplerBindings"
  },
  {
    "label": "FMetalRenderPassDescriptorPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalRenderPassDescriptorPool"
  },
  {
    "label": "FMetalStateCache()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMetalStateCache(FMetalDevice& Device, bool const bInImmediate)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetScissorRect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScissorRect(bool const bEnable, MTL::ScissorRect const& Rect)"
  },
  {
    "label": "SetBlendFactor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBlendFactor(FLinearColor const& InBlendFactor)"
  },
  {
    "label": "SetStencilRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStencilRef(uint32 const InStencilRef)"
  },
  {
    "label": "SetComputeShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComputeShader(FMetalComputeShader* InComputeShader)"
  },
  {
    "label": "SetRenderPassInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRenderPassInfo(FRHIRenderPassInfo const& InRenderTargets, FMetalQueryBuffer* QueryBuffer)"
  },
  {
    "label": "InvalidateRenderTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateRenderTargets(void)"
  },
  {
    "label": "SetRenderTargetsActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderTargetsActive(bool const bActive)"
  },
  {
    "label": "SetViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewport(const MTL::Viewport& InViewport)"
  },
  {
    "label": "SetViewports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewports(const MTL::Viewport InViewport[], uint32 Count)"
  },
  {
    "label": "SetVertexStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVertexStream(uint32 const Index, FMetalBufferPtr Buffer, FMetalBufferData* Bytes, uint32 const Offset, uint32 const Length)"
  },
  {
    "label": "SetGraphicsPipelineState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGraphicsPipelineState(FMetalGraphicsPipelineState* State)"
  },
  {
    "label": "BindUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindUniformBuffer(EMetalShaderStages const Freq, uint32 const BufferIndex, FRHIUniformBuffer* BufferRHI)"
  },
  {
    "label": "SetVisibilityResultMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibilityResultMode(MTL::VisibilityResultMode const Mode, NS::UInteger const Offset)"
  },
  {
    "label": "SetShaderBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderBuffer(\n\t\tEMetalShaderStages const Frequency\n\t\t, FMetalBufferPtr Buffer\n\t\t, FMetalBufferData* const Bytes\n\t\t, NS::UInteger const Offset\n\t\t, NS::UInteger const Length\n\t\t, NS::UInteger const Index\n\t\t, MTL::ResourceUsage const Usage\n\t\t, EPixelFormat const Format = PF_Unknown\n\t\t, NS::UInteger const ElementRowPitch = 0\n\t\t, TArray<TTuple<MTL::Resource*, MTL::ResourceUsage>> ReferencedResources = {}\n\t)"
  },
  {
    "label": "SetShaderBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderBuffer(EMetalShaderStages const Frequency, MTL::AccelerationStructure* AccelerationStructure, NS::UInteger const Index, TArray<TTuple<MTL::Resource*, MTL::ResourceUsage>> BLAS)"
  },
  {
    "label": "CacheOrSkipResourceResidencyUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheOrSkipResourceResidencyUpdate(MTL::Resource* InResource, EMetalShaderStages const Frequency, bool bReadOnly, bool bForceUseResource = false)"
  },
  {
    "label": "IRMakeSRVResident()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IRMakeSRVResident(EMetalShaderStages const Frequency, FMetalShaderResourceView* SRV)"
  },
  {
    "label": "IRMakeUAVResident()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IRMakeUAVResident(EMetalShaderStages const Frequency, FMetalUnorderedAccessView* UAV)"
  },
  {
    "label": "IRMakeTextureResident()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IRMakeTextureResident(EMetalShaderStages const Frequency, MTL::Texture* Texture)"
  },
  {
    "label": "IRForwardBindlessParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IRForwardBindlessParameters(EMetalShaderStages const Frequency, TConstArrayView<FRHIShaderParameterResource> InBindlessParameters)"
  },
  {
    "label": "IRBindUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IRBindUniformBuffer(EMetalShaderStages const Frequency, int32 Index, FMetalUniformBuffer* UB)"
  },
  {
    "label": "IRBindPackedUniforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IRBindPackedUniforms(EMetalShaderStages const Frequency, int32 Index, uint8 const* Bytes, const uint32 Size, FMetalBufferPtr& Buffer)"
  },
  {
    "label": "IRSideUploadToBuffer()",
    "kind": "Method",
    "detail": "Function (FMetalBufferPtr)",
    "insertText": "IRSideUploadToBuffer(void const* Content, uint64 Size)"
  },
  {
    "label": "GetOrCreateBackingBufferCopy()",
    "kind": "Method",
    "detail": "Function (FMetalBufferPtr)",
    "insertText": "GetOrCreateBackingBufferCopy(FMetalUniformBuffer* UB)"
  },
  {
    "label": "IRBindResourcesToEncoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IRBindResourcesToEncoder(ShaderType Shader, FMetalCommandEncoder* Encoder)"
  },
  {
    "label": "IRMapVertexBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IRMapVertexBuffers(MTL::RenderCommandEncoder* Encoder, bool bBindForMeshShaders = false)"
  },
  {
    "label": "SetShaderTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderTexture(EMetalShaderStages const Frequency, MTL::Texture* Texture, NS::UInteger const Index, MTL::ResourceUsage const Usage)"
  },
  {
    "label": "SetShaderSamplerState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderSamplerState(EMetalShaderStages const Frequency, FMetalSamplerState* const Sampler, NS::UInteger const Index)"
  },
  {
    "label": "SetShaderResourceView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderResourceView(EMetalShaderStages ShaderStage, uint32 BindIndex, FMetalShaderResourceView* SRV)"
  },
  {
    "label": "SetShaderUnorderedAccessView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderUnorderedAccessView(EMetalShaderStages ShaderStage, uint32 BindIndex, FMetalUnorderedAccessView* UAV)"
  },
  {
    "label": "SetStateDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStateDirty(void)"
  },
  {
    "label": "SetShaderBufferDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderBufferDirty(EMetalShaderStages const Frequency, NS::UInteger const Index)"
  },
  {
    "label": "SetRenderStoreActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderStoreActions(FMetalCommandEncoder& CommandEncoder, bool const bConditionalSwitch)"
  },
  {
    "label": "SetRenderState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderState(FMetalCommandEncoder& CommandEncoder)"
  },
  {
    "label": "CommitRenderResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitRenderResources(FMetalCommandEncoder* Raster)"
  },
  {
    "label": "CommitComputeResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitComputeResources(FMetalCommandEncoder* Compute)"
  },
  {
    "label": "CommitResourceTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitResourceTable(EMetalShaderStages const Frequency, MTL::FunctionType const Type, FMetalCommandEncoder& CommandEncoder)"
  },
  {
    "label": "StartRenderPass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartRenderPass(const FRHIRenderPassInfo& Info, FMetalQueryBuffer* QueryBuffer)"
  },
  {
    "label": "GetVertexBufferSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetVertexBufferSize(uint32 const Index)"
  },
  {
    "label": "NeedsToSetRenderTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsToSetRenderTarget(const FRHIRenderPassInfo& RenderPassInfo)"
  },
  {
    "label": "IsValidRef()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsValidRef(DepthStencilSurface)"
  },
  {
    "label": "GetPrimitiveType()",
    "kind": "Method",
    "detail": "Function (EPrimitiveType)",
    "insertText": "GetPrimitiveType()"
  },
  {
    "label": "SetRenderPipelineState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderPipelineState(FMetalCommandEncoder& CommandEncoder)"
  },
  {
    "label": "SetComputePipelineState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComputePipelineState(FMetalCommandEncoder& CommandEncoder)"
  },
  {
    "label": "FlushVisibilityResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushVisibilityResults(FMetalCommandEncoder& CommandEncoder)"
  },
  {
    "label": "DiscardRenderTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardRenderTargets(bool Depth, bool Stencil, uint32 ColorBitMask)"
  },
  {
    "label": "ReleaseDescriptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseDescriptor(MTL::RenderPassDescriptor* Desc)"
  },
  {
    "label": "ClearPreviousComputeState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPreviousComputeState()"
  },
  {
    "label": "ConditionalUpdateBackBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalUpdateBackBuffer(FMetalSurface& Surface)"
  },
  {
    "label": "SetDepthStencilState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDepthStencilState(FMetalDepthStencilState* InDepthStencilState)"
  },
  {
    "label": "SetRasterizerState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRasterizerState(FMetalRasterizerState* InRasterizerState)"
  },
  {
    "label": "SetResourcesFromTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResourcesFromTables(ShaderType Shader, CrossCompiler::EShaderStage ShaderStage)"
  },
  {
    "label": "SetViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewport(uint32 Index, const MTL::Viewport& InViewport)"
  },
  {
    "label": "SetScissorRect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScissorRect(uint32 Index, bool const bEnable, MTL::ScissorRect const& Rect)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Validate()"
  },
  {
    "label": "ValidateFunctionBindings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateFunctionBindings(FMetalShaderPipeline* Pipeline, EMetalShaderFrequency Frequency)"
  }
]