[
  {
    "label": "TargetMachine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetMachine"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "PassBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PassBuilder"
  },
  {
    "label": "registerModuleAnalyses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerModuleAnalyses(ModuleAnalysisManager &MAM)"
  },
  {
    "label": "registerCGSCCAnalyses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerCGSCCAnalyses(CGSCCAnalysisManager &CGAM)"
  },
  {
    "label": "registerFunctionAnalyses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerFunctionAnalyses(FunctionAnalysisManager &FAM)"
  },
  {
    "label": "parsePassPipeline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "parsePassPipeline(ModulePassManager &MPM, StringRef PipelineText,\n                         bool VerifyEachPass = true, bool DebugLogging = false)"
  },
  {
    "label": "parseModulePassName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "parseModulePassName(ModulePassManager &MPM, StringRef Name)"
  },
  {
    "label": "parseCGSCCPassName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "parseCGSCCPassName(CGSCCPassManager &CGPM, StringRef Name)"
  },
  {
    "label": "parseFunctionPassName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "parseFunctionPassName(FunctionPassManager &FPM, StringRef Name)"
  },
  {
    "label": "parseFunctionPassPipeline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "parseFunctionPassPipeline(FunctionPassManager &FPM,\n                                 StringRef &PipelineText, bool VerifyEachPass,\n                                 bool DebugLogging)"
  },
  {
    "label": "parseCGSCCPassPipeline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "parseCGSCCPassPipeline(CGSCCPassManager &CGPM, StringRef &PipelineText,\n                              bool VerifyEachPass, bool DebugLogging)"
  },
  {
    "label": "parseModulePassPipeline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "parseModulePassPipeline(ModulePassManager &MPM, StringRef &PipelineText,\n                               bool VerifyEachPass, bool DebugLogging)"
  }
]