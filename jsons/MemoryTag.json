[
  {
    "label": "FMemoryGraphTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryGraphTrack"
  },
  {
    "label": "FMemoryTag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryTag"
  },
  {
    "label": "FMemoryTagList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryTagList"
  },
  {
    "label": "GetIndex()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Math / Color . h \" # include \" Templates / SharedPointer . h \" # include \" Insights / MemoryProfiler / ViewModels / MemoryTracker . h \" namespace UE::Insights::MemoryProfiler { class FMemoryGraphTrack ; typedef int64 FMemoryTagId ; class FMemoryTag { class FMemoryTagList ; public : const FMemoryTagId InvalidTagId = 0 ; public : int32)",
    "insertText": "GetIndex()"
  },
  {
    "label": "MatchesWildcard()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesWildcard(const TArray<FString>& FullNames)"
  },
  {
    "label": "GetTrackerId()",
    "kind": "Method",
    "detail": "Function (FMemoryTrackerId)",
    "insertText": "GetTrackerId()"
  },
  {
    "label": "SetColorAuto()",
    "kind": "Method",
    "detail": "Function (Color = InColor ; } void)",
    "insertText": "SetColorAuto()"
  },
  {
    "label": "SetRandomColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRandomColor()"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (FMemoryTag*)",
    "insertText": "GetParent()"
  },
  {
    "label": "GetGraphTracks()",
    "kind": "Method",
    "detail": "Function (} const TSet<TSharedPtr<FMemoryGraphTrack>>&)",
    "insertText": "GetGraphTracks()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Tracks .)",
    "insertText": "Add(InTrack)"
  },
  {
    "label": "RemoveTrack()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveTrack(TSharedPtr<FMemoryGraphTrack> InTrack)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (Tracks .)",
    "insertText": "Remove(InTrack)"
  },
  {
    "label": "RemoveAllTracks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveAllTracks()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (Tracks .)",
    "insertText": "Reset()"
  },
  {
    "label": "FMemoryTagList()",
    "kind": "Method",
    "detail": "Function (} private : int32 Index = - 1 ; FMemoryTagId Id = InvalidTagId ; FMemoryTagId ParentId = InvalidTagId ; FString StatName ; FString StatFullName ; FMemoryTrackerId TrackerId = FMemoryTracker::InvalidTrackerId ; FLinearColor Color ; FMemoryTag* Parent = nullptr ; TSet<FMemoryTag*> Children ; TSet<TSharedPtr<FMemoryGraphTrack>> Tracks ; } ; class FMemoryTagList { public :)",
    "insertText": "FMemoryTagList()"
  },
  {
    "label": "GetSerialNumber()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSerialNumber()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update()"
  },
  {
    "label": "FilterTags()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FilterTags(const TArray<FString>& InIncludeStats, const TArray<FString>& InIgnoreStats, TArray<FMemoryTag*>& OutTags)"
  },
  {
    "label": "UpdateInternal()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateInternal()"
  },
  {
    "label": "UpdateParentAndStatFullName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateParentAndStatFullName(FMemoryTag& Tag)"
  }
]