[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_DESKTOP_CAPTURE_TYPES_H_ # define MODULES_DESKTOP_CAPTURE_DESKTOP_CAPTURE_TYPES_H_ # include<stdint . h> namespace webrtc { enum class CaptureType { kWindow,kScreen } ; typedef intptr_t WindowId ; const WindowId kNullWindowId = 0 ; # if)",
    "insertText": "defined(CHROMEOS)"
  },
  {
    "label": "CreateFourCC()",
    "kind": "Method",
    "detail": "Function (# else typedef intptr_t ScreenId ; # endif const ScreenId kFullDesktopScreenId = - 1 ; const ScreenId kInvalidScreenId = - 2 ; namespace DesktopCapturerId { uint32_t)",
    "insertText": "CreateFourCC(char a, char b, char c, char d)"
  },
  {
    "label": "CreateFourCC()",
    "kind": "Method",
    "detail": "Function (} uint32_t kUnknown = 0 ; uint32_t kWgcCapturerWin = 1 ; uint32_t kScreenCapturerWinMagnifier = 2 ; uint32_t kWindowCapturerWinGdi = 3 ; uint32_t kScreenCapturerWinGdi =)",
    "insertText": "CreateFourCC('G', 'D', 'I', ' ')"
  },
  {
    "label": "CreateFourCC()",
    "kind": "Method",
    "detail": "Function (uint32_t kScreenCapturerWinDirectx =)",
    "insertText": "CreateFourCC('D', 'X', 'G', 'I')"
  },
  {
    "label": "CreateFourCC()",
    "kind": "Method",
    "detail": "Function (uint32_t kX11CapturerLinux =)",
    "insertText": "CreateFourCC('X', '1', '1', ' ')"
  },
  {
    "label": "CreateFourCC()",
    "kind": "Method",
    "detail": "Function (uint32_t kWaylandCapturerLinux =)",
    "insertText": "CreateFourCC('W', 'L', ' ', ' ')"
  }
]