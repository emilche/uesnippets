[
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "IBulkDataIORequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBulkDataIORequest"
  },
  {
    "label": "FPrecomputedVolumetricLightmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrecomputedVolumetricLightmap"
  },
  {
    "label": "FVolumetricLightMapGridDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVolumetricLightMapGridDesc"
  },
  {
    "label": "FVolumetricLightMapGridCell",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVolumetricLightMapGridCell"
  },
  {
    "label": "FVolumetricLightmapGridStreamingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVolumetricLightmapGridStreamingManager"
  },
  {
    "label": "UMapBuildDataRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMapBuildDataRegistry"
  },
  {
    "label": "FVolumetricLightmapGridManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVolumetricLightmapGridManager"
  },
  {
    "label": "CellRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CellRequest"
  },
  {
    "label": "EStatus",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EStatus"
  },
  {
    "label": "FVolumetricLightmapGridManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Guid . h \" class FSceneInterface ; class UWorld ; class IBulkDataIORequest ; class FPrecomputedVolumetricLightmap ; struct FVolumetricLightMapGridDesc ; struct FVolumetricLightMapGridCell ; class FVolumetricLightmapGridStreamingManager ; class UMapBuildDataRegistry ; class FVolumetricLightmapGridManager { public :)",
    "insertText": "FVolumetricLightmapGridManager(UWorld* InWorld, FVolumetricLightMapGridDesc* Grid)"
  },
  {
    "label": "FVolumetricLightmapGridManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FVolumetricLightmapGridManager()"
  },
  {
    "label": "UpdateBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBounds(const FBox& Bounds)"
  },
  {
    "label": "ProcessRequests()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessRequests()"
  },
  {
    "label": "RemoveFromScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromScene(class FSceneInterface* InScene)"
  },
  {
    "label": "WaitForPendingRequest()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "WaitForPendingRequest(float Timelimit)"
  },
  {
    "label": "GetNumPendingRequests()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumPendingRequests()"
  },
  {
    "label": "ReleaseCellData()",
    "kind": "Method",
    "detail": "Function (private : class FVolumetricLightmapGridStreamingManager ; void)",
    "insertText": "ReleaseCellData(FVolumetricLightMapGridCell* GridCell, FSceneInterface* InScene)"
  },
  {
    "label": "RequestVolumetricLightMapCell()",
    "kind": "Method",
    "detail": "Function (UWorld* World = nullptr ; UMapBuildDataRegistry* Registry = nullptr ; FVolumetricLightMapGridDesc* Grid = nullptr ; struct CellRequest { enum EStatus { Created,Requested,Ready,Cancelled,Done } ; EStatus Status = Created ; IBulkDataIORequest* IORequest = nullptr ; FVolumetricLightMapGridCell* Cell = nullptr ; } ; IBulkDataIORequest*)",
    "insertText": "RequestVolumetricLightMapCell(FVolumetricLightMapGridCell& Cell)"
  }
]