[
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const FVec2& Value)"
  },
  {
    "label": "TurnRadiusFromThreePoints()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "TurnRadiusFromThreePoints(const FVector& PtA, const FVector& PtB, const FVector& PtC)"
  },
  {
    "label": "FTimeAndDistanceMeasure()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FTimeAndDistanceMeasure(const FString& DescriptionIn, float InitialVelocityIn, float TargetVelocityIn, float TargetDistanceIn)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(float DeltaTime, const FVector& CurrentLocation, float CurrentVelocity)"
  }
]