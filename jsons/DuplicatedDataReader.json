[
  {
    "label": "FDuplicateDataReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDuplicateDataReader"
  },
  {
    "label": "FUObjectAnnotationSparse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUObjectAnnotationSparse"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Serialization / ArchiveUObject . h \" # include \" UObject / UObjectAnnotation . h \" # include \" Serialization / DuplicatedObject . h \" # include \" Serialization / LargeMemoryData . h \" # include \" Templates / RefCounting . h \" # include \" UObject / UObjectThreadContext . h \" class FDuplicateDataReader : public FArchiveUObject { private : class FUObjectAnnotationSparse<FDuplicatedObject,false>& DuplicatedObjectAnnotation ; const FLargeMemoryData& ObjectData ; int64 Offset ; FArchive&)",
    "insertText": "operator(FName& N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(UObject*& Object)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FObjectPtr& Object)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FLazyObjectPtr& LazyObjectPtr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FSoftObjectPath& SoftObjectPath)"
  },
  {
    "label": "SerializeFail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeFail()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(void* Data,int64 Num)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Seek(int64 InPos)"
  },
  {
    "label": "GetArchiveName()",
    "kind": "Method",
    "detail": "Function (Offset = InPos ; } public : FString)",
    "insertText": "GetArchiveName()"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (} int64)",
    "insertText": "Tell()"
  },
  {
    "label": "FDuplicateDataReader()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDuplicateDataReader(FUObjectAnnotationSparse<FDuplicatedObject,false>& InDuplicatedObjectAnnotation, const FLargeMemoryData& InObjectData, uint32 InPortFlags, UObject* InDestOuter)"
  }
]