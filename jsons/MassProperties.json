[
  {
    "label": "FTriangleMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriangleMesh"
  },
  {
    "label": "FPerShapeData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerShapeData"
  },
  {
    "label": "FImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImplicitObject"
  },
  {
    "label": "FImplicitObjectUnion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImplicitObjectUnion"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TParticles",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TParticles"
  },
  {
    "label": "FMassProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassProperties"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "TransformToLocalSpace()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "TransformToLocalSpace(PMatrix<T,3,3>& Inertia)"
  },
  {
    "label": "TransformToLocalSpace()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "TransformToLocalSpace(FMassProperties& MassProperties)"
  },
  {
    "label": "CalculateVolumeAndCenterOfMass()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CalculateVolumeAndCenterOfMass(const TParticles<T,3>& Vertices, const TSurfaces& Surfaces, T& OutVolume, TVec3<T>& OutCenterOfMass)"
  },
  {
    "label": "CalculateVolumeAndCenterOfMass()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CalculateVolumeAndCenterOfMass(const TArray<TVec3<T>>& Vertices, const TSurfaces& Surfaces, T& OutVolume, TVec3<T>& OutCenterOfMass)"
  },
  {
    "label": "CalculateVolumeAndCenterOfMass()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CalculateVolumeAndCenterOfMass(const TArray<UE::Math::TVector<T>>& Vertices, const TSurfaces& Surfaces, T& OutVolume, UE::Math::TVector<T>& OutCenterOfMass)"
  },
  {
    "label": "CalculateMassProperties()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CalculateMassProperties(const FParticles& Vertices, const TSurfaces& Surfaces, const FReal Mass)"
  },
  {
    "label": "CalculateInertiaAndRotationOfMass()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CalculateInertiaAndRotationOfMass(const TParticles<T,3>& Vertices, const TSurfaces& Surfaces, const T Density, const TVec3<T>& CenterOfMass,\n\t\tPMatrix<T,3,3>& OutInertiaTensor, TRotation<T, 3>& OutRotationOfMass)"
  },
  {
    "label": "CalculateInertiaAndRotationOfMass()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CalculateInertiaAndRotationOfMass(const TArray<UE::Math::TVector<T>>& Vertices, const TSurfaces& Surfaces, const T Density, const UE::Math::TVector<T>& CenterOfMass,\n\t\tPMatrix<T,3,3>& OutInertiaTensor, TRotation<T, 3>& OutRotationOfMass)"
  },
  {
    "label": "CalculateVolumeAndCenterOfMass()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CalculateVolumeAndCenterOfMass(const FBox& BoundingBox, FVector::FReal& OutVolume, FVector& OutCenterOfMass)"
  },
  {
    "label": "CalculateInertiaAndRotationOfMass()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CalculateInertiaAndRotationOfMass(const FBox& BoundingBox, const FVector::FReal Density, FMatrix33& OutInertiaTensor, FRotation3& OutRotationOfMass)"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "Combine(const TArray<FMassProperties>& MPArray)"
  },
  {
    "label": "CombineWorldSpace()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CombineWorldSpace(const TArray<FMassProperties>& MPArray)"
  },
  {
    "label": "CalculateMassPropertiesOfImplicitUnion()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CalculateMassPropertiesOfImplicitUnion(\n\tChaos::FMassProperties& OutMassProperties,\n\tconst Chaos::FRigidTransform3& WorldTransform,\n\tconst Chaos::FImplicitObjectUnion& ImplicitUnion,\n\tChaos::FReal InDensityKGPerCM)"
  },
  {
    "label": "CalculateMassPropertiesOfImplicitType()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CalculateMassPropertiesOfImplicitType(\n\t\tFMassProperties& OutMassProperties,\n\t\tconst FRigidTransform3& WorldTransform,\n\t\tconst FImplicitObject* ImplicitObject,\n\t\tChaos::FReal InDensityKGPerCM)"
  }
]