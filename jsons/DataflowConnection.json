[
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FDataflowNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowNode"
  },
  {
    "label": "FDataflowInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowInput"
  },
  {
    "label": "FDataflowOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowOutput"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FPin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPin"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FConnectionParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConnectionParameters"
  },
  {
    "label": "FConnectionReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConnectionReference"
  },
  {
    "label": "TConnectionReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TConnectionReference"
  },
  {
    "label": "FConnectionKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConnectionKey"
  },
  {
    "label": "FGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraph"
  },
  {
    "label": "FDataflowConnection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowConnection"
  },
  {
    "label": "FDataflowNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowNode"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "GraphConnectionTypeName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GraphConnectionTypeName()"
  },
  {
    "label": "DeepCopy()",
    "kind": "Method",
    "detail": "Function (T)",
    "insertText": "DeepCopy(const T&)"
  },
  {
    "label": "SetAsAnyType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsAnyType(bool bAnyType, const FName& ConcreteType)"
  },
  {
    "label": "ForceSimpleType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceSimpleType(FName InType)"
  },
  {
    "label": "FixAndPropagateType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixAndPropagateType()"
  },
  {
    "label": "SetConcreteType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetConcreteType(FName InType)"
  },
  {
    "label": "FDataflowConnection()",
    "kind": "Method",
    "detail": "Function (DATAFLOWCORE_API)",
    "insertText": "FDataflowConnection(UE::Dataflow::FPin::EDirection Direction, const UE::Dataflow::FConnectionParameters& Params)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Guid)"
  },
  {
    "label": "IsAnyType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnyType(const FName& InType)"
  },
  {
    "label": "SetTypePolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTypePolicy(IDataflowTypePolicy* InTypePolicy)"
  },
  {
    "label": "InitFromType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromType()"
  }
]