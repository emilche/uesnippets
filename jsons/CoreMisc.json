[
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FSelfRegisteringExec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSelfRegisteringExec"
  },
  {
    "label": "FStaticSelfRegisteringExec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticSelfRegisteringExec"
  },
  {
    "label": "FStaticSelfRegisteringExec_Dev",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticSelfRegisteringExec_Dev"
  },
  {
    "label": "FStaticSelfRegisteringExec_Editor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticSelfRegisteringExec_Editor"
  },
  {
    "label": "FContextSupplier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContextSupplier"
  },
  {
    "label": "FMaintenance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaintenance"
  },
  {
    "label": "FDerivedDataCacheInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataCacheInterface"
  },
  {
    "label": "ITargetPlatformManagerModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformManagerModule"
  },
  {
    "label": "FUrlConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUrlConfig"
  },
  {
    "label": "FBoolConfigValueHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoolConfigValueHelper"
  },
  {
    "label": "CORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CORE_API"
  },
  {
    "label": "FScopedScriptExceptionHandler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedScriptExceptionHandler"
  },
  {
    "label": "FAutoNamedEventsToggler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutoNamedEventsToggler"
  },
  {
    "label": "FSelfRegisteringExec()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreGlobals . h \" # include \" CoreTypes . h \" # include \" HAL / PlatformProperties . h \" # include \" HAL / ThreadSingleton . h \" # include \" Logging / LogVerbosity . h \" # include \" Math / IntPoint . h \" # include \" Misc / Build . h \" # include \" Misc / Exec . h \" # include \" Templates / Function . h \" # include \" UObject / NameTypes . h \" class FOutputDevice ; class UWorld ; class FSelfRegisteringExec : public FExec { public :)",
    "insertText": "FSelfRegisteringExec()"
  },
  {
    "label": "StaticExec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StaticExec(UWorld* Inworld, const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "FStaticSelfRegisteringExec()",
    "kind": "Method",
    "detail": "Function (} ; class FStaticSelfRegisteringExec : public FSelfRegisteringExec { public :)",
    "insertText": "FStaticSelfRegisteringExec(bool (*InStaticExecFunc)(UWorld* Inworld, const TCHAR* Cmd,FOutputDevice& Ar))"
  },
  {
    "label": "Exec()",
    "kind": "Method",
    "detail": "Function (# if UE_ALLOW_EXEC_COMMANDS bool)",
    "insertText": "Exec(UWorld* InWorld, const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (# endif private :)",
    "insertText": "bool(*StaticExecFunc)(UWorld* Inworld, const TCHAR* Cmd,FOutputDevice& Ar)"
  },
  {
    "label": "FStaticSelfRegisteringExec_Dev()",
    "kind": "Method",
    "detail": "Function (} ; class FStaticSelfRegisteringExec_Dev : public FSelfRegisteringExec { public :)",
    "insertText": "FStaticSelfRegisteringExec_Dev(bool (*InStaticExecFunc)(UWorld* Inworld, const TCHAR* Cmd, FOutputDevice& Ar))"
  },
  {
    "label": "Exec_Dev()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Exec_Dev(UWorld* InWorld, const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "FStaticSelfRegisteringExec_Editor()",
    "kind": "Method",
    "detail": "Function (} ; class FStaticSelfRegisteringExec_Editor : public FSelfRegisteringExec { public :)",
    "insertText": "FStaticSelfRegisteringExec_Editor(bool (*InStaticExecFunc)(UWorld* Inworld, const TCHAR* Cmd, FOutputDevice& Ar))"
  },
  {
    "label": "Exec_Editor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Exec_Editor(UWorld* InWorld, const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "bool(*StaticExecFunc)(UWorld* Inworld, const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "FContextSupplier()",
    "kind": "Method",
    "detail": "Function (} ; class FContextSupplier { public : ~)",
    "insertText": "FContextSupplier()"
  },
  {
    "label": "GetContext()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetContext()"
  },
  {
    "label": "DeleteOldLogs()",
    "kind": "Method",
    "detail": "Function (} ; struct FMaintenance { void)",
    "insertText": "DeleteOldLogs()"
  },
  {
    "label": "GetDerivedDataCache()",
    "kind": "Method",
    "detail": "Function (} ; class FDerivedDataCacheInterface*)",
    "insertText": "GetDerivedDataCache()"
  },
  {
    "label": "GetDerivedDataCacheRef()",
    "kind": "Method",
    "detail": "Function (class FDerivedDataCacheInterface&)",
    "insertText": "GetDerivedDataCacheRef()"
  },
  {
    "label": "TryGetDerivedDataCache()",
    "kind": "Method",
    "detail": "Function (class FDerivedDataCacheInterface*)",
    "insertText": "TryGetDerivedDataCache()"
  },
  {
    "label": "GetTargetPlatformManager()",
    "kind": "Method",
    "detail": "Function (class ITargetPlatformManagerModule*)",
    "insertText": "GetTargetPlatformManager(bool bFailOnInitErrors = true)"
  },
  {
    "label": "GetTargetPlatformManagerRef()",
    "kind": "Method",
    "detail": "Function (class ITargetPlatformManagerModule&)",
    "insertText": "GetTargetPlatformManagerRef()"
  },
  {
    "label": "WillNeedAudioVisualData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillNeedAudioVisualData()"
  },
  {
    "label": "IsRunningGame()",
    "kind": "Method",
    "detail": "Function (# else return false ; # endif } bool)",
    "insertText": "IsRunningGame()"
  },
  {
    "label": "IsRunningClientOnly()",
    "kind": "Method",
    "detail": "Function (# else return false ; # endif } bool)",
    "insertText": "IsRunningClientOnly()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (# else return false ; # endif } struct FUrlConfig { FString DefaultProtocol ; FString DefaultName ; FString DefaultHost ; FString DefaultPortal ; FString DefaultSaveExt ; int32 DefaultPort ; void)",
    "insertText": "Init()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "StringHasBadDashes()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "StringHasBadDashes(const TCHAR* Str)"
  },
  {
    "label": "FBoolConfigValueHelper()",
    "kind": "Method",
    "detail": "Function (struct FBoolConfigValueHelper { private : bool bValue ; public :)",
    "insertText": "FBoolConfigValueHelper(const TCHAR* Section, const TCHAR* Key, const FString& Filename = GEditorIni)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "bool()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (class FScriptExceptionHandler : public TThreadSingleton<FScriptExceptionHandler> { public : FScriptExceptionHandler&)",
    "insertText": "Get()"
  },
  {
    "label": "PushExceptionHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushExceptionHandler(const FScriptExceptionHandlerFunc& InFunc)"
  },
  {
    "label": "PopExceptionHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopExceptionHandler()"
  },
  {
    "label": "HandleException()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleException(ELogVerbosity::Type Verbosity, const TCHAR* ExceptionMessage, const TCHAR* StackMessage)"
  },
  {
    "label": "AssertionExceptionHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssertionExceptionHandler(ELogVerbosity::Type Verbosity, const TCHAR* ExceptionMessage, const TCHAR* StackMessage)"
  },
  {
    "label": "LoggingExceptionHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoggingExceptionHandler(ELogVerbosity::Type Verbosity, const TCHAR* ExceptionMessage, const TCHAR* StackMessage)"
  },
  {
    "label": "FScopedScriptExceptionHandler()",
    "kind": "Method",
    "detail": "Function (private : FScriptExceptionHandlerFunc DefaultExceptionHandler ; TArray<FScriptExceptionHandlerFunc,TInlineAllocator<4>> ExceptionHandlerStack ; } ; struct FScopedScriptExceptionHandler {)",
    "insertText": "FScopedScriptExceptionHandler(const FScriptExceptionHandlerFunc& InFunc)"
  },
  {
    "label": "FScopedScriptExceptionHandler()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FScopedScriptExceptionHandler()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (} ; class FAutoNamedEventsToggler { public : void)",
    "insertText": "Update(bool bIsProfiling)"
  }
]