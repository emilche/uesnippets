[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FStructOnScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructOnScope"
  },
  {
    "label": "IMovieSceneEasingFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieSceneEasingFunction"
  },
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEasingComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEasingComponentData"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "FFrameRate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameRate"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FKeyHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyHandle"
  },
  {
    "label": "FMovieSceneBlendTypeField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBlendTypeField"
  },
  {
    "label": "FMovieSceneChannelProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannelProxy"
  },
  {
    "label": "FMovieSceneEvalTemplatePtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvalTemplatePtr"
  },
  {
    "label": "FMovieSceneSequenceHierarchy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceHierarchy"
  },
  {
    "label": "FMovieSceneSequenceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceID"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FQualifiedFrameTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQualifiedFrameTime"
  },
  {
    "label": "FMovieSceneTimeWarpVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeWarpVariant"
  },
  {
    "label": "ISectionEventHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISectionEventHandler"
  },
  {
    "label": "FEntityImportParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityImportParams"
  },
  {
    "label": "FFixedObjectBindingID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFixedObjectBindingID"
  },
  {
    "label": "FImportedEntity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportedEntity"
  },
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMovieSceneSectionEvalOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSectionEvalOptions"
  },
  {
    "label": "FMovieSceneEasingSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEasingSettings"
  },
  {
    "label": "FMovieSceneTimecodeSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimecodeSource"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "TryModify()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryModify(bool bAlwaysMarkDirty=true)"
  },
  {
    "label": "SetStartFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStartFrame(TRangeBound<FFrameNumber> NewStartFrame)"
  },
  {
    "label": "SetEndFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEndFrame(TRangeBound<FFrameNumber> NewEndFrame)"
  },
  {
    "label": "MoveSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveSection(FFrameNumber DeltaTime)"
  },
  {
    "label": "TrimSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimSection(FQualifiedFrameTime TrimTime, bool bTrimLeft, bool bDeleteKeys)"
  },
  {
    "label": "GetKeyStruct()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FStructOnScope>)",
    "insertText": "GetKeyStruct(TArrayView<const FKeyHandle> KeyHandles)"
  },
  {
    "label": "SetRowIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRowIndex(int32 NewRowIndex)"
  },
  {
    "label": "InitialPlacement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitialPlacement(const TArray<UMovieSceneSection*>& Sections, FFrameNumber InStartTime, int32 InDuration, bool bAllowMultipleRows)"
  },
  {
    "label": "InitialPlacementOnRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitialPlacementOnRow(const TArray<UMovieSceneSection*>& Sections, FFrameNumber InStartTime, int32 InDuration, int32 InRowIndex)"
  },
  {
    "label": "SetColorTint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColorTint(const FColor& InColorTint)"
  },
  {
    "label": "GetOverlappingSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOverlappingSections(TArray<UMovieSceneSection*>& OutSections, bool bSameRow, bool bIncludeThis)"
  },
  {
    "label": "InvalidateChannelProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateChannelProxy()"
  },
  {
    "label": "EvaluateEasing()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EvaluateEasing(InTime)"
  },
  {
    "label": "PostPaste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPaste()"
  },
  {
    "label": "RemoveForCook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveForCook()"
  },
  {
    "label": "BuildDefaultComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildDefaultComponents(UMovieSceneEntitySystemLinker* EntityLinker, const UE::MovieScene::FEntityImportParams& Params, UE::MovieScene::FImportedEntity* OutLedgerEntry)"
  },
  {
    "label": "DeclareConstructClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeclareConstructClasses(TArray<FTopLevelAssetPath>& OutConstructClasses, const UClass* SpecificSubclass)"
  },
  {
    "label": "FixupRelativeKeyframes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupRelativeKeyframes(FFrameNumber Offset)"
  },
  {
    "label": "CacheChannelProxy()",
    "kind": "Method",
    "detail": "Function (EMovieSceneChannelProxyType)",
    "insertText": "CacheChannelProxy()"
  },
  {
    "label": "MoveSectionImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveSectionImpl(FFrameNumber DeltaTime)"
  }
]