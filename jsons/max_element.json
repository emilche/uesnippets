[
  {
    "label": "_Compare",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Compare"
  },
  {
    "label": "_ForwardIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_ForwardIterator"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_MAX_ELEMENT_H # define _LIBCPP___ALGORITHM_MAX_ELEMENT_H # include<__algorithm / comp . h> # include<__algorithm / comp_ref_type . h> # include<__config> # include<__iterator / iterator_traits . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _Compare, class _ForwardIterator> inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 _ForwardIterator __max_element(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (_ForwardIterator __i = __first ;)",
    "insertText": "while(++__i != __last) if (__comp(*__first, *__i))"
  },
  {
    "label": "max_element()",
    "kind": "Method",
    "detail": "Function (} return __first ; } template<class _ForwardIterator,class _Compare> _LIBCPP_NODISCARD_EXT _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 _ForwardIterator)",
    "insertText": "max_element(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp)"
  },
  {
    "label": "_Comp_ref()",
    "kind": "Method",
    "detail": "Function (typedef __comp_ref_type<_Compare>::type _Comp_ref ; return _VSTD::__max_element<)",
    "insertText": "_Comp_ref(__first, __last, __comp)"
  },
  {
    "label": "max_element()",
    "kind": "Method",
    "detail": "Function (} template<class _ForwardIterator> _LIBCPP_NODISCARD_EXT _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 _ForwardIterator)",
    "insertText": "max_element(_ForwardIterator __first, _ForwardIterator __last)"
  }
]