[
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "FCollisionEventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionEventData"
  },
  {
    "label": "FBreakingEventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBreakingEventData"
  },
  {
    "label": "FSleepingEventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSleepingEventData"
  },
  {
    "label": "FRemovalEventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRemovalEventData"
  },
  {
    "label": "FCrumblingEventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCrumblingEventData"
  },
  {
    "label": "FBreakingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBreakingData"
  },
  {
    "label": "FBreakEventCallbackWrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBreakEventCallbackWrapper"
  },
  {
    "label": "FRemovalEventCallbackWrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRemovalEventCallbackWrapper"
  },
  {
    "label": "FCrumblingEventCallbackWrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCrumblingEventCallbackWrapper"
  },
  {
    "label": "FChaosHandlerSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosHandlerSet"
  },
  {
    "label": "FChaosPendingCollisionNotify",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosPendingCollisionNotify"
  },
  {
    "label": "UChaosGameplayEventDispatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChaosGameplayEventDispatcher"
  },
  {
    "label": "FUniqueContactPairKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniqueContactPairKey"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ChaosEventListenerComponent . h \" # include \" PhysicsPublic . h \" # include \" Physics / Experimental / ChaosEventType . h \" # include \" ChaosNotifyHandlerInterface . h \" # include \" ChaosGameplayEventDispatcher . generated . h \" struct FBodyInstance ; namespace Chaos { struct FCollisionEventData ; struct FBreakingEventData ; struct FSleepingEventData ; struct FRemovalEventData ; struct FCrumblingEventData ; struct FBreakingData ; } typedef TFunction<)",
    "insertText": "void(const FChaosBreakEvent&)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; typedef TFunction<)",
    "insertText": "void(const FChaosRemovalEvent&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; typedef TFunction<)",
    "insertText": "void(const FChaosCrumblingEvent&)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ; struct FChaosPendingCollisionNotify { FChaosPhysicsCollisionInfo CollisionInfo ; TSet<TObjectPtr<UObject>> NotifyRecipients ; } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: CHAOSSOLVERENGINE_API UChaosGameplayEventDispatcher()"
  },
  {
    "label": "OnRegister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRegister()"
  },
  {
    "label": "OnUnregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnregister()"
  },
  {
    "label": "RegisterChaosEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterChaosEvents()"
  },
  {
    "label": "UnregisterChaosEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterChaosEvents()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (private : struct FUniqueContactPairKey { const void* Body0 ; const void* Body1 ; bool)",
    "insertText": "operator(const FUniqueContactPairKey& Lhs, const FUniqueContactPairKey& Rhs)"
  },
  {
    "label": "GetPendingCollisionForContactPair()",
    "kind": "Method",
    "detail": "Function (} } ; FCollisionNotifyInfo&)",
    "insertText": "GetPendingCollisionForContactPair(const void* P0, const void* P1, bool& bNewEntry)"
  },
  {
    "label": "GetPendingChaosCollisionForContactPair()",
    "kind": "Method",
    "detail": "Function (TMap<FUniqueContactPairKey,int32> ContactPairToPendingNotifyMap ; FChaosPendingCollisionNotify&)",
    "insertText": "GetPendingChaosCollisionForContactPair(const void* P0, const void* P1, bool& bNewEntry)"
  },
  {
    "label": "RegisterForCollisionEvents()",
    "kind": "Method",
    "detail": "Function (TMap<FUniqueContactPairKey,int32> ContactPairToPendingChaosNotifyMap ; TArray<FChaosPendingCollisionNotify> PendingChaosCollisionNotifies ; TArray<FCollisionNotifyInfo> PendingCollisionNotifies ; public : void)",
    "insertText": "RegisterForCollisionEvents(UPrimitiveComponent* ComponentToListenTo, UObject* ObjectToNotify)"
  },
  {
    "label": "UnRegisterForCollisionEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnRegisterForCollisionEvents(UPrimitiveComponent* ComponentToListenTo, UObject* ObjectToNotify)"
  },
  {
    "label": "RegisterForBreakEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterForBreakEvents(UPrimitiveComponent* Component, FOnBreakEventCallback InFunc)"
  },
  {
    "label": "UnRegisterForBreakEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnRegisterForBreakEvents(UPrimitiveComponent* Component)"
  },
  {
    "label": "RegisterForRemovalEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterForRemovalEvents(UPrimitiveComponent* Component, FOnRemovalEventCallback InFunc)"
  },
  {
    "label": "UnRegisterForRemovalEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnRegisterForRemovalEvents(UPrimitiveComponent* Component)"
  },
  {
    "label": "RegisterForCrumblingEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterForCrumblingEvents(UPrimitiveComponent* Component, FOnCrumblingEventCallback InFunc)"
  },
  {
    "label": "UnRegisterForCrumblingEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnRegisterForCrumblingEvents(UPrimitiveComponent* Component)"
  },
  {
    "label": "DispatchPendingCollisionNotifies()",
    "kind": "Method",
    "detail": "Function (float LastCollisionDataTime = - 1 . f ; float LastBreakingDataTime = - 1 . f ; float LastRemovalDataTime = - 1 . f ; float LastCrumblingDataTime = - 1 . f ; void)",
    "insertText": "DispatchPendingCollisionNotifies()"
  },
  {
    "label": "FillPhysicsProxy()",
    "kind": "Method",
    "detail": "Function (template<EventIterator> void)",
    "insertText": "FillPhysicsProxy(FPhysScene_Chaos& Scene, TArray<UObject*>& Result, EventIterator& It)"
  },
  {
    "label": "GetInterestedProxyOwnersForCollisionEvents()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "GetInterestedProxyOwnersForCollisionEvents()"
  },
  {
    "label": "GetInterestedProxyOwnersForBreakingEvents()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "GetInterestedProxyOwnersForBreakingEvents()"
  },
  {
    "label": "GetInterestedProxyOwnersForRemovalEvents()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "GetInterestedProxyOwnersForRemovalEvents()"
  },
  {
    "label": "GetInterestedProxyOwnersForCrumblingEvents()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "GetInterestedProxyOwnersForCrumblingEvents()"
  },
  {
    "label": "HandleCollisionEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCollisionEvents(const Chaos::FCollisionEventData& CollisionData)"
  },
  {
    "label": "HandleBreakingEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBreakingEvents(const Chaos::FBreakingEventData& BreakingData)"
  },
  {
    "label": "HandleSleepingEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSleepingEvents(const Chaos::FSleepingEventData& SleepingData)"
  },
  {
    "label": "HandleRemovalEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRemovalEvents(const Chaos::FRemovalEventData& RemovalData)"
  },
  {
    "label": "HandleCrumblingEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCrumblingEvents(const Chaos::FCrumblingEventData& CrumblingData)"
  }
]