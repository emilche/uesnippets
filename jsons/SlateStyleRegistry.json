[
  {
    "label": "ISlateStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateStyle"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FSlateStyleRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateStyleRegistry"
  },
  {
    "label": "RegisterSlateStyle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class ISlateStyle ; struct FSlateBrush ; class FSlateStyleRegistry { public : void)",
    "insertText": "RegisterSlateStyle(const ISlateStyle& InSlateStyle)"
  },
  {
    "label": "UnRegisterSlateStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnRegisterSlateStyle(const ISlateStyle& InSlateStyle)"
  },
  {
    "label": "UnRegisterSlateStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnRegisterSlateStyle(const FName StyleSetName)"
  },
  {
    "label": "FindSlateStyle()",
    "kind": "Method",
    "detail": "Function (const ISlateStyle*)",
    "insertText": "FindSlateStyle(const FName& InSlateStyleName)"
  },
  {
    "label": "IterateAllStyles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IterateAllStyles(const TFunctionRef<bool(const ISlateStyle&)>& Iter)"
  },
  {
    "label": "GetAllResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllResources(TArray<const FSlateBrush*>& OutResources)"
  },
  {
    "label": "GetSylesUsingBrush()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetSylesUsingBrush(const FName BrushName)"
  }
]