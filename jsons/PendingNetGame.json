[
  {
    "label": "UEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEngine"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "FWorldContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldContext"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "UDemoNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDemoNetDriver"
  },
  {
    "label": "UChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChannel"
  },
  {
    "label": "FInBunch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInBunch"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / Object . h \" # include \" Engine / EngineBaseTypes . h \" # include \" NetworkDelegates . h \" # include \" PendingNetGame . generated . h \" class UEngine ; class UNetConnection ; class UNetDriver ; struct FWorldContext ;)",
    "insertText": "UCLASS(customConstructor, transient)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY()"
  },
  {
    "label": "GetDemoNetDriver()",
    "kind": "Method",
    "detail": "Function (public : UDemoNetDriver*)",
    "insertText": "GetDemoNetDriver()"
  },
  {
    "label": "FinalizeEncryptedConnection()",
    "kind": "Method",
    "detail": "Function (DemoNetDriver = InDemoNetDriver ; } void)",
    "insertText": "FinalizeEncryptedConnection(const FEncryptionKeyResponse& Response, TWeakObjectPtr<UNetConnection> WeakConnection)"
  },
  {
    "label": "SetEncryptionKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncryptionKey(const FEncryptionKeyResponse& Response)"
  },
  {
    "label": "HasFailedTravel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasFailedTravel()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bFailedTravel = bInFailedTravel ; } public : FURL URL ; bool bSuccessfullyConnected ; bool bSentJoinRequest ; bool bLoadedMapSuccessfully ; private : bool bFailedTravel ; public : FString ConnectionError ; void)",
    "insertText": "Initialize(const FURL& InURL)"
  },
  {
    "label": "UPendingNetGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UPendingNetGame(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "InitNetDriver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitNetDriver()"
  },
  {
    "label": "BeginHandshake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginHandshake()"
  },
  {
    "label": "SendInitialJoin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendInitialJoin()"
  },
  {
    "label": "NotifyAcceptingConnection()",
    "kind": "Method",
    "detail": "Function (EAcceptConnection::Type)",
    "insertText": "NotifyAcceptingConnection()"
  },
  {
    "label": "NotifyAcceptedConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAcceptedConnection(class UNetConnection* Connection)"
  },
  {
    "label": "NotifyAcceptingChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotifyAcceptingChannel(class UChannel* Channel)"
  },
  {
    "label": "NotifyControlMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyControlMessage(UNetConnection* Connection, uint8 MessageType, class FInBunch& Bunch)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "GetNetDriver()",
    "kind": "Method",
    "detail": "Function (UNetDriver*)",
    "insertText": "GetNetDriver()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "FinishDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishDestroy()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "InitPeerListen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitPeerListen()"
  },
  {
    "label": "LoadMapCompleted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadMapCompleted(UEngine* Engine, FWorldContext& Context, bool bLoadedMapSuccessfully, const FString& LoadMapError)"
  },
  {
    "label": "TravelCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TravelCompleted(UEngine* Engine, FWorldContext& Context)"
  }
]