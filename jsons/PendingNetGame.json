[
  {
    "label": "UEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEngine"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "FWorldContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldContext"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "UDemoNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDemoNetDriver"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "UChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChannel"
  },
  {
    "label": "FInBunch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInBunch"
  },
  {
    "label": "FinalizeEncryptedConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeEncryptedConnection(const FEncryptionKeyResponse& Response, TWeakObjectPtr<UNetConnection> WeakConnection)"
  },
  {
    "label": "SetEncryptionKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncryptionKey(const FEncryptionKeyResponse& Response)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const FURL& InURL)"
  },
  {
    "label": "InitNetDriver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitNetDriver()"
  },
  {
    "label": "BeginHandshake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginHandshake()"
  },
  {
    "label": "SendInitialJoin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendInitialJoin()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick( float DeltaTime )"
  },
  {
    "label": "SendJoin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendJoin()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "InitPeerListen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitPeerListen()"
  },
  {
    "label": "LoadMapCompleted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadMapCompleted(UEngine* Engine, FWorldContext& Context, bool bLoadedMapSuccessfully, const FString& LoadMapError)"
  },
  {
    "label": "TravelCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TravelCompleted(UEngine* Engine, FWorldContext& Context)"
  }
]