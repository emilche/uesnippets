[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTextureReference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureReference"
  },
  {
    "label": "FTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureResource"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "ITargetPlatformSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformSettings"
  },
  {
    "label": "UAssetUserData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetUserData"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FValueId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FValueId"
  },
  {
    "label": "FTextureSourceLayerColorInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureSourceLayerColorInfo"
  },
  {
    "label": "FTextureSourceBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureSourceBlock"
  },
  {
    "label": "FTextureSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureSource"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMipData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMipData"
  },
  {
    "label": "IImageWrapperModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IImageWrapperModule"
  },
  {
    "label": "IImageWrapperModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IImageWrapperModule"
  },
  {
    "label": "IImageWrapperModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IImageWrapperModule"
  },
  {
    "label": "format",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "format"
  },
  {
    "label": "FMipAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMipAllocation"
  },
  {
    "label": "FDeleterFree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeleterFree"
  },
  {
    "label": "FMipData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMipData"
  },
  {
    "label": "FTextureSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureSource"
  },
  {
    "label": "FMipLock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMipLock"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "UTextureCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCube"
  },
  {
    "label": "UVolumeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVolumeTexture"
  },
  {
    "label": "UTexture2DArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2DArray"
  },
  {
    "label": "UTextureCubeArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCubeArray"
  },
  {
    "label": "IImageWrapperModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IImageWrapperModule"
  },
  {
    "label": "ETextureSourceCompressionFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureSourceCompressionFormat"
  },
  {
    "label": "ETextureSourceFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureSourceFormat"
  },
  {
    "label": "ETextureSourceFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureSourceFormat"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "FOptTexturePlatformData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptTexturePlatformData"
  },
  {
    "label": "FTexturePlatformData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTexturePlatformData"
  },
  {
    "label": "FTexture2DMipMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTexture2DMipMap"
  },
  {
    "label": "FVirtualTextureBuiltData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureBuiltData"
  },
  {
    "label": "FSharedImage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedImage"
  },
  {
    "label": "FTextureEncodeResultMetadata",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureEncodeResultMetadata"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ETextureEncodeEffort",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureEncodeEffort"
  },
  {
    "label": "ETextureUniversalTiling",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureUniversalTiling"
  },
  {
    "label": "FStructuredDerivedDataKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructuredDerivedDataKey"
  },
  {
    "label": "FTextureAsyncCacheDerivedDataTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureAsyncCacheDerivedDataTask"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "FTextureBuildSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureBuildSettings"
  },
  {
    "label": "FTextureBuildSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureBuildSettings"
  },
  {
    "label": "ITextureCompressorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextureCompressorModule"
  },
  {
    "label": "FTextureFormatSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureFormatSettings"
  },
  {
    "label": "TextureCompressionSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureCompressionSettings"
  },
  {
    "label": "FTextureSourceColorSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureSourceColorSettings"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UAssetImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetImportData"
  },
  {
    "label": "ETextureCompressionQuality",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureCompressionQuality"
  },
  {
    "label": "ETexturePowerOfTwoSetting",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETexturePowerOfTwoSetting"
  },
  {
    "label": "TextureMipGenSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureMipGenSettings"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "ECompositeTextureMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECompositeTextureMode"
  },
  {
    "label": "TextureCompressionSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureCompressionSettings"
  },
  {
    "label": "TextureFilter",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureFilter"
  },
  {
    "label": "TextureCookPlatformTilingSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureCookPlatformTilingSettings"
  },
  {
    "label": "TextureGroup",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureGroup"
  },
  {
    "label": "FTextureEditorCustomEncode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureEditorCustomEncode"
  },
  {
    "label": "FTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureResource"
  },
  {
    "label": "FTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureResource"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "FTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureResource"
  },
  {
    "label": "FVirtualTextureBuildSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureBuildSettings"
  },
  {
    "label": "ITargetPlatformSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformSettings"
  },
  {
    "label": "ITargetPlatformControls",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformControls"
  },
  {
    "label": "ITargetPlatformSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformSettings"
  },
  {
    "label": "ITargetPlatformControls",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformControls"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "ITextureCompressorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextureCompressorModule"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "for",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "for"
  },
  {
    "label": "UEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnum"
  },
  {
    "label": "FTextureCompilingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureCompilingManager"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTextureSourceBlock()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FTextureSourceBlock()"
  },
  {
    "label": "FTextureSource()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FTextureSource()"
  },
  {
    "label": "GetBytesPerPixel()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetBytesPerPixel(ETextureSourceFormat Format)"
  },
  {
    "label": "InitBlocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBlocked(const ETextureSourceFormat* InLayerFormats,\n\t\tconst FTextureSourceBlock* InBlocks,\n\t\tint32 InNumLayers,\n\t\tint32 InNumBlocks,\n\t\tconst uint8** InDataPerBlock)"
  },
  {
    "label": "InitBlocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBlocked(const ETextureSourceFormat* InLayerFormats,\n\t\tconst FTextureSourceBlock* InBlocks,\n\t\tint32 InNumLayers,\n\t\tint32 InNumBlocks,\n\t\tUE::Serialization::FEditorBulkData::FSharedBufferWithID NewData)"
  },
  {
    "label": "InitLayered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitLayered(\n\t\tint32 NewSizeX,\n\t\tint32 NewSizeY,\n\t\tint32 NewNumSlices,\n\t\tint32 NewNumLayers,\n\t\tint32 NewNumMips,\n\t\tconst ETextureSourceFormat* NewLayerFormat,\n\t\tconst uint8* NewData = NULL\n\t\t)"
  },
  {
    "label": "InitLayered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitLayered(\n\t\tint32 NewSizeX,\n\t\tint32 NewSizeY,\n\t\tint32 NewNumSlices,\n\t\tint32 NewNumLayers,\n\t\tint32 NewNumMips,\n\t\tconst ETextureSourceFormat* NewLayerFormat,\n\t\tUE::Serialization::FEditorBulkData::FSharedBufferWithID NewData\n\t)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(\n\t\tint32 NewSizeX,\n\t\tint32 NewSizeY,\n\t\tint32 NewNumSlices,\n\t\tint32 NewNumMips,\n\t\tETextureSourceFormat NewFormat,\n\t\tconst uint8* NewData = NULL\n\t\t)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FImageView & Image)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(\n\t\tint32 NewSizeX,\n\t\tint32 NewSizeY,\n\t\tint32 NewNumSlices,\n\t\tint32 NewNumMips,\n\t\tETextureSourceFormat NewFormat,\n\t\tUE::Serialization::FEditorBulkData::FSharedBufferWithID NewData\n\t)"
  },
  {
    "label": "Init2DWithMipChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init2DWithMipChain(\n\t\tint32 NewSizeX,\n\t\tint32 NewSizeY,\n\t\tETextureSourceFormat NewFormat\n\t\t)"
  },
  {
    "label": "InitLayered2DWithMipChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitLayered2DWithMipChain(\n\t\tint32 NewSizeX,\n\t\tint32 NewSizeY,\n\t\tint32 NewNumLayers,\n\t\tconst ETextureSourceFormat* NewFormat\n\t)"
  },
  {
    "label": "InitCubeWithMipChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitCubeWithMipChain(\n\t\tint32 NewSizeX,\n\t\tint32 NewSizeY,\n\t\tETextureSourceFormat NewFormat\n\t\t)"
  },
  {
    "label": "InitWithCompressedSourceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWithCompressedSourceData(\n\t\tint32 NewSizeX,\n\t\tint32 NewSizeY,\n\t\tint32 NewNumMips,\n\t\tETextureSourceFormat NewFormat,\n\t\tconst TArrayView64<uint8> NewSourceData,\n\t\tETextureSourceCompressionFormat NewSourceFormat\n\t)"
  },
  {
    "label": "InitWithCompressedSourceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWithCompressedSourceData(\n\t\tint32 NewSizeX,\n\t\tint32 NewSizeY,\n\t\tint32 NewNumMips,\n\t\tETextureSourceFormat NewFormat,\n\t\tUE::Serialization::FEditorBulkData::FSharedBufferWithID NewSourceData,\n\t\tETextureSourceCompressionFormat NewSourceFormat\n\t)"
  },
  {
    "label": "Compress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compress()"
  },
  {
    "label": "ForceGenerateGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceGenerateGuid()"
  },
  {
    "label": "UnlockMip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockMip(int32 BlockIndex, int32 LayerIndex, int32 MipIndex)"
  },
  {
    "label": "GetMipData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMipData(TArray64<uint8>& OutMipData, int32 BlockIndex, int32 LayerIndex, int32 MipIndex, class IImageWrapperModule* ImageWrapperModule = nullptr)"
  },
  {
    "label": "GetMipData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetMipData(OutMipData, 0, 0, MipIndex, ImageWrapperModule)"
  },
  {
    "label": "GetMipImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMipImage(FImage & OutImage, int32 BlockIndex, int32 LayerIndex, int32 MipIndex)"
  },
  {
    "label": "GetMipImage()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetMipImage(OutImage, 0, 0, MipIndex)"
  },
  {
    "label": "GetMipData()",
    "kind": "Method",
    "detail": "Function (FMipData)",
    "insertText": "GetMipData(class IImageWrapperModule* ImageWrapperModule)"
  },
  {
    "label": "IsBlockPowerOfTwo()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsBlockPowerOfTwo(BlockIndex)"
  },
  {
    "label": "RemoveCompression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCompression()"
  },
  {
    "label": "ExportCustomProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportCustomProperties(FOutputDevice& Out, uint32 Indent)"
  },
  {
    "label": "ImportCustomProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportCustomProperties(const TCHAR* SourceText, FFeedbackContext* Warn)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetBulkDataPayload()",
    "kind": "Method",
    "detail": "Function (FSharedBuffer)",
    "insertText": "GetBulkDataPayload()"
  },
  {
    "label": "SetId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetId(const FGuid& InId, bool bInGuidIsHash)"
  },
  {
    "label": "CalcMipSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CalcMipSize(0, 0, MipIndex)"
  },
  {
    "label": "LockMipReadOnly()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "LockMipReadOnly(0, 0, MipIndex)"
  },
  {
    "label": "LockMip()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "LockMip(0, 0, MipIndex)"
  },
  {
    "label": "FMipAllocation()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMipAllocation(FMipAllocation&&)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetDataReadWriteView()",
    "kind": "Method",
    "detail": "Function (FMutableMemoryView)",
    "insertText": "GetDataReadWriteView()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (FSharedBuffer)",
    "insertText": "Release()"
  },
  {
    "label": "CreateReadWriteBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateReadWriteBuffer(const void* SrcData, int64 DataLength)"
  },
  {
    "label": "FMipData()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMipData(const FTextureSource& InSource, FSharedBuffer InData)"
  },
  {
    "label": "FMipLock()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMipLock(ELockState InLockState,FTextureSource * InTextureSource,int32 InBlockIndex, int32 InLayerIndex, int32 InMipIndex)"
  },
  {
    "label": "FMipLock()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMipLock(ELockState InLockState,FTextureSource * InTextureSource,int32 InMipIndex)"
  },
  {
    "label": "FMipLock()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMipLock(FMipLock&&)"
  },
  {
    "label": "CheckTextureIsUnlocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckTextureIsUnlocked(const TCHAR* DebugMessage)"
  },
  {
    "label": "LockMipInternal()",
    "kind": "Method",
    "detail": "Function (FMutableMemoryView)",
    "insertText": "LockMipInternal(int32 BlockIndex, int32 LayerIndex, int32 MipIndex, ELockState RequestedLockState, FImageInfo & OutImageInfo)"
  },
  {
    "label": "InitLayeredImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitLayeredImpl(\n\t\tint32 NewSizeX,\n\t\tint32 NewSizeY,\n\t\tint32 NewNumSlices,\n\t\tint32 NewNumLayers,\n\t\tint32 NewNumMips,\n\t\tconst ETextureSourceFormat* NewLayerFormat)"
  },
  {
    "label": "InitBlockedImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBlockedImpl(const ETextureSourceFormat* InLayerFormats,\n\t\tconst FTextureSourceBlock* InBlocks,\n\t\tint32 InNumLayers,\n\t\tint32 InNumBlocks)"
  },
  {
    "label": "EnsureBlocksAreSorted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnsureBlocksAreSorted()"
  },
  {
    "label": "UpdateChannelLinearMinMax()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateChannelLinearMinMax()"
  },
  {
    "label": "SetLayerColorInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerColorInfo(const TArray<FTextureSourceLayerColorInfo> & InLayerColorInfo)"
  },
  {
    "label": "ResetLayerColorInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetLayerColorInfo()"
  },
  {
    "label": "UpdateChannelMinMaxFromIncomingTextureData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateChannelMinMaxFromIncomingTextureData(FMemoryView InNewTextureData)"
  },
  {
    "label": "UseHashAsGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseHashAsGuid()"
  },
  {
    "label": "FTexturePlatformData()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FTexturePlatformData()"
  },
  {
    "label": "TryLoadMips()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLoadMips(int32 FirstMipToLoad, void** OutMipData, FStringView DebugContext)"
  },
  {
    "label": "TryLoadMipsWithSizes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLoadMipsWithSizes(int32 FirstMipToLoad, void** OutMipData, int64 * OutMipSize, FStringView DebugContext)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, class UTexture* Owner)"
  },
  {
    "label": "MakeMipId()",
    "kind": "Method",
    "detail": "Function (UE::DerivedData::FValueId)",
    "insertText": "MakeMipId(int32 MipIndex)"
  },
  {
    "label": "SerializeCooked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeCooked(FArchive& Ar, class UTexture* Owner, bool bStreamable, const bool bSerializeMipData)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Cache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cache(\n\t\tclass UTexture& InTexture,\n\t\tconst struct FTextureBuildSettings* InSettingsPerLayerFetchFirst,\n\t\tconst struct FTextureBuildSettings* InSettingsPerLayerFetchOrBuild,\n\t\tconst FTexturePlatformData::FTextureEncodeResultMetadata* OutResultMetadataPerLayerFetchFirst,\n\t\tconst FTexturePlatformData::FTextureEncodeResultMetadata* OutResultMetadataPerLayerFetchOrBuild,\n\t\tuint32 InFlags,\n\t\tclass ITextureCompressorModule* Compressor)"
  },
  {
    "label": "FinishCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCache()"
  },
  {
    "label": "TryCancelCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCancelCache()"
  },
  {
    "label": "CancelCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelCache()"
  },
  {
    "label": "LaunchEstimateOnDiskSizeTask()",
    "kind": "Method",
    "detail": "Function (uint64>>)",
    "insertText": "LaunchEstimateOnDiskSizeTask(\n\t\tFOodleDataCompression::ECompressor InOodleCompressor,\n\t\tFOodleDataCompression::ECompressionLevel InOodleCompressionLevel,\n\t\tuint32 InCompressionBlockSize,\n\t\tFStringView InDebugContext)"
  },
  {
    "label": "UpdateColorSpaceChromaticities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateColorSpaceChromaticities()"
  },
  {
    "label": "NotifyIfCompositeTextureChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyIfCompositeTextureChanged()"
  },
  {
    "label": "NotifyIfCompositeTextureChanged()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS)",
    "insertText": "NotifyIfCompositeTextureChanged()"
  },
  {
    "label": "Blueprint_GetTextureSourceIdString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Blueprint_GetTextureSourceIdString(FString& OutTextureSourceId)"
  },
  {
    "label": "UTexture()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "UTexture(FVTableHelper& Helper)"
  },
  {
    "label": "SetResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResource(FTextureResource* Resource)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(UTexture::GetTextureClass, return ETextureClass::Invalid; )"
  },
  {
    "label": "ReleaseResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResource()"
  },
  {
    "label": "UpdateResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResource()"
  },
  {
    "label": "CalculateLODBias()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CalculateLODBias(true)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(UTexture::GetMaterialType,return MCT_Texture;)"
  },
  {
    "label": "IsVirtualTexturingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVirtualTexturingEnabled( const ITargetPlatformSettings * TargetPlatform = nullptr )"
  },
  {
    "label": "CleanupCachedRunningPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupCachedRunningPlatformData()"
  },
  {
    "label": "SerializeCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeCookedPlatformData(class FArchive& Ar, const bool bSerializeMipData = true)"
  },
  {
    "label": "CachePlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CachePlatformData(bool bAsyncCache = false, bool bAllowAsyncBuild = false, bool bAllowAsyncLoading = false, class ITextureCompressorModule* Compressor = nullptr)"
  },
  {
    "label": "BeginCachePlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCachePlatformData()"
  },
  {
    "label": "FinishCachePlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCachePlatformData()"
  },
  {
    "label": "ForceRebuildPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRebuildPlatformData(uint8 InEncodeSpeedOverride=255)"
  },
  {
    "label": "MarkPlatformDataTransient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkPlatformDataTransient()"
  },
  {
    "label": "SetLayerFormatSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerFormatSettings(int32 LayerIndex, const FTextureFormatSettings& InSettings)"
  },
  {
    "label": "ValidateSettingsAfterImportOrEdit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateSettingsAfterImportOrEdit(bool * pRequiresNotifyMaterials = nullptr)"
  },
  {
    "label": "UpdateOodleTextureSdkVersionToLatest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOodleTextureSdkVersionToLatest(bool bDoPrePostEditChangeIfChanging = false)"
  },
  {
    "label": "SetModernSettingsForNewOrChangedTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModernSettingsForNewOrChangedTexture()"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(UTexture::GetSurfaceWidth,return 0;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(UTexture::GetSurfaceHeight,return 0;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(UTexture::GetSurfaceDepth, return 0;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(UTexture::GetSurfaceArraySize, return 0;)"
  },
  {
    "label": "FGuid()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGuid()"
  },
  {
    "label": "IsDefaultTexture()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsDefaultTexture()"
  },
  {
    "label": "BlockOnAnyAsyncBuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockOnAnyAsyncBuild()"
  },
  {
    "label": "AppendToClassSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendToClassSchema(FAppendToClassSchemaContext& Context)"
  },
  {
    "label": "CancelPendingTextureStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelPendingTextureStreaming()"
  },
  {
    "label": "GetAverageBrightness()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAverageBrightness(bool bIgnoreTrueBlack, bool bUseGrayscale)"
  },
  {
    "label": "GetMipGenSettingsFromString()",
    "kind": "Method",
    "detail": "Function (TextureMipGenSettings)",
    "insertText": "GetMipGenSettingsFromString(const TCHAR* InStr, bool bTextureGroup)"
  },
  {
    "label": "ForceUpdateTextureStreaming()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ForceUpdateTextureStreaming()"
  },
  {
    "label": "SetDeterministicLightingGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDeterministicLightingGuid()"
  },
  {
    "label": "SetMinTextureResidentMipCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinTextureResidentMipCount(int32 InMinTextureResidentMipCount)"
  },
  {
    "label": "GetMaximumDimensionOfNonVT()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaximumDimensionOfNonVT()"
  },
  {
    "label": "TryCancelCachePlatformData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCancelCachePlatformData()"
  },
  {
    "label": "NotifyMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyMaterials(const ENotifyMaterialsEffectOnShaders EffectOnShaders = ENotifyMaterialsEffectOnShaders::Default)"
  },
  {
    "label": "BeginFinalReleaseResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginFinalReleaseResource()"
  }
]