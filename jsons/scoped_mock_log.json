[
  {
    "label": "absl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "absl"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ScopedMockLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedMockLog"
  },
  {
    "label": "ForwardingSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForwardingSink"
  },
  {
    "label": "log()",
    "kind": "Method",
    "detail": "Function (absl::ScopedMockLog)",
    "insertText": "log(absl::MockLogDefault::kDisallowUnexpected)"
  },
  {
    "label": "ScopedMockLog()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ScopedMockLog(\n      MockLogDefault default_exp = MockLogDefault::kIgnoreUnexpected)"
  },
  {
    "label": "StartCapturingLogs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartCapturingLogs()"
  },
  {
    "label": "StopCapturingLogs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopCapturingLogs()"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log(LogSeverity severity, absl::string_view file_path,\n  //            absl::string_view message)"
  },
  {
    "label": "Send()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Send(const absl::LogEntry& entry)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  }
]