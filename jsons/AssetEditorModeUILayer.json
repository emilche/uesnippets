[
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FLayoutExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayoutExtender"
  },
  {
    "label": "FWorkspaceItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkspaceItem"
  },
  {
    "label": "ILevelEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILevelEditor"
  },
  {
    "label": "IToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkit"
  },
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FSlateIcon",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateIcon"
  },
  {
    "label": "EDITORFRAMEWORK_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EDITORFRAMEWORK_API"
  },
  {
    "label": "EDITORFRAMEWORK_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EDITORFRAMEWORK_API"
  },
  {
    "label": "FAssetEditorModeUILayer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FAssetEditorModeUILayer(const IToolkitHost* InToolkitHost)"
  },
  {
    "label": "OnToolkitHostingStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolkitHostingStarted(const TSharedRef<IToolkit>& Toolkit)"
  },
  {
    "label": "OnToolkitHostingFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolkitHostingFinished(const TSharedRef<IToolkit>& Toolkit)"
  },
  {
    "label": "GetTabManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabManager>)",
    "insertText": "GetTabManager()"
  },
  {
    "label": "SetModePanelInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModePanelInfo(const FName InTabSpawnerID, const FMinorTabConfig& InTabInfo)"
  },
  {
    "label": "GetSpawnedTabs()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SDockTab>>)",
    "insertText": "GetSpawnedTabs()"
  },
  {
    "label": "SetSecondaryModeToolbarName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSecondaryModeToolbarName(FName InName)"
  },
  {
    "label": "RegisterModeTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterModeTabSpawners()"
  },
  {
    "label": "RegisterModeTabSpawner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterModeTabSpawner(const FName TabID)"
  },
  {
    "label": "SpawnStoredTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnStoredTab(const FSpawnTabArgs& Args, const FName TabID)"
  },
  {
    "label": "CanSpawnStoredTab()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSpawnStoredTab(const FSpawnTabArgs& Args, const FName TabID)"
  }
]