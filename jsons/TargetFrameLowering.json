[
  {
    "label": "BitVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BitVector"
  },
  {
    "label": "CalleeSavedInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CalleeSavedInfo"
  },
  {
    "label": "MachineFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineFunction"
  },
  {
    "label": "RegScavenger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RegScavenger"
  },
  {
    "label": "TargetFrameLowering",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetFrameLowering"
  },
  {
    "label": "StackDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StackDirection"
  },
  {
    "label": "SpillSlot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpillSlot"
  },
  {
    "label": "TargetFrameLowering()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_TARGET_TARGETFRAMELOWERING_H # define LLVM_TARGET_TARGETFRAMELOWERING_H # include \" llvm / CodeGen / MachineBasicBlock . h \" # include<utility> # include<vector> namespace llvm { class BitVector ; class CalleeSavedInfo ; class MachineFunction ; class RegScavenger ; class TargetFrameLowering { public : enum StackDirection { StackGrowsUp,StackGrowsDown } ; struct SpillSlot { unsigned Reg ; int Offset ; } ; private : StackDirection StackDir ; unsigned StackAlignment ; unsigned TransientStackAlignment ; int LocalAreaOffset ; bool StackRealignable ; public :)",
    "insertText": "TargetFrameLowering(StackDirection D, unsigned StackAl, int LAO, unsigned TransAl = 1, bool StackReal = true) : StackDir(D), StackAlignment(StackAl), TransientStackAlignment(TransAl), LocalAreaOffset(LAO), StackRealignable(StackReal)"
  },
  {
    "label": "TargetFrameLowering()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TargetFrameLowering()"
  },
  {
    "label": "getStackGrowthDirection()",
    "kind": "Method",
    "detail": "Function (StackDirection)",
    "insertText": "getStackGrowthDirection()"
  },
  {
    "label": "targetHandlesStackFrameRounding()",
    "kind": "Method",
    "detail": "Function (NumEntries = 0 ; return nullptr ; } bool)",
    "insertText": "targetHandlesStackFrameRounding()"
  },
  {
    "label": "emitEpilogue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitEpilogue(MachineFunction &MF, MachineBasicBlock &MBB)"
  },
  {
    "label": "adjustForSegmentedStacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adjustForSegmentedStacks(MachineFunction &MF, MachineBasicBlock &PrologueMBB)"
  },
  {
    "label": "adjustForHiPEPrologue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "adjustForHiPEPrologue(MachineFunction &MF, MachineBasicBlock &PrologueMBB)"
  },
  {
    "label": "adjustForFrameAllocatePrologue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "adjustForFrameAllocatePrologue(MachineFunction &MF, MachineBasicBlock &PrologueMBB)"
  },
  {
    "label": "spillCalleeSavedRegisters()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "spillCalleeSavedRegisters(MachineBasicBlock &MBB, MachineBasicBlock::iterator MI, const std::vector<CalleeSavedInfo> &CSI, const TargetRegisterInfo *TRI)"
  },
  {
    "label": "hasFP()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasFP(const MachineFunction &MF)"
  },
  {
    "label": "hasReservedCallFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasReservedCallFrame(const MachineFunction &MF)"
  },
  {
    "label": "canSimplifyCallFramePseudos()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "canSimplifyCallFramePseudos(const MachineFunction &MF)"
  },
  {
    "label": "needsFrameIndexResolution()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "needsFrameIndexResolution(const MachineFunction &MF)"
  },
  {
    "label": "getFrameIndexOffset()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getFrameIndexOffset(const MachineFunction &MF, int FI)"
  },
  {
    "label": "getFrameIndexReference()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getFrameIndexReference(const MachineFunction &MF, int FI, unsigned &FrameReg)"
  },
  {
    "label": "getFrameIndexReferenceFromSP()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getFrameIndexReferenceFromSP(const MachineFunction &MF, int FI, unsigned &FrameReg)"
  },
  {
    "label": "llvm_unreachable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "llvm_unreachable(\"unimplemented for non-x86\")"
  },
  {
    "label": "processFunctionBeforeFrameFinalized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "processFunctionBeforeFrameFinalized(MachineFunction &MF, RegScavenger *RS = nullptr)"
  },
  {
    "label": "eliminateCallFramePseudoInstr()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB, MachineBasicBlock::iterator MI)"
  },
  {
    "label": "llvm_unreachable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "llvm_unreachable(\"Call Frame Pseudo Instructions do not exist on this \" \"target!\")"
  },
  {
    "label": "canUseAsPrologue()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "canUseAsPrologue(const MachineBasicBlock &MBB)"
  }
]