[
  {
    "label": "WebRtcSpl_CountLeadingZeros32_NotBuiltin()",
    "kind": "Method",
    "detail": "Function (# ifndef COMMON_AUDIO_SIGNAL_PROCESSING_INCLUDE_SPL_INL_H_ # define COMMON_AUDIO_SIGNAL_PROCESSING_INCLUDE_SPL_INL_H_ # include<stdint . h> # include \" rtc_base / compile_assert_c . h \" const int8_t kWebRtcSpl_CountLeadingZeros32_Table [ 6 4 ] ; __inline int)",
    "insertText": "WebRtcSpl_CountLeadingZeros32_NotBuiltin(uint32_t n)"
  },
  {
    "label": "kWebRtcSpl_CountLeadingZeros32_Table()",
    "kind": "Method",
    "detail": "Function (n | = n>> 1 ; n | = n>> 2 ; n | = n>> 4 ; n | = n>> 8 ; n | = n>> 1 6 ; return)",
    "insertText": "kWebRtcSpl_CountLeadingZeros32_Table(n * 0x8c0b2891)"
  },
  {
    "label": "WebRtcSpl_CountLeadingZeros64_NotBuiltin()",
    "kind": "Method",
    "detail": "Function (} __inline int)",
    "insertText": "WebRtcSpl_CountLeadingZeros64_NotBuiltin(uint64_t n)"
  },
  {
    "label": "WebRtcSpl_CountLeadingZeros32_NotBuiltin()",
    "kind": "Method",
    "detail": "Function (const int leading_zeros = n>> 3 2 = = 0 ? 3 2 : 0 ; return leading_zeros +)",
    "insertText": "WebRtcSpl_CountLeadingZeros32_NotBuiltin((uint32_t)(n >> (32 - leading_zeros)))"
  },
  {
    "label": "WebRtcSpl_CountLeadingZeros32()",
    "kind": "Method",
    "detail": "Function (} __inline int)",
    "insertText": "WebRtcSpl_CountLeadingZeros32(uint32_t n)"
  },
  {
    "label": "RTC_COMPILE_ASSERT()",
    "kind": "Method",
    "detail": "Function (# ifdef __GNUC__)",
    "insertText": "RTC_COMPILE_ASSERT(sizeof(unsigned int) == sizeof(uint32_t))"
  },
  {
    "label": "WebRtcSpl_CountLeadingZeros32_NotBuiltin()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "WebRtcSpl_CountLeadingZeros32_NotBuiltin(n)"
  },
  {
    "label": "WebRtcSpl_CountLeadingZeros64()",
    "kind": "Method",
    "detail": "Function (# endif } __inline int)",
    "insertText": "WebRtcSpl_CountLeadingZeros64(uint64_t n)"
  },
  {
    "label": "RTC_COMPILE_ASSERT()",
    "kind": "Method",
    "detail": "Function (# ifdef __GNUC__)",
    "insertText": "RTC_COMPILE_ASSERT(sizeof(unsigned long long) == sizeof(uint64_t))"
  },
  {
    "label": "WebRtcSpl_CountLeadingZeros64_NotBuiltin()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "WebRtcSpl_CountLeadingZeros64_NotBuiltin(n)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif } # ifdef WEBRTC_ARCH_ARM_V7 # include \" common_audio / signal_processing / include / spl_inl_armv7 . h \" # else # if)",
    "insertText": "defined(MIPS32_LE) #include \"common_audio/signal_processing/include/spl_inl_mips.h\" #endif #if !defined(MIPS_DSP_R1_LE) static __inline int16_t WebRtcSpl_SatW32ToW16(int32_t value32)"
  },
  {
    "label": "out16()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "out16(int16_t)"
  },
  {
    "label": "sum()",
    "kind": "Method",
    "detail": "Function (const int32_t)",
    "insertText": "sum(int32_t)((uint32_t)a + (uint32_t)b)"
  },
  {
    "label": "diff()",
    "kind": "Method",
    "detail": "Function (const int32_t)",
    "insertText": "diff(int32_t)((uint32_t)a - (uint32_t)b)"
  },
  {
    "label": "WebRtcSpl_SubSatW16()",
    "kind": "Method",
    "detail": "Function (} __inline int16_t)",
    "insertText": "WebRtcSpl_SubSatW16(int16_t var1, int16_t var2)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} # endif # if !)",
    "insertText": "defined(MIPS32_LE) static __inline int16_t WebRtcSpl_GetSizeInBits(uint32_t n)"
  },
  {
    "label": "WebRtcSpl_NormW32()",
    "kind": "Method",
    "detail": "Function (} __inline int16_t)",
    "insertText": "WebRtcSpl_NormW32(int32_t a)"
  },
  {
    "label": "WebRtcSpl_NormU32()",
    "kind": "Method",
    "detail": "Function (} __inline int16_t)",
    "insertText": "WebRtcSpl_NormU32(uint32_t a)"
  },
  {
    "label": "WebRtcSpl_NormW16()",
    "kind": "Method",
    "detail": "Function (} __inline int16_t)",
    "insertText": "WebRtcSpl_NormW16(int16_t a)"
  },
  {
    "label": "WebRtcSpl_CountLeadingZeros32()",
    "kind": "Method",
    "detail": "Function (const int32_t a32 = a ; return a = = 0 ? 0 :)",
    "insertText": "WebRtcSpl_CountLeadingZeros32(a < 0 ? ~a32 : a32)"
  },
  {
    "label": "WebRtc_MulAccumW16()",
    "kind": "Method",
    "detail": "Function (} __inline int32_t)",
    "insertText": "WebRtc_MulAccumW16(int16_t a, int16_t b, int32_t c)"
  }
]