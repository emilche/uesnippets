[
  {
    "label": "RobustThroughputEstimatorSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RobustThroughputEstimatorSettings"
  },
  {
    "label": "AcknowledgedBitrateEstimatorInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AcknowledgedBitrateEstimatorInterface"
  },
  {
    "label": "RobustThroughputEstimatorSettings()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_CONGESTION_CONTROLLER_GOOG_CC_ACKNOWLEDGED_BITRATE_ESTIMATOR_INTERFACE_H_ # define MODULES_CONGESTION_CONTROLLER_GOOG_CC_ACKNOWLEDGED_BITRATE_ESTIMATOR_INTERFACE_H_ # include<stddef . h> # include<memory> # include<vector> # include \" absl / types / optional . h \" # include \" api / field_trials_view . h \" # include \" api / transport / network_types . h \" # include \" api / units / data_rate . h \" # include \" api / units / time_delta . h \" # include \" api / units / timestamp . h \" # include \" rtc_base / experiments / struct_parameters_parser . h \" namespace webrtc { struct RobustThroughputEstimatorSettings { char kKey [ ] = \" WebRTC - Bwe - RobustThroughputEstimatorSettings \" ;)",
    "insertText": "RobustThroughputEstimatorSettings()"
  },
  {
    "label": "RobustThroughputEstimatorSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RobustThroughputEstimatorSettings(const FieldTrialsView* key_value_config)"
  },
  {
    "label": "Seconds()",
    "kind": "Method",
    "detail": "Function (bool enabled = false ; unsigned window_packets = 2 0 ; unsigned max_window_packets = 5 0 0 ; TimeDelta min_window_duration =)",
    "insertText": "Seconds(1)"
  },
  {
    "label": "Seconds()",
    "kind": "Method",
    "detail": "Function (TimeDelta max_window_duration =)",
    "insertText": "Seconds(5)"
  },
  {
    "label": "Parser()",
    "kind": "Method",
    "detail": "Function (unsigned required_packets = 1 0 ; double unacked_weight = 1 . 0 ; std::unique_ptr<StructParametersParser>)",
    "insertText": "Parser()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class AcknowledgedBitrateEstimatorInterface { public : std::unique_ptr<AcknowledgedBitrateEstimatorInterface>)",
    "insertText": "Create(const FieldTrialsView* key_value_config)"
  },
  {
    "label": "AcknowledgedBitrateEstimatorInterface()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "AcknowledgedBitrateEstimatorInterface()"
  },
  {
    "label": "IncomingPacketFeedbackVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncomingPacketFeedbackVector(const std::vector<PacketResult>& packet_feedback_vector)"
  },
  {
    "label": "bitrate()",
    "kind": "Method",
    "detail": "Function (absl::optional<DataRate>)",
    "insertText": "bitrate()"
  },
  {
    "label": "PeekRate()",
    "kind": "Method",
    "detail": "Function (absl::optional<DataRate>)",
    "insertText": "PeekRate()"
  },
  {
    "label": "SetAlr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlr(bool in_alr)"
  },
  {
    "label": "SetAlrEndedTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlrEndedTime(Timestamp alr_ended_time)"
  }
]