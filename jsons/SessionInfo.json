[
  {
    "label": "FSessionInstanceInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSessionInstanceInfo"
  },
  {
    "label": "FEngineServicePong",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEngineServicePong"
  },
  {
    "label": "FSessionServicePong",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSessionServicePong"
  },
  {
    "label": "FSessionInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSessionInfo"
  },
  {
    "label": "FSessionInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Guid . h \" # include \" IMessageContext . h \" # include \" IMessageBus . h \" # include \" ISessionInstanceInfo . h \" # include \" ISessionInfo . h \" # include \" SessionLogMessage . h \" class FSessionInstanceInfo ; struct FEngineServicePong ; struct FSessionServicePong ; class FSessionInfo : public TSharedFromThis<FSessionInfo>,public ISessionInfo { public :)",
    "insertText": "FSessionInfo(const FGuid& InSessionId, const TSharedRef<IMessageBus, ESPMode::ThreadSafe>& InMessageBus)"
  },
  {
    "label": "UpdateFromMessage()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "UpdateFromMessage(const FEngineServicePong& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "UpdateFromMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFromMessage(const FSessionServicePong& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "GetInstances()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "GetInstances(TArray<TSharedPtr<ISessionInstanceInfo>>& OutInstances)"
  },
  {
    "label": "GetLastUpdateTime()",
    "kind": "Method",
    "detail": "Function (const FDateTime&)",
    "insertText": "GetLastUpdateTime()"
  },
  {
    "label": "GetNumInstances()",
    "kind": "Method",
    "detail": "Function (const int32)",
    "insertText": "GetNumInstances()"
  },
  {
    "label": "GetSessionId()",
    "kind": "Method",
    "detail": "Function (const FGuid&)",
    "insertText": "GetSessionId()"
  },
  {
    "label": "GetSessionName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetSessionName()"
  },
  {
    "label": "GetSessionOwner()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetSessionOwner()"
  },
  {
    "label": "IsStandalone()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsStandalone()"
  },
  {
    "label": "DECLARE_DERIVED_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DERIVED_EVENT(FSessionInfo, ISessionInfo::FInstanceDiscoveredEvent, FInstanceDiscoveredEvent) virtual FInstanceDiscoveredEvent& OnInstanceDiscovered()"
  },
  {
    "label": "HandleLogReceived()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleLogReceived(const TSharedRef<ISessionInstanceInfo>& Instance, const TSharedRef<FSessionLogMessage>& LogMessage)"
  }
]