[
  {
    "label": "SPackagesDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPackagesDialog"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EDialogReturnType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDialogReturnType"
  },
  {
    "label": "EDialogButtonStyle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDialogButtonStyle"
  },
  {
    "label": "FPackagesDialogModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackagesDialogModule"
  },
  {
    "label": "SPackagesDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPackagesDialog"
  },
  {
    "label": "ShowPackagesDialog()",
    "kind": "Method",
    "detail": "Function (EDialogReturnType)",
    "insertText": "ShowPackagesDialog()"
  },
  {
    "label": "ShowPackagesDialog()",
    "kind": "Method",
    "detail": "Function (EDialogReturnType)",
    "insertText": "ShowPackagesDialog(OUT TSet<FString>& InOutIgnoredPackages)"
  },
  {
    "label": "RemovePackagesDialog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePackagesDialog()"
  },
  {
    "label": "SetMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMessage(const FText& InMessage)"
  },
  {
    "label": "SetWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWarning(const FText& InMessage)"
  },
  {
    "label": "GetResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResults(TArray<UPackage*>& OutPackages, ECheckBoxState InChecked)"
  },
  {
    "label": "RemoveAllPackageItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllPackageItems()"
  },
  {
    "label": "OnModulesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModulesChanged( FName ModuleThatChanged, EModuleChangeReason ReasonForChange )"
  }
]