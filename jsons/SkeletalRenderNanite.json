[
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "UMorphTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMorphTarget"
  },
  {
    "label": "FRayTracingSkinnedGeometryUpdateQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingSkinnedGeometryUpdateQueue"
  },
  {
    "label": "FSkeletalMeshObjectNanite",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshObjectNanite"
  },
  {
    "label": "FDynamicSkelMeshObjectDataNanite",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicSkelMeshObjectDataNanite"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSkeletalMeshObjectLOD",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshObjectLOD"
  },
  {
    "label": "FDynamicSkelMeshObjectDataNanite()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ProfilingDebugging / ResourceSize . h \" # include \" RenderResource . h \" # include \" RayTracingGeometry . h \" # include \" ShaderParameters . h \" # include \" Components / ExternalMorphSet . h \" # include \" Components / SkinnedMeshComponent . h \" # include \" GlobalShader . h \" # include \" SkeletalRenderPublic . h \" # include \" ClothingSystemRuntimeTypes . h \" # include \" Rendering / SkeletalMeshRenderData . h \" # include \" Rendering / SkeletalMeshLODRenderData . h \" # include \" Animation / MeshDeformerGeometry . h \" # include \" NaniteSceneProxy . h \" class FPrimitiveDrawInterface ; class UMorphTarget ; class FRayTracingSkinnedGeometryUpdateQueue ; class FSkeletalMeshObjectNanite ; class FDynamicSkelMeshObjectDataNanite { public :)",
    "insertText": "FDynamicSkelMeshObjectDataNanite(USkinnedMeshComponent* InComponent, FSkeletalMeshRenderData* InRenderData, int32 InLODIndex, EPreviousBoneTransformUpdateMode InPreviousBoneTransformUpdateMode, FSkeletalMeshObjectNanite* InMeshObject)"
  },
  {
    "label": "FDynamicSkelMeshObjectDataNanite()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDynamicSkelMeshObjectDataNanite()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (TArray<FMatrix44f> ReferenceToLocal ; TArray<FMatrix44f> ReferenceToLocalForRayTracing ; TArray<FMatrix44f> PrevReferenceToLocal ; TArray<FMatrix44f> PrevReferenceToLocalForRayTracing ; #)",
    "insertText": "if(UE_BUILD_SHIPPING || UE_BUILD_TEST)"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (# endif TArray<FMatrix3x4> CurrentBoneTransforms ; TArray<FMatrix3x4> PreviousBoneTransforms ; int32 LODIndex ; int32 RayTracingLODIndex ; void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "UpdateBonesRemovedByLOD()",
    "kind": "Method",
    "detail": "Function (private : enum class ETransformsToUpdate { Current,Previous,} ; void)",
    "insertText": "UpdateBonesRemovedByLOD(TArray<FMatrix44f>& PoseBuffer, USkinnedMeshComponent* InComponent, ETransformsToUpdate TransformsToUpdate)"
  },
  {
    "label": "FSkeletalMeshObjectNanite()",
    "kind": "Method",
    "detail": "Function (} ; class FSkeletalMeshObjectNanite : public FSkeletalMeshObject { public :)",
    "insertText": "FSkeletalMeshObjectNanite(USkinnedMeshComponent* InComponent, FSkeletalMeshRenderData* InRenderData, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "FSkeletalMeshObjectNanite()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSkeletalMeshObjectNanite()"
  },
  {
    "label": "InitResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResources(USkinnedMeshComponent* InComponent)"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(int32 LODIndex, USkinnedMeshComponent* InComponent, const FMorphTargetWeightMap& InActiveMorphTargets, const TArray<float>& MorphTargetWeights, EPreviousBoneTransformUpdateMode PreviousBoneTransformUpdateMode, const FExternalMorphWeightData& InExternalMorphWeightData)"
  },
  {
    "label": "UpdateDynamicData_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDynamicData_RenderThread(FRHICommandList& RHICmdList, FDynamicSkelMeshObjectDataNanite* InDynamicData, uint64 FrameNumberToPrepare, uint32 RevisionNumber, uint32 PreviousRevisionNumber, FGPUSkinCache* GPUSkinCache, int32 LODIndex, bool bRecreating)"
  },
  {
    "label": "GetSkinVertexFactory()",
    "kind": "Method",
    "detail": "Function (const FVertexFactory*)",
    "insertText": "GetSkinVertexFactory(const FSceneView* View, int32 LODIndex, int32 ChunkIdx, ESkinVertexFactoryMode VFMode = ESkinVertexFactoryMode::Default)"
  },
  {
    "label": "GetStaticSkinVertexFactory()",
    "kind": "Method",
    "detail": "Function (const FVertexFactory*)",
    "insertText": "GetStaticSkinVertexFactory(int32 LODIndex, int32 ChunkIdx, ESkinVertexFactoryMode VFMode = ESkinVertexFactoryMode::Default)"
  },
  {
    "label": "GetComponentSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (TArray<FTransform>*)",
    "insertText": "GetComponentSpaceTransforms()"
  },
  {
    "label": "GetReferenceToLocalMatrices()",
    "kind": "Method",
    "detail": "Function (const TArray<FMatrix44f>&)",
    "insertText": "GetReferenceToLocalMatrices()"
  },
  {
    "label": "GetPrevReferenceToLocalMatrices()",
    "kind": "Method",
    "detail": "Function (const TArray<FMatrix44f>&)",
    "insertText": "GetPrevReferenceToLocalMatrices()"
  },
  {
    "label": "GetCurrentBoneTransforms()",
    "kind": "Method",
    "detail": "Function (const TArray<FMatrix3x4>*)",
    "insertText": "GetCurrentBoneTransforms()"
  },
  {
    "label": "GetPreviousBoneTransforms()",
    "kind": "Method",
    "detail": "Function (const TArray<FMatrix3x4>*)",
    "insertText": "GetPreviousBoneTransforms()"
  },
  {
    "label": "GetLOD()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLOD()"
  },
  {
    "label": "HaveValidDynamicData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HaveValidDynamicData()"
  },
  {
    "label": "UpdateSkinWeightBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSkinWeightBuffer(USkinnedMeshComponent* InMeshComponent)"
  },
  {
    "label": "IsNaniteMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNaniteMesh()"
  },
  {
    "label": "UpdateRayTracingGeometry()",
    "kind": "Method",
    "detail": "Function (# if RHI_RAYTRACING FRayTracingGeometry RayTracingGeometry ; FRayTracingSkinnedGeometryUpdateQueue* RayTracingUpdateQueue = nullptr ; void)",
    "insertText": "UpdateRayTracingGeometry(FRHICommandListBase& RHICmdList, FSkeletalMeshLODRenderData& LODModel, uint32 LODIndex, TArray<FBufferRHIRef>& VertexBuffers)"
  },
  {
    "label": "QueuePendingRayTracingGeometryUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueuePendingRayTracingGeometryUpdate(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "GetRayTracingGeometry()",
    "kind": "Method",
    "detail": "Function (FRayTracingGeometry*)",
    "insertText": "GetRayTracingGeometry()"
  },
  {
    "label": "InitResources()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitResources(FSkelMeshComponentLODInfo* LODInfo, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "UpdateSkinWeights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSkinWeights(FSkelMeshComponentLODInfo* LODInfo)"
  }
]