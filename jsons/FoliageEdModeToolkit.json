[
  {
    "label": "FFoliageEdModeToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFoliageEdModeToolkit"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "FEdMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdMode"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FToolBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolBarBuilder"
  },
  {
    "label": "UFoliageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFoliageType"
  },
  {
    "label": "SFoliageEdit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFoliageEdit"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" EdMode . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" Toolkits / BaseToolkit . h \" # include \" UObject / NameTypes . h \" class FFoliageEdModeToolkit : public FModeToolkit { public : void)",
    "insertText": "Init(const TSharedPtr< class IToolkitHost >& InitToolkitHost)"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetEditorMode()",
    "kind": "Method",
    "detail": "Function (class FEdMode*)",
    "insertText": "GetEditorMode()"
  },
  {
    "label": "GetInlineContent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class SWidget>)",
    "insertText": "GetInlineContent()"
  },
  {
    "label": "GetToolPaletteNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetToolPaletteNames(TArray<FName>& InPaletteName)"
  },
  {
    "label": "GetToolPaletteDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolPaletteDisplayName(FName PaletteName)"
  },
  {
    "label": "BuildToolPalette()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildToolPalette(FName PaletteName, class FToolBarBuilder& ToolbarBuilder)"
  },
  {
    "label": "GetActiveToolDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActiveToolDisplayName()"
  },
  {
    "label": "GetActiveToolMessage()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActiveToolMessage()"
  },
  {
    "label": "OnToolPaletteChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolPaletteChanged(FName PaletteName)"
  },
  {
    "label": "RefreshFullList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshFullList()"
  },
  {
    "label": "NotifyFoliageTypeMeshChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyFoliageTypeMeshChanged(class UFoliageType* FoliageType)"
  },
  {
    "label": "ReflectSelectionInPalette()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReflectSelectionInPalette()"
  }
]