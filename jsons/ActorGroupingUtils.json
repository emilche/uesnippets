[
  {
    "label": "UActorGroupingUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorGroupingUtils"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ActorGroupingUtils . generated . h \")",
    "insertText": "UCLASS(transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintCallable, Category = \"Editor Scripting | Actor Grouping\") static bool IsGroupingActive()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FCanGroupActors, const TArray<AActor*>&)"
  },
  {
    "label": "AddCanGroupActorsDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCanGroupActorsDelegate(const FName& Owner, const FCanGroupActors& InGroupActorsDelegate)"
  },
  {
    "label": "RemoveCanGroupActorsDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCanGroupActorsDelegate(const FName& Owner)"
  }
]