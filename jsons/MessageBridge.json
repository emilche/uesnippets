[
  {
    "label": "IMessageBus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageBus"
  },
  {
    "label": "IMessageSubscription",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageSubscription"
  },
  {
    "label": "IMessageTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageTransport"
  },
  {
    "label": "FMessageBridge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMessageBridge"
  },
  {
    "label": "FMessageBridge()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IMessageBridge . h \" # include \" IMessageContext . h \" # include \" IMessageReceiver . h \" # include \" IMessageSender . h \" # include \" IMessageTransportHandler . h \" # include \" Misc / Guid . h \" # include \" Templates / SharedPointer . h \" # include \" Bridge / MessageAddressBook . h \" class IMessageBus ; class IMessageSubscription ; class IMessageTransport ; class FMessageBridge : public TSharedFromThis<FMessageBridge,ESPMode::ThreadSafe>,public IMessageBridge,public IMessageReceiver,public IMessageSender,protected IMessageTransportHandler { public :)",
    "insertText": "FMessageBridge(const FMessageAddress InAddress, const TSharedRef<IMessageBus, ESPMode::ThreadSafe>& InBus, const TSharedRef<IMessageTransport, ESPMode::ThreadSafe>& InTransport)"
  },
  {
    "label": "FMessageBridge()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMessageBridge()"
  },
  {
    "label": "Disable()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Disable()"
  },
  {
    "label": "Enable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enable()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "LookupAddress()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "LookupAddress(const FMessageAddress& InAddress)"
  },
  {
    "label": "GetDebugName()",
    "kind": "Method",
    "detail": "Function (public : FName)",
    "insertText": "GetDebugName()"
  },
  {
    "label": "GetRecipientId()",
    "kind": "Method",
    "detail": "Function (const FGuid&)",
    "insertText": "GetRecipientId()"
  },
  {
    "label": "GetRecipientThread()",
    "kind": "Method",
    "detail": "Function (ENamedThreads::Type)",
    "insertText": "GetRecipientThread()"
  },
  {
    "label": "IsLocal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocal()"
  },
  {
    "label": "ReceiveMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveMessage(const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "GetSenderAddress()",
    "kind": "Method",
    "detail": "Function (public : FMessageAddress)",
    "insertText": "GetSenderAddress()"
  },
  {
    "label": "NotifyMessageError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyMessageError(const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context, const FString& Error)"
  },
  {
    "label": "DiscoverTransportNode()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "DiscoverTransportNode(const FGuid& NodeId)"
  },
  {
    "label": "ForgetTransportNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForgetTransportNode(const FGuid& NodeId)"
  },
  {
    "label": "ReceiveTransportMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveTransportMessage(const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context, const FGuid& NodeId)"
  },
  {
    "label": "HandleMessageBusShutdown()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleMessageBusShutdown()"
  }
]