[
  {
    "label": "FHttpPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHttpPath"
  },
  {
    "label": "FHttpServerRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHttpServerRequest"
  },
  {
    "label": "FHttpRequestHandlerIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHttpRequestHandlerIterator"
  },
  {
    "label": "FHttpPathIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHttpPathIterator"
  },
  {
    "label": "FHttpPathIterator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IHttpRouter . h \" # include \" HttpRequestHandler . h \" # include \" HttpRequestHandlerRegistrar . h \" struct FHttpPath ; struct FHttpServerRequest ; struct FHttpRequestHandlerIterator final { struct FHttpPathIterator final { public :)",
    "insertText": "FHttpPathIterator(const FHttpPath& HttpPath)"
  },
  {
    "label": "Next()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "Next()"
  },
  {
    "label": "FHttpRequestHandlerIterator()",
    "kind": "Method",
    "detail": "Function (TArray<FString> ParsedTokens ; private : FString NextPath ; bool bFirstIteration = true ; bool bLastIteration = false ; } ; public :)",
    "insertText": "FHttpRequestHandlerIterator(TSharedPtr<FHttpServerRequest> InRequest, const FHttpRequestHandlerRegistrar& InRequestHandlerRegistrar, TArray<FHttpRequestHandler> InRequestPreprocessors = {})"
  }
]