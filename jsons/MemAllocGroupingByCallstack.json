[
  {
    "label": "FStackFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStackFrame"
  },
  {
    "label": "IAsyncOperationProgress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncOperationProgress"
  },
  {
    "label": "FCallstackFrameGroupNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCallstackFrameGroupNode"
  },
  {
    "label": "FMemAllocGroupingByCallstack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemAllocGroupingByCallstack"
  },
  {
    "label": "FCallstackGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCallstackGroup"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" InsightsCore / Table / ViewModels / BaseTreeNode . h \" # include \" InsightsCore / Table / ViewModels / TreeNodeGrouping . h \" namespace TraceServices { struct FStackFrame ; } namespace UE::Insights { class IAsyncOperationProgress ; } namespace UE::Insights::MemoryProfiler { class FCallstackFrameGroupNode : public FTableTreeNode {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FCallstackFrameGroupNode, FTableTreeNode) public: explicit FCallstackFrameGroupNode(const FName InName, TWeakPtr<FTable> InParentTable, const TraceServices::FStackFrame* InStackFrame) : FTableTreeNode(InName, InParentTable) , StackFrame(InStackFrame)"
  },
  {
    "label": "FCallstackFrameGroupNode()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FCallstackFrameGroupNode()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (} const FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetIcon()"
  },
  {
    "label": "GetIconColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetIconColor()"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColor()"
  },
  {
    "label": "GetStackFrame()",
    "kind": "Method",
    "detail": "Function (const TraceServices::FStackFrame*)",
    "insertText": "GetStackFrame()"
  },
  {
    "label": "FMemAllocGroupingByCallstack()",
    "kind": "Method",
    "detail": "Function (FCallstackGroup* Parent = nullptr ; FName Name ; FTableTreeNode* Node = nullptr ; const TraceServices::FStackFrame* Frame = nullptr ; TMap<uint64,FCallstackGroup*> GroupMap ; TMap<FName,FCallstackGroup*> GroupMapByName ; } ; public :)",
    "insertText": "FMemAllocGroupingByCallstack(bool bInIsAllocCallstack, bool bInIsInverted, bool bInIsGroupingByFunction)"
  },
  {
    "label": "FMemAllocGroupingByCallstack()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMemAllocGroupingByCallstack()"
  },
  {
    "label": "GroupNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GroupNodes(const TArray<FTableTreeNodePtr>& Nodes, FTableTreeNode& ParentGroup, TWeakPtr<FTable> InParentTable, IAsyncOperationProgress& InAsyncOperationProgress)"
  },
  {
    "label": "IsInverted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInverted()"
  },
  {
    "label": "ShouldSkipFilteredFrames()",
    "kind": "Method",
    "detail": "Function (bIsGroupingByFunction = bOnOff ; } bool)",
    "insertText": "ShouldSkipFilteredFrames()"
  },
  {
    "label": "GetGroupName()",
    "kind": "Method",
    "detail": "Function (bShouldSkipFilteredFrames = bOnOff ; } private : FName)",
    "insertText": "GetGroupName(const TraceServices::FStackFrame* Frame)"
  },
  {
    "label": "CreateGroup()",
    "kind": "Method",
    "detail": "Function (FCallstackGroup*)",
    "insertText": "CreateGroup(TArray<FCallstackGroup*>& InOutAllCallstackGroup, FCallstackGroup* InParentGroup, const FName InGroupName, TWeakPtr<FTable> InParentTable, const TraceServices::FStackFrame* InFrame)"
  },
  {
    "label": "CreateUnsetGroup()",
    "kind": "Method",
    "detail": "Function (FTableTreeNode*)",
    "insertText": "CreateUnsetGroup(TWeakPtr<FTable> ParentTable, FTableTreeNode& Parent)"
  },
  {
    "label": "CreateNoCallstackGroup()",
    "kind": "Method",
    "detail": "Function (FTableTreeNode*)",
    "insertText": "CreateNoCallstackGroup(TWeakPtr<FTable> ParentTable, FTableTreeNode& Parent)"
  },
  {
    "label": "CreateEmptyCallstackGroup()",
    "kind": "Method",
    "detail": "Function (FTableTreeNode*)",
    "insertText": "CreateEmptyCallstackGroup(TWeakPtr<FTable> ParentTable, FTableTreeNode& Parent)"
  }
]