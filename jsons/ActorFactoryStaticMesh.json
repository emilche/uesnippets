[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "UActorFactoryStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorFactoryStaticMesh"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" ActorFactories / ActorFactory . h \" # include \" ActorFactoryStaticMesh . generated . h \" class AActor ; struct FAssetData ;)",
    "insertText": "UCLASS(MinimalAPI, Abstract, Transient)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() virtual bool CanCreateActorFrom( const FAssetData& AssetData, FText& OutErrorMsg)"
  },
  {
    "label": "PostSpawnActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSpawnActor(UObject* Asset, AActor* NewActor)"
  },
  {
    "label": "GetAssetFromActorInstance()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetAssetFromActorInstance(AActor* ActorInstance)"
  },
  {
    "label": "AlignObjectToSurfaceNormal()",
    "kind": "Method",
    "detail": "Function (FQuat)",
    "insertText": "AlignObjectToSurfaceNormal(const FVector& InSurfaceNormal, const FQuat& ActorRotation)"
  }
]