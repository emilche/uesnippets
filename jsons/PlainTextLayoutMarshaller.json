[
  {
    "label": "FTextLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextLayout"
  },
  {
    "label": "FPlainTextLayoutMarshaller",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlainTextLayoutMarshaller"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Framework / Text / BaseTextLayoutMarshaller . h \" class FTextLayout ; class FPlainTextLayoutMarshaller : public FBaseTextLayoutMarshaller { public : TSharedRef<FPlainTextLayoutMarshaller>)",
    "insertText": "Create()"
  },
  {
    "label": "FPlainTextLayoutMarshaller()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPlainTextLayoutMarshaller()"
  },
  {
    "label": "SetIsPassword()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsPassword(const TAttribute<bool>& InIsPassword)"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText(const FString& SourceString, FTextLayout& TargetTextLayout)"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetText(FString& TargetString, const FTextLayout& SourceTextLayout)"
  }
]