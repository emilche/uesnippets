[
  {
    "label": "SMultiLineEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableTextBox"
  },
  {
    "label": "USlateWidgetStyleAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USlateWidgetStyleAsset"
  },
  {
    "label": "UMultiLineEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMultiLineEditableTextBox"
  },
  {
    "label": "IErrorReportingWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IErrorReportingWidget"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnMultiLineEditableTextBoxChangedEvent, const FText&, Text)"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText(FText InText)"
  },
  {
    "label": "SetHintText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHintText(FText InHintText)"
  },
  {
    "label": "SetError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetError(FText InError)"
  },
  {
    "label": "SetTextStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextStyle(const FTextBlockStyle& InTextStyle)"
  },
  {
    "label": "SetForegroundColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForegroundColor(FLinearColor color)"
  },
  {
    "label": "HandleOnTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnTextChanged(const FText& Text)"
  },
  {
    "label": "HandleOnTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnTextCommitted(const FText& Text, ETextCommit::Type CommitMethod)"
  },
  {
    "label": "SetTextInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTextInternal(const FText& InText)"
  }
]