[
  {
    "label": "ANavigationObjectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANavigationObjectBase"
  },
  {
    "label": "UCapsuleComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCapsuleComponent"
  },
  {
    "label": "UBillboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBillboardComponent"
  },
  {
    "label": "APhysicsVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APhysicsVolume"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" GameFramework / Actor . h \" # include \" AI / Navigation / NavAgentInterface . h \" # include \" NavigationObjectBase . generated . h \")",
    "insertText": "UCLASS(hidecategories=(Lighting, LightColor, Force), ClassGroup=Navigation, NotBlueprintable, abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() private: UPROPERTY()"
  },
  {
    "label": "GetSimpleCollisionCylinder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSimpleCollisionCylinder(float& CollisionRadius, float& CollisionHalfHeight)"
  },
  {
    "label": "PostEditMove()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditMove(bool bFinished)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "ShouldBeBased()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "ShouldBeBased()"
  },
  {
    "label": "FindBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindBase()"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Validate()"
  },
  {
    "label": "GetNavPhysicsVolume()",
    "kind": "Method",
    "detail": "Function (class APhysicsVolume*)",
    "insertText": "GetNavPhysicsVolume()"
  },
  {
    "label": "GetNavAgentLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetNavAgentLocation()"
  },
  {
    "label": "GetMoveGoalReachTest()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetMoveGoalReachTest(const AActor* MovingActor, const FVector& MoveOffset, FVector& GoalOffset, float& GoalRadius, float& GoalHalfHeight)"
  },
  {
    "label": "GetCapsuleComponent()",
    "kind": "Method",
    "detail": "Function (public : class UCapsuleComponent*)",
    "insertText": "GetCapsuleComponent()"
  }
]