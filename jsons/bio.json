[
  {
    "label": "bio_addrinfo_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "bio_addrinfo_st"
  },
  {
    "label": "bio_method_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "bio_method_st"
  },
  {
    "label": "bio_dgram_sctp_sndinfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "bio_dgram_sctp_sndinfo"
  },
  {
    "label": "bio_dgram_sctp_rcvinfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "bio_dgram_sctp_rcvinfo"
  },
  {
    "label": "bio_dgram_sctp_prinfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "bio_dgram_sctp_prinfo"
  },
  {
    "label": "BIO_hostserv_priorities",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BIO_hostserv_priorities"
  },
  {
    "label": "BIO_lookup_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BIO_lookup_type"
  },
  {
    "label": "hostent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hostent"
  },
  {
    "label": "BIO_sock_info_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BIO_sock_info_type"
  },
  {
    "label": "BIO_TYPE_MEM()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_BIO_H # define HEADER_BIO_H # include<openssl / e_os2 . h> # ifndef OPENSSL_NO_STDIO # include<stdio . h> # endif # include<stdarg . h> # include<openssl / crypto . h> # include<openssl / bioerr . h> # ifdef __cplusplus \" C \" { # endif # define BIO_TYPE_DESCRIPTOR 0 x0100 # define BIO_TYPE_FILTER 0 x0200 # define BIO_TYPE_SOURCE_SINK 0 x0400 # define BIO_TYPE_NONE 0 # define)",
    "insertText": "BIO_TYPE_MEM(1|BIO_TYPE_SOURCE_SINK) # define BIO_TYPE_FILE ( 2|BIO_TYPE_SOURCE_SINK) # define BIO_TYPE_FD ( 4|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR) # define BIO_TYPE_SOCKET ( 5|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR) # define BIO_TYPE_NULL ( 6|BIO_TYPE_SOURCE_SINK) # define BIO_TYPE_SSL ( 7|BIO_TYPE_FILTER) # define BIO_TYPE_MD ( 8|BIO_TYPE_FILTER) # define BIO_TYPE_BUFFER ( 9|BIO_TYPE_FILTER) # define BIO_TYPE_CIPHER (10|BIO_TYPE_FILTER) # define BIO_TYPE_BASE64 (11|BIO_TYPE_FILTER) # define BIO_TYPE_CONNECT (12|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR) # define BIO_TYPE_ACCEPT (13|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR) # define BIO_TYPE_NBIO_TEST (16|BIO_TYPE_FILTER) # define BIO_TYPE_NULL_FILTER (17|BIO_TYPE_FILTER) # define BIO_TYPE_BIO (19|BIO_TYPE_SOURCE_SINK) # define BIO_TYPE_LINEBUFFER (20|BIO_TYPE_FILTER) # define BIO_TYPE_DGRAM (21|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR) # define BIO_TYPE_ASN1 (22|BIO_TYPE_FILTER) # define BIO_TYPE_COMP (23|BIO_TYPE_FILTER) # ifndef OPENSSL_NO_SCTP # define BIO_TYPE_DGRAM_SCTP (24|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR) # endif #define BIO_TYPE_START 128 # define BIO_NOCLOSE 0x00 # define BIO_CLOSE 0x01 # define BIO_CTRL_RESET 1 # define BIO_CTRL_EOF 2 # define BIO_CTRL_INFO 3 # define BIO_CTRL_SET 4 # define BIO_CTRL_GET 5 # define BIO_CTRL_PUSH 6 # define BIO_CTRL_POP 7 # define BIO_CTRL_GET_CLOSE 8 # define BIO_CTRL_SET_CLOSE 9 # define BIO_CTRL_PENDING 10 # define BIO_CTRL_FLUSH 11 # define BIO_CTRL_DUP 12 # define BIO_CTRL_WPENDING 13 # define BIO_CTRL_SET_CALLBACK 14 # define BIO_CTRL_GET_CALLBACK 15 # define BIO_CTRL_PEEK 29 # define BIO_CTRL_SET_FILENAME 30 # define BIO_CTRL_DGRAM_CONNECT 31 # define BIO_CTRL_DGRAM_SET_CONNECTED 32 # define BIO_CTRL_DGRAM_SET_RECV_TIMEOUT 33 # define BIO_CTRL_DGRAM_GET_RECV_TIMEOUT 34 # define BIO_CTRL_DGRAM_SET_SEND_TIMEOUT 35 # define BIO_CTRL_DGRAM_GET_SEND_TIMEOUT 36 # define BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP 37 # define BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP 38 # define BIO_CTRL_DGRAM_MTU_DISCOVER 39 # define BIO_CTRL_DGRAM_QUERY_MTU 40 # define BIO_CTRL_DGRAM_GET_FALLBACK_MTU 47 # define BIO_CTRL_DGRAM_GET_MTU 41 # define BIO_CTRL_DGRAM_SET_MTU 42 # define BIO_CTRL_DGRAM_MTU_EXCEEDED 43 # define BIO_CTRL_DGRAM_GET_PEER 46 # define BIO_CTRL_DGRAM_SET_PEER 44 # define BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT 45 # define BIO_CTRL_DGRAM_SET_DONT_FRAG 48 # define BIO_CTRL_DGRAM_GET_MTU_OVERHEAD 49 # define BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE 50 # ifndef OPENSSL_NO_SCTP # define BIO_CTRL_DGRAM_SCTP_ADD_AUTH_KEY 51 # define BIO_CTRL_DGRAM_SCTP_NEXT_AUTH_KEY 52 # define BIO_CTRL_DGRAM_SCTP_AUTH_CCS_RCVD 53 # define BIO_CTRL_DGRAM_SCTP_GET_SNDINFO 60 # define BIO_CTRL_DGRAM_SCTP_SET_SNDINFO 61 # define BIO_CTRL_DGRAM_SCTP_GET_RCVINFO 62 # define BIO_CTRL_DGRAM_SCTP_SET_RCVINFO 63 # define BIO_CTRL_DGRAM_SCTP_GET_PRINFO 64 # define BIO_CTRL_DGRAM_SCTP_SET_PRINFO 65 # define BIO_CTRL_DGRAM_SCTP_SAVE_SHUTDOWN 70 # endif # define BIO_CTRL_DGRAM_SET_PEEK_MODE 71 # define BIO_FP_READ 0x02 # define BIO_FP_WRITE 0x04 # define BIO_FP_APPEND 0x08 # define BIO_FP_TEXT 0x10 # define BIO_FLAGS_READ 0x01 # define BIO_FLAGS_WRITE 0x02 # define BIO_FLAGS_IO_SPECIAL 0x04 # define BIO_FLAGS_RWS (BIO_FLAGS_READ|BIO_FLAGS_WRITE|BIO_FLAGS_IO_SPECIAL)"
  },
  {
    "label": "BIO_get_new_index()",
    "kind": "Method",
    "detail": "Function (typedef struct bio_addrinfo_st BIO_ADDRINFO ; int)",
    "insertText": "BIO_get_new_index(void)"
  },
  {
    "label": "BIO_set_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_set_flags(BIO *b, int flags)"
  },
  {
    "label": "BIO_test_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_test_flags(const BIO *b, int flags)"
  },
  {
    "label": "BIO_clear_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_clear_flags(BIO *b, int flags)"
  },
  {
    "label": "BIO_get_flags()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "BIO_get_flags(b) BIO_test_flags(b, ~(0x0)) # define BIO_set_retry_special(b) \\ BIO_set_flags(b, (BIO_FLAGS_IO_SPECIAL|BIO_FLAGS_SHOULD_RETRY)) # define BIO_set_retry_read(b) \\ BIO_set_flags(b, (BIO_FLAGS_READ|BIO_FLAGS_SHOULD_RETRY)) # define BIO_set_retry_write(b) \\ BIO_set_flags(b, (BIO_FLAGS_WRITE|BIO_FLAGS_SHOULD_RETRY)) # define BIO_clear_retry_flags(b) \\ BIO_clear_flags(b, (BIO_FLAGS_RWS|BIO_FLAGS_SHOULD_RETRY)) # define BIO_get_retry_flags(b) \\ BIO_test_flags(b, (BIO_FLAGS_RWS|BIO_FLAGS_SHOULD_RETRY)) # define BIO_should_read(a) BIO_test_flags(a, BIO_FLAGS_READ) # define BIO_should_write(a) BIO_test_flags(a, BIO_FLAGS_WRITE) # define BIO_should_io_special(a) BIO_test_flags(a, BIO_FLAGS_IO_SPECIAL) # define BIO_retry_type(a) BIO_test_flags(a, BIO_FLAGS_RWS) # define BIO_should_retry(a) BIO_test_flags(a, BIO_FLAGS_SHOULD_RETRY) # define BIO_RR_SSL_X509_LOOKUP 0x01 # define BIO_RR_CONNECT 0x02 # define BIO_RR_ACCEPT 0x03 # define BIO_CB_FREE 0x01 # define BIO_CB_READ 0x02 # define BIO_CB_WRITE 0x03 # define BIO_CB_PUTS 0x04 # define BIO_CB_GETS 0x05 # define BIO_CB_CTRL 0x06 # define BIO_CB_RETURN 0x80 # define BIO_CB_return(a) ((a)|BIO_CB_RETURN) # define BIO_cb_pre(a) (!((a)&BIO_CB_RETURN)) # define BIO_cb_post(a) ((a)&BIO_CB_RETURN) typedef long (*BIO_callback_fn)(BIO *b, int oper, const char *argp, int argi, long argl, long ret)"
  },
  {
    "label": "long()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "long(*BIO_callback_fn_ex)(BIO *b, int oper, const char *argp, size_t len, int argi, long argl, int ret, size_t *processed)"
  },
  {
    "label": "BIO_get_callback()",
    "kind": "Method",
    "detail": "Function (BIO_callback_fn)",
    "insertText": "BIO_get_callback(const BIO *b)"
  },
  {
    "label": "BIO_set_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_set_callback(BIO *b, BIO_callback_fn callback)"
  },
  {
    "label": "BIO_get_callback_ex()",
    "kind": "Method",
    "detail": "Function (BIO_callback_fn_ex)",
    "insertText": "BIO_get_callback_ex(const BIO *b)"
  },
  {
    "label": "BIO_set_callback_ex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_set_callback_ex(BIO *b, BIO_callback_fn_ex callback)"
  },
  {
    "label": "BIO_get_callback_arg()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "BIO_get_callback_arg(const BIO *b)"
  },
  {
    "label": "BIO_set_callback_arg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_set_callback_arg(BIO *b, char *arg)"
  },
  {
    "label": "BIO_method_name()",
    "kind": "Method",
    "detail": "Function (typedef struct bio_method_st BIO_METHOD ; const char*)",
    "insertText": "BIO_method_name(const BIO *b)"
  },
  {
    "label": "BIO_method_type()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_method_type(const BIO *b)"
  },
  {
    "label": "BIO_info_cb()",
    "kind": "Method",
    "detail": "Function (typedef int)",
    "insertText": "BIO_info_cb(BIO *, int, int)"
  },
  {
    "label": "DEFINE_STACK_OF()",
    "kind": "Method",
    "detail": "Function (typedef BIO_info_cb bio_info_cb ;)",
    "insertText": "DEFINE_STACK_OF(BIO) typedef int asn1_ps_func (BIO *b, unsigned char **pbuf, int *plen, void *parg)"
  },
  {
    "label": "BIO_set_app_data()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_SCTP struct bio_dgram_sctp_sndinfo { uint16_t snd_sid ; uint16_t snd_flags ; uint32_t snd_ppid ; uint32_t snd_context ; } ; struct bio_dgram_sctp_rcvinfo { uint16_t rcv_sid ; uint16_t rcv_ssn ; uint16_t rcv_flags ; uint32_t rcv_ppid ; uint32_t rcv_tsn ; uint32_t rcv_cumtsn ; uint32_t rcv_context ; } ; struct bio_dgram_sctp_prinfo { uint16_t pr_policy ; uint32_t pr_value ; } ; # endif # define BIO_C_SET_CONNECT 1 0 0 # define BIO_C_DO_STATE_MACHINE 1 0 1 # define BIO_C_SET_NBIO 1 0 2 # define BIO_C_SET_FD 1 0 4 # define BIO_C_GET_FD 1 0 5 # define BIO_C_SET_FILE_PTR 1 0 6 # define BIO_C_GET_FILE_PTR 1 0 7 # define BIO_C_SET_FILENAME 1 0 8 # define BIO_C_SET_SSL 1 0 9 # define BIO_C_GET_SSL 1 1 0 # define BIO_C_SET_MD 1 1 1 # define BIO_C_GET_MD 1 1 2 # define BIO_C_GET_CIPHER_STATUS 1 1 3 # define BIO_C_SET_BUF_MEM 1 1 4 # define BIO_C_GET_BUF_MEM_PTR 1 1 5 # define BIO_C_GET_BUFF_NUM_LINES 1 1 6 # define BIO_C_SET_BUFF_SIZE 1 1 7 # define BIO_C_SET_ACCEPT 1 1 8 # define BIO_C_SSL_MODE 1 1 9 # define BIO_C_GET_MD_CTX 1 2 0 # define BIO_C_SET_BUFF_READ_DATA 1 2 2 # define BIO_C_GET_CONNECT 1 2 3 # define BIO_C_GET_ACCEPT 1 2 4 # define BIO_C_SET_SSL_RENEGOTIATE_BYTES 1 2 5 # define BIO_C_GET_SSL_NUM_RENEGOTIATES 1 2 6 # define BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT 1 2 7 # define BIO_C_FILE_SEEK 1 2 8 # define BIO_C_GET_CIPHER_CTX 1 2 9 # define BIO_C_SET_BUF_MEM_EOF_RETURN 1 3 0 # define BIO_C_SET_BIND_MODE 1 3 1 # define BIO_C_GET_BIND_MODE 1 3 2 # define BIO_C_FILE_TELL 1 3 3 # define BIO_C_GET_SOCKS 1 3 4 # define BIO_C_SET_SOCKS 1 3 5 # define BIO_C_SET_WRITE_BUF_SIZE 1 3 6 # define BIO_C_GET_WRITE_BUF_SIZE 1 3 7 # define BIO_C_MAKE_BIO_PAIR 1 3 8 # define BIO_C_DESTROY_BIO_PAIR 1 3 9 # define BIO_C_GET_WRITE_GUARANTEE 1 4 0 # define BIO_C_GET_READ_REQUEST 1 4 1 # define BIO_C_SHUTDOWN_WR 1 4 2 # define BIO_C_NREAD0 1 4 3 # define BIO_C_NREAD 1 4 4 # define BIO_C_NWRITE0 1 4 5 # define BIO_C_NWRITE 1 4 6 # define BIO_C_RESET_READ_REQUEST 1 4 7 # define BIO_C_SET_MD_CTX 1 4 8 # define BIO_C_SET_PREFIX 1 4 9 # define BIO_C_GET_PREFIX 1 5 0 # define BIO_C_SET_SUFFIX 1 5 1 # define BIO_C_GET_SUFFIX 1 5 2 # define BIO_C_SET_EX_ARG 1 5 3 # define BIO_C_GET_EX_ARG 1 5 4 # define BIO_C_SET_CONNECT_MODE 1 5 5 # define)",
    "insertText": "BIO_set_app_data(s,arg) BIO_set_ex_data(s,0,arg) # define BIO_get_app_data(s) BIO_get_ex_data(s,0) # define BIO_set_nbio(b,n) BIO_ctrl(b,BIO_C_SET_NBIO,(n),NULL) # ifndef OPENSSL_NO_SOCK # define BIO_FAMILY_IPV4 4 # define BIO_FAMILY_IPV6 6 # define BIO_FAMILY_IPANY 256 # define BIO_set_conn_hostname(b,name) BIO_ctrl(b,BIO_C_SET_CONNECT,0, \\ (char *)(name)) # define BIO_set_conn_port(b,port) BIO_ctrl(b,BIO_C_SET_CONNECT,1, \\ (char *)(port)) # define BIO_set_conn_address(b,addr) BIO_ctrl(b,BIO_C_SET_CONNECT,2, \\ (char *)(addr)) # define BIO_set_conn_ip_family(b,f) BIO_int_ctrl(b,BIO_C_SET_CONNECT,3,f) # define BIO_get_conn_hostname(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,0)) # define BIO_get_conn_port(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,1)) # define BIO_get_conn_address(b) ((const BIO_ADDR *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,2)) # define BIO_get_conn_ip_family(b) BIO_ctrl(b,BIO_C_GET_CONNECT,3,NULL) # define BIO_set_conn_mode(b,n) BIO_ctrl(b,BIO_C_SET_CONNECT_MODE,(n),NULL) # define BIO_set_accept_name(b,name) BIO_ctrl(b,BIO_C_SET_ACCEPT,0, \\ (char *)(name)) # define BIO_set_accept_port(b,port) BIO_ctrl(b,BIO_C_SET_ACCEPT,1, \\ (char *)(port)) # define BIO_get_accept_name(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,0)) # define BIO_get_accept_port(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,1)) # define BIO_get_peer_name(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,2)) # define BIO_get_peer_port(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,3)) # define BIO_set_nbio_accept(b,n) BIO_ctrl(b,BIO_C_SET_ACCEPT,2,(n)?(void *)\"a\":NULL) # define BIO_set_accept_bios(b,bio) BIO_ctrl(b,BIO_C_SET_ACCEPT,3, \\ (char *)(bio)) # define BIO_set_accept_ip_family(b,f) BIO_int_ctrl(b,BIO_C_SET_ACCEPT,4,f) # define BIO_get_accept_ip_family(b) BIO_ctrl(b,BIO_C_GET_ACCEPT,4,NULL) # define BIO_BIND_NORMAL 0 # define BIO_BIND_REUSEADDR BIO_SOCK_REUSEADDR # define BIO_BIND_REUSEADDR_IF_UNUSED BIO_SOCK_REUSEADDR # define BIO_set_bind_mode(b,mode) BIO_ctrl(b,BIO_C_SET_BIND_MODE,mode,NULL) # define BIO_get_bind_mode(b) BIO_ctrl(b,BIO_C_GET_BIND_MODE,0,NULL) # define BIO_do_connect(b) BIO_do_handshake(b) # define BIO_do_accept(b) BIO_do_handshake(b) # endif # define BIO_do_handshake(b) BIO_ctrl(b,BIO_C_DO_STATE_MACHINE,0,NULL) # define BIO_set_fd(b,fd,c) BIO_int_ctrl(b,BIO_C_SET_FD,c,fd) # define BIO_get_fd(b,c) BIO_ctrl(b,BIO_C_GET_FD,0,(char *)(c)) # define BIO_set_fp(b,fp,c) BIO_ctrl(b,BIO_C_SET_FILE_PTR,c,(char *)(fp)) # define BIO_get_fp(b,fpp) BIO_ctrl(b,BIO_C_GET_FILE_PTR,0,(char *)(fpp)) # define BIO_seek(b,ofs) (int)BIO_ctrl(b,BIO_C_FILE_SEEK,ofs,NULL) # define BIO_tell(b) (int)BIO_ctrl(b,BIO_C_FILE_TELL,0,NULL) # ifdef CONST_STRICT int BIO_read_filename(BIO *b, const char *name)"
  },
  {
    "label": "BIO_read_filename()",
    "kind": "Method",
    "detail": "Function (# else # define)",
    "insertText": "BIO_read_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, \\ BIO_CLOSE|BIO_FP_READ,(char *)(name)) # endif # define BIO_write_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, \\ BIO_CLOSE|BIO_FP_WRITE,name) # define BIO_append_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, \\ BIO_CLOSE|BIO_FP_APPEND,name) # define BIO_rw_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, \\ BIO_CLOSE|BIO_FP_READ|BIO_FP_WRITE,name) # define BIO_set_ssl(b,ssl,c) BIO_ctrl(b,BIO_C_SET_SSL,c,(char *)(ssl)) # define BIO_get_ssl(b,sslp) BIO_ctrl(b,BIO_C_GET_SSL,0,(char *)(sslp)) # define BIO_set_ssl_mode(b,client) BIO_ctrl(b,BIO_C_SSL_MODE,client,NULL) # define BIO_set_ssl_renegotiate_bytes(b,num) \\ BIO_ctrl(b,BIO_C_SET_SSL_RENEGOTIATE_BYTES,num,NULL) # define BIO_get_num_renegotiates(b) \\ BIO_ctrl(b,BIO_C_GET_SSL_NUM_RENEGOTIATES,0,NULL) # define BIO_set_ssl_renegotiate_timeout(b,seconds) \\ BIO_ctrl(b,BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT,seconds,NULL) # define BIO_get_mem_data(b,pp) BIO_ctrl(b,BIO_CTRL_INFO,0,(char *)(pp)) # define BIO_set_mem_buf(b,bm,c) BIO_ctrl(b,BIO_C_SET_BUF_MEM,c,(char *)(bm)) # define BIO_get_mem_ptr(b,pp) BIO_ctrl(b,BIO_C_GET_BUF_MEM_PTR,0, \\ (char *)(pp)) # define BIO_set_mem_eof_return(b,v) \\ BIO_ctrl(b,BIO_C_SET_BUF_MEM_EOF_RETURN,v,NULL) # define BIO_get_buffer_num_lines(b) BIO_ctrl(b,BIO_C_GET_BUFF_NUM_LINES,0,NULL) # define BIO_set_buffer_size(b,size) BIO_ctrl(b,BIO_C_SET_BUFF_SIZE,size,NULL) # define BIO_set_read_buffer_size(b,size) BIO_int_ctrl(b,BIO_C_SET_BUFF_SIZE,size,0) # define BIO_set_write_buffer_size(b,size) BIO_int_ctrl(b,BIO_C_SET_BUFF_SIZE,size,1) # define BIO_set_buffer_read_data(b,buf,num) BIO_ctrl(b,BIO_C_SET_BUFF_READ_DATA,num,buf) # define BIO_dup_state(b,ret) BIO_ctrl(b,BIO_CTRL_DUP,0,(char *)(ret)) # define BIO_reset(b) (int)BIO_ctrl(b,BIO_CTRL_RESET,0,NULL) # define BIO_eof(b) (int)BIO_ctrl(b,BIO_CTRL_EOF,0,NULL) # define BIO_set_close(b,c) (int)BIO_ctrl(b,BIO_CTRL_SET_CLOSE,(c),NULL) # define BIO_get_close(b) (int)BIO_ctrl(b,BIO_CTRL_GET_CLOSE,0,NULL) # define BIO_pending(b) (int)BIO_ctrl(b,BIO_CTRL_PENDING,0,NULL) # define BIO_wpending(b) (int)BIO_ctrl(b,BIO_CTRL_WPENDING,0,NULL) size_t BIO_ctrl_pending(BIO *b)"
  },
  {
    "label": "BIO_ctrl_wpending()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "BIO_ctrl_wpending(BIO *b)"
  },
  {
    "label": "BIO_flush()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "BIO_flush(b) (int)BIO_ctrl(b,BIO_CTRL_FLUSH,0,NULL) # define BIO_get_info_callback(b,cbp) (int)BIO_ctrl(b,BIO_CTRL_GET_CALLBACK,0, \\ cbp) # define BIO_set_info_callback(b,cb) (int)BIO_callback_ctrl(b,BIO_CTRL_SET_CALLBACK,cb) # define BIO_buffer_get_num_lines(b) BIO_ctrl(b,BIO_CTRL_GET,0,NULL) # define BIO_buffer_peek(b,s,l) BIO_ctrl(b,BIO_CTRL_PEEK,(l),(s)) # define BIO_set_write_buf_size(b,size) (int)BIO_ctrl(b,BIO_C_SET_WRITE_BUF_SIZE,size,NULL) # define BIO_get_write_buf_size(b,size) (size_t)BIO_ctrl(b,BIO_C_GET_WRITE_BUF_SIZE,size,NULL) # define BIO_make_bio_pair(b1,b2) (int)BIO_ctrl(b1,BIO_C_MAKE_BIO_PAIR,0,b2) # define BIO_destroy_bio_pair(b) (int)BIO_ctrl(b,BIO_C_DESTROY_BIO_PAIR,0,NULL) # define BIO_shutdown_wr(b) (int)BIO_ctrl(b, BIO_C_SHUTDOWN_WR, 0, NULL) # define BIO_get_write_guarantee(b) (int)BIO_ctrl(b,BIO_C_GET_WRITE_GUARANTEE,0,NULL) # define BIO_get_read_request(b) (int)BIO_ctrl(b,BIO_C_GET_READ_REQUEST,0,NULL) size_t BIO_ctrl_get_write_guarantee(BIO *b)"
  },
  {
    "label": "BIO_ctrl_get_read_request()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "BIO_ctrl_get_read_request(BIO *b)"
  },
  {
    "label": "BIO_ctrl_reset_read_request()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_ctrl_reset_read_request(BIO *b)"
  },
  {
    "label": "BIO_ctrl_dgram_connect()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "BIO_ctrl_dgram_connect(b,peer) \\ (int)BIO_ctrl(b,BIO_CTRL_DGRAM_CONNECT,0, (char *)(peer)) # define BIO_ctrl_set_connected(b,peer) \\ (int)BIO_ctrl(b, BIO_CTRL_DGRAM_SET_CONNECTED, 0, (char *)(peer)) # define BIO_dgram_recv_timedout(b) \\ (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP, 0, NULL) # define BIO_dgram_send_timedout(b) \\ (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP, 0, NULL) # define BIO_dgram_get_peer(b,peer) \\ (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_PEER, 0, (char *)(peer)) # define BIO_dgram_set_peer(b,peer) \\ (int)BIO_ctrl(b, BIO_CTRL_DGRAM_SET_PEER, 0, (char *)(peer)) # define BIO_dgram_get_mtu_overhead(b) \\ (unsigned int)BIO_ctrl((b), BIO_CTRL_DGRAM_GET_MTU_OVERHEAD, 0, NULL) #define BIO_get_ex_new_index(l, p, newf, dupf, freef) \\ CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_BIO, l, p, newf, dupf, freef) int BIO_set_ex_data(BIO *bio, int idx, void *data)"
  },
  {
    "label": "BIO_get_ex_data()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "BIO_get_ex_data(BIO *bio, int idx)"
  },
  {
    "label": "BIO_number_read()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "BIO_number_read(BIO *bio)"
  },
  {
    "label": "BIO_number_written()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "BIO_number_written(BIO *bio)"
  },
  {
    "label": "BIO_asn1_set_prefix()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_asn1_set_prefix(BIO *b, asn1_ps_func *prefix, asn1_ps_func *prefix_free)"
  },
  {
    "label": "BIO_asn1_get_prefix()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_asn1_get_prefix(BIO *b, asn1_ps_func **pprefix, asn1_ps_func **pprefix_free)"
  },
  {
    "label": "BIO_asn1_set_suffix()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_asn1_set_suffix(BIO *b, asn1_ps_func *suffix, asn1_ps_func *suffix_free)"
  },
  {
    "label": "BIO_asn1_get_suffix()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_asn1_get_suffix(BIO *b, asn1_ps_func **psuffix, asn1_ps_func **psuffix_free)"
  },
  {
    "label": "BIO_s_file()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_s_file(void)"
  },
  {
    "label": "BIO_new_file()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_new_file(const char *filename, const char *mode)"
  },
  {
    "label": "BIO_new_fp()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_STDIO BIO*)",
    "insertText": "BIO_new_fp(FILE *stream, int close_flag)"
  },
  {
    "label": "BIO_new()",
    "kind": "Method",
    "detail": "Function (# endif BIO*)",
    "insertText": "BIO_new(const BIO_METHOD *type)"
  },
  {
    "label": "BIO_free()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_free(BIO *a)"
  },
  {
    "label": "BIO_set_data()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_set_data(BIO *a, void *ptr)"
  },
  {
    "label": "BIO_get_data()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "BIO_get_data(BIO *a)"
  },
  {
    "label": "BIO_set_init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_set_init(BIO *a, int init)"
  },
  {
    "label": "BIO_get_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_get_init(BIO *a)"
  },
  {
    "label": "BIO_set_shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_set_shutdown(BIO *a, int shut)"
  },
  {
    "label": "BIO_get_shutdown()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_get_shutdown(BIO *a)"
  },
  {
    "label": "BIO_vfree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_vfree(BIO *a)"
  },
  {
    "label": "BIO_up_ref()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_up_ref(BIO *a)"
  },
  {
    "label": "BIO_read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_read(BIO *b, void *data, int dlen)"
  },
  {
    "label": "BIO_read_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_read_ex(BIO *b, void *data, size_t dlen, size_t *readbytes)"
  },
  {
    "label": "BIO_gets()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_gets(BIO *bp, char *buf, int size)"
  },
  {
    "label": "BIO_write()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_write(BIO *b, const void *data, int dlen)"
  },
  {
    "label": "BIO_write_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_write_ex(BIO *b, const void *data, size_t dlen, size_t *written)"
  },
  {
    "label": "BIO_puts()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_puts(BIO *bp, const char *buf)"
  },
  {
    "label": "BIO_indent()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_indent(BIO *b, int indent, int max)"
  },
  {
    "label": "BIO_ctrl()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "BIO_ctrl(BIO *bp, int cmd, long larg, void *parg)"
  },
  {
    "label": "BIO_callback_ctrl()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "BIO_callback_ctrl(BIO *b, int cmd, BIO_info_cb *fp)"
  },
  {
    "label": "BIO_ptr_ctrl()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "BIO_ptr_ctrl(BIO *bp, int cmd, long larg)"
  },
  {
    "label": "BIO_int_ctrl()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "BIO_int_ctrl(BIO *bp, int cmd, long larg, int iarg)"
  },
  {
    "label": "BIO_push()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_push(BIO *b, BIO *append)"
  },
  {
    "label": "BIO_pop()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_pop(BIO *b)"
  },
  {
    "label": "BIO_free_all()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_free_all(BIO *a)"
  },
  {
    "label": "BIO_find_type()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_find_type(BIO *b, int bio_type)"
  },
  {
    "label": "BIO_next()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_next(BIO *b)"
  },
  {
    "label": "BIO_set_next()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_set_next(BIO *b, BIO *next)"
  },
  {
    "label": "BIO_get_retry_BIO()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_get_retry_BIO(BIO *bio, int *reason)"
  },
  {
    "label": "BIO_get_retry_reason()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_get_retry_reason(BIO *bio)"
  },
  {
    "label": "BIO_set_retry_reason()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_set_retry_reason(BIO *bio, int reason)"
  },
  {
    "label": "BIO_dup_chain()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_dup_chain(BIO *in)"
  },
  {
    "label": "BIO_nread0()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_nread0(BIO *bio, char **buf)"
  },
  {
    "label": "BIO_nread()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_nread(BIO *bio, char **buf, int num)"
  },
  {
    "label": "BIO_nwrite0()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_nwrite0(BIO *bio, char **buf)"
  },
  {
    "label": "BIO_nwrite()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_nwrite(BIO *bio, char **buf, int num)"
  },
  {
    "label": "BIO_debug_callback()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "BIO_debug_callback(BIO *bio, int cmd, const char *argp, int argi, long argl, long ret)"
  },
  {
    "label": "BIO_s_mem()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_s_mem(void)"
  },
  {
    "label": "BIO_s_secmem()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_s_secmem(void)"
  },
  {
    "label": "BIO_new_mem_buf()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_new_mem_buf(const void *buf, int len)"
  },
  {
    "label": "BIO_s_socket()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_SOCK const BIO_METHOD*)",
    "insertText": "BIO_s_socket(void)"
  },
  {
    "label": "BIO_s_connect()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_s_connect(void)"
  },
  {
    "label": "BIO_s_accept()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_s_accept(void)"
  },
  {
    "label": "BIO_s_fd()",
    "kind": "Method",
    "detail": "Function (# endif const BIO_METHOD*)",
    "insertText": "BIO_s_fd(void)"
  },
  {
    "label": "BIO_s_log()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_s_log(void)"
  },
  {
    "label": "BIO_s_bio()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_s_bio(void)"
  },
  {
    "label": "BIO_s_null()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_s_null(void)"
  },
  {
    "label": "BIO_f_null()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_f_null(void)"
  },
  {
    "label": "BIO_f_buffer()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_f_buffer(void)"
  },
  {
    "label": "BIO_f_linebuffer()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_f_linebuffer(void)"
  },
  {
    "label": "BIO_f_nbio_test()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_f_nbio_test(void)"
  },
  {
    "label": "BIO_s_datagram()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_DGRAM const BIO_METHOD*)",
    "insertText": "BIO_s_datagram(void)"
  },
  {
    "label": "BIO_dgram_non_fatal_error()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_dgram_non_fatal_error(int error)"
  },
  {
    "label": "BIO_new_dgram()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_new_dgram(int fd, int close_flag)"
  },
  {
    "label": "BIO_s_datagram_sctp()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_SCTP const BIO_METHOD*)",
    "insertText": "BIO_s_datagram_sctp(void)"
  },
  {
    "label": "BIO_new_dgram_sctp()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_new_dgram_sctp(int fd, int close_flag)"
  },
  {
    "label": "BIO_dgram_is_sctp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_dgram_is_sctp(BIO *bio)"
  },
  {
    "label": "BIO_dgram_sctp_notification_cb()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_dgram_sctp_notification_cb(BIO *b, void (*handle_notifications) (BIO *bio, void *context, void *buf), void *context)"
  },
  {
    "label": "BIO_dgram_sctp_wait_for_dry()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_dgram_sctp_wait_for_dry(BIO *b)"
  },
  {
    "label": "BIO_dgram_sctp_msg_waiting()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_dgram_sctp_msg_waiting(BIO *b)"
  },
  {
    "label": "BIO_sock_should_retry()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef OPENSSL_NO_SOCK int)",
    "insertText": "BIO_sock_should_retry(int i)"
  },
  {
    "label": "BIO_sock_non_fatal_error()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_sock_non_fatal_error(int error)"
  },
  {
    "label": "BIO_fd_should_retry()",
    "kind": "Method",
    "detail": "Function (# endif int)",
    "insertText": "BIO_fd_should_retry(int i)"
  },
  {
    "label": "BIO_fd_non_fatal_error()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_fd_non_fatal_error(int error)"
  },
  {
    "label": "BIO_dump_cb()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_dump_cb(int (*cb) (const void *data, size_t len, void *u), void *u, const char *s, int len)"
  },
  {
    "label": "BIO_dump_indent_cb()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_dump_indent_cb(int (*cb) (const void *data, size_t len, void *u), void *u, const char *s, int len, int indent)"
  },
  {
    "label": "BIO_dump()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_dump(BIO *b, const char *bytes, int len)"
  },
  {
    "label": "BIO_dump_indent()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_dump_indent(BIO *b, const char *bytes, int len, int indent)"
  },
  {
    "label": "BIO_dump_fp()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_STDIO int)",
    "insertText": "BIO_dump_fp(FILE *fp, const char *s, int len)"
  },
  {
    "label": "BIO_dump_indent_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_dump_indent_fp(FILE *fp, const char *s, int len, int indent)"
  },
  {
    "label": "BIO_hex_string()",
    "kind": "Method",
    "detail": "Function (# endif int)",
    "insertText": "BIO_hex_string(BIO *out, int indent, int width, unsigned char *data, int datalen)"
  },
  {
    "label": "BIO_ADDR_new()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_SOCK BIO_ADDR*)",
    "insertText": "BIO_ADDR_new(void)"
  },
  {
    "label": "BIO_ADDR_rawmake()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_ADDR_rawmake(BIO_ADDR *ap, int family, const void *where, size_t wherelen, unsigned short port)"
  },
  {
    "label": "BIO_ADDR_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_ADDR_free(BIO_ADDR *)"
  },
  {
    "label": "BIO_ADDR_clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_ADDR_clear(BIO_ADDR *ap)"
  },
  {
    "label": "BIO_ADDR_family()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_ADDR_family(const BIO_ADDR *ap)"
  },
  {
    "label": "BIO_ADDR_rawaddress()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_ADDR_rawaddress(const BIO_ADDR *ap, void *p, size_t *l)"
  },
  {
    "label": "BIO_ADDR_rawport()",
    "kind": "Method",
    "detail": "Function (unsigned short)",
    "insertText": "BIO_ADDR_rawport(const BIO_ADDR *ap)"
  },
  {
    "label": "BIO_ADDR_hostname_string()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "BIO_ADDR_hostname_string(const BIO_ADDR *ap, int numeric)"
  },
  {
    "label": "BIO_ADDR_service_string()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "BIO_ADDR_service_string(const BIO_ADDR *ap, int numeric)"
  },
  {
    "label": "BIO_ADDR_path_string()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "BIO_ADDR_path_string(const BIO_ADDR *ap)"
  },
  {
    "label": "BIO_ADDRINFO_next()",
    "kind": "Method",
    "detail": "Function (const BIO_ADDRINFO*)",
    "insertText": "BIO_ADDRINFO_next(const BIO_ADDRINFO *bai)"
  },
  {
    "label": "BIO_ADDRINFO_family()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_ADDRINFO_family(const BIO_ADDRINFO *bai)"
  },
  {
    "label": "BIO_ADDRINFO_socktype()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_ADDRINFO_socktype(const BIO_ADDRINFO *bai)"
  },
  {
    "label": "BIO_ADDRINFO_protocol()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_ADDRINFO_protocol(const BIO_ADDRINFO *bai)"
  },
  {
    "label": "BIO_ADDRINFO_address()",
    "kind": "Method",
    "detail": "Function (const BIO_ADDR*)",
    "insertText": "BIO_ADDRINFO_address(const BIO_ADDRINFO *bai)"
  },
  {
    "label": "BIO_ADDRINFO_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_ADDRINFO_free(BIO_ADDRINFO *bai)"
  },
  {
    "label": "BIO_parse_hostserv()",
    "kind": "Method",
    "detail": "Function (enum BIO_hostserv_priorities { BIO_PARSE_PRIO_HOST,BIO_PARSE_PRIO_SERV } ; int)",
    "insertText": "BIO_parse_hostserv(const char *hostserv, char **host, char **service, enum BIO_hostserv_priorities hostserv_prio)"
  },
  {
    "label": "BIO_lookup()",
    "kind": "Method",
    "detail": "Function (enum BIO_lookup_type { BIO_LOOKUP_CLIENT,BIO_LOOKUP_SERVER } ; int)",
    "insertText": "BIO_lookup(const char *host, const char *service, enum BIO_lookup_type lookup_type, int family, int socktype, BIO_ADDRINFO **res)"
  },
  {
    "label": "BIO_lookup_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_lookup_ex(const char *host, const char *service, int lookup_type, int family, int socktype, int protocol, BIO_ADDRINFO **res)"
  },
  {
    "label": "BIO_sock_error()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_sock_error(int sock)"
  },
  {
    "label": "BIO_socket_ioctl()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_socket_ioctl(int fd, long type, void *arg)"
  },
  {
    "label": "BIO_socket_nbio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_socket_nbio(int fd, int mode)"
  },
  {
    "label": "BIO_sock_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_sock_init(void)"
  },
  {
    "label": "BIO_sock_cleanup()",
    "kind": "Method",
    "detail": "Function (# if OPENSSL_API_COMPAT<0 x10100000L # define)",
    "insertText": "BIO_sock_cleanup() while(0) continue # endif int BIO_set_tcp_ndelay(int sock, int turn_on)"
  },
  {
    "label": "DEPRECATEDIN_1_1_0()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEPRECATEDIN_1_1_0(struct hostent *BIO_gethostbyname(const char *name)) DEPRECATEDIN_1_1_0(int BIO_get_port(const char *str, unsigned short *port_ptr)) DEPRECATEDIN_1_1_0(int BIO_get_host_ip(const char *str, unsigned char *ip)) DEPRECATEDIN_1_1_0(int BIO_get_accept_socket(char *host_port, int mode)) DEPRECATEDIN_1_1_0(int BIO_accept(int sock, char **ip_port))"
  },
  {
    "label": "BIO_sock_info()",
    "kind": "Method",
    "detail": "Function (BIO_ADDR* addr ; } ; enum BIO_sock_info_type { BIO_SOCK_INFO_ADDRESS } ; int)",
    "insertText": "BIO_sock_info(int sock, enum BIO_sock_info_type type, union BIO_sock_info_u *info)"
  },
  {
    "label": "BIO_socket()",
    "kind": "Method",
    "detail": "Function (# define BIO_SOCK_REUSEADDR 0 x01 # define BIO_SOCK_V6_ONLY 0 x02 # define BIO_SOCK_KEEPALIVE 0 x04 # define BIO_SOCK_NONBLOCK 0 x08 # define BIO_SOCK_NODELAY 0 x10 int)",
    "insertText": "BIO_socket(int domain, int socktype, int protocol, int options)"
  },
  {
    "label": "BIO_connect()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_connect(int sock, const BIO_ADDR *addr, int options)"
  },
  {
    "label": "BIO_bind()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_bind(int sock, const BIO_ADDR *addr, int options)"
  },
  {
    "label": "BIO_listen()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_listen(int sock, const BIO_ADDR *addr, int options)"
  },
  {
    "label": "BIO_accept_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_accept_ex(int accept_sock, BIO_ADDR *addr, int options)"
  },
  {
    "label": "BIO_closesocket()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_closesocket(int sock)"
  },
  {
    "label": "BIO_new_socket()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_new_socket(int sock, int close_flag)"
  },
  {
    "label": "BIO_new_connect()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_new_connect(const char *host_port)"
  },
  {
    "label": "BIO_new_accept()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_new_accept(const char *host_port)"
  },
  {
    "label": "BIO_new_fd()",
    "kind": "Method",
    "detail": "Function (# endif BIO*)",
    "insertText": "BIO_new_fd(int fd, int close_flag)"
  },
  {
    "label": "BIO_new_bio_pair()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_new_bio_pair(BIO **bio1, size_t writebuf1, BIO **bio2, size_t writebuf2)"
  },
  {
    "label": "BIO_copy_next_retry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_copy_next_retry(BIO *b)"
  },
  {
    "label": "ossl_bio__attr__()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "ossl_bio__attr__(x) # if defined(__GNUC__) && defined(__STDC_VERSION__) \\ && !defined(__APPLE__) # if __STDC_VERSION__ >= 199901L # undef ossl_bio__attr__ # define ossl_bio__attr__ __attribute__ # if __GNUC__*10 + __GNUC_MINOR__ >= 44 # define ossl_bio__printf__ __gnu_printf__ # else # define ossl_bio__printf__ __printf__ # endif # endif # endif int BIO_printf(BIO *bio, const char *format, ...) ossl_bio__attr__((__format__(ossl_bio__printf__, 2, 3)))"
  },
  {
    "label": "BIO_vprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_vprintf(BIO *bio, const char *format, va_list args) ossl_bio__attr__((__format__(ossl_bio__printf__, 2, 0)))"
  },
  {
    "label": "BIO_snprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_snprintf(char *buf, size_t n, const char *format, ...) ossl_bio__attr__((__format__(ossl_bio__printf__, 3, 4)))"
  },
  {
    "label": "BIO_vsnprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_vsnprintf(char *buf, size_t n, const char *format, va_list args) ossl_bio__attr__((__format__(ossl_bio__printf__, 3, 0)))"
  },
  {
    "label": "BIO_meth_new()",
    "kind": "Method",
    "detail": "Function (# undef ossl_bio__attr__ # undef ossl_bio__printf__ BIO_METHOD*)",
    "insertText": "BIO_meth_new(int type, const char *name)"
  },
  {
    "label": "BIO_meth_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BIO_meth_free(BIO_METHOD *biom)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*BIO_meth_get_write(const BIO_METHOD *biom)) (BIO *, const char *, int)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*BIO_meth_get_write_ex(const BIO_METHOD *biom)) (BIO *, const char *, size_t, size_t *)"
  },
  {
    "label": "BIO_meth_set_write()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_meth_set_write(BIO_METHOD *biom, int (*write) (BIO *, const char *, int))"
  },
  {
    "label": "BIO_meth_set_write_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_meth_set_write_ex(BIO_METHOD *biom, int (*bwrite) (BIO *, const char *, size_t, size_t *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*BIO_meth_get_read(const BIO_METHOD *biom)) (BIO *, char *, int)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*BIO_meth_get_read_ex(const BIO_METHOD *biom)) (BIO *, char *, size_t, size_t *)"
  },
  {
    "label": "BIO_meth_set_read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_meth_set_read(BIO_METHOD *biom, int (*read) (BIO *, char *, int))"
  },
  {
    "label": "BIO_meth_set_read_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_meth_set_read_ex(BIO_METHOD *biom, int (*bread) (BIO *, char *, size_t, size_t *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*BIO_meth_get_puts(const BIO_METHOD *biom)) (BIO *, const char *)"
  },
  {
    "label": "BIO_meth_set_puts()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_meth_set_puts(BIO_METHOD *biom, int (*puts) (BIO *, const char *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*BIO_meth_get_gets(const BIO_METHOD *biom)) (BIO *, char *, int)"
  },
  {
    "label": "BIO_meth_set_gets()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_meth_set_gets(BIO_METHOD *biom, int (*gets) (BIO *, char *, int))"
  },
  {
    "label": "long()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "long(*BIO_meth_get_ctrl(const BIO_METHOD *biom)) (BIO *, int, long, void *)"
  },
  {
    "label": "BIO_meth_set_ctrl()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_meth_set_ctrl(BIO_METHOD *biom, long (*ctrl) (BIO *, int, long, void *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*BIO_meth_get_create(const BIO_METHOD *bion)) (BIO *)"
  },
  {
    "label": "BIO_meth_set_create()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_meth_set_create(BIO_METHOD *biom, int (*create) (BIO *))"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*BIO_meth_get_destroy(const BIO_METHOD *biom)) (BIO *)"
  },
  {
    "label": "BIO_meth_set_destroy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_meth_set_destroy(BIO_METHOD *biom, int (*destroy) (BIO *))"
  },
  {
    "label": "long()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "long(*BIO_meth_get_callback_ctrl(const BIO_METHOD *biom)) (BIO *, int, BIO_info_cb *)"
  },
  {
    "label": "BIO_meth_set_callback_ctrl()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BIO_meth_set_callback_ctrl(BIO_METHOD *biom, long (*callback_ctrl) (BIO *, int, BIO_info_cb *))"
  }
]