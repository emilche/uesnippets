[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "TKeyValuePair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TKeyValuePair"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "param",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "param"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FSearchTagDataPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSearchTagDataPair"
  },
  {
    "label": "FSearchTagDataPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSearchTagDataPair"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "UGraphNodeContextMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGraphNodeContextMenuContext"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "FNodeHandlingFunctor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNodeHandlingFunctor"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "FBlueprintActionFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionFilter"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "as",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "as"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "CreatePinsForFunctionCall()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreatePinsForFunctionCall(const UFunction* Function)"
  },
  {
    "label": "CreateExecPinsForFunctionCall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateExecPinsForFunctionCall(const UFunction* Function)"
  },
  {
    "label": "GetUserFacingFunctionName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetUserFacingFunctionName(const UFunction* Function, ENodeTitleType::Type NodeTitleType = ENodeTitleType::EditableTitle)"
  },
  {
    "label": "GeneratePinTooltipFromFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GeneratePinTooltipFromFunction(UEdGraphPin& Pin, const UFunction* Function)"
  },
  {
    "label": "GetDefaultTooltipForFunction()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultTooltipForFunction(const UFunction* Function)"
  },
  {
    "label": "GetDefaultCategoryForFunction()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDefaultCategoryForFunction(const UFunction* Function, const FText& BaseCategory)"
  },
  {
    "label": "GetKeywordsForFunction()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetKeywordsForFunction(const UFunction* Function)"
  },
  {
    "label": "ShouldDrawCompact()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldDrawCompact(const UFunction* Function)"
  },
  {
    "label": "GetCompactNodeTitle()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCompactNodeTitle(const UFunction* Function)"
  },
  {
    "label": "SetFromFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFromFunction(const UFunction* Function)"
  },
  {
    "label": "CallForEachElementInArrayExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallForEachElementInArrayExpansion(UK2Node* Node, UEdGraphPin* MultiSelf, FKismetCompilerContext& CompilerContext, UEdGraph* SourceGraph)"
  },
  {
    "label": "IsStructureWildcardProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStructureWildcardProperty(const UFunction* InFunction, const FName PropertyName)"
  },
  {
    "label": "IsWildcardProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWildcardProperty(const UFunction* InFunction, const FProperty* InProperty)"
  },
  {
    "label": "CanFunctionSupportMultipleTargets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanFunctionSupportMultipleTargets(UFunction const* InFunction)"
  },
  {
    "label": "CanEditorOnlyFunctionBeCalled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditorOnlyFunctionBeCalled(const UFunction* InFunction, const UObject* InObject)"
  },
  {
    "label": "GetPaletteIconForFunction()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetPaletteIconForFunction(UFunction const* Function, FLinearColor& OutColor)"
  },
  {
    "label": "GetExpandEnumPinNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetExpandEnumPinNames(const UFunction* Function, TArray<FName>& EnumNamesToCheck)"
  },
  {
    "label": "DetermineWantsEnumToExecExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetermineWantsEnumToExecExpansion(const UFunction* Function)"
  },
  {
    "label": "ReconnectPureExecPins()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReconnectPureExecPins(TArray<UEdGraphPin*>& OldPins)"
  },
  {
    "label": "ConformContainerPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConformContainerPins()"
  },
  {
    "label": "ToggleNodePurityOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleNodePurityOverride()"
  },
  {
    "label": "InvalidatePinTooltips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidatePinTooltips()"
  },
  {
    "label": "FixupSelfMemberContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupSelfMemberContext()"
  },
  {
    "label": "GetRequiredParamNames()",
    "kind": "Method",
    "detail": "Function (TSet<FName>)",
    "insertText": "GetRequiredParamNames(const UFunction* ForFunction)"
  }
]