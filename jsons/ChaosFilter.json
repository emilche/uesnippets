[
  {
    "label": "SourceType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SourceType"
  },
  {
    "label": "DestinationType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DestinationType"
  },
  {
    "label": "SortMethodType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SortMethodType"
  },
  {
    "label": "IChaosEventFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChaosEventFilter"
  },
  {
    "label": "IChaosEventFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" template<class SourceType,class DestinationType,class SortMethodType> class IChaosEventFilter { public : ~)",
    "insertText": "IChaosEventFilter()"
  },
  {
    "label": "FilterEvents()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FilterEvents(const FTransform& ChaosComponentTransform, const SourceType& RawInputDataArray)"
  },
  {
    "label": "FilterEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterEvents(const SourceType& RawInputDataArray)"
  },
  {
    "label": "SortEvents()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "SortEvents(DestinationType& InOutFilteredEvents, SortMethodType SortMethod, const FTransform& InTransform)"
  },
  {
    "label": "GetFilteredResults()",
    "kind": "Method",
    "detail": "Function (const DestinationType&)",
    "insertText": "GetFilteredResults()"
  },
  {
    "label": "SetTransform()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetTransform(const FTransform& TransformIn)"
  }
]