[
  {
    "label": "ExpandUmaLogger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExpandUmaLogger"
  },
  {
    "label": "ExpandUmaLogger()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_EXPAND_UMA_LOGGER_H_ # define MODULES_AUDIO_CODING_NETEQ_EXPAND_UMA_LOGGER_H_ # include<stdint . h> # include<memory> # include<string> # include \" absl / strings / string_view . h \" # include \" absl / types / optional . h \" # include \" api / neteq / tick_timer . h \" namespace webrtc { class ExpandUmaLogger { public :)",
    "insertText": "ExpandUmaLogger(absl::string_view uma_name, int logging_period_s, const TickTimer* tick_timer)"
  },
  {
    "label": "ExpandUmaLogger()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ExpandUmaLogger()"
  },
  {
    "label": "ExpandUmaLogger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandUmaLogger(const ExpandUmaLogger&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ExpandUmaLogger&)",
    "insertText": "operator(const ExpandUmaLogger&)"
  },
  {
    "label": "UpdateSampleCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSampleCounter(uint64_t value, int sample_rate_hz)"
  }
]