[
  {
    "label": "FChaosCollisionEventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosCollisionEventData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FChaosCollisionEventRequestSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosCollisionEventRequestSettings"
  },
  {
    "label": "FChaosCollisionEventFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosCollisionEventFilter"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" ChaosFilter . h \" # include \" EventsData . h \" # include \" ChaosCollisionEventFilter . generated . h \")",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = \"Data\")"
  },
  {
    "label": "FChaosCollisionEventData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FChaosCollisionEventData() : Location(FVector::ZeroVector) , Normal(FVector::ZeroVector) , Velocity1(FVector::ZeroVector) , Velocity2(FVector::ZeroVector) , Mass1(0.0f) , Mass2(0.0f) , Impulse(FVector::ZeroVector)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (SortNone,SortByHighestMass,SortByHighestSpeed,SortByHighestImpulse,SortByNearestFirst,Count)",
    "insertText": "UMETA(Hidden)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"Filters\")"
  },
  {
    "label": "FChaosCollisionEventRequestSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FChaosCollisionEventRequestSettings() : MaxNumberResults(0) , MinMass(0.0f) , MinSpeed(0.0f) , MinImpulse(0.0f) , MaxDistance(0.0f) , SortMethod(EChaosCollisionSortMethod::SortByHighestMass)"
  },
  {
    "label": "FChaosCollisionEventFilter()",
    "kind": "Method",
    "detail": "Function (} } ; class FChaosCollisionEventFilter : public IChaosEventFilter<Chaos::FCollisionDataArray,TArray<FChaosCollisionEventData>,EChaosCollisionSortMethod> { public :)",
    "insertText": "FChaosCollisionEventFilter(FChaosCollisionEventRequestSettings* FilterSettingsIn) : CollisionEventRequestSettings(FilterSettingsIn)"
  },
  {
    "label": "FilterEvents()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FilterEvents(const FTransform& ChaosComponentTransform, const Chaos::FCollisionDataArray& RawCollisionDataArray)"
  },
  {
    "label": "SortEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortEvents(TArray<FChaosCollisionEventData>& InOutCollisionEvents, EChaosCollisionSortMethod SortMethod, const FTransform& InTransform)"
  },
  {
    "label": "FChaosCollisionEventFilter()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FChaosCollisionEventFilter() : CollisionEventRequestSettings(nullptr)"
  }
]