[
  {
    "label": "FWorldInitializationValues",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldInitializationValues"
  },
  {
    "label": "AGameModeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameModeBase"
  },
  {
    "label": "FWorldInitializationValues()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Templates / SubclassOf . h \" struct FWorldInitializationValues {)",
    "insertText": "FWorldInitializationValues() : bInitializeScenes(true) , bAllowAudioPlayback(true) , bRequiresHitProxies(true) , bCreatePhysicsScene(true) , bCreateNavigation(true) , bCreateAISystem(true) , bShouldSimulatePhysics(true) , bEnableTraceCollision(false) , bForceUseMovementComponentInNonGameWorld(false) , bTransactional(true) , bCreateFXSystem(true) , bCreateWorldPartition(false) , bEnableWorldPartitionStreaming(true)"
  },
  {
    "label": "InitializeScenes()",
    "kind": "Method",
    "detail": "Function (} uint32 bInitializeScenes : 1 ; uint32 bAllowAudioPlayback : 1 ; uint32 bRequiresHitProxies : 1 ; uint32 bCreatePhysicsScene : 1 ; uint32 bCreateNavigation : 1 ; uint32 bCreateAISystem : 1 ; uint32 bShouldSimulatePhysics : 1 ; uint32 bEnableTraceCollision : 1 ; uint32 bForceUseMovementComponentInNonGameWorld : 1 ; uint32 bTransactional : 1 ; uint32 bCreateFXSystem : 1 ; uint32 bCreateWorldPartition : 1 ; uint32 bEnableWorldPartitionStreaming : 1 ; TSubclassOf<class AGameModeBase> DefaultGameMode ; FWorldInitializationValues&)",
    "insertText": "InitializeScenes(const bool bInitialize)"
  },
  {
    "label": "AllowAudioPlayback()",
    "kind": "Method",
    "detail": "Function (bInitializeScenes = bInitialize ; return* this ; } FWorldInitializationValues&)",
    "insertText": "AllowAudioPlayback(const bool bAllow)"
  },
  {
    "label": "RequiresHitProxies()",
    "kind": "Method",
    "detail": "Function (bAllowAudioPlayback = bAllow ; return* this ; } FWorldInitializationValues&)",
    "insertText": "RequiresHitProxies(const bool bRequires)"
  },
  {
    "label": "CreatePhysicsScene()",
    "kind": "Method",
    "detail": "Function (bRequiresHitProxies = bRequires ; return* this ; } FWorldInitializationValues&)",
    "insertText": "CreatePhysicsScene(const bool bCreate)"
  },
  {
    "label": "CreateNavigation()",
    "kind": "Method",
    "detail": "Function (bCreatePhysicsScene = bCreate ; return* this ; } FWorldInitializationValues&)",
    "insertText": "CreateNavigation(const bool bCreate)"
  },
  {
    "label": "CreateAISystem()",
    "kind": "Method",
    "detail": "Function (bCreateNavigation = bCreate ; return* this ; } FWorldInitializationValues&)",
    "insertText": "CreateAISystem(const bool bCreate)"
  },
  {
    "label": "ShouldSimulatePhysics()",
    "kind": "Method",
    "detail": "Function (bCreateAISystem = bCreate ; return* this ; } FWorldInitializationValues&)",
    "insertText": "ShouldSimulatePhysics(const bool bInShouldSimulatePhysics)"
  },
  {
    "label": "EnableTraceCollision()",
    "kind": "Method",
    "detail": "Function (bShouldSimulatePhysics = bInShouldSimulatePhysics ; return* this ; } FWorldInitializationValues&)",
    "insertText": "EnableTraceCollision(const bool bInEnableTraceCollision)"
  },
  {
    "label": "ForceUseMovementComponentInNonGameWorld()",
    "kind": "Method",
    "detail": "Function (bEnableTraceCollision = bInEnableTraceCollision ; return* this ; } FWorldInitializationValues&)",
    "insertText": "ForceUseMovementComponentInNonGameWorld(const bool bInForceUseMovementComponentInNonGameWorld)"
  },
  {
    "label": "SetTransactional()",
    "kind": "Method",
    "detail": "Function (bForceUseMovementComponentInNonGameWorld = bInForceUseMovementComponentInNonGameWorld ; return* this ; } FWorldInitializationValues&)",
    "insertText": "SetTransactional(const bool bInTransactional)"
  },
  {
    "label": "CreateFXSystem()",
    "kind": "Method",
    "detail": "Function (bTransactional = bInTransactional ; return* this ; } FWorldInitializationValues&)",
    "insertText": "CreateFXSystem(const bool bCreate)"
  },
  {
    "label": "CreateWorldPartition()",
    "kind": "Method",
    "detail": "Function (bCreateFXSystem = bCreate ; return* this ; } FWorldInitializationValues&)",
    "insertText": "CreateWorldPartition(const bool bCreate)"
  },
  {
    "label": "EnableWorldPartitionStreaming()",
    "kind": "Method",
    "detail": "Function (bCreateWorldPartition = bCreate ; return* this ; } FWorldInitializationValues&)",
    "insertText": "EnableWorldPartitionStreaming(const bool bEnableStreaming)"
  },
  {
    "label": "SetDefaultGameMode()",
    "kind": "Method",
    "detail": "Function (bEnableWorldPartitionStreaming = bEnableStreaming ; return* this ; } FWorldInitializationValues&)",
    "insertText": "SetDefaultGameMode(TSubclassOf<class AGameModeBase> GameMode)"
  }
]