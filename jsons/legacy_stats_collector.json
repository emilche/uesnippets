[
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "RTCStatsIceCandidateType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCStatsIceCandidateType"
  },
  {
    "label": "LegacyStatsCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LegacyStatsCollector"
  },
  {
    "label": "LegacyStatsCollectorTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LegacyStatsCollectorTest"
  },
  {
    "label": "TransportStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TransportStats"
  },
  {
    "label": "SessionStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SessionStats"
  },
  {
    "label": "LegacyStatsCollector()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "LegacyStatsCollector(PeerConnectionInternal* pc)"
  },
  {
    "label": "AddStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStream(MediaStreamInterface* stream)"
  },
  {
    "label": "AddTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTrack(MediaStreamTrackInterface* track)"
  },
  {
    "label": "UpdateStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStats(PeerConnectionInterface::StatsOutputLevel level)"
  },
  {
    "label": "IsValidTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidTrack(const std::string& track_id)"
  },
  {
    "label": "InvalidateCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateCache()"
  },
  {
    "label": "GetTimeNow()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetTimeNow()"
  },
  {
    "label": "CopySelectedReports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopySelectedReports(const std::string& selector, StatsReports* reports)"
  },
  {
    "label": "ExtractDataInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractDataInfo()"
  },
  {
    "label": "ExtractSessionInfo()",
    "kind": "Method",
    "detail": "Function (std::string>)",
    "insertText": "ExtractSessionInfo()"
  },
  {
    "label": "ExtractBweInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractBweInfo()"
  },
  {
    "label": "ExtractMediaInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractMediaInfo(\n      const std::map<std::string, std::string>& transport_names_by_mid)"
  },
  {
    "label": "ExtractSenderInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractSenderInfo()"
  },
  {
    "label": "UpdateStatsFromExistingLocalAudioTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStatsFromExistingLocalAudioTracks(bool has_remote_tracks)"
  },
  {
    "label": "UpdateReportFromAudioTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateReportFromAudioTrack(AudioTrackInterface* track,\n                                  StatsReport* report,\n                                  bool has_remote_tracks)"
  },
  {
    "label": "UpdateTrackReports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackReports()"
  },
  {
    "label": "ExtractSessionInfo_n()",
    "kind": "Method",
    "detail": "Function (SessionStats)",
    "insertText": "ExtractSessionInfo_n(\n      const std::vector<rtc::scoped_refptr<\n          RtpTransceiverProxyWithInternal<RtpTransceiver>>>& transceivers,\n      absl::optional<std::string> sctp_transport_name,\n      absl::optional<std::string> sctp_mid)"
  },
  {
    "label": "ExtractSessionInfo_s()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractSessionInfo_s(SessionStats& session_stats)"
  }
]