[
  {
    "label": "FEditorLoadingSavingSettingsCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorLoadingSavingSettingsCustomization"
  },
  {
    "label": "FEditorLoadingSavingSettingsCustomization()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IDetailCustomization . h \" # include \" DetailLayoutBuilder . h \" # include \" DetailCategoryBuilder . h \" # include \" Settings / EditorSettings . h \" # define LOCTEXT_NAMESPACE \" FEditorLoadingSavingSettingsCustomization \" class FEditorLoadingSavingSettingsCustomization : public IDetailCustomization { public : ~)",
    "insertText": "FEditorLoadingSavingSettingsCustomization()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& LayoutBuilder)"
  },
  {
    "label": "CustomizeStartupCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeStartupCategory(LayoutBuilder)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (} public : TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeStartupCategory()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "CustomizeStartupCategory(IDetailLayoutBuilder& LayoutBuilder)"
  },
  {
    "label": "EditCategory()",
    "kind": "Method",
    "detail": "Function (IDetailCategoryBuilder& StartupCategory = LayoutBuilder .)",
    "insertText": "EditCategory(\"Startup\")"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function ({ TArray<UObject*> ObjectList ; ObjectList .)",
    "insertText": "Add(GetMutableDefault<UEditorSettings>())"
  },
  {
    "label": "AddExternalObjectProperty()",
    "kind": "Method",
    "detail": "Function (StartupCategory .)",
    "insertText": "AddExternalObjectProperty(ObjectList, \"bLoadTheMostRecentlyLoadedProjectAtStartup\")"
  }
]