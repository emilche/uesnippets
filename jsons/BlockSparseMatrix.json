[
  {
    "label": "BlockSparseMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockSparseMatrix"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "BlockSparseMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockSparseMatrix"
  },
  {
    "label": "BlockSparseMatrixView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockSparseMatrixView"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "TripletComp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TripletComp"
  },
  {
    "label": "BlockSparseMatrixView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockSparseMatrixView"
  },
  {
    "label": "InnerIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InnerIterator"
  },
  {
    "label": "BlockVectorView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockVectorView"
  },
  {
    "label": "BlockVectorReturn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockVectorReturn"
  },
  {
    "label": "BlockVectorReturn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockVectorReturn"
  },
  {
    "label": "BlockSparseTimeDenseProduct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockSparseTimeDenseProduct"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "BlockSparseTimeDenseProduct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockSparseTimeDenseProduct"
  },
  {
    "label": "BlockSparseMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockSparseMatrix"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "InnerIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InnerIterator"
  },
  {
    "label": "BlockInnerIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockInnerIterator"
  },
  {
    "label": "BlockSparseMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockSparseMatrix"
  },
  {
    "label": "BlockSparseMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockSparseMatrix"
  },
  {
    "label": "bmat()",
    "kind": "Method",
    "detail": "Function (ColMajor>)",
    "insertText": "bmat(b_rows, b_cols)"
  },
  {
    "label": "bmat()",
    "kind": "Method",
    "detail": "Function (ColMajor>)",
    "insertText": "bmat(b_rows, b_cols)"
  },
  {
    "label": "tmpDest()",
    "kind": "Method",
    "detail": "Function (Dest>)",
    "insertText": "tmpDest(m_lhs, dest)"
  },
  {
    "label": "swap()",
    "kind": "Method",
    "detail": "Function (thrown)",
    "insertText": "swap(*this, other)"
  },
  {
    "label": "nzblocksFlag()",
    "kind": "Method",
    "detail": "Function (std::vector<bool>)",
    "insertText": "nzblocksFlag(m_innerBSize,false)"
  },
  {
    "label": "it_spmat()",
    "kind": "Method",
    "detail": "Function (MatrixType::InnerIterator)",
    "insertText": "it_spmat(spmat, j)"
  },
  {
    "label": "setBlockStructure()",
    "kind": "Method",
    "detail": "Function (arrays)",
    "insertText": "setBlockStructure(blockPattern)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (values)",
    "insertText": "for(StorageIndex j = blockOuterIndex(bj)"
  },
  {
    "label": "it_spmat()",
    "kind": "Method",
    "detail": "Function (MatrixType::InnerIterator)",
    "insertText": "it_spmat(spmat, j)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (MatrixType::InnerIterator)",
    "insertText": "it(blockPattern, bj)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (blocks)",
    "insertText": "for(StorageIndex idx = 0; idx < nzBlockIdx.size()"
  },
  {
    "label": "rowBlocks()",
    "kind": "Method",
    "detail": "Function (VectorXi)",
    "insertText": "rowBlocks(m_innerBSize)"
  },
  {
    "label": "colBlocks()",
    "kind": "Method",
    "detail": "Function (VectorXi)",
    "insertText": "colBlocks(m_outerBSize)"
  },
  {
    "label": "nzblock_outer()",
    "kind": "Method",
    "detail": "Function (VectorXi)",
    "insertText": "nzblock_outer(m_outerBSize)"
  },
  {
    "label": "nz_outer()",
    "kind": "Method",
    "detail": "Function (VectorXi)",
    "insertText": "nz_outer(m_outerBSize)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (InputIterator)",
    "insertText": "it(begin)"
  },
  {
    "label": "block_id()",
    "kind": "Method",
    "detail": "Function (VectorXi)",
    "insertText": "block_id(m_outerBSize)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (matrix)",
    "insertText": "for(InputIterator it(begin)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (InputIterator)",
    "insertText": "it(begin)"
  },
  {
    "label": "blockRows()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "blockRows()"
  },
  {
    "label": "blockCols()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "blockCols()"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "return(m_innerBSize * m_blockSize)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "return(m_outerBSize * m_blockSize)"
  },
  {
    "label": "itb()",
    "kind": "Method",
    "detail": "Function (BlockInnerIterator)",
    "insertText": "itb(m, j)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (Map<BlockScalar>)",
    "insertText": "insert(Index brow, Index bcol)"
  },
  {
    "label": "index()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "index()"
  },
  {
    "label": "outer()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "outer()"
  },
  {
    "label": "outer()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "outer()"
  },
  {
    "label": "index()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "index()"
  }
]