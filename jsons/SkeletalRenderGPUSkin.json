[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGPUSkinCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSkinCache"
  },
  {
    "label": "FRayTracingSkinnedGeometryUpdateQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingSkinnedGeometryUpdateQueue"
  },
  {
    "label": "FSkeletalMeshObjectGPUSkin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshObjectGPUSkin"
  },
  {
    "label": "FVertexOffsetBuffers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexOffsetBuffers"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDynamicSkelMeshObjectDataGPUSkin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicSkelMeshObjectDataGPUSkin"
  },
  {
    "label": "FMorphGPUSkinVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMorphGPUSkinVertex"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "must"
  },
  {
    "label": "FMorphVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMorphVertexBuffer"
  },
  {
    "label": "FMorphVertexBufferPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMorphVertexBufferPool"
  },
  {
    "label": "FMorphVertexBufferPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMorphVertexBufferPool"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "FSkeletalMeshObjectGPUSkin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshObjectGPUSkin"
  },
  {
    "label": "FVertexFactoryBuffers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVertexFactoryBuffers"
  },
  {
    "label": "FSkeletalMeshDeformerHelpers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshDeformerHelpers"
  },
  {
    "label": "FSkeletalMeshObjectNanite",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshObjectNanite"
  },
  {
    "label": "FVertexFactoryData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexFactoryData"
  },
  {
    "label": "FSkeletalMeshObjectLOD",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshObjectLOD"
  },
  {
    "label": "FSkeletalMeshObjectLOD",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshObjectLOD"
  },
  {
    "label": "FGPUMorphUpdateCS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUMorphUpdateCS"
  },
  {
    "label": "FGPUMorphNormalizeCS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUMorphNormalizeCS"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "FreeDynamicSkelMeshObjectDataGPUSkin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeDynamicSkelMeshObjectDataGPUSkin(FDynamicSkelMeshObjectDataGPUSkin* Who)"
  },
  {
    "label": "InitDynamicSkelMeshObjectDataGPUSkin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitDynamicSkelMeshObjectDataGPUSkin(\n\t\tUSkinnedMeshComponent* InMeshComponent,\n\t\tFSkeletalMeshRenderData* InSkeletalMeshRenderData,\n\t\tFSkeletalMeshObjectGPUSkin* InMeshObject,\n\t\tint32 InLODIndex,\n\t\tconst FMorphTargetWeightMap& InActiveMorphTargets,\n\t\tconst TArray<float>& InMorphTargetWeights, \n\t\tEPreviousBoneTransformUpdateMode PreviousBoneTransformUpdateMode,\n\t\tconst FExternalMorphWeightData& InExternalMorphWeightData)"
  },
  {
    "label": "ActiveMorphTargetsEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ActiveMorphTargetsEqual(const FMorphTargetWeightMap& InCompareActiveMorphTargets, const TArray<float>& CompareMorphTargetWeights)"
  },
  {
    "label": "UpdateClothSimulationData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateClothSimulationData(USkinnedMeshComponent* InMeshComponent)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"Morph target mesh vertices\")"
  },
  {
    "label": "InitResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResources(const FName& OwnerName)"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "EnableDoubleBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableDoubleBuffer(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "SetCurrentRevisionNumber()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentRevisionNumber(uint32 RevisionNumber)"
  },
  {
    "label": "FSkeletalMeshObjectGPUSkin()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FSkeletalMeshObjectGPUSkin(USkinnedMeshComponent* InMeshComponent, FSkeletalMeshRenderData* InSkelMeshRenderData, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "UpdateDynamicData_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDynamicData_RenderThread(FGPUSkinCache* GPUSkinCache, FRHICommandList& RHICmdList, FDynamicSkelMeshObjectDataGPUSkin* InDynamicData, FSceneInterface* Scene, uint64 FrameNumberToPrepare, uint32 RevisionNumber, uint32 PreviousRevisionNumber, bool bRecreating)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (LOD)",
    "insertText": "for(int32 I=0; I<LODs.Num()"
  },
  {
    "label": "GetUsedVertexFactoryData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetUsedVertexFactoryData(FSkeletalMeshRenderData* SkelMeshRenderData, int32 InLOD, USkinnedMeshComponent* SkinnedMeshComponent, FSkelMeshRenderSection& RenderSection, ERHIFeatureLevel::Type InFeatureLevel, bool bHasMorphTargets, FPSOPrecacheVertexFactoryDataList& VertexFactoryDataList)"
  },
  {
    "label": "CreateVertexFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateVertexFactory(TArray<TUniquePtr<FGPUBaseSkinVertexFactory>>& VertexFactories,\n\t\tTArray<TUniquePtr<FGPUSkinPassthroughVertexFactory>>* PassthroughVertexFactories,\n\t\tconst FSkeletalMeshObjectGPUSkin::FVertexFactoryBuffers& VertexBuffers,\n\t\tERHIFeatureLevel::Type FeatureLevel,\n\t\tFGPUSkinPassthroughVertexFactory::EVertexAttributeFlags VertexAttributeMask,\n\t\tuint32 BaseVertexIndex,\n\t\tbool bUsedForPassthroughVertexFactory)"
  },
  {
    "label": "UpdateRayTracingGeometry_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRayTracingGeometry_Internal(\n\t\tFSkeletalMeshLODRenderData& LODModel, uint32 LODIndex, TArray<FBufferRHIRef>& VertexBuffers,\n\t\tFRayTracingGeometry& RayTracingGeometry, bool bAnySegmentUsesWorldPositionOffset, FSkeletalMeshObject* MeshObject, FRayTracingSkinnedGeometryUpdateQueue* RayTracingUpdateQueue)"
  },
  {
    "label": "InitVertexFactories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitVertexFactories(\n\t\t\tconst FVertexFactoryBuffers& VertexBuffers,\n\t\t\tconst TArray<FSkelMeshRenderSection>& Sections,\n\t\t\tERHIFeatureLevel::Type FeatureLevel,\n\t\t\tFGPUSkinPassthroughVertexFactory::EVertexAttributeFlags VertexAttributeMask,\n\t\t\tESkeletalMeshGPUSkinTechnique GPUSkinTechnique)"
  },
  {
    "label": "ReleaseVertexFactories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseVertexFactories()"
  },
  {
    "label": "UpdateVertexFactoryData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVertexFactoryData(const FVertexFactoryBuffers& VertexBuffers)"
  },
  {
    "label": "FVertexFactoryData()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FVertexFactoryData(const FVertexFactoryData&)"
  },
  {
    "label": "FMorphVertexBufferPool()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "FMorphVertexBufferPool(InSkelMeshRenderData, LODIndex, FeatureLevel)"
  },
  {
    "label": "InitResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResources(\n\t\t\tconst FSkelMeshObjectLODInfo& MeshLODInfo,\n\t\t\tFSkelMeshComponentLODInfo* CompLODInfo,\n\t\t\tERHIFeatureLevel::Type FeatureLevel,\n\t\t\tFGPUSkinPassthroughVertexFactory::EVertexAttributeFlags VertexAttributeMask)"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "InitMorphResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitMorphResources(const FSkelMeshObjectLODInfo& MeshLODInfo, bool bInUsePerBoneMotionBlur, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "UpdateMorphVertexBufferCPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMorphVertexBufferCPU(FRHICommandList& RHICmdList, const FMorphTargetWeightMap& InActiveMorphTargets, const TArray<float>& MorphTargetWeights, const TArray<int32>& SectionIdsUseByActiveMorphTargets, \n\t\t\t\t\t\t\t\t\t\tbool bGPUSkinCacheEnabled, FMorphVertexBuffer& MorphVertexBuffer)"
  },
  {
    "label": "UpdateMorphVertexBufferGPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMorphVertexBufferGPU(FRHICommandList& RHICmdList, const TArray<float>& MorphTargetWeights, const FMorphTargetVertexInfoBuffers& MorphTargetVertexInfoBuffers, \n\t\t\t\t\t\t\t\t\t\tconst TArray<int32>& SectionIdsUseByActiveMorphTargets, const FName& OwnerName, EGPUSkinCacheEntryMode Mode, FMorphVertexBuffer& MorphVertexBuffer,\n\t\t\t\t\t\t\t\t\t\tbool bClearMorphVertexBuffer, bool bNormalizePass, const FVector4& MorphScale, const FVector4& InvMorphScale)"
  },
  {
    "label": "UpdateSkinWeights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSkinWeights(FSkelMeshComponentLODInfo* CompLODInfo)"
  },
  {
    "label": "GetVertexBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexBuffers(FVertexFactoryBuffers& OutVertexBuffers, FSkeletalMeshLODRenderData& LODData)"
  },
  {
    "label": "UpdateMorphVertexBuffer()",
    "kind": "Method",
    "detail": "Function (on)",
    "insertText": "UpdateMorphVertexBuffer()"
  },
  {
    "label": "InitMorphResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitMorphResources(bool bInUsePerBoneMotionBlur, const TArray<float>& MorphTargetWeights)"
  },
  {
    "label": "ProcessUpdatedDynamicData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessUpdatedDynamicData(EGPUSkinCacheEntryMode Mode, FGPUSkinCache* GPUSkinCache, FRHICommandList& RHICmdList, uint32 FrameNumberToPrepare, uint32 RevisionNumber, uint32 PreviousRevisionNumber, bool bMorphNeedsUpdate, int32 LODIndex, bool bRecreating)"
  },
  {
    "label": "UpdateMorphVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMorphVertexBuffer(FRHICommandList& RHICmdList, EGPUSkinCacheEntryMode Mode, FSkeletalMeshObjectLOD& LOD, const FSkeletalMeshLODRenderData& LODData, bool bGPUSkinCacheEnabled, FMorphVertexBuffer& MorphVertexBuffer)"
  },
  {
    "label": "FSkeletalMeshObjectGPUSkin()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FSkeletalMeshObjectGPUSkin(const FSkeletalMeshObjectGPUSkin&)"
  },
  {
    "label": "DECLARE_SHADER_TYPE()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_SHADER_TYPE(FGPUMorphUpdateCS, Global)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(\n\t\tFRHIBatchedShaderParameters& BatchedParameters,\n\t\tconst FVector4& LocalScale,\n\t\tconst FMorphTargetVertexInfoBuffers& MorphTargetVertexInfoBuffers,\n\t\tFMorphVertexBuffer& MorphVertexBuffer,\n\t\tuint32 NumGroups,\n\t\tuint32 BatchOffsets[MorphTargetDispatchBatchSize],\n\t\tuint32 GroupOffsets[MorphTargetDispatchBatchSize],\n\t\tfloat Weights[MorphTargetDispatchBatchSize])"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dispatch(FRHICommandList& RHICmdList, uint32 Size)"
  },
  {
    "label": "UnsetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnsetParameters(FRHIBatchedShaderUnbinds& BatchedUnbinds)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "LAYOUT_FIELD(FShaderResourceParameter, MorphVertexBufferParameter)"
  },
  {
    "label": "DECLARE_SHADER_TYPE()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_SHADER_TYPE(FGPUMorphNormalizeCS, Global)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(FRHIBatchedShaderParameters& BatchedParameters, const FVector4& LocalScale, const FMorphTargetVertexInfoBuffers& MorphTargetVertexInfoBuffers, FMorphVertexBuffer& MorphVertexBuffer, uint32 NumVertices)"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dispatch(FRHICommandList& RHICmdList, uint32 NumVertices)"
  },
  {
    "label": "UnsetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnsetParameters(FRHIBatchedShaderUnbinds& BatchedUnbinds)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "LAYOUT_FIELD(FShaderResourceParameter, MorphVertexBufferParameter)"
  }
]