[
  {
    "label": "PLCrashReportFileHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PLCrashReportFileHeader"
  },
  {
    "label": "_PLCrashReportDecoder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_PLCrashReportDecoder"
  },
  {
    "label": "__attribute__()",
    "kind": "Method",
    "detail": "Function (# import<Foundation / Foundation . h> # import \" PLCrashReportApplicationInfo . h \" # import \" PLCrashReportBinaryImageInfo . h \" # import \" PLCrashReportExceptionInfo . h \" # import \" PLCrashReportMachineInfo . h \" # import \" PLCrashReportMachExceptionInfo . h \" # import \" PLCrashReportProcessInfo . h \" # import \" PLCrashReportProcessorInfo . h \" # import \" PLCrashReportRegisterInfo . h \" # import \" PLCrashReportSignalInfo . h \" # import \" PLCrashReportStackFrameInfo . h \" # import \" PLCrashReportSymbolInfo . h \" # import \" PLCrashReportSystemInfo . h \" # import \" PLCrashReportThreadInfo . h \" # define PLCRASH_REPORT_FILE_MAGIC \" plcrash \" # define PLCRASH_REPORT_FILE_VERSION 1 struct PLCrashReportFileHeader { const char magic [ 7 ] ; const uint8_t version ; const uint8_t data [ ] ; })",
    "insertText": "__attribute__((packed))"
  },
  {
    "label": "_uuid()",
    "kind": "Method",
    "detail": "Function (typedef struct _PLCrashReportDecoder _PLCrashReportDecoder ; @ interface PLCrashReport : NSObject { @ private _PLCrashReportDecoder* _decoder ; __strong PLCrashReportSystemInfo* _systemInfo ; __strong PLCrashReportMachineInfo* _machineInfo ; __strong PLCrashReportApplicationInfo* _applicationInfo ; __strong PLCrashReportProcessInfo* _processInfo ; __strong PLCrashReportSignalInfo* _signalInfo ; __strong PLCrashReportMachExceptionInfo* _machExceptionInfo ; __strong NSArray* _threads ; __strong NSArray* _images ; __strong PLCrashReportExceptionInfo* _exceptionInfo ; __strong NSData* _customData ; CFUUIDRef)",
    "insertText": "_uuid(id) initWithData: (NSData *) encodedData error: (NSError **)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(nonatomic, readonly, strong)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(nonatomic, readonly)"
  }
]