[
  {
    "label": "IAllocationsProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAllocationsProvider"
  },
  {
    "label": "FMemAllocGroupingByTag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemAllocGroupingByTag"
  },
  {
    "label": "FMemTagTableTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemTagTableTreeNode"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" CoreTypes . h \" # include \" TraceServices / Model / Memory . h \" # include \" InsightsCore / Common / SimpleRtti . h \" # include \" InsightsCore / Table / ViewModels / TableTreeNode . h \" # include \" InsightsCore / Table / ViewModels / TreeNodeGrouping . h \" namespace TraceServices { class IAllocationsProvider ; } namespace UE::Insights::MemoryProfiler { class FMemAllocGroupingByTag : public FTreeNodeGrouping {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FMemAllocGroupingByTag, FTreeNodeGrouping)"
  },
  {
    "label": "FMemAllocGroupingByTag()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FMemAllocGroupingByTag(const TraceServices::IAllocationsProvider& TagProvider)"
  },
  {
    "label": "GroupNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GroupNodes(const TArray<FTableTreeNodePtr>& Nodes, FTableTreeNode& ParentGroup, TWeakPtr<FTable> InParentTable, IAsyncOperationProgress& InAsyncOperationProgress)"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (private : const TraceServices::IAllocationsProvider& TagProvider ; } ; class FMemTagTableTreeNode : public FTableTreeNode {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FMemTagTableTreeNode, FTableTreeNode) public: explicit FMemTagTableTreeNode(const FName InName, TWeakPtr<FTable> InParentTable, int32 InRowIndex, const TCHAR* InTagFullName, bool IsGroup) : FTableTreeNode(InName, InParentTable, InRowIndex, IsGroup) , TagFullName(InTagFullName)"
  },
  {
    "label": "FMemTagTableTreeNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMemTagTableTreeNode(const FName InName, TWeakPtr<FTable> InParentTable, const TCHAR* InTagFullName) : FTableTreeNode(InName, InParentTable) , TagFullName(InTagFullName)"
  },
  {
    "label": "FMemTagTableTreeNode()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FMemTagTableTreeNode()"
  },
  {
    "label": "GetIconColor()",
    "kind": "Method",
    "detail": "Function (} FLinearColor)",
    "insertText": "GetIconColor()"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (} FLinearColor)",
    "insertText": "GetColor()"
  },
  {
    "label": "GetLLMSize()",
    "kind": "Method",
    "detail": "Function (} int64)",
    "insertText": "GetLLMSize()"
  },
  {
    "label": "UpdateLLMSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLLMSize()"
  }
]