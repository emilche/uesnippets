[
  {
    "label": "SDockingTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingTarget"
  },
  {
    "label": "SDockingNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingNode"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Layout / SBorder . h \" # include \" Framework / Docking / SDockingNode . h \" class SDockingTarget : public SBorder { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SDockingTarget) : _OwnerNode() , _DockDirection(SDockingNode::LeftOf)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<class SDockingNode>, OwnerNode ) SLATE_ARGUMENT( SDockingNode::RelativeDirection, DockDirection ) SLATE_END_ARGS() SLATE_API void Construct( const FArguments& InArgs)"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragEnter(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDrop(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "GetOwner()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockingNode>)",
    "insertText": "GetOwner()"
  },
  {
    "label": "GetDockDirection()",
    "kind": "Method",
    "detail": "Function (SDockingNode::RelativeDirection)",
    "insertText": "GetDockDirection()"
  },
  {
    "label": "GetTargetImage()",
    "kind": "Method",
    "detail": "Function (private : const FSlateBrush*)",
    "insertText": "GetTargetImage()"
  }
]