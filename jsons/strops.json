[
  {
    "label": "StrPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrPtr"
  },
  {
    "label": "StrRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrRef"
  },
  {
    "label": "StrBuf",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrBuf"
  },
  {
    "label": "StrDict",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrDict"
  },
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "StrOps",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrOps"
  },
  {
    "label": "Caps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Caps( StrBuf &o )"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dump( const StrPtr &o )"
  },
  {
    "label": "Sub()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sub( StrPtr &string, char target, char replacement )"
  },
  {
    "label": "Expand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Expand( StrBuf &o, const StrPtr &s, StrDict &d,\n\t                        StrDict *u = 0 )"
  },
  {
    "label": "Expand2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Expand2( StrBuf &o, const StrPtr &s, StrDict &d )"
  },
  {
    "label": "AddIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIndex( StrBuf &o, const StrPtr &s, const int i )"
  },
  {
    "label": "RmUniquote()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RmUniquote( StrBuf &o, const StrPtr &s )"
  },
  {
    "label": "Indent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Indent( StrBuf &o, const StrPtr &s )"
  },
  {
    "label": "Replace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Replace( StrBuf &o, const StrPtr &i,\n\t\t\t\tconst StrPtr &s, const StrPtr &r )"
  },
  {
    "label": "ReplaceWild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceWild( StrBuf &o, const StrPtr &i )"
  },
  {
    "label": "Lines()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Lines( StrBuf &o, char *vec[], int maxVec )"
  },
  {
    "label": "Lower()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Lower( StrBuf &o )"
  },
  {
    "label": "Upper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Upper( StrBuf &o )"
  },
  {
    "label": "Words()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Words( StrBuf &tmp, const char *w, \n\t\t\t\tchar *vec[], int maxVec )"
  },
  {
    "label": "Words()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Words( StrBuf &tmp, const char *w, \n\t\t\t\tchar *vec[], int maxVec, char chr )"
  },
  {
    "label": "WordsQ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WordsQ( StrBuf &tmp, StrRef buf, \n\t\t\t\tchar *vec[], int maxVec, Error *e )"
  },
  {
    "label": "OtoX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OtoX( const StrPtr &octet, StrBuf &hex )"
  },
  {
    "label": "XtoO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "XtoO( const StrPtr &hex, StrBuf &octet )"
  },
  {
    "label": "OtoX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OtoX( const unsigned char *octet, p4size_t len, StrBuf &x )"
  },
  {
    "label": "XtoO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "XtoO( char *x, unsigned char *octet, int octLen )"
  },
  {
    "label": "OtoXlower()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OtoXlower( const StrPtr &octet, StrBuf &hex )"
  },
  {
    "label": "OtoXlower()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OtoXlower( const unsigned char *, p4size_t len, StrBuf &x )"
  },
  {
    "label": "OtoXlower()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "OtoXlower( unsigned char o )"
  },
  {
    "label": "OtoBase64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OtoBase64( const unsigned char *octet, p4size_t len, StrBuf &base )"
  },
  {
    "label": "Base64toO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Base64toO( const char *base, unsigned char *octet, int octLen )"
  },
  {
    "label": "Base64Len()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Base64Len( p4size_t len )"
  },
  {
    "label": "IsDigest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "IsDigest( const StrPtr &hex )"
  },
  {
    "label": "IsSha1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "IsSha1( const StrPtr &hex )"
  },
  {
    "label": "WildToStr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WildToStr( const StrPtr &i, StrBuf &o )"
  },
  {
    "label": "WildToStr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WildToStr( const StrPtr &i, StrBuf &o, const char *t )"
  },
  {
    "label": "StrToWild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrToWild( const StrPtr &i, StrBuf &o )"
  },
  {
    "label": "StrToWild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrToWild( const StrPtr &i, StrBuf &o, const char *t )"
  },
  {
    "label": "WildCompat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WildCompat( const StrPtr &i, StrBuf &o )"
  },
  {
    "label": "MaskNonPrintable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaskNonPrintable( const StrPtr &i, StrBuf &o )"
  },
  {
    "label": "EncodeNonPrintable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeNonPrintable( const StrPtr &i, StrBuf &o,\n\t\t\t                    int maskp = 0, int cmdSafe = 0 )"
  },
  {
    "label": "DecodeNonPrintable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeNonPrintable( const StrPtr &i, StrBuf &o )"
  },
  {
    "label": "HashStringToBucket()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "HashStringToBucket( const StrPtr &in, int buckets )"
  },
  {
    "label": "ScrunchArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrunchArgs( StrBuf &out, int argc, \n\t\t\t\tStrPtr *argv, int targetLength,\n\t\t       \t\tint delim = ' ', const char *unsafeChars = 0)"
  },
  {
    "label": "CommonPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommonPath( StrBuf &o, int &mdir, const StrPtr &n )"
  },
  {
    "label": "GetDepotFileExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDepotFileExtension( const StrBuf &path, StrBuf &ext )"
  },
  {
    "label": "GetDepotName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDepotName( const char *d, StrBuf &n )"
  },
  {
    "label": "StripNewline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StripNewline( StrBuf &o )"
  },
  {
    "label": "LFtoCRLF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LFtoCRLF( const StrBuf *in, StrBuf *out )"
  },
  {
    "label": "StreamNameInPath()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "StreamNameInPath( const char *df, int depth, \n\t                        StrBuf &n )"
  },
  {
    "label": "CheckStr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckStr( const StrPtr *in, int flags, Error *e )"
  },
  {
    "label": "CharCnt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CharCnt( const StrPtr &i )"
  },
  {
    "label": "CharCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CharCopy( const StrPtr &s, StrBuf &t, int length )"
  },
  {
    "label": "SafeLen()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SafeLen( const StrPtr &s )"
  },
  {
    "label": "PackInt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackInt( StrBuf &o, int v )"
  },
  {
    "label": "PackIntA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackIntA( StrBuf &o, int v )"
  },
  {
    "label": "PackInt64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackInt64( StrBuf &o, P4INT64 v )"
  },
  {
    "label": "PackChar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackChar( StrBuf &o, const char *c, int len )"
  },
  {
    "label": "PackOctet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackOctet( StrBuf &o, const StrPtr &s )"
  },
  {
    "label": "PackString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackString( StrBuf &o, const StrPtr &s )"
  },
  {
    "label": "PackStringA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackStringA( StrBuf &o, const StrPtr &s )"
  },
  {
    "label": "UnpackInt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "UnpackInt( StrRef &o )"
  },
  {
    "label": "UnpackIntA()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "UnpackIntA( StrRef &o )"
  },
  {
    "label": "UnpackInt64()",
    "kind": "Method",
    "detail": "Function (P4INT64)",
    "insertText": "UnpackInt64( StrRef &o )"
  },
  {
    "label": "UnpackChar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnpackChar( StrRef &o, char *c, int length )"
  },
  {
    "label": "UnpackOctet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnpackOctet( StrRef &o, const StrPtr &s )"
  },
  {
    "label": "UnpackString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnpackString( StrRef &o, StrBuf &s )"
  },
  {
    "label": "UnpackStringA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnpackStringA( StrRef &o, StrBuf &s )"
  },
  {
    "label": "UnpackString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnpackString( StrRef &o, StrRef &s )"
  },
  {
    "label": "UnpackStringA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnpackStringA( StrRef &o, StrRef &s )"
  }
]