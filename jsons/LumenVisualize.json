[
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FSceneTextureParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneTextureParameters"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FLumenCardTracingInputs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenCardTracingInputs"
  },
  {
    "label": "FLumenCardTracingParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenCardTracingParameters"
  },
  {
    "label": "FLumenIndirectTracingParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenIndirectTracingParameters"
  },
  {
    "label": "FLumenSceneFrameTemporaries",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLumenSceneFrameTemporaries"
  },
  {
    "label": "FVisualizeLumenSceneInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualizeLumenSceneInputs"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RenderGraphFwd . h \" # include \" SceneTexturesConfig . h \" # include \" ScreenPass . h \" # include \" ShaderParameterMacros . h \" # include \" Math / IntPoint . h \" # include \" LumenReflections . h \" class FScene ; class FSceneTextureParameters ; class FViewInfo ; class FLumenCardTracingInputs ; class FLumenCardTracingParameters ; class FLumenIndirectTracingParameters ; struct FLumenSceneFrameTemporaries ; # define VISUALIZE_MODE_OVERVIEW 1 # define VISUALIZE_MODE_PERFORMANCE_OVERVIEW 2 # define VISUALIZE_MODE_LUMEN_SCENE 3 # define VISUALIZE_MODE_REFLECTION_VIEW 4 # define VISUALIZE_MODE_SURFACE_CACHE 5 # define VISUALIZE_MODE_GEOMETRY_NORMALS 6 # define VISUALIZE_MODE_DEDICATED_REFLECTION_RAYS 7 namespace LumenVisualize {)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FTonemappingParameters, ) SHADER_PARAMETER(int32, Tonemap) SHADER_PARAMETER_RDG_BUFFER_SRV(StructuredBuffer<float4>, EyeAdaptationBuffer) SHADER_PARAMETER_RDG_TEXTURE(Texture3D, ColorGradingLUT) SHADER_PARAMETER_SAMPLER(SamplerState, ColorGradingLUTSampler) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FSceneParameters, ) SHADER_PARAMETER_STRUCT_INCLUDE(LumenVisualize::FTonemappingParameters, TonemappingParameters) SHADER_PARAMETER(FIntPoint, InputViewSize) SHADER_PARAMETER(FIntPoint, InputViewOffset) SHADER_PARAMETER(FIntPoint, OutputViewSize) SHADER_PARAMETER(FIntPoint, OutputViewOffset) SHADER_PARAMETER(int32, VisualizeHiResSurface) SHADER_PARAMETER(int32, VisualizeMode) SHADER_PARAMETER(uint32, VisualizeCullingMode) SHADER_PARAMETER_STRUCT_INCLUDE(LumenReflections::FCompositeParameters, ReflectionsCompositeParameters) SHADER_PARAMETER_TEXTURE(Texture2D, PreIntegratedGF) SHADER_PARAMETER_SAMPLER(SamplerState, PreIntegratedGFSampler) SHADER_PARAMETER(uint32, MaxReflectionBounces) SHADER_PARAMETER(uint32, MaxRefractionBounces) END_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "VisualizeHardwareRayTracing()",
    "kind": "Method",
    "detail": "Function (int32 OverviewTileMargin = 4 ; void)",
    "insertText": "VisualizeHardwareRayTracing(FRDGBuilder& GraphBuilder, const FScene* Scene, const FSceneTextureParameters& SceneTextures, const FViewInfo& View, const FLumenSceneFrameTemporaries& FrameTemporaries, const FLumenCardTracingParameters& TracingParameters, FLumenIndirectTracingParameters& IndirectTracingParameters, LumenVisualize::FSceneParameters& VisualizeParameters, FRDGTextureRef SceneColor, bool bVisualizeModeWithHitLighting, EDiffuseIndirectMethod DiffuseIndirectMethod)"
  },
  {
    "label": "IsHitLightingForceEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHitLightingForceEnabled(const FViewInfo& View, EDiffuseIndirectMethod DiffuseIndirectMethod)"
  },
  {
    "label": "UseHitLighting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseHitLighting(const FViewInfo& View, EDiffuseIndirectMethod DiffuseIndirectMethod)"
  },
  {
    "label": "UseSurfaceCacheFeedback()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseSurfaceCacheFeedback(const FEngineShowFlags& ShowFlags)"
  },
  {
    "label": "AddVisualizeLumenScenePass()",
    "kind": "Method",
    "detail": "Function (} ; struct FVisualizeLumenSceneInputs { FScreenPassRenderTarget OverrideOutput ; FScreenPassTexture SceneColor ; FScreenPassTexture SceneDepth ; FRDGTextureRef ColorGradingTexture = nullptr ; FRDGBufferRef EyeAdaptationBuffer = nullptr ; FSceneTextureShaderParameters SceneTextures ; } ; FScreenPassTexture)",
    "insertText": "AddVisualizeLumenScenePass(FRDGBuilder& GraphBuilder, const FViewInfo& View, bool bAnyLumenActive, EDiffuseIndirectMethod DiffuseIndirectMethod, const FVisualizeLumenSceneInputs& Inputs, FLumenSceneFrameTemporaries& FrameTemporaries)"
  },
  {
    "label": "GetLumenVisualizeMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLumenVisualizeMode(const FViewInfo& View)"
  }
]