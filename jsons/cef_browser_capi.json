[
  {
    "label": "_cef_browser_host_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_host_t"
  },
  {
    "label": "_cef_client_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_client_t"
  },
  {
    "label": "_cef_browser_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_t"
  },
  {
    "label": "_cef_frame_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_frame_t"
  },
  {
    "label": "_cef_run_file_dialog_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_run_file_dialog_callback_t"
  },
  {
    "label": "_cef_navigation_entry_visitor_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_navigation_entry_visitor_t"
  },
  {
    "label": "_cef_navigation_entry_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_navigation_entry_t"
  },
  {
    "label": "_cef_pdf_print_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_pdf_print_callback_t"
  },
  {
    "label": "_cef_download_image_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_download_image_callback_t"
  },
  {
    "label": "_cef_image_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_image_t"
  },
  {
    "label": "_cef_request_context_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_request_context_t"
  },
  {
    "label": "_cef_pdf_print_settings_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_pdf_print_settings_t"
  },
  {
    "label": "_cef_window_info_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_window_info_t"
  },
  {
    "label": "_cef_browser_settings_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_settings_t"
  },
  {
    "label": "_cef_dictionary_value_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_dictionary_value_t"
  },
  {
    "label": "_cef_registration_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_registration_t"
  },
  {
    "label": "_cef_dev_tools_message_observer_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_dev_tools_message_observer_t"
  },
  {
    "label": "_cef_key_event_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_key_event_t"
  },
  {
    "label": "_cef_mouse_event_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_mouse_event_t"
  },
  {
    "label": "_cef_touch_event_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_touch_event_t"
  },
  {
    "label": "_cef_drag_data_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_drag_data_t"
  },
  {
    "label": "_cef_extension_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_extension_t"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_BROWSER_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_BROWSER_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_devtools_message_observer_capi . h \" # include \" include / capi / cef_drag_data_capi . h \" # include \" include / capi / cef_frame_capi . h \" # include \" include / capi / cef_image_capi . h \" # include \" include / capi / cef_navigation_entry_capi . h \" # include \" include / capi / cef_registration_capi . h \" # include \" include / capi / cef_request_context_capi . h \" # ifdef __cplusplus \" C \" { # endif struct _cef_browser_host_t ; struct _cef_client_t ; typedef struct _cef_browser_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* is_valid)(struct _cef_browser_t* self)"
  },
  {
    "label": "_cef_browser_host_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_browser_host_t(CEF_CALLBACK* get_host)( struct _cef_browser_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* can_go_back)(struct _cef_browser_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* go_back)(struct _cef_browser_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* can_go_forward)(struct _cef_browser_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* go_forward)(struct _cef_browser_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_loading)(struct _cef_browser_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* reload)(struct _cef_browser_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* reload_ignore_cache)(struct _cef_browser_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* stop_load)(struct _cef_browser_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_identifier)(struct _cef_browser_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_same)(struct _cef_browser_t* self, struct _cef_browser_t* that)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_popup)(struct _cef_browser_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* has_document)(struct _cef_browser_t* self)"
  },
  {
    "label": "_cef_frame_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_frame_t(CEF_CALLBACK* get_main_frame)( struct _cef_browser_t* self)"
  },
  {
    "label": "_cef_frame_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_frame_t(CEF_CALLBACK* get_focused_frame)( struct _cef_browser_t* self)"
  },
  {
    "label": "_cef_frame_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_frame_t(CEF_CALLBACK* get_frame_byident)( struct _cef_browser_t* self, int64 identifier)"
  },
  {
    "label": "_cef_frame_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_frame_t(CEF_CALLBACK* get_frame)(struct _cef_browser_t* self, const cef_string_t* name)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "size_t(CEF_CALLBACK* get_frame_count)(struct _cef_browser_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* get_frame_identifiers)(struct _cef_browser_t* self, size_t* identifiersCount, int64* identifiers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* get_frame_names)(struct _cef_browser_t* self, cef_string_list_t names)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_browser_t ; typedef struct _cef_run_file_dialog_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_file_dialog_dismissed)( struct _cef_run_file_dialog_callback_t* self, int selected_accept_filter, cef_string_list_t file_paths)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (} cef_run_file_dialog_callback_t ; typedef struct _cef_navigation_entry_visitor_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* visit)(struct _cef_navigation_entry_visitor_t* self, struct _cef_navigation_entry_t* entry, int current, int index, int total)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_navigation_entry_visitor_t ; typedef struct _cef_pdf_print_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_pdf_print_finished)( struct _cef_pdf_print_callback_t* self, const cef_string_t* path, int ok)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_pdf_print_callback_t ; typedef struct _cef_download_image_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_download_image_finished)( struct _cef_download_image_callback_t* self, const cef_string_t* image_url, int http_status_code, struct _cef_image_t* image)"
  },
  {
    "label": "_cef_browser_t()",
    "kind": "Method",
    "detail": "Function (} cef_download_image_callback_t ; typedef struct _cef_browser_host_t { cef_base_ref_counted_t base ; struct)",
    "insertText": "_cef_browser_t(CEF_CALLBACK* get_browser)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* close_browser)(struct _cef_browser_host_t* self, int force_close)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* try_close_browser)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_focus)(struct _cef_browser_host_t* self, int focus)"
  },
  {
    "label": "cef_window_handle_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_window_handle_t(CEF_CALLBACK* get_window_handle)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "cef_window_handle_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_window_handle_t(CEF_CALLBACK* get_opener_window_handle)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* has_view)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "_cef_client_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_client_t(CEF_CALLBACK* get_client)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "_cef_request_context_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_request_context_t(CEF_CALLBACK* get_request_context)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_zoom_level)(struct _cef_browser_host_t* self, double zoomLevel)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* run_file_dialog)( struct _cef_browser_host_t* self, cef_file_dialog_mode_t mode, const cef_string_t* title, const cef_string_t* default_file_path, cef_string_list_t accept_filters, int selected_accept_filter, struct _cef_run_file_dialog_callback_t* callback)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* start_download)(struct _cef_browser_host_t* self, const cef_string_t* url)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* download_image)( struct _cef_browser_host_t* self, const cef_string_t* image_url, int is_favicon, uint32 max_image_size, int bypass_cache, struct _cef_download_image_callback_t* callback)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* print)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* print_to_pdf)( struct _cef_browser_host_t* self, const cef_string_t* path, const struct _cef_pdf_print_settings_t* settings, struct _cef_pdf_print_callback_t* callback)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* find)(struct _cef_browser_host_t* self, int identifier, const cef_string_t* searchText, int forward, int matchCase, int findNext)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* stop_finding)(struct _cef_browser_host_t* self, int clearSelection)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* show_dev_tools)( struct _cef_browser_host_t* self, const struct _cef_window_info_t* windowInfo, struct _cef_client_t* client, const struct _cef_browser_settings_t* settings, const cef_point_t* inspect_element_at)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* close_dev_tools)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* has_dev_tools)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* send_dev_tools_message)(struct _cef_browser_host_t* self, const void* message, size_t message_size)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* execute_dev_tools_method)( struct _cef_browser_host_t* self, int message_id, const cef_string_t* method, struct _cef_dictionary_value_t* params)"
  },
  {
    "label": "_cef_registration_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_registration_t(CEF_CALLBACK* add_dev_tools_message_observer)( struct _cef_browser_host_t* self, struct _cef_dev_tools_message_observer_t* observer)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* get_navigation_entries)( struct _cef_browser_host_t* self, struct _cef_navigation_entry_visitor_t* visitor, int current_only)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* replace_misspelling)(struct _cef_browser_host_t* self, const cef_string_t* word)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* add_word_to_dictionary)(struct _cef_browser_host_t* self, const cef_string_t* word)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_window_rendering_disabled)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* was_resized)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* was_hidden)(struct _cef_browser_host_t* self, int hidden)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* notify_screen_info_changed)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* invalidate)(struct _cef_browser_host_t* self, cef_paint_element_type_t type)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* send_external_begin_frame)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* send_key_event)(struct _cef_browser_host_t* self, const struct _cef_key_event_t* event)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* send_mouse_click_event)( struct _cef_browser_host_t* self, const struct _cef_mouse_event_t* event, cef_mouse_button_type_t type, int mouseUp, int clickCount)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* send_mouse_move_event)( struct _cef_browser_host_t* self, const struct _cef_mouse_event_t* event, int mouseLeave)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* send_mouse_wheel_event)( struct _cef_browser_host_t* self, const struct _cef_mouse_event_t* event, int deltaX, int deltaY)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* send_touch_event)(struct _cef_browser_host_t* self, const struct _cef_touch_event_t* event)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* send_focus_event)(struct _cef_browser_host_t* self, int setFocus)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* send_capture_lost_event)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* notify_move_or_resize_started)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_windowless_frame_rate)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_windowless_frame_rate)( struct _cef_browser_host_t* self, int frame_rate)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* ime_set_composition)( struct _cef_browser_host_t* self, const cef_string_t* text, size_t underlinesCount, cef_composition_underline_t const* underlines, const cef_range_t* replacement_range, const cef_range_t* selection_range)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* ime_commit_text)(struct _cef_browser_host_t* self, const cef_string_t* text, const cef_range_t* replacement_range, int relative_cursor_pos)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* ime_finish_composing_text)( struct _cef_browser_host_t* self, int keep_selection)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* ime_cancel_composition)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* drag_target_drag_enter)( struct _cef_browser_host_t* self, struct _cef_drag_data_t* drag_data, const struct _cef_mouse_event_t* event, cef_drag_operations_mask_t allowed_ops)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* drag_target_drag_over)( struct _cef_browser_host_t* self, const struct _cef_mouse_event_t* event, cef_drag_operations_mask_t allowed_ops)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* drag_target_drag_leave)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* drag_target_drop)(struct _cef_browser_host_t* self, const struct _cef_mouse_event_t* event)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* drag_source_ended_at)(struct _cef_browser_host_t* self, int x, int y, cef_drag_operations_mask_t op)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* drag_source_system_drag_ended)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "_cef_navigation_entry_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_navigation_entry_t(CEF_CALLBACK* get_visible_navigation_entry)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_accessibility_state)(struct _cef_browser_host_t* self, cef_state_t accessibility_state)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_auto_resize_enabled)(struct _cef_browser_host_t* self, int enabled, const cef_size_t* min_size, const cef_size_t* max_size)"
  },
  {
    "label": "_cef_extension_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_extension_t(CEF_CALLBACK* get_extension)( struct _cef_browser_host_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_background_host)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_audio_muted)(struct _cef_browser_host_t* self, int mute)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_audio_muted)(struct _cef_browser_host_t* self)"
  },
  {
    "label": "cef_browser_host_create_browser()",
    "kind": "Method",
    "detail": "Function (} cef_browser_host_t ; CEF_EXPORT int)",
    "insertText": "cef_browser_host_create_browser(const cef_window_info_t* windowInfo, struct _cef_client_t* client, const cef_string_t* url, const struct _cef_browser_settings_t* settings, struct _cef_dictionary_value_t* extra_info, struct _cef_request_context_t* request_context)"
  },
  {
    "label": "cef_browser_host_create_browser_sync()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_browser_t*)",
    "insertText": "cef_browser_host_create_browser_sync(const cef_window_info_t* windowInfo, struct _cef_client_t* client, const cef_string_t* url, const struct _cef_browser_settings_t* settings, struct _cef_dictionary_value_t* extra_info, struct _cef_request_context_t* request_context)"
  }
]