[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Mask()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / EnumClassFlags . h \" class FString ; enum class ERHIAccess : uint32 { Unknown = 0,CPURead = 1<<0,Present = 1<<1,IndirectArgs = 1<<2,VertexOrIndexBuffer = 1<<3,SRVCompute = 1<<4,SRVGraphicsPixel = 1<<5,SRVGraphicsNonPixel = 1<<6,CopySrc = 1<<7,ResolveSrc = 1<<8,DSVRead = 1<<9,UAVCompute = 1<<1 0,UAVGraphics = 1<<1 1,RTV = 1<<1 2,CopyDest = 1<<1 3,ResolveDst = 1<<1 4,DSVWrite = 1<<1 5,BVHRead = 1<<1 6,BVHWrite = 1<<1 7,Discard = 1<<1 8,ShadingRateSource = 1<<1 9,Last = ShadingRateSource,None = Unknown,)",
    "insertText": "Mask(Last << 1)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(ERHIAccess) inline constexpr bool IsReadOnlyExclusiveAccess(ERHIAccess Access)"
  },
  {
    "label": "IsReadOnlyAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsReadOnlyAccess(ERHIAccess Access)"
  },
  {
    "label": "IsWriteOnlyAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsWriteOnlyAccess(ERHIAccess Access)"
  },
  {
    "label": "IsWritableAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsWritableAccess(ERHIAccess Access)"
  },
  {
    "label": "IsReadableAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsReadableAccess(ERHIAccess Access)"
  },
  {
    "label": "IsInvalidAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsInvalidAccess(ERHIAccess Access)"
  },
  {
    "label": "IsValidAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValidAccess(ERHIAccess Access)"
  }
]