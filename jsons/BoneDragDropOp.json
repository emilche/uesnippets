[
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "FBoneDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBoneDragDropOp"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / DragAndDrop . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Styling / AppStyle . h \" # include \" Widgets / Layout / SBorder . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Widgets / SBoxPanel . h \" # include \" Widgets / Images / SImage . h \" class IEditableSkeleton ; class FBoneDragDropOp : public FDragDropOperation { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FBoneDragDropOp, FDragDropOperation)"
  },
  {
    "label": "GetDefaultDecorator()",
    "kind": "Method",
    "detail": "Function (FName BoneName ; TSharedPtr<SWidget>)",
    "insertText": "GetDefaultDecorator()"
  },
  {
    "label": "GetHoverText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetHoverText()"
  },
  {
    "label": "GetIcon()",
    "kind": "Method",
    "detail": "Function (} const FSlateBrush*)",
    "insertText": "GetIcon()"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (CurrentIconBrush = InIcon ; } TSharedRef<FBoneDragDropOp>)",
    "insertText": "New(TSharedRef<class IEditableSkeleton> EditableSkeleton, const FName& InBoneName)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FBoneDragDropOp> Operation =)",
    "insertText": "MakeShareable(new FBoneDragDropOp)"
  },
  {
    "label": "SetIcon()",
    "kind": "Method",
    "detail": "Function (Operation -> BoneName = InBoneName ; Operation -> EditableSkeleton = EditableSkeleton ; Operation ->)",
    "insertText": "SetIcon(FAppStyle::GetBrush(TEXT(\"Graph.ConnectorFeedback.Error\")))"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (Operation ->)",
    "insertText": "Construct()"
  }
]