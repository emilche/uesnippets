[
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "GlobalValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalValue"
  },
  {
    "label": "MachineBasicBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineBasicBlock"
  },
  {
    "label": "MachineConstantPoolValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineConstantPoolValue"
  },
  {
    "label": "SDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDNode"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "MCSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbol"
  },
  {
    "label": "DenseMapInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DenseMapInfo"
  },
  {
    "label": "simplify_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "simplify_type"
  },
  {
    "label": "ilist_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ilist_traits"
  },
  {
    "label": "are",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "are"
  },
  {
    "label": "SDVTList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDVTList"
  },
  {
    "label": "SDValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDValue"
  },
  {
    "label": "DenseMapInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DenseMapInfo"
  },
  {
    "label": "DenseMapInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DenseMapInfo"
  },
  {
    "label": "isPodLike",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "isPodLike"
  },
  {
    "label": "simplify_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "simplify_type"
  },
  {
    "label": "simplify_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "simplify_type"
  },
  {
    "label": "holds",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "holds"
  },
  {
    "label": "SDUse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDUse"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "SDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDNode"
  },
  {
    "label": "simplify_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "simplify_type"
  },
  {
    "label": "SDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "ilist_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ilist_traits"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "use_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "use_iterator"
  },
  {
    "label": "SDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDNode"
  },
  {
    "label": "value_op_iterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "value_op_iterator"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "SDLoc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDLoc"
  },
  {
    "label": "SDNodeFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDNodeFlags"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "UnarySDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnarySDNode"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "BinarySDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BinarySDNode"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "BinaryWithFlagsSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BinaryWithFlagsSDNode"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "TernarySDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TernarySDNode"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "HandleSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HandleSDNode"
  },
  {
    "label": "AddrSpaceCastSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AddrSpaceCastSDNode"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "MemSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemSDNode"
  },
  {
    "label": "AtomicSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AtomicSDNode"
  },
  {
    "label": "MemIntrinsicSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemIntrinsicSDNode"
  },
  {
    "label": "return",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "return"
  },
  {
    "label": "ShuffleVectorSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShuffleVectorSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "ConstantSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "ConstantFPSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantFPSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "GlobalAddressSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalAddressSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "FrameIndexSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameIndexSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "JumpTableSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JumpTableSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "ConstantPoolSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantPoolSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "TargetIndexSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetIndexSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "BasicBlockSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BasicBlockSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "BuildVectorSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BuildVectorSDNode"
  },
  {
    "label": "SrcValueSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SrcValueSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "MDNodeSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNodeSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "RegisterSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RegisterSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "RegisterMaskSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RegisterMaskSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "BlockAddressSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockAddressSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "EHLabelSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EHLabelSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "ExternalSymbolSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExternalSymbolSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "MCSymbolSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbolSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "CondCodeSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CondCodeSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "CvtRndSatSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CvtRndSatSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "VTSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VTSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "LSBaseSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LSBaseSDNode"
  },
  {
    "label": "captures",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "captures"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "LoadSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LoadSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "StoreSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StoreSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "MaskedLoadStoreSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MaskedLoadStoreSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "MaskedLoadSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MaskedLoadSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "MaskedStoreSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MaskedStoreSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "MaskedGatherScatterSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MaskedGatherScatterSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "MaskedGatherSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MaskedGatherSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "MaskedScatterSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MaskedScatterSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "MachineSDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineSDNode"
  },
  {
    "label": "SelectionDAG",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelectionDAG"
  },
  {
    "label": "SDNodeIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDNodeIterator"
  },
  {
    "label": "GraphTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GraphTraits"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "with"
  },
  {
    "label": "checkForCycles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "checkForCycles(const SDNode *N, const SelectionDAG *DAG = nullptr,\n                    bool force = false)"
  },
  {
    "label": "isBuildVectorAllOnes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isBuildVectorAllOnes(const SDNode *N)"
  },
  {
    "label": "isBuildVectorAllZeros()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isBuildVectorAllZeros(const SDNode *N)"
  },
  {
    "label": "isBuildVectorOfConstantSDNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isBuildVectorOfConstantSDNodes(const SDNode *N)"
  },
  {
    "label": "isBuildVectorOfConstantFPSDNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isBuildVectorOfConstantFPSDNodes(const SDNode *N)"
  },
  {
    "label": "isScalarToVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isScalarToVector(const SDNode *N)"
  },
  {
    "label": "allOperandsUndef()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "allOperandsUndef(const SDNode *N)"
  },
  {
    "label": "SDValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SDValue(Node, R)"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set(const SDValue &V)"
  },
  {
    "label": "setInitial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setInitial(const SDValue &V)"
  },
  {
    "label": "setNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setNode(SDNode *N)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (Preincrement)",
    "insertText": "assert(Op && \"Cannot increment end iterator!\")"
  },
  {
    "label": "use_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "use_iterator(UseList)"
  },
  {
    "label": "use_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "use_iterator(nullptr)"
  },
  {
    "label": "DropOperands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DropOperands()"
  },
  {
    "label": "DebugLoc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DebugLoc()"
  },
  {
    "label": "AddrSpaceCastSDNode()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "AddrSpaceCastSDNode(unsigned Order, DebugLoc dl, EVT VT, SDValue X,\n                      unsigned SrcAS, unsigned DestAS)"
  },
  {
    "label": "MemSDNode()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "MemSDNode(unsigned Opc, unsigned Order, DebugLoc dl, SDVTList VTs,\n            EVT MemoryVT, MachineMemOperand *MMO)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(0)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(1)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(2)"
  },
  {
    "label": "getOrdering()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOrdering()"
  },
  {
    "label": "isSplatMask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isSplatMask(const int *Mask, EVT VT)"
  },
  {
    "label": "Tmp()",
    "kind": "Method",
    "detail": "Function (APFloat)",
    "insertText": "Tmp(V)"
  },
  {
    "label": "isExactlyValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isExactlyValue(Tmp)"
  },
  {
    "label": "isValueValidForType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValueValidForType(EVT VT, const APFloat& Val)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(1)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(2)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(1)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(2)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(3)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(1)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(2)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(3)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(3)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(3)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(4)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(2)"
  },
  {
    "label": "getOperand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOperand(1)"
  },
  {
    "label": "SDNodeIterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SDNodeIterator(N, 0)"
  }
]