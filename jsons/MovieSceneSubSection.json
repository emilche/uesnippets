[
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FEntityImportParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityImportParams"
  },
  {
    "label": "FImportedEntity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportedEntity"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "FFrameRate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameRate"
  },
  {
    "label": "FMovieSceneEvaluationTemplate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationTemplate"
  },
  {
    "label": "FMovieSceneSectionParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSectionParameters"
  },
  {
    "label": "FMovieSceneTrackCompilerArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTrackCompilerArgs"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FQualifiedFrameTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQualifiedFrameTime"
  },
  {
    "label": "FMovieSceneTransformMask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTransformMask"
  },
  {
    "label": "FSubSequenceInstanceDataParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubSequenceInstanceDataParams"
  },
  {
    "label": "FMovieSceneSubSectionOriginOverrideMask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSubSectionOriginOverrideMask"
  },
  {
    "label": "UMovieSceneSubSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSubSection"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Curves / KeyHandle . h \" # include \" Delegates / Delegate . h \" # include \" Engine / EngineTypes . h \" # include \" Evaluation / MovieSceneEvaluationOperand . h \" # include \" Evaluation / MovieSceneSectionParameters . h \" # include \" Evaluation / MovieSceneSequenceHierarchy . h \" # include \" Evaluation / MovieSceneSequenceTransform . h \" # include \" EntitySystem / IMovieSceneEntityProvider . h \" # include \" GameFramework / Actor . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Math / Range . h \" # include \" Misc / FrameNumber . h \" # include \" Misc / FrameTime . h \" # include \" Misc / Optional . h \" # include \" MovieSceneFwd . h \" # include \" MovieSceneSection . h \" # include \" MovieSceneSequenceID . h \" # include \" Channels / MovieSceneDoubleChannel . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneSubSection . generated . h \" class FProperty ; class UMovieScene ; class UMovieSceneEntitySystemLinker ; class UMovieSceneSequence ; class UObject ; namespace UE { namespace MovieScene { struct FEntityImportParams ; } } namespace UE { namespace MovieScene { struct FImportedEntity ; } } struct FFrame ; struct FFrameRate ; struct FMovieSceneEvaluationTemplate ; struct FMovieSceneSectionParameters ; struct FMovieSceneTrackCompilerArgs ; struct FPropertyChangedEvent ; struct FQualifiedFrameTime ; struct FMovieSceneTransformMask ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSequenceChanged, UMovieSceneSequence*)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (struct FSubSequenceInstanceDataParams { FMovieSceneSequenceID InstanceSequenceID ; FMovieSceneEvaluationOperand Operand ; } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneSubSectionOriginOverrideMask() : Mask(0)"
  },
  {
    "label": "FMovieSceneSubSectionOriginOverrideMask()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneSubSectionOriginOverrideMask(EMovieSceneTransformChannel Channels) : Mask((__underlying_type(EMovieSceneTransformChannel))Channels)"
  },
  {
    "label": "GetChannels()",
    "kind": "Method",
    "detail": "Function (} EMovieSceneTransformChannel)",
    "insertText": "GetChannels()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(BlueprintType, config = EditorPerProjectUserSettings, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: MOVIESCENE_API UMovieSceneSubSection(const FObjectInitializer& ObjInitializer)"
  },
  {
    "label": "GetPathNameInMovieScene()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPathNameInMovieScene()"
  },
  {
    "label": "GetSequenceID()",
    "kind": "Method",
    "detail": "Function (FMovieSceneSequenceID)",
    "insertText": "GetSequenceID()"
  },
  {
    "label": "GenerateSubSequenceData()",
    "kind": "Method",
    "detail": "Function (FMovieSceneSubSequenceData)",
    "insertText": "GenerateSubSequenceData(const FSubSequenceInstanceDataParams& Params)"
  },
  {
    "label": "OuterToInnerTransform()",
    "kind": "Method",
    "detail": "Function (public : FMovieSceneSequenceTransform)",
    "insertText": "OuterToInnerTransform()"
  },
  {
    "label": "OuterToInnerTransform_NoInnerTimeWarp()",
    "kind": "Method",
    "detail": "Function (FMovieSceneSequenceTransform)",
    "insertText": "OuterToInnerTransform_NoInnerTimeWarp()"
  },
  {
    "label": "AppendInnerTimeWarpTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendInnerTimeWarpTransform(FMovieSceneSequenceTransform& OutTransform)"
  },
  {
    "label": "GetValidatedInnerPlaybackRange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetValidatedInnerPlaybackRange(TRange<FFrameNumber>& OutInnerPlaybackRange)"
  },
  {
    "label": "GetValidatedInnerPlaybackRange()",
    "kind": "Method",
    "detail": "Function (TRange<FFrameNumber>)",
    "insertText": "GetValidatedInnerPlaybackRange(const FMovieSceneSectionParameters& SubSectionParameters, const UMovieScene& InnerMovieScene)"
  },
  {
    "label": "GetMask()",
    "kind": "Method",
    "detail": "Function (FMovieSceneSubSectionOriginOverrideMask)",
    "insertText": "GetMask()"
  },
  {
    "label": "SetMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMask(EMovieSceneTransformChannel MovieSceneTransformChannel)"
  },
  {
    "label": "SetKeyPreviewPosition()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetKeyPreviewPosition(TOptional<FVector> InPosition)"
  },
  {
    "label": "SetKeyPreviewRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyPreviewRotation(TOptional<FRotator> InRotation)"
  },
  {
    "label": "GetKeyPreviewPosition()",
    "kind": "Method",
    "detail": "Function (TOptional<FVector>)",
    "insertText": "GetKeyPreviewPosition()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PreEditChange(FProperty* PropertyAboutToChange)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OnSequenceChanged()",
    "kind": "Method",
    "detail": "Function (FOnSequenceChanged&)",
    "insertText": "OnSequenceChanged()"
  },
  {
    "label": "MapTimeToSectionFrame()",
    "kind": "Method",
    "detail": "Function (# endif FFrameNumber)",
    "insertText": "MapTimeToSectionFrame(FFrameTime InPosition)"
  },
  {
    "label": "HasAnyChannelData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAnyChannelData()"
  },
  {
    "label": "GetNetworkMask()",
    "kind": "Method",
    "detail": "Function (EMovieSceneServerClientMask)",
    "insertText": "GetNetworkMask()"
  },
  {
    "label": "SetNetworkMask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetNetworkMask(EMovieSceneServerClientMask InNetworkMask)"
  },
  {
    "label": "NetworkMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NetworkMask(uint8)"
  },
  {
    "label": "DeleteChannels()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DeleteChannels(TArrayView<const FName> ChannelNames)"
  },
  {
    "label": "GetAutoSizeRange()",
    "kind": "Method",
    "detail": "Function (public : TOptional<TRange<FFrameNumber>>)",
    "insertText": "GetAutoSizeRange()"
  },
  {
    "label": "TrimSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimSection(FQualifiedFrameTime TrimTime, bool bTrimLeft, bool bDeleteKeys)"
  },
  {
    "label": "GetOffsetTime()",
    "kind": "Method",
    "detail": "Function (TOptional<FFrameTime>)",
    "insertText": "GetOffsetTime()"
  },
  {
    "label": "GetSnapTimes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetSnapTimes(TArray<FFrameNumber>& OutSnapTimes, bool bGetSectionBorders)"
  },
  {
    "label": "MigrateFrameTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigrateFrameTimes(FFrameRate SourceRate, FFrameRate DestinationRate)"
  },
  {
    "label": "GetTimeWarp()",
    "kind": "Method",
    "detail": "Function (FMovieSceneTimeWarpVariant*)",
    "insertText": "GetTimeWarp()"
  },
  {
    "label": "BuildDefaultSubSectionComponents()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "BuildDefaultSubSectionComponents(UMovieSceneEntitySystemLinker* EntityLinker, const UE::MovieScene::FEntityImportParams& Params, UE::MovieScene::FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "PopulateEvaluationFieldImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopulateEvaluationFieldImpl(const TRange<FFrameNumber>& EffectiveRange, const FMovieSceneEvaluationFieldEntityMetaData& InMetaData, FMovieSceneEntityComponentFieldBuilder* OutFieldBuilder)"
  },
  {
    "label": "ImportEntityImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportEntityImpl(UMovieSceneEntitySystemLinker* EntityLinker, const FEntityImportParams& Params, FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "CacheChannelProxy()",
    "kind": "Method",
    "detail": "Function (EMovieSceneChannelProxyType)",
    "insertText": "CacheChannelProxy()"
  }
]