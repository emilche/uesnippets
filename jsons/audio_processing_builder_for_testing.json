[
  {
    "label": "AudioProcessingBuilderForTesting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioProcessingBuilderForTesting"
  },
  {
    "label": "AudioProcessingBuilderForTesting()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_TEST_AUDIO_PROCESSING_BUILDER_FOR_TESTING_H_ # define MODULES_AUDIO_PROCESSING_TEST_AUDIO_PROCESSING_BUILDER_FOR_TESTING_H_ # include<list> # include<memory> # include<utility> # include<vector> # include \" modules / audio_processing / include / audio_processing . h \" namespace webrtc { class AudioProcessingBuilderForTesting { public :)",
    "insertText": "AudioProcessingBuilderForTesting()"
  },
  {
    "label": "AudioProcessingBuilderForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AudioProcessingBuilderForTesting(const AudioProcessingBuilderForTesting&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AudioProcessingBuilderForTesting&)",
    "insertText": "operator(const AudioProcessingBuilderForTesting&)"
  },
  {
    "label": "SetConfig()",
    "kind": "Method",
    "detail": "Function (AudioProcessingBuilderForTesting&)",
    "insertText": "SetConfig(const AudioProcessing::Config& config)"
  },
  {
    "label": "SetEchoControlFactory()",
    "kind": "Method",
    "detail": "Function (config_ = config ; return* this ; } AudioProcessingBuilderForTesting&)",
    "insertText": "SetEchoControlFactory(std::unique_ptr<EchoControlFactory> echo_control_factory)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (echo_control_factory_ =)",
    "insertText": "move(echo_control_factory)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (capture_post_processing_ =)",
    "insertText": "move(capture_post_processing)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (render_pre_processing_ =)",
    "insertText": "move(render_pre_processing)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (echo_detector_ =)",
    "insertText": "move(echo_detector)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (capture_analyzer_ =)",
    "insertText": "move(capture_analyzer)"
  },
  {
    "label": "TransferOwnershipsToBuilder()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "TransferOwnershipsToBuilder(AudioProcessingBuilder* builder)"
  }
]