[
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "FRewindDebuggerTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRewindDebuggerTrack"
  },
  {
    "label": "FRewindDebuggerTrack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IRewindDebugger . h \" # include \" Widgets / SWidget . h \" # include \" Textures / SlateIcon . h \" namespace TraceServices { class IAnalysisSession ; } struct FToolMenuSection ; namespace RewindDebugger { class FRewindDebuggerTrack { public :)",
    "insertText": "FRewindDebuggerTrack()"
  },
  {
    "label": "GetIsExpanded()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetIsExpanded()"
  },
  {
    "label": "GetIsSelected()",
    "kind": "Method",
    "detail": "Function (bExpanded = bIsExpanded ; } bool)",
    "insertText": "GetIsSelected()"
  },
  {
    "label": "GetIsTreeHovered()",
    "kind": "Method",
    "detail": "Function (bSelected = bIsSelected ; } bool)",
    "insertText": "GetIsTreeHovered()"
  },
  {
    "label": "GetIsTrackHovered()",
    "kind": "Method",
    "detail": "Function (bTreeHovered = bIsHovered ; } bool)",
    "insertText": "GetIsTrackHovered()"
  },
  {
    "label": "GetIsHovered()",
    "kind": "Method",
    "detail": "Function (bTrackHovered = bIsHovered ; } bool)",
    "insertText": "GetIsHovered()"
  },
  {
    "label": "GetTimelineView()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<SWidget>)",
    "insertText": "GetTimelineView()"
  },
  {
    "label": "GetDetailsView()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<SWidget>)",
    "insertText": "GetDetailsView()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetName()"
  },
  {
    "label": "GetIcon()",
    "kind": "Method",
    "detail": "Function (} FSlateIcon)",
    "insertText": "GetIcon()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetObjectId()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "GetObjectId()"
  },
  {
    "label": "IterateSubTracks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "IterateSubTracks(TFunction<void(TSharedPtr<FRewindDebuggerTrack> SubTrack)> IteratorFunction)"
  },
  {
    "label": "IterateSubTracksInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateSubTracksInternal(IteratorFunction)"
  },
  {
    "label": "HasDebugData()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasDebugData()"
  },
  {
    "label": "HandleDoubleClick()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HandleDoubleClick()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "BuildContextMenu()",
    "kind": "Method",
    "detail": "Function (bVisible = bInIsVisible ; } void)",
    "insertText": "BuildContextMenu(FToolMenuSection& InMenuSection)"
  },
  {
    "label": "UpdateInternal()",
    "kind": "Method",
    "detail": "Function (} ; private : bool)",
    "insertText": "UpdateInternal()"
  },
  {
    "label": "GetDetailsViewInternal()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<SWidget>)",
    "insertText": "GetDetailsViewInternal()"
  },
  {
    "label": "GetIconInternal()",
    "kind": "Method",
    "detail": "Function (} FSlateIcon)",
    "insertText": "GetIconInternal()"
  },
  {
    "label": "GetNameInternal()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetNameInternal()"
  },
  {
    "label": "GetObjectIdInternal()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "GetObjectIdInternal()"
  },
  {
    "label": "HandleDoubleClickInternal()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HandleDoubleClickInternal()"
  },
  {
    "label": "Instance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Instance()->OpenDetailsPanel()"
  }
]