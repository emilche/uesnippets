[
  {
    "label": "IAllocationsProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAllocationsProvider"
  },
  {
    "label": "IAsyncOperationProgress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncOperationProgress"
  },
  {
    "label": "FMemAllocGroupingBySwapPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemAllocGroupingBySwapPage"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" InsightsCore / Table / ViewModels / BaseTreeNode . h \" # include \" InsightsCore / Table / ViewModels / TreeNodeGrouping . h \" namespace TraceServices { class IAllocationsProvider ; } namespace UE::Insights { class IAsyncOperationProgress ; } namespace UE::Insights::MemoryProfiler { class FMemAllocGroupingBySwapPage : public FTreeNodeGrouping {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FMemAllocGroupingBySwapPage, FTreeNodeGrouping) public: FMemAllocGroupingBySwapPage(const TraceServices::IAllocationsProvider& AllocProvider)"
  },
  {
    "label": "FMemAllocGroupingBySwapPage()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMemAllocGroupingBySwapPage()"
  },
  {
    "label": "GroupNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GroupNodes(const TArray<FTableTreeNodePtr>& Nodes, FTableTreeNode& ParentGroup, TWeakPtr<FTable> InParentTable, IAsyncOperationProgress& InAsyncOperationProgress)"
  }
]