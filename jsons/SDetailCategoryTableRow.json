[
  {
    "label": "SDetailCategoryTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDetailCategoryTableRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DetailTreeNode . h \" # include \" Input / Reply . h \" # include \" Layout / Visibility . h \" # include \" PropertyEditorClipboardPrivate . h \" # include \" SDetailTableRowBase . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" DetailsViewStyle . h \" class SDetailCategoryTableRow : public SDetailTableRowBase { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SDetailCategoryTableRow) : _InnerCategory(false) , _WholeRowHeaderContent(false) , _ShowBorder(true) , _IsEmpty(false) , _ObjectName(NAME_Name)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FText, DisplayName) SLATE_ARGUMENT(bool, InnerCategory) SLATE_ARGUMENT(TSharedPtr<SWidget>, HeaderContent) SLATE_ARGUMENT(bool, WholeRowHeaderContent) SLATE_ARGUMENT(bool, ShowBorder) SLATE_ARGUMENT(bool, IsEmpty) SLATE_ARGUMENT(TSharedPtr<FOnPasteFromText>, PasteFromText) SLATE_ARGUMENT(FName, ObjectName) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedRef<FDetailTreeNode> InOwnerTreeNode, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "PopulateContextMenu()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "PopulateContextMenu(UToolMenu* ToolMenu)"
  },
  {
    "label": "IsSeparatorVisible()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "IsSeparatorVisible()"
  },
  {
    "label": "GetBackgroundImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBackgroundImage()"
  },
  {
    "label": "GetBackgroundImageForScrollBarWell()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBackgroundImageForScrollBarWell()"
  },
  {
    "label": "GetInnerBackgroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetInnerBackgroundColor()"
  },
  {
    "label": "GetOuterBackgroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetOuterBackgroundColor()"
  },
  {
    "label": "OnCopyCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyCategory()"
  },
  {
    "label": "CanCopyCategory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCopyCategory()"
  },
  {
    "label": "OnPasteCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteCategory()"
  },
  {
    "label": "CanPasteCategory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPasteCategory()"
  },
  {
    "label": "OnResetToDefaultCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetToDefaultCategory()"
  },
  {
    "label": "CanResetToDefaultCategory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanResetToDefaultCategory()"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDoubleClick(const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "InitializeDisplayManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeDisplayManager()"
  }
]