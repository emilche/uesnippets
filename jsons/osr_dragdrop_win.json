[
  {
    "label": "DropTargetWin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DropTargetWin"
  },
  {
    "label": "DropSourceWin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DropSourceWin"
  },
  {
    "label": "DragEnumFormatEtc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DragEnumFormatEtc"
  },
  {
    "label": "DataObjectWin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataObjectWin"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_TESTS_CEFCLIENT_BROWSER_OSR_DRAGDROP_WIN_H_ # define CEF_TESTS_CEFCLIENT_BROWSER_OSR_DRAGDROP_WIN_H_ # pragma once # if)",
    "insertText": "defined(CEF_USE_ATL)"
  },
  {
    "label": "DEFAULT_QUERY_INTERFACE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DEFAULT_QUERY_INTERFACE(__Class) \\ HRESULT __stdcall QueryInterface(const IID& iid, void** object)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\* object = nullptr ; \\)",
    "insertText": "if(IsEqualIID(iid, IID_IUnknown))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ IUnknown* obj = this ; \\* object = obj ; \\ } else)",
    "insertText": "if(IsEqualIID(iid, IID_##__Class))"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (\\ __Class* obj = this ; \\* object = obj ; \\ } else { \\ return E_NOINTERFACE ; \\ } \\)",
    "insertText": "AddRef()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(--ref_count_ == 0)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (\\ delete this ; \\ return 0 U ; \\ } \\ return ref_count_ ; \\ } \\ \\ protected : \\ ULONG ref_count_ ; class DropTargetWin : public IDropTarget { public : CComPtr<DropTargetWin>)",
    "insertText": "Create(OsrDragEvents* callback, HWND hWnd)"
  },
  {
    "label": "StartDragging()",
    "kind": "Method",
    "detail": "Function (CefBrowserHost::DragOperationsMask)",
    "insertText": "StartDragging(CefRefPtr<CefBrowser> browser, CefRefPtr<CefDragData> drag_data, CefRenderHandler::DragOperationsMask allowed_ops, int x, int y)"
  },
  {
    "label": "DragEnter()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "DragEnter(IDataObject* data_object, DWORD key_state, POINTL cursor_position, DWORD* effect)"
  },
  {
    "label": "DragOver()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "DragOver(DWORD key_state, POINTL cursor_position, DWORD* effect)"
  },
  {
    "label": "DragLeave()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "DragLeave()"
  },
  {
    "label": "Drop()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "Drop(IDataObject* data_object, DWORD key_state, POINTL cursor_position, DWORD* effect)"
  },
  {
    "label": "DEFAULT_QUERY_INTERFACE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFAULT_QUERY_INTERFACE(IDropTarget) IUNKNOWN_IMPLEMENTATION protected: DropTargetWin(OsrDragEvents* callback, HWND hWnd) : ref_count_(0), callback_(callback), hWnd_(hWnd)"
  },
  {
    "label": "DropTargetWin()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "DropTargetWin()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} private : OsrDragEvents* callback_ ; HWND hWnd_ ; CefRefPtr<CefDragData> current_drag_data_ ; } ; class DropSourceWin : public IDropSource { public : CComPtr<DropSourceWin>)",
    "insertText": "Create()"
  },
  {
    "label": "GiveFeedback()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "GiveFeedback(DWORD dwEffect)"
  },
  {
    "label": "QueryContinueDrag()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "QueryContinueDrag(BOOL fEscapePressed, DWORD grfKeyState)"
  },
  {
    "label": "DEFAULT_QUERY_INTERFACE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFAULT_QUERY_INTERFACE(IDropSource) IUNKNOWN_IMPLEMENTATION protected: explicit DropSourceWin() : ref_count_(0)"
  },
  {
    "label": "DropSourceWin()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "DropSourceWin()"
  },
  {
    "label": "CreateEnumFormatEtc()",
    "kind": "Method",
    "detail": "Function (} } ; class DragEnumFormatEtc : public IEnumFORMATETC { public : HRESULT)",
    "insertText": "CreateEnumFormatEtc(UINT cfmt, FORMATETC* afmt, IEnumFORMATETC** ppEnumFormatEtc)"
  },
  {
    "label": "Next()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "Next(ULONG celt, FORMATETC* pFormatEtc, ULONG* pceltFetched)"
  },
  {
    "label": "Skip()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "Skip(ULONG celt)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "Reset(void)"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "Clone(IEnumFORMATETC** ppEnumFormatEtc)"
  },
  {
    "label": "DragEnumFormatEtc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DragEnumFormatEtc(FORMATETC* pFormatEtc, int nNumFormats)"
  },
  {
    "label": "DragEnumFormatEtc()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DragEnumFormatEtc()"
  },
  {
    "label": "DeepCopyFormatEtc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeepCopyFormatEtc(FORMATETC* dest, FORMATETC* source)"
  },
  {
    "label": "DEFAULT_QUERY_INTERFACE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFAULT_QUERY_INTERFACE(IEnumFORMATETC)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (ULONG m_nNumFormats ; FORMATETC* m_pFormatEtc ; } ; class DataObjectWin : public IDataObject { public : CComPtr<DataObjectWin>)",
    "insertText": "Create(FORMATETC* fmtetc, STGMEDIUM* stgmed, int count)"
  },
  {
    "label": "GetDataHere()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "GetDataHere(FORMATETC* pFormatEtc, STGMEDIUM* pmedium)"
  },
  {
    "label": "QueryGetData()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "QueryGetData(FORMATETC* pFormatEtc)"
  },
  {
    "label": "GetCanonicalFormatEtc()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "GetCanonicalFormatEtc(FORMATETC* pFormatEct, FORMATETC* pFormatEtcOut)"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "SetData(FORMATETC* pFormatEtc, STGMEDIUM* pMedium, BOOL fRelease)"
  },
  {
    "label": "DAdvise()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "DAdvise(FORMATETC* pFormatEtc, DWORD advf, IAdviseSink*, DWORD*)"
  },
  {
    "label": "DUnadvise()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "DUnadvise(DWORD dwConnection)"
  },
  {
    "label": "EnumDAdvise()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "EnumDAdvise(IEnumSTATDATA** ppEnumAdvise)"
  },
  {
    "label": "EnumFormatEtc()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "EnumFormatEtc(DWORD dwDirection, IEnumFORMATETC** ppEnumFormatEtc)"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (HRESULT __stdcall)",
    "insertText": "GetData(FORMATETC* pFormatEtc, STGMEDIUM* pMedium)"
  },
  {
    "label": "DEFAULT_QUERY_INTERFACE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFAULT_QUERY_INTERFACE(IDataObject)"
  },
  {
    "label": "LookupFormatEtc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "LookupFormatEtc(FORMATETC* pFormatEtc)"
  },
  {
    "label": "DataObjectWin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DataObjectWin(FORMATETC* fmtetc, STGMEDIUM* stgmed, int count)"
  },
  {
    "label": "DataObjectWin()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DataObjectWin()"
  }
]