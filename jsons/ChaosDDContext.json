[
  {
    "label": "CHAOS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOS_API"
  },
  {
    "label": "FChaosDDScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosDDScene"
  },
  {
    "label": "FChaosDDTaskContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosDDTaskContext"
  },
  {
    "label": "FChaosDDTaskParentContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosDDTaskParentContext"
  },
  {
    "label": "FChaosDDTimelineContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosDDTimelineContext"
  },
  {
    "label": "FChaosDDContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ChaosDebugDraw / ChaosDDFrame . h \" # include \" ChaosDebugDraw / ChaosDDTypes . h \" # include \" HAL / CriticalSection . h \" # include \" HAL / ThreadSingleton . h \" # include \" Misc / ScopeLock . h \" # if CHAOS_DEBUG_DRAW namespace ChaosDD::Private { class FChaosDDContext : public TThreadSingleton<FChaosDDContext> { public :)",
    "insertText": "FChaosDDContext()"
  },
  {
    "label": "IsDebugDrawEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebugDrawEnabled()"
  },
  {
    "label": "GetWriter()",
    "kind": "Method",
    "detail": "Function (bDebugDrawEnabled = bInEnabled ; } FChaosDDFrameWriter)",
    "insertText": "GetWriter()"
  },
  {
    "label": "FChaosDDFrameWriter()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "FChaosDDFrameWriter({})"
  },
  {
    "label": "ExtractGlobalFrame()",
    "kind": "Method",
    "detail": "Function (} FChaosDDFramePtr)",
    "insertText": "ExtractGlobalFrame()"
  },
  {
    "label": "GetFrame()",
    "kind": "Method",
    "detail": "Function (private : class FChaosDDScene ; class FChaosDDTaskContext ; class FChaosDDTaskParentContext ; class FChaosDDTimelineContext ; const FChaosDDFramePtr&)",
    "insertText": "GetFrame()"
  },
  {
    "label": "GetGlobalFrame()",
    "kind": "Method",
    "detail": "Function (} return Frame ; } const FChaosDDFramePtr&)",
    "insertText": "GetGlobalFrame()"
  },
  {
    "label": "CreateGlobalFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGlobalFrame()"
  },
  {
    "label": "SetGlobalDrawRegion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalDrawRegion(const FSphere3d& InDrawRegion)"
  },
  {
    "label": "SetGlobalCommandBudget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalCommandBudget(int32 InCommandBudget)"
  },
  {
    "label": "BeginFrame()",
    "kind": "Method",
    "detail": "Function (FChaosDDFramePtr Frame ; bool bDebugDrawEnabled ; FCriticalSection GlobalFrameCS ; FChaosDDFramePtr GlobalFrame ; int32 GlobalCommandBudget ; } ; class FChaosDDTimelineContext { public : void)",
    "insertText": "BeginFrame(const FChaosDDTimelinePtr& InTimeline, double InTime, double InDt)"
  },
  {
    "label": "EndFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFrame()"
  },
  {
    "label": "FChaosDDScopeTimelineContext()",
    "kind": "Method",
    "detail": "Function (private : FChaosDDTimelinePtr Timeline ; FChaosDDFramePtr PreviousFrame ; bool bInContext = false ; } ; class FChaosDDScopeTimelineContext { public :)",
    "insertText": "FChaosDDScopeTimelineContext(const FChaosDDTimelinePtr& InTimeline, double InTime, double InDt)"
  },
  {
    "label": "FChaosDDScopeTimelineContext()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FChaosDDScopeTimelineContext()"
  },
  {
    "label": "FChaosDDTaskParentContext()",
    "kind": "Method",
    "detail": "Function (private : FChaosDDTimelineContext Context ; } ; class FChaosDDTaskParentContext { public :)",
    "insertText": "FChaosDDTaskParentContext()"
  },
  {
    "label": "BeginThread()",
    "kind": "Method",
    "detail": "Function (private : class FChaosDDTaskContext ; FChaosDDFramePtr Frame ; } ; class FChaosDDTaskContext { public : void)",
    "insertText": "BeginThread(const FChaosDDTaskParentContext& InParentDDContext)"
  },
  {
    "label": "EndThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndThread()"
  },
  {
    "label": "FChaosDDScopeTaskContext()",
    "kind": "Method",
    "detail": "Function (private : FChaosDDFramePtr PreviousFrame ; bool bInContext = false ; } ; class FChaosDDScopeTaskContext { public :)",
    "insertText": "FChaosDDScopeTaskContext(const FChaosDDTaskParentContext& InParentDDContext)"
  },
  {
    "label": "FChaosDDScopeTaskContext()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FChaosDDScopeTaskContext()"
  }
]