[
  {
    "label": "dtObstacleCircle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtObstacleCircle"
  },
  {
    "label": "dtObstacleSegment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtObstacleSegment"
  },
  {
    "label": "dtObstacleAvoidanceDebugData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtObstacleAvoidanceDebugData"
  },
  {
    "label": "dtObstacleAvoidanceParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtObstacleAvoidanceParams"
  },
  {
    "label": "dtObstacleAvoidancePattern",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtObstacleAvoidancePattern"
  },
  {
    "label": "dtObstacleAvoidanceQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtObstacleAvoidanceQuery"
  },
  {
    "label": "dtObstacleAvoidanceDebugData()",
    "kind": "Method",
    "detail": "Function (NAVMESH_API)",
    "insertText": "dtObstacleAvoidanceDebugData()"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "init(const int maxSamples)"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "addSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addSample(const dtReal* vel, const dtReal ssize, const dtReal pen,\n\t\t\t\t   const dtReal vpen, const dtReal vcpen, const dtReal spen, const dtReal tpen)"
  },
  {
    "label": "normalizeSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "normalizeSamples()"
  },
  {
    "label": "dtFreeObstacleAvoidanceDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtFreeObstacleAvoidanceDebugData(dtObstacleAvoidanceDebugData* ptr)"
  },
  {
    "label": "dtObstacleAvoidanceQuery()",
    "kind": "Method",
    "detail": "Function (NAVMESH_API)",
    "insertText": "dtObstacleAvoidanceQuery()"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "init(const int maxCircles, const int maxSegments, const int maxCustomPatterns)"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "addCircle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addCircle(const dtReal* pos, const dtReal rad,\n\t\t\t\t   const dtReal* vel, const dtReal* dvel)"
  },
  {
    "label": "addSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addSegment(const dtReal* p, const dtReal* q, int flags = 0)"
  },
  {
    "label": "setCustomSamplingPattern()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "setCustomSamplingPattern(int idx, const dtReal* angles, const dtReal* radii, int nsamples)"
  },
  {
    "label": "getCustomSamplingPattern()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getCustomSamplingPattern(int idx, dtReal* angles, dtReal* radii, int* nsamples)"
  },
  {
    "label": "sampleVelocityCustom()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sampleVelocityCustom(const dtReal* pos, const dtReal rad,\n\t\t\t\t\t \t\t const dtReal vmax, const dtReal vmult,\n\t\t\t\t\t\t\t const dtReal* vel, const dtReal* dvel, dtReal* nvel,\n\t\t\t\t\t\t\t const dtObstacleAvoidanceParams* params,\n\t\t\t\t\t\t\t dtObstacleAvoidanceDebugData* debug = 0)"
  },
  {
    "label": "sampleVelocityAdaptive()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sampleVelocityAdaptive(const dtReal* pos, const dtReal rad,\n\t\t\t\t\t\t\t   const dtReal vmax, const dtReal vmult,\n\t\t\t\t\t\t\t   const dtReal* vel, const dtReal* dvel, dtReal* nvel,\n\t\t\t\t\t\t\t   const dtObstacleAvoidanceParams* params, \n\t\t\t\t\t\t\t   dtObstacleAvoidanceDebugData* debug = 0)"
  },
  {
    "label": "prepare()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "prepare(const dtReal* pos, const dtReal* dvel)"
  },
  {
    "label": "processSample()",
    "kind": "Method",
    "detail": "Function (dtReal)",
    "insertText": "processSample(const dtReal* vcand, const dtReal cs,\n\t\t\t\t\t\tconst dtReal* pos, const dtReal rad,\n\t\t\t\t\t\tconst dtReal* vel, const dtReal* dvel,\n\t\t\t\t\t\tdtObstacleAvoidanceDebugData* debug)"
  },
  {
    "label": "dtFreeObstacleAvoidanceQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtFreeObstacleAvoidanceQuery(dtObstacleAvoidanceQuery* ptr)"
  }
]