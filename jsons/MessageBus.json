[
  {
    "label": "FMessageRouter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMessageRouter"
  },
  {
    "label": "IMessageReceiver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageReceiver"
  },
  {
    "label": "IMessageSender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageSender"
  },
  {
    "label": "FMessageBus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMessageBus"
  },
  {
    "label": "FMessageBus()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IMessageContext . h \" # include \" IMessageSubscription . h \" # include \" IMessageAttachment . h \" # include \" IMessageInterceptor . h \" # include \" IAuthorizeMessageRecipients . h \" # include \" IMessageTracer . h \" # include \" IMessageBus . h \" class FMessageRouter ; class IMessageReceiver ; class IMessageSender ; class FMessageBus : public TSharedFromThis<FMessageBus,ESPMode::ThreadSafe>,public IMessageBus { public :)",
    "insertText": "FMessageBus(FString InName, const TSharedPtr<IAuthorizeMessageRecipients>& InRecipientAuthorizer)"
  },
  {
    "label": "FMessageBus()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMessageBus()"
  },
  {
    "label": "Forward()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Forward(const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context, const TArray<FMessageAddress>& Recipients, const FTimespan& Delay, const TSharedRef<IMessageSender, ESPMode::ThreadSafe>& Forwarder)"
  },
  {
    "label": "GetTracer()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IMessageTracer,ESPMode::ThreadSafe>)",
    "insertText": "GetTracer()"
  },
  {
    "label": "Intercept()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Intercept(const TSharedRef<IMessageInterceptor, ESPMode::ThreadSafe>& Interceptor, const FTopLevelAssetPath& MessageType)"
  },
  {
    "label": "OnShutdown()",
    "kind": "Method",
    "detail": "Function (FOnMessageBusShutdown&)",
    "insertText": "OnShutdown()"
  },
  {
    "label": "Publish()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Publish(void* Message, UScriptStruct* TypeInfo, EMessageScope Scope, const TMap<FName, FString>& Annotations, const FTimespan& Delay, const FDateTime& Expiration, const TSharedRef<IMessageSender, ESPMode::ThreadSafe>& Publisher)"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Register(const FMessageAddress& Address, const TSharedRef<IMessageReceiver, ESPMode::ThreadSafe>& Recipient)"
  },
  {
    "label": "Send()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Send(void* Message, UScriptStruct* TypeInfo, EMessageFlags Flags, const TMap<FName, FString>& Annotations, const TSharedPtr<IMessageAttachment, ESPMode::ThreadSafe>& Attachment, const TArray<FMessageAddress>& Recipients, const FTimespan& Delay, const FDateTime& Expiration, const TSharedRef<IMessageSender, ESPMode::ThreadSafe>& Sender)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "Subscribe()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IMessageSubscription,ESPMode::ThreadSafe>)",
    "insertText": "Subscribe(const TSharedRef<IMessageReceiver, ESPMode::ThreadSafe>& Subscriber, const FTopLevelAssetPath& MessageType, const FMessageScopeRange& ScopeRange)"
  },
  {
    "label": "Unintercept()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unintercept(const TSharedRef<IMessageInterceptor, ESPMode::ThreadSafe>& Interceptor, const FTopLevelAssetPath& MessageType)"
  },
  {
    "label": "Unregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unregister(const FMessageAddress& Address)"
  },
  {
    "label": "Unsubscribe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unsubscribe(const TSharedRef<IMessageReceiver, ESPMode::ThreadSafe>& Subscriber, const FTopLevelAssetPath& MessageType)"
  },
  {
    "label": "AddNotificationListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNotificationListener(const TSharedRef<IBusListener, ESPMode::ThreadSafe>& Listener)"
  },
  {
    "label": "RemoveNotificationListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNotificationListener(const TSharedRef<IBusListener, ESPMode::ThreadSafe>& Listener)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetName()"
  }
]