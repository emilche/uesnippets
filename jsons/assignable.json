[
  {
    "label": "_Lhs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Lhs"
  },
  {
    "label": "_Rhs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Rhs"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___CONCEPTS_ASSIGNABLE_H # define _LIBCPP___CONCEPTS_ASSIGNABLE_H # include<__concepts / common_reference_with . h> # include<__concepts / same_as . h> # include<__config> # include<__utility / forward . h> # include<type_traits> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD #if _LIBCPP_STD_VER > 17 template<class _Lhs, class _Rhs> concept assignable_from = is_lvalue_reference_v<_Lhs> && common_reference_with<__make_const_lvalue_ref<_Lhs>, __make_const_lvalue_ref<_Rhs>> && requires (_Lhs __lhs, _Rhs&& __rhs)"
  },
  {
    "label": "_Rhs()",
    "kind": "Method",
    "detail": "Function (same_as<_Lhs>)",
    "insertText": "_Rhs(__rhs)"
  }
]