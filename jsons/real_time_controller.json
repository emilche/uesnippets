[
  {
    "label": "RealTimeController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RealTimeController"
  },
  {
    "label": "RealTimeController()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_TIME_CONTROLLER_REAL_TIME_CONTROLLER_H_ # define TEST_TIME_CONTROLLER_REAL_TIME_CONTROLLER_H_ # include<functional> # include<memory> # include \" api / task_queue / task_queue_factory . h \" # include \" api / test / time_controller . h \" # include \" api / units / time_delta . h \" # include \" system_wrappers / include / clock . h \" namespace webrtc { class RealTimeController : public TimeController { public :)",
    "insertText": "RealTimeController()"
  },
  {
    "label": "GetClock()",
    "kind": "Method",
    "detail": "Function (Clock*)",
    "insertText": "GetClock()"
  },
  {
    "label": "GetTaskQueueFactory()",
    "kind": "Method",
    "detail": "Function (TaskQueueFactory*)",
    "insertText": "GetTaskQueueFactory()"
  },
  {
    "label": "CreateThread()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<rtc::Thread>)",
    "insertText": "CreateThread(const std::string& name, std::unique_ptr<rtc::SocketServer> socket_server)"
  },
  {
    "label": "GetMainThread()",
    "kind": "Method",
    "detail": "Function (rtc::Thread*)",
    "insertText": "GetMainThread()"
  },
  {
    "label": "AdvanceTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceTime(TimeDelta duration)"
  }
]