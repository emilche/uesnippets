[
  {
    "label": "FAnalyticsPerfTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnalyticsPerfTracker"
  },
  {
    "label": "FAnalyticsPerfTracker()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / Build . h \" # define ANALYTICS_PERF_TRACKING_ENABLED ! UE_BUILD_SHIPPING # if ANALYTICS_PERF_TRACKING_ENABLED # include \" CoreMinimal . h \" # include \" Containers / Ticker . h \" # include \" Misc / OutputDeviceFile . h \" # include \" Misc / Paths . h \" # include \" Misc / LazySingleton . h \" # include \" HAL / PlatformTime . h \" struct FAnalyticsPerfTracker : FTSTickerObjectBase {)",
    "insertText": "FAnalyticsPerfTracker()"
  },
  {
    "label": "RecordFlush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordFlush(uint64 Bytes, uint64 NumEvents, double TimeSec)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "SetRunID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRunID(const FString& InRunID)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "WindowExpired()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WindowExpired(double Now)"
  },
  {
    "label": "ResetWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetWindow(double Now)"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (FOutputDeviceFile LogFile {*)",
    "insertText": "Combine(*FPaths::ProjectSavedDir(), TEXT(\"AnalyticsTiming.csv\"))"
  },
  {
    "label": "FGuid()",
    "kind": "Method",
    "detail": "Function (FString StartDate ; FString CL ; FString RunID =)",
    "insertText": "FGuid().ToString().ToLower()"
  },
  {
    "label": "SetAnayticsETPerfTrackingRunID()",
    "kind": "Method",
    "detail": "Function (bool bEnabled = false ; } ; void)",
    "insertText": "SetAnayticsETPerfTrackingRunID(const FString& RunID)"
  },
  {
    "label": "GetAnalyticsPerfTracker()",
    "kind": "Method",
    "detail": "Function (FAnalyticsPerfTracker&)",
    "insertText": "GetAnalyticsPerfTracker()"
  },
  {
    "label": "TearDownAnalyticsPerfTracker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDownAnalyticsPerfTracker()"
  }
]