[
  {
    "label": "CefStringTraitsWide",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CefStringTraitsWide"
  },
  {
    "label": "CefStringTraitsUTF8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CefStringTraitsUTF8"
  },
  {
    "label": "CefStringTraitsUTF16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CefStringTraitsUTF16"
  },
  {
    "label": "uses",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "uses"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "traits"
  },
  {
    "label": "CefStringBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefStringBase"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "owns",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "owns"
  },
  {
    "label": "owns",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "owns"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "currently",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "currently"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "cef_string_wide_set()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_wide_set(src, src_size, output, copy)"
  },
  {
    "label": "cef_string_wide_cmp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_wide_cmp(s1, s2)"
  },
  {
    "label": "cef_string_userfree_wide_alloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_userfree_wide_alloc()"
  },
  {
    "label": "cef_string_userfree_wide_free()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_userfree_wide_free(ufs)"
  },
  {
    "label": "cef_string_utf8_set()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_utf8_set(src, src_size, output, copy)"
  },
  {
    "label": "cef_string_utf8_cmp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_utf8_cmp(s1, s2)"
  },
  {
    "label": "cef_string_userfree_utf8_alloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_userfree_utf8_alloc()"
  },
  {
    "label": "cef_string_userfree_utf8_free()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_userfree_utf8_free(ufs)"
  },
  {
    "label": "cef_string_utf16_set()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_utf16_set(src, src_size, output, copy)"
  },
  {
    "label": "cef_string_utf16_cmp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_utf16_cmp(s1, s2)"
  },
  {
    "label": "cef_string_userfree_utf16_alloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_userfree_utf16_alloc()"
  },
  {
    "label": "cef_string_userfree_utf16_free()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cef_string_userfree_utf16_free(ufs)"
  },
  {
    "label": "length()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "length()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ToString()"
  },
  {
    "label": "ToWString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ToWString()"
  },
  {
    "label": "ToString16()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ToString16()"
  }
]