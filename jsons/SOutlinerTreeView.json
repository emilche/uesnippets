[
  {
    "label": "SSceneOutlinerTreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSceneOutlinerTreeView"
  },
  {
    "label": "SSceneOutlinerTreeRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSceneOutlinerTreeRow"
  },
  {
    "label": "SSceneOutlinerPinnedTreeRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSceneOutlinerPinnedTreeRow"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SceneOutlinerFwd . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STreeView . h \" # include \" Animation / SlateSprings . h \" class SSceneOutlinerTreeView : public STreeView<FSceneOutlinerTreeItemPtr> { public : void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<SSceneOutliner> Owner)"
  },
  {
    "label": "FlashHighlightOnItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlashHighlightOnItem(FSceneOutlinerTreeItemPtr FlashHighlightOnItem)"
  },
  {
    "label": "GetOutlinerPtr()",
    "kind": "Method",
    "detail": "Function (const TWeakPtr<SSceneOutliner>&)",
    "insertText": "GetOutlinerPtr()"
  },
  {
    "label": "OnDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDrop(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "Private_UpdateParentHighlights()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Private_UpdateParentHighlights()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SSceneOutliner> SceneOutlinerWeak ; } ; class SSceneOutlinerTreeRow : public SMultiColumnTableRow<FSceneOutlinerTreeItemPtr> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSceneOutlinerTreeRow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FSceneOutlinerTreeItemPtr, Item ) SLATE_END_ARGS() void Construct( const FArguments& InArgs, const TSharedRef<SSceneOutlinerTreeView>& OutlinerTreeView, TSharedRef<SSceneOutliner> SceneOutliner)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "FlashHighlight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlashHighlight()"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (protected : FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDoubleClick(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragEnter(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragOver()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragOver(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "IsRowEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRowEnabled()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (private : TWeakPtr<SSceneOutliner> SceneOutlinerWeak ; TWeakPtr<ISceneOutlinerTreeItem> Item ; protected : void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : const float HighlightRectLeftOffset ; const float HighlightRectRightOffset ; const float HighlightTargetSpringConstant ; const float HighlightTargetEffectDuration ; const float HighlightTargetOpacity ; const float LabelChangedAnimOffsetPercent ; FFloatSpring1D HighlightTargetLeftSpring ; FFloatSpring1D HighlightTargetRightSpring ; double LastHighlightInteractionTime ; } ; class SSceneOutlinerPinnedTreeRow : public SMultiColumnTableRow<FSceneOutlinerTreeItemPtr> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSceneOutlinerPinnedTreeRow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FSceneOutlinerTreeItemPtr, Item) SLATE_END_ARGS() void Construct(const FArguments& InArgs, const TSharedRef<SSceneOutlinerTreeView>& OutlinerTreeView, TSharedRef<SSceneOutliner> SceneOutliner)"
  },
  {
    "label": "ConstructChildren()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ConstructChildren(ETableViewMode::Type InOwnerTableMode, const TAttribute<FMargin>& InPadding, const TSharedRef<SWidget>& InContent)"
  },
  {
    "label": "Padding()",
    "kind": "Method",
    "detail": "Function (STableRow<FSceneOutlinerTreeItemPtr>::Content = InContent ; this -> ChildSlot .)",
    "insertText": "Padding(InPadding)"
  }
]