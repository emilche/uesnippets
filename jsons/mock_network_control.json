[
  {
    "label": "MockNetworkStateEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockNetworkStateEstimator"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TRANSPORT_TEST_MOCK_NETWORK_CONTROL_H_ # define API_TRANSPORT_TEST_MOCK_NETWORK_CONTROL_H_ # include \" api / transport / network_control . h \" # include \" test / gmock . h \" namespace webrtc { class MockNetworkStateEstimator : public NetworkStateEstimator { public :)",
    "insertText": "MOCK_METHOD(absl::optional<NetworkStateEstimate>, GetCurrentEstimate, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnTransportPacketsFeedback, (const TransportPacketsFeedback&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnReceivedPacket, (const PacketResult&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnRouteChange, (const NetworkRouteChange&), (override))"
  }
]