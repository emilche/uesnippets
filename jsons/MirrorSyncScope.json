[
  {
    "label": "FAnimSyncGroupScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimSyncGroupScope"
  },
  {
    "label": "FAnimNotifyMirrorContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimNotifyMirrorContext"
  },
  {
    "label": "FMirrorSyncScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMirrorSyncScope"
  },
  {
    "label": "DECLARE_NOTIFY_CONTEXT_INTERFACE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AnimNodeMessages . h \" # include \" Animation / MirrorDataTable . h \" namespace UE { namespace Anim { class FAnimSyncGroupScope ; class FAnimNotifyMirrorContext : public IAnimNotifyEventContextDataInterface {)",
    "insertText": "DECLARE_NOTIFY_CONTEXT_INTERFACE(FAnimNotifyMirrorContext) public: FAnimNotifyMirrorContext()"
  },
  {
    "label": "FAnimNotifyMirrorContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAnimNotifyMirrorContext(const UMirrorDataTable* MirrorDataTable) : MirrorTable(MirrorDataTable)"
  },
  {
    "label": "DECLARE_ANIMGRAPH_MESSAGE_API()",
    "kind": "Method",
    "detail": "Function (bAnimationMirrored = MirrorDataTable ! = nullptr ; } bool bAnimationMirrored = true ; TWeakObjectPtr<const UMirrorDataTable> MirrorTable ; } ; class FMirrorSyncScope : public IGraphMessage {)",
    "insertText": "DECLARE_ANIMGRAPH_MESSAGE_API(FMirrorSyncScope, ENGINE_API)"
  },
  {
    "label": "FMirrorSyncScope()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FMirrorSyncScope(const FAnimationBaseContext& InContext, const UMirrorDataTable* InMirrorDataTable)"
  },
  {
    "label": "FMirrorSyncScope()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMirrorSyncScope()"
  },
  {
    "label": "GetMirrorScopeDepth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMirrorScopeDepth()"
  },
  {
    "label": "MakeUniqueEventContextData()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<const IAnimNotifyEventContextDataInterface>)",
    "insertText": "MakeUniqueEventContextData()"
  }
]