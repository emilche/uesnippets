[
  {
    "label": "UMovieScenePropertyInstantiatorSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScenePropertyInstantiatorSystem"
  },
  {
    "label": "UMovieScenePropertySystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScenePropertySystem"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieScenePropertySystemTypes . h \" # include \" EntitySystem / MovieScenePreAnimatedStateSystem . h \" # include \" MovieScenePropertySystem . generated . h \" class UMovieScenePropertyInstantiatorSystem ;)",
    "insertText": "UCLASS(Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() MOVIESCENETRACKS_API UMovieScenePropertySystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "BindToProperty()",
    "kind": "Method",
    "detail": "Function (template<PropertyTraits> void)",
    "insertText": "BindToProperty(const UE::MovieScene::TPropertyComponents<PropertyTraits>& InComponents)"
  },
  {
    "label": "OnLink()",
    "kind": "Method",
    "detail": "Function (RelevantComponent = InComponents . PropertyTag ; CompositePropertyID = InComponents . CompositeID ; } protected : void)",
    "insertText": "OnLink()"
  },
  {
    "label": "OnSchedulePersistentTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSchedulePersistentTasks(UE::MovieScene::IEntitySystemScheduler* TaskScheduler)"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "SavePreAnimatedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePreAnimatedState(const FPreAnimationParameters& InParameters)"
  },
  {
    "label": "RestorePreAnimatedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestorePreAnimatedState(const FPreAnimationParameters& InParameters)"
  }
]