[
  {
    "label": "Types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Types"
  },
  {
    "label": "Histogram",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Histogram"
  },
  {
    "label": "SampleInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SampleInfo"
  },
  {
    "label": "HistogramAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HistogramAdd(Histogram* histogram_pointer, int sample)"
  },
  {
    "label": "Enable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enable()"
  },
  {
    "label": "GetAndReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAndReset(\n    std::map<std::string, std::unique_ptr<SampleInfo>, rtc::AbslStringViewCmp>*\n        histograms)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "NumEvents()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NumEvents(absl::string_view name, int sample)"
  },
  {
    "label": "NumSamples()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NumSamples(absl::string_view name)"
  },
  {
    "label": "MinSample()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "MinSample(absl::string_view name)"
  },
  {
    "label": "Samples()",
    "kind": "Method",
    "detail": "Function (int>)",
    "insertText": "Samples(absl::string_view name)"
  }
]