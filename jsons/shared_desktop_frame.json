[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "SharedDesktopFrame()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_SHARED_DESKTOP_FRAME_H_ # define MODULES_DESKTOP_CAPTURE_SHARED_DESKTOP_FRAME_H_ # include<memory> # include \" api / scoped_refptr . h \" # include \" modules / desktop_capture / desktop_frame . h \" # include \" rtc_base / ref_counted_object . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { class RTC_EXPORT SharedDesktopFrame final : public DesktopFrame { public : ~)",
    "insertText": "SharedDesktopFrame()"
  },
  {
    "label": "SharedDesktopFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SharedDesktopFrame(const SharedDesktopFrame&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (SharedDesktopFrame&)",
    "insertText": "operator(const SharedDesktopFrame&)"
  },
  {
    "label": "Wrap()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SharedDesktopFrame>)",
    "insertText": "Wrap(std::unique_ptr<DesktopFrame> desktop_frame)"
  },
  {
    "label": "Wrap()",
    "kind": "Method",
    "detail": "Function (SharedDesktopFrame*)",
    "insertText": "Wrap(DesktopFrame* desktop_frame)"
  },
  {
    "label": "GetUnderlyingFrame()",
    "kind": "Method",
    "detail": "Function (DesktopFrame*)",
    "insertText": "GetUnderlyingFrame()"
  },
  {
    "label": "ShareFrameWith()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShareFrameWith(const SharedDesktopFrame& other)"
  },
  {
    "label": "Share()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SharedDesktopFrame>)",
    "insertText": "Share()"
  },
  {
    "label": "IsShared()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShared()"
  },
  {
    "label": "SharedDesktopFrame()",
    "kind": "Method",
    "detail": "Function (private : typedef rtc::FinalRefCountedObject<std::unique_ptr<DesktopFrame>> Core ;)",
    "insertText": "SharedDesktopFrame(rtc::scoped_refptr<Core> core)"
  }
]