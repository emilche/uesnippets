[
  {
    "label": "FManagedStorageDefaultExternalHandleTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManagedStorageDefaultExternalHandleTraits"
  },
  {
    "label": "FManagedStorageTraitsBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManagedStorageTraitsBase"
  },
  {
    "label": "FManagedStorageDefaultTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManagedStorageDefaultTraits"
  },
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "TManagedStorage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TManagedStorage"
  },
  {
    "label": "TManagedStorageInternalHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TManagedStorageInternalHandle"
  },
  {
    "label": "EGenerateNewHandleType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EGenerateNewHandleType"
  },
  {
    "label": "FAddRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddRequest"
  },
  {
    "label": "FRemoveRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRemoveRequest"
  },
  {
    "label": "FStorageEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStorageEntry"
  },
  {
    "label": "TBaseRangeForIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBaseRangeForIterator"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(InHandle.ExternalHandle)"
  },
  {
    "label": "Handle()",
    "kind": "Method",
    "detail": "Function (FExternalHandle)",
    "insertText": "Handle(FExternalHandle::GenerateNewHandle)"
  },
  {
    "label": "InternalHandle()",
    "kind": "Method",
    "detail": "Function (FInternalHandle)",
    "insertText": "InternalHandle(FInternalHandle::GenerateNewHandle, Handle, Allocation.Index)"
  }
]