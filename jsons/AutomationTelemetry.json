[
  {
    "label": "FAutomationTelemetry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationTelemetry"
  },
  {
    "label": "Columns",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Columns"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" AutomationWorkerMessages . h \" class FAutomationTelemetry : FNoncopyable { public : void)",
    "insertText": "Initialize()"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "HandleAddTelemetry()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "HandleAddTelemetry(const FAutomationWorkerTelemetryData& Data)"
  },
  {
    "label": "ToColumnName()",
    "kind": "Method",
    "detail": "Function (private : bool bIsInitialized ; FString TelemetryDirectory ; bool bResetTelemetryStorageOnNewSession ; enum Columns : uint8 { Configuration,Platform,DateTime,TestName,Context,DataPoint,Measurement,Count } ; FString)",
    "insertText": "ToColumnName(uint8 Index)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (default : return)",
    "insertText": "TEXT(\"Unknown\")"
  },
  {
    "label": "ToColumnValue()",
    "kind": "Method",
    "detail": "Function (} } FString)",
    "insertText": "ToColumnValue(uint8 Index, const FAutomationWorkerTelemetryData& Data, const FAutomationWorkerTelemetryItem& Item)"
  },
  {
    "label": "InitiateStorage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitiateStorage(const FString& StorageName)"
  },
  {
    "label": "GetStorageFilePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStorageFilePath(const FString& StorageName)"
  }
]