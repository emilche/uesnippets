[
  {
    "label": "MediaStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MediaStream"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_MEDIA_STREAM_H_ # define PC_MEDIA_STREAM_H_ # include<string> # include \" api / media_stream_interface . h \" # include \" api / notifier . h \" # include \" api / scoped_refptr . h \" namespace webrtc { class MediaStream : public Notifier<MediaStreamInterface> { public : rtc::scoped_refptr<MediaStream>)",
    "insertText": "Create(const std::string& id)"
  },
  {
    "label": "id()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "id()"
  },
  {
    "label": "AddTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddTrack(rtc::scoped_refptr<VideoTrackInterface> track)"
  },
  {
    "label": "RemoveTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveTrack(rtc::scoped_refptr<AudioTrackInterface> track)"
  },
  {
    "label": "RemoveTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveTrack(rtc::scoped_refptr<VideoTrackInterface> track)"
  },
  {
    "label": "FindAudioTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<AudioTrackInterface>)",
    "insertText": "FindAudioTrack(const std::string& track_id)"
  },
  {
    "label": "FindVideoTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<VideoTrackInterface>)",
    "insertText": "FindVideoTrack(const std::string& track_id)"
  },
  {
    "label": "GetAudioTracks()",
    "kind": "Method",
    "detail": "Function (AudioTrackVector)",
    "insertText": "GetAudioTracks()"
  },
  {
    "label": "AddTrack()",
    "kind": "Method",
    "detail": "Function (private : template<TrackVector,Track> bool)",
    "insertText": "AddTrack(TrackVector* Tracks, rtc::scoped_refptr<Track> track)"
  },
  {
    "label": "RemoveTrack()",
    "kind": "Method",
    "detail": "Function (template<TrackVector> bool)",
    "insertText": "RemoveTrack(TrackVector* Tracks, rtc::scoped_refptr<MediaStreamTrackInterface> track)"
  }
]