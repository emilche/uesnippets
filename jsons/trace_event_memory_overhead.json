[
  {
    "label": "RefCountedString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RefCountedString"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "ProcessMemoryDump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProcessMemoryDump"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ObjectType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ObjectType"
  },
  {
    "label": "ObjectCountAndSize",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ObjectCountAndSize"
  },
  {
    "label": "TraceEventMemoryOverhead()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TRACE_EVENT_TRACE_EVENT_MEMORY_OVERHEAD_H_ # define BASE_TRACE_EVENT_TRACE_EVENT_MEMORY_OVERHEAD_H_ # include<stddef . h> # include<stdint . h> # include<string> # include \" base / base_export . h \" namespace base { class RefCountedString ; class Value ; namespace trace_event { class ProcessMemoryDump ; class BASE_EXPORT TraceEventMemoryOverhead { public : enum ObjectType : uint32_t { kOther = 0,kTraceBuffer,kTraceBufferChunk,kTraceEvent,kUnusedTraceEvent,kTracedValue,kConvertableToTraceFormat,kHeapProfilerAllocationRegister,kHeapProfilerTypeNameDeduplicator,kHeapProfilerStackFrameDeduplicator,kStdString,kBaseValue,kTraceEventMemoryOverhead,kFrameMetrics,kLast } ;)",
    "insertText": "TraceEventMemoryOverhead()"
  },
  {
    "label": "TraceEventMemoryOverhead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceEventMemoryOverhead(const TraceEventMemoryOverhead&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TraceEventMemoryOverhead&)",
    "insertText": "operator(const TraceEventMemoryOverhead&)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(ObjectType object_type, size_t allocated_size_in_bytes, size_t resident_size_in_bytes)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(ObjectType object_type, size_t allocated_size_in_bytes)"
  },
  {
    "label": "AddString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddString(const std::string& str)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddValue(const Value& value)"
  },
  {
    "label": "AddRefCountedString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRefCountedString(const RefCountedString& str)"
  },
  {
    "label": "AddSelf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSelf()"
  },
  {
    "label": "GetCount()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetCount(ObjectType object_type)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(const TraceEventMemoryOverhead& other)"
  },
  {
    "label": "DumpInto()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpInto(const char* base_name, ProcessMemoryDump* pmd)"
  },
  {
    "label": "AddInternal()",
    "kind": "Method",
    "detail": "Function (private : struct ObjectCountAndSize { size_t count ; size_t allocated_size_in_bytes ; size_t resident_size_in_bytes ; } ; ObjectCountAndSize allocated_objects_ [ ObjectType::kLast ] ; void)",
    "insertText": "AddInternal(ObjectType object_type, size_t count, size_t allocated_size_in_bytes, size_t resident_size_in_bytes)"
  }
]