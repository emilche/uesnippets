[
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SCulturePicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCulturePicker"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SErrorText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SErrorText"
  },
  {
    "label": "SHorizontalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHorizontalBox"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLocalizationTargetDetailCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalizationTargetDetailCustomization"
  },
  {
    "label": "FLocalizationTargetDetailCustomization()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FLocalizationTargetDetailCustomization()"
  },
  {
    "label": "OnTargetNameChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTargetNameChanged(const FText& NewText)"
  },
  {
    "label": "OnTargetNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTargetNameCommitted(const FText& NewText, ETextCommit::Type Type)"
  },
  {
    "label": "SetLoadingPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLoadingPolicy(const ELocalizationTargetLoadingPolicy LoadingPolicy)"
  },
  {
    "label": "OnLoadingPolicySelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadingPolicySelectionChanged(TSharedPtr<ELocalizationTargetLoadingPolicy> LoadingPolicy, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "GenerateWidgetForLoadingPolicy()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForLoadingPolicy(TSharedPtr<ELocalizationTargetLoadingPolicy> LoadingPolicy)"
  },
  {
    "label": "RebuildTargetDependenciesBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildTargetDependenciesBox()"
  },
  {
    "label": "RebuildTargetsList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildTargetsList()"
  },
  {
    "label": "OnGenerateTargetRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateTargetRow(ULocalizationTarget* OtherLocalizationTarget, const TSharedRef<STableViewBase>& Table)"
  },
  {
    "label": "OnTargetDependencyCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTargetDependencyCheckStateChanged(ULocalizationTarget* const OtherLocalizationTarget, const ECheckBoxState State)"
  },
  {
    "label": "GatherText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherText()"
  },
  {
    "label": "ImportTextAllCultures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportTextAllCultures()"
  },
  {
    "label": "ExportTextAllCultures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportTextAllCultures()"
  },
  {
    "label": "ImportDialogueScriptAllCultures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportDialogueScriptAllCultures()"
  },
  {
    "label": "ExportDialogueScriptAllCultures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportDialogueScriptAllCultures()"
  },
  {
    "label": "ImportDialogueAllCultures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportDialogueAllCultures()"
  },
  {
    "label": "CountWords()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountWords()"
  },
  {
    "label": "CompileTextAllCultures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompileTextAllCultures()"
  },
  {
    "label": "UpdateTargetFromReports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTargetFromReports()"
  },
  {
    "label": "BuildListedCulturesList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildListedCulturesList()"
  },
  {
    "label": "RebuildListedCulturesList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildListedCulturesList()"
  },
  {
    "label": "OnGenerateCultureRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateCultureRow(TSharedPtr<IPropertyHandle> CulturePropertyHandle, const TSharedRef<STableViewBase>& Table)"
  },
  {
    "label": "IsCultureSelectableAsSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCultureSelectableAsSupported(FCulturePtr Culture)"
  },
  {
    "label": "OnNewSupportedCultureSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewSupportedCultureSelected(FCulturePtr SelectedCulture, ESelectInfo::Type SelectInfo)"
  }
]