[
  {
    "label": "ISessionManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISessionManager"
  },
  {
    "label": "AddOwner()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ISessionInstanceInfo . h \" # include \" ISessionInfo . h \" # include \" SessionLogMessage . h \" class ISessionManager { public : void)",
    "insertText": "AddOwner(const FString& InOwner)"
  },
  {
    "label": "GetSelectedInstances()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<ISessionInstanceInfo>>&)",
    "insertText": "GetSelectedInstances()"
  },
  {
    "label": "GetSelectedSession()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<ISessionInfo>&)",
    "insertText": "GetSelectedSession()"
  },
  {
    "label": "GetSessions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSessions(TArray<TSharedPtr<ISessionInfo>>& OutSessions)"
  },
  {
    "label": "GetInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISessionInstanceInfo>)",
    "insertText": "GetInstance(const FGuid& Id)"
  },
  {
    "label": "IsInstanceSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInstanceSelected(const TSharedRef<ISessionInstanceInfo>& Instance)"
  },
  {
    "label": "RemoveOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveOwner(const FString& InOwner)"
  },
  {
    "label": "SelectSession()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectSession(const TSharedPtr<ISessionInfo>& Session)"
  },
  {
    "label": "SetInstanceSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetInstanceSelected(const TSharedRef<ISessionInstanceInfo>& Instance, bool Selected)"
  },
  {
    "label": "DECLARE_EVENT_TwoParams()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "DECLARE_EVENT_TwoParams(ISessionManager, FCanSelectSessionEvent, const TSharedPtr<ISessionInfo>& , bool& ) virtual FCanSelectSessionEvent& OnCanSelectSession()"
  },
  {
    "label": "DECLARE_EVENT_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_TwoParams(ISessionManager, FInstanceSelectionChangedEvent, const TSharedPtr<ISessionInstanceInfo>& , bool ) virtual FInstanceSelectionChangedEvent& OnInstanceSelectionChanged()"
  },
  {
    "label": "DECLARE_EVENT_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_ThreeParams(ISessionManager, FLogReceivedEvent, const TSharedRef<ISessionInfo>& , const TSharedRef<ISessionInstanceInfo>& , const TSharedRef<FSessionLogMessage>&)"
  },
  {
    "label": "OnLogReceived()",
    "kind": "Method",
    "detail": "Function (FLogReceivedEvent&)",
    "insertText": "OnLogReceived()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(ISessionManager, FSelectedSessionChangedEvent, const TSharedPtr<ISessionInfo>& ) virtual FSelectedSessionChangedEvent& OnSelectedSessionChanged()"
  },
  {
    "label": "OnSessionsUpdated()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "OnSessionsUpdated()"
  },
  {
    "label": "OnSessionInstanceUpdated()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "OnSessionInstanceUpdated()"
  },
  {
    "label": "ISessionManager()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "ISessionManager()"
  }
]