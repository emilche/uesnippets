[
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FReply",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReply"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SEasingFunctionGridWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEasingFunctionGridWidget"
  },
  {
    "label": "FGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGroup"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" IDetailCustomization . h \" # include \" Templates / SharedPointer . h \" # include \" Generators / MovieSceneEasingCurves . h \" # include \" Widgets / SCompoundWidget . h \" class IDetailLayoutBuilder ; enum class EMovieSceneBuiltInEasing : uint8 ; class FReply ; class IPropertyHandle ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FEasingFunctionGridWidget_OnClicked, EMovieSceneBuiltInEasing)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SEasingFunctionGridWidget : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SEasingFunctionGridWidget)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TSet<EMovieSceneBuiltInEasing>, FilterExclude) SLATE_EVENT(FEasingFunctionGridWidget_OnClicked, OnTypeChanged) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "FindOrAddGroup()",
    "kind": "Method",
    "detail": "Function (private : struct FGroup { FString GroupName ; TArray<EMovieSceneBuiltInEasing,TInlineAllocator<3>> Values ; } ; FGroup&)",
    "insertText": "FindOrAddGroup(TArray<FGroup>& Groups, const FString& GroupName)"
  },
  {
    "label": "ConstructGroups()",
    "kind": "Method",
    "detail": "Function (TArray<FGroup>)",
    "insertText": "ConstructGroups(const TSet<EMovieSceneBuiltInEasing>& FilterExclude)"
  },
  {
    "label": "OnTypeButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnTypeButtonClicked(EMovieSceneBuiltInEasing type)"
  }
]