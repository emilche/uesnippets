[
  {
    "label": "DirectoryCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DirectoryCache"
  },
  {
    "label": "Directory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Directory"
  },
  {
    "label": "DirectoryCache()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" LC_Types . h \" # include \" LC_ChangeNotification . h \" class DirectoryCache { public : struct Directory { ChangeNotification changeNotification ; bool hadChange ; } ;)",
    "insertText": "DirectoryCache(size_t expectedDirectoryCount)"
  },
  {
    "label": "DirectoryCache()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DirectoryCache(void)"
  },
  {
    "label": "AddDirectory()",
    "kind": "Method",
    "detail": "Function (Directory*)",
    "insertText": "AddDirectory(const std::wstring& directory)"
  },
  {
    "label": "PrimeNotifications()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrimeNotifications(void)"
  },
  {
    "label": "RestartNotifications()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestartNotifications(void)"
  }
]