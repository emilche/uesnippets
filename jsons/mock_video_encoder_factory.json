[
  {
    "label": "MockVideoEncoderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockVideoEncoderFactory"
  },
  {
    "label": "MockVideoEncoderFactory()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_MOCK_VIDEO_ENCODER_FACTORY_H_ # define API_TEST_MOCK_VIDEO_ENCODER_FACTORY_H_ # include<memory> # include<vector> # include \" api / video_codecs / sdp_video_format . h \" # include \" api / video_codecs / video_encoder . h \" # include \" api / video_codecs / video_encoder_factory . h \" # include \" test / gmock . h \" namespace webrtc { class MockVideoEncoderFactory : public webrtc::VideoEncoderFactory { public : ~)",
    "insertText": "MockVideoEncoderFactory()"
  },
  {
    "label": "Die()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Die()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(std::vector<SdpVideoFormat>, GetSupportedFormats, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::unique_ptr<VideoEncoder>, CreateVideoEncoder, (const SdpVideoFormat&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Die, ())"
  }
]