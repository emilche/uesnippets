[
  {
    "label": "FURLRequestFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FURLRequestFilter"
  },
  {
    "label": "FURLRequestFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / ContainersFwd . h \" # include \" Containers / StringFwd . h \" # include \" Containers / Map . h \" namespace UE::Core { class FURLRequestFilter { public : using FRequestMap = TMap<const FString,const TArray<FString>> ;)",
    "insertText": "FURLRequestFilter()"
  },
  {
    "label": "FURLRequestFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FURLRequestFilter(const TCHAR* ConfigSectionRootName, const FString& ConfigFileName)"
  },
  {
    "label": "FURLRequestFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FURLRequestFilter(const FRequestMap& InAllowedRequests)"
  },
  {
    "label": "FURLRequestFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FURLRequestFilter(FRequestMap&& InAllowedRequests)"
  },
  {
    "label": "UpdateConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateConfig(const TCHAR* ConfigSectionRootName, const FString& ConfigFileName)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "IsRequestAllowed()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRequestAllowed(FStringView InURL)"
  }
]