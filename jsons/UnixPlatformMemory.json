[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FPlatformMemoryStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformMemoryStats"
  },
  {
    "label": "FExtendedPlatformMemoryStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExtendedPlatformMemoryStats"
  },
  {
    "label": "FUnixPlatformMemory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnixPlatformMemory"
  },
  {
    "label": "FUnixSharedMemoryRegion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnixSharedMemoryRegion"
  },
  {
    "label": "FMalloc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMalloc"
  },
  {
    "label": "FPlatformVirtualMemoryBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlatformVirtualMemoryBlock"
  },
  {
    "label": "GetFileDescriptor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" GenericPlatform / GenericPlatformMemory . h \" # include \" HAL / PlatformCrt . h \" # include<malloc . h> class FString ; # ifndef COMPILE_FORK_PAGE_PROTECTOR # define COMPILE_FORK_PAGE_PROTECTOR 0 # endif struct FPlatformMemoryStats : public FGenericPlatformMemoryStats { } ; struct FExtendedPlatformMemoryStats { SIZE_T Shared_Clean ; SIZE_T Shared_Dirty ; SIZE_T Private_Clean ; SIZE_T Private_Dirty ; } ; struct FUnixPlatformMemory : public FGenericPlatformMemory { struct FUnixSharedMemoryRegion : public FSharedMemoryRegion { int)",
    "insertText": "GetFileDescriptor()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} protected : int Fd ; bool bCreatedThisRegion ; } ; void)",
    "insertText": "Init()"
  },
  {
    "label": "BaseAllocator()",
    "kind": "Method",
    "detail": "Function (class FMalloc*)",
    "insertText": "BaseAllocator()"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (FPlatformMemoryStats)",
    "insertText": "GetStats()"
  },
  {
    "label": "GetExtendedStats()",
    "kind": "Method",
    "detail": "Function (FExtendedPlatformMemoryStats)",
    "insertText": "GetExtendedStats()"
  },
  {
    "label": "GetConstants()",
    "kind": "Method",
    "detail": "Function (const FPlatformMemoryConstants&)",
    "insertText": "GetConstants()"
  },
  {
    "label": "PageProtect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PageProtect(void* const Ptr, const SIZE_T Size, const bool bCanRead, const bool bCanWrite)"
  },
  {
    "label": "BinnedAllocFromOS()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "BinnedAllocFromOS(SIZE_T Size)"
  },
  {
    "label": "BinnedFreeToOS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BinnedFreeToOS(void* Ptr, SIZE_T Size)"
  },
  {
    "label": "GetForkedPageAllocationInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetForkedPageAllocationInfo(TArray<FForkedPageAllocation>& OutPageAllocationInfos)"
  },
  {
    "label": "FPlatformVirtualMemoryBlock()",
    "kind": "Method",
    "detail": "Function (class FPlatformVirtualMemoryBlock : public FBasicVirtualMemoryBlock { public :)",
    "insertText": "FPlatformVirtualMemoryBlock()"
  },
  {
    "label": "FPlatformVirtualMemoryBlock()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPlatformVirtualMemoryBlock(void *InPtr, uint32 InVMSizeDivVirtualSizeAlignment) : FBasicVirtualMemoryBlock(InPtr, InVMSizeDivVirtualSizeAlignment)"
  },
  {
    "label": "FPlatformVirtualMemoryBlock()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPlatformVirtualMemoryBlock(const FPlatformVirtualMemoryBlock& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPlatformVirtualMemoryBlock&)",
    "insertText": "operator(const FPlatformVirtualMemoryBlock& Other)"
  },
  {
    "label": "Commit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Commit(size_t InOffset, size_t InSize)"
  },
  {
    "label": "Decommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decommit(size_t InOffset, size_t InSize)"
  },
  {
    "label": "FreeVirtual()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeVirtual()"
  },
  {
    "label": "Commit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Commit(size_t(((uint8*)InPtr) - ((uint8*)Ptr)), InSize)"
  },
  {
    "label": "DecommitByPtr()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DecommitByPtr(void *InPtr, size_t InSize)"
  },
  {
    "label": "Decommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decommit(size_t(((uint8*)InPtr) - ((uint8*)Ptr)), InSize)"
  },
  {
    "label": "Commit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Commit()"
  },
  {
    "label": "Commit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Commit(0, GetActualSize())"
  },
  {
    "label": "Decommit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Decommit()"
  },
  {
    "label": "Decommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decommit(0, GetActualSize())"
  },
  {
    "label": "GetActualSize()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "GetActualSize()"
  },
  {
    "label": "AllocateVirtual()",
    "kind": "Method",
    "detail": "Function (} FPlatformVirtualMemoryBlock)",
    "insertText": "AllocateVirtual(size_t Size, size_t InAlignment = FPlatformVirtualMemoryBlock::GetVirtualSizeAlignment())"
  },
  {
    "label": "GetCommitAlignment()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetCommitAlignment()"
  },
  {
    "label": "GetVirtualSizeAlignment()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetVirtualSizeAlignment()"
  },
  {
    "label": "MapNamedSharedMemoryRegion()",
    "kind": "Method",
    "detail": "Function (} ; FSharedMemoryRegion*)",
    "insertText": "MapNamedSharedMemoryRegion(const FString& InName, bool bCreate, uint32 AccessMode, SIZE_T Size)"
  },
  {
    "label": "UnmapNamedSharedMemoryRegion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnmapNamedSharedMemoryRegion(FSharedMemoryRegion * MemoryRegion)"
  },
  {
    "label": "GetLLMAllocFunctions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLLMAllocFunctions(void*(*&OutAllocFunction)(size_t), void(*&OutFreeFunction)(void*, size_t), int32& OutAlignment)"
  },
  {
    "label": "OnOutOfMemory()",
    "kind": "Method",
    "detail": "Function ([ [ noreturn ] ] void)",
    "insertText": "OnOutOfMemory(uint64 Size, uint32 Alignment)"
  },
  {
    "label": "HasForkPageProtectorEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasForkPageProtectorEnabled()"
  },
  {
    "label": "CanOverallocateVirtualMemory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanOverallocateVirtualMemory()"
  }
]