[
  {
    "label": "FormattedInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormattedInt"
  },
  {
    "label": "printBytes()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENVDB_UTIL_FORMATS_HAS_BEEN_INCLUDED # define OPENVDB_UTIL_FORMATS_HAS_BEEN_INCLUDED # include<iosfwd> # include<sstream> # include<string> # include<openvdb / version . h> # include<openvdb / Platform . h> namespace openvdb { OPENVDB_USE_VERSION_NAMESPACE namespace OPENVDB_VERSION_NAME { namespace util { int)",
    "insertText": "printBytes(std::ostream& os, uint64_t bytes, const std::string& head = \"\", const std::string& tail = \"\\n\", bool exact = false, int width = 8, int precision = 3)"
  },
  {
    "label": "printNumber()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "printNumber(std::ostream& os, uint64_t number, const std::string& head = \"\", const std::string& tail = \"\\n\", bool exact = true, int width = 8, int precision = 3)"
  },
  {
    "label": "printTime()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "printTime(std::ostream& os, double milliseconds, const std::string& head = \"\", const std::string& tail = \"\\n\", int width = 4, int precision = 1, int verbose = 0)"
  },
  {
    "label": "sep()",
    "kind": "Method",
    "detail": "Function (template<IntT> class FormattedInt { public : char)",
    "insertText": "sep()"
  },
  {
    "label": "put()",
    "kind": "Method",
    "detail": "Function (} std::ostream&)",
    "insertText": "put(std::ostream& os)"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (std::ostringstream ostr ; ostr<<mInt ; std::string s = ostr .)",
    "insertText": "str()"
  },
  {
    "label": "padding()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "padding(s.size() % 3) ? 3 - (s.size() % 3)"
  },
  {
    "label": "string()",
    "kind": "Method",
    "detail": "Function (s =)",
    "insertText": "string(padding, ' ')"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (ostr .)",
    "insertText": "str(\"\")"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (ostr<<s [ i ] ; + + i ;)",
    "insertText": "if(i >= padding && i % 3 == 0 && i < s.size())"
  },
  {
    "label": "substr()",
    "kind": "Method",
    "detail": "Function (os<<s .)",
    "insertText": "substr(padding, s.size())"
  },
  {
    "label": "formattedInt()",
    "kind": "Method",
    "detail": "Function (} template<IntT> FormattedInt<IntT>)",
    "insertText": "formattedInt(IntT n)"
  }
]