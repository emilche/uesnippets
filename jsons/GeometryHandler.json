[
  {
    "label": "GeometryLoader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GeometryLoader"
  },
  {
    "label": "GeometryLoader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GeometryLoader"
  },
  {
    "label": "representing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "representing"
  },
  {
    "label": "MX_RENDER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_RENDER_API"
  },
  {
    "label": "GeometryHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GeometryHandler"
  },
  {
    "label": "GeometryHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GeometryHandler"
  },
  {
    "label": "MX_RENDER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_RENDER_API"
  },
  {
    "label": "addLoader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addLoader(GeometryLoaderPtr loader)"
  },
  {
    "label": "supportedExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "supportedExtensions(StringSet& extensions)"
  },
  {
    "label": "clearGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearGeometry()"
  },
  {
    "label": "hasGeometry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasGeometry(const string& location)"
  },
  {
    "label": "getGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getGeometry(MeshList& meshes, const string& location)"
  },
  {
    "label": "loadGeometry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "loadGeometry(const FilePath& filePath, bool texcoordVerticalFlip = false)"
  },
  {
    "label": "findParentMesh()",
    "kind": "Method",
    "detail": "Function (MeshPtr)",
    "insertText": "findParentMesh(MeshPartitionPtr part)"
  },
  {
    "label": "createQuadMesh()",
    "kind": "Method",
    "detail": "Function (MeshPtr)",
    "insertText": "createQuadMesh()"
  },
  {
    "label": "computeBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "computeBounds()"
  }
]