[
  {
    "label": "load_tran_low()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_DSP_X86_BITDEPTH_CONVERSION_AVX2_H_ # define VPX_VPX_DSP_X86_BITDEPTH_CONVERSION_AVX2_H_ # include<immintrin . h> # include \" . / vpx_config . h \" # include \" vpx / vpx_integer . h \" # include \" vpx_dsp / vpx_dsp_common . h \" __m256i)",
    "insertText": "load_tran_low(const tran_low_t *a)"
  },
  {
    "label": "_mm256_loadu_si256()",
    "kind": "Method",
    "detail": "Function (# if CONFIG_VP9_HIGHBITDEPTH const __m256i a_low =)",
    "insertText": "_mm256_loadu_si256((const __m256i *)a)"
  },
  {
    "label": "_mm256_loadu_si256()",
    "kind": "Method",
    "detail": "Function (const __m256i a_high =)",
    "insertText": "_mm256_loadu_si256((const __m256i *)(a + 8))"
  },
  {
    "label": "store_tran_low()",
    "kind": "Method",
    "detail": "Function (# endif } void)",
    "insertText": "store_tran_low(__m256i a, tran_low_t *b)"
  },
  {
    "label": "_mm256_set1_epi16()",
    "kind": "Method",
    "detail": "Function (# if CONFIG_VP9_HIGHBITDEPTH const __m256i one =)",
    "insertText": "_mm256_set1_epi16(1)"
  },
  {
    "label": "_mm256_mulhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m256i a_hi =)",
    "insertText": "_mm256_mulhi_epi16(a, one)"
  },
  {
    "label": "_mm256_mullo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m256i a_lo =)",
    "insertText": "_mm256_mullo_epi16(a, one)"
  },
  {
    "label": "_mm256_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m256i a_1 =)",
    "insertText": "_mm256_unpacklo_epi16(a_lo, a_hi)"
  },
  {
    "label": "_mm256_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m256i a_2 =)",
    "insertText": "_mm256_unpackhi_epi16(a_lo, a_hi)"
  },
  {
    "label": "_mm256_storeu_si256()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm256_storeu_si256((__m256i *)b, a_1)"
  },
  {
    "label": "_mm256_storeu_si256()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm256_storeu_si256((__m256i *)(b + 8), a_2)"
  },
  {
    "label": "_mm256_storeu_si256()",
    "kind": "Method",
    "detail": "Function (# else)",
    "insertText": "_mm256_storeu_si256((__m256i *)b, a)"
  }
]