[
  {
    "label": "vp8_dec_control_id",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "vp8_dec_control_id"
  },
  {
    "label": "vpx_decrypt_init",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_decrypt_init"
  },
  {
    "label": "vpx_codec_vp8_dx()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_VP8DX_H_ # define VPX_VPX_VP8DX_H_ # ifdef __cplusplus \" C \" { # endif # include \" . / vp8 . h \" vpx_codec_iface_t vpx_codec_vp8_dx_algo ; vpx_codec_iface_t*)",
    "insertText": "vpx_codec_vp8_dx(void)"
  },
  {
    "label": "vpx_codec_vp9_dx()",
    "kind": "Method",
    "detail": "Function (vpx_codec_iface_t vpx_codec_vp9_dx_algo ; vpx_codec_iface_t*)",
    "insertText": "vpx_codec_vp9_dx(void)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (enum vp8_dec_control_id { VP8D_GET_LAST_REF_UPDATES = VP8_DECODER_CTRL_ID_START,VP8D_GET_FRAME_CORRUPTED,VP8D_GET_LAST_REF_USED,VPXD_SET_DECRYPTOR,VP8D_SET_DECRYPTOR = VPXD_SET_DECRYPTOR,VP9D_GET_FRAME_SIZE,VP9D_GET_DISPLAY_SIZE,VP9D_GET_BIT_DEPTH,VP9_SET_BYTE_ALIGNMENT,VP9_INVERT_TILE_DECODE_ORDER,VP9_SET_SKIP_LOOP_FILTER,VP9_DECODE_SVC_SPATIAL_LAYER,VPXD_GET_LAST_QUANTIZER,VP9D_SET_ROW_MT,VP9D_SET_LOOP_FILTER_OPT,VP8_DECODER_CTRL_ID_MAX } ; typedef)",
    "insertText": "void(*vpx_decrypt_cb)(void *decrypt_state, const unsigned char *input, unsigned char *output, int count)"
  }
]