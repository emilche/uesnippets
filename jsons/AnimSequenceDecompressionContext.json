[
  {
    "label": "ICompressedAnimData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ICompressedAnimData"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FAnimSequenceDecompressionContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimSequenceDecompressionContext"
  },
  {
    "label": "FAnimSequenceDecompressionContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAnimSequenceDecompressionContext(const FFrameRate& InSamplingRate, const int32 InNumberOfFrames, EAnimInterpolationType InInterpolation, const FName& InAnimName, const ICompressedAnimData& InCompressedAnimData, const TArray<FTransform>& InRefPoses, const TArray<FTrackToSkeletonMap>& InTrackToSkeletonMap, const USkeleton* InSourceSkeleton, bool bIsBakedAdditive, EAdditiveAnimationType InAdditiveType) : PRAGMA_DISABLE_DEPRECATION_WARNINGS SequenceLength(static_cast<float>(InSamplingRate.AsSeconds(InNumberOfFrames))), PRAGMA_ENABLE_DEPRECATION_WARNINGS Interpolation(InInterpolation), AnimName(InAnimName), CompressedAnimData(InCompressedAnimData), RefPoses(InRefPoses.GetData(), InRefPoses.Num()), TrackToSkeletonMap(InTrackToSkeletonMap.GetData(), InTrackToSkeletonMap.Num()), SamplingRate(InSamplingRate), SamplingTime(0), NumberOfFrames(InNumberOfFrames), SourceSkeleton(InSourceSkeleton), AdditiveType(InAdditiveType), bAdditiveAnimation(bIsBakedAdditive)"
  },
  {
    "label": "GetEvaluationTime()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "GetEvaluationTime()"
  },
  {
    "label": "GetRelativePosition()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "GetRelativePosition()"
  },
  {
    "label": "GetInterpolatedEvaluationTime()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "GetInterpolatedEvaluationTime()"
  },
  {
    "label": "FloorToFrame()",
    "kind": "Method",
    "detail": "Function (const FFrameTime InterpolationTime = Interpolation = = EAnimInterpolationType::Step ? SamplingTime .)",
    "insertText": "FloorToFrame()"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Seek(static_cast<double>(SampleAtTime))"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Seek(double SampleAtTime)"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS Time = static_cast<)",
    "insertText": "float(SampleAtTime)"
  },
  {
    "label": "AsFrameTime()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS SamplingTime = SamplingRate .)",
    "insertText": "AsFrameTime(SampleAtTime)"
  },
  {
    "label": "GetSourceSkeleton()",
    "kind": "Method",
    "detail": "Function (} const USkeleton*)",
    "insertText": "GetSourceSkeleton()"
  }
]