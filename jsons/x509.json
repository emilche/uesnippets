[
  {
    "label": "X509_algor_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "X509_algor_st"
  },
  {
    "label": "X509_val_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "X509_val_st"
  },
  {
    "label": "X509_sig_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "X509_sig_st"
  },
  {
    "label": "X509_name_entry_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "X509_name_entry_st"
  },
  {
    "label": "X509_extension_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "X509_extension_st"
  },
  {
    "label": "x509_attributes_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "x509_attributes_st"
  },
  {
    "label": "X509_req_info_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "X509_req_info_st"
  },
  {
    "label": "X509_req_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "X509_req_st"
  },
  {
    "label": "x509_cert_aux_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "x509_cert_aux_st"
  },
  {
    "label": "x509_cinf_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "x509_cinf_st"
  },
  {
    "label": "x509_trust_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "x509_trust_st"
  },
  {
    "label": "x509_trust_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "x509_trust_st"
  },
  {
    "label": "X509_crl_info_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "X509_crl_info_st"
  },
  {
    "label": "private_key_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "private_key_st"
  },
  {
    "label": "X509_info_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "X509_info_st"
  },
  {
    "label": "Netscape_spkac_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Netscape_spkac_st"
  },
  {
    "label": "Netscape_spki_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Netscape_spki_st"
  },
  {
    "label": "Netscape_certificate_sequence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Netscape_certificate_sequence"
  },
  {
    "label": "CBCParameter_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CBCParameter_st"
  },
  {
    "label": "PBEPARAM_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PBEPARAM_st"
  },
  {
    "label": "PBE2PARAM_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PBE2PARAM_st"
  },
  {
    "label": "PBKDF2PARAM_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PBKDF2PARAM_st"
  },
  {
    "label": "SCRYPT_PARAMS_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SCRYPT_PARAMS_st"
  },
  {
    "label": "X509_CRL_set_default_method()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_CRL_set_default_method(const X509_CRL_METHOD *meth)"
  },
  {
    "label": "X509_CRL_METHOD_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_CRL_METHOD_free(X509_CRL_METHOD *m)"
  },
  {
    "label": "X509_CRL_set_meth_data()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_CRL_set_meth_data(X509_CRL *crl, void *dat)"
  },
  {
    "label": "X509_verify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_verify(X509 *a, EVP_PKEY *r)"
  },
  {
    "label": "X509_REQ_verify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_verify(X509_REQ *a, EVP_PKEY *r)"
  },
  {
    "label": "X509_CRL_verify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_verify(X509_CRL *a, EVP_PKEY *r)"
  },
  {
    "label": "NETSCAPE_SPKI_verify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NETSCAPE_SPKI_verify(NETSCAPE_SPKI *a, EVP_PKEY *r)"
  },
  {
    "label": "NETSCAPE_SPKI_set_pubkey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NETSCAPE_SPKI_set_pubkey(NETSCAPE_SPKI *x, EVP_PKEY *pkey)"
  },
  {
    "label": "NETSCAPE_SPKI_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NETSCAPE_SPKI_print(BIO *out, NETSCAPE_SPKI *spki)"
  },
  {
    "label": "X509_signature_dump()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_signature_dump(BIO *bp, const ASN1_STRING *sig, int indent)"
  },
  {
    "label": "X509_signature_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_signature_print(BIO *bp, const X509_ALGOR *alg,\n                         const ASN1_STRING *sig)"
  },
  {
    "label": "X509_sign()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_sign(X509 *x, EVP_PKEY *pkey, const EVP_MD *md)"
  },
  {
    "label": "X509_sign_ctx()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_sign_ctx(X509 *x, EVP_MD_CTX *ctx)"
  },
  {
    "label": "X509_http_nbio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_http_nbio(OCSP_REQ_CTX *rctx, X509 **pcert)"
  },
  {
    "label": "X509_REQ_sign()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_sign(X509_REQ *x, EVP_PKEY *pkey, const EVP_MD *md)"
  },
  {
    "label": "X509_REQ_sign_ctx()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_sign_ctx(X509_REQ *x, EVP_MD_CTX *ctx)"
  },
  {
    "label": "X509_CRL_sign()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_sign(X509_CRL *x, EVP_PKEY *pkey, const EVP_MD *md)"
  },
  {
    "label": "X509_CRL_sign_ctx()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_sign_ctx(X509_CRL *x, EVP_MD_CTX *ctx)"
  },
  {
    "label": "X509_CRL_http_nbio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_http_nbio(OCSP_REQ_CTX *rctx, X509_CRL **pcrl)"
  },
  {
    "label": "NETSCAPE_SPKI_sign()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NETSCAPE_SPKI_sign(NETSCAPE_SPKI *x, EVP_PKEY *pkey, const EVP_MD *md)"
  },
  {
    "label": "X509_pubkey_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_pubkey_digest(const X509 *data, const EVP_MD *type,\n                       unsigned char *md, unsigned int *len)"
  },
  {
    "label": "X509_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_digest(const X509 *data, const EVP_MD *type,\n                unsigned char *md, unsigned int *len)"
  },
  {
    "label": "X509_CRL_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_digest(const X509_CRL *data, const EVP_MD *type,\n                    unsigned char *md, unsigned int *len)"
  },
  {
    "label": "X509_REQ_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_digest(const X509_REQ *data, const EVP_MD *type,\n                    unsigned char *md, unsigned int *len)"
  },
  {
    "label": "X509_NAME_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_digest(const X509_NAME *data, const EVP_MD *type,\n                     unsigned char *md, unsigned int *len)"
  },
  {
    "label": "i2d_X509_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_X509_fp(FILE *fp, X509 *x509)"
  },
  {
    "label": "i2d_X509_CRL_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_X509_CRL_fp(FILE *fp, X509_CRL *crl)"
  },
  {
    "label": "i2d_X509_REQ_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_X509_REQ_fp(FILE *fp, X509_REQ *req)"
  },
  {
    "label": "i2d_RSAPrivateKey_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_RSAPrivateKey_fp(FILE *fp, RSA *rsa)"
  },
  {
    "label": "i2d_RSAPublicKey_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_RSAPublicKey_fp(FILE *fp, RSA *rsa)"
  },
  {
    "label": "i2d_RSA_PUBKEY_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_RSA_PUBKEY_fp(FILE *fp, RSA *rsa)"
  },
  {
    "label": "i2d_DSA_PUBKEY_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_DSA_PUBKEY_fp(FILE *fp, DSA *dsa)"
  },
  {
    "label": "i2d_DSAPrivateKey_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_DSAPrivateKey_fp(FILE *fp, DSA *dsa)"
  },
  {
    "label": "i2d_EC_PUBKEY_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_EC_PUBKEY_fp(FILE *fp, EC_KEY *eckey)"
  },
  {
    "label": "i2d_ECPrivateKey_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_ECPrivateKey_fp(FILE *fp, EC_KEY *eckey)"
  },
  {
    "label": "i2d_PKCS8_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS8_fp(FILE *fp, X509_SIG *p8)"
  },
  {
    "label": "i2d_PKCS8_PRIV_KEY_INFO_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS8_PRIV_KEY_INFO_fp(FILE *fp, PKCS8_PRIV_KEY_INFO *p8inf)"
  },
  {
    "label": "i2d_PKCS8PrivateKeyInfo_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS8PrivateKeyInfo_fp(FILE *fp, EVP_PKEY *key)"
  },
  {
    "label": "i2d_PrivateKey_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PrivateKey_fp(FILE *fp, EVP_PKEY *pkey)"
  },
  {
    "label": "i2d_PUBKEY_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PUBKEY_fp(FILE *fp, EVP_PKEY *pkey)"
  },
  {
    "label": "i2d_X509_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_X509_bio(BIO *bp, X509 *x509)"
  },
  {
    "label": "i2d_X509_CRL_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_X509_CRL_bio(BIO *bp, X509_CRL *crl)"
  },
  {
    "label": "i2d_X509_REQ_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_X509_REQ_bio(BIO *bp, X509_REQ *req)"
  },
  {
    "label": "i2d_RSAPrivateKey_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_RSAPrivateKey_bio(BIO *bp, RSA *rsa)"
  },
  {
    "label": "i2d_RSAPublicKey_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_RSAPublicKey_bio(BIO *bp, RSA *rsa)"
  },
  {
    "label": "i2d_RSA_PUBKEY_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_RSA_PUBKEY_bio(BIO *bp, RSA *rsa)"
  },
  {
    "label": "i2d_DSA_PUBKEY_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_DSA_PUBKEY_bio(BIO *bp, DSA *dsa)"
  },
  {
    "label": "i2d_DSAPrivateKey_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_DSAPrivateKey_bio(BIO *bp, DSA *dsa)"
  },
  {
    "label": "i2d_EC_PUBKEY_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_EC_PUBKEY_bio(BIO *bp, EC_KEY *eckey)"
  },
  {
    "label": "i2d_ECPrivateKey_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_ECPrivateKey_bio(BIO *bp, EC_KEY *eckey)"
  },
  {
    "label": "i2d_PKCS8_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS8_bio(BIO *bp, X509_SIG *p8)"
  },
  {
    "label": "i2d_PKCS8_PRIV_KEY_INFO_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS8_PRIV_KEY_INFO_bio(BIO *bp, PKCS8_PRIV_KEY_INFO *p8inf)"
  },
  {
    "label": "i2d_PKCS8PrivateKeyInfo_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS8PrivateKeyInfo_bio(BIO *bp, EVP_PKEY *key)"
  },
  {
    "label": "i2d_PrivateKey_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PrivateKey_bio(BIO *bp, EVP_PKEY *pkey)"
  },
  {
    "label": "i2d_PUBKEY_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PUBKEY_bio(BIO *bp, EVP_PKEY *pkey)"
  },
  {
    "label": "X509_ALGOR_set0()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_ALGOR_set0(X509_ALGOR *alg, ASN1_OBJECT *aobj, int ptype,\n                    void *pval)"
  },
  {
    "label": "X509_ALGOR_get0()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_ALGOR_get0(const ASN1_OBJECT **paobj, int *pptype,\n                     const void **ppval, const X509_ALGOR *algor)"
  },
  {
    "label": "X509_ALGOR_set_md()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_ALGOR_set_md(X509_ALGOR *alg, const EVP_MD *md)"
  },
  {
    "label": "X509_ALGOR_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_ALGOR_cmp(const X509_ALGOR *a, const X509_ALGOR *b)"
  },
  {
    "label": "X509_ALGOR_copy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_ALGOR_copy(X509_ALGOR *dest, const X509_ALGOR *src)"
  },
  {
    "label": "X509_cmp_time()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_cmp_time(const ASN1_TIME *s, time_t *t)"
  },
  {
    "label": "X509_cmp_current_time()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_cmp_current_time(const ASN1_TIME *s)"
  },
  {
    "label": "X509_PUBKEY_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_PUBKEY_set(X509_PUBKEY **x, EVP_PKEY *pkey)"
  },
  {
    "label": "X509_get_pathlen()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_get_pathlen(X509 *x)"
  },
  {
    "label": "i2d_PUBKEY()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PUBKEY(EVP_PKEY *a, unsigned char **pp)"
  },
  {
    "label": "i2d_RSA_PUBKEY()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_RSA_PUBKEY(RSA *a, unsigned char **pp)"
  },
  {
    "label": "i2d_DSA_PUBKEY()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_DSA_PUBKEY(DSA *a, unsigned char **pp)"
  },
  {
    "label": "i2d_EC_PUBKEY()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_EC_PUBKEY(EC_KEY *a, unsigned char **pp)"
  },
  {
    "label": "X509_SIG_get0()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_SIG_get0(const X509_SIG *sig, const X509_ALGOR **palg,\n                   const ASN1_OCTET_STRING **pdigest)"
  },
  {
    "label": "X509_SIG_getm()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_SIG_getm(X509_SIG *sig, X509_ALGOR **palg,\n                   ASN1_OCTET_STRING **pdigest)"
  },
  {
    "label": "X509_NAME_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_set(X509_NAME **xn, X509_NAME *name)"
  },
  {
    "label": "X509_set_ex_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_set_ex_data(X509 *r, int idx, void *arg)"
  },
  {
    "label": "i2d_X509_AUX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_X509_AUX(X509 *a, unsigned char **pp)"
  },
  {
    "label": "i2d_re_X509_tbs()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_re_X509_tbs(X509 *x, unsigned char **pp)"
  },
  {
    "label": "X509_SIG_INFO_get()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_SIG_INFO_get(const X509_SIG_INFO *siginf, int *mdnid, int *pknid,\n                      int *secbits, uint32_t *flags)"
  },
  {
    "label": "X509_SIG_INFO_set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_SIG_INFO_set(X509_SIG_INFO *siginf, int mdnid, int pknid,\n                       int secbits, uint32_t flags)"
  },
  {
    "label": "X509_get_signature_info()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_get_signature_info(X509 *x, int *mdnid, int *pknid, int *secbits,\n                            uint32_t *flags)"
  },
  {
    "label": "X509_get0_signature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_get0_signature(const ASN1_BIT_STRING **psig,\n                         const X509_ALGOR **palg, const X509 *x)"
  },
  {
    "label": "X509_get_signature_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_get_signature_nid(const X509 *x)"
  },
  {
    "label": "X509_trusted()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_trusted(const X509 *x)"
  },
  {
    "label": "X509_alias_set1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_alias_set1(X509 *x, const unsigned char *name, int len)"
  },
  {
    "label": "X509_keyid_set1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_keyid_set1(X509 *x, const unsigned char *id, int len)"
  },
  {
    "label": "X509_TRUST_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_TRUST_set(int *t, int trust)"
  },
  {
    "label": "X509_add1_trust_object()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_add1_trust_object(X509 *x, const ASN1_OBJECT *obj)"
  },
  {
    "label": "X509_add1_reject_object()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_add1_reject_object(X509 *x, const ASN1_OBJECT *obj)"
  },
  {
    "label": "X509_trust_clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_trust_clear(X509 *x)"
  },
  {
    "label": "X509_reject_clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_reject_clear(X509 *x)"
  },
  {
    "label": "X509_CRL_add0_revoked()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_add0_revoked(X509_CRL *crl, X509_REVOKED *rev)"
  },
  {
    "label": "X509_CRL_get0_by_serial()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_get0_by_serial(X509_CRL *crl,\n                            X509_REVOKED **ret, ASN1_INTEGER *serial)"
  },
  {
    "label": "X509_CRL_get0_by_cert()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_get0_by_cert(X509_CRL *crl, X509_REVOKED **ret, X509 *x)"
  },
  {
    "label": "X509_PKEY_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_PKEY_free(X509_PKEY *a)"
  },
  {
    "label": "X509_INFO_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_INFO_free(X509_INFO *a)"
  },
  {
    "label": "ASN1_verify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_verify(i2d_of_void *i2d, X509_ALGOR *algor1,\n                ASN1_BIT_STRING *signature, char *data, EVP_PKEY *pkey)"
  },
  {
    "label": "ASN1_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_digest(i2d_of_void *i2d, const EVP_MD *type, char *data,\n                unsigned char *md, unsigned int *len)"
  },
  {
    "label": "ASN1_sign()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_sign(i2d_of_void *i2d, X509_ALGOR *algor1,\n              X509_ALGOR *algor2, ASN1_BIT_STRING *signature,\n              char *data, EVP_PKEY *pkey, const EVP_MD *type)"
  },
  {
    "label": "ASN1_item_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_item_digest(const ASN1_ITEM *it, const EVP_MD *type, void *data,\n                     unsigned char *md, unsigned int *len)"
  },
  {
    "label": "ASN1_item_verify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_item_verify(const ASN1_ITEM *it, X509_ALGOR *algor1,\n                     ASN1_BIT_STRING *signature, void *data, EVP_PKEY *pkey)"
  },
  {
    "label": "ASN1_item_sign()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_item_sign(const ASN1_ITEM *it, X509_ALGOR *algor1,\n                   X509_ALGOR *algor2, ASN1_BIT_STRING *signature, void *data,\n                   EVP_PKEY *pkey, const EVP_MD *type)"
  },
  {
    "label": "ASN1_item_sign_ctx()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_item_sign_ctx(const ASN1_ITEM *it, X509_ALGOR *algor1,\n                       X509_ALGOR *algor2, ASN1_BIT_STRING *signature,\n                       void *asn, EVP_MD_CTX *ctx)"
  },
  {
    "label": "X509_get_version()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_get_version(const X509 *x)"
  },
  {
    "label": "X509_set_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_set_version(X509 *x, long version)"
  },
  {
    "label": "X509_set_serialNumber()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_set_serialNumber(X509 *x, ASN1_INTEGER *serial)"
  },
  {
    "label": "X509_set_issuer_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_set_issuer_name(X509 *x, X509_NAME *name)"
  },
  {
    "label": "X509_set_subject_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_set_subject_name(X509 *x, X509_NAME *name)"
  },
  {
    "label": "X509_set1_notBefore()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_set1_notBefore(X509 *x, const ASN1_TIME *tm)"
  },
  {
    "label": "X509_set1_notAfter()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_set1_notAfter(X509 *x, const ASN1_TIME *tm)"
  },
  {
    "label": "X509_set_pubkey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_set_pubkey(X509 *x, EVP_PKEY *pkey)"
  },
  {
    "label": "X509_up_ref()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_up_ref(X509 *x)"
  },
  {
    "label": "X509_get_signature_type()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_get_signature_type(const X509 *x)"
  },
  {
    "label": "X509_get0_uids()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_get0_uids(const X509 *x, const ASN1_BIT_STRING **piuid,\n                    const ASN1_BIT_STRING **psuid)"
  },
  {
    "label": "X509_certificate_type()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_certificate_type(const X509 *x, const EVP_PKEY *pubkey)"
  },
  {
    "label": "X509_REQ_get_version()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_REQ_get_version(const X509_REQ *req)"
  },
  {
    "label": "X509_REQ_set_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_set_version(X509_REQ *x, long version)"
  },
  {
    "label": "X509_REQ_set_subject_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_set_subject_name(X509_REQ *req, X509_NAME *name)"
  },
  {
    "label": "X509_REQ_get0_signature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_REQ_get0_signature(const X509_REQ *req, const ASN1_BIT_STRING **psig,\n                             const X509_ALGOR **palg)"
  },
  {
    "label": "X509_REQ_set0_signature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_REQ_set0_signature(X509_REQ *req, ASN1_BIT_STRING *psig)"
  },
  {
    "label": "X509_REQ_set1_signature_algo()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_set1_signature_algo(X509_REQ *req, X509_ALGOR *palg)"
  },
  {
    "label": "X509_REQ_get_signature_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_get_signature_nid(const X509_REQ *req)"
  },
  {
    "label": "i2d_re_X509_REQ_tbs()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_re_X509_REQ_tbs(X509_REQ *req, unsigned char **pp)"
  },
  {
    "label": "X509_REQ_set_pubkey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_set_pubkey(X509_REQ *x, EVP_PKEY *pkey)"
  },
  {
    "label": "X509_REQ_extension_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_extension_nid(int nid)"
  },
  {
    "label": "X509_REQ_set_extension_nids()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_REQ_set_extension_nids(int *nids)"
  },
  {
    "label": "X509_REQ_get_attr_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_get_attr_count(const X509_REQ *req)"
  },
  {
    "label": "X509_REQ_get_attr_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_get_attr_by_NID(const X509_REQ *req, int nid, int lastpos)"
  },
  {
    "label": "X509_REQ_get_attr_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_get_attr_by_OBJ(const X509_REQ *req, const ASN1_OBJECT *obj,\n                             int lastpos)"
  },
  {
    "label": "X509_REQ_add1_attr()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_add1_attr(X509_REQ *req, X509_ATTRIBUTE *attr)"
  },
  {
    "label": "X509_REQ_add1_attr_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_add1_attr_by_OBJ(X509_REQ *req,\n                              const ASN1_OBJECT *obj, int type,\n                              const unsigned char *bytes, int len)"
  },
  {
    "label": "X509_REQ_add1_attr_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_add1_attr_by_NID(X509_REQ *req,\n                              int nid, int type,\n                              const unsigned char *bytes, int len)"
  },
  {
    "label": "X509_REQ_add1_attr_by_txt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_add1_attr_by_txt(X509_REQ *req,\n                              const char *attrname, int type,\n                              const unsigned char *bytes, int len)"
  },
  {
    "label": "X509_CRL_set_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_set_version(X509_CRL *x, long version)"
  },
  {
    "label": "X509_CRL_set_issuer_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_set_issuer_name(X509_CRL *x, X509_NAME *name)"
  },
  {
    "label": "X509_CRL_set1_lastUpdate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_set1_lastUpdate(X509_CRL *x, const ASN1_TIME *tm)"
  },
  {
    "label": "X509_CRL_set1_nextUpdate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_set1_nextUpdate(X509_CRL *x, const ASN1_TIME *tm)"
  },
  {
    "label": "X509_CRL_sort()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_sort(X509_CRL *crl)"
  },
  {
    "label": "X509_CRL_up_ref()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_up_ref(X509_CRL *crl)"
  },
  {
    "label": "X509_CRL_get_version()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_CRL_get_version(const X509_CRL *crl)"
  },
  {
    "label": "X509_CRL_get0_signature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_CRL_get0_signature(const X509_CRL *crl, const ASN1_BIT_STRING **psig,\n                             const X509_ALGOR **palg)"
  },
  {
    "label": "X509_CRL_get_signature_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_get_signature_nid(const X509_CRL *crl)"
  },
  {
    "label": "i2d_re_X509_CRL_tbs()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_re_X509_CRL_tbs(X509_CRL *req, unsigned char **pp)"
  },
  {
    "label": "X509_REVOKED_set_serialNumber()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REVOKED_set_serialNumber(X509_REVOKED *x, ASN1_INTEGER *serial)"
  },
  {
    "label": "X509_REVOKED_set_revocationDate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REVOKED_set_revocationDate(X509_REVOKED *r, ASN1_TIME *tm)"
  },
  {
    "label": "X509_REQ_check_private_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_check_private_key(X509_REQ *x509, EVP_PKEY *pkey)"
  },
  {
    "label": "X509_check_private_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_check_private_key(const X509 *x509, const EVP_PKEY *pkey)"
  },
  {
    "label": "X509_CRL_check_suiteb()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_check_suiteb(X509_CRL *crl, EVP_PKEY *pk, unsigned long flags)"
  },
  {
    "label": "X509_issuer_and_serial_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_issuer_and_serial_cmp(const X509 *a, const X509 *b)"
  },
  {
    "label": "X509_issuer_and_serial_hash()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_issuer_and_serial_hash(X509 *a)"
  },
  {
    "label": "X509_issuer_name_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_issuer_name_cmp(const X509 *a, const X509 *b)"
  },
  {
    "label": "X509_issuer_name_hash()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_issuer_name_hash(X509 *a)"
  },
  {
    "label": "X509_subject_name_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_subject_name_cmp(const X509 *a, const X509 *b)"
  },
  {
    "label": "X509_subject_name_hash()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_subject_name_hash(X509 *x)"
  },
  {
    "label": "X509_issuer_name_hash_old()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_issuer_name_hash_old(X509 *a)"
  },
  {
    "label": "X509_subject_name_hash_old()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_subject_name_hash_old(X509 *x)"
  },
  {
    "label": "X509_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_cmp(const X509 *a, const X509 *b)"
  },
  {
    "label": "X509_NAME_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_cmp(const X509_NAME *a, const X509_NAME *b)"
  },
  {
    "label": "X509_NAME_hash()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_NAME_hash(X509_NAME *x)"
  },
  {
    "label": "X509_NAME_hash_old()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "X509_NAME_hash_old(X509_NAME *x)"
  },
  {
    "label": "X509_CRL_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_cmp(const X509_CRL *a, const X509_CRL *b)"
  },
  {
    "label": "X509_CRL_match()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_match(const X509_CRL *a, const X509_CRL *b)"
  },
  {
    "label": "X509_aux_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_aux_print(BIO *out, X509 *x, int indent)"
  },
  {
    "label": "X509_print_ex_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_print_ex_fp(FILE *bp, X509 *x, unsigned long nmflag,\n                     unsigned long cflag)"
  },
  {
    "label": "X509_print_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_print_fp(FILE *bp, X509 *x)"
  },
  {
    "label": "X509_CRL_print_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_print_fp(FILE *bp, X509_CRL *x)"
  },
  {
    "label": "X509_REQ_print_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_print_fp(FILE *bp, X509_REQ *req)"
  },
  {
    "label": "X509_NAME_print_ex_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_print_ex_fp(FILE *fp, const X509_NAME *nm, int indent,\n                          unsigned long flags)"
  },
  {
    "label": "X509_NAME_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_print(BIO *bp, const X509_NAME *name, int obase)"
  },
  {
    "label": "X509_NAME_print_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_print_ex(BIO *out, const X509_NAME *nm, int indent,\n                       unsigned long flags)"
  },
  {
    "label": "X509_print_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_print_ex(BIO *bp, X509 *x, unsigned long nmflag,\n                  unsigned long cflag)"
  },
  {
    "label": "X509_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_print(BIO *bp, X509 *x)"
  },
  {
    "label": "X509_ocspid_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_ocspid_print(BIO *bp, X509 *x)"
  },
  {
    "label": "X509_CRL_print_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_print_ex(BIO *out, X509_CRL *x, unsigned long nmflag)"
  },
  {
    "label": "X509_CRL_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_print(BIO *bp, X509_CRL *x)"
  },
  {
    "label": "X509_REQ_print_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_print_ex(BIO *bp, X509_REQ *x, unsigned long nmflag,\n                      unsigned long cflag)"
  },
  {
    "label": "X509_REQ_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REQ_print(BIO *bp, X509_REQ *req)"
  },
  {
    "label": "X509_NAME_entry_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_entry_count(const X509_NAME *name)"
  },
  {
    "label": "X509_NAME_get_text_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_get_text_by_NID(X509_NAME *name, int nid, char *buf, int len)"
  },
  {
    "label": "X509_NAME_get_text_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_get_text_by_OBJ(X509_NAME *name, const ASN1_OBJECT *obj,\n                              char *buf, int len)"
  },
  {
    "label": "X509_NAME_get_index_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_get_index_by_NID(X509_NAME *name, int nid, int lastpos)"
  },
  {
    "label": "X509_NAME_get_index_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_get_index_by_OBJ(X509_NAME *name, const ASN1_OBJECT *obj,\n                               int lastpos)"
  },
  {
    "label": "X509_NAME_add_entry()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_add_entry(X509_NAME *name, const X509_NAME_ENTRY *ne,\n                        int loc, int set)"
  },
  {
    "label": "X509_NAME_add_entry_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_add_entry_by_OBJ(X509_NAME *name, const ASN1_OBJECT *obj, int type,\n                               const unsigned char *bytes, int len, int loc,\n                               int set)"
  },
  {
    "label": "X509_NAME_add_entry_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_add_entry_by_NID(X509_NAME *name, int nid, int type,\n                               const unsigned char *bytes, int len, int loc,\n                               int set)"
  },
  {
    "label": "X509_NAME_add_entry_by_txt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_add_entry_by_txt(X509_NAME *name, const char *field, int type,\n                               const unsigned char *bytes, int len, int loc,\n                               int set)"
  },
  {
    "label": "X509_NAME_ENTRY_set_object()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_ENTRY_set_object(X509_NAME_ENTRY *ne, const ASN1_OBJECT *obj)"
  },
  {
    "label": "X509_NAME_ENTRY_set_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_ENTRY_set_data(X509_NAME_ENTRY *ne, int type,\n                             const unsigned char *bytes, int len)"
  },
  {
    "label": "X509_NAME_ENTRY_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_ENTRY_set(const X509_NAME_ENTRY *ne)"
  },
  {
    "label": "X509_NAME_get0_der()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_NAME_get0_der(X509_NAME *nm, const unsigned char **pder,\n                       size_t *pderlen)"
  },
  {
    "label": "X509_get_ext_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_get_ext_count(const X509 *x)"
  },
  {
    "label": "X509_get_ext_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_get_ext_by_NID(const X509 *x, int nid, int lastpos)"
  },
  {
    "label": "X509_get_ext_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_get_ext_by_OBJ(const X509 *x, const ASN1_OBJECT *obj, int lastpos)"
  },
  {
    "label": "X509_get_ext_by_critical()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_get_ext_by_critical(const X509 *x, int crit, int lastpos)"
  },
  {
    "label": "X509_add_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_add_ext(X509 *x, X509_EXTENSION *ex, int loc)"
  },
  {
    "label": "X509_add1_ext_i2d()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_add1_ext_i2d(X509 *x, int nid, void *value, int crit,\n                      unsigned long flags)"
  },
  {
    "label": "X509_CRL_get_ext_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_get_ext_count(const X509_CRL *x)"
  },
  {
    "label": "X509_CRL_get_ext_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_get_ext_by_NID(const X509_CRL *x, int nid, int lastpos)"
  },
  {
    "label": "X509_CRL_get_ext_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_get_ext_by_OBJ(const X509_CRL *x, const ASN1_OBJECT *obj,\n                            int lastpos)"
  },
  {
    "label": "X509_CRL_get_ext_by_critical()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_get_ext_by_critical(const X509_CRL *x, int crit, int lastpos)"
  },
  {
    "label": "X509_CRL_add_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_add_ext(X509_CRL *x, X509_EXTENSION *ex, int loc)"
  },
  {
    "label": "X509_CRL_add1_ext_i2d()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_CRL_add1_ext_i2d(X509_CRL *x, int nid, void *value, int crit,\n                          unsigned long flags)"
  },
  {
    "label": "X509_REVOKED_get_ext_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REVOKED_get_ext_count(const X509_REVOKED *x)"
  },
  {
    "label": "X509_REVOKED_get_ext_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REVOKED_get_ext_by_NID(const X509_REVOKED *x, int nid, int lastpos)"
  },
  {
    "label": "X509_REVOKED_get_ext_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REVOKED_get_ext_by_OBJ(const X509_REVOKED *x, const ASN1_OBJECT *obj,\n                                int lastpos)"
  },
  {
    "label": "X509_REVOKED_get_ext_by_critical()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REVOKED_get_ext_by_critical(const X509_REVOKED *x, int crit,\n                                     int lastpos)"
  },
  {
    "label": "X509_REVOKED_add_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REVOKED_add_ext(X509_REVOKED *x, X509_EXTENSION *ex, int loc)"
  },
  {
    "label": "X509_REVOKED_add1_ext_i2d()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_REVOKED_add1_ext_i2d(X509_REVOKED *x, int nid, void *value, int crit,\n                              unsigned long flags)"
  },
  {
    "label": "X509_EXTENSION_set_object()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_EXTENSION_set_object(X509_EXTENSION *ex, const ASN1_OBJECT *obj)"
  },
  {
    "label": "X509_EXTENSION_set_critical()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_EXTENSION_set_critical(X509_EXTENSION *ex, int crit)"
  },
  {
    "label": "X509_EXTENSION_set_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_EXTENSION_set_data(X509_EXTENSION *ex, ASN1_OCTET_STRING *data)"
  },
  {
    "label": "X509_EXTENSION_get_critical()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_EXTENSION_get_critical(const X509_EXTENSION *ex)"
  },
  {
    "label": "X509_ATTRIBUTE_set1_object()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_ATTRIBUTE_set1_object(X509_ATTRIBUTE *attr, const ASN1_OBJECT *obj)"
  },
  {
    "label": "X509_ATTRIBUTE_set1_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_ATTRIBUTE_set1_data(X509_ATTRIBUTE *attr, int attrtype,\n                             const void *data, int len)"
  },
  {
    "label": "X509_ATTRIBUTE_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_ATTRIBUTE_count(const X509_ATTRIBUTE *attr)"
  },
  {
    "label": "EVP_PKEY_get_attr_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "EVP_PKEY_get_attr_count(const EVP_PKEY *key)"
  },
  {
    "label": "EVP_PKEY_get_attr_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "EVP_PKEY_get_attr_by_NID(const EVP_PKEY *key, int nid, int lastpos)"
  },
  {
    "label": "EVP_PKEY_get_attr_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "EVP_PKEY_get_attr_by_OBJ(const EVP_PKEY *key, const ASN1_OBJECT *obj,\n                             int lastpos)"
  },
  {
    "label": "EVP_PKEY_add1_attr()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "EVP_PKEY_add1_attr(EVP_PKEY *key, X509_ATTRIBUTE *attr)"
  },
  {
    "label": "EVP_PKEY_add1_attr_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "EVP_PKEY_add1_attr_by_OBJ(EVP_PKEY *key,\n                              const ASN1_OBJECT *obj, int type,\n                              const unsigned char *bytes, int len)"
  },
  {
    "label": "EVP_PKEY_add1_attr_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "EVP_PKEY_add1_attr_by_NID(EVP_PKEY *key,\n                              int nid, int type,\n                              const unsigned char *bytes, int len)"
  },
  {
    "label": "EVP_PKEY_add1_attr_by_txt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "EVP_PKEY_add1_attr_by_txt(EVP_PKEY *key,\n                              const char *attrname, int type,\n                              const unsigned char *bytes, int len)"
  },
  {
    "label": "X509_verify_cert()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_verify_cert(X509_STORE_CTX *ctx)"
  },
  {
    "label": "PKCS5_pbe_set0_algor()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS5_pbe_set0_algor(X509_ALGOR *algor, int alg, int iter,\n                         const unsigned char *salt, int saltlen)"
  },
  {
    "label": "PKCS8_pkey_set0()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS8_pkey_set0(PKCS8_PRIV_KEY_INFO *priv, ASN1_OBJECT *aobj,\n                    int version, int ptype, void *pval,\n                    unsigned char *penc, int penclen)"
  },
  {
    "label": "PKCS8_pkey_get0()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS8_pkey_get0(const ASN1_OBJECT **ppkalg,\n                    const unsigned char **pk, int *ppklen,\n                    const X509_ALGOR **pa, const PKCS8_PRIV_KEY_INFO *p8)"
  },
  {
    "label": "PKCS8_pkey_add1_attr_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS8_pkey_add1_attr_by_NID(PKCS8_PRIV_KEY_INFO *p8, int nid, int type,\n                                const unsigned char *bytes, int len)"
  },
  {
    "label": "X509_PUBKEY_set0_param()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_PUBKEY_set0_param(X509_PUBKEY *pub, ASN1_OBJECT *aobj,\n                           int ptype, void *pval,\n                           unsigned char *penc, int penclen)"
  },
  {
    "label": "X509_PUBKEY_get0_param()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_PUBKEY_get0_param(ASN1_OBJECT **ppkalg,\n                           const unsigned char **pk, int *ppklen,\n                           X509_ALGOR **pa, X509_PUBKEY *pub)"
  },
  {
    "label": "X509_check_trust()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_check_trust(X509 *x, int id, int flags)"
  },
  {
    "label": "X509_TRUST_get_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_TRUST_get_count(void)"
  },
  {
    "label": "X509_TRUST_get_by_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_TRUST_get_by_id(int id)"
  },
  {
    "label": "X509_TRUST_cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "X509_TRUST_cleanup(void)"
  },
  {
    "label": "X509_TRUST_get_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_TRUST_get_flags(const X509_TRUST *xp)"
  },
  {
    "label": "X509_TRUST_get_trust()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "X509_TRUST_get_trust(const X509_TRUST *xp)"
  }
]