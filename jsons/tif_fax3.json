[
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef _FAX3_ # define _FAX3_ # include \" tiff . h \" typedef)",
    "insertText": "void(*TIFFFaxFillFunc)(unsigned char*, uint32*, uint32*, uint32)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus)"
  },
  {
    "label": "_TIFFFax3fillruns()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "_TIFFFax3fillruns(unsigned char*, uint32*, uint32*, uint32)"
  },
  {
    "label": "EndOfData()",
    "kind": "Method",
    "detail": "Function (unsigned char State ; unsigned char Width ; uint32 Param ; } TIFFFaxTabEnt ; const TIFFFaxTabEnt TIFFFaxMainTable [ ] ; const TIFFFaxTabEnt TIFFFaxWhiteTable [ ] ; const TIFFFaxTabEnt TIFFFaxBlackTable [ ] ; # ifndef EndOfData # define)",
    "insertText": "EndOfData() (cp >= ep) #endif #ifndef NeedBits8 #define NeedBits8(n,eoflab)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(BitsAvail < (n))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(EndOfData())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(BitsAvail == 0)"
  },
  {
    "label": "BitsAvail()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "BitsAvail(n)"
  },
  {
    "label": "BitAcc()",
    "kind": "Method",
    "detail": "Function (\\ } else { \\)",
    "insertText": "BitAcc((uint32) bitmap[*cp++])"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ BitsAvail + = 8 ; \\ } \\ } \\ })",
    "insertText": "while(0) #endif #ifndef NeedBits16 #define NeedBits16(n,eoflab)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if((BitsAvail += 8) < (n))"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ BitsAvail + = 8 ; \\ } \\ } \\ } \\ } \\ })",
    "insertText": "while(0) #endif #define GetBits(n) (BitAcc & ((1<<(n))-1)) #define ClrBits(n)"
  },
  {
    "label": "BitAcc()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "BitAcc(n)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0)"
  },
  {
    "label": "putchar()",
    "kind": "Method",
    "detail": "Function (\" Null \",\" Pass \",\" Horiz \",\" V0 \",\" VR \",\" VL \",\" Ext \",\" TermW \",\" TermB \",\" MakeUpW \",\" MakeUpB \",\" MakeUp \",\" EOL \",} ; # define DEBUG_SHOW)",
    "insertText": "putchar(BitAcc & (1 << t) ? '1' : '0') #define LOOKUP8(wid,tab,eoflab)"
  },
  {
    "label": "NeedBits8()",
    "kind": "Method",
    "detail": "Function (\\ int t ; \\)",
    "insertText": "NeedBits8(wid,eoflab)"
  },
  {
    "label": "GetBits()",
    "kind": "Method",
    "detail": "Function (\\ TabEnt = tab +)",
    "insertText": "GetBits(wid)"
  },
  {
    "label": "printf()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "printf(\"%08lX/%d: %s%5d\\t\", (long) BitAcc, BitsAvail, \\ StateNames[TabEnt->State], TabEnt->Param)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "for(t = 0; t < TabEnt->Width; t++)"
  },
  {
    "label": "putchar()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "putchar('\\n')"
  },
  {
    "label": "fflush()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "fflush(stdout)"
  },
  {
    "label": "ClrBits()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "ClrBits(TabEnt->Width)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define LOOKUP16(wid,tab,eoflab)"
  },
  {
    "label": "NeedBits16()",
    "kind": "Method",
    "detail": "Function (\\ int t ; \\)",
    "insertText": "NeedBits16(wid,eoflab)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define SETVALUE(x)"
  },
  {
    "label": "RunLength()",
    "kind": "Method",
    "detail": "Function (\\* pa + + =)",
    "insertText": "RunLength(x)"
  },
  {
    "label": "printf()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "printf(\"SETVALUE: %d\\t%d\\n\", RunLength + (x), a0)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ a0 + = x ; \\ RunLength = 0 ; \\ })",
    "insertText": "while(0) #else #define LOOKUP8(wid,tab,eoflab)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(pa >= thisrun + sp->nruns)"
  },
  {
    "label": "TIFFErrorExt()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "TIFFErrorExt(tif->tif_clientdata, module, \"Buffer overflow at line %u of %s %u\", \\ sp->line, isTiled(tif) ? \"tile\" : \"strip\", isTiled(tif) ? tif->tif_curtile : tif->tif_curstrip)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "return(-1)"
  },
  {
    "label": "a0()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "a0(x)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ RunLength = 0 ; \\ })",
    "insertText": "while(0) #endif #define SYNC_EOL(eoflab)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(EOLcnt == 0)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "for(;;)"
  },
  {
    "label": "NeedBits16()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "NeedBits16(11,eoflab)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(GetBits(11) == 0)"
  },
  {
    "label": "ClrBits()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "ClrBits(1)"
  },
  {
    "label": "NeedBits8()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "NeedBits8(8,eoflab)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(GetBits(8))"
  },
  {
    "label": "ClrBits()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "ClrBits(8)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\)",
    "insertText": "while(GetBits(1) == 0) \\ ClrBits(1)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ EOLcnt = 0 ; \\ })",
    "insertText": "while(0) #define CLEANUP_RUNS()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(RunLength) \\ SETVALUE(0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(a0 != lastx)"
  },
  {
    "label": "badlength()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "badlength(a0, lastx)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "while(a0 > lastx && pa > thisrun)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(a0 < lastx)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(a0 < 0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if((pa-thisrun)&1) \\ SETVALUE(0)"
  },
  {
    "label": "SETVALUE()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "SETVALUE(lastx - a0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } else)",
    "insertText": "if(a0 > lastx)"
  },
  {
    "label": "SETVALUE()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "SETVALUE(lastx)"
  },
  {
    "label": "SETVALUE()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "SETVALUE(0)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ })",
    "insertText": "while(0) #define EXPAND1D(eoflab)"
  },
  {
    "label": "LOOKUP16()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "LOOKUP16(12, TIFFFaxWhiteTable, eof1d)"
  },
  {
    "label": "switch()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "switch(TabEnt->State)"
  },
  {
    "label": "SETVALUE()",
    "kind": "Method",
    "detail": "Function (\\ case S_EOL : \\ EOLcnt = 1 ; \\ goto done1d ; \\ case S_TermW : \\)",
    "insertText": "SETVALUE(TabEnt->Param)"
  },
  {
    "label": "unexpected()",
    "kind": "Method",
    "detail": "Function (\\ goto doneWhite1d ; \\ case S_MakeUpW : \\ case S_MakeUp : \\ a0 + = TabEnt -> Param ; \\ RunLength + = TabEnt -> Param ; \\ break ; \\ default : \\)",
    "insertText": "unexpected(\"WhiteTable\", a0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ goto done1d ; \\ } \\ } \\ doneWhite1d : \\)",
    "insertText": "if(a0 >= lastx)"
  },
  {
    "label": "LOOKUP16()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "LOOKUP16(13, TIFFFaxBlackTable, eof1d)"
  },
  {
    "label": "unexpected()",
    "kind": "Method",
    "detail": "Function (\\ goto doneBlack1d ; \\ case S_MakeUpB : \\ case S_MakeUp : \\ a0 + = TabEnt -> Param ; \\ RunLength + = TabEnt -> Param ; \\ break ; \\ default : \\)",
    "insertText": "unexpected(\"BlackTable\", a0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(*(pa-1) == 0 && *(pa-2) == 0)"
  },
  {
    "label": "prematureEOF()",
    "kind": "Method",
    "detail": "Function (\\ } \\ eof1d : \\)",
    "insertText": "prematureEOF(a0)"
  },
  {
    "label": "CLEANUP_RUNS()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "CLEANUP_RUNS()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(pa != thisrun) while (b1 <= a0 && b1 < lastx)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(pb + 1 >= sp->refruns + sp->nruns)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\ b1 + = pb [ 0 ] + pb [ 1 ] ; \\ pb + = 2 ; \\ } \\ })",
    "insertText": "while(0) #define EXPAND2D(eoflab)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "while(a0 < lastx)"
  },
  {
    "label": "LOOKUP8()",
    "kind": "Method",
    "detail": "Function (\\ } \\)",
    "insertText": "LOOKUP8(7, TIFFFaxMainTable, eof2d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } \\ b1 + =* pb + + ; \\ RunLength + = b1 - a0 ; \\ a0 = b1 ; \\ b1 + =* pb + + ; \\ break ; \\ case S_Horiz : \\)",
    "insertText": "if((pa-thisrun)&1)"
  },
  {
    "label": "LOOKUP16()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "LOOKUP16(13, TIFFFaxBlackTable, eof2d)"
  },
  {
    "label": "LOOKUP16()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "LOOKUP16(12, TIFFFaxWhiteTable, eof2d)"
  },
  {
    "label": "SETVALUE()",
    "kind": "Method",
    "detail": "Function (\\ goto doneBlack2db ; \\ case S_MakeUpB : \\ case S_MakeUp : \\ a0 + = TabEnt -> Param ; \\ RunLength + = TabEnt -> Param ; \\ break ; \\ default : \\ goto badBlack2d ; \\ } \\ } \\ doneBlack2db : ; \\ } \\ CHECK_b1 ; \\ break ; \\ case S_V0 : \\ CHECK_b1 ; \\)",
    "insertText": "SETVALUE(b1 - a0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(pb >= sp->refruns + sp->nruns)"
  },
  {
    "label": "SETVALUE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ b1 + =* pb + + ; \\ break ; \\ case S_VR : \\ CHECK_b1 ; \\)",
    "insertText": "SETVALUE(b1 - a0 + TabEnt->Param)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } \\ b1 + =* pb + + ; \\ break ; \\ case S_VL : \\ CHECK_b1 ; \\)",
    "insertText": "if(b1 < (int) (a0 + TabEnt->Param))"
  },
  {
    "label": "unexpected()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "unexpected(\"VL\", a0)"
  },
  {
    "label": "SETVALUE()",
    "kind": "Method",
    "detail": "Function (\\ goto eol2d ; \\ } \\)",
    "insertText": "SETVALUE(b1 - a0 - TabEnt->Param)"
  },
  {
    "label": "extension()",
    "kind": "Method",
    "detail": "Function (\\ b1 - =* - - pb ; \\ break ; \\ case S_Ext : \\* pa + + = lastx - a0 ; \\)",
    "insertText": "extension(a0)"
  },
  {
    "label": "NeedBits8()",
    "kind": "Method",
    "detail": "Function (\\ goto eol2d ; \\ case S_EOL : \\* pa + + = lastx - a0 ; \\)",
    "insertText": "NeedBits8(4,eof2d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(GetBits(4)) \\ unexpected(\"EOL\", a0)"
  },
  {
    "label": "ClrBits()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "ClrBits(4)"
  },
  {
    "label": "unexpected()",
    "kind": "Method",
    "detail": "Function (\\ EOLcnt = 1 ; \\ goto eol2d ; \\ default : \\ badMain2d : \\)",
    "insertText": "unexpected(\"MainTable\", a0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ goto eoflab ; \\ } \\ } \\)",
    "insertText": "if(RunLength)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(RunLength + a0 < lastx)"
  },
  {
    "label": "NeedBits8()",
    "kind": "Method",
    "detail": "Function (\\ \\)",
    "insertText": "NeedBits8(1,eof2d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(!GetBits(1))"
  }
]