[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "TimestampAligner()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_TIMESTAMP_ALIGNER_H_ # define RTC_BASE_TIMESTAMP_ALIGNER_H_ # include<stdint . h> # include \" rtc_base / system / rtc_export . h \" namespace rtc { class RTC_EXPORT TimestampAligner { public :)",
    "insertText": "TimestampAligner()"
  },
  {
    "label": "TimestampAligner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TimestampAligner(const TimestampAligner&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TimestampAligner&)",
    "insertText": "operator(const TimestampAligner&)"
  },
  {
    "label": "TranslateTimestamp()",
    "kind": "Method",
    "detail": "Function (public : int64_t)",
    "insertText": "TranslateTimestamp(int64_t capturer_time_us, int64_t system_time_us)"
  },
  {
    "label": "TranslateTimestamp()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "TranslateTimestamp(int64_t capturer_time_us)"
  },
  {
    "label": "UpdateOffset()",
    "kind": "Method",
    "detail": "Function (protected : int64_t)",
    "insertText": "UpdateOffset(int64_t capturer_time_us, int64_t system_time_us)"
  },
  {
    "label": "ClipTimestamp()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "ClipTimestamp(int64_t filtered_time_us, int64_t system_time_us)"
  }
]