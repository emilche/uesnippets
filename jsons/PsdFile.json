[
  {
    "label": "PsdColorMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PsdColorMode"
  },
  {
    "label": "PsdHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PsdHeader"
  },
  {
    "label": "isValid()",
    "kind": "Method",
    "detail": "Function (# ifndef NV_IMAGE_PSDFILE_H # define NV_IMAGE_PSDFILE_H # include<nvcore / Stream . h> namespace nv { enum PsdColorMode { PsdColorMode_Bitmap = 0,PsdColorMode_GrayScale = 1,PsdColorMode_Indexed = 2,PsdColorMode_RGB = 3,PsdColorMode_CMYK = 4,PsdColorMode_MultiChannel = 7,PsdColorMode_DuoTone = 8,PsdColorMode_LabColor = 9 } ; struct PsdHeader { uint32 signature ; uint16 version ; uint8 reserved [ 6 ] ; uint16 channel_count ; uint32 height ; uint32 width ; uint16 depth ; uint16 color_mode ; bool)",
    "insertText": "isValid()"
  },
  {
    "label": "nvDebug()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvDebug(\"*** bad version number %u\\n\", version)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (s<<head . signature<<head . version ;)",
    "insertText": "for(int i = 0; i < 6; i++)"
  }
]