[
  {
    "label": "FBlueprintDebugData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintDebugData"
  },
  {
    "label": "FAnimBlueprintDebugData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimBlueprintDebugData"
  },
  {
    "label": "ANIMGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMGRAPH_API"
  },
  {
    "label": "GetBakedStateMachines()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Animation / AnimStateMachineTypes . h \" # include \" Animation / AnimClassInterface . h \" # include \" Animation / AnimTypes . h \" # include \" Animation / AnimNodeBase . h \" # include \" PropertyAccess . h \" struct FBlueprintDebugData ; struct FAnimBlueprintDebugData ; class IAnimBlueprintGeneratedClassCompiledData { public : TArray<FBakedAnimationStateMachine>&)",
    "insertText": "GetBakedStateMachines()"
  },
  {
    "label": "GetOrderedSavedPoseIndicesMap()",
    "kind": "Method",
    "detail": "Function (TMap<FName,FCachedPoseIndices>&)",
    "insertText": "GetOrderedSavedPoseIndicesMap()"
  },
  {
    "label": "GetBlueprintDebugData()",
    "kind": "Method",
    "detail": "Function (FBlueprintDebugData&)",
    "insertText": "GetBlueprintDebugData()"
  },
  {
    "label": "GetAnimNotifies()",
    "kind": "Method",
    "detail": "Function (TArray<FAnimNotifyEvent>&)",
    "insertText": "GetAnimNotifies()"
  },
  {
    "label": "FindOrAddNotify()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddNotify(FAnimNotifyEvent& Notify)"
  },
  {
    "label": "GetAnimBlueprintDebugData()",
    "kind": "Method",
    "detail": "Function (FPropertyAccessLibrary Dummy ; return Dummy ; } FAnimBlueprintDebugData&)",
    "insertText": "GetAnimBlueprintDebugData()"
  },
  {
    "label": "GetGraphAssetPlayerInformation()",
    "kind": "Method",
    "detail": "Function (TMap<FName,FGraphAssetPlayerInformation>&)",
    "insertText": "GetGraphAssetPlayerInformation()"
  },
  {
    "label": "AddBlendSpace()",
    "kind": "Method",
    "detail": "Function (UBlendSpace*)",
    "insertText": "AddBlendSpace(UBlendSpace* InSourceBlendSpace)"
  }
]