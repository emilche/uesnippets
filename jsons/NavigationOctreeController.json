[
  {
    "label": "FNavigationDirtyElementKeyFunctions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationDirtyElementKeyFunctions"
  },
  {
    "label": "FNavigationOctreeController",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationOctreeController"
  },
  {
    "label": "EOctreeUpdateMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EOctreeUpdateMode"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key)"
  },
  {
    "label": "SetNavigationOctreeLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNavigationOctreeLock(bool bLock)"
  },
  {
    "label": "RemoveNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNode(FOctreeElementId2 ElementId, FNavigationElementHandle GetHandle)"
  },
  {
    "label": "RemoveObjectsNavOctreeId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObjectsNavOctreeId(const UObject& Object)"
  },
  {
    "label": "SetNavigableGeometryStoringMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNavigableGeometryStoringMode(FNavigationOctree::ENavGeometryStoringMode NavGeometryMode)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetNavOctreeElementData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetNavOctreeElementData(FNavigationElementHandle Element, ENavigationDirtyFlag& DirtyFlags, FBox& DirtyBounds)"
  },
  {
    "label": "GetNavOctreeElementData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetNavOctreeElementData(const UObject& NodeOwner, int32& DirtyFlags, FBox& DirtyBounds)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChild(FNavigationElementHandle Parent, const TSharedRef<const FNavigationElement>& Child)"
  },
  {
    "label": "RemoveChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChild(FNavigationElementHandle Parent, const TSharedRef<const FNavigationElement>& Child)"
  },
  {
    "label": "HashObject()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "HashObject(const UObject& Object)"
  }
]