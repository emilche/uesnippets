[
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FPhysicsAssetEditorTreeInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsAssetEditorTreeInfo"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SPhysicsAssetEditorPreviewViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPhysicsAssetEditorPreviewViewport"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "SPhysicsAssetGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPhysicsAssetGraph"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "ISkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTree"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "FPhysicsAssetEditorSkeletonTreeBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsAssetEditorSkeletonTreeBuilder"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "FUICommandList_Pinnable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList_Pinnable"
  },
  {
    "label": "EPhysicsAssetEditorConstraintType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPhysicsAssetEditorConstraintType"
  },
  {
    "label": "FPhysicsAssetEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsAssetEditor"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "EPhatHierarchyFilterMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPhatHierarchyFilterMode"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "InitPhysicsAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitPhysicsAssetEditor(const EToolkitMode::Type Mode, const TSharedPtr< class IToolkitHost >& InitToolkitHost, UPhysicsAsset* ObjectToEdit)"
  },
  {
    "label": "HandleViewportSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleViewportSelectionChanged(const TArray<FPhysicsAssetEditorSharedData::FSelection>& InSelectedBodies, const TArray<FPhysicsAssetEditorSharedData::FSelection>& InSelectedConstraints, const TArray<FPhysicsAssetEditorSharedData::FSelection>& InSelectedCoMs)"
  },
  {
    "label": "RefreshHierachyTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshHierachyTree()"
  },
  {
    "label": "RefreshPreviewViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshPreviewViewport()"
  },
  {
    "label": "BuildMenuWidgetBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMenuWidgetBody(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "BuildMenuWidgetPrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMenuWidgetPrimitives(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "BuildMenuWidgetConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMenuWidgetConstraint(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "BuildMenuWidgetSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMenuWidgetSelection(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "BuildMenuWidgetNewConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMenuWidgetNewConstraint(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "BuildMenuWidgetBone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMenuWidgetBone(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "BuildStaticMeshAssetPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildStaticMeshAssetPicker()"
  },
  {
    "label": "AddAdvancedMenuWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAdvancedMenuWidget(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FPhysicsAssetEditor\")"
  },
  {
    "label": "HandleDetailsCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDetailsCreated(const TSharedRef<class IDetailsView>& InDetailsView)"
  },
  {
    "label": "HandlePhysicsAssetGraphCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePhysicsAssetGraphCreated(const TSharedRef<SPhysicsAssetGraph>& InPhysicsAssetGraph)"
  },
  {
    "label": "HandleGraphObjectsSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleGraphObjectsSelected(const TArrayView<UObject*>& InObjects)"
  },
  {
    "label": "HandleSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSelectionChanged(const TArrayView<TSharedPtr<ISkeletonTreeItem>>& InSelectedItems, ESelectInfo::Type InSelectInfo)"
  },
  {
    "label": "HandleCreateNewConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCreateNewConstraint(int32 BodyIndex0, int32 BodyIndex1)"
  },
  {
    "label": "ResetBoneCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetBoneCollision()"
  },
  {
    "label": "MakeConstraintScaleWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeConstraintScaleWidget()"
  },
  {
    "label": "MakeCoMMarkerScaleWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeCoMMarkerScaleWidget()"
  },
  {
    "label": "MakeCollisionOpacityWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeCollisionOpacityWidget()"
  },
  {
    "label": "OnAssetReimport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetReimport(UObject* Object)"
  },
  {
    "label": "ExtendMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendMenu()"
  },
  {
    "label": "ExtendToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendToolbar()"
  },
  {
    "label": "ExtendViewportMenus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendViewportMenus()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "OnAssetSelectedFromStaticMeshAssetPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetSelectedFromStaticMeshAssetPicker(const FAssetData& AssetData)"
  },
  {
    "label": "BuildPhysicalMaterialAssetPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildPhysicalMaterialAssetPicker(bool bForAllBodies)"
  },
  {
    "label": "OnAssetSelectedFromPhysicalMaterialAssetPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetSelectedFromPhysicalMaterialAssetPicker(const FAssetData& AssetData, bool bForAllBodies)"
  },
  {
    "label": "OnFinishedChangingProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFinishedChangingProperties(const FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "ShouldFilterAssetBasedOnSkeleton()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldFilterAssetBasedOnSkeleton(const FAssetData& AssetData)"
  },
  {
    "label": "SnapConstraintToBone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapConstraintToBone(const FPhysicsAssetEditorSharedData::FSelection* Constraint)"
  },
  {
    "label": "CreateOrConvertConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateOrConvertConstraint(EPhysicsAssetEditorConstraintType ConstraintType)"
  },
  {
    "label": "AddNewPrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewPrimitive(EAggCollisionShape::Type PrimitiveType, bool bCopySelected = false)"
  },
  {
    "label": "SetBodiesBelowSelectedPhysicsType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBodiesBelowSelectedPhysicsType( EPhysicsType InPhysicsType, bool bMarkAsDirty)"
  },
  {
    "label": "SetBodiesBelowPhysicsType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBodiesBelowPhysicsType( EPhysicsType InPhysicsType, const TArray<int32> & Indices, bool bMarkAsDirty)"
  },
  {
    "label": "OnChangeDefaultMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangeDefaultMesh(USkeletalMesh* OldPreviewMesh, USkeletalMesh* NewPreviewMesh)"
  },
  {
    "label": "OnCopyBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyBodies()"
  },
  {
    "label": "OnPasteBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteBodies()"
  },
  {
    "label": "OnCopyShapes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyShapes()"
  },
  {
    "label": "OnPasteShapes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteShapes()"
  },
  {
    "label": "OnCopyProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyProperties()"
  },
  {
    "label": "OnPasteProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteProperties()"
  },
  {
    "label": "OnCopyBodyName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyBodyName()"
  },
  {
    "label": "OnRepeatLastSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRepeatLastSimulation()"
  },
  {
    "label": "OnToggleSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSimulation(bool bInSelected)"
  },
  {
    "label": "OnToggleSimulationNoGravity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSimulationNoGravity()"
  },
  {
    "label": "OnToggleSimulationFloorCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSimulationFloorCollision()"
  },
  {
    "label": "SetupSelectedSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupSelectedSimulation()"
  },
  {
    "label": "OnMeshRenderingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMeshRenderingMode(EPhysicsAssetEditorMeshViewMode Mode, bool bSimulation)"
  },
  {
    "label": "OnCenterOfMassRenderingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCenterOfMassRenderingMode(EPhysicsAssetEditorCenterOfMassViewMode Mode, bool bSimulation)"
  },
  {
    "label": "OnCollisionRenderingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCollisionRenderingMode(EPhysicsAssetEditorCollisionViewMode Mode, bool bSimulation)"
  },
  {
    "label": "OnConstraintRenderingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConstraintRenderingMode(EPhysicsAssetEditorConstraintViewMode Mode, bool bSimulation)"
  },
  {
    "label": "ToggleDrawConstraintsAsPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleDrawConstraintsAsPoints()"
  },
  {
    "label": "ToggleDrawViolatedLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleDrawViolatedLimits()"
  },
  {
    "label": "ToggleRenderOnlySelectedConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleRenderOnlySelectedConstraints()"
  },
  {
    "label": "ToggleRenderOnlySelectedSolid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleRenderOnlySelectedSolid()"
  },
  {
    "label": "ToggleHideSimulatedBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleHideSimulatedBodies()"
  },
  {
    "label": "ToggleHideKinematicBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleHideKinematicBodies()"
  },
  {
    "label": "ToggleHideBodyMass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleHideBodyMass()"
  },
  {
    "label": "OnToggleMassProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleMassProperties()"
  },
  {
    "label": "OnSetCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetCollision(bool bEnable)"
  },
  {
    "label": "OnSetCollisionAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetCollisionAll(bool bEnable)"
  },
  {
    "label": "OnSetPrimitiveCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetPrimitiveCollision(ECollisionEnabled::Type CollisionEnabled)"
  },
  {
    "label": "OnSetPrimitiveContributeToMass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetPrimitiveContributeToMass()"
  },
  {
    "label": "OnWeldToBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWeldToBody()"
  },
  {
    "label": "CanWeldToBody()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanWeldToBody()"
  },
  {
    "label": "OnAddSphere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddSphere()"
  },
  {
    "label": "OnAddSphyl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddSphyl()"
  },
  {
    "label": "OnAddBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddBox()"
  },
  {
    "label": "OnAddTaperedCapsule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddTaperedCapsule()"
  },
  {
    "label": "OnDeletePrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeletePrimitive()"
  },
  {
    "label": "OnDuplicatePrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDuplicatePrimitive()"
  },
  {
    "label": "OnResetConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetConstraint()"
  },
  {
    "label": "OnConstrainChildBodiesToParentBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConstrainChildBodiesToParentBody()"
  },
  {
    "label": "OnSnapConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSnapConstraint(const EConstraintTransformComponentFlags ComponentFlags)"
  },
  {
    "label": "OnConvertToBallAndSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConvertToBallAndSocket()"
  },
  {
    "label": "OnConvertToHinge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConvertToHinge()"
  },
  {
    "label": "OnConvertToPrismatic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConvertToPrismatic()"
  },
  {
    "label": "OnConvertToSkeletal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConvertToSkeletal()"
  },
  {
    "label": "OnDeleteConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteConstraint()"
  },
  {
    "label": "OnViewType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnViewType(ELevelViewportType ViewType)"
  },
  {
    "label": "OnSetBodyPhysicsType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetBodyPhysicsType( EPhysicsType InPhysicsType )"
  },
  {
    "label": "IsBodyPhysicsType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBodyPhysicsType( EPhysicsType InPhysicsType )"
  },
  {
    "label": "OnDeleteBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteBody()"
  },
  {
    "label": "OnDeleteAllBodiesBelow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteAllBodiesBelow()"
  },
  {
    "label": "OnDeleteSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteSelection()"
  },
  {
    "label": "OnCycleConstraintOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCycleConstraintOrientation()"
  },
  {
    "label": "OnCycleConstraintActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCycleConstraintActive()"
  },
  {
    "label": "OnToggleSwing1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSwing1()"
  },
  {
    "label": "OnToggleSwing2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSwing2()"
  },
  {
    "label": "OnToggleTwist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleTwist()"
  },
  {
    "label": "Mirror()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mirror()"
  },
  {
    "label": "OnSelectAllBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectAllBodies()"
  },
  {
    "label": "OnSelectKinematicBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectKinematicBodies()"
  },
  {
    "label": "OnSelectSimulatedBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectSimulatedBodies()"
  },
  {
    "label": "OnSelectBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectBodies(EPhysicsType PhysicsType = EPhysicsType::PhysType_Simulated)"
  },
  {
    "label": "OnSelectShapes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectShapes(const ECollisionEnabled::Type CollisionEnabled)"
  },
  {
    "label": "OnSelectAllConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectAllConstraints()"
  },
  {
    "label": "OnToggleSelectionType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSelectionType(bool bIgnoreUserConstraints)"
  },
  {
    "label": "OnToggleShowSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleShowSelected()"
  },
  {
    "label": "OnShowSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowSelected()"
  },
  {
    "label": "OnHideSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHideSelected()"
  },
  {
    "label": "OnToggleShowOnlyColliding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleShowOnlyColliding()"
  },
  {
    "label": "OnToggleShowOnlyConstrained()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleShowOnlyConstrained()"
  },
  {
    "label": "OnToggleShowOnlySelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleShowOnlySelected()"
  },
  {
    "label": "OnShowAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowAll()"
  },
  {
    "label": "OnHideAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHideAll()"
  },
  {
    "label": "OnDeselectAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeselectAll()"
  },
  {
    "label": "HandlePreviewSceneCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePreviewSceneCreated(const TSharedRef<IPersonaPreviewScene>& InPersonaPreviewScene)"
  },
  {
    "label": "HandleExtendContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleExtendContextMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "HandleExtendFilterMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleExtendFilterMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "HandleToggleShowBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleShowBodies()"
  },
  {
    "label": "HandleToggleShowSimulatedBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleShowSimulatedBodies()"
  },
  {
    "label": "HandleToggleShowKinematicBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleShowKinematicBodies()"
  },
  {
    "label": "HandleToggleShowConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleShowConstraints()"
  },
  {
    "label": "HandleToggleShowConstraintsOnParentBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleShowConstraintsOnParentBodies()"
  },
  {
    "label": "HandleToggleShowPrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleShowPrimitives()"
  },
  {
    "label": "RefreshFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshFilter()"
  },
  {
    "label": "RecreatePhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecreatePhysicsState()"
  },
  {
    "label": "ShowNotificationMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowNotificationMessage(const FText& Message, const SNotificationItem::ECompletionState CompletionState)"
  },
  {
    "label": "MakeScaleWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeScaleWidget(const float MinValue, const float MaxValue, TValueAccessor ValueAccessorFunction, const FName WidgetInteractionText)"
  },
  {
    "label": "FixPhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixPhysicsState()"
  },
  {
    "label": "ImpToggleSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImpToggleSimulation()"
  },
  {
    "label": "OnAddPhatRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddPhatRecord(const FString& Action, bool bRecordSimulate, bool bRecordMode)"
  }
]