[
  {
    "label": "ThreeBandFilterBank",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ThreeBandFilterBank"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_THREE_BAND_FILTER_BANK_H_ # define MODULES_AUDIO_PROCESSING_THREE_BAND_FILTER_BANK_H_ # include<array> # include<cstring> # include<memory> # include<vector> # include \" api / array_view . h \" namespace webrtc { int kSparsity = 4 ; int kStrideLog2 = 2 ; int kStride = 1<<kStrideLog2 ; int kNumZeroFilters = 2 ; int kFilterSize = 4 ; int kMemorySize = kFilterSize* kStride - 1 ;)",
    "insertText": "static_assert(kMemorySize == 15, \"The memory size must be sufficient to provide memory for the \" \"shifted filters\")"
  },
  {
    "label": "ThreeBandFilterBank()",
    "kind": "Method",
    "detail": "Function (class ThreeBandFilterBank final { public : const int kNumBands = 3 ; const int kFullBandSize = 4 8 0 ; const int kSplitBandSize = ThreeBandFilterBank::kFullBandSize / ThreeBandFilterBank::kNumBands ; const int kNumNonZeroFilters = kSparsity* ThreeBandFilterBank::kNumBands - kNumZeroFilters ;)",
    "insertText": "ThreeBandFilterBank()"
  },
  {
    "label": "Analysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Analysis(rtc::ArrayView<const float, kFullBandSize> in, rtc::ArrayView<const rtc::ArrayView<float>, kNumBands> out)"
  },
  {
    "label": "Synthesis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Synthesis(rtc::ArrayView<const rtc::ArrayView<float>, kNumBands> in, rtc::ArrayView<float, kFullBandSize> out)"
  }
]