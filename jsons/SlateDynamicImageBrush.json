[
  {
    "label": "FSlateDynamicImageBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateDynamicImageBrush"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "UTexture2DDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2DDynamic"
  },
  {
    "label": "FSlateDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Margin . h \" # include \" Styling / SlateBrush . h \" # include \" Types / SlateVector2 . h \" struct FSlateDynamicImageBrush : public FSlateBrush,public TSharedFromThis<FSlateDynamicImageBrush> { FORCENOINLINE)",
    "insertText": "FSlateDynamicImageBrush(class UTexture2D* InTexture, const UE::Slate::FDeprecateVector2DParameter& InImageSize, const FName InTextureName, const FLinearColor& InTint = FLinearColor(1.0f, 1.0f, 1.0f, 1.0f), ESlateBrushTileType::Type InTiling = ESlateBrushTileType::NoTile, ESlateBrushImageType::Type InImageType = ESlateBrushImageType::FullColor ) : FSlateBrush(ESlateBrushDrawType::Image, FName(TEXT(\"None\")), FMargin(0.0f), InTiling, InImageType, InImageSize, InTint, (UObject*)InTexture) , bRemoveResourceFromRootSet(false) , bIsInitalized(true)"
  },
  {
    "label": "InitFromTextureObject()",
    "kind": "Method",
    "detail": "Function (bIsDynamicallyLoaded = true ;)",
    "insertText": "InitFromTextureObject(InTextureName)"
  },
  {
    "label": "FSlateDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (} FORCENOINLINE)",
    "insertText": "FSlateDynamicImageBrush(class UTexture2DDynamic* InTexture, const UE::Slate::FDeprecateVector2DParameter& InImageSize, const FName InTextureName, const FLinearColor& InTint = FLinearColor(1.0f, 1.0f, 1.0f, 1.0f), ESlateBrushTileType::Type InTiling = ESlateBrushTileType::NoTile, ESlateBrushImageType::Type InImageType = ESlateBrushImageType::FullColor ) : FSlateBrush(ESlateBrushDrawType::Image, FName(TEXT(\"None\")), FMargin(0.0f), InTiling, InImageType, InImageSize, InTint, (UObject*)InTexture) , bRemoveResourceFromRootSet(false) , bIsInitalized(true)"
  },
  {
    "label": "FSlateDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (} FORCENOINLINE)",
    "insertText": "FSlateDynamicImageBrush(const FName InTextureName, const UE::Slate::FDeprecateVector2DParameter& InImageSize, const FLinearColor& InTint = FLinearColor(1.0f, 1.0f, 1.0f, 1.0f), ESlateBrushTileType::Type InTiling = ESlateBrushTileType::NoTile, ESlateBrushImageType::Type InImageType = ESlateBrushImageType::FullColor ) : FSlateBrush(ESlateBrushDrawType::Image, InTextureName, FMargin(0.0f), InTiling, InImageType, InImageSize, InTint, nullptr, true) , bRemoveResourceFromRootSet(false) , bIsInitalized(true)"
  },
  {
    "label": "CreateWithImageData()",
    "kind": "Method",
    "detail": "Function (bIsDynamicallyLoaded = true ; } TSharedPtr<FSlateDynamicImageBrush>)",
    "insertText": "CreateWithImageData(const FName InTextureName, const UE::Slate::FDeprecateVector2DParameter& InImageSize, const TArray<uint8>& InImageData, const FLinearColor& InTint = FLinearColor(1.0f, 1.0f, 1.0f, 1.0f), ESlateBrushTileType::Type InTiling = ESlateBrushTileType::NoTile, ESlateBrushImageType::Type InImageType = ESlateBrushImageType::FullColor)"
  },
  {
    "label": "ReleaseResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResource()"
  },
  {
    "label": "FSlateDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSlateDynamicImageBrush()"
  },
  {
    "label": "ReleaseResourceInternal()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ReleaseResourceInternal()"
  },
  {
    "label": "InitFromTextureObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromTextureObject(FName InTextureName)"
  },
  {
    "label": "GetResourceObject()",
    "kind": "Method",
    "detail": "Function (UObject* Object =)",
    "insertText": "GetResourceObject()"
  },
  {
    "label": "AddToRoot()",
    "kind": "Method",
    "detail": "Function (Object ->)",
    "insertText": "AddToRoot()"
  }
]