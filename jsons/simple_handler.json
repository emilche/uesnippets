[
  {
    "label": "SimpleHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SimpleHandler"
  },
  {
    "label": "SimpleHandler()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_TESTS_CEFSIMPLE_SIMPLE_HANDLER_H_ # define CEF_TESTS_CEFSIMPLE_SIMPLE_HANDLER_H_ # include \" include / cef_client . h \" # include<list> class SimpleHandler : public CefClient,public CefDisplayHandler,public CefLifeSpanHandler,public CefLoadHandler { public :)",
    "insertText": "SimpleHandler(bool use_views)"
  },
  {
    "label": "SimpleHandler()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SimpleHandler()"
  },
  {
    "label": "GetInstance()",
    "kind": "Method",
    "detail": "Function (SimpleHandler*)",
    "insertText": "GetInstance()"
  },
  {
    "label": "GetDisplayHandler()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefDisplayHandler>)",
    "insertText": "GetDisplayHandler()"
  },
  {
    "label": "OnAfterCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAfterCreated(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "DoClose()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoClose(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "OnBeforeClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeforeClose(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "OnLoadError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadError(CefRefPtr<CefBrowser> browser, CefRefPtr<CefFrame> frame, ErrorCode errorCode, const CefString& errorText, const CefString& failedUrl)"
  },
  {
    "label": "CloseAllBrowsers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseAllBrowsers(bool force_close)"
  },
  {
    "label": "IsClosing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClosing()"
  },
  {
    "label": "PlatformTitleChange()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "PlatformTitleChange(CefRefPtr<CefBrowser> browser, const CefString& title)"
  },
  {
    "label": "IMPLEMENT_REFCOUNTING()",
    "kind": "Method",
    "detail": "Function (const bool use_views_ ; typedef std::list<CefRefPtr<CefBrowser>> BrowserList ; BrowserList browser_list_ ; bool is_closing_ ;)",
    "insertText": "IMPLEMENT_REFCOUNTING(SimpleHandler)"
  }
]