[
  {
    "label": "M4Image",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "M4Image"
  },
  {
    "label": "M4Decoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "M4Decoder"
  },
  {
    "label": "M4BitstreamCacheEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "M4BitstreamCacheEntry"
  },
  {
    "label": "M4_MB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "M4_MB"
  },
  {
    "label": "M4BitstreamHeaderInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "M4BitstreamHeaderInfo"
  },
  {
    "label": "VIDImage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VIDImage"
  },
  {
    "label": "VIDDecoderSetup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VIDDecoderSetup"
  },
  {
    "label": "M4XCmdSingleThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "M4XCmdSingleThread"
  },
  {
    "label": "M4ImageCreatePadding()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" vdecmpeg4_Types . h \" # include \" vdecmpeg4_ErrorCodes . h \" # include \" M4Global . h \" # include \" M4MemOps . h \" namespace vdecmpeg4 { class M4Image ; class M4Decoder ; struct M4BitstreamCacheEntry ; struct M4_MB ; struct M4BitstreamHeaderInfo ; struct VIDImage ; struct VIDDecoderSetup ; void)",
    "insertText": "M4ImageCreatePadding(void* image)"
  },
  {
    "label": "M4XCmdSingleThread()",
    "kind": "Method",
    "detail": "Function (class M4XCmdSingleThread { public :)",
    "insertText": "M4XCmdSingleThread()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (VIDError)",
    "insertText": "Init(M4Decoder* pDecoder)"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exit()"
  },
  {
    "label": "FrameBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameBegin(M4Image* pOutput, M4BitstreamHeaderInfo* pHeaderInfo, M4Image* pRefImage[2])"
  },
  {
    "label": "FrameEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameEnd()"
  },
  {
    "label": "XCreatePadding()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "XCreatePadding(VIDImage* pImage)"
  },
  {
    "label": "M4ImageCreatePadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "M4ImageCreatePadding(pImage->_private)"
  },
  {
    "label": "XCopyMB()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "XCopyMB(int32 mbx, int32 mby)"
  },
  {
    "label": "M4MemOpInterMBCopyAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "M4MemOpInterMBCopyAll(mpOutput, mbx, mby, mpRefImage[0])"
  },
  {
    "label": "XUpdateIntraMB()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "XUpdateIntraMB(M4_MB* pMB, int32 mbx, int32 mby, M4BitstreamCacheEntry* pCacheEntry)"
  },
  {
    "label": "XUpdateInterMB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "XUpdateInterMB(M4_MB* pMB, int32 mbx, int32 mby, M4BitstreamCacheEntry* pCacheEntry, MV_PREDICTION mvDir, uint32 refImageNo)"
  },
  {
    "label": "XInterpolateMB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "XInterpolateMB(M4_MB* pMb, int32 mbx, int32 mby, M4BitstreamCacheEntry* pCacheEntry, uint32 refImageForward, uint32 refImageBackward, uint16 mbLastIdx)"
  },
  {
    "label": "GetDctWorkArea()",
    "kind": "Method",
    "detail": "Function (int16*)",
    "insertText": "GetDctWorkArea()"
  }
]