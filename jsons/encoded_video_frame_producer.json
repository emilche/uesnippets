[
  {
    "label": "EncodedVideoFrameProducer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EncodedVideoFrameProducer"
  },
  {
    "label": "EncodedFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EncodedFrame"
  },
  {
    "label": "EncodedVideoFrameProducer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_CODECS_TEST_ENCODED_VIDEO_FRAME_PRODUCER_H_ # define MODULES_VIDEO_CODING_CODECS_TEST_ENCODED_VIDEO_FRAME_PRODUCER_H_ # include<stdint . h> # include<vector> # include \" api / transport / rtp / dependency_descriptor . h \" # include \" api / video / encoded_image . h \" # include \" api / video_codecs / video_encoder . h \" # include \" modules / video_coding / include / video_codec_interface . h \" namespace webrtc { class EncodedVideoFrameProducer { public : struct EncodedFrame { EncodedImage encoded_image ; CodecSpecificInfo codec_specific_info ; } ;)",
    "insertText": "EncodedVideoFrameProducer(VideoEncoder& encoder) : encoder_(encoder)"
  },
  {
    "label": "EncodedVideoFrameProducer()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "EncodedVideoFrameProducer(const EncodedVideoFrameProducer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (EncodedVideoFrameProducer&)",
    "insertText": "operator(const EncodedVideoFrameProducer&)"
  },
  {
    "label": "SetNumInputFrames()",
    "kind": "Method",
    "detail": "Function (EncodedVideoFrameProducer&)",
    "insertText": "SetNumInputFrames(int value)"
  },
  {
    "label": "ForceKeyFrame()",
    "kind": "Method",
    "detail": "Function (EncodedVideoFrameProducer&)",
    "insertText": "ForceKeyFrame()"
  },
  {
    "label": "SetResolution()",
    "kind": "Method",
    "detail": "Function (EncodedVideoFrameProducer&)",
    "insertText": "SetResolution(RenderResolution value)"
  },
  {
    "label": "SetFramerateFps()",
    "kind": "Method",
    "detail": "Function (EncodedVideoFrameProducer&)",
    "insertText": "SetFramerateFps(int value)"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (std::vector<EncodedFrame>)",
    "insertText": "Encode()"
  },
  {
    "label": "RTC_DCHECK_GT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_GT(value, 0)"
  }
]