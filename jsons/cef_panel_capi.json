[
  {
    "label": "_cef_box_layout_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_box_layout_t"
  },
  {
    "label": "_cef_fill_layout_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_fill_layout_t"
  },
  {
    "label": "_cef_layout_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_layout_t"
  },
  {
    "label": "_cef_window_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_window_t"
  },
  {
    "label": "_cef_panel_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_panel_t"
  },
  {
    "label": "_cef_box_layout_settings_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_box_layout_settings_t"
  },
  {
    "label": "_cef_view_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_view_t"
  },
  {
    "label": "_cef_panel_delegate_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_panel_delegate_t"
  },
  {
    "label": "_cef_window_t()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_VIEWS_CEF_PANEL_CAPI_H_ # define CEF_INCLUDE_CAPI_VIEWS_CEF_PANEL_CAPI_H_ # pragma once # include \" include / capi / views / cef_panel_delegate_capi . h \" # include \" include / capi / views / cef_view_capi . h \" # ifdef __cplusplus \" C \" { # endif struct _cef_box_layout_t ; struct _cef_fill_layout_t ; struct _cef_layout_t ; struct _cef_window_t ; typedef struct _cef_panel_t { cef_view_t base ; struct)",
    "insertText": "_cef_window_t(CEF_CALLBACK* as_window)(struct _cef_panel_t* self)"
  },
  {
    "label": "_cef_fill_layout_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_fill_layout_t(CEF_CALLBACK* set_to_fill_layout)( struct _cef_panel_t* self)"
  },
  {
    "label": "_cef_box_layout_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_box_layout_t(CEF_CALLBACK* set_to_box_layout)( struct _cef_panel_t* self, const struct _cef_box_layout_settings_t* settings)"
  },
  {
    "label": "_cef_layout_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_layout_t(CEF_CALLBACK* get_layout)(struct _cef_panel_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* layout)(struct _cef_panel_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* add_child_view)(struct _cef_panel_t* self, struct _cef_view_t* view)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* add_child_view_at)(struct _cef_panel_t* self, struct _cef_view_t* view, int index)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* reorder_child_view)(struct _cef_panel_t* self, struct _cef_view_t* view, int index)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* remove_child_view)(struct _cef_panel_t* self, struct _cef_view_t* view)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* remove_all_child_views)(struct _cef_panel_t* self)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "size_t(CEF_CALLBACK* get_child_view_count)(struct _cef_panel_t* self)"
  },
  {
    "label": "_cef_view_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_view_t(CEF_CALLBACK* get_child_view_at)(struct _cef_panel_t* self, int index)"
  },
  {
    "label": "cef_panel_create()",
    "kind": "Method",
    "detail": "Function (} cef_panel_t ; CEF_EXPORT cef_panel_t*)",
    "insertText": "cef_panel_create(struct _cef_panel_delegate_t* delegate)"
  }
]