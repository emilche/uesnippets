[
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / StringFwd . h \" void)",
    "insertText": "LexFromString(int8& OutValue, const FStringView& InString)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(int16& OutValue, const FStringView& InString)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(int32& OutValue, const FStringView& InString)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(int64& OutValue, const FStringView& InString)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(uint8& OutValue, const FStringView& InString)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(uint16& OutValue, const FStringView& InString)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(uint32& OutValue, const FStringView& InString)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(uint64& OutValue, const FStringView& InString)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(float& OutValue, const FStringView& InString)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(double& OutValue, const FStringView& InString)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(bool& OutValue, const FStringView& InString)"
  }
]