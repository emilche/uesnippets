[
  {
    "label": "rcAllocHint",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "rcAllocHint"
  },
  {
    "label": "rcIntArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "rcIntArray"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "rcScopedDelete",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "rcScopedDelete"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "rcScopedStructArrayDelete",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "rcScopedStructArrayDelete"
  },
  {
    "label": "rcAllocSetCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rcAllocSetCustom(rcAllocFunc *allocFunc, rcFreeFunc *freeFunc)"
  },
  {
    "label": "rcFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rcFree(void* ptr)"
  },
  {
    "label": "rcMemCpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rcMemCpy(void* dst, void* src, int size)"
  },
  {
    "label": "rcIntArray()",
    "kind": "Method",
    "detail": "Function (inline)",
    "insertText": "rcIntArray(const rcIntArray&)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resize(int n)"
  },
  {
    "label": "resizeGrow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "resizeGrow(int n)"
  }
]