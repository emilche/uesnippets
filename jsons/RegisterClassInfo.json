[
  {
    "label": "RegisterClassInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RegisterClassInfo"
  },
  {
    "label": "RCInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RCInfo"
  },
  {
    "label": "RCInfo()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_CODEGEN_REGISTERCLASSINFO_H # define LLVM_CODEGEN_REGISTERCLASSINFO_H # include \" llvm / ADT / ArrayRef . h \" # include \" llvm / ADT / BitVector . h \" # include \" llvm / Target / TargetRegisterInfo . h \" namespace llvm { class RegisterClassInfo { struct RCInfo { unsigned Tag ; unsigned NumRegs ; bool ProperSubClass ; uint8_t MinCost ; uint16_t LastCostChange ; std::unique_ptr<MCPhysReg [ ]> Order ;)",
    "insertText": "RCInfo() : Tag(0), NumRegs(0), ProperSubClass(false), MinCost(0), LastCostChange(0)"
  },
  {
    "label": "MCPhysReg()",
    "kind": "Method",
    "detail": "Function (} operator ArrayRef<)",
    "insertText": "MCPhysReg()"
  },
  {
    "label": "compute()",
    "kind": "Method",
    "detail": "Function (} } ; std::unique_ptr<RCInfo [ ]> RegClass ; unsigned Tag ; const MachineFunction* MF ; const TargetRegisterInfo* TRI ; const MCPhysReg* CalleeSaved ; SmallVector<uint8_t,4> CSRNum ; BitVector Reserved ; std::unique_ptr<unsigned [ ]> PSetLimits ; void)",
    "insertText": "compute(const TargetRegisterClass *RC)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (const RCInfo&)",
    "insertText": "get(const TargetRegisterClass *RC)"
  },
  {
    "label": "getID()",
    "kind": "Method",
    "detail": "Function (const RCInfo& RCI = RegClass [ RC ->)",
    "insertText": "getID()"
  },
  {
    "label": "runOnMachineFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "runOnMachineFunction(const MachineFunction &MF)"
  },
  {
    "label": "getNumAllocatableRegs()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getNumAllocatableRegs(const TargetRegisterClass *RC)"
  },
  {
    "label": "getOrder()",
    "kind": "Method",
    "detail": "Function (} ArrayRef<MCPhysReg>)",
    "insertText": "getOrder(const TargetRegisterClass *RC)"
  },
  {
    "label": "isProperSubClass()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isProperSubClass(const TargetRegisterClass *RC)"
  },
  {
    "label": "getLastCalleeSavedAlias()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getLastCalleeSavedAlias(unsigned PhysReg)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(TargetRegisterInfo::isPhysicalRegister(PhysReg))"
  },
  {
    "label": "getLastCostChange()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getLastCostChange(const TargetRegisterClass *RC)"
  },
  {
    "label": "getRegPressureSetLimit()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getRegPressureSetLimit(unsigned Idx)"
  }
]