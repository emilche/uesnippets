[
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "FCallstacksProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCallstacksProvider"
  },
  {
    "label": "FCallstacksAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCallstacksAnalyzer"
  },
  {
    "label": "Routes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Routes"
  },
  {
    "label": "FCallstacksAnalyzer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Trace / Analyzer . h \" namespace TraceServices { class IAnalysisSession ; class FCallstacksProvider ; class FCallstacksAnalyzer : public UE::Trace::IAnalyzer { public :)",
    "insertText": "FCallstacksAnalyzer(IAnalysisSession& Session, FCallstacksProvider* Provider)"
  },
  {
    "label": "OnAnalysisBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnalysisBegin(const FOnAnalysisContext& Context)"
  },
  {
    "label": "OnEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnEvent(uint16 RouteId, EStyle Style, const FOnEventContext& Context)"
  }
]