[
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FWidgetStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetStyle"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SHeaderRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHeaderRow"
  },
  {
    "label": "SScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBar"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FOutlinerViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutlinerViewModel"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FSelectionEventSuppressor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSelectionEventSuppressor"
  },
  {
    "label": "FOutlinerHeaderRowWidgetMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOutlinerHeaderRowWidgetMetaData"
  },
  {
    "label": "FViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewModel"
  },
  {
    "label": "FSequencerCoreSelection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerCoreSelection"
  },
  {
    "label": "SOutlinerViewRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOutlinerViewRow"
  },
  {
    "label": "STrackAreaView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STrackAreaView"
  },
  {
    "label": "STrackLane",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STrackLane"
  },
  {
    "label": "IOutlinerColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOutlinerColumn"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SEQUENCERCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCERCORE_API"
  },
  {
    "label": "FCachedGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedGeometry"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TWeakPtr<FOutlinerViewModel> InWeakOutliner, const TSharedRef<STrackAreaView>& InTrackArea)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick( const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime )"
  },
  {
    "label": "ForceSetSelectedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceSetSelectedItems(const TSet<TWeakViewModelPtr<IOutlinerExtension>>& InItems)"
  },
  {
    "label": "ReportChildRowGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportChildRowGeometry(const TViewModelPtr<IOutlinerExtension>& InNode, const FGeometry& InGeometry)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "ToggleExpandCollapseNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleExpandCollapseNodes(ETreeRecursion Recursion = ETreeRecursion::Recursive, bool bExpandAll = false, bool bCollapseAll = false)"
  },
  {
    "label": "ScrollByDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollByDelta(float DeltaInSlateUnits)"
  },
  {
    "label": "ExpandCollapseNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandCollapseNode(TViewModelPtr<IOutlinerExtension> InDataModel, bool bExpansionState, ETreeRecursion Recursion)"
  },
  {
    "label": "OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRow(TWeakViewModelPtr<IOutlinerExtension> InDisplayNode, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "CreateTrackLanesForRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTrackLanesForRow(TSharedRef<SOutlinerViewRow> InRow, TViewModelPtr<IOutlinerExtension> InDataModel)"
  },
  {
    "label": "FindOrCreateParentLane()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<STrackLane>)",
    "insertText": "FindOrCreateParentLane(TViewModelPtr<IOutlinerExtension> InDataModel)"
  },
  {
    "label": "OnExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExpansionChanged(TWeakViewModelPtr<IOutlinerExtension> InItem, bool bIsExpanded)"
  },
  {
    "label": "SetItemSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemSelection()"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "UpdateViewSelectionFromModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateViewSelectionFromModel()"
  },
  {
    "label": "UpdateModelSelectionFromView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateModelSelectionFromView()"
  },
  {
    "label": "HandleTableViewScrolled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTableViewScrolled(double InScrollOffset)"
  },
  {
    "label": "UpdatePhysicalGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePhysicalGeometry(bool bIsRefresh)"
  },
  {
    "label": "OnContextMenuOpening()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnContextMenuOpening()"
  },
  {
    "label": "SetItemExpansionRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemExpansionRecursive(TWeakViewModelPtr<IOutlinerExtension> InItem, bool bIsExpanded)"
  },
  {
    "label": "AddPinnedTreeView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPinnedTreeView(TSharedPtr<SOutlinerView> PinnedTreeView)"
  },
  {
    "label": "SetOutlinerColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOutlinerColumns(const TArray<TSharedPtr<IOutlinerColumn>>& InOutlinerColumns)"
  },
  {
    "label": "CreateOutlinerColumnsForGroup()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CreateOutlinerColumnsForGroup(int32 ColumnIndex, EOutlinerColumnGroup Group)"
  },
  {
    "label": "UpdateOutlinerColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOutlinerColumns()"
  },
  {
    "label": "InsertSeparatorColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertSeparatorColumn(int32 InsertIndex, int32 SeparatorID)"
  },
  {
    "label": "OnDragRow()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragRow(const FGeometry& InGeometry, const FPointerEvent& InPointerEvent, TSharedRef<SOutlinerViewRow> InRow)"
  },
  {
    "label": "OnItemToString_Debug()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "OnItemToString_Debug(TWeakViewModelPtr<IOutlinerExtension> InWeakModel)"
  }
]