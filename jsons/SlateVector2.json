[
  {
    "label": "FDeprecateSlateVector2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeprecateSlateVector2D"
  },
  {
    "label": "FDeprecateVector2DParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeprecateVector2DParameter"
  },
  {
    "label": "FDeprecateOptionalVector2DParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeprecateOptionalVector2DParameter"
  },
  {
    "label": "FDeprecateSlateVectorPtrVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeprecateSlateVectorPtrVariant"
  },
  {
    "label": "FPropertyTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTag"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Math / Vector2D . h \" # include \" Math / IntPoint . h \" # include \" Math / UnrealMathUtility . h \" # include \" Misc / Optional . h \" # include \" SlateVector2 . generated . h \" # ifndef UE_ENABLE_SLATE_VECTOR_DEPRECATION_MECHANISMS # define UE_ENABLE_SLATE_VECTOR_DEPRECATION_MECHANISMS 1 # endif # define UE_INCLUDETOOL_IGNORE_INCONSISTENT_STATE # ifndef UE_REPORT_SLATE_VECTOR_DEPRECATION # define UE_REPORT_SLATE_VECTOR_DEPRECATION 0 # endif)",
    "insertText": "static_assert(UE_ENABLE_SLATE_VECTOR_DEPRECATION_MECHANISMS || !UE_REPORT_SLATE_VECTOR_DEPRECATION, \"UE_REPORT_SLATE_VECTOR_DEPRECATION should never be specified where UE_ENABLE_SLATE_VECTOR_DEPRECATION_MECHANISMS is disabled.\")"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (# ifndef UE_REPORT_SLATE_VECTOR_DEPRECATION_VERSION # define UE_REPORT_SLATE_VECTOR_DEPRECATION_VERSION all # endif # if UE_REPORT_SLATE_VECTOR_DEPRECATION # define)",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED(Text) UE_DEPRECATED(UE_REPORT_SLATE_VECTOR_DEPRECATION_VERSION, Text) #define UE_SLATE_VECTOR_DEPRECATED_DEFAULT() UE_DEPRECATED(UE_REPORT_SLATE_VECTOR_DEPRECATION_VERSION, \"Use FVector2f or float directly; this Slate API no longer interfaces directly with double-precision scalars and vectors.\") #else #define UE_SLATE_VECTOR_DEPRECATED(Text) #define UE_SLATE_VECTOR_DEPRECATED_DEFAULT()"
  },
  {
    "label": "CastToVector2f()",
    "kind": "Method",
    "detail": "Function (namespace UE::Slate { const FVector2f&)",
    "insertText": "CastToVector2f(const FVector2f& InValue)"
  },
  {
    "label": "CastToVector2f()",
    "kind": "Method",
    "detail": "Function (FVector2f)",
    "insertText": "CastToVector2f(const FVector2d& InValue)"
  },
  {
    "label": "CastToVector2f()",
    "kind": "Method",
    "detail": "Function (# if UE_ENABLE_SLATE_VECTOR_DEPRECATION_MECHANISMS struct FDeprecateVector2DParameter ; struct FDeprecateOptionalVector2DParameter ; FVector2f)",
    "insertText": "CastToVector2f(const FIntPoint& InValue)"
  },
  {
    "label": "CastToVector2f()",
    "kind": "Method",
    "detail": "Function (const FVector2f&)",
    "insertText": "CastToVector2f(const FDeprecateSlateVector2D& InValue)"
  },
  {
    "label": "CastToVector2f()",
    "kind": "Method",
    "detail": "Function (const FVector2f&)",
    "insertText": "CastToVector2f(const FDeprecateVector2DParameter& InValue)"
  },
  {
    "label": "FDeprecateSlateVectorPtrVariant()",
    "kind": "Method",
    "detail": "Function (struct FDeprecateSlateVectorPtrVariant {)",
    "insertText": "FDeprecateSlateVectorPtrVariant(FDeprecateSlateVector2D* InInstance)"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT() SLATECORE_API operator const FVector2D*()"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (operator const)",
    "insertText": "FVector2f()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (FDeprecateSlateVector2D* Instance ; FVector2D DoubleVector ; } ; # else using FDeprecateVector2DResult = FVector2f ; using FDeprecateVector2DParameter = FVector2f ; using FDeprecateOptionalVector2DParameter = TOptional<FVector2f> ; # endif })",
    "insertText": "USTRUCT(BlueprintInternalUseOnly, DisplayName=\"Vector2D\", meta=(HiddenByDefault, ShortTooltip=\"Vector2D (single-precision)\", ToolTip=\"Vector2D (single-precision)\", ScriptDefaultMake, ScriptDefaultBreak, HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeVector2D\", HasNativeBreak=\"/Script/Engine.KismetMathLibrary.BreakVector2D\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FDeprecateSlateVector2D()"
  },
  {
    "label": "FDeprecateSlateVector2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDeprecateSlateVector2D(FVector2f InValue) : FVector2f(InValue)"
  },
  {
    "label": "FDeprecateSlateVector2D()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDeprecateSlateVector2D(float InX, float InY) : FVector2f(InX, InY)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FDeprecateSlateVector2D&)",
    "insertText": "operator(const FVector2f& InValue)"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT()",
    "kind": "Method",
    "detail": "Function (X = InValue . X ; Y = InValue . Y ; return* this ; })",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT() FDeprecateSlateVector2D& operator=(const FVector2d& InValue)"
  },
  {
    "label": "UE_REAL_TO_FLOAT()",
    "kind": "Method",
    "detail": "Function (X =)",
    "insertText": "UE_REAL_TO_FLOAT(InValue.X)"
  },
  {
    "label": "UE_REAL_TO_FLOAT()",
    "kind": "Method",
    "detail": "Function (Y =)",
    "insertText": "UE_REAL_TO_FLOAT(InValue.Y)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} # if UE_ENABLE_SLATE_VECTOR_DEPRECATION_MECHANISMS const UE::Slate::FDeprecateSlateVectorPtrVariant)",
    "insertText": "operator()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} # endif bool)",
    "insertText": "Serialize(FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "SerializeFromMismatchedTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeFromMismatchedTag(const struct FPropertyTag& Tag, FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "RoundToVector()",
    "kind": "Method",
    "detail": "Function (public : FDeprecateSlateVector2D)",
    "insertText": "RoundToVector()"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Equals(const UE::Slate::FDeprecateVector2DParameter& V, float Tolerance=UE_KINDA_SMALL_NUMBER)"
  },
  {
    "label": "GetSignVector()",
    "kind": "Method",
    "detail": "Function (} FDeprecateSlateVector2D)",
    "insertText": "GetSignVector()"
  },
  {
    "label": "GetAbs()",
    "kind": "Method",
    "detail": "Function (} FDeprecateSlateVector2D)",
    "insertText": "GetAbs()"
  },
  {
    "label": "ClampAxes()",
    "kind": "Method",
    "detail": "Function (} FDeprecateSlateVector2D)",
    "insertText": "ClampAxes(float MinAxisVal, float MaxAxisVal)"
  },
  {
    "label": "GetRotated()",
    "kind": "Method",
    "detail": "Function (} FDeprecateSlateVector2D)",
    "insertText": "GetRotated(float AngleDeg)"
  },
  {
    "label": "GetSafeNormal()",
    "kind": "Method",
    "detail": "Function (} FDeprecateSlateVector2D)",
    "insertText": "GetSafeNormal(float Tolerance=UE_SMALL_NUMBER)"
  },
  {
    "label": "ComponentwiseAllLessThan()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ComponentwiseAllLessThan(const UE::Slate::FDeprecateVector2DParameter& Other)"
  },
  {
    "label": "ComponentwiseAllGreaterThan()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComponentwiseAllGreaterThan(const UE::Slate::FDeprecateVector2DParameter& Other)"
  },
  {
    "label": "ComponentwiseAllLessOrEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComponentwiseAllLessOrEqual(const UE::Slate::FDeprecateVector2DParameter& Other)"
  },
  {
    "label": "ComponentwiseAllGreaterOrEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComponentwiseAllGreaterOrEqual(const UE::Slate::FDeprecateVector2DParameter& Other)"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT() FDeprecateSlateVector2D ClampAxes(double MinAxisVal, double MaxAxisVal)"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT() FDeprecateSlateVector2D GetRotated(double AngleDeg)"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT() FDeprecateSlateVector2D GetSafeNormal(double Tolerance)"
  },
  {
    "label": "UE_SLATE_BINARY_VECTOR_OPERATORS_A()",
    "kind": "Method",
    "detail": "Function (} public : # if UE_ENABLE_SLATE_VECTOR_DEPRECATION_MECHANISMS # define)",
    "insertText": "UE_SLATE_BINARY_VECTOR_OPERATORS_A(Type, ...)\\ __VA_ARGS__\\ friend FDeprecateSlateVector2D operator+(const Type& A, const FDeprecateSlateVector2D& B)"
  },
  {
    "label": "FDeprecateSlateVector2D()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "FDeprecateSlateVector2D(UE::Slate::CastToVector2f(A) + UE::Slate::CastToVector2f(B))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (\\ } \\ __VA_ARGS__ \\ FDeprecateSlateVector2D)",
    "insertText": "operator(const Type& A, const FDeprecateSlateVector2D& B)"
  },
  {
    "label": "FDeprecateSlateVector2D()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "FDeprecateSlateVector2D(UE::Slate::CastToVector2f(A) - UE::Slate::CastToVector2f(B))"
  },
  {
    "label": "FDeprecateSlateVector2D()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "FDeprecateSlateVector2D(UE::Slate::CastToVector2f(A) * UE::Slate::CastToVector2f(B))"
  },
  {
    "label": "FDeprecateSlateVector2D()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "FDeprecateSlateVector2D(UE::Slate::CastToVector2f(A) / UE::Slate::CastToVector2f(B))"
  },
  {
    "label": "CastToVector2f()",
    "kind": "Method",
    "detail": "Function (\\ return UE::)",
    "insertText": "CastToVector2f(A) == UE::Slate::CastToVector2f(B)"
  },
  {
    "label": "CastToVector2f()",
    "kind": "Method",
    "detail": "Function (\\ return UE::)",
    "insertText": "CastToVector2f(A) != UE::Slate::CastToVector2f(B)"
  },
  {
    "label": "UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_A()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_A(Type, ...)\\ __VA_ARGS__\\ friend Type& operator+=(Type& A, const FDeprecateSlateVector2D& B)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (\\ A =)",
    "insertText": "Type(FDeprecateSlateVector2D(UE::Slate::CastToVector2f(A) + UE::Slate::CastToVector2f(B)))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (\\ return A ; \\ } \\ __VA_ARGS__ \\ Type&)",
    "insertText": "operator(Type& A, const FDeprecateSlateVector2D& B)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (\\ A =)",
    "insertText": "Type(FDeprecateSlateVector2D(UE::Slate::CastToVector2f(A) - UE::Slate::CastToVector2f(B)))"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (\\ A =)",
    "insertText": "Type(FDeprecateSlateVector2D(UE::Slate::CastToVector2f(A) * UE::Slate::CastToVector2f(B)))"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (\\ A =)",
    "insertText": "Type(FDeprecateSlateVector2D(UE::Slate::CastToVector2f(A) / UE::Slate::CastToVector2f(B)))"
  },
  {
    "label": "UE_SLATE_BINARY_VECTOR_OPERATORS_B()",
    "kind": "Method",
    "detail": "Function (\\ return A ; \\ } # define)",
    "insertText": "UE_SLATE_BINARY_VECTOR_OPERATORS_B(Type, ...)\\ __VA_ARGS__\\ friend FDeprecateSlateVector2D operator+(const FDeprecateSlateVector2D& A, const Type& B)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (\\ } \\ __VA_ARGS__ \\ FDeprecateSlateVector2D)",
    "insertText": "operator(const FDeprecateSlateVector2D& A, const Type& B)"
  },
  {
    "label": "UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_B()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_B(Type, ...)\\ __VA_ARGS__\\ friend FDeprecateSlateVector2D& operator+=(FDeprecateSlateVector2D& A, const Type& B)"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (\\ static_cast<)",
    "insertText": "FVector2f(A) += UE::Slate::CastToVector2f(B)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (\\ return A ; \\ } \\ __VA_ARGS__ \\ FDeprecateSlateVector2D&)",
    "insertText": "operator(FDeprecateSlateVector2D& A, const Type& B)"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (\\ static_cast<)",
    "insertText": "FVector2f(A) -= UE::Slate::CastToVector2f(B)"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (\\ static_cast<)",
    "insertText": "FVector2f(A) *= UE::Slate::CastToVector2f(B)"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (\\ static_cast<)",
    "insertText": "FVector2f(A) /= UE::Slate::CastToVector2f(B)"
  },
  {
    "label": "UE_SLATE_BINARY_VECTOR_OPERATORS_A()",
    "kind": "Method",
    "detail": "Function (\\ return A ; \\ })",
    "insertText": "UE_SLATE_BINARY_VECTOR_OPERATORS_A(FIntPoint, UE_SLATE_VECTOR_DEPRECATED_DEFAULT()) UE_SLATE_BINARY_VECTOR_OPERATORS_B(FIntPoint, UE_SLATE_VECTOR_DEPRECATED_DEFAULT()) UE_SLATE_BINARY_VECTOR_OPERATORS_A(FVector2d, UE_SLATE_VECTOR_DEPRECATED_DEFAULT()) UE_SLATE_BINARY_VECTOR_OPERATORS_B(FVector2d, UE_SLATE_VECTOR_DEPRECATED_DEFAULT()) UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_A(FVector2d, UE_SLATE_VECTOR_DEPRECATED_DEFAULT()) UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_B(FVector2d, UE_SLATE_VECTOR_DEPRECATED_DEFAULT()) UE_SLATE_BINARY_VECTOR_OPERATORS_A(FVector2f, ) UE_SLATE_BINARY_VECTOR_OPERATORS_B(FVector2f, ) UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_A(FVector2f, ) UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_B(FVector2f, ) UE_SLATE_BINARY_VECTOR_OPERATORS_A(FDeprecateSlateVector2D, ) UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_A(FDeprecateSlateVector2D, ) friend FDeprecateSlateVector2D operator*(float A, const FDeprecateSlateVector2D& B)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FDeprecateSlateVector2D)",
    "insertText": "operator(const FDeprecateSlateVector2D& A, float B)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FDeprecateSlateVector2D)",
    "insertText": "operator(const FDeprecateSlateVector2D& In)"
  },
  {
    "label": "FDeprecateVector2DParameter()",
    "kind": "Method",
    "detail": "Function (} # undef UE_SLATE_BINARY_VECTOR_OPERATORS_A # undef UE_SLATE_BINARY_VECTOR_OPERATORS_B # undef UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_A # undef UE_SLATE_BINARY_ASSIGNMENT_VECTOR_OPERATORS_B # endif } ; template<> struct TStructOpsTypeTraits<FDeprecateSlateVector2D> : public TStructOpsTypeTraitsBase2<FDeprecateSlateVector2D> { enum { WithStructuredSerializer = true,WithStructuredSerializeFromMismatchedTag = true,} ; } ; # if UE_ENABLE_SLATE_VECTOR_DEPRECATION_MECHANISMS namespace UE::Slate { using FDeprecateVector2DResult = FDeprecateSlateVector2D ; struct FDeprecateVector2DParameter : FVector2f {)",
    "insertText": "FDeprecateVector2DParameter(float InX, float InY) : FVector2f(InX, InY)"
  },
  {
    "label": "FDeprecateVector2DParameter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDeprecateVector2DParameter(const FVector2f& InValue) : FVector2f(InValue)"
  },
  {
    "label": "FDeprecateVector2DParameter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDeprecateVector2DParameter(const FDeprecateVector2DResult& InValue) : FVector2f(InValue)"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT() FDeprecateVector2DParameter(double InX, double InY) : FVector2f(UE_REAL_TO_FLOAT(InX), UE_REAL_TO_FLOAT(InY))"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT() FDeprecateVector2DParameter(const FVector2d& InValue) : FVector2f(UE_REAL_TO_FLOAT(InValue.X), UE_REAL_TO_FLOAT(InValue.Y))"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT() FDeprecateVector2DParameter(const FIntPoint& InValue) : FVector2f(FloatCastChecked<float, double>(InValue.X, 1.0), FloatCastChecked<float, double>(InValue.Y, 1.0))"
  },
  {
    "label": "FDeprecateOptionalVector2DParameter()",
    "kind": "Method",
    "detail": "Function (} } ; struct FDeprecateOptionalVector2DParameter : TOptional<FVector2f> {)",
    "insertText": "FDeprecateOptionalVector2DParameter()"
  },
  {
    "label": "FDeprecateOptionalVector2DParameter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDeprecateOptionalVector2DParameter(const FVector2f& In) : TOptional<FVector2f>(In)"
  },
  {
    "label": "FDeprecateOptionalVector2DParameter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDeprecateOptionalVector2DParameter(const TOptional<FVector2f>& In) : TOptional<FVector2f>(In)"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT() FDeprecateOptionalVector2DParameter(const FVector2d& In) : TOptional<FVector2f>(CastToVector2f(In))"
  },
  {
    "label": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UE_SLATE_VECTOR_DEPRECATED_DEFAULT() FDeprecateOptionalVector2DParameter(const TOptional<FVector2d>& In)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (this ->)",
    "insertText": "Emplace(CastToVector2f(In.GetValue()))"
  },
  {
    "label": "TransformVector()",
    "kind": "Method",
    "detail": "Function (} UE::Slate::FDeprecateVector2DResult)",
    "insertText": "TransformVector(float Transform, const UE::Slate::FDeprecateVector2DResult& Vector)"
  },
  {
    "label": "TransformPoint()",
    "kind": "Method",
    "detail": "Function (} template<TransformType> UE::Slate::FDeprecateVector2DResult)",
    "insertText": "TransformPoint(const TransformType& Transform, const UE::Slate::FDeprecateVector2DResult& Point)"
  },
  {
    "label": "TransformVector()",
    "kind": "Method",
    "detail": "Function (} template<TransformType> UE::Slate::FDeprecateVector2DResult)",
    "insertText": "TransformVector(const TransformType& Transform, const UE::Slate::FDeprecateVector2DResult& Point)"
  },
  {
    "label": "ensureAlways()",
    "kind": "Method",
    "detail": "Function (# if 0)",
    "insertText": "ensureAlways(FMath::IsNearlyEqual((double)X, InValue.X))"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (# endif return)",
    "insertText": "FVector2f(X, Y)"
  }
]