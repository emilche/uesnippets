[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UAnyButtonInputBehavior",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnyButtonInputBehavior"
  },
  {
    "label": "UAnyButtonInputBehavior()",
    "kind": "Method",
    "detail": "Function (INTERACTIVETOOLSFRAMEWORK_API)",
    "insertText": "UAnyButtonInputBehavior()"
  },
  {
    "label": "IsPressed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPressed(const FInputDeviceState& input)"
  },
  {
    "label": "IsDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDown(const FInputDeviceState& input)"
  },
  {
    "label": "IsReleased()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReleased(const FInputDeviceState& input)"
  },
  {
    "label": "IsDoubleClicked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDoubleClicked(const FInputDeviceState& input)"
  },
  {
    "label": "GetClickPoint()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetClickPoint(const FInputDeviceState& input)"
  },
  {
    "label": "GetWorldRay()",
    "kind": "Method",
    "detail": "Function (FRay)",
    "insertText": "GetWorldRay(const FInputDeviceState& input)"
  },
  {
    "label": "GetDeviceRay()",
    "kind": "Method",
    "detail": "Function (FInputDeviceRay)",
    "insertText": "GetDeviceRay(const FInputDeviceState& input)"
  },
  {
    "label": "SetUseLeftMouseButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseLeftMouseButton()"
  },
  {
    "label": "SetUseMiddleMouseButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseMiddleMouseButton()"
  },
  {
    "label": "SetUseRightMouseButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseRightMouseButton()"
  },
  {
    "label": "GetButtonStateFunc()",
    "kind": "Method",
    "detail": "Function (FDeviceButtonState)",
    "insertText": "GetButtonStateFunc(const FInputDeviceState& Input)"
  }
]