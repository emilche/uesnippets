[
  {
    "label": "ID3D11Device",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11Device"
  },
  {
    "label": "ID3D11Texture2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11Texture2D"
  },
  {
    "label": "ID3D12Device",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12Device"
  },
  {
    "label": "ID3D12Resource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12Resource"
  },
  {
    "label": "AMFVulkanSurface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AMFVulkanSurface"
  },
  {
    "label": "FVideoEncoderInputFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVideoEncoderInputFrame"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CreateDummy()",
    "kind": "Method",
    "detail": "Function (public : TSharedPtr<FVideoEncoderInput>)",
    "insertText": "CreateDummy(bool isResizable = false)"
  },
  {
    "label": "CreateForYUV420P()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FVideoEncoderInput>)",
    "insertText": "CreateForYUV420P(uint32 InWidth, uint32 InHeight, bool isResizable = false)"
  },
  {
    "label": "CreateForD3D11()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FVideoEncoderInput>)",
    "insertText": "CreateForD3D11(void* InApplicationD3D11Device, bool IsResizable = false, bool IsShared = false)"
  },
  {
    "label": "CreateForD3D12()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FVideoEncoderInput>)",
    "insertText": "CreateForD3D12(void* InApplicationD3D12Device, bool IsResizable = false, bool IsShared = false)"
  },
  {
    "label": "CreateForCUDA()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FVideoEncoderInput>)",
    "insertText": "CreateForCUDA(void* InApplicationCudaContext, bool IsResizable = false)"
  },
  {
    "label": "CreateForVulkan()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FVideoEncoderInput>)",
    "insertText": "CreateForVulkan(void* InApplicationVulkanData, bool IsResizable = false)"
  },
  {
    "label": "SetMaxNumBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxNumBuffers(uint32 InMaxNumBuffers)"
  },
  {
    "label": "GetFrameFormat()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS EVideoFrameFormat)",
    "insertText": "GetFrameFormat()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS using OnFrameReleasedCallback = TFunction<)",
    "insertText": "void(const FVideoEncoderInputFrame*)"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (FVideoEncoderInputFrame*)",
    "insertText": "CreateBuffer(OnFrameReleasedCallback InOnFrameReleased)"
  },
  {
    "label": "DestroyBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyBuffer(FVideoEncoderInputFrame* Buffer)"
  },
  {
    "label": "ObtainInputFrame()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FVideoEncoderInputFrame>)",
    "insertText": "ObtainInputFrame()"
  },
  {
    "label": "ReleaseInputFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseInputFrame(FVideoEncoderInputFrame* InFrame)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "GetD3D11EncoderDevice()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_WINDOWS TRefCountPtr<ID3D11Device>)",
    "insertText": "GetD3D11EncoderDevice()"
  },
  {
    "label": "GetD3D12EncoderDevice()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<ID3D12Device>)",
    "insertText": "GetD3D12EncoderDevice()"
  },
  {
    "label": "GetCUDAEncoderContext()",
    "kind": "Method",
    "detail": "Function (# endif CUcontext)",
    "insertText": "GetCUDAEncoderContext()"
  },
  {
    "label": "GetVulkanEncoderDevice()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_DESKTOP&& ! PLATFORM_APPLE void*)",
    "insertText": "GetVulkanEncoderDevice()"
  },
  {
    "label": "FVideoEncoderInput()",
    "kind": "Method",
    "detail": "Function (# endif protected :)",
    "insertText": "FVideoEncoderInput()"
  },
  {
    "label": "FVideoEncoderInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVideoEncoderInput(const FVideoEncoderInput&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FVideoEncoderInput&)",
    "insertText": "operator(const FVideoEncoderInput&)"
  },
  {
    "label": "Obtain()",
    "kind": "Method",
    "detail": "Function (public : const FVideoEncoderInputFrame*)",
    "insertText": "Obtain()"
  },
  {
    "label": "Increment()",
    "kind": "Method",
    "detail": "Function (NumReferences .)",
    "insertText": "Increment()"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (const FVideoEncoderInputFrame*)",
    "insertText": "Clone(FCloneDestroyedCallback InCloneDestroyedCallback)"
  },
  {
    "label": "SetFrameID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameID(uint32 id)"
  },
  {
    "label": "GetFrameID()",
    "kind": "Method",
    "detail": "Function (FrameID = id ; } uint32)",
    "insertText": "GetFrameID()"
  },
  {
    "label": "GetTimestampUs()",
    "kind": "Method",
    "detail": "Function (TimestampUs = timestampUs ; } int64)",
    "insertText": "GetTimestampUs()"
  },
  {
    "label": "GetTimestampRTP()",
    "kind": "Method",
    "detail": "Function (TimestampRTP = timestampRTP ; } int64)",
    "insertText": "GetTimestampRTP()"
  },
  {
    "label": "GetWidth()",
    "kind": "Method",
    "detail": "Function (Width = InWidth ; } uint32)",
    "insertText": "GetWidth()"
  },
  {
    "label": "GetHeight()",
    "kind": "Method",
    "detail": "Function (Height = InHeight ; } uint32)",
    "insertText": "GetHeight()"
  },
  {
    "label": "AllocateYUV420P()",
    "kind": "Method",
    "detail": "Function (const uint8* Data [ 3 ] = { nullptr,nullptr,nullptr } ; uint32 StrideY = 0 ; uint32 StrideU = 0 ; uint32 StrideV = 0 ; } ; void)",
    "insertText": "AllocateYUV420P()"
  },
  {
    "label": "GetYUV420P()",
    "kind": "Method",
    "detail": "Function (const FYUV420P&)",
    "insertText": "GetYUV420P()"
  },
  {
    "label": "GetD3D11()",
    "kind": "Method",
    "detail": "Function (ID3D11Texture2D* Texture = nullptr ; ID3D11Device* EncoderDevice = nullptr ; ID3D11Texture2D* EncoderTexture = nullptr ; void* SharedHandle = nullptr ; } ; const FD3D11&)",
    "insertText": "GetD3D11()"
  },
  {
    "label": "SetTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTexture(ID3D11Texture2D* InTexture, FReleaseD3D11TextureCallback InOnReleaseD3D11Texture)"
  },
  {
    "label": "GetD3D12()",
    "kind": "Method",
    "detail": "Function (ID3D12Resource* Texture = nullptr ; ID3D12Device* EncoderDevice = nullptr ; ID3D12Resource* EncoderTexture = nullptr ; } ; const FD3D12&)",
    "insertText": "GetD3D12()"
  },
  {
    "label": "SetTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTexture(ID3D12Resource* InTexture, FReleaseD3D12TextureCallback InOnReleaseD3D11Texture)"
  },
  {
    "label": "GetCUDA()",
    "kind": "Method",
    "detail": "Function (CUarray EncoderTexture = nullptr ; CUcontext EncoderDevice = nullptr ; void* SharedHandle = nullptr ; PRAGMA_DISABLE_DEPRECATION_WARNINGS EUnderlyingRHI UnderlyingRHI = EUnderlyingRHI::Undefined ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } ; const FCUDA&)",
    "insertText": "GetCUDA()"
  },
  {
    "label": "SetTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTexture(CUarray InTexture, EUnderlyingRHI UnderlyingRHI, void* SharedHandle, FReleaseCUDATextureCallback InOnReleaseTexture)"
  },
  {
    "label": "GetVulkan()",
    "kind": "Method",
    "detail": "Function (VkImage EncoderTexture = VK_NULL_HANDLE ; VkDeviceMemory EncoderDeviceMemory ; uint64 EncoderMemorySize = 0 ; VkDevice EncoderDevice ; void* EncoderSurface = nullptr ; } ; const FVulkan&)",
    "insertText": "GetVulkan()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (using FReleaseVulkanSurfaceCallback = TFunction<)",
    "insertText": "void(void*)"
  },
  {
    "label": "SetTexture()",
    "kind": "Method",
    "detail": "Function (FReleaseVulkanSurfaceCallback OnReleaseVulkanSurface ; void)",
    "insertText": "SetTexture(VkImage InTexture, FReleaseVulkanTextureCallback InOnReleaseTexture)"
  },
  {
    "label": "SetTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTexture(VkImage InTexture, VkDeviceMemory InTextureDeviceMemory, uint64 InTextureSize, FReleaseVulkanTextureCallback InOnReleaseTexture)"
  },
  {
    "label": "FVideoEncoderInputFrame()",
    "kind": "Method",
    "detail": "Function (# endif ~)",
    "insertText": "FVideoEncoderInputFrame()"
  },
  {
    "label": "FVideoEncoderInputFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVideoEncoderInputFrame(const FVideoEncoderInputFrame& CloneFrom)"
  }
]