[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSplineIKCachedBoneData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSplineIKCachedBoneData"
  },
  {
    "label": "FAnimNode_SplineIK",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SplineIK"
  },
  {
    "label": "FAnimNode_SplineIK()",
    "kind": "Method",
    "detail": "Function (ANIMGRAPHRUNTIME_API)",
    "insertText": "FAnimNode_SplineIK()"
  },
  {
    "label": "SetControlPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetControlPoint(int32 TransformIndex, const FTransform& InTransform)"
  },
  {
    "label": "SetControlPointLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetControlPointLocation(int32 TransformIndex, const FVector& InLocation)"
  },
  {
    "label": "SetControlPointRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetControlPointRotation(int32 TransformIndex, const FQuat& InRotation)"
  },
  {
    "label": "SetControlPointScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetControlPointScale(int32 TransformIndex, const FVector& InScale)"
  },
  {
    "label": "GatherBoneReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherBoneReferences(const FReferenceSkeleton& RefSkeleton)"
  },
  {
    "label": "BuildBoneSpline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildBoneSpline(const FReferenceSkeleton& RefSkeleton)"
  },
  {
    "label": "TransformSpline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformSpline()"
  },
  {
    "label": "FindParamAtFirstSphereIntersection()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "FindParamAtFirstSphereIntersection(const FVector& InOrigin, float InRadius, int32& StartingLinearIndex)"
  },
  {
    "label": "GetTwist()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTwist(float InAlpha, float TotalSplineAlpha)"
  }
]