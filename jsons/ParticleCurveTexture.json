[
  {
    "label": "FTexelAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTexelAllocation"
  },
  {
    "label": "FTexelAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexelAllocator"
  },
  {
    "label": "FBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlock"
  },
  {
    "label": "FCurveSamples",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveSamples"
  },
  {
    "label": "FParticleCurveTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleCurveTexture"
  },
  {
    "label": "FTexelAllocation()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RenderResource . h \" const int32 GParticleCurveTextureSizeX ; const int32 GParticleCurveTextureSizeY ; struct FTexelAllocation { uint16 X ; uint16 Y ; uint16 Size ;)",
    "insertText": "FTexelAllocation() : X(0) , Y(0) , Size(0)"
  },
  {
    "label": "FTexelAllocator()",
    "kind": "Method",
    "detail": "Function (} } ; class FTexelAllocator { public :)",
    "insertText": "FTexelAllocator(const int32 InTextureSizeX, const int32 InTextureSizeY)"
  },
  {
    "label": "FTexelAllocator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTexelAllocator()"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (FTexelAllocation)",
    "insertText": "Allocate(int32 Size)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(FTexelAllocation Allocation)"
  },
  {
    "label": "GetBlock()",
    "kind": "Method",
    "detail": "Function (private : struct FBlock { FBlock* Next ; uint16 Begin ; uint16 Size ; } ; FBlock*)",
    "insertText": "GetBlock()"
  },
  {
    "label": "ReturnBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReturnBlock(FBlock* Block)"
  },
  {
    "label": "FParticleCurveTexture()",
    "kind": "Method",
    "detail": "Function (TArray<FBlock*> FreeBlocks ; FBlock* BlockPool ; int32 BlockCount ; int32 TextureSizeX ; int32 TextureSizeY ; int32 FreeTexels ; } ; struct FCurveSamples { FColor* Samples ; FTexelAllocation TexelAllocation ; } ; class FParticleCurveTexture : public FRenderResource { public :)",
    "insertText": "FParticleCurveTexture()"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "AddCurve()",
    "kind": "Method",
    "detail": "Function (FTexelAllocation)",
    "insertText": "AddCurve(const TArray<FColor>& CurveSamples)"
  },
  {
    "label": "RemoveCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCurve(FTexelAllocation TexelAllocation)"
  },
  {
    "label": "ComputeCurveScaleBias()",
    "kind": "Method",
    "detail": "Function (FVector4f)",
    "insertText": "ComputeCurveScaleBias(FTexelAllocation TexelAllocation)"
  },
  {
    "label": "GetCurveTexture()",
    "kind": "Method",
    "detail": "Function (FRHITexture*)",
    "insertText": "GetCurveTexture()"
  }
]