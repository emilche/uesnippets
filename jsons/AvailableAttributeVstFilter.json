[
  {
    "label": "SBuildVersionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SBuildVersionInfo"
  },
  {
    "label": "VERSECOMPILER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VERSECOMPILER_API"
  },
  {
    "label": "CAvailableAttributeVstFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" uLang / Common / Containers / SharedPointer . h \" # include \" uLang / CompilerPasses / IPostVstFilter . h \" namespace uLang { struct SBuildVersionInfo { uint32_t UploadedAtFNVersion ; } ; class CAvailableAttributeVstFilter final : public IPostVstFilter { public :)",
    "insertText": "CAvailableAttributeVstFilter()"
  },
  {
    "label": "Filter()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Filter(const TSRef<Verse::Vst::Snippet>& VstSnippet, const SBuildContext& BuildParams)"
  },
  {
    "label": "StaticFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StaticFilter(VstSnippet.As<Verse::Vst::Node>(), BuildParams)"
  },
  {
    "label": "StaticFilter()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StaticFilter(const TSRef<Verse::Vst::Node>& VstNode, const SBuildContext& BuildParams)"
  },
  {
    "label": "StaticFilterHelper()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "StaticFilterHelper(const TSRef<Verse::Vst::Node>& VstNode, const SBuildContext& BuildParams, const SBuildVersionInfo& BuildVersion)"
  }
]