[
  {
    "label": "BrowserWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BrowserWindow"
  },
  {
    "label": "Delegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Delegate"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "base"
  },
  {
    "label": "OnBrowserCreated()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_TESTS_CEFCLIENT_BROWSER_BROWSER_WINDOW_H_ # define CEF_TESTS_CEFCLIENT_BROWSER_BROWSER_WINDOW_H_ # pragma once # include \" include / base / cef_scoped_ptr . h \" # include \" include / cef_browser . h \" # include \" tests / cefclient / browser / client_handler . h \" # include \" tests / cefclient / browser / client_types . h \" namespace client { class BrowserWindow : public ClientHandler::Delegate { public : class Delegate { public : void)",
    "insertText": "OnBrowserCreated(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "OnBrowserWindowClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBrowserWindowClosing()"
  },
  {
    "label": "OnBrowserWindowDestroyed()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnBrowserWindowDestroyed()"
  },
  {
    "label": "OnSetAddress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetAddress(const std::string& url)"
  },
  {
    "label": "OnSetTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetTitle(const std::string& title)"
  },
  {
    "label": "OnSetFullscreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetFullscreen(bool fullscreen)"
  },
  {
    "label": "OnAutoResize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAutoResize(const CefSize& new_size)"
  },
  {
    "label": "OnSetLoadingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetLoadingState(bool isLoading, bool canGoBack, bool canGoForward)"
  },
  {
    "label": "OnSetDraggableRegions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetDraggableRegions(const std::vector<CefDraggableRegion>& regions)"
  },
  {
    "label": "Delegate()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "Delegate()"
  },
  {
    "label": "CreateBrowser()",
    "kind": "Method",
    "detail": "Function (} } ; void)",
    "insertText": "CreateBrowser(ClientWindowHandle parent_handle, const CefRect& rect, const CefBrowserSettings& settings, CefRefPtr<CefDictionaryValue> extra_info, CefRefPtr<CefRequestContext> request_context)"
  },
  {
    "label": "GetPopupConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPopupConfig(CefWindowHandle temp_handle, CefWindowInfo& windowInfo, CefRefPtr<CefClient>& client, CefBrowserSettings& settings)"
  },
  {
    "label": "ShowPopup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowPopup(ClientWindowHandle parent_handle, int x, int y, size_t width, size_t height)"
  },
  {
    "label": "Show()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Show()"
  },
  {
    "label": "Hide()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Hide()"
  },
  {
    "label": "SetBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBounds(int x, int y, size_t width, size_t height)"
  },
  {
    "label": "SetFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFocus(bool focus)"
  },
  {
    "label": "SetDeviceScaleFactor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDeviceScaleFactor(float device_scale_factor)"
  },
  {
    "label": "GetDeviceScaleFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDeviceScaleFactor()"
  },
  {
    "label": "GetWindowHandle()",
    "kind": "Method",
    "detail": "Function (ClientWindowHandle)",
    "insertText": "GetWindowHandle()"
  },
  {
    "label": "GetBrowser()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefBrowser>)",
    "insertText": "GetBrowser()"
  },
  {
    "label": "IsClosing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClosing()"
  },
  {
    "label": "BrowserWindow()",
    "kind": "Method",
    "detail": "Function (protected : struct base::DefaultDeleter<BrowserWindow> ;)",
    "insertText": "BrowserWindow(Delegate* delegate)"
  },
  {
    "label": "OnBrowserClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBrowserClosing(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "OnBrowserClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBrowserClosed(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (Delegate* delegate_ ; CefRefPtr<CefBrowser> browser_ ; CefRefPtr<ClientHandler> client_handler_ ; bool is_closing_ ; private :)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(BrowserWindow)"
  }
]