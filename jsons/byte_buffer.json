[
  {
    "label": "BufferClassT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BufferClassT"
  },
  {
    "label": "ByteBufferWriterT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ByteBufferWriterT"
  },
  {
    "label": "ByteBufferWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ByteBufferWriter"
  },
  {
    "label": "ByteBufferReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ByteBufferReader"
  },
  {
    "label": "ByteBufferWriterT()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_BYTE_BUFFER_H_ # define RTC_BASE_BYTE_BUFFER_H_ # include<stddef . h> # include<stdint . h> # include<string> # include \" absl / strings / string_view . h \" # include \" rtc_base / buffer . h \" # include \" rtc_base / byte_order . h \" namespace rtc { template<class BufferClassT> class ByteBufferWriterT { public :)",
    "insertText": "ByteBufferWriterT()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(nullptr, kDefaultCapacity)"
  },
  {
    "label": "ByteBufferWriterT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ByteBufferWriterT(const char* bytes, size_t len)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(bytes, len)"
  },
  {
    "label": "ByteBufferWriterT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ByteBufferWriterT(const ByteBufferWriterT&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ByteBufferWriterT&)",
    "insertText": "operator(const ByteBufferWriterT&)"
  },
  {
    "label": "Data()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "Data()"
  },
  {
    "label": "Length()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "Length()"
  },
  {
    "label": "Capacity()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "Capacity()"
  },
  {
    "label": "WriteUInt8()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteUInt8(uint8_t val)"
  },
  {
    "label": "WriteBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteBytes(reinterpret_cast<const char*>(&val), 1)"
  },
  {
    "label": "WriteUInt16()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteUInt16(uint16_t val)"
  },
  {
    "label": "HostToNetwork16()",
    "kind": "Method",
    "detail": "Function (uint16_t v =)",
    "insertText": "HostToNetwork16(val)"
  },
  {
    "label": "WriteBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteBytes(reinterpret_cast<const char*>(&v), 2)"
  },
  {
    "label": "WriteUInt24()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteUInt24(uint32_t val)"
  },
  {
    "label": "HostToNetwork32()",
    "kind": "Method",
    "detail": "Function (uint32_t v =)",
    "insertText": "HostToNetwork32(val)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (char* start = reinterpret_cast<)",
    "insertText": "char(&v)"
  },
  {
    "label": "WriteBytes()",
    "kind": "Method",
    "detail": "Function (+ + start ;)",
    "insertText": "WriteBytes(start, 3)"
  },
  {
    "label": "WriteUInt32()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteUInt32(uint32_t val)"
  },
  {
    "label": "WriteBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteBytes(reinterpret_cast<const char*>(&v), 4)"
  },
  {
    "label": "WriteUInt64()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteUInt64(uint64_t val)"
  },
  {
    "label": "HostToNetwork64()",
    "kind": "Method",
    "detail": "Function (uint64_t v =)",
    "insertText": "HostToNetwork64(val)"
  },
  {
    "label": "WriteBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteBytes(reinterpret_cast<const char*>(&v), 8)"
  },
  {
    "label": "WriteUVarint()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteUVarint(uint64_t val)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (char byte = static_cast<)",
    "insertText": "char(val)"
  },
  {
    "label": "WriteBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteBytes(&byte, 1)"
  },
  {
    "label": "WriteBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteBytes(&last_byte, 1)"
  },
  {
    "label": "WriteString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteString(absl::string_view val)"
  },
  {
    "label": "WriteBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteBytes(val.data(), val.size())"
  },
  {
    "label": "WriteBytes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteBytes(const char* val, size_t len)"
  },
  {
    "label": "AppendData()",
    "kind": "Method",
    "detail": "Function (buffer_ .)",
    "insertText": "AppendData(val, len)"
  },
  {
    "label": "ReserveWriteBuffer()",
    "kind": "Method",
    "detail": "Function (} char*)",
    "insertText": "ReserveWriteBuffer(size_t len)"
  },
  {
    "label": "SetSize()",
    "kind": "Method",
    "detail": "Function (buffer_ .)",
    "insertText": "SetSize(buffer_.size() + len)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Resize(size_t size)"
  },
  {
    "label": "SetSize()",
    "kind": "Method",
    "detail": "Function (buffer_ .)",
    "insertText": "SetSize(size)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Clear()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (} private : size_t kDefaultCapacity = 4 0 9 6 ; void)",
    "insertText": "Construct(const char* bytes, size_t size)"
  },
  {
    "label": "AppendData()",
    "kind": "Method",
    "detail": "Function (buffer_ .)",
    "insertText": "AppendData(bytes, size)"
  },
  {
    "label": "EnsureCapacity()",
    "kind": "Method",
    "detail": "Function (} else { buffer_ .)",
    "insertText": "EnsureCapacity(size)"
  },
  {
    "label": "ByteBufferWriter()",
    "kind": "Method",
    "detail": "Function (} } BufferClassT buffer_ ; } ; class ByteBufferWriter : public ByteBufferWriterT<BufferT<char>> { public :)",
    "insertText": "ByteBufferWriter()"
  },
  {
    "label": "ByteBufferWriter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ByteBufferWriter(const char* bytes, size_t len)"
  },
  {
    "label": "ByteBufferWriter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ByteBufferWriter(const ByteBufferWriter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ByteBufferWriter&)",
    "insertText": "operator(const ByteBufferWriter&)"
  },
  {
    "label": "ByteBufferReader()",
    "kind": "Method",
    "detail": "Function (} ; class ByteBufferReader { public :)",
    "insertText": "ByteBufferReader(const char* bytes, size_t len)"
  },
  {
    "label": "ByteBufferReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ByteBufferReader(const char* bytes)"
  },
  {
    "label": "ByteBufferReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ByteBufferReader(const Buffer& buf)"
  },
  {
    "label": "ByteBufferReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ByteBufferReader(const ByteBufferWriter& buf)"
  },
  {
    "label": "ByteBufferReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ByteBufferReader(const ByteBufferReader&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ByteBufferReader&)",
    "insertText": "operator(const ByteBufferReader&)"
  },
  {
    "label": "ReadUInt16()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadUInt16(uint16_t* val)"
  },
  {
    "label": "ReadUInt24()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadUInt24(uint32_t* val)"
  },
  {
    "label": "ReadUInt32()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadUInt32(uint32_t* val)"
  },
  {
    "label": "ReadUInt64()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadUInt64(uint64_t* val)"
  },
  {
    "label": "ReadUVarint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadUVarint(uint64_t* val)"
  },
  {
    "label": "ReadBytes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadBytes(char* val, size_t len)"
  },
  {
    "label": "ReadString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadString(std::string* val, size_t len)"
  },
  {
    "label": "Consume()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Consume(size_t size)"
  }
]