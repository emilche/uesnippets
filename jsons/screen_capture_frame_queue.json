[
  {
    "label": "ScreenCaptureFrameQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScreenCaptureFrameQueue"
  },
  {
    "label": "ScreenCaptureFrameQueue()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_SCREEN_CAPTURE_FRAME_QUEUE_H_ # define MODULES_DESKTOP_CAPTURE_SCREEN_CAPTURE_FRAME_QUEUE_H_ # include<memory> namespace webrtc { template<FrameType> class ScreenCaptureFrameQueue { public :)",
    "insertText": "ScreenCaptureFrameQueue()"
  },
  {
    "label": "ScreenCaptureFrameQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScreenCaptureFrameQueue(const ScreenCaptureFrameQueue&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScreenCaptureFrameQueue&)",
    "insertText": "operator(const ScreenCaptureFrameQueue&)"
  },
  {
    "label": "MoveToNextFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveToNextFrame()"
  },
  {
    "label": "current_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "current_(current_ + 1)"
  },
  {
    "label": "ReplaceCurrentFrame()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReplaceCurrentFrame(std::unique_ptr<FrameType> frame)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (frames_ [ current_ ] =)",
    "insertText": "move(frame)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (frames_ [ i ] .)",
    "insertText": "reset()"
  },
  {
    "label": "current_frame()",
    "kind": "Method",
    "detail": "Function (} current_ = 0 ; } FrameType*)",
    "insertText": "current_frame()"
  },
  {
    "label": "previous_frame()",
    "kind": "Method",
    "detail": "Function (} FrameType*)",
    "insertText": "previous_frame()"
  }
]