[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FWorldTileLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldTileLayer"
  },
  {
    "label": "FWorldTileLODInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldTileLODInfo"
  },
  {
    "label": "FWorldTileInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldTileInfo"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Math / Box . h \" # include \" Math / IntPoint . h \" # include \" Math / IntVector . h \" # include \" Math / UnrealMathSSE . h \" # include \" Math / Vector . h \" # include \" Serialization / StructuredArchive . h \" class FArchive ; # define WORLDTILE_LOD_PACKAGE_SUFFIX)",
    "insertText": "TEXT(\"_LOD\")"
  },
  {
    "label": "FWorldTileLayer()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FWorldTileLayer() : Name(TEXT(\"Uncategorized\")) , Reserved0(0) , Reserved1(ForceInit) , StreamingDistance(50000) , DistanceStreamingEnabled(true)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FWorldTileLayer& OtherLayer)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FWorldTileLayer& D)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(FStructuredArchive::FSlot Slot, FWorldTileLayer& D)"
  },
  {
    "label": "FWorldTileLODInfo()",
    "kind": "Method",
    "detail": "Function (public : FString Name ; int32 Reserved0 ; FIntPoint Reserved1 ; int32 StreamingDistance ; bool DistanceStreamingEnabled ; } ; class FWorldTileLODInfo { public :)",
    "insertText": "FWorldTileLODInfo() : RelativeStreamingDistance(10000) , Reserved0(0) , Reserved1(0) , Reserved2(0) , Reserved3(0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FWorldTileLODInfo& OtherInfo)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FWorldTileInfo& D)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(FStructuredArchive::FSlot Slot, FWorldTileInfo& D)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FWorldTileInfo& OtherInfo)"
  },
  {
    "label": "GetStreamingDistance()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetStreamingDistance(int32 LODIndex)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int32 Distance = Layer . StreamingDistance ;)",
    "insertText": "if(LODList.IsValidIndex(LODIndex))"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (Distance + = LODList [ LODIndex ] . RelativeStreamingDistance ; } return Distance ; } bool)",
    "insertText": "Read(const FString& InPackageFileName, FWorldTileInfo& OutInfo)"
  }
]