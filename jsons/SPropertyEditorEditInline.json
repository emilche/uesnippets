[
  {
    "label": "SPropertyEditorEditInline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyEditorEditInline"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Widgets / SWidget . h \" # include \" Styling / AppStyle . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Presentation / PropertyEditor / PropertyEditor . h \" # include \" UserInterface / PropertyEditor / PropertyEditorConstants . h \" # include \" Widgets / Input / SComboButton . h \" # include \" ClassViewerModule . h \" class SPropertyEditorEditInline : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPropertyEditorEditInline ) : _Font( FAppStyle::GetFontStyle( PropertyEditorConstants::PropertyFontStyle ))"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FSlateFontInfo, Font ) SLATE_END_ARGS() static bool Supports( const TSharedRef< class FPropertyEditor >& InPropertyEditor)"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports(const FPropertyNode* InTreeNode, int32 InArrayIdx)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef< class FPropertyEditor >& InPropertyEditor)"
  },
  {
    "label": "GetDesiredWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDesiredWidth(float& OutMinDesiredWidth, float& OutMaxDesiredWidth)"
  },
  {
    "label": "GenerateClassPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateClassPicker(TSharedRef<IPropertyHandle> PropertyHandle, FOnClassPicked OnPicked, TSharedPtr<IClassViewerFilter> AdditionalClassFilter)"
  },
  {
    "label": "OnClassPicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClassPicked(UClass* InClass, TSharedRef<IPropertyHandle> PropertyHandle, EPropertyValueSetFlags::Type Flags=EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "IsValueEnabled()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsValueEnabled(TWeakPtr<IPropertyHandle> WeakHandlePtr)"
  },
  {
    "label": "GetDisplayValueAsString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayValueAsString()"
  },
  {
    "label": "GetDisplayValueIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetDisplayValueIcon()"
  },
  {
    "label": "OnClassPickedInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClassPickedInternal(UClass* InClass, TSharedRef<IPropertyHandle> PropertyHandle)"
  }
]