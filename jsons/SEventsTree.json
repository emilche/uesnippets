[
  {
    "label": "PROFILEVISUALIZER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PROFILEVISUALIZER_API"
  },
  {
    "label": "PROFILEVISUALIZER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PROFILEVISUALIZER_API"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView )"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "HandleBarGraphSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBarGraphSelectionChanged( TSharedPtr< FVisualizerEvent > Selection )"
  },
  {
    "label": "HandleBarGraphExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBarGraphExpansionChanged( TSharedPtr< FVisualizerEvent > Selection )"
  },
  {
    "label": "HandleBarEventSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBarEventSelectionChanged( int32 Thread, TSharedPtr< FVisualizerEvent > Selection )"
  },
  {
    "label": "OnEventSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEventSelectionChanged( TSharedPtr< FVisualizerEvent > Selection, ESelectInfo::Type SelectInfo )"
  },
  {
    "label": "OnGetChildrenForEventsList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForEventsList( TSharedPtr<FVisualizerEvent> InItem, TArray<TSharedPtr<FVisualizerEvent> >& OutChildren )"
  },
  {
    "label": "OnColumnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnSortModeChanged( const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode )"
  },
  {
    "label": "GetColumnSortMode()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetColumnSortMode( const FName ColumnId )"
  },
  {
    "label": "SortEventsList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortEventsList( void )"
  },
  {
    "label": "SortEventsList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortEventsList( TArray< TSharedPtr< FVisualizerEvent > >& Events )"
  },
  {
    "label": "RestoreEventSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RestoreEventSelection( TArray< TSharedPtr< FVisualizerEvent > >& Events )"
  },
  {
    "label": "SetDurationUnits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDurationUnits( EVisualizerTimeUnits::Type InUnits )"
  },
  {
    "label": "CountEvents()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CountEvents( TArray< TSharedPtr< FVisualizerEvent > >& Events )"
  },
  {
    "label": "CreateSelectedEventsView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSelectedEventsView()"
  },
  {
    "label": "CreateSelectedEventsViewRecursivelyAndFlatten()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSelectedEventsViewRecursivelyAndFlatten( TSharedPtr< FVisualizerEvent > SourceEvent )"
  },
  {
    "label": "CreateSelectedEventsViewRecursivelyCoalesced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSelectedEventsViewRecursivelyCoalesced( TArray< TSharedPtr< FVisualizerEvent > >& SourceEvents, TArray< TSharedPtr< FVisualizerEvent > >& CopiedEvents, TSharedPtr< FVisualizerEvent > InParent )"
  },
  {
    "label": "CreateSelectedEventsViewRecursivelyFlatCoalesced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSelectedEventsViewRecursivelyFlatCoalesced( TArray< TSharedPtr< FVisualizerEvent > >& SourceEvents )"
  },
  {
    "label": "SetViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewMode( EVisualizerViewMode::Type InMode )"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged( const FText& InFilterText )"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted( const FText& InFilterText, ETextCommit::Type CommitInfo )"
  }
]