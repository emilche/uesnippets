[
  {
    "label": "PROFILEVISUALIZER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PROFILEVISUALIZER_API"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STreeView . h \" # include \" VisualizerEvents . h \" class SEventItem : public SMultiColumnTableRow<TSharedPtr<FVisualizerEvent>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SEventItem ) : _EventName() , _EventDuration(0.0)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FString, EventName ) SLATE_ATTRIBUTE( double, EventDuration ) SLATE_END_ARGS() virtual TSharedRef< SWidget > GenerateWidgetForColumn( const FName& ColumnName)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "GetDurationText()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "GetDurationText()"
  },
  {
    "label": "FNumberFormattingOptions()",
    "kind": "Method",
    "detail": "Function (const FNumberFormattingOptions DurationFormatOptions =)",
    "insertText": "FNumberFormattingOptions() .SetMinimumFractionalDigits(2) .SetMaximumFractionalDigits(2)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (} FString EventName ; TAttribute<double> EventDuration ; } ; class SEventsTree : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnEventSelectionChanged, TSharedPtr< FVisualizerEvent >)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SEventsTree ) : _ProfileData() , _OnEventSelectionChanged()"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TSharedPtr< FVisualizerEvent >, ProfileData ) SLATE_EVENT( FOnEventSelectionChanged, OnEventSelectionChanged ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "HandleBarGraphSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBarGraphSelectionChanged(TSharedPtr< FVisualizerEvent > Selection)"
  },
  {
    "label": "HandleBarGraphExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBarGraphExpansionChanged(TSharedPtr< FVisualizerEvent > Selection)"
  },
  {
    "label": "HandleBarEventSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBarEventSelectionChanged(int32 Thread, TSharedPtr< FVisualizerEvent > Selection)"
  },
  {
    "label": "GetTabTitle()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTabTitle()"
  },
  {
    "label": "OnEventSelectionChanged()",
    "kind": "Method",
    "detail": "Function (FName NAME_NameColumn ; FName NAME_DurationColumn ; protected : void)",
    "insertText": "OnEventSelectionChanged(TSharedPtr< FVisualizerEvent > Selection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnGenerateWidgetForEventsList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateWidgetForEventsList(TSharedPtr< FVisualizerEvent > InItem, const TSharedRef< STableViewBase >& OwnerTable)"
  },
  {
    "label": "OnGetChildrenForEventsList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForEventsList(TSharedPtr<FVisualizerEvent> InItem, TArray<TSharedPtr<FVisualizerEvent> >& OutChildren)"
  },
  {
    "label": "OnColumnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "GetColumnSortMode()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetColumnSortMode(const FName ColumnId)"
  },
  {
    "label": "SortEventsList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortEventsList(void)"
  },
  {
    "label": "SortEventsList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortEventsList(TArray< TSharedPtr< FVisualizerEvent > >& Events)"
  },
  {
    "label": "RestoreEventSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RestoreEventSelection(TArray< TSharedPtr< FVisualizerEvent > >& Events)"
  },
  {
    "label": "SetDurationUnits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDurationUnits(EVisualizerTimeUnits::Type InUnits)"
  },
  {
    "label": "CountEvents()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CountEvents(TArray< TSharedPtr< FVisualizerEvent > >& Events)"
  },
  {
    "label": "CreateSelectedEventsView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSelectedEventsView()"
  },
  {
    "label": "CreateSelectedEventsViewRecursively()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FVisualizerEvent>)",
    "insertText": "CreateSelectedEventsViewRecursively(TSharedPtr< FVisualizerEvent > SourceEvent)"
  },
  {
    "label": "CreateSelectedEventsViewRecursivelyAndFlatten()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSelectedEventsViewRecursivelyAndFlatten(TSharedPtr< FVisualizerEvent > SourceEvent)"
  },
  {
    "label": "CreateSelectedEventsViewRecursivelyCoalesced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSelectedEventsViewRecursivelyCoalesced(TArray< TSharedPtr< FVisualizerEvent > >& SourceEvents, TArray< TSharedPtr< FVisualizerEvent > >& CopiedEvents, TSharedPtr< FVisualizerEvent > InParent)"
  },
  {
    "label": "CreateSelectedEventsViewRecursivelyFlatCoalesced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSelectedEventsViewRecursivelyFlatCoalesced(TArray< TSharedPtr< FVisualizerEvent > >& SourceEvents)"
  },
  {
    "label": "CheckDurationUnits()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckDurationUnits(EVisualizerTimeUnits::Type InUnits)"
  },
  {
    "label": "SetViewMode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetViewMode(EVisualizerViewMode::Type InMode)"
  },
  {
    "label": "CheckViewMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckViewMode(EVisualizerViewMode::Type InMode)"
  },
  {
    "label": "GetEventDuration()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "GetEventDuration(double InDurationMs)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted(const FText& InFilterText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "FilterEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FilterEvent(TSharedPtr< FVisualizerEvent > InEvent)"
  },
  {
    "label": "GetDurationColumnTitle()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetDurationColumnTitle()"
  }
]