[
  {
    "label": "ByteSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ByteSink"
  },
  {
    "label": "BytesTrieBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BytesTrieBuilder"
  },
  {
    "label": "CharString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharString"
  },
  {
    "label": "UVector32",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVector32"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "owns",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "owns"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "State",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "State"
  },
  {
    "label": "BytesTrie",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BytesTrie"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "BytesTrieBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BytesTrieBuilder"
  },
  {
    "label": "nextImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "nextImpl(bytes_, inByte)"
  },
  {
    "label": "next()",
    "kind": "Method",
    "detail": "Function (UStringTrieResult)",
    "insertText": "next(int32_t inByte)"
  },
  {
    "label": "next()",
    "kind": "Method",
    "detail": "Function (UStringTrieResult)",
    "insertText": "next(const char *s, int32_t length)"
  },
  {
    "label": "readValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "readValue(pos, leadByte>>1)"
  },
  {
    "label": "next()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "next(UErrorCode &errorCode)"
  },
  {
    "label": "truncateAndStop()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "truncateAndStop()"
  },
  {
    "label": "readValue()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "readValue(const uint8_t *pos, int32_t leadByte)"
  },
  {
    "label": "skipValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "skipValue(pos, leadByte)"
  },
  {
    "label": "branchNext()",
    "kind": "Method",
    "detail": "Function (UStringTrieResult)",
    "insertText": "branchNext(const uint8_t *pos, int32_t length, int32_t inByte)"
  },
  {
    "label": "nextImpl()",
    "kind": "Method",
    "detail": "Function (UStringTrieResult)",
    "insertText": "nextImpl(const uint8_t *pos, int32_t inByte)"
  },
  {
    "label": "findUniqueValue()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "findUniqueValue(const uint8_t *pos, UBool haveUniqueValue, int32_t &uniqueValue)"
  },
  {
    "label": "getNextBranchBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNextBranchBytes(const uint8_t *pos, int32_t length, ByteSink &out)"
  },
  {
    "label": "append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "append(ByteSink &out, int c)"
  }
]