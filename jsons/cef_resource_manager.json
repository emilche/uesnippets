[
  {
    "label": "CefResourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefResourceManager"
  },
  {
    "label": "RequestParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RequestParams"
  },
  {
    "label": "RequestState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RequestState"
  },
  {
    "label": "may",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "may"
  },
  {
    "label": "Request",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Request"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "CefResourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefResourceManager"
  },
  {
    "label": "Provider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Provider"
  },
  {
    "label": "CefDeleteOnThread",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CefDeleteOnThread"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "ProviderEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProviderEntry"
  },
  {
    "label": "RequestState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RequestState"
  },
  {
    "label": "Continue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Continue(CefRefPtr<CefResourceHandler> handler)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "Request()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "Request(std::unique_ptr<RequestState> state)"
  },
  {
    "label": "SendRequest()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RequestState>)",
    "insertText": "SendRequest()"
  },
  {
    "label": "HasState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasState()"
  },
  {
    "label": "ContinueOnIOThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContinueOnIOThread(std::unique_ptr<RequestState> state,\n                                   CefRefPtr<CefResourceHandler> handler)"
  },
  {
    "label": "StopOnIOThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopOnIOThread(std::unique_ptr<RequestState> state)"
  },
  {
    "label": "AddContentProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContentProvider(const std::string& url,\n                          const std::string& content,\n                          const std::string& mime_type,\n                          int order,\n                          const std::string& identifier)"
  },
  {
    "label": "AddDirectoryProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDirectoryProvider(const std::string& url_path,\n                            const std::string& directory_path,\n                            int order,\n                            const std::string& identifier)"
  },
  {
    "label": "AddArchiveProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddArchiveProvider(const std::string& url_path,\n                          const std::string& archive_path,\n                          const std::string& password,\n                          int order,\n                          const std::string& identifier)"
  },
  {
    "label": "AddProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddProvider(Provider* provider,\n                   int order,\n                   const std::string& identifier)"
  },
  {
    "label": "RemoveProviders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveProviders(const std::string& identifier)"
  },
  {
    "label": "RemoveAllProviders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllProviders()"
  },
  {
    "label": "SetUrlFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUrlFilter(const UrlFilter& filter)"
  },
  {
    "label": "SetMimeTypeResolver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMimeTypeResolver(const MimeTypeResolver& resolver)"
  },
  {
    "label": "OnBeforeResourceLoad()",
    "kind": "Method",
    "detail": "Function (cef_return_value_t)",
    "insertText": "OnBeforeResourceLoad(\n      CefRefPtr<CefBrowser> browser,\n      CefRefPtr<CefFrame> frame,\n      CefRefPtr<CefRequest> request,\n      CefRefPtr<CefRequestCallback> callback)"
  },
  {
    "label": "GetResourceHandler()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefResourceHandler>)",
    "insertText": "GetResourceHandler(\n      CefRefPtr<CefBrowser> browser,\n      CefRefPtr<CefFrame> frame,\n      CefRefPtr<CefRequest> request)"
  },
  {
    "label": "SendRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendRequest(std::unique_ptr<RequestState> state)"
  },
  {
    "label": "ContinueRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContinueRequest(std::unique_ptr<RequestState> state,\n                       CefRefPtr<CefResourceHandler> handler)"
  },
  {
    "label": "StopRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRequest(std::unique_ptr<RequestState> state)"
  },
  {
    "label": "IncrementProvider()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IncrementProvider(RequestState* state)"
  },
  {
    "label": "DetachRequestFromProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachRequestFromProvider(RequestState* state)"
  },
  {
    "label": "GetNextValidProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNextValidProvider(ProviderEntryList::iterator& iterator)"
  },
  {
    "label": "DeleteProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteProvider(ProviderEntryList::iterator& iterator, bool stop)"
  }
]