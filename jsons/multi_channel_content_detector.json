[
  {
    "label": "MultiChannelContentDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MultiChannelContentDetector"
  },
  {
    "label": "MetricsLogger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MetricsLogger"
  },
  {
    "label": "MultiChannelContentDetector()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_MULTI_CHANNEL_CONTENT_DETECTOR_H_ # define MODULES_AUDIO_PROCESSING_AEC3_MULTI_CHANNEL_CONTENT_DETECTOR_H_ # include<stddef . h> # include<memory> # include<vector> # include \" absl / types / optional . h \" namespace webrtc { class MultiChannelContentDetector { public :)",
    "insertText": "MultiChannelContentDetector(bool detect_stereo_content, int num_render_input_channels, float detection_threshold, int stereo_detection_timeout_threshold_seconds, float stereo_detection_hysteresis_seconds)"
  },
  {
    "label": "UpdateDetection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateDetection(const std::vector<std::vector<std::vector<float>>>& frame)"
  },
  {
    "label": "IsProperMultiChannelContentDetected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsProperMultiChannelContentDetected()"
  },
  {
    "label": "MetricsLogger()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "MetricsLogger()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(bool persistent_multichannel_content_detected)"
  }
]