[
  {
    "label": "FPreAnimatedStorageID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedStorageID"
  },
  {
    "label": "FPreAnimatedStateExtension",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedStateExtension"
  },
  {
    "label": "TPreAnimatedStorageID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPreAnimatedStorageID"
  },
  {
    "label": "TAutoRegisterPreAnimatedStorageID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAutoRegisterPreAnimatedStorageID"
  },
  {
    "label": "FPreAnimatedStorageID()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / TypeHash . h \" namespace UE { namespace MovieScene { struct FPreAnimatedStorageID { public :)",
    "insertText": "FPreAnimatedStorageID()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "bool()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(FPreAnimatedStorageID A, FPreAnimatedStorageID B)"
  },
  {
    "label": "TAutoRegisterPreAnimatedStorageID()",
    "kind": "Method",
    "detail": "Function (} uint32 TypeID = ~ 0 u ; } ; template<StorageType> struct TPreAnimatedStorageID : FPreAnimatedStorageID { } ; template<StorageType> struct TAutoRegisterPreAnimatedStorageID : TPreAnimatedStorageID<StorageType> {)",
    "insertText": "TAutoRegisterPreAnimatedStorageID()"
  }
]