[
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "EEras",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EEras"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "have",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "have"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "IDs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDs"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "GregorianCalendar()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "GregorianCalendar( pdt, success )"
  },
  {
    "label": "setGregorianChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setGregorianChange(UDate date, UErrorCode& success)"
  },
  {
    "label": "roll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "roll(EDateFields field, int32_t amount, UErrorCode& status)"
  },
  {
    "label": "roll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "roll(UCalendarDateFields field, int32_t amount, UErrorCode& status)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "GregorianCalendar()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "GregorianCalendar()"
  },
  {
    "label": "handleComputeJulianDay()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "handleComputeJulianDay(UCalendarDateFields bestField)"
  },
  {
    "label": "pinDayOfMonth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pinDayOfMonth(void)"
  },
  {
    "label": "getEpochDay()",
    "kind": "Method",
    "detail": "Function (UDate)",
    "insertText": "getEpochDay(UErrorCode& status)"
  },
  {
    "label": "handleGetExtendedYear()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "handleGetExtendedYear()"
  },
  {
    "label": "handleGetExtendedYearFromWeekFields()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "handleGetExtendedYearFromWeekFields(int32_t yearWoy, int32_t woy)"
  },
  {
    "label": "handleComputeFields()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "handleComputeFields(int32_t julianDay, UErrorCode &status)"
  },
  {
    "label": "computeJulianDayOfYear()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "computeJulianDayOfYear(UBool isGregorian, int32_t year,\n                                         UBool& isLeap)"
  },
  {
    "label": "aggregateStamp()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "aggregateStamp(int32_t stamp_a, int32_t stamp_b)"
  },
  {
    "label": "millisToJulianDay()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "millisToJulianDay(UDate millis)"
  },
  {
    "label": "julianDayToMillis()",
    "kind": "Method",
    "detail": "Function (UDate)",
    "insertText": "julianDayToMillis(double julian)"
  }
]