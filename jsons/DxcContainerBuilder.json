[
  {
    "label": "AbstractMemoryStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AbstractMemoryStream"
  },
  {
    "label": "DxcContainerBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxcContainerBuilder"
  },
  {
    "label": "DxilPart",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilPart"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" dxc / DxilContainer / DxilContainer . h \" # include \" dxc / Support / Global . h \" # include \" dxc / Support / WinIncludes . h \" # include \" dxc / Support / microcom . h \" # include \" dxc / dxcapi . h \" # include \" llvm / ADT / SmallVector . h \" using namespace hlsl ; namespace hlsl { class AbstractMemoryStream ; } class DxcContainerBuilder : public IDxcContainerBuilder { public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "Load(IDxcBlob *pDxilContainerHeader)"
  },
  {
    "label": "AddPart()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "AddPart(UINT32 fourCC, IDxcBlob *pSource)"
  },
  {
    "label": "RemovePart()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "RemovePart(UINT32 fourCC)"
  },
  {
    "label": "SerializeContainer()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SerializeContainer(IDxcOperationResult **ppResult)"
  },
  {
    "label": "DXC_MICROCOM_TM_ADDREF_RELEASE_IMPL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DXC_MICROCOM_TM_ADDREF_RELEASE_IMPL() DXC_MICROCOM_TM_CTOR(DxcContainerBuilder) HRESULT STDMETHODCALLTYPE QueryInterface(REFIID riid, void **ppvObject)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Init(const char *warning = nullptr)"
  },
  {
    "label": "DXC_MICROCOM_TM_REF_FIELDS()",
    "kind": "Method",
    "detail": "Function (m_warning = warning ; m_RequireValidation = false ; m_HasPrivateData = false ; } protected :)",
    "insertText": "DXC_MICROCOM_TM_REF_FIELDS()"
  },
  {
    "label": "DxilPart()",
    "kind": "Method",
    "detail": "Function (public : UINT32 m_fourCC ; CComPtr<IDxcBlob> m_Blob ;)",
    "insertText": "DxilPart(UINT32 fourCC, IDxcBlob *pSource) : m_fourCC(fourCC), m_Blob(pSource)"
  },
  {
    "label": "ComputeContainerSize()",
    "kind": "Method",
    "detail": "Function (} } ; typedef llvm::SmallVector<DxilPart,8> PartList ; PartList m_parts ; CComPtr<IDxcBlob> m_pContainer ; const char* m_warning ; bool m_RequireValidation ; bool m_HasPrivateData ; UINT32)",
    "insertText": "ComputeContainerSize()"
  },
  {
    "label": "UpdateContainerHeader()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "UpdateContainerHeader(AbstractMemoryStream *pStream, uint32_t containerSize)"
  },
  {
    "label": "UpdateOffsetTable()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "UpdateOffsetTable(AbstractMemoryStream *pStream)"
  },
  {
    "label": "UpdateParts()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "UpdateParts(AbstractMemoryStream *pStream)"
  },
  {
    "label": "AddPart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPart(DxilPart &&part)"
  }
]