[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "EnumVariant()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_WIN_ENUM_VARIANT_H_ # define BASE_WIN_ENUM_VARIANT_H_ # include<wrl / implements . h> # include<memory> # include<vector> # include \" base / win / scoped_variant . h \" namespace base { namespace win { class BASE_EXPORT EnumVariant : public Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<Microsoft::WRL::ClassicCom>,IEnumVARIANT> { public :)",
    "insertText": "EnumVariant(ULONG count)"
  },
  {
    "label": "ItemAt()",
    "kind": "Method",
    "detail": "Function (VARIANT*)",
    "insertText": "ItemAt(ULONG index)"
  },
  {
    "label": "EnumVariant()",
    "kind": "Method",
    "detail": "Function (private : ~)",
    "insertText": "EnumVariant()"
  }
]