[
  {
    "label": "VideoQualityAnalyzerInjectionHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoQualityAnalyzerInjectionHelper"
  },
  {
    "label": "AnalyzingVideoSink2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AnalyzingVideoSink2"
  },
  {
    "label": "ReceiverStream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ReceiverStream"
  },
  {
    "label": "CreateFramePreprocessor()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<test::TestVideoCapturer::FramePreprocessor>)",
    "insertText": "CreateFramePreprocessor(absl::string_view peer_name,\n                          const VideoConfig& config)"
  },
  {
    "label": "CreateVideoSink()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<rtc::VideoSinkInterface<VideoFrame>>)",
    "insertText": "CreateVideoSink(\n      absl::string_view peer_name)"
  },
  {
    "label": "CreateVideoSink()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<AnalyzingVideoSink>)",
    "insertText": "CreateVideoSink(\n      absl::string_view peer_name,\n      const VideoSubscription& subscription,\n      bool report_infra_metrics = false)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(std::string test_case_name,\n             rtc::ArrayView<const std::string> peer_names,\n             int max_threads_count = 1)"
  },
  {
    "label": "RegisterParticipantInCall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterParticipantInCall(absl::string_view peer_name)"
  },
  {
    "label": "UnregisterParticipantInCall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterParticipantInCall(absl::string_view peer_name)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrame(absl::string_view peer_name, const VideoFrame& frame)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (peers_count_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (known_video_configs_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (sinks_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  }
]