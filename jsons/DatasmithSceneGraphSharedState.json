[
  {
    "label": "FDatasmithSceneGraphSharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithSceneGraphSharedState"
  },
  {
    "label": "TDatasmithReferenceProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDatasmithReferenceProxy"
  },
  {
    "label": "TDatasmithReferenceArrayProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDatasmithReferenceArrayProxy"
  },
  {
    "label": "FDatasmithSceneGraphSharedState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DirectLinkCommon . h \" # include \" DirectLinkLog . h \" # include \" DirectLinkSceneGraphNode . h \" # include \" Algo / Transform . h \" class FDatasmithSceneGraphSharedState : public DirectLink::FSceneGraphSharedState { public :)",
    "insertText": "FDatasmithSceneGraphSharedState()"
  },
  {
    "label": "FDatasmithSceneGraphSharedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDatasmithSceneGraphSharedState(const DirectLink::FSceneIdentifier& InSceneId)"
  },
  {
    "label": "TDatasmithReferenceProxy()",
    "kind": "Method",
    "detail": "Function (SceneId = InSceneId ; } } ; template<T> class TDatasmithReferenceProxy : public DirectLink::IReferenceProxy { public :)",
    "insertText": "TDatasmithReferenceProxy(const TSharedPtr<T>& Reference = nullptr) : Inner(Reference)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Num()"
  },
  {
    "label": "SetNodes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetNodes(DirectLink::IReferenceResolutionProvider& ResolutionProvider, const TArray<DirectLink::FSceneGraphId>& NodeIds)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Inner = nullptr ;)",
    "insertText": "if(NodeIds.Num() >= 1)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (Inner = StaticCastSharedPtr<)",
    "insertText": "T(Node)"
  },
  {
    "label": "View()",
    "kind": "Method",
    "detail": "Function (} } const TSharedPtr<T>&)",
    "insertText": "View()"
  },
  {
    "label": "GetNode()",
    "kind": "Method",
    "detail": "Function (} DirectLink::ISceneGraphNode*)",
    "insertText": "GetNode(int32 Index)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (Inner .)",
    "insertText": "Reset(NodeIds.Num())"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Transform(NodeIds, Inner, [&](DirectLink::FSceneGraphId NodeId) { TSharedPtr<DirectLink::ISceneGraphNode> Node = ResolutionProvider.AsSharedPtr(NodeId); check(Node.IsValid()); return StaticCastSharedPtr<T>(Node); })"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} const TSharedPtr<T>&)",
    "insertText": "operator(int32 Index)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} SizeType)",
    "insertText": "Add(const TSharedPtr<T>& Element)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} SizeType)",
    "insertText": "Add(TSharedPtr<T>&& Element)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} SizeType)",
    "insertText": "Remove(const TSharedPtr<T>& Item)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveAt(int32 Index)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (Inner .)",
    "insertText": "RemoveAt(Index)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Empty()"
  }
]