[
  {
    "label": "FLocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocation"
  },
  {
    "label": "FOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOp"
  },
  {
    "label": "VFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VFrame"
  },
  {
    "label": "VUniqueString",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VUniqueString"
  },
  {
    "label": "FDebugger",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugger"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "FDebugger()",
    "kind": "Method",
    "detail": "Function (struct FLocation ; struct FOp ; struct VFrame ; struct VUniqueString ; struct FDebugger { ~)",
    "insertText": "FDebugger()"
  },
  {
    "label": "Notify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Notify(FRunningContext, VFrame&, const FOp&)"
  },
  {
    "label": "AddLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLocation(FAllocationContext, VUniqueString& FilePath, const FLocation&)"
  },
  {
    "label": "GetDebugger()",
    "kind": "Method",
    "detail": "Function (} ; FDebugger*)",
    "insertText": "GetDebugger()"
  },
  {
    "label": "SetDebugger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDebugger(FDebugger*)"
  },
  {
    "label": "FFrame()",
    "kind": "Method",
    "detail": "Function (namespace Debugger { using FRegisters = TArray<TTuple<TWriteBarrier<VUniqueString>,VValue>> ; struct FFrame {)",
    "insertText": "FFrame(FAccessContext Context, VUniqueString& Name, VUniqueString& FilePath, FRegisters Registers)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Context,& Name },FilePath { Context,& FilePath },Registers)",
    "insertText": "MoveTemp(Registers)"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (} TWriteBarrier<VUniqueString> Name ; TWriteBarrier<VUniqueString> FilePath ; FRegisters Registers ; } ; template<TVisitor> void)",
    "insertText": "Visit(TVisitor& Visitor, FFrame& Frame, const TCHAR* ElementName)"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Visit(Visitor, Frame.Name, TEXT(\"Name\"))"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Visit(Visitor, Frame.FilePath, TEXT(\"FilePath\"))"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Visit(Visitor, Name, TEXT(\"RegisterName\"))"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Visit(Visitor, Value, TEXT(\"RegisterValue\"))"
  },
  {
    "label": "ForEachStackFrame()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "ForEachStackFrame(FRunningContext, VFrame&, const FOp&, TFunctionRef<void(FFrame, const FLocation*)>)"
  }
]