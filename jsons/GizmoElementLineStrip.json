[
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "UGizmoElementLineStrip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementLineStrip"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BaseGizmos / GizmoElementLineBase . h \" # include \" InputState . h \" # include \" UObject / ObjectMacros . h \" # include \" GizmoElementLineStrip . generated . h \" class FPrimitiveDrawInterface ; class FMaterialRenderProxy ;)",
    "insertText": "UCLASS(Transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: INTERACTIVETOOLSFRAMEWORK_API virtual void Render(IToolsContextRenderAPI* RenderAPI, const FRenderTraversalState& RenderState)"
  },
  {
    "label": "LineTrace()",
    "kind": "Method",
    "detail": "Function (FInputRayHit)",
    "insertText": "LineTrace(const UGizmoViewContext* ViewContext, const FLineTraceTraversalState& LineTraceState, const FVector& RayOrigin, const FVector& RayDirection)"
  },
  {
    "label": "SetVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVertices(const TArrayView<const FVector>& InVertices)"
  },
  {
    "label": "GetVertices()",
    "kind": "Method",
    "detail": "Function (const TArray<FVector>&)",
    "insertText": "GetVertices()"
  },
  {
    "label": "SetBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBase(FVector InBase)"
  },
  {
    "label": "GetBase()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetBase()"
  },
  {
    "label": "SetUpDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUpDirection(const FVector& InUpDirection)"
  },
  {
    "label": "GetUpDirection()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetUpDirection()"
  },
  {
    "label": "SetSideDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSideDirection(const FVector& InSideDirection)"
  },
  {
    "label": "GetSideDirection()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetSideDirection()"
  },
  {
    "label": "SetDrawLineStrip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawLineStrip(bool InDrawLineStrip)"
  },
  {
    "label": "GetDrawLineStrip()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDrawLineStrip()"
  },
  {
    "label": "ComputeProjectedVertices()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ComputeProjectedVertices(const FTransform& InLocalToWorldTransform, bool bIncludeBase)"
  }
]