[
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCBufferTy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCBufferTy"
  },
  {
    "label": "rtcNewBuffer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" rtcore_device . h \" RTC_NAMESPACE_BEGIN enum RTCBufferType { RTC_BUFFER_TYPE_INDEX = 0,RTC_BUFFER_TYPE_VERTEX = 1,RTC_BUFFER_TYPE_VERTEX_ATTRIBUTE = 2,RTC_BUFFER_TYPE_NORMAL = 3,RTC_BUFFER_TYPE_TANGENT = 4,RTC_BUFFER_TYPE_NORMAL_DERIVATIVE = 5,RTC_BUFFER_TYPE_GRID = 8,RTC_BUFFER_TYPE_FACE = 1 6,RTC_BUFFER_TYPE_LEVEL = 1 7,RTC_BUFFER_TYPE_EDGE_CREASE_INDEX = 1 8,RTC_BUFFER_TYPE_EDGE_CREASE_WEIGHT = 1 9,RTC_BUFFER_TYPE_VERTEX_CREASE_INDEX = 2 0,RTC_BUFFER_TYPE_VERTEX_CREASE_WEIGHT = 2 1,RTC_BUFFER_TYPE_HOLE = 2 2,RTC_BUFFER_TYPE_FLAGS = 3 2 } ; typedef struct RTCBufferTy* RTCBuffer ; RTCBuffer)",
    "insertText": "rtcNewBuffer(RTCDevice device, size_t byteSize)"
  },
  {
    "label": "rtcNewSharedBuffer()",
    "kind": "Method",
    "detail": "Function (RTCBuffer)",
    "insertText": "rtcNewSharedBuffer(RTCDevice device, void* ptr, size_t byteSize)"
  },
  {
    "label": "rtcGetBufferData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "rtcGetBufferData(RTCBuffer buffer)"
  },
  {
    "label": "rtcRetainBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcRetainBuffer(RTCBuffer buffer)"
  },
  {
    "label": "rtcReleaseBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcReleaseBuffer(RTCBuffer buffer)"
  }
]