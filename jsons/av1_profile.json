[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AV1ProfileToString()",
    "kind": "Method",
    "detail": "Function (# ifndef API_VIDEO_CODECS_AV1_PROFILE_H_ # define API_VIDEO_CODECS_AV1_PROFILE_H_ # include<string> # include \" absl / strings / string_view . h \" # include \" absl / types / optional . h \" # include \" api / video_codecs / sdp_video_format . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { RTC_EXPORT const char kAV1FmtpProfile [ ] ; enum class AV1Profile { kProfile0 = 0,kProfile1 = 1,kProfile2 = 2,} ; RTC_EXPORT absl::string_view)",
    "insertText": "AV1ProfileToString(AV1Profile profile)"
  },
  {
    "label": "StringToAV1Profile()",
    "kind": "Method",
    "detail": "Function (absl::optional<AV1Profile>)",
    "insertText": "StringToAV1Profile(absl::string_view profile)"
  },
  {
    "label": "ParseSdpForAV1Profile()",
    "kind": "Method",
    "detail": "Function (RTC_EXPORT absl::optional<AV1Profile>)",
    "insertText": "ParseSdpForAV1Profile(const SdpVideoFormat::Parameters& params)"
  },
  {
    "label": "AV1IsSameProfile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AV1IsSameProfile(const SdpVideoFormat::Parameters& params1, const SdpVideoFormat::Parameters& params2)"
  }
]