[
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "__mem_fn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "__mem_fn"
  },
  {
    "label": "_Rp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Rp"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___FUNCTIONAL_MEM_FN_H # define _LIBCPP___FUNCTIONAL_MEM_FN_H # include<__config> # include<__functional / binary_function . h> # include<__functional / invoke . h> # include<__functional / weak_result_type . h> # include<__utility / forward . h> # include<type_traits> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"
  },
  {
    "label": "__mem_fn()",
    "kind": "Method",
    "detail": "Function (public : typedef _Tp type ; private : type __f_ ; public : _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17)",
    "insertText": "__mem_fn(type __f) _NOEXCEPT : __f_(__f)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<class . . . _ArgTypes> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 __invoke_return<type,_ArgTypes . . .>::type)",
    "insertText": "operator() (_ArgTypes&&... __args)"
  },
  {
    "label": "mem_fn()",
    "kind": "Method",
    "detail": "Function (} } ; template<class _Rp,class _Tp> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 __mem_fn<_Rp _Tp::*>)",
    "insertText": "mem_fn(_Rp _Tp::* __pm)"
  }
]