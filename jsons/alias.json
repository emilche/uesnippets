[
  {
    "label": "Alias()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_DEBUG_ALIAS_H_ # define BASE_DEBUG_ALIAS_H_ # include<stddef . h> # include \" base / base_export . h \" namespace base { namespace debug { void BASE_EXPORT)",
    "insertText": "Alias(const void* var)"
  },
  {
    "label": "strlcpy()",
    "kind": "Method",
    "detail": "Function (} BASE_EXPORT size_t)",
    "insertText": "strlcpy(char* dst, const char* src, size_t dst_size)"
  },
  {
    "label": "DEBUG_ALIAS_FOR_CSTR()",
    "kind": "Method",
    "detail": "Function (} # define)",
    "insertText": "DEBUG_ALIAS_FOR_CSTR(var_name, c_str, char_count)"
  },
  {
    "label": "strlcpy()",
    "kind": "Method",
    "detail": "Function (\\::)",
    "insertText": "strlcpy(var_name, (c_str), sizeof(var_name))"
  },
  {
    "label": "Alias()",
    "kind": "Method",
    "detail": "Function (\\::base::)",
    "insertText": "Alias(var_name)"
  },
  {
    "label": "NO_CODE_FOLDING()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "NO_CODE_FOLDING()"
  }
]