[
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "FSavedMove_Character",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSavedMove_Character"
  },
  {
    "label": "UCharacterMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCharacterMovementComponent"
  },
  {
    "label": "FRootMotionSourceGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSourceGroup"
  },
  {
    "label": "FCharacterNetworkSerializationPackedBits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterNetworkSerializationPackedBits"
  },
  {
    "label": "uses",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "uses"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FCharacterNetworkMoveData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterNetworkMoveData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "of"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "and"
  },
  {
    "label": "would",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "would"
  },
  {
    "label": "derived",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "derived"
  },
  {
    "label": "FCharacterNetworkMoveDataContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterNetworkMoveDataContainer"
  },
  {
    "label": "FCharacterServerMovePackedBits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterServerMovePackedBits"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FClientAdjustment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClientAdjustment"
  },
  {
    "label": "FCharacterMoveResponseDataContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterMoveResponseDataContainer"
  },
  {
    "label": "FCharacterMoveResponsePackedBits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterMoveResponsePackedBits"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "NetSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetSerialize(FArchive& Ar, UPackageMap* PackageMap, bool& bOutSuccess)"
  },
  {
    "label": "ClientFillNetworkMoveData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClientFillNetworkMoveData(const FSavedMove_Character& ClientMove, ENetworkMoveType MoveType)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(UCharacterMovementComponent& CharacterMovement, FArchive& Ar, UPackageMap* PackageMap, ENetworkMoveType MoveType)"
  },
  {
    "label": "ClientFillNetworkMoveData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClientFillNetworkMoveData(const FSavedMove_Character* ClientNewMove, const FSavedMove_Character* ClientPendingMove, const FSavedMove_Character* ClientOldMove)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(UCharacterMovementComponent& CharacterMovement, FArchive& Ar, UPackageMap* PackageMap)"
  },
  {
    "label": "ServerFillResponseData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerFillResponseData(const UCharacterMovementComponent& CharacterMovement, const FClientAdjustment& PendingAdjustment)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(UCharacterMovementComponent& CharacterMovement, FArchive& Ar, UPackageMap* PackageMap)"
  }
]