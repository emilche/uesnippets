[
  {
    "label": "CommonHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CommonHeader"
  },
  {
    "label": "Fir",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Fir"
  },
  {
    "label": "Request",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Request"
  },
  {
    "label": "Request()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_FIR_H_ # define MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_FIR_H_ # include<vector> # include \" modules / rtp_rtcp / source / rtcp_packet / psfb . h \" namespace webrtc { namespace rtcp { class CommonHeader ; class Fir : public Psfb { public : uint8_t kFeedbackMessageType = 4 ; struct Request {)",
    "insertText": "Request() : ssrc(0), seq_nr(0)"
  },
  {
    "label": "Request()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Request(uint32_t ssrc, uint8_t seq_nr) : ssrc(ssrc), seq_nr(seq_nr)"
  },
  {
    "label": "Fir()",
    "kind": "Method",
    "detail": "Function (} uint32_t ssrc ; uint8_t seq_nr ; } ;)",
    "insertText": "Fir()"
  },
  {
    "label": "Fir()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Fir(const Fir& fir)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(const CommonHeader& packet)"
  },
  {
    "label": "AddRequestTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequestTo(uint32_t ssrc, uint8_t seq_num)"
  },
  {
    "label": "emplace_back()",
    "kind": "Method",
    "detail": "Function (items_ .)",
    "insertText": "emplace_back(ssrc, seq_num)"
  },
  {
    "label": "requests()",
    "kind": "Method",
    "detail": "Function (} const std::vector<Request>&)",
    "insertText": "requests()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Create(uint8_t* packet, size_t* index, size_t max_length, PacketReadyCallback callback)"
  },
  {
    "label": "SetMediaSsrc()",
    "kind": "Method",
    "detail": "Function (private : size_t kFciLength = 8 ; void)",
    "insertText": "SetMediaSsrc(uint32_t ssrc)"
  },
  {
    "label": "media_ssrc()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "media_ssrc()"
  }
]