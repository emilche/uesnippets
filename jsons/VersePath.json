[
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" VersePathFwd . h \" class UE::Core::FVersePath { bool)",
    "insertText": "operator(const FVersePath& Lhs, const FVersePath& Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FVersePath& VersePath)"
  },
  {
    "label": "FVersePath()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FVersePath()"
  },
  {
    "label": "FVersePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVersePath(FVersePath&&)"
  },
  {
    "label": "FVersePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVersePath(const FVersePath&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FVersePath&)",
    "insertText": "operator(FVersePath&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FVersePath&)",
    "insertText": "operator(const FVersePath&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "operator()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToString()"
  },
  {
    "label": "AsStringView()",
    "kind": "Method",
    "detail": "Function (} FStringView)",
    "insertText": "AsStringView()"
  },
  {
    "label": "TryMake()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryMake(FVersePath& OutPath, FString&& Path, FText* OutErrorMessage = nullptr)"
  },
  {
    "label": "IsValidFullPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidFullPath(const TCHAR* String, FText* OutErrorMessage = nullptr)"
  },
  {
    "label": "IsValidFullPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidFullPath(const TCHAR* String, int32 Len, FText* OutErrorMessage = nullptr)"
  },
  {
    "label": "IsValidDomain()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidDomain(const TCHAR* String, FText* OutErrorMessage = nullptr)"
  },
  {
    "label": "IsValidDomain()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidDomain(const TCHAR* String, int32 Len, FText* OutErrorMessage = nullptr)"
  },
  {
    "label": "IsValidSubpath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidSubpath(const TCHAR* String, FText* OutErrorMessage = nullptr)"
  },
  {
    "label": "IsValidSubpath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidSubpath(const TCHAR* String, int32 Len, FText* OutErrorMessage = nullptr)"
  },
  {
    "label": "IsValidIdent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidIdent(const TCHAR* String, FText* OutErrorMessage = nullptr, const FText* IdentTermReplacement = nullptr)"
  },
  {
    "label": "IsValidIdent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidIdent(const TCHAR* String, int32 Len, FText* OutErrorMessage = nullptr, const FText* IdentTermReplacement = nullptr)"
  }
]