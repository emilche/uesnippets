[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AAIController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AAIController"
  },
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "UBehaviorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTree"
  },
  {
    "label": "UBTTask_BlueprintBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTTask_BlueprintBase"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" BehaviorTree / BTTaskNode . h \" # include \" BTTask_BlueprintBase . generated . h \" class AActor ; class AAIController ; class APawn ; class UBehaviorTree ;)",
    "insertText": "UCLASS(Abstract, Blueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() AIMODULE_API virtual EBTNodeResult::Type ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "AbortTask()",
    "kind": "Method",
    "detail": "Function (EBTNodeResult::Type)",
    "insertText": "AbortTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "GetStaticDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStaticDescription()"
  },
  {
    "label": "DescribeRuntimeValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DescribeRuntimeValues(const UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTDescriptionVerbosity::Type Verbosity, TArray<FString>& Values)"
  },
  {
    "label": "OnInstanceDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInstanceDestroyed(UBehaviorTreeComponent& OwnerComp)"
  },
  {
    "label": "OnTaskFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTaskFinished(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTNodeResult::Type TaskResult)"
  },
  {
    "label": "InitializeFromAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromAsset(UBehaviorTree& Asset)"
  },
  {
    "label": "SetOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwner(AActor* ActorOwner)"
  },
  {
    "label": "UsesBlueprint()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "UsesBlueprint()"
  },
  {
    "label": "TickTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds)"
  }
]