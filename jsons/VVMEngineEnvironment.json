[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "UEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnum"
  },
  {
    "label": "FTopLevelAssetPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTopLevelAssetPath"
  },
  {
    "label": "CTypeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTypeBase"
  },
  {
    "label": "CScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CScope"
  },
  {
    "label": "FAllocationContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocationContext"
  },
  {
    "label": "VClass",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VClass"
  },
  {
    "label": "VPackage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VPackage"
  },
  {
    "label": "VPropertyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VPropertyType"
  },
  {
    "label": "VTupleType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VTupleType"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CSymbolToResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSymbolToResult"
  },
  {
    "label": "IEngineEnvironment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEngineEnvironment"
  },
  {
    "label": "TryBindVniStruct()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" # include \" VerseVM / VVMVerseClass . h \" class FString ; class UPackage ; class UStruct ; class UEnum ; struct FTopLevelAssetPath ; namespace uLang { class CTypeBase ; class CScope ; } namespace Verse { struct FAllocationContext ; struct VClass ; struct VPackage ; struct VPropertyType ; struct VTupleType ; enum class EPackageStage : uint8 ; class CSymbolToResult ; class IEngineEnvironment { public : void)",
    "insertText": "TryBindVniStruct(UStruct* Struct)"
  },
  {
    "label": "TryBindVniEnum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryBindVniEnum(UEnum* Enum)"
  },
  {
    "label": "AddPersistentVars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPersistentVars(UObject* Object, const TArray<FVersePersistentVar>& Vars)"
  },
  {
    "label": "AddSessionVars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSessionVars(UObject* Object, const TArray<FVerseSessionVar>& Vars)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__) virtual VPropertyType* CollectPropertyInfo(FAllocationContext Context, CSymbolToResult* Environment, const uLang::CTypeBase* Type, VPackage* Scope)"
  },
  {
    "label": "TryBindNativeAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryBindNativeAsset(FAllocationContext Context, const FTopLevelAssetPath& Path)"
  },
  {
    "label": "AdornPackageName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "AdornPackageName(const TCHAR* PackageName, EPackageStage Stage, FString& ScratchSpace)"
  },
  {
    "label": "CreateUPackage()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "CreateUPackage(FAllocationContext Context, const TCHAR* PackageName)"
  },
  {
    "label": "CreateUStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateUStruct(FAllocationContext Context, VClass* Class, TWriteBarrier<VValue>& Result)"
  },
  {
    "label": "CreateUStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateUStruct(FAllocationContext Context, VTupleType* Tuple, VPackage* Scope, TWriteBarrier<VValue>& Result)"
  }
]