[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FCaptureLostEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCaptureLostEvent"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "SAnimTimelineSplitterOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimTimelineSplitterOverlay"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" HAL / Platform . h \" # include \" Input / CursorReply . h \" # include \" Input / Reply . h \" # include \" Layout / Margin . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / Layout / SSplitter . h \" # include \" Widgets / SOverlay . h \" class FArrangedChildren ; struct FCaptureLostEvent ; struct FGeometry ; struct FPointerEvent ; class SAnimTimelineSplitterOverlay : public SOverlay { public : typedef SSplitter::FArguments FArguments ; void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "OnCursorQuery()",
    "kind": "Method",
    "detail": "Function (FCursorReply)",
    "insertText": "OnCursorQuery(const FGeometry& MyGeometry, const FPointerEvent& CursorEvent)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseCaptureLost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseCaptureLost(const FCaptureLostEvent& CaptureLostEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseMove()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseMove(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseLeave(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetSplitterHandlePadding()",
    "kind": "Method",
    "detail": "Function (private : FMargin)",
    "insertText": "GetSplitterHandlePadding(int32 Index)"
  }
]