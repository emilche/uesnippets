[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMovieSceneSequenceTickInterval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceTickInterval"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" MovieSceneSequenceTickInterval . generated . h \" class AActor ; class UActorComponent ; class UObject ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneSequenceTickInterval()"
  },
  {
    "label": "FMovieSceneSequenceTickInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneSequenceTickInterval(const AActor* InActor)"
  },
  {
    "label": "FMovieSceneSequenceTickInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneSequenceTickInterval(const UActorComponent* InActorComponent)"
  },
  {
    "label": "RoundTickIntervalMs()",
    "kind": "Method",
    "detail": "Function (public : int32)",
    "insertText": "RoundTickIntervalMs()"
  },
  {
    "label": "GetInheritedInterval()",
    "kind": "Method",
    "detail": "Function (FMovieSceneSequenceTickInterval)",
    "insertText": "GetInheritedInterval(UObject* ContextObject)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FMovieSceneSequenceTickInterval& A, const FMovieSceneSequenceTickInterval& B)"
  }
]