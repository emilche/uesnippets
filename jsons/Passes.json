[
  {
    "label": "MachineFunctionPass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineFunctionPass"
  },
  {
    "label": "PassConfigImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PassConfigImpl"
  },
  {
    "label": "PassInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PassInfo"
  },
  {
    "label": "ScheduleDAGInstrs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScheduleDAGInstrs"
  },
  {
    "label": "TargetLowering",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetLowering"
  },
  {
    "label": "TargetLoweringBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetLoweringBase"
  },
  {
    "label": "TargetRegisterClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetRegisterClass"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "MachineSchedContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MachineSchedContext"
  },
  {
    "label": "PassManagerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PassManagerBase"
  },
  {
    "label": "IdentifyingPassPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IdentifyingPassPtr"
  },
  {
    "label": "isPodLike",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "isPodLike"
  },
  {
    "label": "TargetPassConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetPassConfig"
  },
  {
    "label": "TargetPassConfig()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "TargetPassConfig(TargetMachine *tm, PassManagerBase &pm)"
  },
  {
    "label": "substitutePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "substitutePass(AnalysisID StandardID, IdentifyingPassPtr TargetID)"
  },
  {
    "label": "insertPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insertPass(AnalysisID TargetPassID, IdentifyingPassPtr InsertedPassID)"
  },
  {
    "label": "addIRPasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addIRPasses()"
  },
  {
    "label": "addPassesToHandleExceptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addPassesToHandleExceptions()"
  },
  {
    "label": "addCodeGenPrepare()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addCodeGenPrepare()"
  },
  {
    "label": "addISelPrepare()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addISelPrepare()"
  },
  {
    "label": "addMachinePasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addMachinePasses()"
  },
  {
    "label": "setOpt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setOpt(bool &Opt, bool Val)"
  },
  {
    "label": "addMachineSSAOptimization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addMachineSSAOptimization()"
  },
  {
    "label": "addFastRegAlloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addFastRegAlloc(FunctionPass *RegAllocPass)"
  },
  {
    "label": "addOptimizedRegAlloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addOptimizedRegAlloc(FunctionPass *RegAllocPass)"
  },
  {
    "label": "addMachineLateOptimization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addMachineLateOptimization()"
  },
  {
    "label": "addGCPasses()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "addGCPasses()"
  },
  {
    "label": "addBlockPlacement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addBlockPlacement()"
  },
  {
    "label": "addPass()",
    "kind": "Method",
    "detail": "Function (AnalysisID)",
    "insertText": "addPass(AnalysisID PassID, bool verifyAfter = true,\n                     bool printAfter = true)"
  },
  {
    "label": "addPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addPass(Pass *P, bool verifyAfter = true, bool printAfter = true)"
  },
  {
    "label": "printAndVerify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "printAndVerify(const std::string &Banner)"
  },
  {
    "label": "addPrintPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addPrintPass(const std::string &Banner)"
  },
  {
    "label": "addVerifyPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addVerifyPass(const std::string &Banner)"
  }
]