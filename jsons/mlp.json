[
  {
    "label": "WEIGHTS_SCALE()",
    "kind": "Method",
    "detail": "Function (# ifndef _MLP_H_ # define _MLP_H_ # include \" opus_types . h \" # define)",
    "insertText": "WEIGHTS_SCALE(1.f/128)"
  },
  {
    "label": "compute_dense()",
    "kind": "Method",
    "detail": "Function (const opus_int8* bias ; const opus_int8* input_weights ; int nb_inputs ; int nb_neurons ; int sigmoid ; } DenseLayer ; typedef struct { const opus_int8* bias ; const opus_int8* input_weights ; const opus_int8* recurrent_weights ; int nb_inputs ; int nb_neurons ; } GRULayer ; const DenseLayer layer0 ; const GRULayer layer1 ; const DenseLayer layer2 ; void)",
    "insertText": "compute_dense(const DenseLayer *layer, float *output, const float *input)"
  },
  {
    "label": "compute_gru()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "compute_gru(const GRULayer *gru, float *state, const float *input)"
  }
]