[
  {
    "label": "IFileSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileSystem"
  },
  {
    "label": "IChunkDataSerialization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkDataSerialization"
  },
  {
    "label": "FStatsCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatsCollector"
  },
  {
    "label": "FParallelChunkWriterConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParallelChunkWriterConfig"
  },
  {
    "label": "FParallelChunkWriterSummaries",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParallelChunkWriterSummaries"
  },
  {
    "label": "IParallelChunkWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IParallelChunkWriter"
  },
  {
    "label": "FParallelChunkWriterFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParallelChunkWriterFactory"
  },
  {
    "label": "IParallelChunkWriter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Guid . h \" # include \" Misc / SecureHash . h \" # include \" BuildPatchManifest . h \" namespace BuildPatchServices { class IFileSystem ; class IChunkDataSerialization ; class FStatsCollector ; struct FParallelChunkWriterConfig { int32 SaveRetryCount ; float SaveRetryTime ; int32 MaxQueueSize ; int32 NumberOfThreads ; FString ChunkDirectory ; EFeatureLevel FeatureLevel ; } ; struct FParallelChunkWriterSummaries { EFeatureLevel FeatureLevel ; TMap<FGuid,int64> ChunkOutputSizes ; TMap<FGuid,uint64> ChunkOutputHashes ; TMap<FGuid,FSHAHash> ChunkOutputShas ; } ; class IParallelChunkWriter { public : ~)",
    "insertText": "IParallelChunkWriter()"
  },
  {
    "label": "AddChunkData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddChunkData(TArray<uint8> ChunkData, const FGuid& ChunkGuid, const uint64& ChunkHash, const FSHAHash& ChunkSha)"
  },
  {
    "label": "OnProcessComplete()",
    "kind": "Method",
    "detail": "Function (FParallelChunkWriterSummaries)",
    "insertText": "OnProcessComplete()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FParallelChunkWriterFactory { public : IParallelChunkWriter*)",
    "insertText": "Create(FParallelChunkWriterConfig Config, IFileSystem* FileSystem, IChunkDataSerialization* ChunkDataSerialization, FStatsCollector* StatsCollector)"
  }
]