[
  {
    "label": "CoverageMappingReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CoverageMappingReader"
  },
  {
    "label": "CoverageMappingRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CoverageMappingRecord"
  },
  {
    "label": "CoverageMappingIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CoverageMappingIterator"
  },
  {
    "label": "RawCoverageReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RawCoverageReader"
  },
  {
    "label": "RawCoverageFilenamesReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RawCoverageFilenamesReader"
  },
  {
    "label": "RawCoverageMappingReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RawCoverageMappingReader"
  },
  {
    "label": "BinaryCoverageReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BinaryCoverageReader"
  },
  {
    "label": "ProfileMappingRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProfileMappingRecord"
  },
  {
    "label": "increment()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_PROFILEDATA_COVERAGEMAPPINGREADER_H # define LLVM_PROFILEDATA_COVERAGEMAPPINGREADER_H # include \" llvm / ADT / ArrayRef . h \" # include \" llvm / ADT / StringRef . h \" # include \" llvm / ADT / Triple . h \" # include \" llvm / Object / ObjectFile . h \" # include \" llvm / ProfileData / CoverageMapping . h \" # include \" llvm / ProfileData / InstrProf . h \" # include \" llvm / Support / FileSystem . h \" # include \" llvm / Support / MemoryBuffer . h \" # include<iterator> namespace llvm { namespace coverage { class CoverageMappingReader ; struct CoverageMappingRecord { StringRef FunctionName ; uint64_t FunctionHash ; ArrayRef<StringRef> Filenames ; ArrayRef<CounterExpression> Expressions ; ArrayRef<CounterMappingRegion> MappingRegions ; } ; class CoverageMappingIterator { CoverageMappingReader* Reader ; CoverageMappingRecord Record ; void)",
    "insertText": "increment()"
  },
  {
    "label": "CoverageMappingIterator()",
    "kind": "Method",
    "detail": "Function (public : using iterator_category = std::input_iterator_tag ; using value_type = CoverageMappingRecord ; using difference_type = std::ptrdiff_t ; using pointer = value_type* ; using reference = value_type& ;)",
    "insertText": "CoverageMappingIterator() : Reader(nullptr)"
  },
  {
    "label": "CoverageMappingIterator()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CoverageMappingIterator(CoverageMappingReader *Reader) : Reader(Reader)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} CoverageMappingIterator&)",
    "insertText": "operator()"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (CoverageMappingIterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (} CoverageMappingIterator)",
    "insertText": "end()"
  },
  {
    "label": "CoverageMappingReader()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CoverageMappingReader()"
  },
  {
    "label": "RawCoverageReader()",
    "kind": "Method",
    "detail": "Function (} } ; class RawCoverageReader { protected : StringRef Data ;)",
    "insertText": "RawCoverageReader(StringRef Data) : Data(Data)"
  },
  {
    "label": "readULEB128()",
    "kind": "Method",
    "detail": "Function (} std::error_code)",
    "insertText": "readULEB128(uint64_t &Result)"
  },
  {
    "label": "readIntMax()",
    "kind": "Method",
    "detail": "Function (std::error_code)",
    "insertText": "readIntMax(uint64_t &Result, uint64_t MaxPlus1)"
  },
  {
    "label": "readSize()",
    "kind": "Method",
    "detail": "Function (std::error_code)",
    "insertText": "readSize(uint64_t &Result)"
  },
  {
    "label": "readString()",
    "kind": "Method",
    "detail": "Function (std::error_code)",
    "insertText": "readString(StringRef &Result)"
  },
  {
    "label": "RawCoverageFilenamesReader()",
    "kind": "Method",
    "detail": "Function (} ; class RawCoverageFilenamesReader : public RawCoverageReader { std::vector<StringRef>& Filenames ;)",
    "insertText": "RawCoverageFilenamesReader(const RawCoverageFilenamesReader &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RawCoverageFilenamesReader&)",
    "insertText": "operator(const RawCoverageFilenamesReader &)"
  },
  {
    "label": "RawCoverageFilenamesReader()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "RawCoverageFilenamesReader(StringRef Data, std::vector<StringRef> &Filenames) : RawCoverageReader(Data), Filenames(Filenames)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (} std::error_code)",
    "insertText": "read()"
  },
  {
    "label": "RawCoverageMappingReader()",
    "kind": "Method",
    "detail": "Function (} ; class RawCoverageMappingReader : public RawCoverageReader { ArrayRef<StringRef> TranslationUnitFilenames ; std::vector<StringRef>& Filenames ; std::vector<CounterExpression>& Expressions ; std::vector<CounterMappingRegion>& MappingRegions ;)",
    "insertText": "RawCoverageMappingReader(const RawCoverageMappingReader &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RawCoverageMappingReader&)",
    "insertText": "operator(const RawCoverageMappingReader &)"
  },
  {
    "label": "RawCoverageMappingReader()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "RawCoverageMappingReader(StringRef MappingData, ArrayRef<StringRef> TranslationUnitFilenames, std::vector<StringRef> &Filenames, std::vector<CounterExpression> &Expressions, std::vector<CounterMappingRegion> &MappingRegions) : RawCoverageReader(MappingData), TranslationUnitFilenames(TranslationUnitFilenames), Filenames(Filenames), Expressions(Expressions), MappingRegions(MappingRegions)"
  },
  {
    "label": "decodeCounter()",
    "kind": "Method",
    "detail": "Function (private : std::error_code)",
    "insertText": "decodeCounter(unsigned Value, Counter &C)"
  },
  {
    "label": "readCounter()",
    "kind": "Method",
    "detail": "Function (std::error_code)",
    "insertText": "readCounter(Counter &C)"
  },
  {
    "label": "readMappingRegionsSubArray()",
    "kind": "Method",
    "detail": "Function (std::error_code)",
    "insertText": "readMappingRegionsSubArray(std::vector<CounterMappingRegion> &MappingRegions, unsigned InferredFileID, size_t NumFileIDs)"
  },
  {
    "label": "ProfileMappingRecord()",
    "kind": "Method",
    "detail": "Function (} ; class BinaryCoverageReader : public CoverageMappingReader { public : struct ProfileMappingRecord { CoverageMappingVersion Version ; StringRef FunctionName ; uint64_t FunctionHash ; StringRef CoverageMapping ; size_t FilenamesBegin ; size_t FilenamesSize ;)",
    "insertText": "ProfileMappingRecord(CoverageMappingVersion Version, StringRef FunctionName, uint64_t FunctionHash, StringRef CoverageMapping, size_t FilenamesBegin, size_t FilenamesSize) : Version(Version), FunctionName(FunctionName), FunctionHash(FunctionHash), CoverageMapping(CoverageMapping), FilenamesBegin(FilenamesBegin), FilenamesSize(FilenamesSize)"
  },
  {
    "label": "BinaryCoverageReader()",
    "kind": "Method",
    "detail": "Function (} } ; private : std::vector<StringRef> Filenames ; std::vector<ProfileMappingRecord> MappingRecords ; size_t CurrentRecord ; std::vector<StringRef> FunctionsFilenames ; std::vector<CounterExpression> Expressions ; std::vector<CounterMappingRegion> MappingRegions ;)",
    "insertText": "BinaryCoverageReader(const BinaryCoverageReader &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (BinaryCoverageReader&)",
    "insertText": "operator(const BinaryCoverageReader &)"
  },
  {
    "label": "BinaryCoverageReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BinaryCoverageReader() : CurrentRecord(0)"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (} public : ErrorOr<std::unique_ptr<BinaryCoverageReader>>)",
    "insertText": "create(std::unique_ptr<MemoryBuffer> &ObjectBuffer, StringRef Arch)"
  },
  {
    "label": "readNextRecord()",
    "kind": "Method",
    "detail": "Function (std::error_code)",
    "insertText": "readNextRecord(CoverageMappingRecord &Record)"
  }
]