[
  {
    "label": "SparseSelector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SparseSelector"
  },
  {
    "label": "FeatureMask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FeatureMask"
  },
  {
    "label": "PrimvarRefinerReal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PrimvarRefinerReal"
  },
  {
    "label": "MESH",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MESH"
  },
  {
    "label": "TopologyRefinerFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TopologyRefinerFactory"
  },
  {
    "label": "TopologyRefiner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TopologyRefiner"
  },
  {
    "label": "UniformOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UniformOptions"
  },
  {
    "label": "AdaptiveOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AdaptiveOptions"
  },
  {
    "label": "TopologyRefinerFactoryBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TopologyRefinerFactoryBase"
  },
  {
    "label": "PatchTableBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PatchTableBuilder"
  },
  {
    "label": "PatchBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PatchBuilder"
  },
  {
    "label": "PtexIndices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PtexIndices"
  },
  {
    "label": "TopologyRefiner()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSUBDIV3_FAR_TOPOLOGY_REFINER_H # define OPENSUBDIV3_FAR_TOPOLOGY_REFINER_H # include \" . . / version . h \" # include \" . . / sdc / types . h \" # include \" . . / sdc / options . h \" # include \" . . / far / types . h \" # include \" . . / far / topologyLevel . h \" # include<vector> namespace OpenSubdiv { namespace OPENSUBDIV_VERSION { namespace Vtr { namespace internal { class SparseSelector ; } } namespace Far { namespace internal { class FeatureMask ; } } namespace Far { template<REAL> class PrimvarRefinerReal ; template<class MESH> class TopologyRefinerFactory ; class TopologyRefiner { public :)",
    "insertText": "TopologyRefiner(Sdc::SchemeType type, Sdc::Options options = Sdc::Options())"
  },
  {
    "label": "TopologyRefiner()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "TopologyRefiner()"
  },
  {
    "label": "GetSchemeType()",
    "kind": "Method",
    "detail": "Function (Sdc::SchemeType)",
    "insertText": "GetSchemeType()"
  },
  {
    "label": "GetMaxLevel()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetMaxLevel()"
  },
  {
    "label": "SetRefinementLevel()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetRefinementLevel(int level)"
  },
  {
    "label": "RefineUniform()",
    "kind": "Method",
    "detail": "Function (refinementLevel = level& 0 xf ; } unsigned int refinementLevel : 4,orderVerticesFromFacesFirst : 1,fullTopologyInLastLevel : 1 ; } ; void)",
    "insertText": "RefineUniform(UniformOptions options)"
  },
  {
    "label": "GetUniformOptions()",
    "kind": "Method",
    "detail": "Function (UniformOptions)",
    "insertText": "GetUniformOptions()"
  },
  {
    "label": "SetIsolationLevel()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetIsolationLevel(int level)"
  },
  {
    "label": "SetSecondaryLevel()",
    "kind": "Method",
    "detail": "Function (isolationLevel = level& 0 xf ; } void)",
    "insertText": "SetSecondaryLevel(int level)"
  },
  {
    "label": "RefineAdaptive()",
    "kind": "Method",
    "detail": "Function (secondaryLevel = level& 0 xf ; } unsigned int isolationLevel : 4 ; unsigned int secondaryLevel : 4 ; unsigned int useSingleCreasePatch : 1 ; unsigned int useInfSharpPatch : 1 ; unsigned int considerFVarChannels : 1 ; unsigned int orderVerticesFromFacesFirst : 1 ; } ; void)",
    "insertText": "RefineAdaptive(AdaptiveOptions options, ConstIndexArray selectedFaces = ConstIndexArray())"
  },
  {
    "label": "GetAdaptiveOptions()",
    "kind": "Method",
    "detail": "Function (AdaptiveOptions)",
    "insertText": "GetAdaptiveOptions()"
  },
  {
    "label": "GetNumFVarChannels()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetNumFVarChannels()"
  },
  {
    "label": "GetFVarLinearInterpolation()",
    "kind": "Method",
    "detail": "Function (Sdc::Options::FVarLinearInterpolation)",
    "insertText": "GetFVarLinearInterpolation(int channel = 0)"
  },
  {
    "label": "GetNumFVarValuesTotal()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetNumFVarValuesTotal(int channel = 0)"
  },
  {
    "label": "TopologyRefiner()",
    "kind": "Method",
    "detail": "Function (protected : template<class MESH> class TopologyRefinerFactory ; class TopologyRefinerFactoryBase ; class PatchTableBuilder ; class PatchBuilder ; class PtexIndices ; template<REAL> class PrimvarRefinerReal ;)",
    "insertText": "TopologyRefiner(TopologyRefiner const & source)"
  },
  {
    "label": "getLevel()",
    "kind": "Method",
    "detail": "Function (public : Vtr::internal::Level&)",
    "insertText": "getLevel(int l)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} TopologyRefiner&)",
    "insertText": "operator(TopologyRefiner const &)"
  },
  {
    "label": "selectLinearIrregularFaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "selectLinearIrregularFaces(Vtr::internal::SparseSelector& selector, ConstIndexArray selectedFaces)"
  },
  {
    "label": "initializeInventory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeInventory()"
  },
  {
    "label": "updateInventory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "updateInventory(Vtr::internal::Level const & newLevel)"
  },
  {
    "label": "appendLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appendLevel(Vtr::internal::Level & newLevel)"
  },
  {
    "label": "appendRefinement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appendRefinement(Vtr::internal::Refinement & newRefinement)"
  },
  {
    "label": "assembleFarLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assembleFarLevels()"
  },
  {
    "label": "GetFVarLinearInterpolation()",
    "kind": "Method",
    "detail": "Function (} Sdc::Options::FVarLinearInterpolation)",
    "insertText": "GetFVarLinearInterpolation(int channel)"
  }
]