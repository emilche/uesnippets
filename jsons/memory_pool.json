[
  {
    "label": "pool_base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "pool_base"
  },
  {
    "label": "void",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "void"
  },
  {
    "label": "memory_pool_allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "memory_pool_allocator"
  },
  {
    "label": "memory_pool_allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "memory_pool_allocator"
  },
  {
    "label": "rebind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rebind"
  },
  {
    "label": "memory_pool_allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "memory_pool_allocator"
  },
  {
    "label": "rebind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rebind"
  },
  {
    "label": "memory_pool_allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "memory_pool_allocator"
  },
  {
    "label": "memory_pool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "memory_pool"
  },
  {
    "label": "optimization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "optimization"
  },
  {
    "label": "fixed_pool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "fixed_pool"
  },
  {
    "label": "deallocate_request()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "deallocate_request(intptr_t pool_id, void*, size_t raw_bytes)"
  },
  {
    "label": "fixed_pool()",
    "kind": "Method",
    "detail": "Function (inline)",
    "insertText": "fixed_pool(void *buf, size_t size)"
  },
  {
    "label": "args()",
    "kind": "Method",
    "detail": "Function (rml::MemPoolPolicy)",
    "insertText": "args(allocate_request, 0, size, /*fixedPool=*/true)"
  }
]