[
  {
    "label": "StringPieceToStringView()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_STRINGS_ABSEIL_STRING_CONVERSIONS_H_ # define BASE_STRINGS_ABSEIL_STRING_CONVERSIONS_H_ # include<vector> # include \" base / base_export . h \" # include \" base / containers / span . h \" # include \" base / strings / string_piece . h \" # include \" third_party / abseil - cpp / absl / strings / string_view . h \" namespace base { absl::string_view)",
    "insertText": "StringPieceToStringView(StringPiece piece)"
  },
  {
    "label": "StringViewToStringPiece()",
    "kind": "Method",
    "detail": "Function (} StringPiece)",
    "insertText": "StringViewToStringPiece(absl::string_view view)"
  },
  {
    "label": "StringPiecesToStringViews()",
    "kind": "Method",
    "detail": "Function (} BASE_EXPORT std::vector<absl::string_view>)",
    "insertText": "StringPiecesToStringViews(span<const StringPiece> pieces)"
  },
  {
    "label": "StringViewsToStringPieces()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT std::vector<StringPiece>)",
    "insertText": "StringViewsToStringPieces(span<const absl::string_view> views)"
  }
]