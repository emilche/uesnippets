[
  {
    "label": "FTasksProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTasksProvider"
  },
  {
    "label": "FTasksProvider()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FTasksProvider(IAnalysisSession& Session)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(uint32 Version)"
  },
  {
    "label": "TaskCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskCreated(TaskTrace::FId TaskId, double Timestamp, uint32 ThreadId, uint64 TaskSize)"
  },
  {
    "label": "TaskLaunched()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskLaunched(TaskTrace::FId TaskId, const TCHAR* DebugName, bool bTracked, int32 ThreadToExecuteOn, double Timestamp, uint32 ThreadId, uint64 TaskSize)"
  },
  {
    "label": "TaskScheduled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskScheduled(TaskTrace::FId TaskId, double Timestamp, uint32 ThreadId)"
  },
  {
    "label": "SubsequentAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubsequentAdded(TaskTrace::FId TaskId, TaskTrace::FId SubsequentId, double Timestamp, uint32 ThreadId)"
  },
  {
    "label": "TaskStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskStarted(TaskTrace::FId TaskId, double Timestamp, uint32 ThreadId)"
  },
  {
    "label": "TaskFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskFinished(TaskTrace::FId TaskId, double Timestamp)"
  },
  {
    "label": "TaskCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskCompleted(TaskTrace::FId TaskId, double Timestamp, uint32 ThreadId)"
  },
  {
    "label": "TaskDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskDestroyed(TaskTrace::FId TaskId, double Timestamp, uint32 ThreadId)"
  },
  {
    "label": "WaitingStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitingStarted(TArray<TaskTrace::FId> Tasks, double Timestamp, uint32 ThreadId)"
  },
  {
    "label": "WaitingFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitingFinished(double Timestamp, uint32 ThreadId)"
  },
  {
    "label": "InitTaskIdToIndexConversion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTaskIdToIndexConversion(TaskTrace::FId FirstTaskId)"
  },
  {
    "label": "IsNamedThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNamedThread(int32 Thread)"
  },
  {
    "label": "CreateCounters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCounters()"
  },
  {
    "label": "AddRelative()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRelative(const TCHAR* RelativeType, TaskTrace::FId TaskId, TArray<FTaskInfo::FRelationInfo> FTaskInfo::* RelationsPtr, TaskTrace::FId RelativeId, double Timestamp, uint32 ThreadId)"
  }
]