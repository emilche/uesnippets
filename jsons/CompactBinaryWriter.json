[
  {
    "label": "FCompositeBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompositeBuffer"
  },
  {
    "label": "FSharedBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSharedBuffer"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FCbAttachment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbAttachment"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FDateTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDateTime"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FIoHash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIoHash"
  },
  {
    "label": "FTimespan",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimespan"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FState"
  },
  {
    "label": "TCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TCbWriter"
  },
  {
    "label": "FCbWriter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainersFwd . h \" # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" CoreTypes . h \" # include \" HAL / PlatformCrt . h \" # include \" Memory / MemoryFwd . h \" # include \" Memory / MemoryView . h \" # include \" Serialization / CompactBinary . h \" # include<type_traits> class FCompositeBuffer ; class FSharedBuffer ; class FArchive ; class FCbAttachment ; class FName ; struct FDateTime ; struct FGuid ; struct FIoHash ; struct FTimespan ; class FCbWriter { public :)",
    "insertText": "FCbWriter()"
  },
  {
    "label": "FCbWriter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCbWriter(const FCbWriter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "operator(const FCbWriter&)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (FCbFieldIterator)",
    "insertText": "Save()"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (FCbFieldViewIterator)",
    "insertText": "Save(FMutableMemoryView Buffer)"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Save(FArchive& Ar)"
  },
  {
    "label": "GetSaveSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetSaveSize()"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "SetName(FUtf8StringView Name)"
  },
  {
    "label": "AddField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddField(FUtf8StringView Name, const FCbFieldView& Value)"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(Name)"
  },
  {
    "label": "AddField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddField(Value)"
  },
  {
    "label": "AddField()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddField(const FCbFieldView& Value)"
  },
  {
    "label": "AddField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddField(FUtf8StringView Name, const FCbField& Value)"
  },
  {
    "label": "AddField()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddField(const FCbField& Value)"
  },
  {
    "label": "BeginObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginObject(FUtf8StringView Name)"
  },
  {
    "label": "BeginObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginObject()"
  },
  {
    "label": "EndObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndObject()"
  },
  {
    "label": "AddObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObject(FUtf8StringView Name, const FCbObjectView& Value)"
  },
  {
    "label": "AddObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObject(Value)"
  },
  {
    "label": "AddObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddObject(const FCbObjectView& Value)"
  },
  {
    "label": "AddObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObject(FUtf8StringView Name, const FCbObject& Value)"
  },
  {
    "label": "AddObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddObject(const FCbObject& Value)"
  },
  {
    "label": "BeginArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginArray(FUtf8StringView Name)"
  },
  {
    "label": "BeginArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginArray()"
  },
  {
    "label": "EndArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndArray()"
  },
  {
    "label": "AddArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddArray(FUtf8StringView Name, const FCbArrayView& Value)"
  },
  {
    "label": "AddArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddArray(Value)"
  },
  {
    "label": "AddArray()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddArray(const FCbArrayView& Value)"
  },
  {
    "label": "AddArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddArray(FUtf8StringView Name, const FCbArray& Value)"
  },
  {
    "label": "AddArray()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddArray(const FCbArray& Value)"
  },
  {
    "label": "AddNull()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNull(FUtf8StringView Name)"
  },
  {
    "label": "AddNull()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNull()"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBinary(FUtf8StringView Name, const void* Value, uint64 Size)"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBinary(Value, Size)"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddBinary(const void* Value, uint64 Size)"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBinary(FUtf8StringView Name, FMemoryView Value)"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBinary(Value)"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddBinary(FMemoryView Value)"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBinary(Value.GetData(), Value.GetSize())"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddBinary(FUtf8StringView Name, const FSharedBuffer& Value)"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddBinary(const FSharedBuffer& Value)"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBinary(FUtf8StringView Name, const FCompositeBuffer& Value)"
  },
  {
    "label": "AddBinary()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddBinary(const FCompositeBuffer& Value)"
  },
  {
    "label": "AddString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddString(FUtf8StringView Name, FUtf8StringView Value)"
  },
  {
    "label": "AddString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddString(Value)"
  },
  {
    "label": "AddString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddString(FUtf8StringView Value)"
  },
  {
    "label": "AddString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddString(FUtf8StringView Name, FWideStringView Value)"
  },
  {
    "label": "AddString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddString(FWideStringView Value)"
  },
  {
    "label": "AddInteger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInteger(FUtf8StringView Name, int32 Value)"
  },
  {
    "label": "AddInteger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInteger(Value)"
  },
  {
    "label": "AddInteger()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddInteger(int32 Value)"
  },
  {
    "label": "AddInteger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInteger(FUtf8StringView Name, int64 Value)"
  },
  {
    "label": "AddInteger()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddInteger(int64 Value)"
  },
  {
    "label": "AddInteger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInteger(FUtf8StringView Name, uint32 Value)"
  },
  {
    "label": "AddInteger()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddInteger(uint32 Value)"
  },
  {
    "label": "AddInteger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInteger(FUtf8StringView Name, uint64 Value)"
  },
  {
    "label": "AddInteger()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddInteger(uint64 Value)"
  },
  {
    "label": "AddFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFloat(FUtf8StringView Name, float Value)"
  },
  {
    "label": "AddFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFloat(Value)"
  },
  {
    "label": "AddFloat()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddFloat(float Value)"
  },
  {
    "label": "AddFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFloat(FUtf8StringView Name, double Value)"
  },
  {
    "label": "AddFloat()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddFloat(double Value)"
  },
  {
    "label": "AddBool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBool(FUtf8StringView Name, bool bValue)"
  },
  {
    "label": "AddBool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBool(bValue)"
  },
  {
    "label": "AddBool()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddBool(bool bValue)"
  },
  {
    "label": "AddObjectAttachment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectAttachment(FUtf8StringView Name, const FIoHash& Value)"
  },
  {
    "label": "AddObjectAttachment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectAttachment(Value)"
  },
  {
    "label": "AddObjectAttachment()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddObjectAttachment(const FIoHash& Value)"
  },
  {
    "label": "AddBinaryAttachment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBinaryAttachment(FUtf8StringView Name, const FIoHash& Value)"
  },
  {
    "label": "AddBinaryAttachment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBinaryAttachment(Value)"
  },
  {
    "label": "AddBinaryAttachment()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddBinaryAttachment(const FIoHash& Value)"
  },
  {
    "label": "AddAttachment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAttachment(FUtf8StringView Name, const FCbAttachment& Attachment)"
  },
  {
    "label": "AddAttachment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAttachment(Attachment)"
  },
  {
    "label": "AddAttachment()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddAttachment(const FCbAttachment& Attachment)"
  },
  {
    "label": "AddHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHash(FUtf8StringView Name, const FIoHash& Value)"
  },
  {
    "label": "AddHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHash(Value)"
  },
  {
    "label": "AddHash()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddHash(const FIoHash& Value)"
  },
  {
    "label": "AddUuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUuid(FUtf8StringView Name, const FGuid& Value)"
  },
  {
    "label": "AddUuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUuid(Value)"
  },
  {
    "label": "AddUuid()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddUuid(const FGuid& Value)"
  },
  {
    "label": "AddDateTimeTicks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDateTimeTicks(FUtf8StringView Name, int64 Ticks)"
  },
  {
    "label": "AddDateTimeTicks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDateTimeTicks(Ticks)"
  },
  {
    "label": "AddDateTimeTicks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddDateTimeTicks(int64 Ticks)"
  },
  {
    "label": "AddDateTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDateTime(FUtf8StringView Name, FDateTime Value)"
  },
  {
    "label": "AddDateTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDateTime(FDateTime Value)"
  },
  {
    "label": "AddTimeSpanTicks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeSpanTicks(FUtf8StringView Name, int64 Ticks)"
  },
  {
    "label": "AddTimeSpanTicks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeSpanTicks(Ticks)"
  },
  {
    "label": "AddTimeSpanTicks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddTimeSpanTicks(int64 Ticks)"
  },
  {
    "label": "AddTimeSpan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeSpan(FUtf8StringView Name, FTimespan Value)"
  },
  {
    "label": "AddTimeSpan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeSpan(FTimespan Value)"
  },
  {
    "label": "AddObjectId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectId(FUtf8StringView Name, const FCbObjectId& Value)"
  },
  {
    "label": "AddObjectId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectId(Value)"
  },
  {
    "label": "AddObjectId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddObjectId(const FCbObjectId& Value)"
  },
  {
    "label": "AddCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustom(FUtf8StringView FieldName, uint64 TypeId, FMemoryView Value)"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(FieldName)"
  },
  {
    "label": "AddCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustom(TypeId, Value)"
  },
  {
    "label": "AddCustom()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddCustom(uint64 TypeId, FMemoryView Value)"
  },
  {
    "label": "AddCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustom(FUtf8StringView FieldName, FUtf8StringView TypeName, FMemoryView Value)"
  },
  {
    "label": "AddCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustom(TypeName, Value)"
  },
  {
    "label": "AddCustom()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddCustom(FUtf8StringView TypeName, FMemoryView Value)"
  },
  {
    "label": "FCbWriter()",
    "kind": "Method",
    "detail": "Function (enum class EStateFlags : uint8 ; protected :)",
    "insertText": "FCbWriter(int64 InitialSize)"
  },
  {
    "label": "BeginField()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BeginField()"
  },
  {
    "label": "EndField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndField(ECbFieldType Type)"
  },
  {
    "label": "SetNameOrAddString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNameOrAddString(FUtf8StringView NameOrValue)"
  },
  {
    "label": "GetActiveName()",
    "kind": "Method",
    "detail": "Function (FUtf8StringView)",
    "insertText": "GetActiveName()"
  },
  {
    "label": "MakeFieldsUniform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeFieldsUniform(int64 FieldBeginOffset, int64 FieldEndOffset)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (struct FState { EStateFlags Flags { } ; ECbFieldType UniformType { } ; int64 Offset { } ; uint64 Count { } ; } ; private : TArray64<uint8> Data ; TArray<FState> States ; public : FCbWriter&)",
    "insertText": "operator(FUtf8StringView NameOrValue)"
  },
  {
    "label": "SetNameOrAddString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNameOrAddString(NameOrValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FCbWriter&)",
    "insertText": "operator(const UTF8CHAR* NameOrValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FCbWriter&)",
    "insertText": "operator(const FCbFieldView& Value)"
  },
  {
    "label": "AddInteger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInteger(static_cast<uint64>(Value))"
  },
  {
    "label": "AddBool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBool(Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "operator(FTimespan Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "operator(const FCbObjectId& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "operator(const FAnsiString& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "operator(const FUtf8String& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "operator(FName Value)"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (template<T,Allocator,std::void_t<)",
    "insertText": "decltype(std::declval<FCbWriter&>() << std::declval<const T&>())>* = nullptr> inline FCbWriter& operator<<(const TArray<T, Allocator>& Value)"
  },
  {
    "label": "TCbWriter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TCbWriter(const TCbWriter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TCbWriter&)",
    "insertText": "operator(const TCbWriter&)"
  }
]