[
  {
    "label": "USoundSubmix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundSubmix"
  },
  {
    "label": "USoundWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWave"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSwapAudioOutputResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSwapAudioOutputResult"
  },
  {
    "label": "FAudioOutputDeviceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioOutputDeviceInfo"
  },
  {
    "label": "UAudioMixerBlueprintLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAudioMixerBlueprintLibrary"
  },
  {
    "label": "DataFormatAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DataFormatAsString(EAudioMixerStreamDataFormatType type)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FrontLeft\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FrontRight\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FrontCenter\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"LowFrequency\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"BackLeft\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"BackRight\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FrontLeftOfCenter\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FrontRightOfCenter\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"BackCenter\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"SideLeft\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"SideRight\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TopCenter\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TopFrontLeft\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TopFrontCenter\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TopFrontRight\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TopBackLeft\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TopBackCenter\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TopBackRight\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"Unknown\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"UNSUPPORTED\")"
  },
  {
    "label": "FAudioOutputDeviceInfo()",
    "kind": "Method",
    "detail": "Function (AUDIOMIXER_API)",
    "insertText": "FAudioOutputDeviceInfo(const Audio::FAudioPlatformDeviceInfo& InDeviceInfo)"
  },
  {
    "label": "Conv_AudioOutputDeviceInfoToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "Conv_AudioOutputDeviceInfoToString(const FAudioOutputDeviceInfo& Info)"
  },
  {
    "label": "AddMasterSubmixEffect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMasterSubmixEffect(const UObject* WorldContextObject, USoundEffectSubmixPreset* SubmixEffectPreset)"
  },
  {
    "label": "RemoveMasterSubmixEffect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMasterSubmixEffect(const UObject* WorldContextObject, USoundEffectSubmixPreset* SubmixEffectPreset)"
  },
  {
    "label": "ClearMasterSubmixEffects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMasterSubmixEffects(const UObject* WorldContextObject)"
  },
  {
    "label": "AddSubmixEffect()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddSubmixEffect(const UObject* WorldContextObject, USoundSubmix* SoundSubmix, USoundEffectSubmixPreset* SubmixEffectPreset)"
  },
  {
    "label": "RemoveSubmixEffectPreset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSubmixEffectPreset(const UObject* WorldContextObject, USoundSubmix* SoundSubmix, USoundEffectSubmixPreset* SubmixEffectPreset)"
  },
  {
    "label": "RemoveSubmixEffect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSubmixEffect(const UObject* WorldContextObject, USoundSubmix* SoundSubmix, USoundEffectSubmixPreset* SubmixEffectPreset)"
  },
  {
    "label": "RemoveSubmixEffectPresetAtIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSubmixEffectPresetAtIndex(const UObject* WorldContextObject, USoundSubmix* SoundSubmix, int32 SubmixChainIndex)"
  },
  {
    "label": "RemoveSubmixEffectAtIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSubmixEffectAtIndex(const UObject* WorldContextObject, USoundSubmix* SoundSubmix, int32 SubmixChainIndex)"
  },
  {
    "label": "ReplaceSoundEffectSubmix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceSoundEffectSubmix(const UObject* WorldContextObject, USoundSubmix* InSoundSubmix, int32 SubmixChainIndex, USoundEffectSubmixPreset* SubmixEffectPreset)"
  },
  {
    "label": "ReplaceSubmixEffect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceSubmixEffect(const UObject* WorldContextObject, USoundSubmix* InSoundSubmix, int32 SubmixChainIndex, USoundEffectSubmixPreset* SubmixEffectPreset)"
  },
  {
    "label": "ClearSubmixEffects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSubmixEffects(const UObject* WorldContextObject, USoundSubmix* SoundSubmix)"
  },
  {
    "label": "SetSubmixEffectChainOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSubmixEffectChainOverride(const UObject* WorldContextObject, USoundSubmix* SoundSubmix, TArray<USoundEffectSubmixPreset*> SubmixEffectPresetChain, float FadeTimeSec)"
  },
  {
    "label": "ClearSubmixEffectChainOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSubmixEffectChainOverride(const UObject* WorldContextObject, USoundSubmix* SoundSubmix, float FadeTimeSec)"
  },
  {
    "label": "StartRecordingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartRecordingOutput(const UObject* WorldContextObject, float ExpectedDuration, USoundSubmix* SubmixToRecord = nullptr)"
  },
  {
    "label": "PauseRecordingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseRecordingOutput(const UObject* WorldContextObject, USoundSubmix* SubmixToPause = nullptr)"
  },
  {
    "label": "ResumeRecordingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeRecordingOutput(const UObject* WorldContextObject, USoundSubmix* SubmixToPause = nullptr)"
  },
  {
    "label": "StartAnalyzingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAnalyzingOutput(const UObject* WorldContextObject, USoundSubmix* SubmixToAnalyze = nullptr, EFFTSize FFTSize = EFFTSize::DefaultSize, EFFTPeakInterpolationMethod InterpolationMethod = EFFTPeakInterpolationMethod::Linear, EFFTWindowType WindowType = EFFTWindowType::Hann, float HopSize = 0, EAudioSpectrumType SpectrumType = EAudioSpectrumType::MagnitudeSpectrum)"
  },
  {
    "label": "StopAnalyzingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopAnalyzingOutput(const UObject* WorldContextObject, USoundSubmix* SubmixToStopAnalyzing = nullptr)"
  },
  {
    "label": "MakeMusicalSpectralAnalysisBandSettings()",
    "kind": "Method",
    "detail": "Function (TArray<FSoundSubmixSpectralAnalysisBandSettings>)",
    "insertText": "MakeMusicalSpectralAnalysisBandSettings(int32 InNumSemitones=60, EMusicalNoteName InStartingMusicalNote = EMusicalNoteName::C, int32 InStartingOctave = 2, int32 InAttackTimeMsec = 10, int32 InReleaseTimeMsec = 10)"
  },
  {
    "label": "MakeFullSpectrumSpectralAnalysisBandSettings()",
    "kind": "Method",
    "detail": "Function (TArray<FSoundSubmixSpectralAnalysisBandSettings>)",
    "insertText": "MakeFullSpectrumSpectralAnalysisBandSettings(int32 InNumBands = 30, float InMinimumFrequency=40.f, float InMaximumFrequency=16000.f, int32 InAttackTimeMsec = 10, int32 InReleaseTimeMsec = 10)"
  },
  {
    "label": "MakePresetSpectralAnalysisBandSettings()",
    "kind": "Method",
    "detail": "Function (TArray<FSoundSubmixSpectralAnalysisBandSettings>)",
    "insertText": "MakePresetSpectralAnalysisBandSettings(EAudioSpectrumBandPresetType InBandPresetType, int32 InNumBands = 10, int32 InAttackTimeMsec = 10, int32 InReleaseTimeMsec = 10)"
  },
  {
    "label": "GetMagnitudeForFrequencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMagnitudeForFrequencies(const UObject* WorldContextObject, const TArray<float>& Frequencies, TArray<float>& Magnitudes, USoundSubmix* SubmixToAnalyze = nullptr)"
  },
  {
    "label": "GetPhaseForFrequencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhaseForFrequencies(const UObject* WorldContextObject, const TArray<float>& Frequencies, TArray<float>& Phases, USoundSubmix* SubmixToAnalyze = nullptr)"
  },
  {
    "label": "AddSourceEffectToPresetChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSourceEffectToPresetChain(const UObject* WorldContextObject, USoundEffectSourcePresetChain* PresetChain, FSourceEffectChainEntry Entry)"
  },
  {
    "label": "RemoveSourceEffectFromPresetChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSourceEffectFromPresetChain(const UObject* WorldContextObject, USoundEffectSourcePresetChain* PresetChain, int32 EntryIndex)"
  },
  {
    "label": "SetBypassSourceEffectChainEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBypassSourceEffectChainEntry(const UObject* WorldContextObject, USoundEffectSourcePresetChain* PresetChain, int32 EntryIndex, bool bBypassed)"
  },
  {
    "label": "GetNumberOfEntriesInSourceEffectChain()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberOfEntriesInSourceEffectChain(const UObject* WorldContextObject, USoundEffectSourcePresetChain* PresetChain)"
  },
  {
    "label": "PrimeSoundForPlayback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrimeSoundForPlayback(USoundWave* SoundWave, const FOnSoundLoadComplete OnLoadCompletion)"
  },
  {
    "label": "PrimeSoundCueForPlayback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrimeSoundCueForPlayback(USoundCue* SoundCue)"
  },
  {
    "label": "TrimAudioCache()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "TrimAudioCache(float InMegabytesToFree)"
  },
  {
    "label": "StartAudioBus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAudioBus(const UObject* WorldContextObject, UAudioBus* AudioBus)"
  },
  {
    "label": "StopAudioBus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopAudioBus(const UObject* WorldContextObject, UAudioBus* AudioBus)"
  },
  {
    "label": "IsAudioBusActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAudioBusActive(const UObject* WorldContextObject, UAudioBus* AudioBus)"
  },
  {
    "label": "RegisterAudioBusToSubmix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAudioBusToSubmix(const UObject* WorldContextObject, USoundSubmix* SoundSubmix, UAudioBus* AudioBus)"
  },
  {
    "label": "UnregisterAudioBusFromSubmix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAudioBusFromSubmix(const UObject* WorldContextObject, USoundSubmix* SoundSubmix, UAudioBus* AudioBus)"
  },
  {
    "label": "GetAvailableAudioOutputDevices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAvailableAudioOutputDevices(const UObject* WorldContextObject, const FOnAudioOutputDevicesObtained& OnObtainDevicesEvent)"
  },
  {
    "label": "GetCurrentAudioOutputDeviceName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCurrentAudioOutputDeviceName(const UObject* WorldContextObject, const FOnMainAudioOutputDeviceObtained& OnObtainCurrentDeviceEvent)"
  },
  {
    "label": "SwapAudioOutputDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapAudioOutputDevice(const UObject* WorldContextObject, const FString& NewDeviceId, const FOnCompletedDeviceSwap& OnCompletedDeviceSwap)"
  }
]