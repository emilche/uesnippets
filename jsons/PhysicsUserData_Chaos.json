[
  {
    "label": "UPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterial"
  },
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "FConstraintInstanceBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintInstanceBase"
  },
  {
    "label": "FPhysicsUserData_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsUserData_Chaos"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FPhysicsUserData_Chaos()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" EngineDefines . h \" # include \" Physics / PhysicsInterfaceDeclares . h \" class UPhysicalMaterial ; struct FBodyInstance ; struct FConstraintInstanceBase ; class FPhysicsUserData_Chaos { private : enum EType { Invalid,BodyInstance,PhysicalMaterial,PhysScene,ConstraintInstanceBase } ; EType Type ; void* Payload ; public :)",
    "insertText": "FPhysicsUserData_Chaos() : Type(EType::Invalid), Payload(nullptr)"
  },
  {
    "label": "FPhysicsUserData_Chaos()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysicsUserData_Chaos(FBodyInstance* InPayload) : Type(EType::BodyInstance), Payload(InPayload)"
  },
  {
    "label": "FPhysicsUserData_Chaos()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysicsUserData_Chaos(UPhysicalMaterial* InPayload) : Type(EType::PhysicalMaterial), Payload(InPayload)"
  },
  {
    "label": "FPhysicsUserData_Chaos()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysicsUserData_Chaos(FPhysScene* InPayload) : Type(EType::PhysScene), Payload(InPayload)"
  },
  {
    "label": "FPhysicsUserData_Chaos()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysicsUserData_Chaos(FConstraintInstanceBase* InPayload) : Type(EType::ConstraintInstanceBase), Payload(InPayload)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} template<class T> T*)",
    "insertText": "Get(void* UserData)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (template<class T> void)",
    "insertText": "Set(void* UserData, T* InPayload)"
  },
  {
    "label": "ChaosUserData()",
    "kind": "Method",
    "detail": "Function (FPhysicsUserData_Chaos*)",
    "insertText": "ChaosUserData(FPhysicsUserData_Chaos*)"
  }
]