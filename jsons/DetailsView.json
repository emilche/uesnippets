[
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FPropertyAndParent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyAndParent"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "SCRIPTABLEEDITORWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCRIPTABLEEDITORWIDGETS_API"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / PropertyViewBase . h \" # include \" Containers / Array . h \" # include \" Misc / NotifyHook . h \" # include \" PropertyEditorDelegates . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / UnrealNames . h \" # include \" DetailsView . generated . h \" class FProperty ; class IDetailsView ; class UObject ; struct FPropertyAndParent ; struct FPropertyChangedEvent ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY(EditAnywhere, Category = \"View\")"
  },
  {
    "label": "BuildContentWidget()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BuildContentWidget()"
  },
  {
    "label": "OnObjectChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectChanged()"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "NotifyPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPostChange(const FPropertyChangedEvent& PropertyChangedEvent, FProperty* PropertyThatChanged)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "ToggleShowingOnlyAllowedProperties()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ToggleShowingOnlyAllowedProperties()"
  },
  {
    "label": "IsRowVisibilityFiltered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRowVisibilityFiltered()"
  },
  {
    "label": "GetIsPropertyVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsPropertyVisible(const FPropertyAndParent& PropertyAndParent)"
  },
  {
    "label": "GetIsRowVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsRowVisible(FName InRowName, FName InParentName)"
  }
]