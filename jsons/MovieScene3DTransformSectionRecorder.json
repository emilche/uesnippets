[
  {
    "label": "FMovieScene3DTransformSectionRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieScene3DTransformSectionRecorder"
  },
  {
    "label": "UMovieScene3DTransformSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene3DTransformSection"
  },
  {
    "label": "UMovieScene3DTransformTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene3DTransformTrack"
  },
  {
    "label": "FActorRecordingSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorRecordingSettings"
  },
  {
    "label": "FMovieScene3DTransformSectionRecorderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieScene3DTransformSectionRecorderFactory"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMovieSceneAnimationSectionRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneAnimationSectionRecorder"
  },
  {
    "label": "FBufferedTransformKeys",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBufferedTransformKeys"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "FMovieScene3DTransformSectionRecorderFactory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IMovieSceneSectionRecorder . h \" # include \" IMovieSceneSectionRecorderFactory . h \" # include \" Sections / MovieSceneAnimationSectionRecorder . h \" # include \" MovieScene . h \" # include \" Sections / MovieScene3DTransformSectionRecorderSettings . h \" class FMovieScene3DTransformSectionRecorder ; class UMovieScene3DTransformSection ; class UMovieScene3DTransformTrack ; struct FActorRecordingSettings ; class FMovieScene3DTransformSectionRecorderFactory : public IMovieSceneSectionRecorderFactory { public : ~)",
    "insertText": "FMovieScene3DTransformSectionRecorderFactory()"
  },
  {
    "label": "CanRecordObject()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanRecordObject(class UObject* InObjectToRecord)"
  },
  {
    "label": "CreateSettingsObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "CreateSettingsObject(class UObject* InOuter)"
  },
  {
    "label": "CreateSectionRecorder()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<class FMovieScene3DTransformSectionRecorder>)",
    "insertText": "CreateSectionRecorder(bool bRecordTransforms, TSharedPtr<class FMovieSceneAnimationSectionRecorder> InAnimRecorder)"
  },
  {
    "label": "CreateSectionRecorder()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<IMovieSceneSectionRecorder>)",
    "insertText": "CreateSectionRecorder(const FActorRecordingSettings& InActorRecordingSettings)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} ; struct FBufferedTransformKeys { void)",
    "insertText": "Add(const FTransform& InTransform, FFrameNumber InKeyTime)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Times .)",
    "insertText": "Add(InKeyTime)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LocationX .)",
    "insertText": "Add(InTransform.GetTranslation().X)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LocationY .)",
    "insertText": "Add(InTransform.GetTranslation().Y)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LocationZ .)",
    "insertText": "Add(InTransform.GetTranslation().Z)"
  },
  {
    "label": "Rotator()",
    "kind": "Method",
    "detail": "Function (FRotator WoundRoation = InTransform .)",
    "insertText": "Rotator()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (RotationX .)",
    "insertText": "Add(WoundRoation.Roll)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (RotationY .)",
    "insertText": "Add(WoundRoation.Pitch)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (RotationZ .)",
    "insertText": "Add(WoundRoation.Yaw)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ScaleX .)",
    "insertText": "Add(InTransform.GetScale3D().X)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ScaleY .)",
    "insertText": "Add(InTransform.GetScale3D().Y)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ScaleZ .)",
    "insertText": "Add(InTransform.GetScale3D().Z)"
  },
  {
    "label": "FMovieScene3DTransformSectionRecorder()",
    "kind": "Method",
    "detail": "Function (} TArray<FFrameNumber> Times ; TArray<float> LocationX,LocationY,LocationZ ; TArray<float> RotationX,RotationY,RotationZ ; TArray<float> ScaleX,ScaleY,ScaleZ ; } ; class FMovieScene3DTransformSectionRecorder : public IMovieSceneSectionRecorder { public :)",
    "insertText": "FMovieScene3DTransformSectionRecorder(bool bInActuallyRecord, TSharedPtr<class FMovieSceneAnimationSectionRecorder> InAnimRecorder = nullptr) : bRecording(bInActuallyRecord) , AnimRecorder(InAnimRecorder)"
  },
  {
    "label": "FMovieScene3DTransformSectionRecorder()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FMovieScene3DTransformSectionRecorder()"
  },
  {
    "label": "CreateSection()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CreateSection(UObject* InObjectToRecord, class UMovieScene* InMovieScene, const FGuid& Guid, float Time)"
  },
  {
    "label": "FinalizeSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeSection(float CurrentTime)"
  },
  {
    "label": "Record()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Record(float CurrentTime)"
  },
  {
    "label": "InvalidateObjectToRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateObjectToRecord()"
  },
  {
    "label": "GetSourceObject()",
    "kind": "Method",
    "detail": "Function (ObjectToRecord = nullptr ; } UObject*)",
    "insertText": "GetSourceObject()"
  },
  {
    "label": "GetTransformToRecord()",
    "kind": "Method",
    "detail": "Function (} private : bool)",
    "insertText": "GetTransformToRecord(FTransform& TransformToRecord)"
  }
]