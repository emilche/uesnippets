[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ComInitBalancer()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_WIN_COM_INIT_BALANCER_H_ # define BASE_WIN_COM_INIT_BALANCER_H_ # include<objidl . h> # include<winnt . h> # include<wrl / implements . h> # include \" base / base_export . h \" # include \" base / threading / thread_checker . h \" # include \" base / win / windows_types . h \" # include \" third_party / abseil - cpp / absl / types / optional . h \" namespace base { namespace win { namespace internal { class BASE_EXPORT ComInitBalancer : public Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<Microsoft::WRL::ClassicCom>,IInitializeSpy> { public :)",
    "insertText": "ComInitBalancer(DWORD co_init)"
  },
  {
    "label": "ComInitBalancer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComInitBalancer(const ComInitBalancer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ComInitBalancer&)",
    "insertText": "operator(const ComInitBalancer&)"
  },
  {
    "label": "ComInitBalancer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ComInitBalancer()"
  },
  {
    "label": "Disable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Disable()"
  },
  {
    "label": "GetReferenceCountForTesting()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "GetReferenceCountForTesting()"
  },
  {
    "label": "PreInitialize()",
    "kind": "Method",
    "detail": "Function (private : IFACEMETHODIMP)",
    "insertText": "PreInitialize(DWORD apartment_type, DWORD reference_count)"
  },
  {
    "label": "THREAD_CHECKER()",
    "kind": "Method",
    "detail": "Function (const DWORD co_init_ ; DWORD reference_count_ = 0 ; absl::optional<ULARGE_INTEGER> spy_cookie_ ;)",
    "insertText": "THREAD_CHECKER(thread_checker_)"
  }
]