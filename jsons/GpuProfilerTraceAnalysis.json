[
  {
    "label": "FAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnalysisSession"
  },
  {
    "label": "FGpuProfilerAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGpuProfilerAnalyzer"
  },
  {
    "label": "FGpuProfilerAnalyzer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Trace / Analyzer . h \" # include \" Model / TimingProfilerPrivate . h \" namespace TraceServices { class FAnalysisSession ; class FGpuProfilerAnalyzer : public UE::Trace::IAnalyzer { public :)",
    "insertText": "FGpuProfilerAnalyzer(FAnalysisSession& Session, FTimingProfilerProvider& TimingProfilerProvider)"
  },
  {
    "label": "OnAnalysisBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnalysisBegin(const FOnAnalysisContext& Context)"
  },
  {
    "label": "OnAnalysisEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnalysisEnd()"
  },
  {
    "label": "OnEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnEvent(uint16 RouteId, EStyle Style, const FOnEventContext& Context)"
  }
]