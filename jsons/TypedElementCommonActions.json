[
  {
    "label": "UTypedElementSelectionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementSelectionSet"
  },
  {
    "label": "FTypedElementCommonActionsCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTypedElementCommonActionsCustomization"
  },
  {
    "label": "FTypedElementCommonActionsElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementCommonActionsElement"
  },
  {
    "label": "FTypedElementPasteOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementPasteOptions"
  },
  {
    "label": "UTypedElementCommonActions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementCommonActions"
  },
  {
    "label": "FTypedElementCommonActionsCustomization()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Elements / Framework / TypedElementListProxy . h \" # include \" Elements / Framework / TypedElementInterfaceCustomization . h \" # include \" Elements / Interfaces / TypedElementWorldInterface . h \" # include \" Templates / Function . h \" # include \" Templates / SharedPointer . h \" # include \" TypedElementCommonActions . generated . h \" class UTypedElementSelectionSet ; class FTypedElementCommonActionsCustomization { public : ~)",
    "insertText": "FTypedElementCommonActionsCustomization()"
  },
  {
    "label": "DeleteElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteElements(ITypedElementWorldInterface* InWorldInterface, TArrayView<const FTypedElementHandle> InElementHandles, UWorld* InWorld, UTypedElementSelectionSet* InSelectionSet, const FTypedElementDeletionOptions& InDeletionOptions)"
  },
  {
    "label": "DuplicateElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateElements(ITypedElementWorldInterface* InWorldInterface, TArrayView<const FTypedElementHandle> InElementHandles, UWorld* InWorld, const FVector& InLocationOffset, TArray<FTypedElementHandle>& OutNewElements)"
  },
  {
    "label": "CopyElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyElements(ITypedElementWorldInterface* InWorldInterface,TArrayView<const FTypedElementHandle> InElementHandles, FOutputDevice& Out)"
  },
  {
    "label": "GetPasteImporter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FWorldElementPasteImporter>)",
    "insertText": "GetPasteImporter(ITypedElementWorldInterface* InWorldInterface, const FTypedElementListConstPtr& InSelectedHandles, UWorld* InWorld)"
  },
  {
    "label": "FTypedElementCommonActionsElement()",
    "kind": "Method",
    "detail": "Function (} ; struct FTypedElementCommonActionsElement { public :)",
    "insertText": "FTypedElementCommonActionsElement()"
  },
  {
    "label": "FTypedElementCommonActionsElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTypedElementCommonActionsElement(TTypedElement<ITypedElementWorldInterface> InElementWorldHandle, FTypedElementCommonActionsCustomization* InCommonActionsCustomization) : ElementWorldHandle(MoveTemp(InElementWorldHandle)) , CommonActionsCustomization(InCommonActionsCustomization)"
  },
  {
    "label": "FTypedElementCommonActionsElement()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTypedElementCommonActionsElement(const FTypedElementCommonActionsElement&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTypedElementCommonActionsElement&)",
    "insertText": "operator(const FTypedElementCommonActionsElement&)"
  },
  {
    "label": "FTypedElementCommonActionsElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTypedElementCommonActionsElement(FTypedElementCommonActionsElement&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTypedElementCommonActionsElement&)",
    "insertText": "operator(FTypedElementCommonActionsElement&&)"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSet()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} private : TTypedElement<ITypedElementWorldInterface> ElementWorldHandle ; FTypedElementCommonActionsCustomization* CommonActionsCustomization = nullptr ; } ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(BlueprintReadWrite, Category = \"TypedElementInterfaces|World|PasteOptions\")"
  },
  {
    "label": "FWorldElementPasteImporter()",
    "kind": "Method",
    "detail": "Function (TMap<FStringView,TFunction<TSharedRef<)",
    "insertText": "FWorldElementPasteImporter()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintCallable, Category=\"TypedElementFramework|Common\") ENGINE_API bool DeleteSelectedElements(UTypedElementSelectionSet* SelectionSet, UWorld* World, const FTypedElementDeletionOptions& DeletionOptions)"
  },
  {
    "label": "DeleteNormalizedElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteNormalizedElements(const FTypedElementListConstPtr& ElementListPtr, UWorld* World, UTypedElementSelectionSet* InSelectionSet, const FTypedElementDeletionOptions& DeletionOptions)"
  },
  {
    "label": "DuplicateSelectedElements()",
    "kind": "Method",
    "detail": "Function (TArray<FTypedElementHandle>)",
    "insertText": "DuplicateSelectedElements(const UTypedElementSelectionSet* SelectionSet, UWorld* World, const FVector& LocationOffset)"
  },
  {
    "label": "DuplicateNormalizedElements()",
    "kind": "Method",
    "detail": "Function (TArray<FTypedElementHandle>)",
    "insertText": "DuplicateNormalizedElements(const FTypedElementListConstPtr& ElementListPtr, UWorld* World, const FVector& LocationOffset)"
  },
  {
    "label": "CopyNormalizedElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyNormalizedElements(const FTypedElementListConstPtr& ElementListPtr, FString* OptionalOutputString = nullptr)"
  },
  {
    "label": "PasteElements()",
    "kind": "Method",
    "detail": "Function (TArray<FTypedElementHandle>)",
    "insertText": "PasteElements(UTypedElementSelectionSet* SelectionSet, UWorld* World, const FTypedElementPasteOptions& PasteOption, const FString* OptionalInputString = nullptr)"
  },
  {
    "label": "PasteNormalizedElements()",
    "kind": "Method",
    "detail": "Function (TArray<FTypedElementHandle>)",
    "insertText": "PasteNormalizedElements(const FTypedElementListConstPtr& ElementListPtr, UWorld* World, const FTypedElementPasteOptions& PasteOptions, const FString* OptionalInputString = nullptr)"
  },
  {
    "label": "ResolveCommonActionsElement()",
    "kind": "Method",
    "detail": "Function (private : FTypedElementCommonActionsElement)",
    "insertText": "ResolveCommonActionsElement(const FTypedElementHandle& InElementHandle)"
  },
  {
    "label": "IsElementCopyAndPasteEnabled()",
    "kind": "Method",
    "detail": "Function (} ; namespace TypedElementCommonActionsUtils { bool)",
    "insertText": "IsElementCopyAndPasteEnabled()"
  }
]