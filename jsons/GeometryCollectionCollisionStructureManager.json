[
  {
    "label": "FErrorReporter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FErrorReporter"
  },
  {
    "label": "FTriangleMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriangleMesh"
  },
  {
    "label": "FLevelSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelSet"
  },
  {
    "label": "TParticles",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TParticles"
  },
  {
    "label": "FCollisionStructureManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollisionStructureManager"
  },
  {
    "label": "FCollisionStructureManager()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FCollisionStructureManager()"
  },
  {
    "label": "UpdateImplicitFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateImplicitFlags(\n\t\tFImplicit* Implicit, \n\t\tconst ECollisionTypeEnum CollisionType)"
  },
  {
    "label": "NewImplicit()",
    "kind": "Method",
    "detail": "Function (Chaos::FImplicitObjectRef)",
    "insertText": "NewImplicit(\n\t\tChaos::FErrorReporter ErrorReporter,\n\t\tconst Chaos::FParticles& MeshParticles,\n\t\tconst Chaos::FTriangleMesh& TriMesh,\n\t\tconst FBox& CollisionBounds,\n\t\tconst Chaos::FReal Radius,\n\t\tconst int32 MinRes,\n\t\tconst int32 MaxRes,\n\t\tconst float CollisionObjectReduction,\n\t\tconst ECollisionTypeEnum CollisionType,\n\t\tconst EImplicitTypeEnum ImplicitType)"
  },
  {
    "label": "NewImplicitBox()",
    "kind": "Method",
    "detail": "Function (Chaos::FImplicitObjectRef)",
    "insertText": "NewImplicitBox(\n\t\tconst FBox& CollisionBounds,\n\t\tconst float CollisionObjectReduction,\n\t\tconst ECollisionTypeEnum CollisionType)"
  },
  {
    "label": "NewImplicitSphere()",
    "kind": "Method",
    "detail": "Function (Chaos::FImplicitObjectRef)",
    "insertText": "NewImplicitSphere(\n\t\tconst Chaos::FReal Radius,\n\t\tconst float CollisionObjectReduction,\n\t\tconst ECollisionTypeEnum CollisionType)"
  },
  {
    "label": "NewImplicitCapsule()",
    "kind": "Method",
    "detail": "Function (Chaos::FImplicitObjectRef)",
    "insertText": "NewImplicitCapsule(\n\t\tconst Chaos::FReal Radius,\n\t\tconst Chaos::FReal Length,\n\t\tconst float CollisionObjectReduction,\n\t\tconst ECollisionTypeEnum CollisionType)"
  },
  {
    "label": "NewImplicitCapsule()",
    "kind": "Method",
    "detail": "Function (Chaos::FImplicitObjectRef)",
    "insertText": "NewImplicitCapsule(\n\t\tconst FBox& CollisionBounds,\n\t\tconst float CollisionObjectReduction,\n\t\tconst ECollisionTypeEnum CollisionType)"
  },
  {
    "label": "NewImplicitConvex()",
    "kind": "Method",
    "detail": "Function (Chaos::FImplicitObjectRef)",
    "insertText": "NewImplicitConvex(\n\t\tconst TArray<int32>& ConvexIndices,\n\t\tconst TManagedArray<Chaos::FConvexPtr>* ConvexGeometry,\n\t\tconst ECollisionTypeEnum CollisionType,\n\t\tconst FTransform& MassTransform,\n\t\tconst Chaos::FReal CollisionMarginFraction,\n\t\tconst float CollisionObjectReduction)"
  },
  {
    "label": "NewImplicitLevelset()",
    "kind": "Method",
    "detail": "Function (Chaos::FImplicitObjectRef)",
    "insertText": "NewImplicitLevelset(\n\t\tChaos::FErrorReporter ErrorReporter,\n\t\tconst Chaos::FParticles& MeshParticles,\n\t\tconst Chaos::FTriangleMesh& TriMesh,\n\t\tconst FBox& CollisionBounds,\n\t\tconst int32 MinRes,\n\t\tconst int32 MaxRes,\n\t\tconst float CollisionObjectReduction,\n\t\tconst ECollisionTypeEnum CollisionType)"
  },
  {
    "label": "NewLevelset()",
    "kind": "Method",
    "detail": "Function (Chaos::FLevelSetRef)",
    "insertText": "NewLevelset(\n\t\tChaos::FErrorReporter ErrorReporter,\n\t\tconst Chaos::FParticles& MeshParticles,\n\t\tconst Chaos::FTriangleMesh& TriMesh,\n\t\tconst FBox& CollisionBounds,\n\t\tconst int32 MinRes,\n\t\tconst int32 MaxRes,\n\t\tconst ECollisionTypeEnum CollisionType)"
  },
  {
    "label": "CalculateUnitMassInertiaTensor()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "CalculateUnitMassInertiaTensor(\n\t\tconst FBox& BoundingBox,\n\t\tconst Chaos::FReal Radius,\n\t\tconst EImplicitTypeEnum ImplicitType)"
  },
  {
    "label": "CalculateVolume()",
    "kind": "Method",
    "detail": "Function (Chaos::FReal)",
    "insertText": "CalculateVolume(\n\t\tconst FBox& BoundingBox,\n\t\tconst Chaos::FReal Radius,\n\t\tconst EImplicitTypeEnum ImplicitType)"
  }
]