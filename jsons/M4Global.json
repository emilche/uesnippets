[
  {
    "label": "M4_MBMODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "M4_MBMODE"
  },
  {
    "label": "M4_MBFLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "M4_MBFLAGS"
  },
  {
    "label": "M4BitstreamCacheEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "M4BitstreamCacheEntry"
  },
  {
    "label": "MV_PREDICTION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "MV_PREDICTION"
  },
  {
    "label": "M4_VECTOR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "M4_VECTOR"
  },
  {
    "label": "M4_MB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "M4_MB"
  },
  {
    "label": "M4MAX()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" vdecmpeg4_Types . h \" namespace vdecmpeg4 { enum M4_MBMODE { M4_MBMODE_INTER = 0,M4_MBMODE_INTER_Q = 1,M4_MBMODE_INTER4V = 2,M4_MBMODE_INTRA = 3,M4_MBMODE_INTRA_Q = 4,M4_MBMODE_STUFFING = 7,M4_MBMODE_NOT_CODED_PVOP = 1 6,M4_MBMODE_NOT_CODED_SVOP = 1 7 } ; enum M4_MBFLAGS { M4_MBFLAG_MVTYPE_DIRECT = 0,M4_MBFLAG_MVTYPE_INTERPOLATE = 1,M4_MBFLAG_MVTYPE_BACKWARD = 2,M4_MBFLAG_MVTYPE_FORWARD = 3,M4_MBFLAG_MVTYPE_MASK = 0 x03,M4_MBFLAG_FIELD_DCT_BIT = 0 x04,M4_MBFLAG_FIELD_PREDICTION_BIT = 0 x08,M4_MBFLAG_FIELD_REF_FWD_MASK = 0 x30,M4_MBFLAG_HAS_MOTION_VECTOR = 0 x80 } ; # ifndef M4MAX # define)",
    "insertText": "M4MAX(A,B) ((A)>(B)?(A):(B)) #endif #ifndef M4MIN #define M4MIN(A,B) ((A)<(B)?(A):(B))"
  }
]