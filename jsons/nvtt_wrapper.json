[
  {
    "label": "nvtt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nvtt"
  },
  {
    "label": "nvtt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nvtt"
  },
  {
    "label": "nvtt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nvtt"
  },
  {
    "label": "nvtt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nvtt"
  },
  {
    "label": "NvttInputOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvttInputOptions"
  },
  {
    "label": "NvttCompressionOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvttCompressionOptions"
  },
  {
    "label": "NvttOutputOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvttOutputOptions"
  },
  {
    "label": "NvttCompressor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvttCompressor"
  },
  {
    "label": "nvttDestroyInputOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttDestroyInputOptions(NvttInputOptions * inputOptions)"
  },
  {
    "label": "nvttSetInputOptionsTextureLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsTextureLayout(NvttInputOptions * inputOptions, NvttTextureType type, int w, int h, int d)"
  },
  {
    "label": "nvttResetInputOptionsTextureLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttResetInputOptionsTextureLayout(NvttInputOptions * inputOptions)"
  },
  {
    "label": "nvttSetInputOptionsMipmapData()",
    "kind": "Method",
    "detail": "Function (NvttBoolean)",
    "insertText": "nvttSetInputOptionsMipmapData(NvttInputOptions * inputOptions, const void * data, int w, int h, int d, int face, int mipmap)"
  },
  {
    "label": "nvttSetInputOptionsFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsFormat(NvttInputOptions * inputOptions, NvttInputFormat format)"
  },
  {
    "label": "nvttSetInputOptionsAlphaMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsAlphaMode(NvttInputOptions * inputOptions, NvttAlphaMode alphaMode)"
  },
  {
    "label": "nvttSetInputOptionsGamma()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsGamma(NvttInputOptions * inputOptions, float inputGamma, float outputGamma)"
  },
  {
    "label": "nvttSetInputOptionsWrapMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsWrapMode(NvttInputOptions * inputOptions, NvttWrapMode mode)"
  },
  {
    "label": "nvttSetInputOptionsMipmapFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsMipmapFilter(NvttInputOptions * inputOptions, NvttMipmapFilter filter)"
  },
  {
    "label": "nvttSetInputOptionsMipmapGeneration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsMipmapGeneration(NvttInputOptions * inputOptions, NvttBoolean enabled, int maxLevel)"
  },
  {
    "label": "nvttSetInputOptionsKaiserParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsKaiserParameters(NvttInputOptions * inputOptions, float width, float alpha, float stretch)"
  },
  {
    "label": "nvttSetInputOptionsNormalMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsNormalMap(NvttInputOptions * inputOptions, NvttBoolean b)"
  },
  {
    "label": "nvttSetInputOptionsConvertToNormalMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsConvertToNormalMap(NvttInputOptions * inputOptions, NvttBoolean convert)"
  },
  {
    "label": "nvttSetInputOptionsHeightEvaluation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsHeightEvaluation(NvttInputOptions * inputOptions, float redScale, float greenScale, float blueScale, float alphaScale)"
  },
  {
    "label": "nvttSetInputOptionsNormalFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsNormalFilter(NvttInputOptions * inputOptions, float sm, float medium, float big, float large)"
  },
  {
    "label": "nvttSetInputOptionsNormalizeMipmaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsNormalizeMipmaps(NvttInputOptions * inputOptions, NvttBoolean b)"
  },
  {
    "label": "nvttSetInputOptionsColorTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsColorTransform(NvttInputOptions * inputOptions, NvttColorTransform t)"
  },
  {
    "label": "nvttSetInputOptionsLinearTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsLinearTransform(NvttInputOptions * inputOptions, int channel, float w0, float w1, float w2, float w3)"
  },
  {
    "label": "nvttSetInputOptionsMaxExtents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsMaxExtents(NvttInputOptions * inputOptions, int dim)"
  },
  {
    "label": "nvttSetInputOptionsRoundMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetInputOptionsRoundMode(NvttInputOptions * inputOptions, NvttRoundMode mode)"
  },
  {
    "label": "nvttDestroyCompressionOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttDestroyCompressionOptions(NvttCompressionOptions * compressionOptions)"
  },
  {
    "label": "nvttSetCompressionOptionsFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetCompressionOptionsFormat(NvttCompressionOptions * compressionOptions, NvttFormat format)"
  },
  {
    "label": "nvttSetCompressionOptionsQuality()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetCompressionOptionsQuality(NvttCompressionOptions * compressionOptions, NvttQuality quality)"
  },
  {
    "label": "nvttSetCompressionOptionsColorWeights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetCompressionOptionsColorWeights(NvttCompressionOptions * compressionOptions, float red, float green, float blue, float alpha)"
  },
  {
    "label": "nvttSetCompressionOptionsPixelFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetCompressionOptionsPixelFormat(NvttCompressionOptions * compressionOptions, unsigned int bitcount, unsigned int rmask, unsigned int gmask, unsigned int bmask, unsigned int amask)"
  },
  {
    "label": "nvttSetCompressionOptionsQuantization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetCompressionOptionsQuantization(NvttCompressionOptions * compressionOptions, NvttBoolean colorDithering, NvttBoolean alphaDithering, NvttBoolean binaryAlpha, int alphaThreshold)"
  },
  {
    "label": "nvttDestroyOutputOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttDestroyOutputOptions(NvttOutputOptions * outputOptions)"
  },
  {
    "label": "nvttSetOutputOptionsFileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetOutputOptionsFileName(NvttOutputOptions * outputOptions, const char * fileName)"
  },
  {
    "label": "nvttSetOutputOptionsOutputHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetOutputOptionsOutputHeader(NvttOutputOptions * outputOptions, NvttBoolean b)"
  },
  {
    "label": "nvttSetOutputOptionsErrorHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetOutputOptionsErrorHandler(NvttOutputOptions * outputOptions, nvttErrorHandler errorHandler)"
  },
  {
    "label": "nvttSetOutputOptionsOutputHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttSetOutputOptionsOutputHandler(NvttOutputOptions * outputOptions, nvttOutputHandler outputHandler, nvttImageHandler imageHandler)"
  },
  {
    "label": "nvttDestroyCompressor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvttDestroyCompressor(NvttCompressor * compressor)"
  },
  {
    "label": "nvttCompress()",
    "kind": "Method",
    "detail": "Function (NvttBoolean)",
    "insertText": "nvttCompress(const NvttCompressor * compressor, const NvttInputOptions * inputOptions, const NvttCompressionOptions * compressionOptions, const NvttOutputOptions * outputOptions)"
  },
  {
    "label": "nvttEstimateSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nvttEstimateSize(const NvttCompressor * compressor, const NvttInputOptions * inputOptions, const NvttCompressionOptions * compressionOptions)"
  },
  {
    "label": "nvttVersion()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nvttVersion()"
  }
]