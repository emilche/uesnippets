[
  {
    "label": "FCompositionLighting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompositionLighting"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAOConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAOConfig"
  },
  {
    "label": "FCompositionLighting()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SceneRendering . h \" # include \" CompositionLighting / PostProcessDeferredDecals . h \" # include \" CompositionLighting / PostProcessAmbientOcclusion . h \" # include \" DecalRenderingShared . h \" class FCompositionLighting { public :)",
    "insertText": "FCompositionLighting(TArrayView<FViewInfo> InViews, const FSceneTextures& InSceneTextures, TUniqueFunction<bool(int32)> RequestSSAOFunction)"
  },
  {
    "label": "ProcessAfterOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAfterOcclusion(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "ProcessBeforeBasePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessBeforeBasePass(FRDGBuilder& GraphBuilder, FDBufferTextures& DBufferTextures, FInstanceCullingManager& InstanceCullingManager, const FSubstrateSceneData& SubstrateSceneData)"
  },
  {
    "label": "ProcessAfterBasePass()",
    "kind": "Method",
    "detail": "Function (enum class EProcessAfterBasePassMode { OnlyBeforeLightingDecals,SkipBeforeLightingDecals,All } ; void)",
    "insertText": "ProcessAfterBasePass(FRDGBuilder& GraphBuilder, FInstanceCullingManager& InstanceCullingManager, EProcessAfterBasePassMode Mode, const FSubstrateSceneData& SubstrateSceneData)"
  },
  {
    "label": "TryInit()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "TryInit()"
  },
  {
    "label": "ShouldRenderScreenSpaceAmbientOcclusion()",
    "kind": "Method",
    "detail": "Function (const TArrayView<FViewInfo> Views ; const FSceneViewFamily& ViewFamily ; const FSceneTextures& SceneTextures ; const bool bEnableDBuffer ; const bool bEnableDecals ; enum class ESSAOLocation { None,BeforeBasePass,AfterBasePass } ; struct FAOConfig { uint32 Levels = 0 ; EGTAOType GTAOType = EGTAOType::EOff ; ESSAOLocation SSAOLocation = ESSAOLocation::None ; bool bSSAOAsync = false ; bool bRequested = false ; } ; TArray<FAOConfig,TInlineAllocator<8>> ViewAOConfigs ; TArray<FTransientDecalRenderDataList,TInlineAllocator<8>> VisibleDecals ; FRDGTextureRef HorizonsTexture = nullptr ; bool bInitialized = false ; } ; bool)",
    "insertText": "ShouldRenderScreenSpaceAmbientOcclusion(const FViewInfo& View, bool bLumenWantsSSAO)"
  }
]