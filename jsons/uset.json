[
  {
    "label": "USet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "USet"
  },
  {
    "label": "USetSpanCondition",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "USetSpanCondition"
  },
  {
    "label": "USerializedSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "USerializedSet"
  },
  {
    "label": "uset_openEmpty()",
    "kind": "Method",
    "detail": "Function (# ifndef __USET_H__ # define __USET_H__ # include \" unicode / utypes . h \" # include \" unicode / uchar . h \" # include \" unicode / localpointer . h \" # ifndef USET_DEFINED # ifndef U_IN_DOXYGEN # define USET_DEFINED # endif typedef struct USet USet ; # endif enum { USET_IGNORE_SPACE = 1,USET_CASE_INSENSITIVE = 2,USET_ADD_CASE_MAPPINGS = 4 } ; typedef enum USetSpanCondition { USET_SPAN_NOT_CONTAINED = 0,USET_SPAN_CONTAINED = 1,USET_SPAN_SIMPLE = 2,# ifndef USET_SPAN_CONDITION_COUNT # endif } USetSpanCondition ; enum { USET_SERIALIZED_STATIC_ARRAY_CAPACITY = 8 } ; typedef struct USerializedSet { const uint16_t* array ; int32_t bmpLength ; int32_t length ; uint16_t staticArray [ USET_SERIALIZED_STATIC_ARRAY_CAPACITY ] ; } USerializedSet ; U_STABLE USet* U_EXPORT2)",
    "insertText": "uset_openEmpty(void)"
  },
  {
    "label": "uset_open()",
    "kind": "Method",
    "detail": "Function (U_STABLE USet* U_EXPORT2)",
    "insertText": "uset_open(UChar32 start, UChar32 end)"
  },
  {
    "label": "uset_openPattern()",
    "kind": "Method",
    "detail": "Function (U_STABLE USet* U_EXPORT2)",
    "insertText": "uset_openPattern(const UChar* pattern, int32_t patternLength, UErrorCode* ec)"
  },
  {
    "label": "uset_openPatternOptions()",
    "kind": "Method",
    "detail": "Function (U_STABLE USet* U_EXPORT2)",
    "insertText": "uset_openPatternOptions(const UChar* pattern, int32_t patternLength, uint32_t options, UErrorCode* ec)"
  },
  {
    "label": "uset_close()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_close(USet* set)"
  },
  {
    "label": "U_DEFINE_LOCAL_OPEN_POINTER()",
    "kind": "Method",
    "detail": "Function (# if U_NAMESPACE_BEGIN)",
    "insertText": "U_DEFINE_LOCAL_OPEN_POINTER(LocalUSetPointer, USet, uset_close)"
  },
  {
    "label": "uset_clone()",
    "kind": "Method",
    "detail": "Function (U_NAMESPACE_END # endif U_STABLE USet* U_EXPORT2)",
    "insertText": "uset_clone(const USet *set)"
  },
  {
    "label": "uset_isFrozen()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_isFrozen(const USet *set)"
  },
  {
    "label": "uset_freeze()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_freeze(USet *set)"
  },
  {
    "label": "uset_cloneAsThawed()",
    "kind": "Method",
    "detail": "Function (U_STABLE USet* U_EXPORT2)",
    "insertText": "uset_cloneAsThawed(const USet *set)"
  },
  {
    "label": "uset_set()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_set(USet* set, UChar32 start, UChar32 end)"
  },
  {
    "label": "uset_applyPattern()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_applyPattern(USet *set, const UChar *pattern, int32_t patternLength, uint32_t options, UErrorCode *status)"
  },
  {
    "label": "uset_applyIntPropertyValue()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_applyIntPropertyValue(USet* set, UCharProperty prop, int32_t value, UErrorCode* ec)"
  },
  {
    "label": "uset_applyPropertyAlias()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_applyPropertyAlias(USet* set, const UChar *prop, int32_t propLength, const UChar *value, int32_t valueLength, UErrorCode* ec)"
  },
  {
    "label": "uset_resemblesPattern()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_resemblesPattern(const UChar *pattern, int32_t patternLength, int32_t pos)"
  },
  {
    "label": "uset_toPattern()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_toPattern(const USet* set, UChar* result, int32_t resultCapacity, UBool escapeUnprintable, UErrorCode* ec)"
  },
  {
    "label": "uset_add()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_add(USet* set, UChar32 c)"
  },
  {
    "label": "uset_addAll()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_addAll(USet* set, const USet *additionalSet)"
  },
  {
    "label": "uset_addRange()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_addRange(USet* set, UChar32 start, UChar32 end)"
  },
  {
    "label": "uset_addString()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_addString(USet* set, const UChar* str, int32_t strLen)"
  },
  {
    "label": "uset_addAllCodePoints()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_addAllCodePoints(USet* set, const UChar *str, int32_t strLen)"
  },
  {
    "label": "uset_remove()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_remove(USet* set, UChar32 c)"
  },
  {
    "label": "uset_removeRange()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_removeRange(USet* set, UChar32 start, UChar32 end)"
  },
  {
    "label": "uset_removeString()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_removeString(USet* set, const UChar* str, int32_t strLen)"
  },
  {
    "label": "uset_removeAll()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_removeAll(USet* set, const USet* removeSet)"
  },
  {
    "label": "uset_retain()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_retain(USet* set, UChar32 start, UChar32 end)"
  },
  {
    "label": "uset_retainAll()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_retainAll(USet* set, const USet* retain)"
  },
  {
    "label": "uset_compact()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_compact(USet* set)"
  },
  {
    "label": "uset_complement()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_complement(USet* set)"
  },
  {
    "label": "uset_complementAll()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_complementAll(USet* set, const USet* complement)"
  },
  {
    "label": "uset_clear()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_clear(USet* set)"
  },
  {
    "label": "uset_closeOver()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_closeOver(USet* set, int32_t attributes)"
  },
  {
    "label": "uset_removeAllStrings()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_removeAllStrings(USet* set)"
  },
  {
    "label": "uset_isEmpty()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_isEmpty(const USet* set)"
  },
  {
    "label": "uset_contains()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_contains(const USet* set, UChar32 c)"
  },
  {
    "label": "uset_containsRange()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_containsRange(const USet* set, UChar32 start, UChar32 end)"
  },
  {
    "label": "uset_containsString()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_containsString(const USet* set, const UChar* str, int32_t strLen)"
  },
  {
    "label": "uset_indexOf()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_indexOf(const USet* set, UChar32 c)"
  },
  {
    "label": "uset_charAt()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar32 U_EXPORT2)",
    "insertText": "uset_charAt(const USet* set, int32_t charIndex)"
  },
  {
    "label": "uset_size()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_size(const USet* set)"
  },
  {
    "label": "uset_getItemCount()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_getItemCount(const USet* set)"
  },
  {
    "label": "uset_getItem()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_getItem(const USet* set, int32_t itemIndex, UChar32* start, UChar32* end, UChar* str, int32_t strCapacity, UErrorCode* ec)"
  },
  {
    "label": "uset_containsAll()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_containsAll(const USet* set1, const USet* set2)"
  },
  {
    "label": "uset_containsAllCodePoints()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_containsAllCodePoints(const USet* set, const UChar *str, int32_t strLen)"
  },
  {
    "label": "uset_containsNone()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_containsNone(const USet* set1, const USet* set2)"
  },
  {
    "label": "uset_containsSome()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_containsSome(const USet* set1, const USet* set2)"
  },
  {
    "label": "uset_span()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_span(const USet *set, const UChar *s, int32_t length, USetSpanCondition spanCondition)"
  },
  {
    "label": "uset_spanBack()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_spanBack(const USet *set, const UChar *s, int32_t length, USetSpanCondition spanCondition)"
  },
  {
    "label": "uset_spanUTF8()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_spanUTF8(const USet *set, const char *s, int32_t length, USetSpanCondition spanCondition)"
  },
  {
    "label": "uset_spanBackUTF8()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_spanBackUTF8(const USet *set, const char *s, int32_t length, USetSpanCondition spanCondition)"
  },
  {
    "label": "uset_equals()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_equals(const USet* set1, const USet* set2)"
  },
  {
    "label": "uset_serialize()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_serialize(const USet* set, uint16_t* dest, int32_t destCapacity, UErrorCode* pErrorCode)"
  },
  {
    "label": "uset_getSerializedSet()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_getSerializedSet(USerializedSet* fillSet, const uint16_t* src, int32_t srcLength)"
  },
  {
    "label": "uset_setSerializedToOne()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uset_setSerializedToOne(USerializedSet* fillSet, UChar32 c)"
  },
  {
    "label": "uset_serializedContains()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_serializedContains(const USerializedSet* set, UChar32 c)"
  },
  {
    "label": "uset_getSerializedRangeCount()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uset_getSerializedRangeCount(const USerializedSet* set)"
  },
  {
    "label": "uset_getSerializedRange()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uset_getSerializedRange(const USerializedSet* set, int32_t rangeIndex, UChar32* pStart, UChar32* pEnd)"
  }
]