[
  {
    "label": "KeepAlive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KeepAlive"
  },
  {
    "label": "NetTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetTransport"
  },
  {
    "label": "RpcZksClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RpcZksClient"
  },
  {
    "label": "NetSslCredentials",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetSslCredentials"
  },
  {
    "label": "PeekResults",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PeekResults"
  },
  {
    "label": "NetIoPtrs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NetIoPtrs"
  },
  {
    "label": "NetEndPoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetEndPoint"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef __NETCONNECT_H__ # define __NETCONNECT_H__ # include<error . h> class KeepAlive ; class NetTransport ; class RpcZksClient ; class NetSslCredentials ; enum PeekResults { PeekTimeout = 0,PeekSSL,PeekCleartext } ; struct NetIoPtrs { char* sendPtr ; char* sendEnd ; char* recvPtr ; char* recvEnd ; } ; class NetEndPoint { class RpcZksClient ; public : NetEndPoint*)",
    "insertText": "Create(const char *addr, Error *e)"
  },
  {
    "label": "GetAddress()",
    "kind": "Method",
    "detail": "Function (StrPtr)",
    "insertText": "GetAddress()"
  },
  {
    "label": "GetExpiration()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetExpiration(StrBuf &buf)"
  },
  {
    "label": "NetEndPoint()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "NetEndPoint()"
  },
  {
    "label": "GetListenAddress()",
    "kind": "Method",
    "detail": "Function (StrPtr*)",
    "insertText": "GetListenAddress(int raf_flags)"
  },
  {
    "label": "GetHost()",
    "kind": "Method",
    "detail": "Function (StrPtr*)",
    "insertText": "GetHost()"
  },
  {
    "label": "GetPrintableHost()",
    "kind": "Method",
    "detail": "Function (StrBuf)",
    "insertText": "GetPrintableHost()"
  },
  {
    "label": "GetMyFingerprint()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetMyFingerprint(StrBuf &value)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (value .)",
    "insertText": "Clear()"
  },
  {
    "label": "SetCipherList()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCipherList(const StrPtr *value)"
  },
  {
    "label": "SetCipherSuites()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCipherSuites(const StrPtr *value)"
  },
  {
    "label": "IsAccepted()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAccepted()"
  },
  {
    "label": "ListenCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ListenCheck(Error *e)"
  },
  {
    "label": "CheaterCheck()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CheaterCheck(const char *port)"
  },
  {
    "label": "Unlisten()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlisten()"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (NetTransport*)",
    "insertText": "Connect(Error *e)"
  },
  {
    "label": "Accept()",
    "kind": "Method",
    "detail": "Function (NetTransport*)",
    "insertText": "Accept(KeepAlive *, Error *e)"
  },
  {
    "label": "IsSingle()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "IsSingle()"
  },
  {
    "label": "IsSSL()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "IsSSL()"
  },
  {
    "label": "ClientMismatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClientMismatch(Error *e)"
  },
  {
    "label": "SetMaxWait()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxWait(const int maxWait)"
  },
  {
    "label": "DoHandshake()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DoHandshake(Error *)"
  },
  {
    "label": "HasAddress()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasAddress()"
  },
  {
    "label": "GetAddress()",
    "kind": "Method",
    "detail": "Function (StrPtr*)",
    "insertText": "GetAddress(int raf_flags)"
  },
  {
    "label": "GetPeerAddress()",
    "kind": "Method",
    "detail": "Function (StrPtr*)",
    "insertText": "GetPeerAddress(int raf_flags)"
  },
  {
    "label": "GetPortNum()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetPortNum()"
  },
  {
    "label": "Send()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Send(const char *buffer, int length, Error *e)"
  },
  {
    "label": "Receive()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Receive(char *buffer, int length, Error *e)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "SetBreak()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBreak(KeepAlive *breakCallback)"
  },
  {
    "label": "GetSendBuffering()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetSendBuffering()"
  },
  {
    "label": "GetRecvBuffering()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetRecvBuffering()"
  },
  {
    "label": "GetEncryptionType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetEncryptionType(StrBuf &value)"
  },
  {
    "label": "GetPeerFingerprint()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetPeerFingerprint(StrBuf &value)"
  },
  {
    "label": "GetPeerCredentials()",
    "kind": "Method",
    "detail": "Function (} NetSslCredentials*)",
    "insertText": "GetPeerCredentials()"
  },
  {
    "label": "DuplexReady()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DuplexReady()"
  },
  {
    "label": "GetInfo()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetInfo(StrBuf *)"
  },
  {
    "label": "Peek()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Peek(int fd, char *buffer, int length)"
  }
]