[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_CXX11WORKAROUNDS_H # define EIGEN_CXX11WORKAROUNDS_H # if)",
    "insertText": "defined(__INTEL_COMPILER) && (__INTEL_COMPILER < 1310) #error Intel Compiler only supports required C++ features since version 13.1. #elif defined(__GNUC__) && !defined(__clang__) && !defined(__INTEL_COMPILER) && (__GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 6)) #pragma GCC diagnostic error \"-Wfatal-errors\" #error GNU C++ Compiler (g++) only supports required C++ features since version 4.6. #endif #if (EIGEN_COMP_CXXVER < 11) #if defined(__GNUC__) && !defined(__clang__) && !defined(__INTEL_COMPILER) #pragma GCC diagnostic error \"-Wfatal-errors\" #endif #error This library needs at least a C++11 compliant compiler. If you use g++/clang, please enable the -std=c++11 compiler flag. (-std=c++0x on older versions.)"
  },
  {
    "label": "array_get()",
    "kind": "Method",
    "detail": "Function (namespace internal { template<std::size_t I_,class T> T&)",
    "insertText": "array_get(std::vector<T>& a)"
  }
]