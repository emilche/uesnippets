[
  {
    "label": "NetworkTesterPacket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkTesterPacket"
  },
  {
    "label": "TestController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestController"
  },
  {
    "label": "TestController()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "TestController(int min_port,\n                 int max_port,\n                 const std::string& config_file_path,\n                 const std::string& log_file_path)"
  },
  {
    "label": "SendConnectTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendConnectTo(const std::string& hostname, int port)"
  },
  {
    "label": "SendData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendData(const NetworkTesterPacket& packet,\n                absl::optional<size_t> data_size)"
  },
  {
    "label": "OnTestDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTestDone()"
  },
  {
    "label": "IsTestDone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTestDone()"
  },
  {
    "label": "OnReadPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReadPacket(rtc::AsyncPacketSocket* socket,\n                    const char* data,\n                    size_t len,\n                    const rtc::SocketAddress& remote_addr,\n                    const int64_t& packet_time_us)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (socket_factory_)",
    "insertText": "RTC_GUARDED_BY(packet_sender_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (packet_logger_)",
    "insertText": "RTC_GUARDED_BY(packet_sender_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (test_done_lock_)",
    "insertText": "RTC_GUARDED_BY(test_controller_thread_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (local_test_done_)",
    "insertText": "RTC_GUARDED_BY(test_done_lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (remote_test_done_)",
    "insertText": "RTC_GUARDED_BY(test_done_lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (send_data_)",
    "insertText": "RTC_GUARDED_BY(packet_sender_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (udp_socket_)",
    "insertText": "RTC_GUARDED_BY(packet_sender_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (packet_sender_)",
    "insertText": "RTC_GUARDED_BY(packet_sender_thread_)"
  }
]