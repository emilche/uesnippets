[
  {
    "label": "UHashtable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UHashtable"
  },
  {
    "label": "UHashtable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UHashtable"
  },
  {
    "label": "UStringTrieBuildOption",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UStringTrieBuildOption"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Node"
  },
  {
    "label": "Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Node"
  },
  {
    "label": "operator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "operator"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "types"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "FinalValueNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FinalValueNode"
  },
  {
    "label": "ValueNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueNode"
  },
  {
    "label": "IntermediateValueNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IntermediateValueNode"
  },
  {
    "label": "LinearMatchNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LinearMatchNode"
  },
  {
    "label": "BranchNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BranchNode"
  },
  {
    "label": "ListBranchNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ListBranchNode"
  },
  {
    "label": "SplitBranchNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SplitBranchNode"
  },
  {
    "label": "BranchHeadNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BranchHeadNode"
  },
  {
    "label": "hashNode()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "hashNode(const void *node)"
  },
  {
    "label": "equalNodes()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "equalNodes(const void *left, const void *right)"
  },
  {
    "label": "createCompactBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createCompactBuilder(int32_t sizeGuess, UErrorCode &errorCode)"
  },
  {
    "label": "deleteCompactBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleteCompactBuilder()"
  },
  {
    "label": "build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "build(UStringTrieBuildOption buildOption, int32_t elementsLength, UErrorCode &errorCode)"
  },
  {
    "label": "writeNode()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "writeNode(int32_t start, int32_t limit, int32_t unitIndex)"
  },
  {
    "label": "writeBranchSubNode()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "writeBranchSubNode(int32_t start, int32_t limit, int32_t unitIndex, int32_t length)"
  },
  {
    "label": "markRightEdgesFirst()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "markRightEdgesFirst(int32_t edgeNumber)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "write(StringTrieBuilder &builder)"
  },
  {
    "label": "markRightEdgesFirst()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "markRightEdgesFirst(int32_t edgeNumber)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "write(StringTrieBuilder &builder)"
  },
  {
    "label": "markRightEdgesFirst()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "markRightEdgesFirst(int32_t edgeNumber)"
  },
  {
    "label": "markRightEdgesFirst()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "markRightEdgesFirst(int32_t edgeNumber)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "write(StringTrieBuilder &builder)"
  },
  {
    "label": "markRightEdgesFirst()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "markRightEdgesFirst(int32_t edgeNumber)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "write(StringTrieBuilder &builder)"
  },
  {
    "label": "markRightEdgesFirst()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "markRightEdgesFirst(int32_t edgeNumber)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "write(StringTrieBuilder &builder)"
  }
]