[
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "IFrameProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFrameProvider"
  },
  {
    "label": "IThreadProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IThreadProvider"
  },
  {
    "label": "IEditableCounterProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableCounterProvider"
  },
  {
    "label": "IEditableCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableCounter"
  },
  {
    "label": "FCsvProfilerAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCsvProfilerAnalyzer"
  },
  {
    "label": "ECsvOpType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECsvOpType"
  },
  {
    "label": "FStatSeriesValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatSeriesValue"
  },
  {
    "label": "FStatSeriesDefinition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatSeriesDefinition"
  },
  {
    "label": "FStatSeriesInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatSeriesInstance"
  },
  {
    "label": "FTimingMarker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimingMarker"
  },
  {
    "label": "FThreadState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadState"
  },
  {
    "label": "FCsvProfilerAnalyzer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FCsvProfilerAnalyzer(IAnalysisSession& Session, FCsvProfilerProvider& CsvProfilerProvider, IEditableCounterProvider& EditableCounterProvider, const IFrameProvider& FrameProvider, const IThreadProvider& ThreadProvider)"
  },
  {
    "label": "DefineStatSeries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefineStatSeries(uint64 StatId, const TCHAR* Name, int32 CategoryIndex, bool bIsInline)"
  },
  {
    "label": "HandleMarkerEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMarkerEvent(const FOnEventContext& Context, bool bIsExclusive, bool bIsBegin)"
  },
  {
    "label": "HandleMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMarker(const FOnEventContext& Context, FThreadState& ThreadState, const FTimingMarker& Marker)"
  },
  {
    "label": "HandleCustomStatEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCustomStatEvent(const FOnEventContext& Context, bool bIsFloat)"
  },
  {
    "label": "HandleEventEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEventEvent(const FOnEventContext& Context)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush(FStatSeriesInstance& StatSeries)"
  },
  {
    "label": "FlushIfNewFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushIfNewFrame(FStatSeriesInstance& StatSeries, uint32 FrameNumber)"
  },
  {
    "label": "FlushAtEndOfCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAtEndOfCapture(FStatSeriesInstance& StatSeries, uint32 CaptureEndFrame)"
  },
  {
    "label": "SetTimerValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimerValue(FStatSeriesInstance& StatSeries, uint32 FrameNumber, double ElapsedTime, bool bCount)"
  },
  {
    "label": "SetCustomStatValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomStatValue(FStatSeriesInstance& StatSeries, uint32 FrameNumber, ECsvOpType OpType, int32 Value)"
  },
  {
    "label": "SetCustomStatValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomStatValue(FStatSeriesInstance& StatSeries, uint32 FrameNumber, ECsvOpType OpType, float Value)"
  }
]