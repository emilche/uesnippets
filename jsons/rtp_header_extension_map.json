[
  {
    "label": "RtpHeaderExtensionMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpHeaderExtensionMap"
  },
  {
    "label": "RtpHeaderExtensionMap()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_INCLUDE_RTP_HEADER_EXTENSION_MAP_H_ # define MODULES_RTP_RTCP_INCLUDE_RTP_HEADER_EXTENSION_MAP_H_ # include<stdint . h> # include<string> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" # include \" api / rtp_parameters . h \" # include \" modules / rtp_rtcp / include / rtp_rtcp_defines . h \" # include \" rtc_base / checks . h \" namespace webrtc { class RtpHeaderExtensionMap { public : RTPExtensionType kInvalidType = kRtpExtensionNone ; int kInvalidId = 0 ;)",
    "insertText": "RtpHeaderExtensionMap()"
  },
  {
    "label": "RtpHeaderExtensionMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtpHeaderExtensionMap(bool extmap_allow_mixed)"
  },
  {
    "label": "RtpHeaderExtensionMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtpHeaderExtensionMap(rtc::ArrayView<const RtpExtension> extensions)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(rtc::ArrayView<const RtpExtension> extensions)"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (template<Extension> bool)",
    "insertText": "Register(int id)"
  },
  {
    "label": "RegisterByType()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RegisterByType(int id, RTPExtensionType type)"
  },
  {
    "label": "RegisterByUri()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterByUri(int id, absl::string_view uri)"
  },
  {
    "label": "IsRegistered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRegistered(RTPExtensionType type)"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (} RTPExtensionType)",
    "insertText": "GetType(int id)"
  },
  {
    "label": "GetId()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "GetId(RTPExtensionType type)"
  },
  {
    "label": "RTC_DCHECK_GT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_GT(type, kRtpExtensionNone)"
  },
  {
    "label": "RTC_DCHECK_LT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_LT(type, kRtpExtensionNumberOfExtensions)"
  },
  {
    "label": "ExtmapAllowMixed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExtmapAllowMixed()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (extmap_allow_mixed_ = extmap_allow_mixed ; } private : bool)",
    "insertText": "Register(int id, RTPExtensionType type, absl::string_view uri)"
  }
]