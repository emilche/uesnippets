[
  {
    "label": "IMediaClockSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaClockSink"
  },
  {
    "label": "FMediaClock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMediaClock"
  },
  {
    "label": "FMediaClock()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Misc / Timespan . h \" # include \" Templates / SharedPointer . h \" # include \" IMediaClock . h \" class IMediaClockSink ; class FMediaClock : public IMediaClock { public :)",
    "insertText": "FMediaClock()"
  },
  {
    "label": "TickInput()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "TickInput()"
  },
  {
    "label": "TickOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickOutput()"
  },
  {
    "label": "TickRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickRender()"
  },
  {
    "label": "TickFetch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickFetch()"
  },
  {
    "label": "UpdateTimecode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTimecode(const FTimespan NewTimecode, bool NewTimecodeLocked)"
  },
  {
    "label": "AddSink()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AddSink(const TSharedRef<IMediaClockSink, ESPMode::ThreadSafe>& Sink)"
  },
  {
    "label": "GetTimecode()",
    "kind": "Method",
    "detail": "Function (FTimespan)",
    "insertText": "GetTimecode()"
  },
  {
    "label": "IsTimecodeLocked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTimecodeLocked()"
  },
  {
    "label": "RemoveSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSink(const TSharedRef<IMediaClockSink, ESPMode::ThreadSafe>& Sink)"
  },
  {
    "label": "UpdateSinkArray()",
    "kind": "Method",
    "detail": "Function (private : FTimespan DeltaTime ; bool Locked ; TArray<TWeakPtr<IMediaClockSink,ESPMode::ThreadSafe>> Sinks ; TArray<TWeakPtr<IMediaClockSink,ESPMode::ThreadSafe>> SinksToAdd ; TArray<TWeakPtr<IMediaClockSink,ESPMode::ThreadSafe>> SinksToRemove ; FCriticalSection SinkCriticalSection ; FTimespan Timecode ; bool TimecodeLocked ; void)",
    "insertText": "UpdateSinkArray()"
  }
]