[
  {
    "label": "FVulkanShaderHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanShaderHeader"
  },
  {
    "label": "FBindingInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBindingInfo"
  },
  {
    "label": "FUniformBufferInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniformBufferInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInputAttachmentInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAttachmentInfo"
  },
  {
    "label": "EInit",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInit"
  },
  {
    "label": "FVulkanShaderHeader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BoundShaderStateCache . h \" # include \" CrossCompilerCommon . h \" # include \" VulkanCommon . h \" # include \" VulkanThirdParty . h \" struct FVulkanShaderHeader { struct FBindingInfo { uint32 DescriptorType ; # if VULKAN_ENABLE_BINDING_DEBUG_NAMES FString DebugName ; # endif } ; TArray<FBindingInfo> Bindings ; struct FUniformBufferInfo { uint32 LayoutHash ; uint8 bHasResources ; uint8 BindlessCBIndex ; } ; TArray<FUniformBufferInfo> UniformBufferInfos ; enum class EAttachmentType : uint8 { Depth,Color0,Color1,Color2,Color3,Color4,Color5,Color6,Color7,Count,} ; struct FInputAttachmentInfo { uint8 BindingIndex ; EAttachmentType Type ; } ; TArray<FInputAttachmentInfo> InputAttachmentInfos ; uint32 NumBoundUniformBuffers = 0 ; uint32 PackedGlobalsSize = 0 ; uint32 InputAttachmentsMask = 0 ; uint32 InOutMask ; uint32 RayTracingPayloadType = 0 ; uint32 RayTracingPayloadSize = 0 ; FSHAHash SourceHash ; uint32 SpirvCRC = 0 ; uint8 WaveSize = 0 ; enum class ERayHitGroupEntrypoint : uint8 { NotPresent = 0,CommonBlob,SeparateBlob } ; ERayHitGroupEntrypoint RayGroupAnyHit = ERayHitGroupEntrypoint::NotPresent ; ERayHitGroupEntrypoint RayGroupIntersection = ERayHitGroupEntrypoint::NotPresent ; FString DebugName ;)",
    "insertText": "FVulkanShaderHeader()"
  },
  {
    "label": "FVulkanShaderHeader()",
    "kind": "Method",
    "detail": "Function (enum EInit { EZero } ;)",
    "insertText": "FVulkanShaderHeader(EInit) : InOutMask(0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FVulkanShaderHeader::FBindingInfo& BindingInfo)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Ar<<BindingInfo . DescriptorType ; # if VULKAN_ENABLE_BINDING_DEBUG_NAMES Ar<<BindingInfo . DebugName ; # endif return Ar ; } FArchive&)",
    "insertText": "operator(FArchive& Ar, FVulkanShaderHeader::FUniformBufferInfo& Info)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Ar<<Info . LayoutHash ; Ar<<Info . bHasResources ; Ar<<Info . BindlessCBIndex ; return Ar ; } FArchive&)",
    "insertText": "operator(FArchive& Ar, FVulkanShaderHeader::FInputAttachmentInfo& Info)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Ar<<Info . BindingIndex ; Ar<<Info . Type ; return Ar ; } FArchive&)",
    "insertText": "operator(FArchive& Ar, FVulkanShaderHeader& Header)"
  }
]