[
  {
    "label": "FieldTrials",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FieldTrials"
  },
  {
    "label": "FieldTrials()",
    "kind": "Method",
    "detail": "Function (# ifndef API_FIELD_TRIALS_H_ # define API_FIELD_TRIALS_H_ # include<memory> # include<string> # include \" absl / strings / string_view . h \" # include \" api / field_trials_registry . h \" # include \" rtc_base / containers / flat_map . h \" namespace webrtc { class FieldTrials : public FieldTrialsRegistry { public :)",
    "insertText": "FieldTrials(const std::string& s)"
  },
  {
    "label": "FieldTrials()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FieldTrials()"
  },
  {
    "label": "CreateNoGlobal()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FieldTrials>)",
    "insertText": "CreateNoGlobal(const std::string& s)"
  },
  {
    "label": "FieldTrials()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FieldTrials(const std::string& s, bool)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetValue(absl::string_view key)"
  }
]