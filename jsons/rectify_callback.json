[
  {
    "label": "RectifyCallback()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_RECTIFY_CALLBACK_H_ # define BASE_TEST_RECTIFY_CALLBACK_H_ # include<utility> # include \" base / test / rectify_callback_internal . h \" namespace base { template<Desired,Actual> auto)",
    "insertText": "RectifyCallback(Actual&& callback)"
  },
  {
    "label": "Rectify()",
    "kind": "Method",
    "detail": "Function (using Impl = internal::RectifyCallbackImpl<Desired,std::decay_t<Actual>> ; return)",
    "insertText": "Rectify(std::move(callback))"
  }
]