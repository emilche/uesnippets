[
  {
    "label": "VideoRtpDepacketizerAv1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoRtpDepacketizerAv1"
  },
  {
    "label": "VideoRtpDepacketizerAv1()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_VIDEO_RTP_DEPACKETIZER_AV1_H_ # define MODULES_RTP_RTCP_SOURCE_VIDEO_RTP_DEPACKETIZER_AV1_H_ # include<stddef . h> # include<stdint . h> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" api / scoped_refptr . h \" # include \" api / video / encoded_image . h \" # include \" modules / rtp_rtcp / source / video_rtp_depacketizer . h \" # include \" rtc_base / copy_on_write_buffer . h \" namespace webrtc { class VideoRtpDepacketizerAv1 : public VideoRtpDepacketizer { public :)",
    "insertText": "VideoRtpDepacketizerAv1()"
  },
  {
    "label": "VideoRtpDepacketizerAv1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VideoRtpDepacketizerAv1(const VideoRtpDepacketizerAv1&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (VideoRtpDepacketizerAv1&)",
    "insertText": "operator(const VideoRtpDepacketizerAv1&)"
  },
  {
    "label": "AssembleFrame()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<EncodedImageBuffer>)",
    "insertText": "AssembleFrame(rtc::ArrayView<const rtc::ArrayView<const uint8_t>> rtp_payloads)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (absl::optional<ParsedRtpPayload>)",
    "insertText": "Parse(rtc::CopyOnWriteBuffer rtp_payload)"
  }
]