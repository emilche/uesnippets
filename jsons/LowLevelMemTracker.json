[
  {
    "label": "FTagTrace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTagTrace"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "inherited",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "inherited"
  },
  {
    "label": "including",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "including"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLLMTagDeclaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMTagDeclaration"
  },
  {
    "label": "FLLMTagSetAllocationFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLLMTagSetAllocationFilter"
  },
  {
    "label": "FLLMCsvProfilerWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMCsvProfilerWriter"
  },
  {
    "label": "FLLMCsvWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMCsvWriter"
  },
  {
    "label": "FLLMThreadState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMThreadState"
  },
  {
    "label": "FLLMTraceWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMTraceWriter"
  },
  {
    "label": "FLLMTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMTracker"
  },
  {
    "label": "FTagData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTagData"
  },
  {
    "label": "FTagDataArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTagDataArray"
  },
  {
    "label": "FTagDataNameMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTagDataNameMap"
  },
  {
    "label": "FBin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBin"
  },
  {
    "label": "FPage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPage"
  },
  {
    "label": "FLLMAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMAllocator"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPrivateCallbacks",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrivateCallbacks"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FLLMTagInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLLMTagInfo"
  },
  {
    "label": "FLowLevelMemTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLowLevelMemTracker"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEnableStateScopeLock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnableStateScopeLock"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "FLLMPauseScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMPauseScope"
  },
  {
    "label": "FLLMScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMScope"
  },
  {
    "label": "FLLMScopeDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMScopeDynamic"
  },
  {
    "label": "FLLMScopeFromPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMScopeFromPtr"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "FLLMScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMScope"
  },
  {
    "label": "ILLMDynamicTagConstructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILLMDynamicTagConstructor"
  },
  {
    "label": "FLLMDynamicTagConstructorStatString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMDynamicTagConstructorStatString"
  },
  {
    "label": "FLLMScopeDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMScopeDynamic"
  },
  {
    "label": "FLLMPauseScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMPauseScope"
  },
  {
    "label": "FLLMClearScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMClearScope"
  },
  {
    "label": "FLLMScopeFromPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMScopeFromPtr"
  },
  {
    "label": "FLLMTagDeclaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLLMTagDeclaration"
  },
  {
    "label": "FLowLevelMemTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLowLevelMemTracker"
  },
  {
    "label": "FLLMTagSetAllocationFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLLMTagSetAllocationFilter"
  },
  {
    "label": "HandleAssert()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleAssert(bool bLog, const TCHAR* Format, ...)"
  },
  {
    "label": "LLMGetUntaggedTagName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "LLMGetUntaggedTagName(ELLMTagSet TagSet)"
  },
  {
    "label": "LLMGetTagStatGroup()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "LLMGetTagStatGroup(ELLMTag Tag)"
  },
  {
    "label": "LLMGetTagStat()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "LLMGetTagStat(ELLMTag Tag)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMScope)",
    "insertText": "SCOPE_NAME(Tag, false /* bIsStatTag */, ELLMTagSet::None, ELLMTracker::Default)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMScopeDynamic)",
    "insertText": "SCOPE_NAME(Tracker, TagSet)"
  },
  {
    "label": "UniqueNameEvaluated()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "UniqueNameEvaluated(UniqueName)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMScope)",
    "insertText": "SCOPE_NAME(Tag, false /* bIsStaTag */, TagSet, ELLMTracker::Default)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMScope)",
    "insertText": "SCOPE_NAME(Tag, false /* bIsStatTag */, ELLMTagSet::None, ELLMTracker::Platform)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMClearScope)",
    "insertText": "SCOPE_NAME(ELLMTagSet::None, ELLMTracker::Default)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMClearScope)",
    "insertText": "SCOPE_NAME(TagSet, ELLMTracker::Default)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMPauseScope)",
    "insertText": "SCOPE_NAME(ELLMTag::Untagged, false /* bIsStatTag */, 0, ELLMTracker::Max, AllocType)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMPauseScope)",
    "insertText": "SCOPE_NAME(ELLMTag::Untagged, false /* bIsStatTag */, 0, Tracker, AllocType)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMPauseScope)",
    "insertText": "SCOPE_NAME(Tag, false /* bIsStatTag */, Amount, Tracker, AllocType)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMScopeFromPtr)",
    "insertText": "SCOPE_NAME(Ptr, ELLMTracker::Default)"
  },
  {
    "label": "SCOPE_NAME()",
    "kind": "Method",
    "detail": "Function (FLLMScopeFromPtr)",
    "insertText": "SCOPE_NAME(Ptr, ELLMTracker::Platform)"
  },
  {
    "label": "PREPROCESSOR_JOIN()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PREPROCESSOR_JOIN(LLMTagDeclaration_, UniqueNameWithUnderscores)"
  },
  {
    "label": "FLLMAllocator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FLLMAllocator()"
  },
  {
    "label": "Initialise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialise(LLMAllocFunction InAlloc, LLMFreeFunction InFree, int32 InPageSize)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(void* Ptr, size_t Size)"
  },
  {
    "label": "FreePages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreePages(void* Ptr, size_t Size)"
  },
  {
    "label": "AddInitialisedCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInitialisedCallback(FLLMInitialisedCallback Callback, UPTRINT UserData)"
  },
  {
    "label": "AddTagCreationCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTagCreationCallback(FTagCreationCallback Callback, UPTRINT UserData)"
  },
  {
    "label": "RemoveTagCreationCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTagCreationCallback(FTagCreationCallback Callback)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Construct()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "ProcessCommandLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCommandLine(const TCHAR* CmdLine)"
  },
  {
    "label": "GetTotalTrackedMemory()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetTotalTrackedMemory(ELLMTracker Tracker)"
  },
  {
    "label": "OnLowLevelAlloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLowLevelAlloc(ELLMTracker Tracker, const void* Ptr, uint64 Size, ELLMTag DefaultTag = ELLMTag::Untagged,\n\t\tELLMAllocType AllocType = ELLMAllocType::None, bool bTrackInMemPro = true)"
  },
  {
    "label": "OnLowLevelAlloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLowLevelAlloc(ELLMTracker Tracker, const void* Ptr, uint64 Size, FName DefaultTag,\n\t\tELLMAllocType AllocType = ELLMAllocType::None, bool bTrackInMemPro = true)"
  },
  {
    "label": "OnLowLevelFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLowLevelFree(ELLMTracker Tracker, const void* Ptr,\n\t\tELLMAllocType AllocType = ELLMAllocType::None, bool bTrackInMemPro = true)"
  },
  {
    "label": "OnLowLevelChangeInMemoryUse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLowLevelChangeInMemoryUse(ELLMTracker Tracker, int64 DeltaMemory, ELLMTag DefaultTag = ELLMTag::Untagged, ELLMAllocType AllocType = ELLMAllocType::None)"
  },
  {
    "label": "OnLowLevelChangeInMemoryUse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLowLevelChangeInMemoryUse(ELLMTracker Tracker, int64 DeltaMemory, FName DefaultTag, ELLMAllocType AllocType = ELLMAllocType::None)"
  },
  {
    "label": "OnLowLevelAllocMoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLowLevelAllocMoved(ELLMTracker Tracker, const void* Dest, const void* Source,\n\t\tELLMAllocType AllocType = ELLMAllocType::None)"
  },
  {
    "label": "UpdateStatsPerFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStatsPerFrame(const TCHAR* LogName=nullptr)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "SetProgramSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProgramSize(uint64 InProgramSize)"
  },
  {
    "label": "Exec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Exec(const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "IsTagSetActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTagSetActive(ELLMTagSet Set)"
  },
  {
    "label": "ShouldReduceThreads()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldReduceThreads()"
  },
  {
    "label": "GetActiveTag()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetActiveTag(ELLMTracker Tracker)"
  },
  {
    "label": "RegisterPlatformTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPlatformTag(int32 Tag, const TCHAR* Name, FName StatName, FName SummaryStatName, int32 ParentTag = -1)"
  },
  {
    "label": "RegisterProjectTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterProjectTag(int32 Tag, const TCHAR* Name, FName StatName, FName SummaryStatName, int32 ParentTag = -1)"
  },
  {
    "label": "GetTrackedTagsNamesWithAmount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTrackedTagsNamesWithAmount(TMap<FName, uint64>& TagsNamesWithAmount, ELLMTracker Tracker, ELLMTagSet TagSet)"
  },
  {
    "label": "GetTrackedTagsNamesWithAmountFiltered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTrackedTagsNamesWithAmountFiltered(TMap<FName, uint64>& TagsNamesWithAmount, ELLMTracker Tracker, ELLMTagSet TagSet, TArray<FLLMTagSetAllocationFilter>& Filters)"
  },
  {
    "label": "GetTagAmountForTracker()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetTagAmountForTracker(ELLMTracker Tracker, ELLMTag Tag, UE::LLM::ESizeParams SizeParams = UE::LLM::ESizeParams::Default)"
  },
  {
    "label": "GetTagAmountForTracker()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetTagAmountForTracker(ELLMTracker Tracker, const UE::LLMPrivate::FTagData* TagData, UE::LLM::ESizeParams SizeParams = UE::LLM::ESizeParams::Default)"
  },
  {
    "label": "GetTagAmountForTracker()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetTagAmountForTracker(ELLMTracker Tracker, FName Tag, ELLMTagSet TagSet, UE::LLM::ESizeParams SizeParams = UE::LLM::ESizeParams::Default)"
  },
  {
    "label": "GetTagAmountForTracker()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetTagAmountForTracker(ELLMTracker Tracker, ELLMTag Tag, bool bPeakAmount)"
  },
  {
    "label": "GetTagAmountForTracker()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetTagAmountForTracker(ELLMTracker Tracker, const UE::LLMPrivate::FTagData* TagData, bool bPeakAmount)"
  },
  {
    "label": "GetTagAmountForTracker()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetTagAmountForTracker(ELLMTracker Tracker, FName Tag, ELLMTagSet TagSet, bool bPeakAmount)"
  },
  {
    "label": "SetTagAmountForTracker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTagAmountForTracker(ELLMTracker Tracker, ELLMTag Tag, int64 Amount, bool bAddToTotal)"
  },
  {
    "label": "SetTagAmountForTracker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTagAmountForTracker(ELLMTracker Tracker, FName Tag, ELLMTagSet TagSet, int64 Amount, bool bAddToTotal)"
  },
  {
    "label": "DumpTag()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "DumpTag(ELLMTracker Tracker, const char* FileName, int LineNumber)"
  },
  {
    "label": "PublishDataSingleFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PublishDataSingleFrame()"
  },
  {
    "label": "DumpToLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpToLog(EDumpFormat DumpFormat = EDumpFormat::PlainText, FOutputDevice* OutputDevice = nullptr, UE::LLM::ESizeParams SizeParams = UE::LLM::ESizeParams::Default, ELLMTagSet TagSet = ELLMTagSet::None)"
  },
  {
    "label": "OnPreFork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreFork()"
  },
  {
    "label": "BootstrapInitialise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BootstrapInitialise()"
  },
  {
    "label": "FinishInitialise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishInitialise()"
  },
  {
    "label": "FLowLevelMemTracker()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FLowLevelMemTracker()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "InitialiseProgramSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitialiseProgramSize()"
  },
  {
    "label": "TickInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickInternal()"
  },
  {
    "label": "UpdateTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTags()"
  },
  {
    "label": "SortTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortTags(UE::LLMPrivate::FTagDataArray*& OutOldTagDatas)"
  },
  {
    "label": "PublishDataPerFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PublishDataPerFrame(const TCHAR* LogName)"
  },
  {
    "label": "RegisterCustomTagInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCustomTagInternal(int32 Tag, ELLMTagSet TagSet, const TCHAR* Name, FName StatName, FName SummaryStatName, int32 ParentTag = -1)"
  },
  {
    "label": "BootstrapTagDatas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BootstrapTagDatas()"
  },
  {
    "label": "InitialiseTagDatas_SetLLMTagNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitialiseTagDatas_SetLLMTagNames()"
  },
  {
    "label": "InitialiseTagDatas_FinishRegister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitialiseTagDatas_FinishRegister()"
  },
  {
    "label": "InitialiseTagDatas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitialiseTagDatas()"
  },
  {
    "label": "ClearTagDatas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTagDatas()"
  },
  {
    "label": "RegisterTagDeclaration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTagDeclaration(FLLMTagDeclaration& TagDeclaration)"
  },
  {
    "label": "FinishConstruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishConstruct(UE::LLMPrivate::FTagData* TagData, UE::LLMPrivate::ETagReferenceSource ReferenceSource)"
  },
  {
    "label": "ReportDuplicateTagName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportDuplicateTagName(UE::LLMPrivate::FTagData* TagData, UE::LLMPrivate::ETagReferenceSource ReferenceSource)"
  },
  {
    "label": "TryEnterEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryEnterEnabled(FEnableStateScopeLock& ScopeLock)"
  },
  {
    "label": "GlobalRegisterTagDeclaration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GlobalRegisterTagDeclaration(FLLMTagDeclaration& TagDeclaration)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FName TagName, bool bIsStatTag, ELLMTagSet InTagSet, ELLMTracker InTracker, bool bOverride = true)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(ELLMTag TagEnum, bool bIsStatTag, ELLMTagSet InTagSet, ELLMTracker InTracker, bool bOverride = true)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const UE::LLMPrivate::FTagData* TagData, bool bIsStatTag, ELLMTagSet InTagSet, ELLMTracker InTracker, bool bOverride = true)"
  },
  {
    "label": "Destruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destruct()"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString()"
  },
  {
    "label": "TryFindTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFindTag(FName UniqueName)"
  },
  {
    "label": "TryAddTagAndActivate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryAddTagAndActivate(FName UniqueName, const ILLMDynamicTagConstructor& Constructor)"
  },
  {
    "label": "Activate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Activate()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(ELLMTracker InTracker, ELLMTagSet InTagSet)"
  },
  {
    "label": "Destruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destruct()"
  },
  {
    "label": "FLLMPauseScope()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FLLMPauseScope(FName TagName, bool bIsStatTag, uint64 Amount, ELLMTracker TrackerToPause, ELLMAllocType InAllocType)"
  },
  {
    "label": "FLLMPauseScope()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FLLMPauseScope(ELLMTag TagEnum, bool bIsStatTag, uint64 Amount, ELLMTracker TrackerToPause, ELLMAllocType InAllocType)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FName TagName, ELLMTag EnumTag, bool bIsEnumTag, bool bIsStatTag, uint64 Amount,\n\t\tELLMTracker TrackerToPause, ELLMAllocType InAllocType)"
  },
  {
    "label": "FLLMClearScope()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FLLMClearScope(ELLMTagSet InTagSet, ELLMTracker InTracker)"
  },
  {
    "label": "FLLMScopeFromPtr()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FLLMScopeFromPtr(void* Ptr, ELLMTracker Tracker)"
  },
  {
    "label": "FLLMTagDeclaration()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FLLMTagDeclaration(const TCHAR* InCPPName, const FName InDisplayName=NAME_None, FName InParentTagName = NAME_None, FName InStatName = NAME_None, FName InSummaryStatName = NAME_None, ELLMTagSet TagSet = ELLMTagSet::None)"
  },
  {
    "label": "AddCreationCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCreationCallback(FCreationCallback InCallback)"
  },
  {
    "label": "ClearCreationCallbacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCreationCallbacks()"
  },
  {
    "label": "GetCreationCallbacks()",
    "kind": "Method",
    "detail": "Function (TArrayView<FCreationCallback>)",
    "insertText": "GetCreationCallbacks()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Register()"
  },
  {
    "label": "ConstructUniqueName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructUniqueName()"
  }
]