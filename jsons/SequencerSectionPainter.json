[
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "IKeyArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IKeyArea"
  },
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "UMovieSceneTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTrack"
  },
  {
    "label": "FTimeToPixel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimeToPixel"
  },
  {
    "label": "FSectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSectionModel"
  },
  {
    "label": "FKeyAreaElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyAreaElement"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" CoreTypes . h \" # include \" Layout / Geometry . h \" # include \" Layout / SlateRect . h \" # include \" Math / Color . h \" # include \" Templates / SharedPointer . h \" class FSlateWindowElementList ; class IKeyArea ; class UMovieSceneSection ; class UMovieSceneTrack ; struct FTimeToPixel ; namespace UE { namespace Sequencer { class FSectionModel ; } } struct FKeyAreaElement { TArray<TSharedRef<IKeyArea>,TInlineAllocator<1>> KeyAreas ; FGeometry KeyAreaGeometry ; enum EType { Single,Group } ; EType Type ; } ; class FSequencerSectionPainter { public :)",
    "insertText": "UE_NONCOPYABLE(FSequencerSectionPainter) FSequencerSectionPainter(FSlateWindowElementList& OutDrawElements, const FGeometry& InSectionGeometry, TSharedPtr<UE::Sequencer::FSectionModel> Section)"
  },
  {
    "label": "FSequencerSectionPainter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSequencerSectionPainter()"
  },
  {
    "label": "PaintSectionBackground()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PaintSectionBackground(const FLinearColor& Tint)"
  },
  {
    "label": "PaintSectionBackground()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PaintSectionBackground()"
  },
  {
    "label": "GetTrack()",
    "kind": "Method",
    "detail": "Function (UMovieSceneTrack*)",
    "insertText": "GetTrack()"
  },
  {
    "label": "GetSectionColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetSectionColor()"
  },
  {
    "label": "BlendColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "BlendColor(FLinearColor InColor)"
  },
  {
    "label": "GetTimeConverter()",
    "kind": "Method",
    "detail": "Function (public : const FTimeToPixel&)",
    "insertText": "GetTimeConverter()"
  }
]