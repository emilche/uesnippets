[
  {
    "label": "TargetRecip",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TargetRecip"
  },
  {
    "label": "RecipParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RecipParams"
  },
  {
    "label": "TargetRecip()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_TARGET_TARGETRECIP_H # define LLVM_TARGET_TARGETRECIP_H # include \" llvm / ADT / StringRef . h \" # include<vector> # include<string> # include<map> namespace llvm { struct TargetRecip { public :)",
    "insertText": "TargetRecip()"
  },
  {
    "label": "TargetRecip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TargetRecip(const std::vector<std::string> &Args)"
  },
  {
    "label": "setDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDefaults(const StringRef &Key, bool Enable, unsigned RefSteps)"
  },
  {
    "label": "isEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isEnabled(const StringRef &Key)"
  },
  {
    "label": "getRefinementSteps()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getRefinementSteps(const StringRef &Key)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const TargetRecip &Other)"
  },
  {
    "label": "RecipParams()",
    "kind": "Method",
    "detail": "Function (private : enum { Uninitialized = - 1 } ; struct RecipParams { int8_t Enabled ; int8_t RefinementSteps ;)",
    "insertText": "RecipParams() : Enabled(Uninitialized), RefinementSteps(Uninitialized)"
  },
  {
    "label": "parseGlobalParams()",
    "kind": "Method",
    "detail": "Function (} } ; std::map<StringRef,RecipParams> RecipMap ; typedef std::map<StringRef,RecipParams>::iterator RecipIter ; typedef std::map<StringRef,RecipParams>::const_iterator ConstRecipIter ; bool)",
    "insertText": "parseGlobalParams(const std::string &Arg)"
  },
  {
    "label": "parseIndividualParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "parseIndividualParams(const std::vector<std::string> &Args)"
  }
]