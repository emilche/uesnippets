[
  {
    "label": "FMassEntityManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassEntityManager"
  },
  {
    "label": "UMassProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMassProcessor"
  },
  {
    "label": "UMassCompositeProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMassCompositeProcessor"
  },
  {
    "label": "FMassCommandBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassCommandBuffer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FProcessorAuxDataBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProcessorAuxDataBase"
  },
  {
    "label": "MASSENTITY_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MASSENTITY_API"
  },
  {
    "label": "FMassProcessorOrderInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassProcessorOrderInfo"
  },
  {
    "label": "WITH_MASSENTITY_DEBUG()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" StructUtils / StructUtilsTypes . h \" # include \" StructUtils / InstancedStruct . h \" # include \" MassProcessingTypes . generated . h \" # ifndef MASS_DO_PARALLEL # define MASS_DO_PARALLEL ! UE_SERVER # endif # define)",
    "insertText": "WITH_MASSENTITY_DEBUG(!(UE_BUILD_SHIPPING || UE_BUILD_SHIPPING_WITH_EDITOR || UE_BUILD_TEST) && WITH_STRUCTUTILS_DEBUG && 1)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (class UMassProcessor ; class UMassCompositeProcessor ; struct FMassCommandBuffer ;)",
    "insertText": "UENUM(meta = (Bitflags, UseEnumValuesAsMaskValuesInEditor = \"true\"))"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (None = 0)",
    "insertText": "UMETA(Hidden), Standalone = 1 << 0, Server = 1 << 1, Client = 1 << 2, Editor = 1 << 3, EditorWorld = 1 << 4, AllNetModes = Standalone | Server | Client UMETA(Hidden), AllWorldModes = Standalone | Server | Client | EditorWorld UMETA(Hidden), All = Standalone | Server | Client | Editor | EditorWorld UMETA(Hidden)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(EProcessorExecutionFlags)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "FMassProcessingContext()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMassCommandBuffer> CommandBuffer ;)",
    "insertText": "FMassProcessingContext()"
  },
  {
    "label": "FMassProcessingContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMassProcessingContext(FMassEntityManager& InEntityManager, const float InDeltaSeconds)"
  },
  {
    "label": "FMassProcessingContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMassProcessingContext(TSharedPtr<FMassEntityManager>& InEntityManager, const float InDeltaSeconds)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() private: UPROPERTY()"
  },
  {
    "label": "FMassRuntimePipeline()",
    "kind": "Method",
    "detail": "Function (EProcessorExecutionFlags ExecutionFlags = EProcessorExecutionFlags::None ; public :)",
    "insertText": "FMassRuntimePipeline(EProcessorExecutionFlags WorldExecutionFlags = EProcessorExecutionFlags::None) : ExecutionFlags(WorldExecutionFlags)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UObject& Owner)"
  },
  {
    "label": "SetProcessors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProcessors(TArray<UMassProcessor*>&& InProcessors)"
  },
  {
    "label": "CreateFromArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFromArray(TConstArrayView<const UMassProcessor*> InProcessors, UObject& InOwner)"
  },
  {
    "label": "InitializeFromArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromArray(TConstArrayView<const UMassProcessor*> InProcessors, UObject& InOwner)"
  },
  {
    "label": "InitializeFromClassArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromClassArray(TConstArrayView<TSubclassOf<UMassProcessor>> InProcessorClasses, UObject& InOwner)"
  },
  {
    "label": "AppendOrOverrideRuntimeProcessorCopies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendOrOverrideRuntimeProcessorCopies(TConstArrayView<const UMassProcessor*> InProcessors, UObject& InOwner)"
  },
  {
    "label": "AppendUniqueRuntimeProcessorCopies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendUniqueRuntimeProcessorCopies(TConstArrayView<const UMassProcessor*> InProcessors, UObject& InOwner)"
  },
  {
    "label": "AppendProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendProcessor(UMassProcessor& Processor)"
  },
  {
    "label": "AppendProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendProcessor(TSubclassOf<UMassProcessor> ProcessorClass, UObject& InOwner)"
  },
  {
    "label": "RemoveProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveProcessor(UMassProcessor& InProcessor)"
  },
  {
    "label": "FindTopLevelGroupByName()",
    "kind": "Method",
    "detail": "Function (UMassCompositeProcessor*)",
    "insertText": "FindTopLevelGroupByName(const FName GroupName)"
  },
  {
    "label": "HasProcessorOfExactClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasProcessorOfExactClass(TSubclassOf<UMassProcessor> InClass)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Num()"
  },
  {
    "label": "GetProcessors()",
    "kind": "Method",
    "detail": "Function (} TConstArrayView<TObjectPtr<UMassProcessor>>)",
    "insertText": "GetProcessors()"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (PrePhysics,StartPhysics,DuringPhysics,EndPhysics,PostPhysics,FrameEnd,MAX,} ; struct FMassProcessorOrderInfo { enum class EDependencyNodeType : uint8 { Invalid,Processor,GroupStart,GroupEnd } ; FName Name =)",
    "insertText": "TEXT(\"\")"
  }
]