[
  {
    "label": "LowPrecisionTimer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LowPrecisionTimer"
  },
  {
    "label": "MetronomeSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MetronomeSource"
  },
  {
    "label": "TimerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimerBase"
  },
  {
    "label": "WebRtcTaskQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WebRtcTaskQueue"
  },
  {
    "label": "ThreadWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ThreadWrapper"
  },
  {
    "label": "AlsaPcmOutputStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AlsaPcmOutputStream"
  },
  {
    "label": "AlsaPcmInputStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AlsaPcmInputStream"
  },
  {
    "label": "FakeAudioWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeAudioWorker"
  },
  {
    "label": "DelayTimerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DelayTimerBase"
  },
  {
    "label": "DelayedTaskManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DelayedTaskManager"
  },
  {
    "label": "DeadlineTimer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DeadlineTimer"
  },
  {
    "label": "MetronomeTimer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MetronomeTimer"
  },
  {
    "label": "TimeDelta",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimeDelta"
  },
  {
    "label": "TimeTicks",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimeTicks"
  },
  {
    "label": "PostDelayedTaskPassKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PostDelayedTaskPassKey"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "blink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "blink"
  },
  {
    "label": "blink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "blink"
  },
  {
    "label": "blink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "blink"
  },
  {
    "label": "blink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "blink"
  },
  {
    "label": "PostDelayedTaskPassKeyForTesting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PostDelayedTaskPassKeyForTesting"
  },
  {
    "label": "webrtc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "webrtc"
  },
  {
    "label": "media",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "media"
  },
  {
    "label": "media",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "media"
  },
  {
    "label": "media",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "media"
  },
  {
    "label": "PostDelayedTaskPassKeyForTesting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PostDelayedTaskPassKeyForTesting"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "SequencedTaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SequencedTaskRunner"
  },
  {
    "label": "CurrentHandleOverride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CurrentHandleOverride"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "PostNonNestableTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PostNonNestableTask(const Location& from_here, OnceClosure task)"
  },
  {
    "label": "PostCancelableDelayedTask()",
    "kind": "Method",
    "detail": "Function (DelayedTaskHandle)",
    "insertText": "PostCancelableDelayedTask(\n      subtle::PostDelayedTaskPassKey,\n      const Location& from_here,\n      OnceClosure task,\n      TimeDelta delay)"
  },
  {
    "label": "PostCancelableDelayedTaskAt()",
    "kind": "Method",
    "detail": "Function (DelayedTaskHandle)",
    "insertText": "PostCancelableDelayedTaskAt(\n      subtle::PostDelayedTaskPassKey,\n      const Location& from_here,\n      OnceClosure task,\n      TimeTicks delayed_run_time,\n      subtle::DelayPolicy delay_policy)"
  },
  {
    "label": "PostDelayedTaskAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PostDelayedTaskAt(subtle::PostDelayedTaskPassKey,\n                                 const Location& from_here,\n                                 OnceClosure task,\n                                 TimeTicks delayed_run_time,\n                                 subtle::DelayPolicy delay_policy)"
  },
  {
    "label": "DeleteOrReleaseSoonInternal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DeleteOrReleaseSoonInternal(from_here, &DeleteHelper<T>::DoDelete,\n                                       object)"
  },
  {
    "label": "HasCurrentDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCurrentDefault()"
  },
  {
    "label": "CurrentDefaultHandle()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "CurrentDefaultHandle(\n        scoped_refptr<SequencedTaskRunner> task_runner)"
  },
  {
    "label": "OnTaskRunnerDeleter()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "OnTaskRunnerDeleter(scoped_refptr<SequencedTaskRunner> task_runner)"
  }
]