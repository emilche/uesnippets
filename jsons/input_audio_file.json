[
  {
    "label": "InputAudioFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InputAudioFile"
  },
  {
    "label": "InputAudioFile()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_TOOLS_INPUT_AUDIO_FILE_H_ # define MODULES_AUDIO_CODING_NETEQ_TOOLS_INPUT_AUDIO_FILE_H_ # include<stdio . h> # include<string> # include \" absl / strings / string_view . h \" namespace webrtc { namespace test { class InputAudioFile { public :)",
    "insertText": "InputAudioFile(absl::string_view file_name, bool loop_at_end = true)"
  },
  {
    "label": "InputAudioFile()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "InputAudioFile()"
  },
  {
    "label": "InputAudioFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InputAudioFile(const InputAudioFile&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InputAudioFile&)",
    "insertText": "operator(const InputAudioFile&)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(size_t samples, int16_t* destination)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Seek(int samples)"
  },
  {
    "label": "DuplicateInterleaved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateInterleaved(const int16_t* source, size_t samples, size_t channels, int16_t* destination)"
  }
]