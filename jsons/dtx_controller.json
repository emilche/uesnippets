[
  {
    "label": "DtxController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DtxController"
  },
  {
    "label": "Config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Config"
  },
  {
    "label": "Config()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_DTX_CONTROLLER_H_ # define MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_DTX_CONTROLLER_H_ # include \" absl / types / optional . h \" # include \" modules / audio_coding / audio_network_adaptor / controller . h \" # include \" modules / audio_coding / audio_network_adaptor / include / audio_network_adaptor_config . h \" namespace webrtc { class DtxController final : public Controller { public : struct Config {)",
    "insertText": "Config(bool initial_dtx_enabled, int dtx_enabling_bandwidth_bps, int dtx_disabling_bandwidth_bps)"
  },
  {
    "label": "DtxController()",
    "kind": "Method",
    "detail": "Function (bool initial_dtx_enabled ; int dtx_enabling_bandwidth_bps ; int dtx_disabling_bandwidth_bps ; } ;)",
    "insertText": "DtxController(const Config& config)"
  },
  {
    "label": "DtxController()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DtxController()"
  },
  {
    "label": "DtxController()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DtxController(const DtxController&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DtxController&)",
    "insertText": "operator(const DtxController&)"
  },
  {
    "label": "UpdateNetworkMetrics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNetworkMetrics(const NetworkMetrics& network_metrics)"
  },
  {
    "label": "MakeDecision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeDecision(AudioEncoderRuntimeConfig* config)"
  }
]