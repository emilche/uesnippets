[
  {
    "label": "FLogMessageInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLogMessageInfo"
  },
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "FLogMessageRecord",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogMessageRecord"
  },
  {
    "label": "FLogMessageCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogMessageCache"
  },
  {
    "label": "FLogMessageCategory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogMessageCategory"
  },
  {
    "label": "FLogMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogMessage"
  },
  {
    "label": "FLogMessageRecord()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" namespace TraceServices { struct FLogMessageInfo ; class IAnalysisSession ; } class FLogMessageRecord { public :)",
    "insertText": "FLogMessageRecord()"
  },
  {
    "label": "FLogMessageRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLogMessageRecord(const TraceServices::FLogMessageInfo& Message)"
  },
  {
    "label": "GetIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetIndex()"
  },
  {
    "label": "GetMessage()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "GetMessage()"
  },
  {
    "label": "GetFile()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "GetFile()"
  },
  {
    "label": "GetLine()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetLine()"
  },
  {
    "label": "GetMessageAsString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetMessageAsString()"
  },
  {
    "label": "GetIndexAsText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetIndexAsText()"
  },
  {
    "label": "GetTimeAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTimeAsText()"
  },
  {
    "label": "GetVerbosityAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetVerbosityAsText()"
  },
  {
    "label": "GetCategoryAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCategoryAsText()"
  },
  {
    "label": "ToDisplayString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ToDisplayString()"
  },
  {
    "label": "FLogMessageCache()",
    "kind": "Method",
    "detail": "Function (private : double Time = 0 . 0 ; FText Category ; FText Message ; FText File ; uint32 Line = 0 ; uint32 Index = 0 ; ELogVerbosity::Type Verbosity = ELogVerbosity::Type::NoLogging ; } ; class FLogMessageCache { public :)",
    "insertText": "FLogMessageCache()"
  },
  {
    "label": "SetSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSession(TSharedPtr<const TraceServices::IAnalysisSession> InSession)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FLogMessageRecord&)",
    "insertText": "Get(uint64 Index)"
  },
  {
    "label": "GetUncached()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FLogMessageRecord>)",
    "insertText": "GetUncached(uint64 Index)"
  },
  {
    "label": "FLogMessage()",
    "kind": "Method",
    "detail": "Function (private : FCriticalSection CriticalSection ; TSharedPtr<const TraceServices::IAnalysisSession> Session ; TMap<uint64,FLogMessageRecord> Map ; FLogMessageRecord InvalidEntry ; } ; class FLogMessageCategory { public : FName Name ; bool bIsVisible ; } ; class FLogMessage { public :)",
    "insertText": "FLogMessage(const int32 InIndex) : Index(InIndex)"
  }
]