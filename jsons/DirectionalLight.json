[
  {
    "label": "UArrowComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UArrowComponent"
  },
  {
    "label": "UDirectionalLightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDirectionalLightComponent"
  },
  {
    "label": "ADirectionalLight",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ADirectionalLight"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / Light . h \" # include \" DirectionalLight . generated . h \" class UArrowComponent ; class UDirectionalLightComponent ;)",
    "insertText": "UCLASS(ClassGroup=(Lights, DirectionalLights), MinimalAPI, meta=(ChildCanTick))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() #if WITH_EDITORONLY_DATA private: UPROPERTY()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# endif public : void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "LoadedFromAnotherClass()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "LoadedFromAnotherClass(const FName& OldClassName)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "CanChangeIsSpatiallyLoadedFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanChangeIsSpatiallyLoadedFlag()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (OutRuntimeBounds .)",
    "insertText": "Init()"
  },
  {
    "label": "GetArrowComponent()",
    "kind": "Method",
    "detail": "Function (} # endif public : # if WITH_EDITORONLY_DATA UArrowComponent*)",
    "insertText": "GetArrowComponent()"
  }
]