[
  {
    "label": "FMovieSceneSequenceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceID"
  },
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UCameraComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraComponent"
  },
  {
    "label": "UMovieSceneCameraCutSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneCameraCutSection"
  },
  {
    "label": "UMovieSceneCameraCutTrackInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneCameraCutTrackInstance"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Curves / KeyHandle . h \" # include \" EntitySystem / IMovieSceneEntityProvider . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" Misc / Guid . h \" # include \" MovieSceneObjectBindingID . h \" # include \" MovieSceneSection . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / SequencerObjectVersion . h \" # include \" MovieSceneCameraCutSection . generated . h \" struct FMovieSceneSequenceID ; class IMovieScenePlayer ; class UCameraComponent ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UMovieSceneCameraCutSection(const FObjectInitializer& Init)"
  },
  {
    "label": "SetCameraGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraGuid(const FGuid& InGuid)"
  },
  {
    "label": "SetCameraBindingID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraBindingID(UE::MovieScene::FRelativeObjectBindingID(InGuid))"
  },
  {
    "label": "OnBindingIDsUpdated()",
    "kind": "Method",
    "detail": "Function (CameraBindingID = InCameraBindingID ; } void)",
    "insertText": "OnBindingIDsUpdated(const TMap<UE::MovieScene::FFixedObjectBindingID, UE::MovieScene::FFixedObjectBindingID>& OldFixedToNewFixedMap, FMovieSceneSequenceID LocalSequenceID, TSharedRef<UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "GetReferencedBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReferencedBindings(TArray<FGuid>& OutBindings)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "GetFirstCamera()",
    "kind": "Method",
    "detail": "Function (UCameraComponent*)",
    "insertText": "GetFirstCamera(IMovieScenePlayer& Player, FMovieSceneSequenceID SequenceID)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "ComputeInitialCameraCutTransform()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "ComputeInitialCameraCutTransform()"
  },
  {
    "label": "ImportEntityImpl()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ImportEntityImpl(UMovieSceneEntitySystemLinker* EntityLinker, const FEntityImportParams& Params, FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "GetThumbnailReferenceOffset()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA public : float)",
    "insertText": "GetThumbnailReferenceOffset()"
  },
  {
    "label": "Modify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Modify()"
  }
]