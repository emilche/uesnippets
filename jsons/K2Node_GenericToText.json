[
  {
    "label": "UK2Node_GenericToText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_GenericToText"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" K2Node . h \" # include \" K2Node_GenericToText . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() virtual void AllocateDefaultPins()"
  },
  {
    "label": "PinConnectionListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PinConnectionListChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "PinTypeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PinTypeChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "NodeConnectionListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NodeConnectionListChanged()"
  },
  {
    "label": "IsConnectionDisallowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectionDisallowed(const UEdGraphPin* MyPin, const UEdGraphPin* OtherPin, FString& OutReason)"
  },
  {
    "label": "PostReconstructNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostReconstructNode()"
  },
  {
    "label": "ExpandNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandNode(class FKismetCompilerContext& CompilerContext, UEdGraph* SourceGraph)"
  },
  {
    "label": "IsNodePure()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodePure()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "GetMenuCategory()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMenuCategory()"
  },
  {
    "label": "SynchronizeArgumentPinType()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SynchronizeArgumentPinType()"
  }
]