[
  {
    "label": "PacketMaskTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PacketMaskTable"
  },
  {
    "label": "PacketMaskTable()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "PacketMaskTable(FecMaskType fec_mask_type, int num_media_packets)"
  },
  {
    "label": "LookUp()",
    "kind": "Method",
    "detail": "Function (uint8_t>)",
    "insertText": "LookUp(int num_media_packets,\n                                       int num_fec_packets)"
  },
  {
    "label": "LookUpInFecTable()",
    "kind": "Method",
    "detail": "Function (uint8_t>)",
    "insertText": "LookUpInFecTable(const uint8_t* table,\n                                               int media_packet_index,\n                                               int fec_index)"
  },
  {
    "label": "GeneratePacketMasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GeneratePacketMasks(int num_media_packets,\n                         int num_fec_packets,\n                         int num_imp_packets,\n                         bool use_unequal_protection,\n                         PacketMaskTable* mask_table,\n                         uint8_t* packet_mask)"
  },
  {
    "label": "PacketMaskSize()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "PacketMaskSize(size_t num_sequence_numbers)"
  },
  {
    "label": "InsertZeroColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertZeroColumns(int num_zeros,\n                       uint8_t* new_mask,\n                       int new_mask_bytes,\n                       int num_fec_packets,\n                       int new_bit_index)"
  },
  {
    "label": "CopyColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyColumn(uint8_t* new_mask,\n                int new_mask_bytes,\n                uint8_t* old_mask,\n                int old_mask_bytes,\n                int num_fec_packets,\n                int new_bit_index,\n                int old_bit_index)"
  }
]