[
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "IMeshPaintGeometryAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMeshPaintGeometryAdapter"
  },
  {
    "label": "UClothingAssetBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClothingAssetBase"
  },
  {
    "label": "UClothingAssetCommon",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClothingAssetCommon"
  },
  {
    "label": "UMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshComponent"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FPointWeightMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointWeightMap"
  },
  {
    "label": "FClothMeshPaintAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClothMeshPaintAdapter"
  },
  {
    "label": "FClothAssetInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClothAssetInfo"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FCollisionQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionQueryParams"
  },
  {
    "label": "FPaintableTexture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPaintableTexture"
  },
  {
    "label": "FClothMeshPaintAdapterFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClothMeshPaintAdapterFactory"
  },
  {
    "label": "InitializeAdapterGlobals()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BaseMeshPaintGeometryAdapter . h \" # include \" Containers / Array . h \" # include \" IMeshPaintGeometryAdapterFactory . h \" # include \" Math / Matrix . h \" # include \" Math / UnrealMathSSE . h \" # include \" Math / Vector2D . h \" # include \" Templates / SharedPointer . h \" class FReferenceCollector ; class IMeshPaintGeometryAdapter ; class UClothingAssetBase ; class UClothingAssetCommon ; class UMeshComponent ; class USkeletalMesh ; class USkeletalMeshComponent ; class UTexture ; struct FColor ; struct FGuid ; struct FPointWeightMap ; class FClothMeshPaintAdapter : public FBaseMeshPaintGeometryAdapter { protected : struct FClothAssetInfo { int32 VertexStart ; int32 VertexEnd ; int32 IndexStart ; int32 IndexEnd ; TArray<TArray<int32>> NeighborMap ; UClothingAssetCommon* Asset ; } ; public : void)",
    "insertText": "InitializeAdapterGlobals()"
  },
  {
    "label": "AddReferencedObjectsGlobals()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjectsGlobals(FReferenceCollector& Collector)"
  },
  {
    "label": "CleanupGlobals()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CleanupGlobals()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Construct(UMeshComponent* InComponent, int32 InPaintingMeshLODIndex)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize()"
  },
  {
    "label": "OnAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAdded()"
  },
  {
    "label": "OnRemoved()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnRemoved()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "QueryPaintableTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryPaintableTextures(int32 MaterialIndex, int32& OutDefaultIndex, TArray<struct FPaintableTexture>& InOutTextureList)"
  },
  {
    "label": "ApplyOrRemoveTextureOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyOrRemoveTextureOverride(UTexture* SourceTexture, UTexture* OverrideTexture)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "PreEdit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PreEdit()"
  },
  {
    "label": "PostEdit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEdit()"
  },
  {
    "label": "GetTextureCoordinate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTextureCoordinate(int32 VertexIndex, int32 ChannelIndex, FVector2D& OutTextureCoordinate)"
  },
  {
    "label": "GetVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexColor(int32 VertexIndex, FColor& OutColor, bool bInstance = true)"
  },
  {
    "label": "SetVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVertexColor(int32 VertexIndex, FColor Color, bool bInstance = true)"
  },
  {
    "label": "GetComponentToWorldMatrix()",
    "kind": "Method",
    "detail": "Function (FMatrix)",
    "insertText": "GetComponentToWorldMatrix()"
  },
  {
    "label": "SphereIntersectVertices()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "SphereIntersectVertices(const float ComponentSpaceSquaredBrushRadius, const FVector& ComponentSpaceBrushPosition, const FVector& ComponentSpaceCameraPosition, const bool bOnlyFrontFacing)"
  },
  {
    "label": "SetSelectedClothingAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedClothingAsset(const FGuid& InAssetGuid, int32 InAssetLod, int32 InMaskIndex)"
  },
  {
    "label": "GetVertexNeighbors()",
    "kind": "Method",
    "detail": "Function (const TArray<int32>*)",
    "insertText": "GetVertexNeighbors(int32 InVertexIndex)"
  },
  {
    "label": "GetCurrentMask()",
    "kind": "Method",
    "detail": "Function (FPointWeightMap*)",
    "insertText": "GetCurrentMask()"
  },
  {
    "label": "InitializeVertexData()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "InitializeVertexData()"
  },
  {
    "label": "HasValidSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidSelection()"
  },
  {
    "label": "AddReferencedObjectsGlobals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjectsGlobals(Collector)"
  }
]