[
  {
    "label": "FDateTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDateTime"
  },
  {
    "label": "ITraceFilterPreset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ITraceFilterPreset"
  },
  {
    "label": "FTraceObjectInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTraceObjectInfo"
  },
  {
    "label": "FTraceStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTraceStats"
  },
  {
    "label": "ISessionTraceFilterService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISessionTraceFilterService"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / SharedPointer . h \" # include \" ITraceController . h \" struct FDateTime ; namespace UE::TraceTools { struct ITraceFilterPreset ; struct FTraceObjectInfo { FString Name ; FString Description ; bool bEnabled ; bool bReadOnly ; uint32 Id ; bool)",
    "insertText": "operator(const FTraceObjectInfo& Other)"
  },
  {
    "label": "ISessionTraceFilterService()",
    "kind": "Method",
    "detail": "Function (} } ; struct FTraceStats { FTraceStatus::FStats StandardStats ; uint64 BytesSentPerSecond = 0 ; uint64 BytesTracedPerSecond = 0 ; } ; class ISessionTraceFilterService : public TSharedFromThis<ISessionTraceFilterService> { public : ~)",
    "insertText": "ISessionTraceFilterService()"
  },
  {
    "label": "GetRootObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetRootObjects(TArray<FTraceObjectInfo>& OutObjects)"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (const FTraceObjectInfo*)",
    "insertText": "GetObject(const FString& Name)"
  },
  {
    "label": "SetObjectFilterState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectFilterState(const FString& InObjectName, const bool bFilterState)"
  },
  {
    "label": "GetChannelsUpdateTimestamp()",
    "kind": "Method",
    "detail": "Function (const FDateTime&)",
    "insertText": "GetChannelsUpdateTimestamp()"
  },
  {
    "label": "UpdateFilterPreset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFilterPreset(const TSharedPtr<ITraceFilterPreset> InPreset, bool IsEnabled)"
  },
  {
    "label": "HasSettings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSettings()"
  },
  {
    "label": "GetSettings()",
    "kind": "Method",
    "detail": "Function (const FTraceStatus::FSettings&)",
    "insertText": "GetSettings()"
  },
  {
    "label": "HasStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasStats()"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (const FTraceStats&)",
    "insertText": "GetStats()"
  },
  {
    "label": "GetTraceEndpoint()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetTraceEndpoint()"
  },
  {
    "label": "GetTraceSystemStatus()",
    "kind": "Method",
    "detail": "Function (FTraceStatus::ETraceSystemStatus)",
    "insertText": "GetTraceSystemStatus()"
  },
  {
    "label": "SetInstanceId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceId(const FGuid& Id)"
  },
  {
    "label": "HasAvailableInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAvailableInstance()"
  }
]