[
  {
    "label": "I420Buffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "I420Buffer"
  },
  {
    "label": "VideoFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoFrame"
  },
  {
    "label": "VideoFrameBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoFrameBuffer"
  },
  {
    "label": "EqualPlane()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_FRAME_UTILS_H_ # define TEST_FRAME_UTILS_H_ # include<stdint . h> # include \" api / scoped_refptr . h \" # include \" api / video / nv12_buffer . h \" namespace webrtc { class I420Buffer ; class VideoFrame ; class VideoFrameBuffer ; namespace test { bool)",
    "insertText": "EqualPlane(const uint8_t* data1, const uint8_t* data2, int stride1, int stride2, int width, int height)"
  },
  {
    "label": "EqualPlane()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EqualPlane(const uint8_t* data1, const uint8_t* data2, int stride, int width, int height)"
  },
  {
    "label": "FramesEqual()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FramesEqual(const webrtc::VideoFrame& f1, const webrtc::VideoFrame& f2)"
  },
  {
    "label": "FrameBufsEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FrameBufsEqual(const rtc::scoped_refptr<webrtc::VideoFrameBuffer>& f1, const rtc::scoped_refptr<webrtc::VideoFrameBuffer>& f2)"
  },
  {
    "label": "ReadI420Buffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I420Buffer>)",
    "insertText": "ReadI420Buffer(int width, int height, FILE*)"
  },
  {
    "label": "ReadNV12Buffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<NV12Buffer>)",
    "insertText": "ReadNV12Buffer(int width, int height, FILE*)"
  }
]