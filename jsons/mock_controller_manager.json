[
  {
    "label": "MockControllerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockControllerManager"
  },
  {
    "label": "MockControllerManager()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_MOCK_MOCK_CONTROLLER_MANAGER_H_ # define MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_MOCK_MOCK_CONTROLLER_MANAGER_H_ # include<vector> # include \" modules / audio_coding / audio_network_adaptor / controller_manager . h \" # include \" test / gmock . h \" namespace webrtc { class MockControllerManager : public ControllerManager { public : ~)",
    "insertText": "MockControllerManager()"
  },
  {
    "label": "Die()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Die()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(void, Die, ())"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<Controller*>, GetSortedControllers, (const Controller::NetworkMetrics& metrics), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<Controller*>, GetControllers, (), (const, override))"
  }
]