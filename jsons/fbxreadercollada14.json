[
  {
    "label": "FbxReaderCollada",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxReaderCollada"
  },
  {
    "label": "LibraryTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LibraryTypeTraits"
  },
  {
    "label": "ColladaElementData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ColladaElementData"
  },
  {
    "label": "AnimationClipData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AnimationClipData"
  },
  {
    "label": "ReadCollada()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadCollada(FbxScene &pScene, xmlNode* pXmlNode)"
  },
  {
    "label": "ImportVisualScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportVisualScene(xmlNode* pXmlNode, FbxScene * pScene)"
  },
  {
    "label": "ImportVisualSceneMax3DExtension()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportVisualSceneMax3DExtension(xmlNode * pTechniqueElement, FbxScene * pScene)"
  },
  {
    "label": "ImportVisualSceneFCOLLADAExtension()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportVisualSceneFCOLLADAExtension(xmlNode * pTechniqueElement, FbxScene * pScene)"
  },
  {
    "label": "ImportVisualSceneMayaExtension()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportVisualSceneMayaExtension(xmlNode * pTechniqueElement, FbxScene * pScene)"
  },
  {
    "label": "ImportAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportAsset(xmlNode* pXmlNode, FbxGlobalSettings & pGlobalSettings, FbxDocumentInfo &pSceneInfo)"
  },
  {
    "label": "ImportNodeFCOLLADAExtension()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportNodeFCOLLADAExtension(xmlNode* pTechniqueElement, FbxNode * pNode)"
  },
  {
    "label": "ImportNodeXSIExtension()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportNodeXSIExtension(xmlNode* pTechniqueElement, FbxNode * pNode)"
  },
  {
    "label": "ImportNodeFBXExtension()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportNodeFBXExtension(xmlNode* pTechniqueElement, FbxNode * pNode)"
  },
  {
    "label": "ImportSkin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportSkin(xmlNode* pSkinElement)"
  },
  {
    "label": "ImportVertices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportVertices(xmlNode* pVerticesElement, FbxGeometry * pGeometry)"
  },
  {
    "label": "ImportPolygons()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportPolygons(xmlNode* pXmlNode, FbxMesh& pMesh, const FbxDynamicArray<FbxString> & pMaterialSequence)"
  },
  {
    "label": "ImportTransforms()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportTransforms(xmlNode* pXmlNode, FbxNode* pNode)"
  },
  {
    "label": "ImportRotationElement()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ImportRotationElement(xmlNode* pXmlNode, FbxVector4& pRotationVector)"
  },
  {
    "label": "SetRotationOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationOrder(FbxNode * pNode, const FbxArray<int> & pRotationOrder)"
  },
  {
    "label": "ImportLookAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportLookAt(xmlNode* pXmlNode, FbxVector4& lCameraPosition, \n\t\t\t\t\t\t\t\t\t\t FbxVector4& lInterestPosition, FbxVector4& lUpVector,\n\t\t\t\t\t\t\t\t\t\t FbxAMatrix& lCameraTransformMatrix)"
  },
  {
    "label": "IsNodeExportable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodeExportable(FbxString lId)"
  },
  {
    "label": "CheckColladaVersion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckColladaVersion(const FbxString & pVersionString)"
  },
  {
    "label": "AddNotificationError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNotificationError( FbxString pError )"
  },
  {
    "label": "AddNotificationWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNotificationWarning( FbxString pWarning )"
  },
  {
    "label": "ImportScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportScene(xmlNode * pColladaNode)"
  },
  {
    "label": "Preprocess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Preprocess(xmlNode * pColladaElement)"
  },
  {
    "label": "BuildUpLibraryMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildUpLibraryMap()"
  },
  {
    "label": "BuildUpLibraryMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildUpLibraryMap(xmlNode * pElement, const FbxString & pElementTag)"
  },
  {
    "label": "ConnectMaterialsToNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectMaterialsToNode(FbxNode * pNode, xmlNode * pElement, FbxDynamicArray<FbxString> & pMaterialSequence)"
  },
  {
    "label": "ImportTransparent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportTransparent(xmlNode * pElement, FbxSurfaceLambert * pSurfaceMaterial)"
  },
  {
    "label": "ImportMatrixAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportMatrixAnimation(FbxNode * pNode, const FbxString & pAnimationChannelID)"
  },
  {
    "label": "ImportPropertyAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportPropertyAnimation(FbxProperty & pProperty, const FbxString & pAnimationChannelID, const char * pChannelName = NULL)"
  },
  {
    "label": "GetLocalUnitConversion()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetLocalUnitConversion(xmlNode * pElement)"
  },
  {
    "label": "SetProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProperty(xmlNode* pPropertyElement, FbxProperty & pProperty)"
  },
  {
    "label": "ImportPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportPropertyValue(FbxObject * pObject, const char * pPropertyName,\n                             xmlNode * pPropertyValueElement)"
  }
]