[
  {
    "label": "FPointerTableBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPointerTableBase"
  },
  {
    "label": "FRDGTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGTexture"
  },
  {
    "label": "FFilterVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFilterVertex"
  },
  {
    "label": "FFilterVertexDeclaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterVertexDeclaration"
  },
  {
    "label": "FEmptyVertexDeclaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmptyVertexDeclaration"
  },
  {
    "label": "FScreenRectangleVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScreenRectangleVertexBuffer"
  },
  {
    "label": "FScreenRectangleIndexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScreenRectangleIndexBuffer"
  },
  {
    "label": "FScreenVertexShaderVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScreenVertexShaderVS"
  },
  {
    "label": "FInstancedScreenVertexShaderVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstancedScreenVertexShaderVS"
  },
  {
    "label": "FMobileMultiViewVertexShaderVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMobileMultiViewVertexShaderVS"
  },
  {
    "label": "FCopyRectPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCopyRectPS"
  },
  {
    "label": "FCopyRectSrvPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCopyRectSrvPS"
  },
  {
    "label": "FImagePreTransformVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImagePreTransformVS"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  }
]