[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FEnvQueryRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryRequest"
  },
  {
    "label": "UEnvQueryInstanceBlueprintWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryInstanceBlueprintWrapper"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / ScriptMacros . h \" # include \" EnvironmentQuery / Items / EnvQueryItemType . h \" # include \" EnvironmentQuery / EnvQueryTypes . h \" # include \" EnvironmentQuery / EQSQueryResultSourceInterface . h \" # include \" EnvQueryInstanceBlueprintWrapper . generated . h \" class AActor ; struct FEnvQueryRequest ;)",
    "insertText": "UCLASS(Blueprintable, BlueprintType, meta = (DisplayName = \"EQS Query Instance\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FEQSQueryDoneSignature, UEnvQueryInstanceBlueprintWrapper*, QueryInstance, EEnvQueryStatus::Type, QueryStatus)"
  },
  {
    "label": "GetQueryResult()",
    "kind": "Method",
    "detail": "Function (const FEnvQueryResult*)",
    "insertText": "GetQueryResult()"
  },
  {
    "label": "GetQueryInstance()",
    "kind": "Method",
    "detail": "Function (} const FEnvQueryInstance*)",
    "insertText": "GetQueryInstance()"
  },
  {
    "label": "UEnvQueryInstanceBlueprintWrapper()",
    "kind": "Method",
    "detail": "Function (# if ! UE_BUILD_SHIPPING FWeakObjectPtr Instigator ; # endif public :)",
    "insertText": "UEnvQueryInstanceBlueprintWrapper(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "RunQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunQuery(const EEnvQueryRunMode::Type InRunMode, FEnvQueryRequest& QueryRequest)"
  },
  {
    "label": "SetInstigator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstigator(const UObject* Object)"
  },
  {
    "label": "GetRunMode()",
    "kind": "Method",
    "detail": "Function (EEnvQueryRunMode::Type)",
    "insertText": "GetRunMode()"
  },
  {
    "label": "IsSupportedForNetworking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupportedForNetworking()"
  }
]