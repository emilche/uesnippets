[
  {
    "label": "FAnimNode_SequencePlayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SequencePlayer"
  },
  {
    "label": "FSequencePlayerReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencePlayerReference"
  },
  {
    "label": "USequencePlayerLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USequencePlayerLibrary"
  },
  {
    "label": "ConvertToSequencePlayer()",
    "kind": "Method",
    "detail": "Function (FSequencePlayerReference)",
    "insertText": "ConvertToSequencePlayer(const FAnimNodeReference& Node, EAnimNodeReferenceConversionResult& Result)"
  },
  {
    "label": "SetAccumulatedTime()",
    "kind": "Method",
    "detail": "Function (FSequencePlayerReference)",
    "insertText": "SetAccumulatedTime(const FSequencePlayerReference& SequencePlayer, float Time)"
  },
  {
    "label": "SetStartPosition()",
    "kind": "Method",
    "detail": "Function (FSequencePlayerReference)",
    "insertText": "SetStartPosition(const FSequencePlayerReference& SequencePlayer, float StartPosition)"
  },
  {
    "label": "SetPlayRate()",
    "kind": "Method",
    "detail": "Function (FSequencePlayerReference)",
    "insertText": "SetPlayRate(const FSequencePlayerReference& SequencePlayer, float PlayRate)"
  },
  {
    "label": "SetSequence()",
    "kind": "Method",
    "detail": "Function (FSequencePlayerReference)",
    "insertText": "SetSequence(const FSequencePlayerReference& SequencePlayer, UAnimSequenceBase* Sequence)"
  },
  {
    "label": "SetSequenceWithInertialBlending()",
    "kind": "Method",
    "detail": "Function (FSequencePlayerReference)",
    "insertText": "SetSequenceWithInertialBlending(const FAnimUpdateContext& UpdateContext, const FSequencePlayerReference& SequencePlayer, UAnimSequenceBase* Sequence, float BlendTime = 0.2f)"
  },
  {
    "label": "GetAccumulatedTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAccumulatedTime(const FSequencePlayerReference& SequencePlayer)"
  },
  {
    "label": "GetStartPosition()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetStartPosition(const FSequencePlayerReference& SequencePlayer)"
  },
  {
    "label": "GetPlayRate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPlayRate(const FSequencePlayerReference& SequencePlayer)"
  },
  {
    "label": "GetLoopAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLoopAnimation(const FSequencePlayerReference& SequencePlayer)"
  },
  {
    "label": "ComputePlayRateFromDuration()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ComputePlayRateFromDuration(const FSequencePlayerReference& SequencePlayer, float Duration = 1.f)"
  }
]