[
  {
    "label": "TTriangleCollisionPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TTriangleCollisionPoint"
  },
  {
    "label": "struct",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "struct"
  },
  {
    "label": "TTriangleCollisionPoint()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Templates / UnrealTemplate . h \" # include \" Chaos / Core . h \" namespace Chaos { template<T> struct TTriangleCollisionPoint { enum struct EContactType : uint8 { Invalid = 0,PointFace,EdgeEdge,EdgeFace } ContactType ; int32 Indices [ 2 ] ; TVec4<T> Bary ; TVec3<T> Location ; TVec3<T> Normal ; T Phi ;)",
    "insertText": "TTriangleCollisionPoint() : ContactType(EContactType::Invalid) , Phi(TNumericLimits<T>::Max())"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSet()"
  }
]