[
  {
    "label": "FMeshUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshUtilities"
  },
  {
    "label": "FQueuedThreadPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueuedThreadPool"
  },
  {
    "label": "FQueuedThreadPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueuedThreadPool"
  },
  {
    "label": "FCardRepresentationData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCardRepresentationData"
  },
  {
    "label": "FStaticMeshUtilityBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshUtilityBuilder"
  },
  {
    "label": "BuildSkeletalMesh_Legacy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildSkeletalMesh_Legacy(FSkeletalMeshLODModel& LODModel, const FReferenceSkeleton& RefSkeleton, const TArray<SkeletalMeshImportData::FVertInfluence>& Influences, const TArray<SkeletalMeshImportData::FMeshWedge>& Wedges, const TArray<SkeletalMeshImportData::FMeshFace>& Faces, const TArray<FVector3f>& Points, const TArray<int32>& PointToOriginalMap, const FOverlappingThresholds& OverlappingThresholds, bool bComputeNormals = true, bool bComputeTangents = true, bool bComputeWeightedNormals = true, TArray<FText> * OutWarningMessages = NULL, TArray<FName> * OutWarningNames = NULL)"
  },
  {
    "label": "CacheOptimizeVertexAndIndexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheOptimizeVertexAndIndexBuffer(TArray<FStaticMeshBuildVertex>& Vertices, TArray<TArray<uint32> >& PerSectionIndices, TArray<int32>& WedgeMap)"
  },
  {
    "label": "BuildSkeletalModelFromChunks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildSkeletalModelFromChunks(FSkeletalMeshLODModel& LODModel, const FReferenceSkeleton& RefSkeleton, TArray<FSkinnedMeshChunk*>& Chunks, const TArray<int32>& PointToOriginalMap)"
  },
  {
    "label": "ExtractMeshDataForGeometryCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractMeshDataForGeometryCache(FRawMesh& RawMesh, const FMeshBuildSettings& BuildSettings, TArray<FStaticMeshBuildVertex>& OutVertices, TArray<TArray<uint32> >& OutPerSectionIndices, int32 ImportVersion)"
  },
  {
    "label": "RegisterMenus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMenus()"
  },
  {
    "label": "AddMakeStaticMeshEntryToToolMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMakeStaticMeshEntryToToolMenu(FName InToolbarName)"
  },
  {
    "label": "AddLevelViewportMenuExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLevelViewportMenuExtender()"
  },
  {
    "label": "RemoveLevelViewportMenuExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLevelViewportMenuExtender()"
  },
  {
    "label": "GetLevelViewportContextMenuExtender()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FExtender>)",
    "insertText": "GetLevelViewportContextMenuExtender(const TSharedRef<FUICommandList> CommandList, const TArray<AActor*> InActors)"
  },
  {
    "label": "ConvertActorMeshesToStaticMeshUIAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertActorMeshesToStaticMeshUIAction(const TArray<AActor*> InActors)"
  },
  {
    "label": "GenerateStratifiedUniformHemisphereSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateStratifiedUniformHemisphereSamples(int32 NumSamples, FRandomStream& RandomStream, TArray<FVector3f>& Samples)"
  }
]