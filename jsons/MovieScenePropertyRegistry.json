[
  {
    "label": "FTrackInstancePropertyBindings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackInstancePropertyBindings"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UMovieSceneBlenderSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneBlenderSystem"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMovieScenePropertyBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieScenePropertyBinding"
  },
  {
    "label": "FFloatDecompositionParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFloatDecompositionParams"
  },
  {
    "label": "FPropertyCompositeDefinition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyCompositeDefinition"
  },
  {
    "label": "FPropertyDefinition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyDefinition"
  },
  {
    "label": "FPropertyStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyStats"
  },
  {
    "label": "TCompositePropertyDefinitionBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCompositePropertyDefinitionBuilder"
  },
  {
    "label": "TPropertyDefinitionBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPropertyDefinitionBuilder"
  },
  {
    "label": "FPropertyRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyRegistry"
  },
  {
    "label": "DECLARE_CYCLE_STAT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" CoreTypes . h \" # include \" EntitySystem / IMovieScenePropertyComponentHandler . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieSceneEntitySystemTypes . h \" # include \" EntitySystem / MovieScenePropertySystemTypes . h \" # include \" EntitySystem / MovieSceneSystemTaskDependencies . h \" # include \" Math / NumericLimits . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / GeneratedTypeName . h \" # include \" Misc / InlineValue . h \" # include \" Misc / Optional . h \" # include \" Misc / TVariant . h \" # include \" Stats / Stats . h \" # include \" Stats / Stats2 . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTemplate . h \" # include \" Templates / UnrealTypeTraits . h \" # include \" UObject / NameTypes . h \" # include<initializer_list> class FTrackInstancePropertyBindings ; class UClass ; class UMovieSceneBlenderSystem ; class UMovieSceneEntitySystemLinker ; class UObject ; struct FMovieScenePropertyBinding ; namespace UE { namespace MovieScene { struct FFloatDecompositionParams ; struct FPropertyCompositeDefinition ; struct FPropertyDefinition ;)",
    "insertText": "DECLARE_CYCLE_STAT(TEXT(\"Apply properties\"), MovieSceneEval_ApplyProperties, STATGROUP_MovieSceneECS)"
  },
  {
    "label": "FPropertyDefinition()",
    "kind": "Method",
    "detail": "Function (struct FPropertyStats { int32 NumProperties = 0 ; int32 NumPartialProperties = 0 ; } ; struct FPropertyDefinition {)",
    "insertText": "FPropertyDefinition()"
  },
  {
    "label": "FPropertyDefinition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyDefinition(uint16 InVariableSizeCompositeOffset, FComponentTypeID InPropertyType, FComponentTypeID InInitialValueType) : CustomPropertyRegistration(nullptr) , DoubleCompositeMask(0) , VariableSizeCompositeOffset(InVariableSizeCompositeOffset) , CompositeSize(0) , PropertyType(InPropertyType) , InitialValueType(InInitialValueType) , BlenderSystemClass(nullptr)"
  },
  {
    "label": "FPropertyDefinition()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPropertyDefinition(FPropertyDefinition&&)"
  },
  {
    "label": "FPropertyDefinition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyDefinition(const FPropertyDefinition&)"
  },
  {
    "label": "GetMetaDataComponent()",
    "kind": "Method",
    "detail": "Function (template<T> TComponentTypeID<T>)",
    "insertText": "GetMetaDataComponent(int32 Index)"
  },
  {
    "label": "FPropertyRegistry()",
    "kind": "Method",
    "detail": "Function (} ICustomPropertyRegistration* CustomPropertyRegistration = nullptr ; TStatId StatID ; uint32 DoubleCompositeMask = 0 ; uint16 VariableSizeCompositeOffset = INDEX_NONE ; uint16 CompositeSize = 0 ; FComponentTypeID PropertyType ; FComponentTypeID InitialValueType ; TArrayView<const FComponentTypeID> MetaDataTypes ; UClass* BlenderSystemClass ; TInlineValue<IPropertyComponentHandler,3 2> Handler ; } ; struct FPropertyCompositeDefinition { FComponentTypeID ComponentTypeID ; uint16 CompositeOffset ; } ; using FResolvedFastProperty = TVariant<uint16,UE::MovieScene::FCustomPropertyIndex> ; using FResolvedProperty = TVariant<uint16,UE::MovieScene::FCustomPropertyIndex,TSharedPtr<FTrackInstancePropertyBindings>> ; template<PropertyTraits,. . . Composites> struct TCompositePropertyDefinitionBuilder ; template<PropertyTraits> struct TPropertyDefinitionBuilder ; class FPropertyRegistry { public :)",
    "insertText": "FPropertyRegistry()"
  },
  {
    "label": "FPropertyRegistry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyRegistry(FPropertyRegistry&&)"
  },
  {
    "label": "FPropertyRegistry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyRegistry(const FPropertyRegistry&)"
  },
  {
    "label": "ResolveFastProperty()",
    "kind": "Method",
    "detail": "Function (TOptional<FResolvedFastProperty>)",
    "insertText": "ResolveFastProperty(UObject* Object, const FMovieScenePropertyBinding& PropertyBinding, FCustomAccessorView CustomAccessors)"
  },
  {
    "label": "ResolveProperty()",
    "kind": "Method",
    "detail": "Function (TOptional<FResolvedProperty>)",
    "insertText": "ResolveProperty(UObject* Object, const FMovieScenePropertyBinding& PropertyBinding, FCustomAccessorView CustomAccessors)"
  },
  {
    "label": "DefineCompositeProperty()",
    "kind": "Method",
    "detail": "Function (template<PropertyTraits> TCompositePropertyDefinitionBuilder<PropertyTraits>)",
    "insertText": "DefineCompositeProperty(TPropertyComponents<PropertyTraits>& InOutPropertyComponents, const TCHAR* InStatName)"
  },
  {
    "label": "DefinePropertyImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefinePropertyImpl(InOutPropertyComponents, InStatName)"
  },
  {
    "label": "AsIndex()",
    "kind": "Method",
    "detail": "Function (FPropertyDefinition* Property =& Properties [ InOutPropertyComponents . CompositeID .)",
    "insertText": "AsIndex()"
  },
  {
    "label": "DefineProperty()",
    "kind": "Method",
    "detail": "Function (} template<PropertyTraits> TPropertyDefinitionBuilder<PropertyTraits>)",
    "insertText": "DefineProperty(TPropertyComponents<PropertyTraits>& InOutPropertyComponents, const TCHAR* InStatName)"
  },
  {
    "label": "GetDefinition()",
    "kind": "Method",
    "detail": "Function (} const FPropertyDefinition&)",
    "insertText": "GetDefinition(FCompositePropertyTypeID PropertyID)"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (const int32 CompositeOffset = Property . VariableSizeCompositeOffset ; const int32 NumComposites = Property . CompositeSize ; return)",
    "insertText": "MakeArrayView(CompositeDefinitions.GetData() + CompositeOffset, NumComposites)"
  },
  {
    "label": "GetComposites()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const FPropertyCompositeDefinition>)",
    "insertText": "GetComposites(FCompositePropertyTypeID PropertyID)"
  },
  {
    "label": "DefinePropertyImpl()",
    "kind": "Method",
    "detail": "Function (} private : template<PropertyTraits> struct TPropertyDefinitionBuilder ; template<PropertyTraits,. . . Composites> struct TCompositePropertyDefinitionBuilder ; template<PropertyTraits> void)",
    "insertText": "DefinePropertyImpl(TPropertyComponents<PropertyTraits>& InOutPropertyComponents, const TCHAR* InStatName)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (using StorageType = PropertyTraits::StorageType ; const int32 CompositeOffsetInt32 = CompositeDefinitions .)",
    "insertText": "Num()"
  },
  {
    "label": "uint16()",
    "kind": "Method",
    "detail": "Function (const uint16 CompositeOffset = static_cast<)",
    "insertText": "uint16(CompositeOffsetInt32)"
  },
  {
    "label": "STAT_GROUP_TO_FStatGroup()",
    "kind": "Method",
    "detail": "Function (TStatId StatID ; # if STATS | | ENABLE_STATNAMEDEVENTS # if STATS StatID = FDynamicStats::CreateStatId<)",
    "insertText": "STAT_GROUP_TO_FStatGroup(STATGROUP_MovieSceneECS)>( FName(InStatName))"
  },
  {
    "label": "PROFILER_CHAR()",
    "kind": "Method",
    "detail": "Function (# else const auto& ConversionData = StringCast<)",
    "insertText": "PROFILER_CHAR(InStatName)"
  },
  {
    "label": "NumStorageChars()",
    "kind": "Method",
    "detail": "Function (const int32)",
    "insertText": "NumStorageChars(ConversionData.Length() + 1)"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (PROFILER_CHAR* StoragePtr = new PROFILER_CHAR [ NumStorageChars ] ;)",
    "insertText": "Memcpy(StoragePtr, ConversionData.Get(), NumStorageChars * sizeof(PROFILER_CHAR))"
  },
  {
    "label": "TStatId()",
    "kind": "Method",
    "detail": "Function (StatID =)",
    "insertText": "TStatId(StoragePtr)"
  },
  {
    "label": "NewDefinition()",
    "kind": "Method",
    "detail": "Function (# endif # endif FPropertyDefinition)",
    "insertText": "NewDefinition(CompositeOffset, InOutPropertyComponents.PropertyTag, InOutPropertyComponents.InitialValue)"
  },
  {
    "label": "GetTypes()",
    "kind": "Method",
    "detail": "Function (NewDefinition . StatID = StatID ; NewDefinition . MetaDataTypes = InOutPropertyComponents . MetaDataComponents .)",
    "insertText": "GetTypes()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (const int32 NewPropertyIndex = Properties .)",
    "insertText": "Add(MoveTemp(NewDefinition))"
  },
  {
    "label": "FCompositePropertyTypeID()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "FCompositePropertyTypeID(InOutPropertyComponents.CompositeID) = FCompositePropertyTypeID::FromIndex(NewPropertyIndex)"
  }
]