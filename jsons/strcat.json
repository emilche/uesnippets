[
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "formats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "formats"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "StrCat()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "StrCat(span<const StringPiece> pieces)"
  },
  {
    "label": "StrCat()",
    "kind": "Method",
    "detail": "Function (std::u16string)",
    "insertText": "StrCat(\n    span<const StringPiece16> pieces)"
  },
  {
    "label": "StrCat()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "StrCat(span<const std::string> pieces)"
  },
  {
    "label": "StrCat()",
    "kind": "Method",
    "detail": "Function (std::u16string)",
    "insertText": "StrCat(\n    span<const std::u16string> pieces)"
  },
  {
    "label": "StrAppend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrAppend(std::string* dest, span<const StringPiece> pieces)"
  },
  {
    "label": "StrAppend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrAppend(std::u16string* dest,\n                           span<const StringPiece16> pieces)"
  },
  {
    "label": "StrAppend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrAppend(std::string* dest, span<const std::string> pieces)"
  },
  {
    "label": "StrAppend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrAppend(std::u16string* dest,\n                           span<const std::u16string> pieces)"
  }
]