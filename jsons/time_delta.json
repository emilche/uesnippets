[
  {
    "label": "TimeDelta",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimeDelta"
  },
  {
    "label": "rtc_units_impl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "rtc_units_impl"
  },
  {
    "label": "Minutes()",
    "kind": "Method",
    "detail": "Function (# ifndef API_UNITS_TIME_DELTA_H_ # define API_UNITS_TIME_DELTA_H_ # ifdef WEBRTC_UNIT_TEST # include<ostream> # endif # include<cstdlib> # include<string> # include<type_traits> # include \" rtc_base / units / unit_base . h \" namespace webrtc { class TimeDelta final : public rtc_units_impl::RelativeUnit<TimeDelta> { public : template<T> TimeDelta)",
    "insertText": "Minutes(T value)"
  },
  {
    "label": "Seconds()",
    "kind": "Method",
    "detail": "Function (} template<T> TimeDelta)",
    "insertText": "Seconds(T value)"
  },
  {
    "label": "Millis()",
    "kind": "Method",
    "detail": "Function (} template<T> TimeDelta)",
    "insertText": "Millis(T value)"
  },
  {
    "label": "Micros()",
    "kind": "Method",
    "detail": "Function (} template<T> TimeDelta)",
    "insertText": "Micros(T value)"
  },
  {
    "label": "TimeDelta()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TimeDelta()"
  },
  {
    "label": "seconds()",
    "kind": "Method",
    "detail": "Function (template<T = int64_t> T)",
    "insertText": "seconds()"
  },
  {
    "label": "ms()",
    "kind": "Method",
    "detail": "Function (} template<T = int64_t> T)",
    "insertText": "ms()"
  },
  {
    "label": "us()",
    "kind": "Method",
    "detail": "Function (} template<T = int64_t> T)",
    "insertText": "us()"
  },
  {
    "label": "ns()",
    "kind": "Method",
    "detail": "Function (} template<T = int64_t> T)",
    "insertText": "ns()"
  },
  {
    "label": "seconds_or()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "seconds_or(int64_t fallback_value)"
  },
  {
    "label": "ms_or()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "ms_or(int64_t fallback_value)"
  },
  {
    "label": "us_or()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "us_or(int64_t fallback_value)"
  },
  {
    "label": "Abs()",
    "kind": "Method",
    "detail": "Function (} TimeDelta)",
    "insertText": "Abs()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} private : class rtc_units_impl::UnitBase<TimeDelta> ; using RelativeUnit::RelativeUnit ; bool one_sided = false ; } ; std::string)",
    "insertText": "ToString(TimeDelta value)"
  },
  {
    "label": "ToLogString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "ToLogString(TimeDelta value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} # ifdef WEBRTC_UNIT_TEST std::ostream&)",
    "insertText": "operator(std::ostream& stream, TimeDelta value)"
  }
]