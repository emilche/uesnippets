[
  {
    "label": "SScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBar"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TRACEINSIGHTS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTS_API"
  },
  {
    "label": "UpdateSize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateSize(const float InWidth, const float InHeight)"
  },
  {
    "label": "AlignTimeToPixel()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AlignTimeToPixel(Time, ScaleX)"
  },
  {
    "label": "ScrollAtTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ScrollAtTime(const double Time)"
  },
  {
    "label": "CenterOnTimeInterval()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CenterOnTimeInterval(const double Time, const double Duration)"
  },
  {
    "label": "GetHorizontalScrollLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetHorizontalScrollLimits(double& OutMinT, double& OutMaxT)"
  },
  {
    "label": "EnforceHorizontalScrollLimits()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnforceHorizontalScrollLimits(const double U)"
  },
  {
    "label": "ZoomOnTimeInterval()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ZoomOnTimeInterval(const double Time, const double Duration)"
  },
  {
    "label": "RelativeZoomWithFixedX()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RelativeZoomWithFixedX(const float Delta, const float X)"
  },
  {
    "label": "ZoomWithFixedX()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ZoomWithFixedX(const double NewScaleX, const float X)"
  },
  {
    "label": "SetScaleX()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetScaleX(const double NewScaleX)"
  },
  {
    "label": "UpdateLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLayout()"
  },
  {
    "label": "AddDirtyFlags()",
    "kind": "Method",
    "detail": "Function (animation)",
    "insertText": "AddDirtyFlags(ETimingTrackViewportDirtyFlags::VLayoutChanged)"
  },
  {
    "label": "OnUserScrolled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnUserScrolled(TSharedPtr<SScrollBar> ScrollBar, float ScrollOffset)"
  },
  {
    "label": "OnUserScrolledY()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnUserScrolledY(TSharedPtr<SScrollBar> ScrollBar, float ScrollOffset)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(DirtyFlags, InDirtyFlags)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(DirtyFlags, ETimingTrackViewportDirtyFlags::AllHorizontal)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(DirtyFlags, ETimingTrackViewportDirtyFlags::AllVertical)"
  }
]