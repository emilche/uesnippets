[
  {
    "label": "Block4x4Encoding_RGB8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Block4x4Encoding_RGB8"
  },
  {
    "label": "Block4x4Encoding_RGB8()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EtcBlock4x4Encoding_ETC1 . h \" namespace Etc { class Block4x4Encoding_RGB8 : public Block4x4Encoding_ETC1 { public :)",
    "insertText": "Block4x4Encoding_RGB8(void)"
  },
  {
    "label": "InitFromEncodingBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromEncodingBits(Block4x4 *a_pblockParent, unsigned char *a_paucEncodingBits, ColorFloatRGBA *a_pafrgbaSource, ErrorMetric a_errormetric)"
  },
  {
    "label": "PerformIteration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformIteration(float a_fEffort)"
  },
  {
    "label": "SetEncodingBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncodingBits(void)"
  },
  {
    "label": "GetColor3()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA)",
    "insertText": "GetColor3(void)"
  },
  {
    "label": "TryTAndH()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryTAndH(unsigned int a_uiRadius)"
  },
  {
    "label": "InitFromEncodingBits_Planar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromEncodingBits_Planar(void)"
  },
  {
    "label": "SetEncodingBits_T()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA m_frgbaColor3 ; void)",
    "insertText": "SetEncodingBits_T(void)"
  },
  {
    "label": "SetEncodingBits_H()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncodingBits_H(void)"
  },
  {
    "label": "SetEncodingBits_Planar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncodingBits_Planar(void)"
  },
  {
    "label": "CalculateBaseColorsForTAndH()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA m_frgbaOriginalColor1_TAndH ; ColorFloatRGBA m_frgbaOriginalColor2_TAndH ; void)",
    "insertText": "CalculateBaseColorsForTAndH(void)"
  },
  {
    "label": "TryT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryT(unsigned int a_uiRadius)"
  },
  {
    "label": "TryT_BestSelectorCombination()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryT_BestSelectorCombination(void)"
  },
  {
    "label": "TryH()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryH(unsigned int a_uiRadius)"
  },
  {
    "label": "TryH_BestSelectorCombination()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryH_BestSelectorCombination(void)"
  },
  {
    "label": "InitFromEncodingBits_T()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InitFromEncodingBits_T(void)"
  },
  {
    "label": "InitFromEncodingBits_H()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromEncodingBits_H(void)"
  },
  {
    "label": "CalculatePlanarCornerColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculatePlanarCornerColors(void)"
  },
  {
    "label": "ColorRegression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ColorRegression(ColorFloatRGBA *a_pafrgbaPixels, unsigned int a_uiPixels, ColorFloatRGBA *a_pfrgbaSlope, ColorFloatRGBA *a_pfrgbaOffset)"
  },
  {
    "label": "TwiddlePlanar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TwiddlePlanar(void)"
  },
  {
    "label": "TwiddlePlanarR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TwiddlePlanarR()"
  },
  {
    "label": "TwiddlePlanarG()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TwiddlePlanarG()"
  },
  {
    "label": "TwiddlePlanarB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TwiddlePlanarB()"
  },
  {
    "label": "DecodePixels_T()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodePixels_T(void)"
  },
  {
    "label": "DecodePixels_H()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodePixels_H(void)"
  },
  {
    "label": "DecodePixels_Planar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodePixels_Planar(void)"
  }
]