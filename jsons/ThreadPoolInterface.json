[
  {
    "label": "ThreadPoolInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ThreadPoolInterface"
  },
  {
    "label": "Schedule()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_CXX11_THREADPOOL_THREAD_POOL_INTERFACE_H # define EIGEN_CXX11_THREADPOOL_THREAD_POOL_INTERFACE_H namespace Eigen { class ThreadPoolInterface { public : void)",
    "insertText": "Schedule(std::function<void()> fn)"
  },
  {
    "label": "ScheduleWithHint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleWithHint(std::function<void()> fn, int , int)"
  },
  {
    "label": "Schedule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Schedule(fn)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Cancel()"
  },
  {
    "label": "NumThreads()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "NumThreads()"
  },
  {
    "label": "CurrentThreadId()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CurrentThreadId()"
  },
  {
    "label": "ThreadPoolInterface()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ThreadPoolInterface()"
  }
]