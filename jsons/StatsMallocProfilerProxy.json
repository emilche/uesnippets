[
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FGenericMemoryStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericMemoryStats"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "FStatsMallocProfilerProxy()",
    "kind": "Method",
    "detail": "Function (private : FMalloc* UsedMalloc ; bool bEnabled ; bool bWasEnabled ; FThreadSafeCounter MemorySequenceTag ; FThreadSafeCounter AllocPtrCalls ; FThreadSafeCounter ReallocPtrCalls ; FThreadSafeCounter FreePtrCalls ; public :)",
    "insertText": "FStatsMallocProfilerProxy(FMalloc* InMalloc)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FStatsMallocProfilerProxy*)",
    "insertText": "Get()"
  },
  {
    "label": "HasMemoryProfilerToken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMemoryProfilerToken()"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState(bool bNewState)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetState()"
  },
  {
    "label": "TrackAlloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackAlloc(void* Ptr, int64 Size, int32 SequenceTag)"
  },
  {
    "label": "TrackFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackFree(void* Ptr, int32 SequenceTag)"
  },
  {
    "label": "TrackRealloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackRealloc(void* OldPtr, void* NewPtr, int64 NewSize, int32 SequenceTag)"
  },
  {
    "label": "Malloc()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "Malloc(SIZE_T Size, uint32 Alignment)"
  },
  {
    "label": "Realloc()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "Realloc(void* OldPtr, SIZE_T NewSize, uint32 Alignment)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(void* Ptr)"
  },
  {
    "label": "IsInternallyThreadSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInternallyThreadSafe()"
  },
  {
    "label": "UpdateStats()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateStats()"
  },
  {
    "label": "GetAllocatorStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllocatorStats(FGenericMemoryStats& out_Stats)"
  },
  {
    "label": "GetAllocatorStats()",
    "kind": "Method",
    "detail": "Function (UsedMalloc ->)",
    "insertText": "GetAllocatorStats(out_Stats)"
  },
  {
    "label": "DumpAllocatorStats()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DumpAllocatorStats(class FOutputDevice& Ar)"
  },
  {
    "label": "DumpAllocatorStats()",
    "kind": "Method",
    "detail": "Function (UsedMalloc ->)",
    "insertText": "DumpAllocatorStats(Ar)"
  },
  {
    "label": "ValidateHeap()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ValidateHeap()"
  },
  {
    "label": "Exec()",
    "kind": "Method",
    "detail": "Function (} # if UE_ALLOW_EXEC_COMMANDS bool)",
    "insertText": "Exec(UWorld* InWorld, const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "GetAllocationSize()",
    "kind": "Method",
    "detail": "Function (} # endif bool)",
    "insertText": "GetAllocationSize(void *Original, SIZE_T &SizeOut)"
  },
  {
    "label": "GetDescriptiveName()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "GetDescriptiveName()"
  },
  {
    "label": "OnMallocInitialized()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnMallocInitialized()"
  },
  {
    "label": "OnPreFork()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnPreFork()"
  },
  {
    "label": "OnPostFork()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnPostFork()"
  }
]