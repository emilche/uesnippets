[
  {
    "label": "CircularBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CircularBuffer"
  },
  {
    "label": "CircularBuffer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_ECHO_DETECTOR_CIRCULAR_BUFFER_H_ # define MODULES_AUDIO_PROCESSING_ECHO_DETECTOR_CIRCULAR_BUFFER_H_ # include<stddef . h> # include<vector> # include \" absl / types / optional . h \" namespace webrtc { struct CircularBuffer { public :)",
    "insertText": "CircularBuffer(size_t size)"
  },
  {
    "label": "CircularBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CircularBuffer()"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Push(float value)"
  },
  {
    "label": "Pop()",
    "kind": "Method",
    "detail": "Function (absl::optional<float>)",
    "insertText": "Pop()"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Size()"
  }
]