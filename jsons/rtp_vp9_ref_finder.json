[
  {
    "label": "RtpVp9RefFinder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpVp9RefFinder"
  },
  {
    "label": "FrameDecision",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FrameDecision"
  },
  {
    "label": "GofInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GofInfo"
  },
  {
    "label": "UnwrappedTl0Frame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UnwrappedTl0Frame"
  },
  {
    "label": "RtpVp9RefFinder()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_RTP_VP9_REF_FINDER_H_ # define MODULES_VIDEO_CODING_RTP_VP9_REF_FINDER_H_ # include<deque> # include<map> # include<memory> # include<set> # include \" absl / container / inlined_vector . h \" # include \" modules / video_coding / frame_object . h \" # include \" modules / video_coding / rtp_frame_reference_finder . h \" # include \" rtc_base / numerics / sequence_number_util . h \" namespace webrtc { class RtpVp9RefFinder { public :)",
    "insertText": "RtpVp9RefFinder()"
  },
  {
    "label": "ManageFrame()",
    "kind": "Method",
    "detail": "Function (RtpFrameReferenceFinder::ReturnVector)",
    "insertText": "ManageFrame(std::unique_ptr<RtpFrameObject> frame)"
  },
  {
    "label": "ClearTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTo(uint16_t seq_num)"
  },
  {
    "label": "GofInfo()",
    "kind": "Method",
    "detail": "Function (private : int kFrameIdLength = 1<<1 5 ; int kMaxGofSaved = 5 0 ; int kMaxLayerInfo = 5 0 ; int kMaxNotYetReceivedFrames = 1 0 0 ; int kMaxStashedFrames = 1 0 0 ; int kMaxTemporalLayers = 5 ; enum FrameDecision { kStash,kHandOff,kDrop } ; struct GofInfo {)",
    "insertText": "GofInfo(GofInfoVP9* gof, uint16_t last_picture_id) : gof(gof), last_picture_id(last_picture_id)"
  },
  {
    "label": "ManageFrameFlexible()",
    "kind": "Method",
    "detail": "Function (} GofInfoVP9* gof ; uint16_t last_picture_id ; } ; struct UnwrappedTl0Frame { int64_t unwrapped_tl0 ; std::unique_ptr<RtpFrameObject> frame ; } ; FrameDecision)",
    "insertText": "ManageFrameFlexible(RtpFrameObject* frame, const RTPVideoHeaderVP9& vp9_header)"
  },
  {
    "label": "ManageFrameGof()",
    "kind": "Method",
    "detail": "Function (FrameDecision)",
    "insertText": "ManageFrameGof(RtpFrameObject* frame, const RTPVideoHeaderVP9& vp9_header, int64_t unwrapped_tl0)"
  },
  {
    "label": "RetryStashedFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetryStashedFrames(RtpFrameReferenceFinder::ReturnVector& res)"
  },
  {
    "label": "MissingRequiredFrameVp9()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MissingRequiredFrameVp9(uint16_t picture_id, const GofInfo& info)"
  },
  {
    "label": "FrameReceivedVp9()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameReceivedVp9(uint16_t picture_id, GofInfo* info)"
  },
  {
    "label": "UpSwitchInIntervalVp9()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpSwitchInIntervalVp9(uint16_t picture_id, uint8_t temporal_idx, uint16_t pid_ref)"
  },
  {
    "label": "FlattenFrameIdAndRefs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlattenFrameIdAndRefs(RtpFrameObject* frame, bool inter_layer_predicted)"
  }
]