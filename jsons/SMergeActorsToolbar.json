[
  {
    "label": "IMergeActorsTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMergeActorsTool"
  },
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBox"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SMergeActorsToolbar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMergeActorsToolbar"
  },
  {
    "label": "FDropDownItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDropDownItem"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SCompoundWidget . h \" class IMergeActorsTool ; class SBorder ; class SBox ; enum class ECheckBoxState : uint8 ; class SMergeActorsToolbar : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SMergeActorsToolbar)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TArray<IMergeActorsTool*>, ToolsToRegister) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SMergeActorsToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SMergeActorsToolbar() : CurrentlySelectedTool(0)"
  },
  {
    "label": "SMergeActorsToolbar()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "SMergeActorsToolbar()"
  },
  {
    "label": "AddTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTool(IMergeActorsTool* Tool)"
  },
  {
    "label": "RemoveTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTool(IMergeActorsTool* Tool)"
  },
  {
    "label": "FDropDownItem()",
    "kind": "Method",
    "detail": "Function (private : struct FDropDownItem {)",
    "insertText": "FDropDownItem(const FText& InName, const FName& InIconName, const FText& InDescription)"
  },
  {
    "label": "MakeWidgetFromEntry()",
    "kind": "Method",
    "detail": "Function (FText Name ; FName IconName ; FText Description ; } ; TSharedRef<SWidget>)",
    "insertText": "MakeWidgetFromEntry(TSharedPtr<FDropDownItem> InItem)"
  },
  {
    "label": "OnActorSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorSelectionChanged(const TArray<UObject*>& NewSelection, bool bForceRefresh)"
  },
  {
    "label": "OnToolSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolSelectionChanged(TSharedPtr<FDropDownItem> NewSelection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnMergeActorsClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMergeActorsClicked()"
  },
  {
    "label": "GetContentEnabledState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetContentEnabledState()"
  },
  {
    "label": "UpdateToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateToolbar()"
  },
  {
    "label": "UpdateInlineContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInlineContent()"
  }
]