[
  {
    "label": "FComplexPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComplexPropertyNode"
  },
  {
    "label": "FDetailCategoryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailCategoryImpl"
  },
  {
    "label": "FDetailTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailTreeNode"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "FPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNode"
  },
  {
    "label": "IDetailPropertyRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailPropertyRow"
  },
  {
    "label": "IDetailsViewPrivate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsViewPrivate"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "FDetailFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDetailFilter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CreateNodeWidgets()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IPropertyUtilities . h \" # include \" IDetailTreeNode . h \" # include \" PropertyCustomizationHelpers . h \" # include \" PropertyPath . h \" # include \" Misc / Attribute . h \" class FComplexPropertyNode ; class FDetailCategoryImpl ; class FDetailTreeNode ; class FDetailWidgetRow ; class FPropertyNode ; class IDetailPropertyRow ; class IDetailsViewPrivate ; class ITableRow ; class STableViewBase ; struct FDetailFilter ; typedef TArray<TSharedRef<FDetailTreeNode>> FDetailNodeList ; enum class ENodeVisibility : uint8 { HiddenDueToFiltering,ForcedHidden,Visible,} ; class FDetailTreeNode : public IDetailTreeNode { public : FNodeWidgets)",
    "insertText": "CreateNodeWidgets()"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChildren(TArray<TSharedRef<IDetailTreeNode>>& OutChildren, const bool& bInIgnoreVisibility = false)"
  },
  {
    "label": "GetRow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IDetailPropertyRow>)",
    "insertText": "GetRow()"
  },
  {
    "label": "GetInitiallyCollapsed()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "GetInitiallyCollapsed()"
  },
  {
    "label": "GenerateWidgetForTableView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "GenerateWidgetForTableView(const TSharedRef<STableViewBase>& OwnerTable, bool bAllowFavoriteSystem)"
  },
  {
    "label": "GenerateStandaloneWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateStandaloneWidget(FDetailWidgetRow& OutRow)"
  },
  {
    "label": "FilterNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterNode(const FDetailFilter& InFilter)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChildren(FDetailNodeList& OutChildren, const bool& bInIgnoreVisibility = false)"
  },
  {
    "label": "GetParentNode()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<FDetailTreeNode>)",
    "insertText": "GetParentNode()"
  },
  {
    "label": "GetParentBaseStructure()",
    "kind": "Method",
    "detail": "Function (ParentNode = InParentNode ; } const UStruct*)",
    "insertText": "GetParentBaseStructure()"
  },
  {
    "label": "GetPropertyNodeBaseStructure()",
    "kind": "Method",
    "detail": "Function (const UStruct*)",
    "insertText": "GetPropertyNodeBaseStructure(const FPropertyNode* PropertyNode)"
  },
  {
    "label": "OnItemExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemExpansionChanged(bool bIsExpanded, bool bShouldSaveState)"
  },
  {
    "label": "ShouldBeExpanded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldBeExpanded()"
  },
  {
    "label": "GetVisibility()",
    "kind": "Method",
    "detail": "Function (ENodeVisibility)",
    "insertText": "GetVisibility()"
  },
  {
    "label": "RefreshVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshVisibility()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "ShouldShowOnlyChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowOnlyChildren()"
  },
  {
    "label": "GetNodeName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetNodeName()"
  },
  {
    "label": "GetParentCategory()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FDetailCategoryImpl>)",
    "insertText": "GetParentCategory()"
  },
  {
    "label": "GetPropertyPath()",
    "kind": "Method",
    "detail": "Function (} FPropertyPath)",
    "insertText": "GetPropertyPath()"
  },
  {
    "label": "SetIsHighlighted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetIsHighlighted(bool bInIsHighlighted)"
  },
  {
    "label": "IsHighlighted()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsHighlighted()"
  },
  {
    "label": "GetExternalRootPropertyNode()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FComplexPropertyNode>)",
    "insertText": "GetExternalRootPropertyNode()"
  }
]