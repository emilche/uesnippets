[
  {
    "label": "FNetRPCCallContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetRPCCallContext"
  },
  {
    "label": "UNetRPCHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetRPCHandler"
  },
  {
    "label": "FNetRPCCallContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Iris / ReplicationSystem / NetBlob / NetRPC . h \" # include \" Iris / ReplicationSystem / NetBlob / NetBlobHandler . h \" # include \" Iris / ReplicationSystem / ReplicationSystemTypes . h \" # include \" NetRPCHandler . generated . h \" namespace UE::Net { class FNetRPCCallContext { public :)",
    "insertText": "FNetRPCCallContext(FNetSerializationContext& NetContext, const FForwardNetRPCCallMulticastDelegate& ForwardNetRPCCallDelegate)"
  },
  {
    "label": "GetNetSerializationContext()",
    "kind": "Method",
    "detail": "Function (FNetSerializationContext&)",
    "insertText": "GetNetSerializationContext()"
  },
  {
    "label": "GetForwardNetRPCCallDelegate()",
    "kind": "Method",
    "detail": "Function (const FForwardNetRPCCallMulticastDelegate&)",
    "insertText": "GetForwardNetRPCCallDelegate()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (private : FNetSerializationContext& NetContext ; const FForwardNetRPCCallMulticastDelegate& ForwardNetRPCCallDelegate ; } ; })",
    "insertText": "UCLASS(transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UNetRPCHandler()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UNetRPCHandler()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(UReplicationSystem& ReplicationSystem)"
  },
  {
    "label": "CreateRPC()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<UE::Net::Private::FNetRPC>)",
    "insertText": "CreateRPC(const UE::Net::FNetObjectReference& ObjectReference, const UFunction* Function, const void* Parameters)"
  },
  {
    "label": "CreateNetBlob()",
    "kind": "Method",
    "detail": "Function (private : TRefCountPtr<FNetBlob>)",
    "insertText": "CreateNetBlob(const FNetBlobCreationInfo&)"
  },
  {
    "label": "OnNetBlobReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNetBlobReceived(UE::Net::FNetSerializationContext& Context, const TRefCountPtr<FNetBlob>& NetBlob)"
  },
  {
    "label": "FNetRPCCallContext()",
    "kind": "Method",
    "detail": "Function (UReplicationSystem* ReplicationSystem = nullptr ; } ; namespace UE::Net {)",
    "insertText": "FNetRPCCallContext(FNetSerializationContext& InNetContext, const FForwardNetRPCCallMulticastDelegate& InForwardNetRPCCallDelegate) : NetContext(InNetContext) , ForwardNetRPCCallDelegate(InForwardNetRPCCallDelegate)"
  }
]