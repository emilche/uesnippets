[
  {
    "label": "SampleCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleCounter"
  },
  {
    "label": "SampleCounterWithVariance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleCounterWithVariance"
  },
  {
    "label": "SampleCounter()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_NUMERICS_SAMPLE_COUNTER_H_ # define RTC_BASE_NUMERICS_SAMPLE_COUNTER_H_ # include<stdint . h> # include \" absl / types / optional . h \" namespace rtc { class SampleCounter { public :)",
    "insertText": "SampleCounter()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(int sample)"
  },
  {
    "label": "Avg()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "Avg(int64_t min_required_samples)"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "Max()"
  },
  {
    "label": "Sum()",
    "kind": "Method",
    "detail": "Function (absl::optional<int64_t>)",
    "insertText": "Sum(int64_t min_required_samples)"
  },
  {
    "label": "NumSamples()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "NumSamples()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const SampleCounter& other)"
  },
  {
    "label": "SampleCounterWithVariance()",
    "kind": "Method",
    "detail": "Function (protected : int64_t sum_ = 0 ; int64_t num_samples_ = 0 ; absl::optional<int> max_ ; } ; class SampleCounterWithVariance : public SampleCounter { public :)",
    "insertText": "SampleCounterWithVariance()"
  },
  {
    "label": "Variance()",
    "kind": "Method",
    "detail": "Function (absl::optional<int64_t>)",
    "insertText": "Variance(int64_t min_required_samples)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const SampleCounterWithVariance& other)"
  }
]