[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "APhysicsVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APhysicsVolume"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FScopedMovementUpdate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedMovementUpdate"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FLevelCollection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelCollection"
  },
  {
    "label": "FOverlapInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapInfo"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EDetailMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDetailMode"
  },
  {
    "label": "ERelativeTransformSpace",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERelativeTransformSpace"
  },
  {
    "label": "EMoveComponentFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMoveComponentFlags"
  },
  {
    "label": "APhysicsVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APhysicsVolume"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "APhysicsVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APhysicsVolume"
  },
  {
    "label": "EDetailMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDetailMode"
  },
  {
    "label": "UBillboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBillboardComponent"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "Materials",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Materials"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FScopedMovementUpdate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedMovementUpdate"
  },
  {
    "label": "FScopedPreventAttachedComponentMove",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedPreventAttachedComponentMove"
  },
  {
    "label": "FDirectAttachChildrenAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirectAttachChildrenAccessor"
  },
  {
    "label": "FDirectAttachChildrenAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirectAttachChildrenAccessor"
  },
  {
    "label": "UChildActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChildActorComponent"
  },
  {
    "label": "FBlueprintThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintThumbnailScene"
  },
  {
    "label": "FClassThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassThumbnailScene"
  },
  {
    "label": "FComponentEditorUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentEditorUtils"
  },
  {
    "label": "FBlueprintCompileReinstancer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintCompileReinstancer"
  },
  {
    "label": "FResetSceneComponentAfterCopy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResetSceneComponentAfterCopy"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FSceneComponentInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneComponentInstanceData"
  },
  {
    "label": "FScopedPreventAttachedComponentMove",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedPreventAttachedComponentMove"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (safety)",
    "insertText": "ENUM_CLASS_FLAGS(EMoveComponentFlags)"
  },
  {
    "label": "GetDefaultSceneRootVariableName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetDefaultSceneRootVariableName()"
  },
  {
    "label": "SetShouldBeAttached()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldBeAttached(bool bNewShouldBeAttached)"
  },
  {
    "label": "SetShouldSnapLocationWhenAttached()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldSnapLocationWhenAttached(bool bShouldSnapLocation)"
  },
  {
    "label": "SetShouldSnapRotationWhenAttached()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldSnapRotationWhenAttached(bool bShouldSnapRotation)"
  },
  {
    "label": "SetShouldSnapScaleWhenAttached()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldSnapScaleWhenAttached(bool bShouldSnapScale)"
  },
  {
    "label": "ClearSkipUpdateOverlaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSkipUpdateOverlaps()"
  },
  {
    "label": "SetShouldUpdatePhysicsVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldUpdatePhysicsVolume(bool bInShouldUpdatePhysicsVolume)"
  },
  {
    "label": "CreateSpriteComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSpriteComponent(class UTexture2D* SpriteTexture = nullptr)"
  },
  {
    "label": "CreateSpriteComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSpriteComponent(class UTexture2D* SpriteTexture, bool bRegister)"
  },
  {
    "label": "BeginScopedMovementUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginScopedMovementUpdate(FScopedMovementUpdate& ScopedUpdate)"
  },
  {
    "label": "EndScopedMovementUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndScopedMovementUpdate(FScopedMovementUpdate& ScopedUpdate)"
  },
  {
    "label": "SetRelativeRotationCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeRotationCache(const FRotationConversionCache& InCache)"
  },
  {
    "label": "OnRep_Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_Transform()"
  },
  {
    "label": "OnRep_AttachParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_AttachParent()"
  },
  {
    "label": "OnRep_AttachChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_AttachChildren()"
  },
  {
    "label": "OnRep_AttachSocketName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_AttachSocketName()"
  },
  {
    "label": "OnRep_Visibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_Visibility(bool OldValue)"
  },
  {
    "label": "GetRelativeRotationFromWorld()",
    "kind": "Method",
    "detail": "Function (FQuat)",
    "insertText": "GetRelativeRotationFromWorld(const FQuat & WorldRotation)"
  },
  {
    "label": "SetRelativeRotationExact()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeRotationExact(FRotator NewRotation, bool bSweep = false, FHitResult* OutSweepHitResult = nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetRelativeLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetRelativeLocation(FVector NewLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetRelativeLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeLocation(FVector NewLocation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetRelativeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetRelativeRotation(FRotator NewRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetRelativeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeRotation(FRotator NewRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetRelativeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeRotation(const FQuat& NewRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetRelativeTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetRelativeTransform(const FTransform& NewTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetRelativeTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeTransform(const FTransform& NewTransform, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "ResetRelativeTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetRelativeTransform()"
  },
  {
    "label": "SetRelativeScale3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeScale3D(FVector NewScale3D)"
  },
  {
    "label": "K2_AddRelativeLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddRelativeLocation(FVector DeltaLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddRelativeLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRelativeLocation(FVector DeltaLocation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddRelativeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddRelativeRotation(FRotator DeltaRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddRelativeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRelativeRotation(FRotator DeltaRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "AddRelativeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRelativeRotation(const FQuat& DeltaRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddLocalOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddLocalOffset(FVector DeltaLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddLocalOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLocalOffset(FVector DeltaLocation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddLocalRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddLocalRotation(FRotator DeltaRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddLocalRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLocalRotation(FRotator DeltaRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "AddLocalRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLocalRotation(const FQuat& DeltaRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddLocalTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddLocalTransform(const FTransform& DeltaTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddLocalTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLocalTransform(const FTransform& DeltaTransform, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetWorldLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetWorldLocation(FVector NewLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetWorldLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldLocation(FVector NewLocation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetWorldRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetWorldRotation(FRotator NewRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetWorldRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldRotation(FRotator NewRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetWorldRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldRotation(const FQuat& NewRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetWorldScale3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldScale3D(FVector NewScale)"
  },
  {
    "label": "K2_SetWorldTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetWorldTransform(const FTransform& NewTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetWorldTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldTransform(const FTransform& NewTransform, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddWorldOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddWorldOffset(FVector DeltaLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddWorldOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWorldOffset(FVector DeltaLocation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddWorldRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddWorldRotation(FRotator DeltaRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddWorldRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWorldRotation(FRotator DeltaRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "AddWorldRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWorldRotation(const FQuat& DeltaRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddWorldTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddWorldTransform(const FTransform& DeltaTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddWorldTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWorldTransform(const FTransform& DeltaTransform, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddWorldTransformKeepScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddWorldTransformKeepScale(const FTransform& DeltaTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddWorldTransformKeepScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWorldTransformKeepScale(const FTransform& DeltaTransform, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetupAttachment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupAttachment(USceneComponent* InParent, FName InSocketName = NAME_None)"
  },
  {
    "label": "ConvertAttachLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertAttachLocation(EAttachLocation::Type InAttachLocation, EAttachmentRule& InOutLocationRule, EAttachmentRule& InOutRotationRule, EAttachmentRule& InOutScaleRule)"
  },
  {
    "label": "K2_AttachTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "K2_AttachTo(USceneComponent* InParent, FName InSocketName = NAME_None, EAttachLocation::Type AttachType = EAttachLocation::KeepRelativeOffset, bool bWeldSimulatedBodies = true)"
  },
  {
    "label": "AttachToComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AttachToComponent(USceneComponent* InParent, const FAttachmentTransformRules& AttachmentRules, FName InSocketName = NAME_None )"
  },
  {
    "label": "K2_AttachToComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "K2_AttachToComponent(USceneComponent* Parent, FName SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies)"
  },
  {
    "label": "DetachFromParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachFromParent(bool bMaintainWorldPosition = false, bool bCallModify = true)"
  },
  {
    "label": "K2_DetachFromComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_DetachFromComponent(EDetachmentRule LocationRule = EDetachmentRule::KeepRelative, EDetachmentRule RotationRule = EDetachmentRule::KeepRelative, EDetachmentRule ScaleRule = EDetachmentRule::KeepRelative, bool bCallModify = true)"
  },
  {
    "label": "DetachFromComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachFromComponent(const FDetachmentTransformRules& DetachmentRules)"
  },
  {
    "label": "GetMaterialPropertyPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMaterialPropertyPath(int32 ElementIndex, UObject*& OutOwner, FString& OutPropertyPath, FProperty*& OutProperty)"
  },
  {
    "label": "OnVisibilityChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnVisibilityChanged()"
  },
  {
    "label": "OnHiddenInGameChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHiddenInGameChanged()"
  },
  {
    "label": "SetVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibility(bool bNewVisibility, EVisibilityPropagation PropagateToChildren)"
  },
  {
    "label": "SetHiddenInGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHiddenInGame(bool bNewHiddenInGame, EVisibilityPropagation PropagateToChildren)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "InternalSetWorldLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InternalSetWorldLocationAndRotation(FVector NewLocation, const FQuat& NewQuat, bool bNoPhysics = false, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "OnUpdateTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUpdateTransform(EUpdateTransformFlags UpdateTransformFlags, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "UpdateOverlapsImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateOverlapsImpl(const TOverlapArrayView* PendingOverlaps = nullptr, bool bDoNotifies = true, const TOverlapArrayView* OverlapsAtEndLocation = nullptr)"
  },
  {
    "label": "PropagateTransformUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateTransformUpdate(bool bTransformChanged, EUpdateTransformFlags UpdateTransformFlags = EUpdateTransformFlags::None, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "UpdateComponentToWorldWithParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateComponentToWorldWithParent(USceneComponent* Parent, FName SocketName, EUpdateTransformFlags UpdateTransformFlags, const FQuat& RelativeRotationQuat, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "UpdateOverlaps()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateOverlaps(const TOverlapArrayView* PendingOverlaps = nullptr, bool bDoNotifies = true, const TOverlapArrayView* OverlapsAtEndLocation = nullptr)"
  },
  {
    "label": "MoveComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveComponent( const FVector& Delta, const FQuat& NewRotation,    bool bSweep, FHitResult* Hit=NULL, EMoveComponentFlags MoveFlags = MOVECOMP_NoFlags, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "MoveComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveComponent( const FVector& Delta, const FRotator& NewRotation, bool bSweep, FHitResult* Hit=NULL, EMoveComponentFlags MoveFlags = MOVECOMP_NoFlags, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "MoveComponentImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveComponentImpl(const FVector& Delta, const FQuat& NewRotation, bool bSweep, FHitResult* Hit = NULL, EMoveComponentFlags MoveFlags = MOVECOMP_NoFlags, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "ConditionalUpdateComponentToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalUpdateComponentToWorld()"
  },
  {
    "label": "UpdateChildTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateChildTransforms(EUpdateTransformFlags UpdateTransformFlags = EUpdateTransformFlags::None, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "GetLocalBounds()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetLocalBounds()"
  },
  {
    "label": "UpdateBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBounds()"
  },
  {
    "label": "UpdatePhysicsVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePhysicsVolume( bool bTriggerNotifiers )"
  },
  {
    "label": "SetPhysicsVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPhysicsVolume( APhysicsVolume * NewVolume,  bool bTriggerNotifiers )"
  },
  {
    "label": "PostEditComponentMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditComponentMove(bool bFinished)"
  },
  {
    "label": "CalcNewComponentToWorld_GeneralCase()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CalcNewComponentToWorld_GeneralCase(NewRelativeTransform, Parent, SocketName)"
  },
  {
    "label": "K2_SetRelativeLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetRelativeLocationAndRotation(FVector NewLocation, FRotator NewRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetRelativeLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeLocationAndRotation(FVector NewLocation, FRotator NewRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetRelativeLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeLocationAndRotation(FVector NewLocation, const FQuat& NewRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetAbsolute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAbsolute(bool bNewAbsoluteLocation = false, bool bNewAbsoluteRotation = false, bool bNewAbsoluteScale = false)"
  },
  {
    "label": "K2_SetWorldLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetWorldLocationAndRotation(FVector NewLocation, FRotator NewRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetWorldLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldLocationAndRotation(FVector NewLocation, FRotator NewRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetWorldLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldLocationAndRotation(FVector NewLocation, const FQuat& NewRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetWorldLocationAndRotationNoPhysics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldLocationAndRotationNoPhysics(const FVector& NewLocation, const FRotator& NewRotation)"
  },
  {
    "label": "SetMobility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMobility(EComponentMobility::Type NewMobility)"
  },
  {
    "label": "UpdateNavigationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNavigationData()"
  },
  {
    "label": "PostUpdateNavigationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUpdateNavigationData()"
  },
  {
    "label": "SetAttachParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAttachParent(USceneComponent* NewAttachParent)"
  },
  {
    "label": "SetAttachSocketName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAttachSocketName(FName NewSocketName)"
  },
  {
    "label": "ModifiedAttachChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifiedAttachChildren()"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(USceneComponent, RelativeLocation)"
  },
  {
    "label": "SetRelativeLocation_Direct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeLocation_Direct(const FVector NewRelativeLocation)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(USceneComponent, RelativeRotation)"
  },
  {
    "label": "SetRelativeRotation_Direct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeRotation_Direct(const FRotator NewRelativeRotation)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(USceneComponent, RelativeScale3D)"
  },
  {
    "label": "SetRelativeScale3D_Direct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRelativeScale3D_Direct(const FVector NewRelativeScale3D)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(USceneComponent, bAbsoluteLocation)"
  },
  {
    "label": "SetUsingAbsoluteLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUsingAbsoluteLocation(const bool bInAbsoluteLocation)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(USceneComponent, bAbsoluteRotation)"
  },
  {
    "label": "SetUsingAbsoluteRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUsingAbsoluteRotation(const bool bInAbsoluteRotation)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(USceneComponent, bAbsoluteScale)"
  },
  {
    "label": "SetUsingAbsoluteScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUsingAbsoluteScale(const bool bInAbsoluteRotation)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(USceneComponent, bVisible)"
  },
  {
    "label": "SetVisibleFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibleFlag(const bool bInVisible)"
  },
  {
    "label": "MoveComponentImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveComponentImpl(Delta, NewRotation, bSweep, Hit, MoveFlags, Teleport)"
  },
  {
    "label": "FSceneComponentInstanceData()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FSceneComponentInstanceData(const USceneComponent* SourceComponent)"
  },
  {
    "label": "FScopedPreventAttachedComponentMove()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FScopedPreventAttachedComponentMove(USceneComponent* Component)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "new(size_t)"
  },
  {
    "label": "delete()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "delete(void *)"
  }
]