[
  {
    "label": "zlib_filefunc_def_s",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "zlib_filefunc_def_s"
  },
  {
    "label": "zlib_filefunc64_def_s",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "zlib_filefunc64_def_s"
  },
  {
    "label": "zlib_filefunc64_32_def_s",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "zlib_filefunc64_32_def_s"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# ifndef _ZLIBIOAPI64_H # define _ZLIBIOAPI64_H #)",
    "insertText": "if(!defined(_WIN32)) && (!defined(WIN32)) && (!defined(__APPLE__)) #ifndef __USE_FILE_OFFSET64 #define __USE_FILE_OFFSET64 #endif #ifndef __USE_LARGEFILE64 #define __USE_LARGEFILE64 #endif #ifndef _LARGEFILE64_SOURCE #define _LARGEFILE64_SOURCE #endif #ifndef _FILE_OFFSET_BIT #define _FILE_OFFSET_BIT 64 #endif #endif #include <stdio.h> #include <stdlib.h> #include \"zlib.h\" #if defined(USE_FILE32API) #define fopen64 fopen #define ftello64 ftell #define fseeko64 fseek #else #if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__HAIKU__) || defined(MINIZIP_FOPEN_NO_64) #define fopen64 fopen #define ftello64 ftello #define fseeko64 fseeko #endif #ifdef _MSC_VER #define fopen64 fopen #if (_MSC_VER >= 1400) && (!(defined(NO_MSCVER_FILE64_FUNC)))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# else # ifdef HAS_STDINT_H # include \" stdint . h \" typedef uint64_t ZPOS64_T ; # else # if)",
    "insertText": "defined(_MSC_VER) || defined(__BORLANDC__)"
  },
  {
    "label": "MAXU32()",
    "kind": "Method",
    "detail": "Function (# else typedef unsigned long long int ZPOS64_T ; # endif # endif # endif # ifndef MAXU32 # define)",
    "insertText": "MAXU32(0xffffffff)"
  },
  {
    "label": "ZLIB_FILEFUNC_SEEK_CUR()",
    "kind": "Method",
    "detail": "Function (# endif # define)",
    "insertText": "ZLIB_FILEFUNC_SEEK_CUR(1) #define ZLIB_FILEFUNC_SEEK_END (2) #define ZLIB_FILEFUNC_SEEK_SET (0) #define ZLIB_FILEFUNC_MODE_READ (1) #define ZLIB_FILEFUNC_MODE_WRITE (2) #define ZLIB_FILEFUNC_MODE_READWRITEFILTER (3) #define ZLIB_FILEFUNC_MODE_EXISTING (4) #define ZLIB_FILEFUNC_MODE_CREATE (8) #ifndef ZCALLBACK #if (defined(WIN32) || defined(_WIN32) || defined (WINDOWS) || defined (_WINDOWS)) && defined(CALLBACK) && defined (USEWINDOWS_CALLBACK) #define ZCALLBACK CALLBACK #else #define ZCALLBACK #endif #endif typedef voidpf (ZCALLBACK *open_file_func) (voidpf opaque, const char* filename, int mode)"
  },
  {
    "label": "uLong()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "uLong(ZCALLBACK *read_file_func) (voidpf opaque, voidpf stream, void* buf, uLong size)"
  },
  {
    "label": "uLong()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "uLong(ZCALLBACK *write_file_func) (voidpf opaque, voidpf stream, const void* buf, uLong size)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(ZCALLBACK *close_file_func) (voidpf opaque, voidpf stream)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(ZCALLBACK *testerror_file_func) (voidpf opaque, voidpf stream)"
  },
  {
    "label": "long()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "long(ZCALLBACK *tell_file_func) (voidpf opaque, voidpf stream)"
  },
  {
    "label": "long()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "long(ZCALLBACK *seek_file_func) (voidpf opaque, voidpf stream, uLong offset, int origin)"
  },
  {
    "label": "ZPOS64_T()",
    "kind": "Method",
    "detail": "Function (typedef struct zlib_filefunc_def_s { open_file_func zopen_file ; read_file_func zread_file ; write_file_func zwrite_file ; tell_file_func ztell_file ; seek_file_func zseek_file ; close_file_func zclose_file ; testerror_file_func zerror_file ; voidpf opaque ; } zlib_filefunc_def ; typedef)",
    "insertText": "ZPOS64_T(ZCALLBACK *tell64_file_func) (voidpf opaque, voidpf stream)"
  },
  {
    "label": "long()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "long(ZCALLBACK *seek64_file_func) (voidpf opaque, voidpf stream, ZPOS64_T offset, int origin)"
  },
  {
    "label": "voidpf()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "voidpf(ZCALLBACK *open64_file_func) (voidpf opaque, const void* filename, int mode)"
  },
  {
    "label": "fill_fopen64_filefunc()",
    "kind": "Method",
    "detail": "Function (typedef struct zlib_filefunc64_def_s { open64_file_func zopen64_file ; read_file_func zread_file ; write_file_func zwrite_file ; tell64_file_func ztell64_file ; seek64_file_func zseek64_file ; close_file_func zclose_file ; testerror_file_func zerror_file ; voidpf opaque ; } zlib_filefunc64_def ; void)",
    "insertText": "fill_fopen64_filefunc(zlib_filefunc64_def* pzlib_filefunc_def)"
  },
  {
    "label": "fill_fopen_filefunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fill_fopen_filefunc(zlib_filefunc_def* pzlib_filefunc_def)"
  },
  {
    "label": "ZREAD64()",
    "kind": "Method",
    "detail": "Function (typedef struct zlib_filefunc64_32_def_s { zlib_filefunc64_def zfile_func64 ; open_file_func zopen32_file ; tell_file_func ztell32_file ; seek_file_func zseek32_file ; } zlib_filefunc64_32_def ; # define)",
    "insertText": "ZREAD64(filefunc,filestream,buf,size) ((*((filefunc).zfile_func64.zread_file)) ((filefunc).zfile_func64.opaque,filestream,buf,size)) #define ZWRITE64(filefunc,filestream,buf,size) ((*((filefunc).zfile_func64.zwrite_file)) ((filefunc).zfile_func64.opaque,filestream,buf,size)) #define ZCLOSE64(filefunc,filestream) ((*((filefunc).zfile_func64.zclose_file)) ((filefunc).zfile_func64.opaque,filestream)) #define ZERROR64(filefunc,filestream) ((*((filefunc).zfile_func64.zerror_file)) ((filefunc).zfile_func64.opaque,filestream)) voidpf call_zopen64(const zlib_filefunc64_32_def* pfilefunc,const void*filename,int mode)"
  },
  {
    "label": "call_zseek64()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "call_zseek64(const zlib_filefunc64_32_def* pfilefunc,voidpf filestream, ZPOS64_T offset, int origin)"
  },
  {
    "label": "call_ztell64()",
    "kind": "Method",
    "detail": "Function (ZPOS64_T)",
    "insertText": "call_ztell64(const zlib_filefunc64_32_def* pfilefunc,voidpf filestream)"
  },
  {
    "label": "fill_zlib_filefunc64_32_def_from_filefunc32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fill_zlib_filefunc64_32_def_from_filefunc32(zlib_filefunc64_32_def* p_filefunc64_32,const zlib_filefunc_def* p_filefunc32)"
  }
]