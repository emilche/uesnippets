[
  {
    "label": "FElementSnapshot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FElementSnapshot"
  },
  {
    "label": "IDeltaProducer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDeltaProducer"
  },
  {
    "label": "IDeltaConsumer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDeltaConsumer"
  },
  {
    "label": "FSetupSceneArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetupSceneArg"
  },
  {
    "label": "FOpenDeltaArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenDeltaArg"
  },
  {
    "label": "FSetElementArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetElementArg"
  },
  {
    "label": "FRemoveElementsArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRemoveElementsArg"
  },
  {
    "label": "FCloseDeltaArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCloseDeltaArg"
  },
  {
    "label": "ISceneReceiver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneReceiver"
  },
  {
    "label": "FSceneSnapshot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneSnapshot"
  },
  {
    "label": "IDeltaProducer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DirectLinkCommon . h \" namespace DirectLink { class FElementSnapshot ; class IDeltaProducer { public : ~)",
    "insertText": "IDeltaProducer()"
  },
  {
    "label": "OnOpenHaveList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOpenHaveList(const FSceneIdentifier& HaveSceneId, bool bKeepPreviousContent, int32 SyncCycle)"
  },
  {
    "label": "OnHaveElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHaveElement(FSceneGraphId NodeId, FElementHash HaveHash)"
  },
  {
    "label": "OnCloseHaveList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCloseHaveList()"
  },
  {
    "label": "IDeltaConsumer()",
    "kind": "Method",
    "detail": "Function (} ; class IDeltaConsumer { public : ~)",
    "insertText": "IDeltaConsumer()"
  },
  {
    "label": "SetDeltaProducer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDeltaProducer(IDeltaProducer* Producer)"
  },
  {
    "label": "SetupScene()",
    "kind": "Method",
    "detail": "Function (struct FSetupSceneArg { FSceneIdentifier SceneId ; bool bExpectHaveList ; int32 SyncCycle ; } ; void)",
    "insertText": "SetupScene(FSetupSceneArg& SetupSceneArg)"
  },
  {
    "label": "OpenDelta()",
    "kind": "Method",
    "detail": "Function (struct FOpenDeltaArg { bool bBasedOnNewScene ; uint32 ElementCountHint = 0 ; } ; void)",
    "insertText": "OpenDelta(FOpenDeltaArg& OpenDeltaArg)"
  },
  {
    "label": "OnSetElement()",
    "kind": "Method",
    "detail": "Function (struct FSetElementArg { TSharedPtr<FElementSnapshot> Snapshot ; int32 ElementIndexHint = - 1 ; } ; void)",
    "insertText": "OnSetElement(FSetElementArg& SetElementArg)"
  },
  {
    "label": "RemoveElements()",
    "kind": "Method",
    "detail": "Function (struct FRemoveElementsArg { TArray<FSceneGraphId> Elements ; } ; void)",
    "insertText": "RemoveElements(FRemoveElementsArg& RemoveElementsArg)"
  },
  {
    "label": "OnCloseDelta()",
    "kind": "Method",
    "detail": "Function (struct FCloseDeltaArg { bool bCancelled = false ; } ; void)",
    "insertText": "OnCloseDelta(FCloseDeltaArg& CloseDeltaArg)"
  },
  {
    "label": "ISceneReceiver()",
    "kind": "Method",
    "detail": "Function (} ; class ISceneReceiver { public : ~)",
    "insertText": "ISceneReceiver()"
  },
  {
    "label": "FinalSnapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalSnapshot(const class FSceneSnapshot& SceneSnapshot)"
  }
]