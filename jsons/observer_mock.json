[
  {
    "label": "ObserverMock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ObserverMock"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_DISPATCHER_TESTING_OBSERVER_MOCK_H_ # define BASE_ALLOCATOR_DISPATCHER_TESTING_OBSERVER_MOCK_H_ # include \" base / allocator / dispatcher / subsystem . h \" # include \" testing / gmock / include / gmock / gmock . h \" # include<cstddef> namespace base::allocator::dispatcher::testing { template<T = void> struct ObserverMock {)",
    "insertText": "MOCK_METHOD(void, OnAllocation, (void* address, size_t size, AllocationSubsystem sub_system, const char* type_name), ())"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnFree, (void* address), ())"
  }
]