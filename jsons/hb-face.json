[
  {
    "label": "hb_face_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hb_face_t"
  },
  {
    "label": "hb_face_count()",
    "kind": "Method",
    "detail": "Function (# ifndef HB_H_IN # error \" Include<hb . h> instead . \" # endif # ifndef HB_FACE_H # define HB_FACE_H # include \" hb - common . h \" # include \" hb - blob . h \" # include \" hb - set . h \" HB_BEGIN_DECLS HB_EXTERN unsigned int)",
    "insertText": "hb_face_count(hb_blob_t *blob)"
  },
  {
    "label": "hb_face_create()",
    "kind": "Method",
    "detail": "Function (typedef struct hb_face_t hb_face_t ; HB_EXTERN hb_face_t*)",
    "insertText": "hb_face_create(hb_blob_t *blob, unsigned int index)"
  },
  {
    "label": "hb_blob_t()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "hb_blob_t(*hb_reference_table_func_t) (hb_face_t *face, hb_tag_t tag, void *user_data)"
  },
  {
    "label": "hb_face_create_for_tables()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN hb_face_t*)",
    "insertText": "hb_face_create_for_tables(hb_reference_table_func_t reference_table_func, void *user_data, hb_destroy_func_t destroy)"
  },
  {
    "label": "hb_face_get_empty()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN hb_face_t*)",
    "insertText": "hb_face_get_empty(void)"
  },
  {
    "label": "hb_face_reference()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN hb_face_t*)",
    "insertText": "hb_face_reference(hb_face_t *face)"
  },
  {
    "label": "hb_face_destroy()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN void)",
    "insertText": "hb_face_destroy(hb_face_t *face)"
  },
  {
    "label": "hb_face_set_user_data()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN hb_bool_t)",
    "insertText": "hb_face_set_user_data(hb_face_t *face, hb_user_data_key_t *key, void * data, hb_destroy_func_t destroy, hb_bool_t replace)"
  },
  {
    "label": "hb_face_get_user_data()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN void*)",
    "insertText": "hb_face_get_user_data(const hb_face_t *face, hb_user_data_key_t *key)"
  },
  {
    "label": "hb_face_make_immutable()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN void)",
    "insertText": "hb_face_make_immutable(hb_face_t *face)"
  },
  {
    "label": "hb_face_is_immutable()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN hb_bool_t)",
    "insertText": "hb_face_is_immutable(const hb_face_t *face)"
  },
  {
    "label": "hb_face_reference_table()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN hb_blob_t*)",
    "insertText": "hb_face_reference_table(const hb_face_t *face, hb_tag_t tag)"
  },
  {
    "label": "hb_face_reference_blob()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN hb_blob_t*)",
    "insertText": "hb_face_reference_blob(hb_face_t *face)"
  },
  {
    "label": "hb_face_set_index()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN void)",
    "insertText": "hb_face_set_index(hb_face_t *face, unsigned int index)"
  },
  {
    "label": "hb_face_get_index()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN unsigned int)",
    "insertText": "hb_face_get_index(const hb_face_t *face)"
  },
  {
    "label": "hb_face_set_upem()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN void)",
    "insertText": "hb_face_set_upem(hb_face_t *face, unsigned int upem)"
  },
  {
    "label": "hb_face_get_upem()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN unsigned int)",
    "insertText": "hb_face_get_upem(const hb_face_t *face)"
  },
  {
    "label": "hb_face_set_glyph_count()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN void)",
    "insertText": "hb_face_set_glyph_count(hb_face_t *face, unsigned int glyph_count)"
  },
  {
    "label": "hb_face_get_glyph_count()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN unsigned int)",
    "insertText": "hb_face_get_glyph_count(const hb_face_t *face)"
  },
  {
    "label": "hb_face_get_table_tags()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN unsigned int)",
    "insertText": "hb_face_get_table_tags(const hb_face_t *face, unsigned int start_offset, unsigned int *table_count, hb_tag_t *table_tags)"
  },
  {
    "label": "hb_face_collect_unicodes()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN void)",
    "insertText": "hb_face_collect_unicodes(hb_face_t *face, hb_set_t *out)"
  },
  {
    "label": "hb_face_collect_variation_selectors()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN void)",
    "insertText": "hb_face_collect_variation_selectors(hb_face_t *face, hb_set_t *out)"
  },
  {
    "label": "hb_face_collect_variation_unicodes()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN void)",
    "insertText": "hb_face_collect_variation_unicodes(hb_face_t *face, hb_codepoint_t variation_selector, hb_set_t *out)"
  },
  {
    "label": "hb_face_builder_create()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN hb_face_t*)",
    "insertText": "hb_face_builder_create(void)"
  },
  {
    "label": "hb_face_builder_add_table()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN hb_bool_t)",
    "insertText": "hb_face_builder_add_table(hb_face_t *face, hb_tag_t tag, hb_blob_t *blob)"
  }
]