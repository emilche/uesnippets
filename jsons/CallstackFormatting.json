[
  {
    "label": "FStackFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStackFrame"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" CoreTypes . h \" # include \" Internationalization / Text . h \" # include \" Misc / EnumClassFlags . h \" namespace TraceServices { struct FStackFrame ; } namespace UE::Insights { enum class EStackFrameFormatFlags : uint8 { Module = 1<<0,Symbol = 1<<1,File = 1<<2,Line = 1<<3,Multiline = 1<<4,ModuleAndSymbol = Module + Symbol,ModuleSymbolFileAndLine = Module + Symbol + File + Line,FileAndLine = File + Line,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EStackFrameFormatFlags)"
  },
  {
    "label": "GetCallstackNotAvailableString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCallstackNotAvailableString()"
  },
  {
    "label": "GetNoCallstackString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNoCallstackString()"
  },
  {
    "label": "GetEmptyCallstackString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetEmptyCallstackString()"
  },
  {
    "label": "FormatStackFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FormatStackFrame(const TraceServices::FStackFrame& Frame, FStringBuilderBase& OutString, EStackFrameFormatFlags FormatFlags)"
  }
]