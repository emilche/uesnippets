[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "SExpanderArrow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SExpanderArrow"
  },
  {
    "label": "SLATE_DECLARE_WIDGET_API()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Input / Reply . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Layout / Margin . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Styling / CoreStyle . h \" class ITableRow ; class SButton ; class SExpanderArrow : public SCompoundWidget {)",
    "insertText": "SLATE_DECLARE_WIDGET_API(SExpanderArrow, SCompoundWidget, SLATE_API) public: SLATE_BEGIN_ARGS( SExpanderArrow ) : _StyleSet(&FCoreStyle::Get()) , _IndentAmount(10) , _BaseIndentLevel(0) , _ShouldDrawWires(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(const ISlateStyle*, StyleSet) SLATE_ATTRIBUTE(float, IndentAmount) SLATE_ATTRIBUTE(int32, BaseIndentLevel) SLATE_ATTRIBUTE(bool, ShouldDrawWires) SLATE_END_ARGS() SLATE_API SExpanderArrow()"
  },
  {
    "label": "SExpanderArrow()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SExpanderArrow()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedPtr<class ITableRow>& TableRow)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (protected : int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "OnArrowClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnArrowClicked()"
  },
  {
    "label": "GetExpanderVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetExpanderVisibility()"
  },
  {
    "label": "GetExpanderPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetExpanderPadding()"
  },
  {
    "label": "GetExpanderImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetExpanderImage()"
  }
]