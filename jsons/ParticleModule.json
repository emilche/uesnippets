[
  {
    "label": "UDistribution",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDistribution"
  },
  {
    "label": "UDistributionFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDistributionFloat"
  },
  {
    "label": "UDistributionVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDistributionVector"
  },
  {
    "label": "UInterpCurveEdSetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterpCurveEdSetup"
  },
  {
    "label": "UParticleEmitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleEmitter"
  },
  {
    "label": "UParticleLODLevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleLODLevel"
  },
  {
    "label": "UParticleModuleTypeDataBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleModuleTypeDataBase"
  },
  {
    "label": "UParticleSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystemComponent"
  },
  {
    "label": "FCurveEdEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEdEntry"
  },
  {
    "label": "FParticleEmitterInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEmitterInstance"
  },
  {
    "label": "EModuleType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EModuleType"
  },
  {
    "label": "EParticleSourceSelectionMethod",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EParticleSourceSelectionMethod"
  },
  {
    "label": "FParticleCurvePair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleCurvePair"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FParticleRandomSeedInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleRandomSeedInfo"
  },
  {
    "label": "UParticleModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleModule"
  },
  {
    "label": "FParticleEmitterBuildInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEmitterBuildInfo"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" ParticleHelper . h \" # include \" ParticleModule . generated . h \" class UDistribution ; class UDistributionFloat ; class UDistributionVector ; class UInterpCurveEdSetup ; class UParticleEmitter ; class UParticleLODLevel ; class UParticleModuleTypeDataBase ; class UParticleSystemComponent ; struct FCurveEdEntry ; struct FParticleEmitterInstance ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (EPMT_General)",
    "insertText": "UMETA(DisplayName=\"General\"), EPMT_TypeData UMETA(DisplayName=\"Type Data\"), EPMT_Beam UMETA(DisplayName=\"Beam\"), EPMT_Trail UMETA(DisplayName=\"Trail\"), EPMT_Spawn UMETA(DisplayName=\"Spawn\"), EPMT_Required UMETA(DisplayName=\"Required\"), EPMT_Event UMETA(DisplayName=\"Event\"), EPMT_Light UMETA(DisplayName=\"Light\"), EPMT_SubUV UMETA(DisplayName = \"SubUV\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (EPSSM_Random)",
    "insertText": "UMETA(DisplayName=\"Random\"), EPSSM_Sequential UMETA(DisplayName=\"Sequential\")"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "FParticleCurvePair()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FParticleCurvePair() : CurveObject(NULL)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category=ParticleRandomSeedInfo)"
  },
  {
    "label": "FParticleRandomSeedInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FParticleRandomSeedInfo() : bGetSeedFromInstance(false) , bInstanceSeedIsIndex(false) , bResetSeedOnEmitterLooping(true) , bRandomlySelectSeedArray(false)"
  },
  {
    "label": "GetInstancePayloadSize()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetInstancePayloadSize()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(editinlinenew, hidecategories=Object, abstract, Within=ParticleSystem, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "IsPostLoadThreadSafe()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "IsPostLoadThreadSafe()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "CompileModule()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "CompileModule(struct FParticleEmitterBuildInfo& EmitterInfo)"
  },
  {
    "label": "Spawn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Spawn(FParticleEmitterInstance* Owner, int32 Offset, float SpawnTime, FBaseParticle* ParticleBase)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(FParticleEmitterInstance* Owner, int32 Offset, float DeltaTime)"
  },
  {
    "label": "FinalUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalUpdate(FParticleEmitterInstance* Owner, int32 Offset, float DeltaTime)"
  },
  {
    "label": "RequiredBytes()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RequiredBytes(UParticleModuleTypeDataBase* TypeData)"
  },
  {
    "label": "RequiredBytesPerInstance()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RequiredBytesPerInstance()"
  },
  {
    "label": "PrepPerInstanceBlock()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "PrepPerInstanceBlock(FParticleEmitterInstance* Owner, void* InstData)"
  },
  {
    "label": "SetToSensibleDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToSensibleDefaults(UParticleEmitter* Owner)"
  },
  {
    "label": "GetCurveObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCurveObjects(TArray<FParticleCurvePair>& OutCurves)"
  },
  {
    "label": "AddModuleCurvesToEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddModuleCurvesToEditor(UInterpCurveEdSetup* EdSetup, TArray<const FCurveEdEntry*>& OutCurveEntries)"
  },
  {
    "label": "RemoveModuleCurvesFromEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveModuleCurvesFromEditor(UInterpCurveEdSetup* EdSetup)"
  },
  {
    "label": "ModuleHasCurves()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModuleHasCurves()"
  },
  {
    "label": "IsDisplayedInCurveEd()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDisplayedInCurveEd(UInterpCurveEdSetup* EdSetup)"
  },
  {
    "label": "ChangeEditorColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeEditorColor(FColor& Color, UInterpCurveEdSetup* EdSetup)"
  },
  {
    "label": "Render3DPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render3DPreview(FParticleEmitterInstance* Owner, const FSceneView* View,FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "GetModuleType()",
    "kind": "Method",
    "detail": "Function (} ; EModuleType)",
    "insertText": "GetModuleType()"
  },
  {
    "label": "GenerateLODModuleValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateLODModuleValues(UParticleModule* SourceModule, float Percentage, UParticleLODLevel* LODLevel)"
  },
  {
    "label": "ConvertFloatDistribution()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertFloatDistribution(UDistributionFloat* FloatDist, UDistributionFloat* SourceFloatDist, float Percentage)"
  },
  {
    "label": "ConvertVectorDistribution()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertVectorDistribution(UDistributionVector* VectorDist, UDistributionVector* SourceVectorDist, float Percentage)"
  },
  {
    "label": "IsSizeMultiplyLife()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSizeMultiplyLife()"
  },
  {
    "label": "GenerateLODModule()",
    "kind": "Method",
    "detail": "Function (} UParticleModule*)",
    "insertText": "GenerateLODModule(UParticleLODLevel* SourceLODLevel, UParticleLODLevel* DestLODLevel, float Percentage, bool bGenerateModuleData, bool bForceModuleConstruction = false)"
  },
  {
    "label": "WillGeneratedModuleBeIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillGeneratedModuleBeIdentical(UParticleLODLevel* SourceLODLevel, UParticleLODLevel* DestLODLevel, float Percentage)"
  },
  {
    "label": "GetParticleSysParamsUtilized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetParticleSysParamsUtilized(TArray<FString>& ParticleSysParamList)"
  },
  {
    "label": "GetParticleParametersUtilized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetParticleParametersUtilized(TArray<FString>& ParticleParameterList)"
  },
  {
    "label": "RefreshModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshModule(UInterpCurveEdSetup* EdSetup, UParticleEmitter* InEmitter, int32 InLODLevel)"
  },
  {
    "label": "TouchesMeshRotation()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "TouchesMeshRotation()"
  },
  {
    "label": "GetRandomSeedInfo()",
    "kind": "Method",
    "detail": "Function (FParticleRandomSeedInfo*)",
    "insertText": "GetRandomSeedInfo()"
  },
  {
    "label": "CanTickInAnyThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanTickInAnyThread()"
  },
  {
    "label": "GetRandomStream()",
    "kind": "Method",
    "detail": "Function (FRandomStream&)",
    "insertText": "GetRandomStream(FParticleEmitterInstance* Owner)"
  },
  {
    "label": "PostLoadSubobjects()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostLoadSubobjects(FObjectInstancingGraph* OuterInstanceGraph)"
  },
  {
    "label": "GetNumberOfCustomMenuOptions()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberOfCustomMenuOptions()"
  },
  {
    "label": "IsDistributionAllowedOnGPU()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDistributionAllowedOnGPU(const UDistribution* Distribution)"
  },
  {
    "label": "GetDistributionNotAllowedOnGPUText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDistributionNotAllowedOnGPUText(const FString& ModuleName, const FString& PropertyName)"
  },
  {
    "label": "SetTransactionFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransactionFlag()"
  }
]