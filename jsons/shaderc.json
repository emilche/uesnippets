[
  {
    "label": "shaderc_compiler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "shaderc_compiler"
  },
  {
    "label": "shaderc_compile_options",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "shaderc_compile_options"
  },
  {
    "label": "shaderc_include_result",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "shaderc_include_result"
  },
  {
    "label": "shaderc_include_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "shaderc_include_type"
  },
  {
    "label": "shaderc_compilation_result",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "shaderc_compilation_result"
  },
  {
    "label": "shaderc_compiler_initialize()",
    "kind": "Method",
    "detail": "Function (shaderc_compiler_t)",
    "insertText": "shaderc_compiler_initialize(void)"
  },
  {
    "label": "shaderc_compiler_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compiler_release(shaderc_compiler_t)"
  },
  {
    "label": "shaderc_compile_options_initialize()",
    "kind": "Method",
    "detail": "Function (shaderc_compile_options_t)",
    "insertText": "shaderc_compile_options_initialize(void)"
  },
  {
    "label": "shaderc_compile_options_clone()",
    "kind": "Method",
    "detail": "Function (shaderc_compile_options_t)",
    "insertText": "shaderc_compile_options_clone(\n    const shaderc_compile_options_t options)"
  },
  {
    "label": "shaderc_compile_options_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_release(\n    shaderc_compile_options_t options)"
  },
  {
    "label": "shaderc_compile_options_add_macro_definition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_add_macro_definition(\n    shaderc_compile_options_t options, const char* name, size_t name_length,\n    const char* value, size_t value_length)"
  },
  {
    "label": "shaderc_compile_options_set_source_language()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_source_language(\n    shaderc_compile_options_t options, shaderc_source_language lang)"
  },
  {
    "label": "shaderc_compile_options_set_generate_debug_info()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_generate_debug_info(\n    shaderc_compile_options_t options)"
  },
  {
    "label": "shaderc_compile_options_set_optimization_level()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_optimization_level(\n    shaderc_compile_options_t options, shaderc_optimization_level level)"
  },
  {
    "label": "shaderc_compile_options_set_forced_version_profile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_forced_version_profile(\n    shaderc_compile_options_t options, int version, shaderc_profile profile)"
  },
  {
    "label": "shaderc_compile_options_set_include_callbacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_include_callbacks(\n    shaderc_compile_options_t options, shaderc_include_resolve_fn resolver,\n    shaderc_include_result_release_fn result_releaser, void* user_data)"
  },
  {
    "label": "shaderc_compile_options_set_suppress_warnings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_suppress_warnings(\n    shaderc_compile_options_t options)"
  },
  {
    "label": "shaderc_compile_options_set_target_env()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_target_env(\n    shaderc_compile_options_t options,\n    shaderc_target_env target,\n    uint32_t version)"
  },
  {
    "label": "shaderc_compile_options_set_target_spirv()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_target_spirv(\n    shaderc_compile_options_t options, shaderc_spirv_version version)"
  },
  {
    "label": "shaderc_compile_options_set_warnings_as_errors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_warnings_as_errors(\n    shaderc_compile_options_t options)"
  },
  {
    "label": "shaderc_compile_options_set_limit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_limit(\n    shaderc_compile_options_t options, shaderc_limit limit, int value)"
  },
  {
    "label": "shaderc_compile_options_set_auto_bind_uniforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_auto_bind_uniforms(\n    shaderc_compile_options_t options, bool auto_bind)"
  },
  {
    "label": "shaderc_compile_options_set_auto_combined_image_sampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_auto_combined_image_sampler(\n    shaderc_compile_options_t options, bool upgrade)"
  },
  {
    "label": "shaderc_compile_options_set_hlsl_io_mapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_hlsl_io_mapping(\n    shaderc_compile_options_t options, bool hlsl_iomap)"
  },
  {
    "label": "shaderc_compile_options_set_hlsl_offsets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_hlsl_offsets(\n    shaderc_compile_options_t options, bool hlsl_offsets)"
  },
  {
    "label": "shaderc_compile_options_set_binding_base()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_binding_base(\n    shaderc_compile_options_t options,\n    shaderc_uniform_kind kind,\n    uint32_t base)"
  },
  {
    "label": "shaderc_compile_options_set_binding_base_for_stage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_binding_base_for_stage(\n    shaderc_compile_options_t options, shaderc_shader_kind shader_kind,\n    shaderc_uniform_kind kind, uint32_t base)"
  },
  {
    "label": "shaderc_compile_options_set_preserve_bindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_preserve_bindings(\n    shaderc_compile_options_t options, bool preserve_bindings)"
  },
  {
    "label": "shaderc_compile_options_set_auto_map_locations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_auto_map_locations(\n    shaderc_compile_options_t options, bool auto_map)"
  },
  {
    "label": "shaderc_compile_options_set_hlsl_register_set_and_binding_for_stage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_hlsl_register_set_and_binding_for_stage(\n    shaderc_compile_options_t options, shaderc_shader_kind shader_kind,\n    const char* reg, const char* set, const char* binding)"
  },
  {
    "label": "shaderc_compile_options_set_hlsl_register_set_and_binding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_hlsl_register_set_and_binding(\n    shaderc_compile_options_t options, const char* reg, const char* set,\n    const char* binding)"
  },
  {
    "label": "shaderc_compile_options_set_hlsl_functionality1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_hlsl_functionality1(\n    shaderc_compile_options_t options, bool enable)"
  },
  {
    "label": "shaderc_compile_options_set_hlsl_16bit_types()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_hlsl_16bit_types(\n    shaderc_compile_options_t options, bool enable)"
  },
  {
    "label": "shaderc_compile_options_set_vulkan_rules_relaxed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_vulkan_rules_relaxed(\n    shaderc_compile_options_t options, bool enable)"
  },
  {
    "label": "shaderc_compile_options_set_invert_y()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_invert_y(\n    shaderc_compile_options_t options, bool enable)"
  },
  {
    "label": "shaderc_compile_options_set_nan_clamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_compile_options_set_nan_clamp(\n    shaderc_compile_options_t options, bool enable)"
  },
  {
    "label": "shaderc_compile_into_spv()",
    "kind": "Method",
    "detail": "Function (shaderc_compilation_result_t)",
    "insertText": "shaderc_compile_into_spv(\n    const shaderc_compiler_t compiler, const char* source_text,\n    size_t source_text_size, shaderc_shader_kind shader_kind,\n    const char* input_file_name, const char* entry_point_name,\n    const shaderc_compile_options_t additional_options)"
  },
  {
    "label": "shaderc_compile_into_spv_assembly()",
    "kind": "Method",
    "detail": "Function (shaderc_compilation_result_t)",
    "insertText": "shaderc_compile_into_spv_assembly(\n    const shaderc_compiler_t compiler, const char* source_text,\n    size_t source_text_size, shaderc_shader_kind shader_kind,\n    const char* input_file_name, const char* entry_point_name,\n    const shaderc_compile_options_t additional_options)"
  },
  {
    "label": "shaderc_compile_into_preprocessed_text()",
    "kind": "Method",
    "detail": "Function (shaderc_compilation_result_t)",
    "insertText": "shaderc_compile_into_preprocessed_text(\n    const shaderc_compiler_t compiler, const char* source_text,\n    size_t source_text_size, shaderc_shader_kind shader_kind,\n    const char* input_file_name, const char* entry_point_name,\n    const shaderc_compile_options_t additional_options)"
  },
  {
    "label": "shaderc_assemble_into_spv()",
    "kind": "Method",
    "detail": "Function (shaderc_compilation_result_t)",
    "insertText": "shaderc_assemble_into_spv(\n    const shaderc_compiler_t compiler, const char* source_assembly,\n    size_t source_assembly_size,\n    const shaderc_compile_options_t additional_options)"
  },
  {
    "label": "shaderc_result_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_result_release(shaderc_compilation_result_t result)"
  },
  {
    "label": "shaderc_result_get_length()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "shaderc_result_get_length(const shaderc_compilation_result_t result)"
  },
  {
    "label": "shaderc_result_get_num_warnings()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "shaderc_result_get_num_warnings(\n    const shaderc_compilation_result_t result)"
  },
  {
    "label": "shaderc_result_get_num_errors()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "shaderc_result_get_num_errors(const shaderc_compilation_result_t result)"
  },
  {
    "label": "shaderc_result_get_compilation_status()",
    "kind": "Method",
    "detail": "Function (shaderc_compilation_status)",
    "insertText": "shaderc_result_get_compilation_status(\n    const shaderc_compilation_result_t)"
  },
  {
    "label": "shaderc_get_spv_version()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shaderc_get_spv_version(unsigned int* version, unsigned int* revision)"
  },
  {
    "label": "shaderc_parse_version_profile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "shaderc_parse_version_profile(const char* str, int* version,\n                                   shaderc_profile* profile)"
  }
]