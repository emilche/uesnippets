[
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "detailing",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "detailing"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "FCommonEditorCategory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommonEditorCategory"
  },
  {
    "label": "EValue",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EValue"
  },
  {
    "label": "you",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "you"
  },
  {
    "label": "you",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "you"
  },
  {
    "label": "you",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "you"
  },
  {
    "label": "you",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "you"
  },
  {
    "label": "you",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "you"
  },
  {
    "label": "over",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "over"
  },
  {
    "label": "you",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "you"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "you",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "you"
  },
  {
    "label": "RegisterCategoryKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCategoryKey(const FString& Key, const FText& Category, const FString& DocLink, const FString& DocExcerpt)"
  },
  {
    "label": "BuildCategoryString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "BuildCategoryString(const FCommonEditorCategory::EValue RootCategory, const FText& SubCategory)"
  },
  {
    "label": "GetCategoryDisplayString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCategoryDisplayString(const FText& UnsanitizedCategory)"
  },
  {
    "label": "GetCategoryDisplayString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCategoryDisplayString(const FString& UnsanitizedCategory)"
  },
  {
    "label": "GetClassHideCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetClassHideCategories(const UStruct* Class, TArray<FString>& CategoriesOut, bool bHomogenize = true)"
  },
  {
    "label": "GetClassShowCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetClassShowCategories(const UStruct* Class, TArray<FString>& CategoriesOut)"
  },
  {
    "label": "IsCategoryHiddenFromClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCategoryHiddenFromClass(const UStruct* Class, const FCommonEditorCategory::EValue CategoryId)"
  },
  {
    "label": "IsCategoryHiddenFromClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCategoryHiddenFromClass(const UStruct* Class, const FText& Category)"
  },
  {
    "label": "IsCategoryHiddenFromClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCategoryHiddenFromClass(const UStruct* Class, const FString& Category)"
  },
  {
    "label": "IsCategoryHiddenFromClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCategoryHiddenFromClass(const TArray<FString>& ClassHideCategories, const UStruct* Class, const FString& Category)"
  },
  {
    "label": "GetCategoryTooltipInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCategoryTooltipInfo(const FString& Category, FText& Tooltip, FString& DocLink, FString& DocExcerpt)"
  },
  {
    "label": "GetHiddenCategories()",
    "kind": "Method",
    "detail": "Function (TSet<FString>)",
    "insertText": "GetHiddenCategories(const UStruct* Class)"
  }
]