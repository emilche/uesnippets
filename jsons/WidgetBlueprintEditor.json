[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FWidgetBlueprintEditorToolbar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetBlueprintEditorToolbar"
  },
  {
    "label": "IMessageLogListing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageLogListing"
  },
  {
    "label": "STextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextBlock"
  },
  {
    "label": "UPanelSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPanelSlot"
  },
  {
    "label": "UWidgetAnimation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetAnimation"
  },
  {
    "label": "UWidgetBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetBlueprint"
  },
  {
    "label": "FPaletteViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaletteViewModel"
  },
  {
    "label": "FLibraryViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLibraryViewModel"
  },
  {
    "label": "FPreviewMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewMode"
  },
  {
    "label": "FNamedSlotSelection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNamedSlotSelection"
  },
  {
    "label": "UMGEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMGEDITOR_API"
  },
  {
    "label": "UWidgetBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetBlueprint"
  },
  {
    "label": "FWidgetBlueprintEditorToolbar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetBlueprintEditorToolbar"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FWidgetBlueprintEditorToolbar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetBlueprintEditorToolbar"
  },
  {
    "label": "FWidgetEditorModeUILayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetEditorModeUILayer"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "FWidgetBlueprintEditor()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FWidgetBlueprintEditor()"
  },
  {
    "label": "InitWidgetBlueprintEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWidgetBlueprintEditor(const EToolkitMode::Type Mode, const TSharedPtr< IToolkitHost >& InitToolkitHost, const TArray<UBlueprint*>& InBlueprints, bool bShouldOpenInDefaultsMode)"
  },
  {
    "label": "SetIsSimulating()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsSimulating(bool bSimulating)"
  },
  {
    "label": "InvalidatePreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidatePreview(bool bViewOnly = false)"
  },
  {
    "label": "RefreshPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshPreview()"
  },
  {
    "label": "GetReferenceFromTemplate()",
    "kind": "Method",
    "detail": "Function (FWidgetReference)",
    "insertText": "GetReferenceFromTemplate(UWidget* TemplateWidget)"
  },
  {
    "label": "GetReferenceFromPreview()",
    "kind": "Method",
    "detail": "Function (FWidgetReference)",
    "insertText": "GetReferenceFromPreview(UWidget* PreviewWidget)"
  },
  {
    "label": "DockInLayoutClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DockInLayoutClicked()"
  },
  {
    "label": "ChangeViewedAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeViewedAnimation( UWidgetAnimation& InAnimationToView )"
  },
  {
    "label": "SelectWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectWidgets(const TSet<FWidgetReference>& Widgets, bool bAppendOrToggle)"
  },
  {
    "label": "SelectObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectObjects(const TSet<UObject*>& Objects)"
  },
  {
    "label": "IsBindingSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBindingSelected(const FMovieSceneBinding& InBinding)"
  },
  {
    "label": "SetSelectedNamedSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedNamedSlot(TOptional<FNamedSlotSelection> SelectedNamedSlot)"
  },
  {
    "label": "CleanSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanSelection()"
  },
  {
    "label": "MigrateFromChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigrateFromChain(FEditPropertyChain* PropertyThatChanged, bool bIsModify)"
  },
  {
    "label": "CreateSequencerTabWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateSequencerTabWidget()"
  },
  {
    "label": "CreateSequencerDrawerWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateSequencerDrawerWidget()"
  },
  {
    "label": "OnGetWidgetAnimSequencer()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGetWidgetAnimSequencer()"
  },
  {
    "label": "AddExternalEditorWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExternalEditorWidget(FName ID, TSharedRef<SWidget> InExternalWidget)"
  },
  {
    "label": "RemoveExternalEditorWidget()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveExternalEditorWidget(FName ID)"
  },
  {
    "label": "GetExternalEditorWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetExternalEditorWidget(FName ID)"
  },
  {
    "label": "ToggleAnimDrawer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleAnimDrawer()"
  },
  {
    "label": "NotifyWidgetAnimListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyWidgetAnimListChanged()"
  },
  {
    "label": "OnWidgetAnimSequencerOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWidgetAnimSequencerOpened(FName StatusBarWithDrawerName)"
  },
  {
    "label": "OnWidgetAnimSequencerDismissed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWidgetAnimSequencerDismissed(const TSharedPtr<SWidget>& NewlyFocusedWidget)"
  },
  {
    "label": "OnWidgetAnimDrawerSequencerOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWidgetAnimDrawerSequencerOpened(FName StatusBarWithDrawerName)"
  },
  {
    "label": "OnWidgetAnimDrawerSequencerDismissed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWidgetAnimDrawerSequencerDismissed(const TSharedPtr<SWidget>& NewlyFocusedWidget)"
  },
  {
    "label": "OnWidgetAnimTabSequencerClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWidgetAnimTabSequencerClosed(TSharedRef<SDockTab> ClosedTab)"
  },
  {
    "label": "OnWidgetAnimTabSequencerOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWidgetAnimTabSequencerOpened()"
  },
  {
    "label": "SetHoveredWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHoveredWidget(FWidgetReference& InHoveredWidget)"
  },
  {
    "label": "ClearHoveredWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearHoveredWidget()"
  },
  {
    "label": "OnEnteringDesigner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEnteringDesigner()"
  },
  {
    "label": "SetShowDashedOutlines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowDashedOutlines(bool Value)"
  },
  {
    "label": "SetIsRespectingLocks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsRespectingLocks(bool Value)"
  },
  {
    "label": "CreateMenuExtender()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtender>)",
    "insertText": "CreateMenuExtender()"
  },
  {
    "label": "FillFileMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillFileMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "FillAssetMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillAssetMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "BindToolkitCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindToolkitCommands()"
  },
  {
    "label": "TakeSnapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TakeSnapshot()"
  },
  {
    "label": "CaptureThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureThumbnail()"
  },
  {
    "label": "ClearThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearThumbnail()"
  },
  {
    "label": "IsImageUsedAsThumbnail()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImageUsedAsThumbnail()"
  },
  {
    "label": "IsPreviewWidgetInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPreviewWidgetInitialized()"
  },
  {
    "label": "CustomizeWidgetCompileOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeWidgetCompileOptions(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "AddCreateCompileTabSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCreateCompileTabSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "AddDismissCompileTabSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDismissCompileTabSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "SetDismissOnCompileSetting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDismissOnCompileSetting(EDisplayOnCompile InDismissOnCompile)"
  },
  {
    "label": "SetCreateOnCompileSetting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCreateOnCompileSetting(EDisplayOnCompile InCreateOnCompile)"
  },
  {
    "label": "IsDismissOnCompileSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDismissOnCompileSet(EDisplayOnCompile InDismissOnCompile)"
  },
  {
    "label": "IsCreateOnCompileSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCreateOnCompileSet(EDisplayOnCompile InCreateOnCompile)"
  },
  {
    "label": "OpenCreateNativeBaseClassDialog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenCreateNativeBaseClassDialog()"
  },
  {
    "label": "OnCreateNativeBaseClassSuccessfully()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateNativeBaseClassSuccessfully(const FString& InClassName, const FString& InClassPath, const FString& InModuleName)"
  },
  {
    "label": "CreateSequencerWidgetInternal()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISequencer>)",
    "insertText": "CreateSequencerWidgetInternal()"
  },
  {
    "label": "CanDeleteSelectedWidgets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteSelectedWidgets()"
  },
  {
    "label": "DeleteSelectedWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedWidgets()"
  },
  {
    "label": "CanCopySelectedWidgets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCopySelectedWidgets()"
  },
  {
    "label": "CopySelectedWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySelectedWidgets()"
  },
  {
    "label": "CanPasteWidgets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPasteWidgets()"
  },
  {
    "label": "PasteWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteWidgets()"
  },
  {
    "label": "CanCutSelectedWidgets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCutSelectedWidgets()"
  },
  {
    "label": "CutSelectedWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CutSelectedWidgets()"
  },
  {
    "label": "CanDuplicateSelectedWidgets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDuplicateSelectedWidgets()"
  },
  {
    "label": "DuplicateSelectedWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateSelectedWidgets()"
  },
  {
    "label": "OnFindWidgetReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFindWidgetReferences(bool bSearchAllBlueprints, const EGetFindReferenceSearchStringFlags Flags)"
  },
  {
    "label": "OnObjectsReplaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectsReplaced(const TMap<UObject*, UObject*>& ReplacementMap)"
  },
  {
    "label": "DestroyPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPreview()"
  },
  {
    "label": "UpdatePreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePreview(UBlueprint* InBlueprint, bool bInForceFullUpdate)"
  },
  {
    "label": "OnGetAnimationAddMenuContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetAnimationAddMenuContent(FMenuBuilder& MenuBuilder, TSharedRef<ISequencer> Sequencer)"
  },
  {
    "label": "OnBuildCustomContextMenuForGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBuildCustomContextMenuForGuid(FMenuBuilder& MenuBuilder,FGuid ObjectBinding)"
  },
  {
    "label": "OnGetAnimationAddMenuContentAllWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetAnimationAddMenuContentAllWidgets(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "AddObjectToAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectToAnimation(UObject* ObjectToAnimate)"
  },
  {
    "label": "GetAddTrackSequencerExtender()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FExtender>)",
    "insertText": "GetAddTrackSequencerExtender(const TSharedRef<FUICommandList> CommandList, const TArray<UObject*> ContextSensitiveObjects)"
  },
  {
    "label": "ExtendSequencerAddTrackMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendSequencerAddTrackMenu( FMenuBuilder& AddTrackMenuBuilder, const TArray<UObject*> ContextObjects )"
  },
  {
    "label": "AddWidgetsToTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWidgetsToTrack(const TArray<FWidgetReference> Widgets, FGuid ObjectId)"
  },
  {
    "label": "RemoveWidgetsFromTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveWidgetsFromTrack(const TArray<FWidgetReference> Widgets, FGuid ObjectId)"
  },
  {
    "label": "RemoveAllWidgetsFromTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllWidgetsFromTrack(FGuid ObjectId)"
  },
  {
    "label": "RemoveMissingWidgetsFromTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMissingWidgetsFromTrack(FGuid ObjectId)"
  },
  {
    "label": "ReplaceTrackWithWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceTrackWithWidgets(const TArray<FWidgetReference> Widgets, FGuid ObjectId)"
  },
  {
    "label": "AddDynamicPossessionMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDynamicPossessionMenu(FMenuBuilder& MenuBuilder, FGuid ObjectId)"
  },
  {
    "label": "AddSlotTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSlotTrack( UPanelSlot* Slot )"
  },
  {
    "label": "AddMaterialTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMaterialTrack( UWidget* Widget, TArray<FProperty*> MaterialPropertyPath, FText MaterialPropertyDisplayName )"
  },
  {
    "label": "OnMovieSceneDataChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMovieSceneDataChanged(EMovieSceneDataChangeType DataChangeType)"
  },
  {
    "label": "OnMovieSceneBindingsPasted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMovieSceneBindingsPasted(const TArray<FMovieSceneBinding>& BindingsPasted)"
  },
  {
    "label": "SyncSelectedWidgetsWithSequencerSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncSelectedWidgetsWithSequencerSelection(TArray<FGuid> ObjectGuids)"
  },
  {
    "label": "SyncSequencerSelectionToSelectedWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncSequencerSelectionToSelectedWidgets()"
  },
  {
    "label": "SyncSequencersMovieSceneData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncSequencersMovieSceneData()"
  },
  {
    "label": "GetPreview()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetPreview()"
  },
  {
    "label": "UpdateTrackName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackName(FGuid ObjectId)"
  },
  {
    "label": "OnFinishedChangingDynamicBindingProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFinishedChangingDynamicBindingProperties(const FPropertyChangedEvent& ChangeEvent, TSharedPtr<FStructOnScope> ValueStruct, FGuid ObjectId)"
  }
]