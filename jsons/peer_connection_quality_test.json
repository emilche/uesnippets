[
  {
    "label": "PeerConnectionE2EQualityTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PeerConnectionE2EQualityTest"
  },
  {
    "label": "PeerHandleImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PeerHandleImpl"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (MutexLock)",
    "insertText": "lock(&lock_)"
  },
  {
    "label": "GetFieldTrials()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetFieldTrials(const RunParams& run_params)"
  },
  {
    "label": "OnTrackCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTrackCallback(absl::string_view peer_name,\n                       VideoSubscription peer_subscription,\n                       rtc::scoped_refptr<RtpTransceiverInterface> transceiver,\n                       std::vector<VideoConfig> remote_video_configs)"
  },
  {
    "label": "SetupCallOnSignalingThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupCallOnSignalingThread(const RunParams& run_params)"
  },
  {
    "label": "TearDownCallOnSignalingThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDownCallOnSignalingThread()"
  },
  {
    "label": "SetPeerCodecPreferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPeerCodecPreferences(TestPeer* peer)"
  },
  {
    "label": "CreateSignalingInterceptor()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SignalingInterceptor>)",
    "insertText": "CreateSignalingInterceptor(\n      const RunParams& run_params)"
  },
  {
    "label": "WaitUntilIceCandidatesGathered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilIceCandidatesGathered(rtc::Thread* signaling_thread)"
  },
  {
    "label": "WaitUntilPeersAreConnected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilPeersAreConnected(rtc::Thread* signaling_thread)"
  },
  {
    "label": "ExchangeOfferAnswer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExchangeOfferAnswer(SignalingInterceptor* signaling_interceptor)"
  },
  {
    "label": "ExchangeIceCandidates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExchangeIceCandidates(SignalingInterceptor* signaling_interceptor)"
  },
  {
    "label": "StartVideo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartVideo(\n      const std::vector<rtc::scoped_refptr<TestVideoCapturerVideoTrackSource>>&\n          sources)"
  },
  {
    "label": "TearDownCall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDownCall()"
  },
  {
    "label": "ReportGeneralTestResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportGeneralTestResults()"
  }
]