[
  {
    "label": "vp8_copy()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP8_COMMON_COMMON_H_ # define VPX_VP8_COMMON_COMMON_H_ # include<assert . h> # include \" vpx_mem / vpx_mem . h \" # ifdef __cplusplus \" C \" { # endif # define)",
    "insertText": "vp8_copy(Dest, Src)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "assert(sizeof(Dest) == sizeof(Src))"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "memcpy(Dest, Src, sizeof(Src))"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define vp8_copy_array(Dest, Src, N)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "assert(sizeof(*(Dest)) == sizeof(*(Src)))"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "memcpy(Dest, Src, (N) * sizeof(*(Src)))"
  }
]