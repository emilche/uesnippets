[
  {
    "label": "FPerParticleDampVelocity",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerParticleDampVelocity"
  },
  {
    "label": "FPerParticleDampVelocity()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / PBDSoftsEvolutionFwd . h \" # include \" Chaos / Vector . h \" # include \" Chaos / PBDSoftsSolverParticles . h \" namespace Chaos::Softs { class FPerParticleDampVelocity final { public :)",
    "insertText": "FPerParticleDampVelocity(const FSolverReal InCoefficient = (FSolverReal)0.01) : Coefficient(InCoefficient)"
  },
  {
    "label": "FPerParticleDampVelocity()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FPerParticleDampVelocity()"
  },
  {
    "label": "UpdatePositionBasedState()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdatePositionBasedState(const FSolverParticles& Particles, const int32 Offset, const int32 Range)"
  },
  {
    "label": "UpdatePositionBasedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePositionBasedState(const FSolverParticlesRange& Particles)"
  },
  {
    "label": "ApplyFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyFast(FSolverParticles& Particles, const FSolverReal , const int32 Index)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply(Particles.GetX(Index), Particles.V(Index))"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Apply(const FSolverVec3& X, FSolverVec3& V)"
  },
  {
    "label": "CrossProduct()",
    "kind": "Method",
    "detail": "Function (const FSolverVec3 R = X - Xcm ; const FSolverVec3 Dv = Vcm - V +)",
    "insertText": "CrossProduct(R, Omega)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (V + = Coefficient* Dv ; } private : FSolverReal Coefficient ; FSolverVec3 Xcm,Vcm,Omega ; } ; } # if !)",
    "insertText": "defined(CHAOS_DAMP_VELOCITY_ISPC_ENABLED_DEFAULT)"
  }
]