[
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "GetWorldDescription()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" ISceneOutlinerTreeItem . h \" # include \" UObject / ObjectKey . h \" class UToolMenu ; namespace SceneOutliner { FText)",
    "insertText": "GetWorldDescription(UWorld* World)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (} struct FWorldTreeItem : ISceneOutlinerTreeItem { public :)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FFilterPredicate, const UWorld*)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FInteractivePredicate, const UWorld*)"
  },
  {
    "label": "Filter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Filter(FFilterPredicate Pred)"
  },
  {
    "label": "GetInteractiveState()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetInteractiveState(FInteractivePredicate Pred)"
  },
  {
    "label": "FWorldTreeItem()",
    "kind": "Method",
    "detail": "Function (} TWeakObjectPtr<UWorld> World ; const FObjectKey ID ; const FSceneOutlinerTreeItemType Type ;)",
    "insertText": "FWorldTreeItem(UWorld* InWorld)"
  },
  {
    "label": "FWorldTreeItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWorldTreeItem(TWeakObjectPtr<UWorld> InWorld)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (} FSceneOutlinerTreeItemID)",
    "insertText": "GetID()"
  },
  {
    "label": "GetDisplayString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDisplayString()"
  },
  {
    "label": "CanInteract()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanInteract()"
  },
  {
    "label": "GenerateContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateContextMenu(UToolMenu* Menu, SSceneOutliner& Outliner)"
  },
  {
    "label": "GenerateLabelWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateLabelWidget(ISceneOutliner& Outliner, const STableRow<FSceneOutlinerTreeItemPtr>& InRow)"
  },
  {
    "label": "OpenWorldSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenWorldSettings()"
  },
  {
    "label": "BrowseToAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BrowseToAsset()"
  },
  {
    "label": "CanBrowseToAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBrowseToAsset()"
  },
  {
    "label": "GetWorldName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldName()"
  }
]