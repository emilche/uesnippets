[
  {
    "label": "GetAuthorizationRightsWithPrompt()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_MAC_AUTHORIZATION_UTIL_H_ # define BASE_MAC_AUTHORIZATION_UTIL_H_ # include<CoreFoundation / CoreFoundation . h> # include<Security / Authorization . h> # include<stdio . h> # include<sys / types . h> # include \" base / base_export . h \" namespace base::mac { BASE_EXPORT AuthorizationRef)",
    "insertText": "GetAuthorizationRightsWithPrompt(AuthorizationRights* rights, CFStringRef prompt, AuthorizationFlags extraFlags)"
  },
  {
    "label": "AuthorizationCreateToRunAsRoot()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT AuthorizationRef)",
    "insertText": "AuthorizationCreateToRunAsRoot(CFStringRef prompt)"
  },
  {
    "label": "ExecuteWithPrivilegesAndGetPID()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT OSStatus)",
    "insertText": "ExecuteWithPrivilegesAndGetPID(AuthorizationRef authorization, const char* tool_path, AuthorizationFlags options, const char** arguments, FILE** pipe, pid_t* pid)"
  },
  {
    "label": "ExecuteWithPrivilegesAndWait()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT OSStatus)",
    "insertText": "ExecuteWithPrivilegesAndWait(AuthorizationRef authorization, const char* tool_path, AuthorizationFlags options, const char** arguments, FILE** pipe, int* exit_status)"
  }
]