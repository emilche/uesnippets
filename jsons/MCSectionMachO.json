[
  {
    "label": "MCSectionMachO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSectionMachO"
  },
  {
    "label": "MCContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCContext"
  },
  {
    "label": "MCSectionMachO()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_MCSECTIONMACHO_H # define LLVM_MC_MCSECTIONMACHO_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / MC / MCSection . h \" # include \" llvm / Support / MachO . h \" namespace llvm { class MCSectionMachO : public MCSection { char SegmentName [ 1 6 ] ; char SectionName [ 1 6 ] ; unsigned TypeAndAttributes ; unsigned Reserved2 ;)",
    "insertText": "MCSectionMachO(StringRef Segment, StringRef Section, unsigned TAA, unsigned reserved2, SectionKind K, MCSymbol *Begin)"
  },
  {
    "label": "getSegmentName()",
    "kind": "Method",
    "detail": "Function (class MCContext ; public : StringRef)",
    "insertText": "getSegmentName()"
  },
  {
    "label": "getSectionName()",
    "kind": "Method",
    "detail": "Function (} StringRef)",
    "insertText": "getSectionName()"
  },
  {
    "label": "getTypeAndAttributes()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getTypeAndAttributes()"
  },
  {
    "label": "hasAttribute()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "hasAttribute(unsigned Value)"
  },
  {
    "label": "ParseSectionSpecifier()",
    "kind": "Method",
    "detail": "Function (} std::string)",
    "insertText": "ParseSectionSpecifier(StringRef Spec, StringRef &Segment, StringRef &Section, unsigned &TAA, bool &TAAParsed, unsigned &StubSize)"
  },
  {
    "label": "PrintSwitchToSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintSwitchToSection(const MCAsmInfo &MAI, raw_ostream &OS, const MCExpr *Subsection)"
  },
  {
    "label": "UseCodeAlign()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseCodeAlign()"
  },
  {
    "label": "isVirtualSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isVirtualSection()"
  },
  {
    "label": "classof()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "classof(const MCSection *S)"
  }
]