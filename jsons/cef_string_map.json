[
  {
    "label": "cef_string_map_alloc()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_INTERNAL_CEF_STRING_MAP_H_ # define CEF_INCLUDE_INTERNAL_CEF_STRING_MAP_H_ # pragma once # include \" include / internal / cef_export . h \" # include \" include / internal / cef_string . h \" # ifdef __cplusplus \" C \" { # endif typedef void* cef_string_map_t ; CEF_EXPORT cef_string_map_t)",
    "insertText": "cef_string_map_alloc()"
  },
  {
    "label": "cef_string_map_size()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT size_t)",
    "insertText": "cef_string_map_size(cef_string_map_t map)"
  },
  {
    "label": "cef_string_map_find()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_map_find(cef_string_map_t map, const cef_string_t* key, cef_string_t* value)"
  },
  {
    "label": "cef_string_map_key()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_map_key(cef_string_map_t map, size_t index, cef_string_t* key)"
  },
  {
    "label": "cef_string_map_value()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_map_value(cef_string_map_t map, size_t index, cef_string_t* value)"
  },
  {
    "label": "cef_string_map_append()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_map_append(cef_string_map_t map, const cef_string_t* key, const cef_string_t* value)"
  },
  {
    "label": "cef_string_map_clear()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_string_map_clear(cef_string_map_t map)"
  },
  {
    "label": "cef_string_map_free()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_string_map_free(cef_string_map_t map)"
  }
]