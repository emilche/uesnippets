[
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FMeshBuilderOneFrameResources",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshBuilderOneFrameResources"
  },
  {
    "label": "FMeshElementCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshElementCollector"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FPrimitiveUniformShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveUniformShaderParameters"
  },
  {
    "label": "FMeshBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshBatch"
  },
  {
    "label": "FDynamicMeshVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicMeshVertex"
  },
  {
    "label": "FDynamicMeshDrawOffset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicMeshDrawOffset"
  },
  {
    "label": "FDynamicMeshBuilderSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicMeshBuilderSettings"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "FDynamicMeshBufferAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMeshBufferAllocator"
  },
  {
    "label": "FDynamicMeshBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMeshBuilder"
  },
  {
    "label": "FMeshBuilderOneFrameResources",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshBuilderOneFrameResources"
  },
  {
    "label": "FPooledDynamicMeshIndexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPooledDynamicMeshIndexBuffer"
  },
  {
    "label": "FPooledDynamicMeshVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPooledDynamicMeshVertexBuffer"
  },
  {
    "label": "FDynamicMeshIndexBuffer32",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMeshIndexBuffer32"
  },
  {
    "label": "FDynamicMeshIndexBuffer16",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMeshIndexBuffer16"
  },
  {
    "label": "AllocIndexBuffer()",
    "kind": "Method",
    "detail": "Function (FBufferRHIRef)",
    "insertText": "AllocIndexBuffer(FRHICommandListBase& RHICmdList, uint32 NumElements)"
  },
  {
    "label": "ReleaseIndexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseIndexBuffer(FBufferRHIRef& IndexBufferRHI)"
  },
  {
    "label": "AllocVertexBuffer()",
    "kind": "Method",
    "detail": "Function (FBufferRHIRef)",
    "insertText": "AllocVertexBuffer(FRHICommandListBase& RHICmdList, uint32 Stride, uint32 NumElements)"
  },
  {
    "label": "ReleaseVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseVertexBuffer(FBufferRHIRef& VertexBufferRHI)"
  },
  {
    "label": "FDynamicMeshBuilder()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FDynamicMeshBuilder(ERHIFeatureLevel::Type InFeatureLevel, uint32 InNumTexCoords = 1, uint32 InLightmapCoordinateIndex = 0, bool InUse16bitTexCoord = false, FDynamicMeshBufferAllocator* InDynamicMeshBufferAllocator = nullptr)"
  },
  {
    "label": "AddVertex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddVertex(\n\t\tconst FVector3f& InPosition,\n\t\tconst FVector2f& InTextureCoordinate,\n\t\tconst FVector3f& InTangentX,\n\t\tconst FVector3f& InTangentY,\n\t\tconst FVector3f& InTangentZ,\n\t\tconst FColor& InColor\n\t\t)"
  },
  {
    "label": "AddVertex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddVertex(const FDynamicMeshVertex &InVertex)"
  },
  {
    "label": "AddTriangle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTriangle(int32 V0,int32 V1,int32 V2)"
  },
  {
    "label": "AddVertices()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddVertices(const TArray<FDynamicMeshVertex> &InVertices)"
  },
  {
    "label": "AddTriangles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTriangles(const TArray<uint32> &InIndices)"
  },
  {
    "label": "ReserveVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReserveVertices(int32 InNumVertices)"
  },
  {
    "label": "ReserveTriangles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReserveTriangles(int32 InNumTriangles)"
  },
  {
    "label": "GetMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMesh(const FMatrix& LocalToWorld, const FMaterialRenderProxy* MaterialRenderProxy, uint8 DepthPriorityGroup, bool bDisableBackfaceCulling, bool bReceivesDecals, int32 ViewIndex, FMeshElementCollector& Collector)"
  },
  {
    "label": "GetMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMesh(const FMatrix& LocalToWorld, const FMaterialRenderProxy* MaterialRenderProxy, uint8 DepthPriorityGroup, bool bDisableBackfaceCulling, bool bReceivesDecals, bool bUseSelectionOutline, int32 ViewIndex, \n\t\t\t\t\t\t\tFMeshElementCollector& Collector, HHitProxy* HitProxy)"
  },
  {
    "label": "GetMeshElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMeshElement(const FMatrix& LocalToWorld, const FMaterialRenderProxy* MaterialRenderProxy, uint8 DepthPriorityGroup, bool bDisableBackfaceCulling, bool bReceivesDecals, int32 ViewIndex, FMeshBuilderOneFrameResources& OneFrameResource, FMeshBatch& Mesh)"
  },
  {
    "label": "GetMeshElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMeshElement(const FPrimitiveUniformShaderParameters& PrimitiveParams, const FMaterialRenderProxy* MaterialRenderProxy, uint8 DepthPriorityGroup, bool bDisableBackfaceCulling, int32 ViewIndex, FMeshBuilderOneFrameResources& OneFrameResource, FMeshBatch& Mesh)"
  }
]