[
  {
    "label": "unsigned_difference()",
    "kind": "Method",
    "detail": "Function (# ifndef API_NUMERICS_MATH_UTILS_H_ # define API_NUMERICS_MATH_UTILS_H_ # include<limits> # include<type_traits> # include \" rtc_base / checks . h \" namespace webrtc { namespace webrtc_impl { template<T> std::make_unsigned<T>::type)",
    "insertText": "unsigned_difference(T x, T y)"
  },
  {
    "label": "RTC_DCHECK_GE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_GE(x, y)"
  },
  {
    "label": "unsigned_type()",
    "kind": "Method",
    "detail": "Function (typedef std::make_unsigned<T>::type unsigned_type ; return static_cast<)",
    "insertText": "unsigned_type(x) - static_cast<unsigned_type>(y)"
  },
  {
    "label": "infinity_or_max()",
    "kind": "Method",
    "detail": "Function (} template<T,std::enable_if<std::numeric_limits<T>::has_infinity>::type* = nullptr> T)",
    "insertText": "infinity_or_max()"
  },
  {
    "label": "minus_infinity_or_min()",
    "kind": "Method",
    "detail": "Function (} template<T,std::enable_if<std::numeric_limits<T>::has_infinity>::type* = nullptr> T)",
    "insertText": "minus_infinity_or_min()"
  }
]