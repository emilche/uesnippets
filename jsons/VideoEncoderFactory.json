[
  {
    "label": "FThreadSafeCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadSafeCounter"
  },
  {
    "label": "FVideoEncoderInput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVideoEncoderInput"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (public : FVideoEncoderFactory&)",
    "insertText": "Get()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "Debug_SetDontRegisterDefaultCodecs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Debug_SetDontRegisterDefaultCodecs()"
  },
  {
    "label": "IsSetup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSetup()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Register(const FVideoEncoderInfo& InInfo, const CreateEncoderCallback& InCreateEncoder)"
  },
  {
    "label": "GetAvailable()",
    "kind": "Method",
    "detail": "Function (const TArray<FVideoEncoderInfo>&)",
    "insertText": "GetAvailable()"
  },
  {
    "label": "HasEncoderForCodec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasEncoderForCodec(ECodecType CodecType)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FVideoEncoder>)",
    "insertText": "Create(uint32 InID, const FVideoEncoder::FLayerConfig& config)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FVideoEncoder>)",
    "insertText": "Create(uint32 InID, TSharedPtr<FVideoEncoderInput> InInput, const FVideoEncoder::FLayerConfig& config)"
  },
  {
    "label": "FVideoEncoderFactory()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS private :)",
    "insertText": "FVideoEncoderFactory()"
  },
  {
    "label": "FVideoEncoderFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVideoEncoderFactory(const FVideoEncoderFactory&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FVideoEncoderFactory&)",
    "insertText": "operator(const FVideoEncoderFactory&)"
  },
  {
    "label": "RegisterDefaultCodecs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDefaultCodecs()"
  }
]