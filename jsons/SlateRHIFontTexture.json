[
  {
    "label": "FSlateFontTextureRHIResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateFontTextureRHIResource"
  },
  {
    "label": "FSlateFontAtlasRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateFontAtlasRHI"
  },
  {
    "label": "FSlateShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResource"
  },
  {
    "label": "FTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureResource"
  },
  {
    "label": "FSlateFontTextureRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateFontTextureRHI"
  },
  {
    "label": "FPendingSourceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingSourceData"
  },
  {
    "label": "FSlateFontTextureRHIResource()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Fonts / FontTypes . h \" # include \" Textures / SlateShaderResource . h \" # include \" TextureResource . h \" class FSlateFontTextureRHIResource : public TSlateTexture<FTextureRHIRef>,public FTextureResource { public :)",
    "insertText": "FSlateFontTextureRHIResource(uint32 InWidth, uint32 InHeight, ESlateFontAtlasContentType InContentType)"
  },
  {
    "label": "GetWidth()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetWidth()"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "GetContentType()",
    "kind": "Method",
    "detail": "Function (ESlateFontAtlasContentType)",
    "insertText": "GetContentType()"
  },
  {
    "label": "FSlateFontAtlasRHI()",
    "kind": "Method",
    "detail": "Function (uint32 Width ; uint32 Height ; ESlateFontAtlasContentType ContentType ; TArray<uint8> TempData ; } ; class FSlateFontAtlasRHI : public FSlateFontAtlas { public :)",
    "insertText": "FSlateFontAtlasRHI(uint32 Width, uint32 Height, ESlateFontAtlasContentType InContentType, ESlateTextureAtlasPaddingStyle InPaddingStyle)"
  },
  {
    "label": "FSlateFontAtlasRHI()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSlateFontAtlasRHI()"
  },
  {
    "label": "GetSlateTexture()",
    "kind": "Method",
    "detail": "Function (class FSlateShaderResource*)",
    "insertText": "GetSlateTexture()"
  },
  {
    "label": "GetEngineTexture()",
    "kind": "Method",
    "detail": "Function (} class FTextureResource*)",
    "insertText": "GetEngineTexture()"
  },
  {
    "label": "ConditionalUpdateTexture()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ConditionalUpdateTexture()"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "FSlateFontTextureRHI()",
    "kind": "Method",
    "detail": "Function (private : TUniquePtr<FSlateFontTextureRHIResource> FontTexture ; } ; class FSlateFontTextureRHI : public ISlateFontTexture { public :)",
    "insertText": "FSlateFontTextureRHI(const uint32 InWidth, const uint32 InHeight, ESlateFontAtlasContentType InContentType, const TArray<uint8>& InRawData)"
  },
  {
    "label": "FSlateFontTextureRHI()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSlateFontTextureRHI()"
  },
  {
    "label": "ReleaseRenderingResources()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReleaseRenderingResources()"
  },
  {
    "label": "UpdateTextureFromSource()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateTextureFromSource(const uint32 SourceWidth, const uint32 SourceHeight, const TArray<uint8>& SourceData)"
  },
  {
    "label": "FPendingSourceData()",
    "kind": "Method",
    "detail": "Function (private : struct FPendingSourceData {)",
    "insertText": "FPendingSourceData(uint32 InSourceWidth, uint32 InSourceHeight, TArray<uint8> InSourceData) : SourceWidth(InSourceWidth) , SourceHeight(InSourceHeight) , SourceData(MoveTemp(InSourceData))"
  }
]