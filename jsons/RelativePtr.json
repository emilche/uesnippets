[
  {
    "label": "TRelativePtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRelativePtr"
  },
  {
    "label": "max()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / AssertionMacros . h \" # include<limits> # include<type_traits> template<T,OffsetType = int16> struct TRelativePtr { OffsetType NullValue = std::numeric_limits<OffsetType)",
    "insertText": "max()"
  },
  {
    "label": "TRelativePtr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRelativePtr() : Offset(NullValue)"
  },
  {
    "label": "TRelativePtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TRelativePtr(nullptr_t) : Offset(NullValue)"
  },
  {
    "label": "TRelativePtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TRelativePtr(const void* BasePtr, const void* ThisPtr)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(BasePtr, ThisPtr)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "Resolve()",
    "kind": "Method",
    "detail": "Function (} template<U> U*)",
    "insertText": "Resolve(const void* BasePtr)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset(nullptr_t)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (Offset = NullValue ; } void)",
    "insertText": "Reset(const void* BasePtr, const void* ThisPtr)"
  },
  {
    "label": "uintptr_t()",
    "kind": "Method",
    "detail": "Function (const uintptr_t Base = reinterpret_cast<)",
    "insertText": "uintptr_t(BasePtr)"
  },
  {
    "label": "uintptr_t()",
    "kind": "Method",
    "detail": "Function (const uintptr_t This = reinterpret_cast<)",
    "insertText": "uintptr_t(ThisPtr)"
  },
  {
    "label": "checkf()",
    "kind": "Method",
    "detail": "Function (const uintptr_t OffsetPtr = This - Base ;)",
    "insertText": "checkf(OffsetPtr >= 0 && OffsetPtr < std::numeric_limits<OffsetType>::max(), TEXT(\"Attempting to create a relative pointer outside the bounds of its capacity.\"))"
  },
  {
    "label": "OffsetType()",
    "kind": "Method",
    "detail": "Function (Offset = static_cast<)",
    "insertText": "OffsetType(OffsetPtr)"
  },
  {
    "label": "constexpr()",
    "kind": "Method",
    "detail": "Function (} else if)",
    "insertText": "constexpr(std::is_signed_v<OffsetType>)"
  },
  {
    "label": "checkf()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "checkf(false, TEXT(\"Attempting to assign a negative offset to an unsigned relative pointer!!\"))"
  }
]