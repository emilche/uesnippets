[
  {
    "label": "SctpTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SctpTransport"
  },
  {
    "label": "SctpTransport()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_SCTP_TRANSPORT_H_ # define PC_SCTP_TRANSPORT_H_ # include<memory> # include \" api / dtls_transport_interface . h \" # include \" api / scoped_refptr . h \" # include \" api / sctp_transport_interface . h \" # include \" api / sequence_checker . h \" # include \" api / transport / data_channel_transport_interface . h \" # include \" media / sctp / sctp_transport_internal . h \" # include \" p2p / base / dtls_transport_internal . h \" # include \" pc / dtls_transport . h \" # include \" rtc_base / checks . h \" # include \" rtc_base / thread . h \" # include \" rtc_base / thread_annotations . h \" namespace webrtc { class SctpTransport : public SctpTransportInterface,public DataChannelTransportInterface { public :)",
    "insertText": "SctpTransport(std::unique_ptr<cricket::SctpTransportInternal> internal)"
  },
  {
    "label": "dtls_transport()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<DtlsTransportInterface>)",
    "insertText": "dtls_transport()"
  },
  {
    "label": "Information()",
    "kind": "Method",
    "detail": "Function (SctpTransportInformation)",
    "insertText": "Information()"
  },
  {
    "label": "RegisterObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObserver(SctpTransportObserverInterface* observer)"
  },
  {
    "label": "UnregisterObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObserver()"
  },
  {
    "label": "OpenChannel()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "OpenChannel(int channel_id)"
  },
  {
    "label": "SendData()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "SendData(int channel_id, const SendDataParams& params, const rtc::CopyOnWriteBuffer& buffer)"
  },
  {
    "label": "CloseChannel()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "CloseChannel(int channel_id)"
  },
  {
    "label": "SetDataSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataSink(DataChannelSink* sink)"
  },
  {
    "label": "IsReadyToSend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyToSend()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "SetDtlsTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDtlsTransport(rtc::scoped_refptr<DtlsTransport>)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(int local_port, int remote_port, int max_message_size)"
  },
  {
    "label": "internal()",
    "kind": "Method",
    "detail": "Function (cricket::SctpTransportInternal*)",
    "insertText": "internal()"
  },
  {
    "label": "RTC_DCHECK_RUN_ON()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_RUN_ON(owner_thread_)"
  },
  {
    "label": "SctpTransport()",
    "kind": "Method",
    "detail": "Function (} protected : ~)",
    "insertText": "SctpTransport()"
  },
  {
    "label": "UpdateInformation()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateInformation(SctpTransportState state)"
  },
  {
    "label": "OnInternalReadyToSendData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInternalReadyToSendData()"
  },
  {
    "label": "OnAssociationChangeCommunicationUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssociationChangeCommunicationUp()"
  },
  {
    "label": "OnInternalClosingProcedureStartedRemotely()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInternalClosingProcedureStartedRemotely(int sid)"
  },
  {
    "label": "OnInternalClosingProcedureComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInternalClosingProcedureComplete(int sid)"
  },
  {
    "label": "OnDtlsStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDtlsStateChange(cricket::DtlsTransportInternal* transport, DtlsTransportState state)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (rtc::Thread* const owner_thread_ ; SctpTransportInformation info_)",
    "insertText": "RTC_GUARDED_BY(owner_thread_)"
  }
]