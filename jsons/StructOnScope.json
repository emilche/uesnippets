[
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "FStructOnScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructOnScope"
  },
  {
    "label": "TStructOnScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TStructOnScope"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / Class . h \" # include \" UObject / WeakObjectPtr . h \" # include \" Templates / Casts . h \" # include \" Templates / RemoveReference . h \" class FReferenceCollector ; class FStructOnScope { protected : TWeakObjectPtr<const UStruct> ScriptStruct ; uint8* SampleStructMemory ; TWeakObjectPtr<UPackage> Package ; bool OwnsMemory ; void)",
    "insertText": "Initialize()"
  },
  {
    "label": "SampleStructMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SampleStructMemory(uint8*)FMemory::Malloc(ScriptStructPtr->GetStructureSize() ? ScriptStructPtr->GetStructureSize() : 1, ScriptStructPtr->GetMinAlignment())"
  },
  {
    "label": "InitializeStruct()",
    "kind": "Method",
    "detail": "Function (ScriptStructPtr ->)",
    "insertText": "InitializeStruct(SampleStructMemory)"
  },
  {
    "label": "FStructOnScope()",
    "kind": "Method",
    "detail": "Function (OwnsMemory = true ; } } public :)",
    "insertText": "FStructOnScope()"
  },
  {
    "label": "FStructOnScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStructOnScope(const UStruct* InScriptStruct)"
  },
  {
    "label": "FStructOnScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStructOnScope(const UStruct* InScriptStruct, uint8* InData)"
  },
  {
    "label": "FStructOnScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStructOnScope(FStructOnScope&& InOther)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FStructOnScope&)",
    "insertText": "operator(FStructOnScope&& InOther)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FStructOnScope()",
    "kind": "Method",
    "detail": "Function (} return* this ; })",
    "insertText": "FStructOnScope(const FStructOnScope&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FStructOnScope&)",
    "insertText": "operator(const FStructOnScope&)"
  },
  {
    "label": "OwnsStructMemory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OwnsStructMemory()"
  },
  {
    "label": "GetStructPtr()",
    "kind": "Method",
    "detail": "Function (} TWeakObjectPtr<const UStruct>&)",
    "insertText": "GetStructPtr()"
  },
  {
    "label": "SetPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPackage(UPackage* InPackage)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Destroy()"
  },
  {
    "label": "DestroyStruct()",
    "kind": "Method",
    "detail": "Function (ScriptStructPtr ->)",
    "insertText": "DestroyStruct(SampleStructMemory)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} ScriptStruct = nullptr ; })",
    "insertText": "if(SampleStructMemory)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(SampleStructMemory)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(TWeakObjectPtr<const UStruct> InScriptStruct)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "TStructOnScope()",
    "kind": "Method",
    "detail": "Function (} ; template<T> class TStructOnScope final : public FStructOnScope { public :)",
    "insertText": "TStructOnScope()"
  },
  {
    "label": "TStructOnScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TStructOnScope(TStructOnScope&& InOther)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TStructOnScope&)",
    "insertText": "operator(TStructOnScope&& InOther)"
  },
  {
    "label": "TStructOnScope()",
    "kind": "Method",
    "detail": "Function (template<U,= TEnableIf<TIsDerivedFrom<TRemoveReference<U>::Type,T>::IsDerived,void>::Type>)",
    "insertText": "TStructOnScope(U&& InStruct) : FStructOnScope(TBaseStructure<typename TRemoveReference<U>::Type>::Get())"
  },
  {
    "label": "CopyScriptStruct()",
    "kind": "Method",
    "detail": "Function (ScriptStructPtr ->)",
    "insertText": "CopyScriptStruct(SampleStructMemory, &InStruct)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } template<U,= TEnableIf<TIsDerivedFrom<TRemoveReference<U>::Type,T>::IsDerived,void>::Type> TStructOnScope&)",
    "insertText": "operator(U&& InStruct)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(TBaseStructure<typename TRemoveReference<U>::Type>::Get())"
  },
  {
    "label": "InitializeAs()",
    "kind": "Method",
    "detail": "Function (} return* this ; } template<U,= TEnableIf<TIsDerivedFrom<TRemoveReference<U>::Type,T>::IsDerived,void>::Type,. . . TArgs> void)",
    "insertText": "InitializeAs(TArgs&&... InArgs)"
  },
  {
    "label": "SampleStructMemory()",
    "kind": "Method",
    "detail": "Function (ScriptStruct = ScriptStructPtr ;)",
    "insertText": "SampleStructMemory(uint8*)FMemory::Malloc(ScriptStructPtr->GetStructureSize() ? ScriptStructPtr->GetStructureSize() : 1)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(SampleStructMemory) U(Forward<TArgs>(InArgs)...)"
  },
  {
    "label": "InitializeFrom()",
    "kind": "Method",
    "detail": "Function (OwnsMemory = true ; } } bool)",
    "insertText": "InitializeFrom(const FStructOnScope& InOther)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(ScriptStructPtr)"
  },
  {
    "label": "CopyScriptStruct()",
    "kind": "Method",
    "detail": "Function (ScriptStructPtr ->)",
    "insertText": "CopyScriptStruct(SampleStructMemory, InOther.GetStructMemory())"
  },
  {
    "label": "FStructOnScope()",
    "kind": "Method",
    "detail": "Function (* static_cast<)",
    "insertText": "FStructOnScope(this) = MoveTemp(InOther)"
  },
  {
    "label": "InitializeFromChecked()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "InitializeFromChecked(FStructOnScope&& InOther)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} } T*)",
    "insertText": "Get()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} T*)",
    "insertText": "operator()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "Cast()",
    "kind": "Method",
    "detail": "Function (} template<U> U*)",
    "insertText": "Cast()"
  },
  {
    "label": "CastChecked()",
    "kind": "Method",
    "detail": "Function (} template<U> U*)",
    "insertText": "CastChecked()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (U* Result = nullptr ;)",
    "insertText": "if(!IsValid())"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FString StructPath ; Ar<<StructPath ;)",
    "insertText": "if(!StructPath.IsEmpty())"
  },
  {
    "label": "UScriptStruct()",
    "kind": "Method",
    "detail": "Function (UScriptStruct* ScriptStructPtr = FindObject<)",
    "insertText": "UScriptStruct(nullptr, *StructPath, false)"
  },
  {
    "label": "SetError()",
    "kind": "Method",
    "detail": "Function (Ar .)",
    "insertText": "SetError()"
  },
  {
    "label": "SerializeItem()",
    "kind": "Method",
    "detail": "Function (ScriptStructPtr ->)",
    "insertText": "SerializeItem(Ar, SampleStructMemory, nullptr)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} } else { FString StructPath ;)",
    "insertText": "if(UScriptStruct* ScriptStructPtr = const_cast<UScriptStruct*>(::Cast<UScriptStruct>(ScriptStruct.Get())))"
  },
  {
    "label": "GetPathName()",
    "kind": "Method",
    "detail": "Function (StructPath = ScriptStructPtr ->)",
    "insertText": "GetPathName()"
  },
  {
    "label": "MakeStructOnScope()",
    "kind": "Method",
    "detail": "Function (} else { Ar<<StructPath ; } } } private : using FStructOnScope::OwnsStructMemory ; using FStructOnScope::GetStructMemory ; using FStructOnScope::GetPackage ; using FStructOnScope::SetPackage ; using FStructOnScope::Destroy ; using FStructOnScope::Initialize ; } ; template<T,U = T,. . . TArgs> TStructOnScope<T>)",
    "insertText": "MakeStructOnScope(TArgs&&... Args)"
  },
  {
    "label": "U()",
    "kind": "Method",
    "detail": "Function (TStructOnScope<T> Struct ; Struct . template InitializeAs<)",
    "insertText": "U(Forward<TArgs>(Args)...)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (Struct .)",
    "insertText": "Serialize(Ar)"
  }
]