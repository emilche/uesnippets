[
  {
    "label": "FMovieSceneSpawnable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSpawnable"
  },
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "IMovieSceneObjectSpawner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieSceneObjectSpawner"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "USequencerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USequencerSettings"
  },
  {
    "label": "UActorFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorFactory"
  },
  {
    "label": "FTransformData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransformData"
  },
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "FNewSpawnable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNewSpawnable"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" MovieSceneSequenceID . h \" # include \" Templates / ValueOrError . h \" struct FMovieSceneSpawnable ; class IMovieScenePlayer ; class UMovieScene ; class IMovieSceneObjectSpawner ; class ISequencer ; class USequencerSettings ; class UActorFactory ; struct FTransformData ; namespace UE::MovieScene { struct FSharedPlaybackState ; })",
    "insertText": "DECLARE_DELEGATE_RetVal(TSharedRef<IMovieSceneObjectSpawner>, FOnCreateMovieSceneObjectSpawner)"
  },
  {
    "label": "FNewSpawnable()",
    "kind": "Method",
    "detail": "Function (struct FNewSpawnable {)",
    "insertText": "FNewSpawnable() : ObjectTemplate(nullptr)"
  },
  {
    "label": "FNewSpawnable()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNewSpawnable(UObject* InObjectTemplate, FString InName) : ObjectTemplate(InObjectTemplate), Name(MoveTemp(InName))"
  },
  {
    "label": "GetSupportedTemplateType()",
    "kind": "Method",
    "detail": "Function (} UObject* ObjectTemplate ; FString Name ; } ; class IMovieSceneObjectSpawner { public : UClass*)",
    "insertText": "GetSupportedTemplateType()"
  },
  {
    "label": "SpawnObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "SpawnObject(FMovieSceneSpawnable& Spawnable, FMovieSceneSequenceIDRef TemplateID, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "DestroySpawnedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySpawnedObject(UObject& Object)"
  },
  {
    "label": "IsEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditor()"
  },
  {
    "label": "SetupDefaultsForSpawnable()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetupDefaultsForSpawnable(UObject* SpawnedObject, const FGuid& Guid, const TOptional<FTransformData>& TransformData, TSharedRef<ISequencer> Sequencer, USequencerSettings* Settings)"
  },
  {
    "label": "CanSetupDefaultsForSpawnable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanSetupDefaultsForSpawnable(UObject* SpawnedObject)"
  },
  {
    "label": "CanConvertSpawnableToPossessable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanConvertSpawnableToPossessable(FMovieSceneSpawnable& Spawnable)"
  }
]