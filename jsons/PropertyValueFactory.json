[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "INotifyHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INotifyHook"
  },
  {
    "label": "FPropertyValueFactoryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyValueFactoryImpl"
  },
  {
    "label": "FPropertyValueFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyValueFactory"
  },
  {
    "label": "FHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHandle"
  },
  {
    "label": "FGenerateArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenerateArgs"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" Framework / PropertyViewer / PropertyPath . h \" # include \" Framework / SlateDelegates . h \" # include \" UObject / Field . h \" # include \" UObject / Class . h \" class SWidget ; namespace UE::PropertyViewer { class INotifyHook ; namespace Private { class FPropertyValueFactoryImpl ; } class FPropertyValueFactory { public : struct FHandle { private : FPropertyValueFactory ; int32 Id = 0 ; public : bool)",
    "insertText": "operator(FHandle Other)"
  },
  {
    "label": "FPropertyValueFactory()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FPropertyValueFactory()"
  },
  {
    "label": "FPropertyValueFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyValueFactory(const FPropertyValueFactory&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPropertyValueFactory&)",
    "insertText": "operator(const FPropertyValueFactory&)"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "Generate(FGenerateArgs Args)"
  },
  {
    "label": "GenerateDefault()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GenerateDefault(FGenerateArgs Args)"
  },
  {
    "label": "HasCustomPropertyValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCustomPropertyValue(const FFieldClass* Property)"
  },
  {
    "label": "HasCustomPropertyValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCustomPropertyValue(const UStruct* Struct)"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (FHandle)",
    "insertText": "Register(const FFieldClass* Field, FOnGenerate OnGenerate)"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (FHandle)",
    "insertText": "Register(const UStruct* Struct, FOnGenerate OnGenerate)"
  },
  {
    "label": "Unregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unregister(FHandle Handle)"
  },
  {
    "label": "MakeHandle()",
    "kind": "Method",
    "detail": "Function (private : FHandle)",
    "insertText": "MakeHandle()"
  }
]