[
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "FbxDeletionPolicyDefault",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxDeletionPolicyDefault"
  },
  {
    "label": "FbxDeletionPolicyArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxDeletionPolicyArray"
  },
  {
    "label": "FbxDeletionPolicyDelete",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxDeletionPolicyDelete"
  },
  {
    "label": "FbxDeletionPolicyFree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxDeletionPolicyFree"
  },
  {
    "label": "FbxDeletionPolicyObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxDeletionPolicyObject"
  },
  {
    "label": "Policy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Policy"
  },
  {
    "label": "FbxAutoPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAutoPtr"
  },
  {
    "label": "FbxAutoFreePtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAutoFreePtr"
  },
  {
    "label": "FbxAutoDeletePtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAutoDeletePtr"
  },
  {
    "label": "FbxAutoDestroyPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAutoDestroyPtr"
  },
  {
    "label": "RefCount",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RefCount"
  },
  {
    "label": "FbxSharedPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxSharedPtr"
  },
  {
    "label": "FbxSharedFreePtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxSharedFreePtr"
  },
  {
    "label": "FbxSharedDeletePtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxSharedDeletePtr"
  },
  {
    "label": "FbxSharedDestroyPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxSharedDestroyPtr"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_ARCH_ALLOC_H_ # define _FBXSDK_CORE_ARCH_ALLOC_H_ # include<fbxsdk / fbxsdk_def . h> # if)",
    "insertText": "defined(_DEBUG) && defined(FBXSDK_ENV_WIN) #include <crtdbg.h> #endif #if defined(FBXSDK_ENV_MAC) #include <malloc/malloc.h> #else #include <malloc.h> #endif #include <fbxsdk/fbxsdk_nsbegin.h> #if defined(FBXSDK_CPU_32) && !defined(FBXSDK_ENV_IOS) #define FBXSDK_MEMORY_ALIGNMENT ((size_t)8U) #else #define FBXSDK_MEMORY_ALIGNMENT ((size_t)16U) #endif #define FBXSDK_MEMORY_COPY(dst, src, size)"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memcpy(dst,src,size)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} typedef)",
    "insertText": "void(*FbxMallocProc)(size_t)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*FbxCallocProc)(size_t, size_t)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*FbxReallocProc)(void*, size_t)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*FbxFreeProc)(void*)"
  },
  {
    "label": "FbxSetMallocHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxSetMallocHandler(FbxMallocProc pHandler)"
  },
  {
    "label": "FbxSetCallocHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxSetCallocHandler(FbxCallocProc pHandler)"
  },
  {
    "label": "FbxSetReallocHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxSetReallocHandler(FbxReallocProc pHandler)"
  },
  {
    "label": "FbxSetFreeHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxSetFreeHandler(FbxFreeProc pHandler)"
  },
  {
    "label": "FbxGetMallocHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxMallocProc)",
    "insertText": "FbxGetMallocHandler()"
  },
  {
    "label": "FbxGetCallocHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxCallocProc)",
    "insertText": "FbxGetCallocHandler()"
  },
  {
    "label": "FbxGetReallocHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxReallocProc)",
    "insertText": "FbxGetReallocHandler()"
  },
  {
    "label": "FbxGetFreeHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxFreeProc)",
    "insertText": "FbxGetFreeHandler()"
  },
  {
    "label": "FbxGetDefaultMallocHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxMallocProc)",
    "insertText": "FbxGetDefaultMallocHandler()"
  },
  {
    "label": "FbxGetDefaultCallocHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxCallocProc)",
    "insertText": "FbxGetDefaultCallocHandler()"
  },
  {
    "label": "FbxGetDefaultReallocHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxReallocProc)",
    "insertText": "FbxGetDefaultReallocHandler()"
  },
  {
    "label": "FbxGetDefaultFreeHandler()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxFreeProc)",
    "insertText": "FbxGetDefaultFreeHandler()"
  },
  {
    "label": "FbxAllocSize()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS FBXSDK_DLL size_t)",
    "insertText": "FbxAllocSize(size_t pNbItems, size_t pItemSize)"
  },
  {
    "label": "FbxMalloc()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void*)",
    "insertText": "FbxMalloc(size_t pSize)"
  },
  {
    "label": "FbxCalloc()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void*)",
    "insertText": "FbxCalloc(size_t pCount, size_t pSize)"
  },
  {
    "label": "FbxRealloc()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void*)",
    "insertText": "FbxRealloc(void* pData, size_t pSize)"
  },
  {
    "label": "FbxFree()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxFree(void* pData)"
  },
  {
    "label": "FbxStrDup()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL char*)",
    "insertText": "FbxStrDup(const char* pString)"
  },
  {
    "label": "FbxStrDupWC()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL wchar_t*)",
    "insertText": "FbxStrDupWC(const wchar_t* pString)"
  },
  {
    "label": "FbxMallocDebug()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void*)",
    "insertText": "FbxMallocDebug(size_t pSize, int pBlock, const char* pFile, int pLine)"
  },
  {
    "label": "FbxCallocDebug()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void*)",
    "insertText": "FbxCallocDebug(size_t pCount, size_t pSize, int pBlock, const char* pFile, int pLine)"
  },
  {
    "label": "FbxReallocDebug()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void*)",
    "insertText": "FbxReallocDebug(void* pData, size_t pSize, int pBlock, const char* pFile, int pLine)"
  },
  {
    "label": "FbxFreeDebug()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxFreeDebug(void* pData, int pBlock)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(FBXSDK_ALLOC_DEBUG) #define FbxMalloc(s) FbxMallocDebug(s, _NORMAL_BLOCK, __FILE__, __LINE__) #define FbxCalloc(c, s) FbxCallocDebug(c, s, _NORMAL_BLOCK, __FILE__, __LINE__) #define FbxRealloc(p, s) FbxReallocDebug(p, s, _NORMAL_BLOCK, __FILE__, __LINE__) #define FbxFree(p) FbxFreeDebug(p, _NORMAL_BLOCK)"
  },
  {
    "label": "DeleteIt()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "DeleteIt(Type** pPtr)"
  },
  {
    "label": "FbxDelete()",
    "kind": "Method",
    "detail": "Function (delete [ ]* pPtr ;* pPtr = NULL ; } } } ; template<T> void)",
    "insertText": "FbxDelete(T* p)"
  },
  {
    "label": "FbxDelete()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "FbxDelete(const T* p)"
  },
  {
    "label": "DeleteIt()",
    "kind": "Method",
    "detail": "Function (template<class Type> class FbxDeletionPolicyDelete { public : void)",
    "insertText": "DeleteIt(Type** mPtr)"
  },
  {
    "label": "FbxDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxDelete(*mPtr)"
  },
  {
    "label": "FbxFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxFree(*pPtr)"
  },
  {
    "label": "FbxAutoPtr()",
    "kind": "Method",
    "detail": "Function (* pPtr = NULL ; } } } ; template<class Type,class Policy = FbxDeletionPolicyDefault<Type>> class FbxAutoPtr { public :)",
    "insertText": "FbxAutoPtr(Type* pPtr=0) : mPtr(pPtr)"
  },
  {
    "label": "FbxAutoPtr()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FbxAutoPtr()"
  },
  {
    "label": "DeleteIt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteIt(&mPtr)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} Type*)",
    "insertText": "Get()"
  },
  {
    "label": "FBX_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBX_ASSERT(pPtr == 0 || pPtr != mPtr)"
  },
  {
    "label": "Policy()",
    "kind": "Method",
    "detail": "Function (FbxAutoPtr<Type,)",
    "insertText": "Policy(pPtr).Swap(*this)"
  },
  {
    "label": "Swap()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Swap(FbxAutoPtr& pOther)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (Type* TmpPtr = pOther . mPtr ; pOther . mPtr = mPtr ; mPtr = TmpPtr ; } Type*)",
    "insertText": "Release()"
  },
  {
    "label": "FbxAutoPtr()",
    "kind": "Method",
    "detail": "Function (Type* TmpPtr = mPtr ; mPtr = NULL ; return TmpPtr ; } # ifndef DOXYGEN_SHOULD_SKIP_THIS private :)",
    "insertText": "FbxAutoPtr(const FbxAutoPtr&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxAutoPtr&)",
    "insertText": "operator(const FbxAutoPtr&)"
  },
  {
    "label": "FbxAutoFreePtr()",
    "kind": "Method",
    "detail": "Function (Type* mPtr ; # endif } ; template<class Type> class FbxAutoFreePtr : public FbxAutoPtr<Type,FbxDeletionPolicyFree<Type>> { public :)",
    "insertText": "FbxAutoFreePtr(Type* pPtr=0) : FbxAutoPtr<Type, FbxDeletionPolicyFree<Type> >(pPtr)"
  },
  {
    "label": "FbxAutoDeletePtr()",
    "kind": "Method",
    "detail": "Function (} } ; template<class Type> class FbxAutoDeletePtr : public FbxAutoPtr<Type,FbxDeletionPolicyDelete<Type>> { public :)",
    "insertText": "FbxAutoDeletePtr(Type* pPtr=0) : FbxAutoPtr<Type, FbxDeletionPolicyDelete<Type> >(pPtr)"
  },
  {
    "label": "FbxAutoDestroyPtr()",
    "kind": "Method",
    "detail": "Function (} } ; template<class Type> class FbxAutoDestroyPtr : public FbxAutoPtr<Type,FbxDeletionPolicyObject<Type>> { public :)",
    "insertText": "FbxAutoDestroyPtr(Type* pPtr=0) : FbxAutoPtr<Type, FbxDeletionPolicyObject<Type> >(pPtr)"
  },
  {
    "label": "RefCount()",
    "kind": "Method",
    "detail": "Function (} } ; class RefCount { public :)",
    "insertText": "RefCount()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "IncRef()",
    "kind": "Method",
    "detail": "Function (count = 0 ; } void)",
    "insertText": "IncRef()"
  },
  {
    "label": "DecRef()",
    "kind": "Method",
    "detail": "Function (count + + ; } int)",
    "insertText": "DecRef()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (count - - ;)",
    "insertText": "if(count < 0)"
  },
  {
    "label": "FbxSharedPtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FbxSharedPtr(Type* pPtr) : mPtr(pPtr), mRef(0)"
  },
  {
    "label": "mRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mRef(RefCount*)FbxMalloc(sizeof(RefCount))"
  },
  {
    "label": "FbxSharedPtr()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "FbxSharedPtr(const FbxSharedPtr& pSPtr) : mPtr(pSPtr.mPtr), mRef(pSPtr.mRef)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FbxSharedPtr&)",
    "insertText": "operator(const FbxSharedPtr& pSPtr)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FBX_ASSERT()",
    "kind": "Method",
    "detail": "Function (mPtr = pSPtr . mPtr ; mRef = pSPtr . mRef ;)",
    "insertText": "FBX_ASSERT(mRef != NULL)"
  },
  {
    "label": "FbxSharedPtr()",
    "kind": "Method",
    "detail": "Function (} } return* this ; } ~)",
    "insertText": "FbxSharedPtr()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "FBX_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBX_ASSERT(mPtr != 0)"
  },
  {
    "label": "FbxFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxFree(mRef)"
  },
  {
    "label": "FbxSharedFreePtr()",
    "kind": "Method",
    "detail": "Function (mRef = NULL ; } } } Type* mPtr ; RefCount* mRef ; # endif } ; template<class Type> class FbxSharedFreePtr : public FbxSharedPtr<Type,FbxDeletionPolicyFree<Type>> { public :)",
    "insertText": "FbxSharedFreePtr(Type* pPtr=0) : FbxSharedPtr<Type, FbxDeletionPolicyFree<Type> >(pPtr)"
  },
  {
    "label": "FbxSharedDeletePtr()",
    "kind": "Method",
    "detail": "Function (} } ; template<class Type> class FbxSharedDeletePtr : public FbxSharedPtr<Type,FbxDeletionPolicyDelete<Type>> { public :)",
    "insertText": "FbxSharedDeletePtr(Type* pPtr=0) : FbxSharedPtr<Type, FbxDeletionPolicyDelete<Type> >(pPtr)"
  },
  {
    "label": "FbxSharedDestroyPtr()",
    "kind": "Method",
    "detail": "Function (} } ; template<class Type> class FbxSharedDestroyPtr : public FbxSharedPtr<Type,FbxDeletionPolicyObject<Type>> { public :)",
    "insertText": "FbxSharedDestroyPtr(Type* pPtr=0) : FbxSharedPtr<Type, FbxDeletionPolicyObject<Type> >(pPtr)"
  }
]