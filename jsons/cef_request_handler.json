[
  {
    "label": "CefSelectClientCertificateCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefSelectClientCertificateCallback"
  },
  {
    "label": "CefRequestHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefRequestHandler"
  },
  {
    "label": "Select()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_REQUEST_HANDLER_H_ # define CEF_INCLUDE_CEF_REQUEST_HANDLER_H_ # pragma once # include<vector> # include \" include / cef_auth_callback . h \" # include \" include / cef_base . h \" # include \" include / cef_browser . h \" # include \" include / cef_frame . h \" # include \" include / cef_request . h \" # include \" include / cef_request_callback . h \" # include \" include / cef_resource_request_handler . h \" # include \" include / cef_ssl_info . h \" # include \" include / cef_x509_certificate . h \" class CefSelectClientCertificateCallback : public CefBaseRefCounted { public : void)",
    "insertText": "Select(CefRefPtr<CefX509Certificate> cert)"
  },
  {
    "label": "OnBeforeBrowse()",
    "kind": "Method",
    "detail": "Function (} ; class CefRequestHandler : public CefBaseRefCounted { public : typedef cef_termination_status_t TerminationStatus ; typedef cef_window_open_disposition_t WindowOpenDisposition ; typedef std::vector<CefRefPtr<CefX509Certificate>> X509CertificateList ; bool)",
    "insertText": "OnBeforeBrowse(CefRefPtr<CefBrowser> browser, CefRefPtr<CefFrame> frame, CefRefPtr<CefRequest> request, bool user_gesture, bool is_redirect)"
  },
  {
    "label": "OnRenderViewReady()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnRenderViewReady(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "OnRenderProcessTerminated()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnRenderProcessTerminated(CefRefPtr<CefBrowser> browser, TerminationStatus status)"
  },
  {
    "label": "OnDocumentAvailableInMainFrame()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnDocumentAvailableInMainFrame(CefRefPtr<CefBrowser> browser)"
  }
]