[
  {
    "label": "FArenaParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FArenaParams"
  },
  {
    "label": "CORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CORE_API"
  },
  {
    "label": "FGlobalRecycler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGlobalRecycler"
  },
  {
    "label": "FPoolInfoLarge",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoolInfoLarge"
  },
  {
    "label": "FPoolInfoSmall",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoolInfoSmall"
  },
  {
    "label": "FPoolTable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoolTable"
  },
  {
    "label": "PoolHashBucket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PoolHashBucket"
  },
  {
    "label": "Private",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Private"
  },
  {
    "label": "FGPUMemoryBlockProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUMemoryBlockProxy"
  },
  {
    "label": "FFreeBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreeBlock"
  },
  {
    "label": "FPoolTable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoolTable"
  },
  {
    "label": "FPtrToPoolMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPtrToPoolMapping"
  },
  {
    "label": "FBundleNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBundleNode"
  },
  {
    "label": "FBundle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBundle"
  },
  {
    "label": "FFreeBlockList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreeBlockList"
  },
  {
    "label": "FPerThreadFreeBlockLists",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerThreadFreeBlockLists"
  },
  {
    "label": "FGlobalRecycler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGlobalRecycler"
  },
  {
    "label": "FPaddedBundlePointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPaddedBundlePointer"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "ObtainPartial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ObtainPartial(FArenaParams& LocalArenaParams, FGlobalRecycler& GGlobalRecycler, uint32 InPoolIndex)"
  },
  {
    "label": "SetTLS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTLS(FMallocBinnedGPU& Allocator)"
  },
  {
    "label": "ClearTLS()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "ClearTLS(FMallocBinnedGPU& Allocator)"
  },
  {
    "label": "FMallocBinnedGPU()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMallocBinnedGPU()"
  },
  {
    "label": "InitMallocBinned()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitMallocBinned()"
  },
  {
    "label": "GetAllocationSizeExternal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetAllocationSizeExternal(Ptr, SizeOut)"
  },
  {
    "label": "FlushCurrentThreadCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCurrentThreadCache()"
  },
  {
    "label": "FreeExternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeExternal(void *Ptr)"
  },
  {
    "label": "GetAllocationSizeExternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAllocationSizeExternal(void* Ptr, SIZE_T& SizeOut)"
  },
  {
    "label": "GetTotalAllocatedSmallPoolMemory()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetTotalAllocatedSmallPoolMemory()"
  },
  {
    "label": "Commit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Commit(uint32 InPoolIndex, void *Ptr, SIZE_T Size)"
  },
  {
    "label": "Decommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decommit(uint32 InPoolIndex, void *Ptr, SIZE_T Size)"
  }
]