[
  {
    "label": "FBufferLinearEase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBufferLinearEase"
  },
  {
    "label": "BufferLerper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BufferLerper"
  },
  {
    "label": "Apply2ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply2ChannelGain(FAlignedFloatBuffer& StereoBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "Apply2ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply2ChannelGain(float* RESTRICT StereoBuffer, int32 NumSamples, const float* RESTRICT Gains)"
  },
  {
    "label": "Apply2ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply2ChannelGain(FAlignedFloatBuffer& StereoBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Apply2ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply2ChannelGain(float* RESTRICT StereoBuffer, int32 NumSamples, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "MixMonoTo2ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo2ChannelsFast(const FAlignedFloatBuffer& MonoBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "MixMonoTo2ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo2ChannelsFast(const float* RESTRICT MonoBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT Gains)"
  },
  {
    "label": "MixMonoTo2ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo2ChannelsFast(const FAlignedFloatBuffer& MonoBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "MixMonoTo2ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo2ChannelsFast(const float* RESTRICT MonoBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "MixMonoTo2ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo2ChannelsFast(const FAlignedFloatBuffer& MonoBuffer, FAlignedFloatBuffer& DestinationBuffer)"
  },
  {
    "label": "MixMonoTo2ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo2ChannelsFast(const float* RESTRICT MonoBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames)"
  },
  {
    "label": "Mix2ChannelsTo2ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo2ChannelsFast(const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "Mix2ChannelsTo2ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo2ChannelsFast(const float* RESTRICT SourceBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT Gains)"
  },
  {
    "label": "Mix2ChannelsTo2ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo2ChannelsFast(const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Mix2ChannelsTo2ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo2ChannelsFast(const float* RESTRICT SourceBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Apply4ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply4ChannelGain(FAlignedFloatBuffer& InterleavedBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "Apply4ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply4ChannelGain(float* RESTRICT InterleavedBuffer, int32 NumSamples, const float* RESTRICT Gains)"
  },
  {
    "label": "Apply4ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply4ChannelGain(FAlignedFloatBuffer& InterleavedBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Apply4ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply4ChannelGain(float* RESTRICT InterleavedBuffer, int32 NumSamples, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "MixMonoTo4ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo4ChannelsFast(const FAlignedFloatBuffer& MonoBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "MixMonoTo4ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo4ChannelsFast(const float* RESTRICT MonoBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT Gains)"
  },
  {
    "label": "MixMonoTo4ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo4ChannelsFast(const FAlignedFloatBuffer& MonoBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "MixMonoTo4ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo4ChannelsFast(const float* RESTRICT MonoBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Mix2ChannelsTo4ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo4ChannelsFast(const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "Mix2ChannelsTo4ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo4ChannelsFast(const float* RESTRICT SourceBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT Gains)"
  },
  {
    "label": "Mix2ChannelsTo4ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo4ChannelsFast(const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Mix2ChannelsTo4ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo4ChannelsFast(const float* RESTRICT SourceBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Apply6ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply6ChannelGain(FAlignedFloatBuffer& InterleavedBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "Apply6ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply6ChannelGain(float* RESTRICT InterleavedBuffer, int32 NumSamples, const float* RESTRICT Gains)"
  },
  {
    "label": "Apply6ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply6ChannelGain(FAlignedFloatBuffer& InterleavedBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Apply6ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply6ChannelGain(float* RESTRICT InterleavedBuffer, int32 NumSamples, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "MixMonoTo6ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo6ChannelsFast(const FAlignedFloatBuffer& MonoBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "MixMonoTo6ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo6ChannelsFast(const float* RESTRICT MonoBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT Gains)"
  },
  {
    "label": "MixMonoTo6ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo6ChannelsFast(const FAlignedFloatBuffer& MonoBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "MixMonoTo6ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo6ChannelsFast(const float* RESTRICT MonoBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Mix2ChannelsTo6ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo6ChannelsFast(const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "Mix2ChannelsTo6ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo6ChannelsFast(const float* RESTRICT SourceBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT Gains)"
  },
  {
    "label": "Mix2ChannelsTo6ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo6ChannelsFast(const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Mix2ChannelsTo6ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo6ChannelsFast(const float* RESTRICT SourceBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Apply8ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply8ChannelGain(FAlignedFloatBuffer& InterleavedBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "Apply8ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply8ChannelGain(float* RESTRICT InterleavedBuffer, int32 NumSamples, const float* RESTRICT Gains)"
  },
  {
    "label": "Apply8ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply8ChannelGain(FAlignedFloatBuffer& InterleavedBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Apply8ChannelGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply8ChannelGain(float* RESTRICT InterleavedBuffer, int32 NumSamples, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "MixMonoTo8ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo8ChannelsFast(const FAlignedFloatBuffer& MonoBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "MixMonoTo8ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo8ChannelsFast(const float* RESTRICT MonoBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT Gains)"
  },
  {
    "label": "MixMonoTo8ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo8ChannelsFast(const FAlignedFloatBuffer& MonoBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "MixMonoTo8ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixMonoTo8ChannelsFast(const float* RESTRICT MonoBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Mix2ChannelsTo8ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo8ChannelsFast(const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "Mix2ChannelsTo8ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo8ChannelsFast(const float* RESTRICT SourceBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT Gains)"
  },
  {
    "label": "Mix2ChannelsTo8ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo8ChannelsFast(const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "Mix2ChannelsTo8ChannelsFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix2ChannelsTo8ChannelsFast(const float* RESTRICT SourceBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "DownmixBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DownmixBuffer(int32 NumSourceChannels, int32 NumDestinationChannels, const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& DestinationBuffer, const float* RESTRICT Gains)"
  },
  {
    "label": "DownmixBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DownmixBuffer(int32 NumSourceChannels, int32 NumDestinationChannels, const float* RESTRICT SourceBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, const float* RESTRICT Gains)"
  },
  {
    "label": "DownmixBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DownmixBuffer(int32 NumSourceChannels, int32 NumDestinationChannels, const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& DestinationBuffer, float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "DownmixBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DownmixBuffer(int32 NumSourceChannels, int32 NumDestinationChannels, const float* RESTRICT SourceBuffer, float* RESTRICT DestinationBuffer, int32 NumFrames, float* RESTRICT StartGains, const float* RESTRICT EndGains)"
  },
  {
    "label": "DownmixAndSumIntoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DownmixAndSumIntoBuffer(int32 NumSourceChannels, int32 NumDestinationChannels, const FAlignedFloatBuffer& SourceBuffer, FAlignedFloatBuffer& BufferToSumTo, const float* RESTRICT Gains)"
  },
  {
    "label": "DownmixAndSumIntoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DownmixAndSumIntoBuffer(int32 NumSourceChannels, int32 NumDestinationChannels, const float* RESTRICT SourceBuffer, float* RESTRICT BufferToSumTo, int32 NumFrames, const float* RESTRICT Gains)"
  },
  {
    "label": "BufferInterleave2ChannelFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferInterleave2ChannelFast(const FAlignedFloatBuffer& InBuffer1, const FAlignedFloatBuffer& InBuffer2, FAlignedFloatBuffer& OutBuffer)"
  },
  {
    "label": "BufferInterleave2ChannelFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferInterleave2ChannelFast(const float* RESTRICT InBuffer1, const float* RESTRICT InBuffer2, float* RESTRICT OutBuffer, const int32 InNum)"
  },
  {
    "label": "BufferDeinterleave2ChannelFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferDeinterleave2ChannelFast(const FAlignedFloatBuffer& InBuffer, FAlignedFloatBuffer& OutBuffer1, FAlignedFloatBuffer& OutBuffer2)"
  },
  {
    "label": "BufferDeinterleave2ChannelFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferDeinterleave2ChannelFast(const float* RESTRICT InBuffer, float* RESTRICT OutBuffer1, float* RESTRICT OutBuffer2, const int32 InNum)"
  },
  {
    "label": "BufferSum2ChannelToMonoFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferSum2ChannelToMonoFast(const FAlignedFloatBuffer& InSamples, FAlignedFloatBuffer& OutSamples)"
  },
  {
    "label": "BufferSum2ChannelToMonoFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferSum2ChannelToMonoFast(const float* RESTRICT InSamples, float* RESTRICT OutSamples, const int32 InNumFrames)"
  },
  {
    "label": "FBufferLinearEase()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FBufferLinearEase()"
  },
  {
    "label": "FBufferLinearEase()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FBufferLinearEase(const FAlignedFloatBuffer& InSourceValues, const FAlignedFloatBuffer& InTargetValues, int32 InLerpLength)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FAlignedFloatBuffer& InSourceValues, const FAlignedFloatBuffer& InTargetValues, int32 InLerpLength)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Update(FAlignedFloatBuffer& InSourceValues)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Update(uint32 StepsToJumpForward, FAlignedFloatBuffer& InSourceValues)"
  }
]