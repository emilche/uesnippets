[
  {
    "label": "FMessageEndpoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMessageEndpoint"
  },
  {
    "label": "IAssetRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetRegistry"
  },
  {
    "label": "IMessageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageContext"
  },
  {
    "label": "ICookOnTheFlyModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICookOnTheFlyModule"
  },
  {
    "label": "ICookOnTheFlyServerConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICookOnTheFlyServerConnection"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FZenCookOnTheFlyRegisterServiceMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FZenCookOnTheFlyRegisterServiceMessage"
  },
  {
    "label": "FExternalCookOnTheFlyServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalCookOnTheFlyServer"
  },
  {
    "label": "FExternalCookOnTheFlyServer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" HAL / CriticalSection . h \" # include \" HAL / Platform . h \" # include \" Stats / Stats2 . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" # include \" TickableEditorObject . h \" # include \" UObject / NameTypes . h \" # include \" ExternalCookOnTheFlyServer . generated . h \" class FMessageEndpoint ; class IAssetRegistry ; class IMessageContext ; namespace UE::Cook { class ICookOnTheFlyModule ; } namespace UE::Cook { class ICookOnTheFlyServerConnection ; } struct FAssetData ; struct FZenCookOnTheFlyRegisterServiceMessage ; class FExternalCookOnTheFlyServer : public FTickableEditorObject { public :)",
    "insertText": "FExternalCookOnTheFlyServer()"
  },
  {
    "label": "HandleRegisterServiceMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRegisterServiceMessage(const FZenCookOnTheFlyRegisterServiceMessage& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "GenerateServiceId()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GenerateServiceId()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Tick(float DeltaSeconds)"
  },
  {
    "label": "IsTickable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTickable()"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "AssetUpdatedOnDisk()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AssetUpdatedOnDisk(const FAssetData& AssetData)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (UE::Cook::ICookOnTheFlyModule& CookOnTheFlyModule ; IAssetRegistry& AssetRegistry ; TSharedPtr<FMessageEndpoint,ESPMode::ThreadSafe> MessageEndpoint ; const FString ServiceId ; TUniquePtr<UE::Cook::ICookOnTheFlyServerConnection> CookOnTheFlyServerConnection ; FCriticalSection AllPackagesToRecookCritical ; TSet<FName> AllPackagesToRecook ; } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category = \"Message\")"
  }
]