[
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FAnimInstanceProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimInstanceProxy"
  },
  {
    "label": "FAnimNotifyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyEvent"
  },
  {
    "label": "UMirrorDataTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMirrorDataTable"
  },
  {
    "label": "FAnimTickRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimTickRecord"
  },
  {
    "label": "FAnimNotifyEventReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyEventReference"
  },
  {
    "label": "FAnimNotifyArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyArray"
  },
  {
    "label": "FAnimNotifyContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyContext"
  },
  {
    "label": "FAnimNotifyQueue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyQueue"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Math / RandomStream . h \" # include \" Animation / AnimTypes . h \" # include \" Animation / AnimNodeMessages . h \" # include \" AnimNotifyQueue . generated . h \" class USkeletalMeshComponent ; struct FAnimInstanceProxy ; struct FAnimNotifyEvent ; class UMirrorDataTable ; struct FAnimTickRecord ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FAnimNotifyEventReference()"
  },
  {
    "label": "FAnimNotifyEventReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimNotifyEventReference(const FAnimNotifyEvent* InNotify, const UObject* InNotifySource) : Notify(InNotify) , MirrorTable(nullptr) , NotifySource(InNotifySource)"
  },
  {
    "label": "FAnimNotifyEventReference()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAnimNotifyEventReference(const FAnimNotifyEvent* InNotify, const UObject* InNotifySource, const UMirrorDataTable* MirrorDataTable) : Notify(InNotify) , MirrorTable(MirrorDataTable) , NotifySource(InNotifySource)"
  },
  {
    "label": "GetNotify()",
    "kind": "Method",
    "detail": "Function (} const FAnimNotifyEvent*)",
    "insertText": "GetNotify()"
  },
  {
    "label": "GetMirrorDataTable()",
    "kind": "Method",
    "detail": "Function (Notify = InNotify ; } } const UMirrorDataTable*)",
    "insertText": "GetMirrorDataTable()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FAnimNotifyEventReference& Lhs, const FAnimNotifyEventReference& Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FAnimNotifyEventReference& Lhs, const FAnimNotifyEvent& Rhs)"
  },
  {
    "label": "GetContextData()",
    "kind": "Method",
    "detail": "Function (template<Type> const Type*)",
    "insertText": "GetContextData()"
  },
  {
    "label": "GatherTickRecordData()",
    "kind": "Method",
    "detail": "Function (} } } return nullptr ; } void)",
    "insertText": "GatherTickRecordData(const FAnimTickRecord& InTickRecord)"
  },
  {
    "label": "AddContextData()",
    "kind": "Method",
    "detail": "Function (template<Type,. . . TArgs> void)",
    "insertText": "AddContextData(TArgs&&... Args)"
  },
  {
    "label": "IAnimNotifyEventContextDataInterface()",
    "kind": "Method",
    "detail": "Function (ContextData = MakeShared<TArray<TUniquePtr<const UE::)",
    "insertText": "IAnimNotifyEventContextDataInterface()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} ContextData ->)",
    "insertText": "Add(MakeUnique<Type>(Forward<TArgs>(Args)...))"
  },
  {
    "label": "GetSourceObject()",
    "kind": "Method",
    "detail": "Function (} const UObject*)",
    "insertText": "GetSourceObject()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (float CurrentAnimTime = 0 . 0 f ; bool bActiveContext = false ; } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(transient)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FAnimNotifyContext()"
  },
  {
    "label": "FAnimNotifyContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAnimNotifyContext(const FAnimTickRecord& InTickRecord) : TickRecord(&InTickRecord)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FAnimNotifyQueue() : PredictedLODLevel(-1)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (RandomStream .)",
    "insertText": "Initialize(0x05629063)"
  },
  {
    "label": "PassesFiltering()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "PassesFiltering(const FAnimNotifyEvent* Notify)"
  },
  {
    "label": "PassesChanceOfTriggering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesChanceOfTriggering(const FAnimNotifyEvent* Event)"
  },
  {
    "label": "AddAnimNotify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimNotify(const FAnimNotifyEvent* Notify, const UObject* NotifySource)"
  },
  {
    "label": "AddAnimNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimNotifies(bool bSrcIsLeader, const TArray<FAnimNotifyEventReference>& NewNotifies, const float InstanceWeight)"
  },
  {
    "label": "AddAnimNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimNotifies(bool bSrcIsLeader, const TMap<FName, TArray<FAnimNotifyEventReference>>& NewNotifies, const float InstanceWeight)"
  },
  {
    "label": "AddAnimNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimNotifies(const TArray<FAnimNotifyEventReference>& NewNotifies, const float InstanceWeight)"
  },
  {
    "label": "AddAnimNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimNotifies(true, NewNotifies, InstanceWeight)"
  },
  {
    "label": "AddAnimNotifies()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddAnimNotifies(const TMap<FName, TArray<FAnimNotifyEventReference>>& NewNotifies, const float InstanceWeight)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset(USkeletalMeshComponent* Component)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(const FAnimNotifyQueue& Queue)"
  },
  {
    "label": "ApplyMontageNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyMontageNotifies(const FAnimInstanceProxy& Proxy)"
  },
  {
    "label": "AddAnimNotifiesToDest()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddAnimNotifiesToDest(bool bSrcIsLeader, const TArray<FAnimNotifyEventReference>& NewNotifies, TArray<FAnimNotifyEventReference>& DestArray, const float InstanceWeight)"
  },
  {
    "label": "AddAnimNotifiesToDestNoFiltering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimNotifiesToDestNoFiltering(const TArray<FAnimNotifyEventReference>& NewNotifies, TArray<FAnimNotifyEventReference>& DestArray)"
  }
]