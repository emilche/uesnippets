[
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FAnimInstanceProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimInstanceProxy"
  },
  {
    "label": "FAnimNotifyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyEvent"
  },
  {
    "label": "UMirrorDataTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMirrorDataTable"
  },
  {
    "label": "FAnimTickRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimTickRecord"
  },
  {
    "label": "FAnimNotifyEventReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyEventReference"
  },
  {
    "label": "FAnimNotifyArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyArray"
  },
  {
    "label": "FAnimNotifyContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyContext"
  },
  {
    "label": "FAnimNotifyQueue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyQueue"
  },
  {
    "label": "GatherTickRecordData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherTickRecordData(const FAnimTickRecord& InTickRecord)"
  },
  {
    "label": "AddAnimNotify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimNotify(const FAnimNotifyEvent* Notify, const UObject* NotifySource)"
  },
  {
    "label": "AddAnimNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimNotifies(bool bSrcIsLeader, const TArray<FAnimNotifyEventReference>& NewNotifies, const float InstanceWeight)"
  },
  {
    "label": "AddAnimNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimNotifies(bool bSrcIsLeader, const TMap<FName, TArray<FAnimNotifyEventReference>>& NewNotifies, const float InstanceWeight)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(USkeletalMeshComponent* Component)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(const FAnimNotifyQueue& Queue)"
  },
  {
    "label": "ApplyMontageNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyMontageNotifies(const FAnimInstanceProxy& Proxy)"
  },
  {
    "label": "AddAnimNotifiesToDest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimNotifiesToDest(bool bSrcIsLeader, const TArray<FAnimNotifyEventReference>& NewNotifies, TArray<FAnimNotifyEventReference>& DestArray, const float InstanceWeight)"
  }
]