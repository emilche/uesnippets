[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FRepChangedPropertyTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRepChangedPropertyTracker"
  },
  {
    "label": "FRepChangedPropertyTracker()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" UObject / CoreNet . h \" # include \" Delegates / Delegate . h \" class FArchive ; class UObject ; class FRepChangedPropertyTracker { public :)",
    "insertText": "FRepChangedPropertyTracker()"
  },
  {
    "label": "FRepChangedPropertyTracker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRepChangedPropertyTracker(FCustomPropertyConditionState&& InActiveState)"
  },
  {
    "label": "CountBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountBytes(FArchive& Ar)"
  },
  {
    "label": "IsParentActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsParentActive(uint16 ParentIndex)"
  },
  {
    "label": "GetParentCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetParentCount()"
  },
  {
    "label": "GetDynamicCondition()",
    "kind": "Method",
    "detail": "Function (} ELifetimeCondition)",
    "insertText": "GetDynamicCondition(uint16 ParentIndex)"
  },
  {
    "label": "GetDynamicConditionChangeCounter()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetDynamicConditionChangeCounter()"
  },
  {
    "label": "SetDynamicCondition()",
    "kind": "Method",
    "detail": "Function (} private : UE::Net::Private::FNetPropertyConditionManager ; void)",
    "insertText": "SetDynamicCondition(const UObject* OwningObject, const uint16 RepIndex, const ELifetimeCondition Condition)"
  },
  {
    "label": "SetCustomIsActiveOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomIsActiveOverride(const UObject* OwningObject, const uint16 RepIndex, const bool bIsActive)"
  }
]