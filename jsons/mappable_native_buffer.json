[
  {
    "label": "MappableNativeBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MappableNativeBuffer"
  },
  {
    "label": "MappableNativeBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MappableNativeBuffer"
  },
  {
    "label": "rtc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "rtc"
  },
  {
    "label": "ScaledBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScaledBuffer"
  },
  {
    "label": "rtc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "rtc"
  },
  {
    "label": "CreateMappableNativeFrame()",
    "kind": "Method",
    "detail": "Function (VideoFrame)",
    "insertText": "CreateMappableNativeFrame(int64_t ntp_time_ms,\n                                     VideoFrameBuffer::Type mappable_type,\n                                     int width,\n                                     int height)"
  },
  {
    "label": "GetMappableNativeBufferFromVideoFrame()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<MappableNativeBuffer>)",
    "insertText": "GetMappableNativeBufferFromVideoFrame(\n    const VideoFrame& frame)"
  },
  {
    "label": "ScaledBuffer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ScaledBuffer(rtc::scoped_refptr<MappableNativeBuffer> parent,\n                 int width,\n                 int height)"
  },
  {
    "label": "FullSizeBuffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<ScaledBuffer>)",
    "insertText": "FullSizeBuffer()"
  },
  {
    "label": "GetOrCreateMappedBuffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<VideoFrameBuffer>)",
    "insertText": "GetOrCreateMappedBuffer(int width,\n                                                               int height)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (mapped_buffers_)",
    "insertText": "RTC_GUARDED_BY(&lock_)"
  }
]