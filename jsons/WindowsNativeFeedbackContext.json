[
  {
    "label": "FWindowsNativeFeedbackContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindowsNativeFeedbackContext"
  },
  {
    "label": "FWindowParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWindowParams"
  },
  {
    "label": "FWindowsNativeFeedbackContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / FeedbackContext . h \" # include \" Windows / AllowWindowsPlatformTypes . h \" # include<CommCtrl . h> class FWindowsNativeFeedbackContext : public FFeedbackContext { public :)",
    "insertText": "FWindowsNativeFeedbackContext()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* V, ELogVerbosity::Type Verbosity, const FName& Category)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* V, ELogVerbosity::Type Verbosity, const FName& Category, double Time)"
  },
  {
    "label": "SerializeRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeRecord(const UE::FLogRecord& Record)"
  },
  {
    "label": "ReceivedUserCancel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReceivedUserCancel()"
  },
  {
    "label": "StartSlowTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartSlowTask(const FText& Task, bool bShouldShowCancelButton=false)"
  },
  {
    "label": "FinalizeSlowTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeSlowTask()"
  },
  {
    "label": "ProgressReported()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProgressReported(const float TotalProgressInterp, FText DisplayMessage)"
  },
  {
    "label": "GetContext()",
    "kind": "Method",
    "detail": "Function (FContextSupplier*)",
    "insertText": "GetContext()"
  },
  {
    "label": "SetContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContext(FContextSupplier* InSupplier)"
  },
  {
    "label": "CreateSlowTaskWindow()",
    "kind": "Method",
    "detail": "Function (private : struct FWindowParams { FWindowsNativeFeedbackContext* Context ; int32 ScaleX ; int32 ScaleY ; int32 StandardW ; int32 StandardH ; bool bLogVisible ; } ; const uint16 StatusCtlId = 2 0 0 ; const uint16 ProgressCtlId = 2 0 1 ; const uint16 ShowLogCtlId = 2 0 2 ; const uint16 LogOutputCtlId = 2 0 3 ; FContextSupplier* Context ; HANDLE hThread ; HANDLE hCloseEvent ; HANDLE hUpdateEvent ; FCriticalSection CriticalSection ; FString Status ; float Progress ; FString LogOutput ; bool bReceivedUserCancel ; bool bShowCancelButton ; void)",
    "insertText": "CreateSlowTaskWindow(const FText &InStatus, bool bInShowCancelButton)"
  },
  {
    "label": "DestroySlowTaskWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySlowTaskWindow()"
  },
  {
    "label": "SlowTaskThreadProc()",
    "kind": "Method",
    "detail": "Function (DWORD WINAPI)",
    "insertText": "SlowTaskThreadProc(void *Params)"
  },
  {
    "label": "SlowTaskWindowProc()",
    "kind": "Method",
    "detail": "Function (LRESULT CALLBACK)",
    "insertText": "SlowTaskWindowProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)"
  },
  {
    "label": "LayoutControls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LayoutControls(HWND hWnd, const FWindowParams* Params)"
  }
]