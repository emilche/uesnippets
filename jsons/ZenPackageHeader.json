[
  {
    "label": "FZenPackageHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FZenPackageHeader"
  },
  {
    "label": "MakeView()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" IO / PackageId . h \" # include \" Memory / MemoryFwd . h \" # include \" Serialization / AsyncLoading2 . h \" # include \" Serialization / MappedName . h \" # include \" UObject / NameTypes . h \" struct FZenPackageHeader { uint32 CookedHeaderSize = 0 ; uint32 ExportCount = 0 ; TOptional<FZenPackageVersioningInfo> VersioningInfo ; FNameMap NameMap ; FName PackageName ; const FZenPackageSummary* PackageSummary = nullptr ; TArrayView<const uint64> ImportedPublicExportHashes ; TArrayView<const FPackageObjectIndex> ImportMap ; TArrayView<const FExportMapEntry> ExportMap ; TArrayView<const FBulkDataMapEntry> BulkDataMap ; TArrayView<const FExportBundleEntry> ExportBundleEntries ; TArrayView<const FDependencyBundleHeader> DependencyBundleHeaders ; TArrayView<const FDependencyBundleEntry> DependencyBundleEntries ; TArray<FName> ImportedPackageNames ; FZenPackageHeader)",
    "insertText": "MakeView(FMemoryView Memory)"
  },
  {
    "label": "MakeView()",
    "kind": "Method",
    "detail": "Function (FZenPackageHeader)",
    "insertText": "MakeView(FMemoryView Memory, FString& OutError)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  }
]