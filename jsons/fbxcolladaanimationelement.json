[
  {
    "label": "AnimationElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AnimationElement"
  },
  {
    "label": "AnimationElement()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_FILEIO_COLLADA_ANIMATION_ELEMENT_H_ # define _FBXSDK_FILEIO_COLLADA_ANIMATION_ELEMENT_H_ # include<fbxsdk . h> # include<fbxsdk / fileio / collada / fbxcolladaelement . h> # include<map> # include<fbxsdk / fbxsdk_nsbegin . h> class AnimationElement : public ElementBase { public : typedef ElementBase base_type ;)",
    "insertText": "AnimationElement()"
  },
  {
    "label": "GetChannelCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetChannelCount()"
  },
  {
    "label": "FromCOLLADA()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromCOLLADA(xmlNode * pElement, const SourceElementMapType & pSourceElements)"
  },
  {
    "label": "FromFBX()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromFBX(const FbxAnimCurve * pCurve, double pUnitConversion = 1.0)"
  },
  {
    "label": "ToFBX()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToFBX(FbxAnimCurve * pFBXCurve, int pChannelIndex, double pUnitConversion = 1.0)"
  },
  {
    "label": "ToFBX()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToFBX(FbxNode * pFBXNode, FbxAnimLayer * pAnimLayer, double pUnitConversion = 1.0)"
  },
  {
    "label": "ToCOLLADA()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToCOLLADA(xmlNode * pAnimationLibrary, const char * pNodeID, const char * pAttributeSID)"
  }
]