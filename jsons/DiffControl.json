[
  {
    "label": "FReviewCommentsDiffControl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReviewCommentsDiffControl"
  },
  {
    "label": "SMultiLineEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableTextBox"
  },
  {
    "label": "FDiffResultItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiffResultItem"
  },
  {
    "label": "SBlueprintDiff",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlueprintDiff"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "FEdGraphEditAction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphEditAction"
  },
  {
    "label": "SCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCheckBox"
  },
  {
    "label": "FAsyncDetailViewDiff",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncDetailViewDiff"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "FMyBlueprintDiffControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMyBlueprintDiffControl"
  },
  {
    "label": "FSCSDiffControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSDiffControl"
  },
  {
    "label": "FPropertyTreeDiffPairs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTreeDiffPairs"
  },
  {
    "label": "FCDODiffControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCDODiffControl"
  },
  {
    "label": "FClassSettingsDiffControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassSettingsDiffControl"
  },
  {
    "label": "FBlueprintTypeDiffControl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintTypeDiffControl"
  },
  {
    "label": "FSubObjectDiff",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubObjectDiff"
  },
  {
    "label": "FGraphToDiff",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphToDiff"
  },
  {
    "label": "FCommentTreeEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCommentTreeEntry"
  },
  {
    "label": "FCommentDraftTreeEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCommentDraftTreeEntry"
  },
  {
    "label": "IDiffControl()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" SCSDiff . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_5 # include \" CoreMinimal . h \" # include \" Algo / Transform . h \" # endif # include \" DetailsDiff . h \" # include \" DiffResults . h \" # include \" IAssetTypeActions . h \" # include \" IDetailsView . h \" # include \" ReviewComments . h \" # include \" Widgets / SWidget . h \" # include \" DiffUtils . h \" struct FReviewCommentsDiffControl ; class SMultiLineEditableTextBox ; struct FDiffResultItem ; class SBlueprintDiff ; class UEdGraph ; struct FEdGraphEditAction ; class SCheckBox ; class FAsyncDetailViewDiff ; class IDiffControl { public : ~)",
    "insertText": "IDiffControl()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Tick()"
  },
  {
    "label": "GenerateTreeEntries()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "GenerateTreeEntries(TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutTreeEntries, TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutRealDifferences)"
  },
  {
    "label": "GenerateSimpleDiffWidget()",
    "kind": "Method",
    "detail": "Function (FText RightRevision ; TSharedRef<SWidget>)",
    "insertText": "GenerateSimpleDiffWidget(FText DiffText)"
  },
  {
    "label": "GenerateObjectDiffWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateObjectDiffWidget(FSingleObjectDiffEntry DiffEntry, FText ObjectName)"
  },
  {
    "label": "EnableComments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableComments(TWeakPtr<STreeView<TSharedPtr<FBlueprintDifferenceTreeEntry>>> TreeView, const UObject* OldObject, const UObject* NewObject)"
  },
  {
    "label": "EnableComments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableComments(TWeakPtr<STreeView<TSharedPtr<FBlueprintDifferenceTreeEntry>>> TreeView, const TArray<const UObject*>& Objects)"
  },
  {
    "label": "EnableComments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableComments(TWeakPtr<STreeView<TSharedPtr<FBlueprintDifferenceTreeEntry>>> TreeView)"
  },
  {
    "label": "GenerateCategoryCommentTreeEntries()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "GenerateCategoryCommentTreeEntries(TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& , TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutRealDifferences, FString CategoryKey)"
  },
  {
    "label": "FMyBlueprintDiffControl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FReviewCommentsDiffControl> ReviewCommentsDiffControl ; } ; class FMyBlueprintDiffControl : public TSharedFromThis<FMyBlueprintDiffControl>,public IDiffControl { public :)",
    "insertText": "FMyBlueprintDiffControl(const UBlueprint* InOldBlueprint, const UBlueprint* InNewBlueprint, FOnDiffEntryFocused InSelectionCallback)"
  },
  {
    "label": "FSCSDiffControl()",
    "kind": "Method",
    "detail": "Function (private : FOnDiffEntryFocused SelectionCallback ; const UBlueprint* OldBlueprint ; const UBlueprint* NewBlueprint ; } ; class FSCSDiffControl : public TSharedFromThis<FSCSDiffControl>,public IDiffControl { public :)",
    "insertText": "FSCSDiffControl(const UBlueprint* InOldBlueprint, const UBlueprint* InNewBlueprint, FOnDiffEntryFocused InSelectionCallback)"
  },
  {
    "label": "OldTreeWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OldTreeWidget()"
  },
  {
    "label": "NewTreeWidget()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SWidget>)",
    "insertText": "NewTreeWidget()"
  },
  {
    "label": "FDetailsDiffControl()",
    "kind": "Method",
    "detail": "Function (private : FOnDiffEntryFocused SelectionCallback ; FSCSDiffRoot DifferingProperties ; FSCSDiff OldSCS ; FSCSDiff NewSCS ; } ; class FDetailsDiffControl : public TSharedFromThis<FDetailsDiffControl>,public IDiffControl { public :)",
    "insertText": "FDetailsDiffControl(const UObject* InOldObject, const UObject* InNewObject, FOnDiffEntryFocused InSelectionCallback, bool bPopulateOutTreeEntries)"
  },
  {
    "label": "GenerateTreeEntriesWithoutComments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateTreeEntriesWithoutComments(TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutTreeEntries, TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutRealDifferences)"
  },
  {
    "label": "InsertObject()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDetailsView>)",
    "insertText": "InsertObject(const UObject* Object, bool bScrollbarOnLeft = false, int32 Index = INDEX_NONE)"
  },
  {
    "label": "GetDetailsWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDetailsView>)",
    "insertText": "GetDetailsWidget(const UObject* Object)"
  },
  {
    "label": "TryGetDetailsWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IDetailsView>)",
    "insertText": "TryGetDetailsWidget(const UObject* Object)"
  },
  {
    "label": "GetDifferencesWithLeft()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FAsyncDetailViewDiff>)",
    "insertText": "GetDifferencesWithLeft(const UObject* Object)"
  },
  {
    "label": "GetDifferencesWithRight()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FAsyncDetailViewDiff>)",
    "insertText": "GetDifferencesWithRight(const UObject* Object)"
  },
  {
    "label": "IndexOfObject()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "IndexOfObject(const UObject* Object)"
  },
  {
    "label": "OnSelectDiffEntry()",
    "kind": "Method",
    "detail": "Function (DiffUtils::FOnGenerateCustomDiffEntries GenerateCustomEntriesCallback ; DiffUtils::FOnGenerateCustomDiffEntryWidget GenerateCustomEntryWidgetCallback ; DiffUtils::FOnOrganizeDiffEntries OrganizeEntriesCallback ; protected : void)",
    "insertText": "OnSelectDiffEntry(FPropertySoftPath PropertyName)"
  },
  {
    "label": "GetLinkedScrollRateAttribute()",
    "kind": "Method",
    "detail": "Function (TAttribute<TArray<FVector2f>>)",
    "insertText": "GetLinkedScrollRateAttribute(const TSharedRef<IDetailsView>& OldDetailsView, const TSharedRef<IDetailsView>& NewDetailsView)"
  },
  {
    "label": "GetLinkedScrollRate()",
    "kind": "Method",
    "detail": "Function (TArray<FVector2f>)",
    "insertText": "GetLinkedScrollRate(TSharedRef<IDetailsView> LeftDetailsView, TSharedRef<IDetailsView> RightDetailsView)"
  },
  {
    "label": "FCDODiffControl()",
    "kind": "Method",
    "detail": "Function (FOnDiffEntryFocused SelectionCallback ; TMap<const UObject*,FDetailsDiff> DetailsDiffs ; TArray<const UObject*> ObjectDisplayOrder ; struct FPropertyTreeDiffPairs { TSharedPtr<FAsyncDetailViewDiff> Left ; TSharedPtr<FAsyncDetailViewDiff> Right ; } ; TMap<const UObject*,FPropertyTreeDiffPairs> PropertyTreeDifferences ; TArray<TSharedPtr<FBlueprintDifferenceTreeEntry>> Children ; const bool bPopulateOutTreeEntries ; TSet<FPropertyPath> PropertyAllowList ; } ; class FCDODiffControl : public FDetailsDiffControl { public :)",
    "insertText": "FCDODiffControl(const UObject* InOldObject, const UObject* InNewObject, FOnDiffEntryFocused InSelectionCallback)"
  },
  {
    "label": "FClassSettingsDiffControl()",
    "kind": "Method",
    "detail": "Function (} ; class FClassSettingsDiffControl : public FDetailsDiffControl { public :)",
    "insertText": "FClassSettingsDiffControl(const UObject* InOldObject, const UObject* InNewObject, FOnDiffEntryFocused InSelectionCallback)"
  },
  {
    "label": "FSubObjectDiff()",
    "kind": "Method",
    "detail": "Function (} ; struct FBlueprintTypeDiffControl : public TSharedFromThis<FBlueprintTypeDiffControl>,public IDiffControl { struct FSubObjectDiff { FDiffSingleResult SourceResult ; FDetailsDiff OldDetails ; FDetailsDiff NewDetails ; TArray<TSharedPtr<FBlueprintDifferenceTreeEntry>> Diffs ;)",
    "insertText": "FSubObjectDiff(const FDiffSingleResult& InSourceResult, const UObject* OldObject, const UObject* NewObject) : SourceResult(InSourceResult) , OldDetails(OldObject, FDetailsDiff::FOnDisplayedPropertiesChanged()) , NewDetails(NewObject, FDetailsDiff::FOnDisplayedPropertiesChanged())"
  },
  {
    "label": "FBlueprintTypeDiffControl()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "FBlueprintTypeDiffControl(const UBlueprint* InBlueprintOld, const UBlueprint* InBlueprintNew, FOnDiffEntryFocused InSelectionCallback)"
  },
  {
    "label": "GenerateCategoryWidget()",
    "kind": "Method",
    "detail": "Function (const UBlueprint* BlueprintOld ; const UBlueprint* BlueprintNew ; TSharedPtr<SBox> OldDetailsBox ; TSharedPtr<SBox> NewDetailsBox ; private : TSharedRef<SWidget>)",
    "insertText": "GenerateCategoryWidget(bool bHasRealDiffs)"
  },
  {
    "label": "BuildDiffSourceArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildDiffSourceArray()"
  },
  {
    "label": "OnSelectSubobjectDiff()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectSubobjectDiff(FPropertySoftPath Identifier, TSharedPtr<FSubObjectDiff> SubObjectDiff)"
  },
  {
    "label": "FGraphToDiff()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FSubObjectDiff>> SubObjectDiffs ; TArray<TSharedPtr<FDiffResultItem>> DiffListSource ; FOnDiffEntryFocused SelectionCallback ; bool bDiffSucceeded ; } ; struct FGraphToDiff : public TSharedFromThis<FGraphToDiff>,IDiffControl {)",
    "insertText": "FGraphToDiff(SBlueprintDiff* DiffWidget, UEdGraph* GraphOld, UEdGraph* GraphNew, const FRevisionInfo& RevisionOld, const FRevisionInfo& RevisionNew)"
  },
  {
    "label": "FGraphToDiff()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FGraphToDiff()"
  },
  {
    "label": "GetGraphOld()",
    "kind": "Method",
    "detail": "Function (UEdGraph*)",
    "insertText": "GetGraphOld()"
  },
  {
    "label": "GetGraphNew()",
    "kind": "Method",
    "detail": "Function (UEdGraph*)",
    "insertText": "GetGraphNew()"
  },
  {
    "label": "GetToolTip()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FDiffResultItem>> DiffListSource ; TSharedPtr<TArray<FDiffSingleResult>> FoundDiffs ; int32 RealDifferencesStartIndex = INDEX_NONE ; private : FText)",
    "insertText": "GetToolTip()"
  },
  {
    "label": "GenerateCategoryWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateCategoryWidget()"
  },
  {
    "label": "OnGraphChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGraphChanged(const FEdGraphEditAction& Action)"
  },
  {
    "label": "FCommentTreeEntry()",
    "kind": "Method",
    "detail": "Function (class SBlueprintDiff* DiffWidget ; UEdGraph* GraphOld ; UEdGraph* GraphNew ; FRevisionInfo RevisionOld,RevisionNew ; FDelegateHandle OnGraphChangedDelegateHandle ; } ; class FCommentTreeEntry : public FBlueprintDifferenceTreeEntry,public TSharedFromThis<FCommentTreeEntry> { public :)",
    "insertText": "FCommentTreeEntry(TWeakPtr<FReviewCommentsDiffControl> InCommentsControl, const FReviewComment& InComment, const TArray<TSharedPtr<FBlueprintDifferenceTreeEntry>>& InChildren)"
  },
  {
    "label": "FCommentTreeEntry()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCommentTreeEntry()"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FCommentTreeEntry>)",
    "insertText": "Make(TWeakPtr<FReviewCommentsDiffControl> CommentsControl, const FReviewComment& Comment, const TArray<TSharedPtr<FBlueprintDifferenceTreeEntry>>& Children = {})"
  },
  {
    "label": "GetCommentIDChecked()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCommentIDChecked()"
  },
  {
    "label": "AwaitCommentPost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AwaitCommentPost()"
  },
  {
    "label": "CreateWidget()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "CreateWidget()"
  },
  {
    "label": "IsCommentTextBoxReadonly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCommentTextBoxReadonly()"
  },
  {
    "label": "OnClickReply()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClickReply()"
  },
  {
    "label": "OnClickEdit()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClickEdit()"
  },
  {
    "label": "OnLikeToggle()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnLikeToggle()"
  },
  {
    "label": "GetLikeTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLikeTooltip()"
  },
  {
    "label": "GetLikeIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetLikeIcon()"
  },
  {
    "label": "GetUsernameColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetUsernameColor()"
  },
  {
    "label": "GetLikeIconColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetLikeIconColor()"
  },
  {
    "label": "GetEditReplyButtonGroupVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetEditReplyButtonGroupVisibility()"
  },
  {
    "label": "GetEditButtonVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetEditButtonVisibility()"
  },
  {
    "label": "GetSubmitCancelButtonGroupVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSubmitCancelButtonGroupVisibility()"
  },
  {
    "label": "IsSubmitButtonEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSubmitButtonEnabled()"
  },
  {
    "label": "OnEditSubmitClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnEditSubmitClicked()"
  },
  {
    "label": "OnEditCancelClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnEditCancelClicked()"
  },
  {
    "label": "OnCommentPosted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommentPosted(const FReviewComment& Comment)"
  },
  {
    "label": "GetCommentString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCommentString()"
  },
  {
    "label": "SetCommentString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCommentString(const FString& NewComment)"
  },
  {
    "label": "HasCommentStringChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCommentStringChanged()"
  },
  {
    "label": "IsEditMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditMode()"
  },
  {
    "label": "SetEditMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditMode(bool bIsEditMode)"
  },
  {
    "label": "FCommentDraftTreeEntry()",
    "kind": "Method",
    "detail": "Function (FReviewComment Comment ; TSharedPtr<SWidget> Content ; TSharedPtr<SHorizontalBox> EditReplyButtonGroup ; TSharedPtr<SHorizontalBox> SubmitCancelButtonGroup ; TSharedPtr<SMultiLineEditableTextBox> CommentTextBox ; TWeakPtr<FReviewCommentsDiffControl> CommentsControl ; FDelegateHandle OnCommentPostedHandle ; bool bExpectedEditMode = false ; } ; class FCommentDraftTreeEntry : public FBlueprintDifferenceTreeEntry,public TSharedFromThis<FCommentDraftTreeEntry> { public :)",
    "insertText": "FCommentDraftTreeEntry(TWeakPtr<FReviewCommentsDiffControl> InCommentsControl, TArray<TSharedPtr<FBlueprintDifferenceTreeEntry>>* InSiblings, int32 InReplyID = -1)"
  },
  {
    "label": "MakeCommentDraft()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FCommentDraftTreeEntry>)",
    "insertText": "MakeCommentDraft(TWeakPtr<FReviewCommentsDiffControl> CommentsControl, TArray<TSharedPtr<FBlueprintDifferenceTreeEntry>>* Siblings)"
  },
  {
    "label": "MakeReplyDraft()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FCommentDraftTreeEntry>)",
    "insertText": "MakeReplyDraft(TWeakPtr<FReviewCommentsDiffControl> CommentsControl, TSharedPtr<FCommentTreeEntry> InParent)"
  },
  {
    "label": "ReassignReplyParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReassignReplyParent(TSharedPtr<FCommentTreeEntry> InParent)"
  },
  {
    "label": "GetCommentTextBox()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SMultiLineEditableTextBox>)",
    "insertText": "GetCommentTextBox()"
  },
  {
    "label": "IsPostButtonEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPostButtonEnabled()"
  },
  {
    "label": "OnCommentPostClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCommentPostClicked()"
  },
  {
    "label": "ReassignSiblings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReassignSiblings(TArray<TSharedPtr<FBlueprintDifferenceTreeEntry>>* InSiblings, int32 InReplyID)"
  },
  {
    "label": "FReviewCommentsDiffControl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget> Content ; TSharedPtr<SMultiLineEditableTextBox> CommentTextBox ; TSharedPtr<SCheckBox> FlagAsTaskCheckBox ; TWeakPtr<FReviewCommentsDiffControl> CommentsControl ; TArray<TSharedPtr<FBlueprintDifferenceTreeEntry>>* Siblings ; int32 ReplyID = - 1 ; } ; struct FReviewCommentsDiffControl : public TSharedFromThis<FReviewCommentsDiffControl>,IDiffControl {)",
    "insertText": "FReviewCommentsDiffControl(const FString& InCommentFilePath, TWeakPtr<STreeView<TSharedPtr<FBlueprintDifferenceTreeEntry>>> TreeView)"
  },
  {
    "label": "SetCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCategory(const FString& CategoryKey)"
  },
  {
    "label": "PostComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostComment(FReviewComment& Comment)"
  },
  {
    "label": "DraftReply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DraftReply(TSharedPtr<FCommentTreeEntry> ParentComment)"
  },
  {
    "label": "RebuildListView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildListView()"
  },
  {
    "label": "GetCommentFilePath()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetCommentFilePath()"
  }
]