[
  {
    "label": "FLensDistortionLUT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLensDistortionLUT"
  },
  {
    "label": "FPaniniProjectionConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPaniniProjectionConfig"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ScreenPass . h \" struct FLensDistortionLUT { EPixelFormat kFormat = PF_G32R32F ; FRDGTextureRef DistortingDisplacementTexture = nullptr ; FRDGTextureRef UndistortingDisplacementTexture = nullptr ; float ResolutionFraction = 1 . 0 f ; bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "IsEnabledByCVars()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabledByCVars()"
  },
  {
    "label": "ReadCVars()",
    "kind": "Method",
    "detail": "Function (FPaniniProjectionConfig)",
    "insertText": "ReadCVars()"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (D =)",
    "insertText": "Max(D, 0.0f)"
  },
  {
    "label": "GenerateLUTPasses()",
    "kind": "Method",
    "detail": "Function (} float D = 0 . 0 f ; float S = 0 . 0 f ; FLensDistortionLUT)",
    "insertText": "GenerateLUTPasses(FRDGBuilder& GraphBuilder, const FViewInfo& View)"
  },
  {
    "label": "GetPassLocation()",
    "kind": "Method",
    "detail": "Function (} ; namespace LensDistortion { enum class EPassLocation : uint8 { TSR,PrimaryUpscale } ; EPassLocation)",
    "insertText": "GetPassLocation(const FViewInfo& InViewInfo)"
  },
  {
    "label": "GetPassLocationUnsafe()",
    "kind": "Method",
    "detail": "Function (EPassLocation)",
    "insertText": "GetPassLocationUnsafe(const FSceneView& InView)"
  },
  {
    "label": "GetLUTUnsafe()",
    "kind": "Method",
    "detail": "Function (const FLensDistortionLUT&)",
    "insertText": "GetLUTUnsafe(const FSceneView& InView)"
  },
  {
    "label": "SetLUTUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLUTUnsafe(FSceneView& InView, const FLensDistortionLUT& DistortionLUT)"
  }
]