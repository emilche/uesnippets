[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FSourceFileDatabase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSourceFileDatabase"
  },
  {
    "label": "ISourceCodeNavigationHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceCodeNavigationHandler"
  },
  {
    "label": "FSourceCodeNavigation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSourceCodeNavigation"
  },
  {
    "label": "FFunctionSymbolInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFunctionSymbolInfo"
  },
  {
    "label": "FEditCodeMenuClass",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEditCodeMenuClass"
  },
  {
    "label": "EGatherMode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EGatherMode"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Textures / SlateIcon . h \" # include \" UObject / WeakObjectPtr . h \" class AActor ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogSelectionDetails, Log, All)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnIDEInstallerDownloadComplete, bool)"
  },
  {
    "label": "FSourceFileDatabase()",
    "kind": "Method",
    "detail": "Function (class FSourceFileDatabase { public :)",
    "insertText": "FSourceFileDatabase()"
  },
  {
    "label": "GetModuleNames()",
    "kind": "Method",
    "detail": "Function (const TArray<FString>&)",
    "insertText": "GetModuleNames()"
  },
  {
    "label": "FindRootFilesRecursive()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "FindRootFilesRecursive(TArray<FString> &FileNames, const FString &BaseDirectory, const FString &Wildcard)"
  },
  {
    "label": "OnNewModuleAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewModuleAdded(FName InModuleName)"
  },
  {
    "label": "ISourceCodeNavigationHandler()",
    "kind": "Method",
    "detail": "Function (bool bIsDirty ; TArray<FString> ModuleNames ; TSet<FString> DisallowedHeaderNames ; } ; class ISourceCodeNavigationHandler : public TSharedFromThis<ISourceCodeNavigationHandler> { public : ~)",
    "insertText": "ISourceCodeNavigationHandler()"
  },
  {
    "label": "CanNavigateToClass()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "CanNavigateToClass(const UClass* InClass)"
  },
  {
    "label": "GetSourceFileDatabase()",
    "kind": "Method",
    "detail": "Function (const FSourceFileDatabase&)",
    "insertText": "GetSourceFileDatabase()"
  },
  {
    "label": "NavigateToFunctionSourceAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NavigateToFunctionSourceAsync(const FString& FunctionSymbolName, const FString& FunctionModuleName, const bool bIgnoreLineNumber)"
  },
  {
    "label": "GatherFunctionsForActors()",
    "kind": "Method",
    "detail": "Function (struct EGatherMode { enum Type { ClassesAndFunctions,ClassesOnly } ; } ; void)",
    "insertText": "GatherFunctionsForActors(TArray< AActor* >& Actors, const EGatherMode::Type GatherMode, TArray< FEditCodeMenuClass >& Classes)"
  },
  {
    "label": "NavigateToFunctionAsync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NavigateToFunctionAsync(UFunction* InFunction)"
  },
  {
    "label": "NavigateToClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NavigateToClass(const UClass* InClass)"
  },
  {
    "label": "CanNavigateToStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanNavigateToStruct(const UScriptStruct* InStruct)"
  },
  {
    "label": "NavigateToStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NavigateToStruct(const UScriptStruct* InStruct)"
  },
  {
    "label": "CanNavigateToFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanNavigateToFunction(const UFunction* InFunction)"
  },
  {
    "label": "NavigateToFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NavigateToFunction(const UFunction* InFunction)"
  },
  {
    "label": "CanNavigateToProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanNavigateToProperty(const FProperty* InProperty)"
  },
  {
    "label": "NavigateToProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NavigateToProperty(const FProperty* InProperty)"
  },
  {
    "label": "CanNavigateToStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanNavigateToStruct(const UStruct* InStruct)"
  },
  {
    "label": "NavigateToStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NavigateToStruct(const UStruct* InStruct)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnSymbolQueryFinished)"
  },
  {
    "label": "AccessOnSymbolQueryFinished()",
    "kind": "Method",
    "detail": "Function (FOnSymbolQueryFinished&)",
    "insertText": "AccessOnSymbolQueryFinished()"
  },
  {
    "label": "GetSuggestedSourceCodeIDE()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSuggestedSourceCodeIDE(bool bShortIDEName = false)"
  },
  {
    "label": "GetSelectedSourceCodeIDE()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSelectedSourceCodeIDE()"
  },
  {
    "label": "GetOpenSourceCodeIDEIcon()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetOpenSourceCodeIDEIcon()"
  },
  {
    "label": "GetRefreshSourceCodeIDEIcon()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetRefreshSourceCodeIDEIcon()"
  },
  {
    "label": "GetSuggestedSourceCodeIDEDownloadURL()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSuggestedSourceCodeIDEDownloadURL()"
  },
  {
    "label": "GetCanDirectlyInstallSourceCodeIDE()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCanDirectlyInstallSourceCodeIDE()"
  },
  {
    "label": "DownloadAndInstallSuggestedIDE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DownloadAndInstallSuggestedIDE(FOnIDEInstallerDownloadComplete OnDownloadComplete)"
  },
  {
    "label": "RefreshCompilerAvailability()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCompilerAvailability()"
  },
  {
    "label": "IsCompilerAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompilerAvailable()"
  },
  {
    "label": "FindModulePath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindModulePath(const UPackage* InModulePackage, FString& OutModulePath)"
  },
  {
    "label": "FindClassHeaderPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindClassHeaderPath(const UField* InField, FString &OutClassHeaderPath)"
  },
  {
    "label": "FindClassSourcePath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindClassSourcePath(const UField* InField, FString &OutClassSourcePath)"
  },
  {
    "label": "OpenSourceFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenSourceFile(const FString& AbsoluteSourcePath, int32 LineNumber = 0, int32 ColumnNumber = 0)"
  },
  {
    "label": "OpenSourceFiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenSourceFiles(const TArray<FString>& AbsoluteSourcePaths)"
  },
  {
    "label": "AddSourceFiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddSourceFiles(const TArray<FString>& AbsoluteSourcePaths)"
  },
  {
    "label": "OpenModuleSolution()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenModuleSolution()"
  },
  {
    "label": "OpenProjectSolution()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenProjectSolution(const FString& InProjectPath)"
  },
  {
    "label": "DoesModuleSolutionExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesModuleSolutionExist()"
  },
  {
    "label": "FindClassModuleName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindClassModuleName(UClass* InClass, FString& ModuleName)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnCompilerNotFound)"
  },
  {
    "label": "AccessOnCompilerNotFound()",
    "kind": "Method",
    "detail": "Function (FOnCompilerNotFound&)",
    "insertText": "AccessOnCompilerNotFound()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnNewModuleAdded, FName)"
  },
  {
    "label": "AccessOnNewModuleAdded()",
    "kind": "Method",
    "detail": "Function (FOnNewModuleAdded&)",
    "insertText": "AccessOnNewModuleAdded()"
  },
  {
    "label": "AddNavigationHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNavigationHandler(ISourceCodeNavigationHandler* Handler)"
  },
  {
    "label": "RemoveNavigationHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNavigationHandler(ISourceCodeNavigationHandler* Handler)"
  },
  {
    "label": "SetPreferredAccessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreferredAccessor(const TCHAR* Name)"
  }
]