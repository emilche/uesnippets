[
  {
    "label": "RtpPayloadParams",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpPayloadParams"
  },
  {
    "label": "RtpPayloadParams()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "RtpPayloadParams(uint32_t ssrc,\n                   const RtpPayloadState* state,\n                   const FieldTrialsView& trials)"
  },
  {
    "label": "GetRtpVideoHeader()",
    "kind": "Method",
    "detail": "Function (RTPVideoHeader)",
    "insertText": "GetRtpVideoHeader(const EncodedImage& image,\n                                   const CodecSpecificInfo* codec_specific_info,\n                                   int64_t shared_frame_id)"
  },
  {
    "label": "GenericStructure()",
    "kind": "Method",
    "detail": "Function (absl::optional<FrameDependencyStructure>)",
    "insertText": "GenericStructure(\n      const CodecSpecificInfo* codec_specific_info)"
  },
  {
    "label": "SetCodecSpecific()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCodecSpecific(RTPVideoHeader* rtp_video_header,\n                        bool first_frame_in_picture)"
  },
  {
    "label": "GenericDescriptorFromFrameInfo()",
    "kind": "Method",
    "detail": "Function (RTPVideoHeader::GenericDescriptorInfo)",
    "insertText": "GenericDescriptorFromFrameInfo(\n      const GenericFrameInfo& frame_info,\n      int64_t frame_id)"
  },
  {
    "label": "SetGeneric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGeneric(const CodecSpecificInfo* codec_specific_info,\n                  int64_t frame_id,\n                  bool is_keyframe,\n                  RTPVideoHeader* rtp_video_header)"
  },
  {
    "label": "Vp8ToGeneric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Vp8ToGeneric(const CodecSpecificInfoVP8& vp8_info,\n                    int64_t shared_frame_id,\n                    bool is_keyframe,\n                    RTPVideoHeader* rtp_video_header)"
  },
  {
    "label": "Vp9ToGeneric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Vp9ToGeneric(const CodecSpecificInfoVP9& vp9_info,\n                    int64_t shared_frame_id,\n                    RTPVideoHeader& rtp_video_header)"
  },
  {
    "label": "H264ToGeneric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "H264ToGeneric(const CodecSpecificInfoH264& h264_info,\n                     int64_t shared_frame_id,\n                     bool is_keyframe,\n                     RTPVideoHeader* rtp_video_header)"
  },
  {
    "label": "GenericToGeneric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericToGeneric(int64_t shared_frame_id,\n                        bool is_keyframe,\n                        RTPVideoHeader* rtp_video_header)"
  },
  {
    "label": "SetDependenciesVp8Deprecated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDependenciesVp8Deprecated(\n      const CodecSpecificInfoVP8& vp8_info,\n      int64_t shared_frame_id,\n      bool is_keyframe,\n      int spatial_index,\n      int temporal_index,\n      bool layer_sync,\n      RTPVideoHeader::GenericDescriptorInfo* generic)"
  },
  {
    "label": "SetDependenciesVp8New()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDependenciesVp8New(const CodecSpecificInfoVP8& vp8_info,\n                             int64_t shared_frame_id,\n                             bool is_keyframe,\n                             bool layer_sync,\n                             RTPVideoHeader::GenericDescriptorInfo* generic)"
  }
]