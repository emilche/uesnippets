[
  {
    "label": "AsyncSocketAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsyncSocketAdapter"
  },
  {
    "label": "AsyncSocketAdapter()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_ASYNC_SOCKET_H_ # define RTC_BASE_ASYNC_SOCKET_H_ # include<stddef . h> # include<stdint . h> # include<memory> # include \" rtc_base / socket . h \" # include \" rtc_base / socket_address . h \" # include \" rtc_base / third_party / sigslot / sigslot . h \" namespace rtc { class AsyncSocketAdapter : public Socket,public sigslot::has_slots<> { public :)",
    "insertText": "AsyncSocketAdapter(Socket* socket)"
  },
  {
    "label": "GetLocalAddress()",
    "kind": "Method",
    "detail": "Function (SocketAddress)",
    "insertText": "GetLocalAddress()"
  },
  {
    "label": "GetRemoteAddress()",
    "kind": "Method",
    "detail": "Function (SocketAddress)",
    "insertText": "GetRemoteAddress()"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Bind(const SocketAddress& addr)"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Connect(const SocketAddress& addr)"
  },
  {
    "label": "Send()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Send(const void* pv, size_t cb)"
  },
  {
    "label": "SendTo()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SendTo(const void* pv, size_t cb, const SocketAddress& addr)"
  },
  {
    "label": "Recv()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Recv(void* pv, size_t cb, int64_t* timestamp)"
  },
  {
    "label": "RecvFrom()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RecvFrom(void* pv, size_t cb, SocketAddress* paddr, int64_t* timestamp)"
  },
  {
    "label": "Listen()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Listen(int backlog)"
  },
  {
    "label": "Accept()",
    "kind": "Method",
    "detail": "Function (Socket*)",
    "insertText": "Accept(SocketAddress* paddr)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Close()"
  },
  {
    "label": "GetError()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetError()"
  },
  {
    "label": "SetError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetError(int error)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (ConnState)",
    "insertText": "GetState()"
  },
  {
    "label": "GetOption()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetOption(Option opt, int* value)"
  },
  {
    "label": "SetOption()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SetOption(Option opt, int value)"
  },
  {
    "label": "OnConnectEvent()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnConnectEvent(Socket* socket)"
  },
  {
    "label": "OnReadEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReadEvent(Socket* socket)"
  },
  {
    "label": "OnWriteEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWriteEvent(Socket* socket)"
  },
  {
    "label": "OnCloseEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCloseEvent(Socket* socket, int err)"
  },
  {
    "label": "GetSocket()",
    "kind": "Method",
    "detail": "Function (Socket*)",
    "insertText": "GetSocket()"
  }
]