[
  {
    "label": "FImage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImage"
  },
  {
    "label": "ITextureCompressorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextureCompressorModule"
  },
  {
    "label": "IImageWrapperModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IImageWrapperModule"
  },
  {
    "label": "FTextureSourceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureSourceData"
  },
  {
    "label": "FTextureSourceBlockData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureSourceBlockData"
  },
  {
    "label": "FTextureBuildSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureBuildSettings"
  },
  {
    "label": "FSlowTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlowTask"
  },
  {
    "label": "FVTTileMipPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTTileMipPayload"
  },
  {
    "label": "FVTTilePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTTilePayload"
  },
  {
    "label": "FVTBlockPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTBlockPayload"
  },
  {
    "label": "FVTLayerPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTLayerPayload"
  },
  {
    "label": "FVTSourceTileEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTSourceTileEntry"
  },
  {
    "label": "FLayerData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLayerData"
  },
  {
    "label": "FVirtualTextureSourceLayerData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureSourceLayerData"
  },
  {
    "label": "FVirtualTextureBuilderDerivedInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureBuilderDerivedInfo"
  },
  {
    "label": "FVirtualTextureDataBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureDataBuilder"
  },
  {
    "label": "FAsyncMacroBlockTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncMacroBlockTask"
  },
  {
    "label": "InitializeFromBuildSettings()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / Texture . h \" # include \" ImageCore . h \" # include \" VT / VirtualTextureBuiltData . h \" struct FImage ; class ITextureCompressorModule ; class IImageWrapperModule ; struct FTextureSourceData ; struct FTextureSourceBlockData ; struct FTextureBuildSettings ; struct FSlowTask ; struct FVTTileMipPayload { EPixelFormat CompressedFormat = EPixelFormat::PF_Unknown ; TArray<uint8> Payload ; } ; struct FVTTilePayload { TArray<FVTTileMipPayload> Mips ; } ; struct FVTBlockPayload { int32 SizeX = 0 ; int32 SizeY = 0 ; int32 BlockX = 0 ; int32 BlockY = 0 ; int32 SizeInBlocksX = 1 ; int32 SizeInBlocksY = 1 ; int32 MipBias = 0 ; int32 NumMips = 0 ; int32 NumSlices = 0 ; TArray<FVTTilePayload> Tiles ; TArray<FImage> Mips ; } ; struct FVTLayerPayload { TArray<FVTBlockPayload> Blocks ; } ; struct FVTSourceTileEntry { int32 BlockIndex = 0 ; int32 TileIndex = 0 ; int32 MipIndex = 0 ; int32 MipIndexInBlock = 0 ; int32 TileX = 0 ; int32 TileY = 0 ; } ; struct FLayerData { TArray<TArray<uint8>> TilePayload ; TArray<uint8> CodecPayload ; EVirtualTextureCodec Codec = EVirtualTextureCodec::Max ; } ; struct FVirtualTextureSourceLayerData { ERawImageFormat::Type ImageFormat ; ETextureSourceFormat SourceFormat ; EPixelFormat PixelFormat ; FName FormatName ; FName TextureFormatName ; EGammaSpace GammaSpace ; bool bHasAlpha ; } ; struct FVirtualTextureBuilderDerivedInfo { int32 SizeInBlocksX = 0 ; int32 SizeInBlocksY = 0 ; int32 BlockSizeX = 0 ; int32 BlockSizeY = 0 ; int32 BlockSizeScale = 1 ; int32 SizeX = 0 ; int32 SizeY = 0 ; int32 NumMips = 0 ; bool)",
    "insertText": "InitializeFromBuildSettings(const FTextureSourceData& InSourceData, const FTextureBuildSettings* InSettingsPerLayer)"
  },
  {
    "label": "FVirtualTextureDataBuilder()",
    "kind": "Method",
    "detail": "Function (} ; class FVirtualTextureDataBuilder { public :)",
    "insertText": "FVirtualTextureDataBuilder(FVirtualTextureBuiltData &SetOutData, const FString& DebugTexturePathName, ITextureCompressorModule *InCompressor = nullptr, IImageWrapperModule* InImageWrapper = nullptr)"
  },
  {
    "label": "FVirtualTextureDataBuilder()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FVirtualTextureDataBuilder()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Build(FTextureSourceData& InSourceData, FTextureSourceData& InCompositeSourceData, const FTextureBuildSettings* InSettingsPerLayer, bool bAllowAsync)"
  },
  {
    "label": "BuildPagesForChunk()",
    "kind": "Method",
    "detail": "Function (private : struct FAsyncMacroBlockTask ; bool)",
    "insertText": "BuildPagesForChunk(const TArray<FVTSourceTileEntry>& ActiveTileList)"
  },
  {
    "label": "BuildTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTiles(const TArray<FVTSourceTileEntry>& TileList, uint32 layer, FLayerData& GeneratedData)"
  },
  {
    "label": "PushDataToChunk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PushDataToChunk(const TArray<FVTSourceTileEntry>& Tiles, const TArray<FLayerData>& LayerData)"
  },
  {
    "label": "FindSourceBlockIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindSourceBlockIndex(int32 MipIndex, int32 BlockX, int32 BlockY)"
  },
  {
    "label": "BuildLayerBlocks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildLayerBlocks(FSlowTask& BuildTask, uint32 LayerIndex, const FVirtualTextureSourceLayerData& LayerData, FTextureSourceData& SourceData, FTextureSourceData& CompositeSourceData, bool bAllowAsync)"
  },
  {
    "label": "BuildBlockTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildBlockTiles(uint32 LayerIndex, uint32 BlockIndex, FVTBlockPayload& Block, const FVirtualTextureSourceLayerData& LayerData, bool bAllowAsync)"
  },
  {
    "label": "BuildChunks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildChunks()"
  }
]