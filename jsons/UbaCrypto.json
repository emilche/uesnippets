[
  {
    "label": "Logger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Logger"
  },
  {
    "label": "CryptoKey",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CryptoKey"
  },
  {
    "label": "Crypto",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Crypto"
  },
  {
    "label": "InvalidCryptoKey()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UbaBase . h \" namespace uba { class Logger ; enum CryptoKey : u64 { } ; CryptoKey)",
    "insertText": "InvalidCryptoKey(CryptoKey)"
  },
  {
    "label": "CreateKey()",
    "kind": "Method",
    "detail": "Function (class Crypto { public : CryptoKey)",
    "insertText": "CreateKey(Logger& logger, const u8* key128)"
  },
  {
    "label": "DuplicateKey()",
    "kind": "Method",
    "detail": "Function (CryptoKey)",
    "insertText": "DuplicateKey(Logger& logger, CryptoKey original)"
  },
  {
    "label": "DestroyKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyKey(CryptoKey key)"
  },
  {
    "label": "Encrypt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Encrypt(Logger& logger, CryptoKey key, u8* data, u32 size)"
  },
  {
    "label": "Decrypt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Decrypt(Logger& logger, CryptoKey key, u8* data, u32 size)"
  },
  {
    "label": "CryptoFromString()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "CryptoFromString(u8* out, u32 outSize, const tchar* str)"
  }
]