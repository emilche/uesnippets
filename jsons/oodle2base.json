[
  {
    "label": "__attribute__",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__attribute__"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# ifndef __OODLE2BASE_H_INCLUDED__ # define __OODLE2BASE_H_INCLUDED__ # ifndef OODLE2BASE_PUBLIC_HEADER # define OODLE2BASE_PUBLIC_HEADER 1 # endif # ifdef _MSC_VER # pragma)",
    "insertText": "pack(push, Oodle, 8) #pragma warning(push) #pragma warning(disable : 4127) #endif #ifndef OODLE_BASE_TYPES_H #define OODLE_BASE_TYPES_H #include <stdint.h> #define OOCOPYRIGHT \"Copyright (C)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (typedef uint8_t OO_U8 ; typedef int16_t OO_S16 ; typedef uint16_t OO_U16 ; typedef int32_t OO_S32 ; typedef uint32_t OO_U32 ; typedef int64_t OO_S64 ; typedef uint64_t OO_U64 ; typedef float OO_F32 ; typedef double OO_F64 ; typedef intptr_t OO_SINTa ; typedef uintptr_t OO_UINTa ; typedef int32_t OO_BOOL ; # if)",
    "insertText": "defined(__GNUC__) || defined(__clang__) #define OOSTRUCT struct __attribute__((__packed__)) #define OOINLINEFUNC inline #elif defined(_MSC_VER) #define OOSTRUCT struct #define OOINLINEFUNC __inline #endif #if defined(_WIN32)"
  },
  {
    "label": "OODEFAULT()",
    "kind": "Method",
    "detail": "Function (# define OODEFEND } # define)",
    "insertText": "OODEFAULT(val ) =val #else #define OODEFFUNC #define OODEFSTART #define OODEFEND #define OODEFAULT( val ) #endif #define OOEXPFUNC OODEFFUNC #define OO_STRING_JOIN(arg1, arg2) OO_STRING_JOIN_DELAY(arg1, arg2) #define OO_STRING_JOIN_DELAY(arg1, arg2) OO_STRING_JOIN_IMMEDIATE(arg1, arg2) #define OO_STRING_JOIN_IMMEDIATE(arg1, arg2) arg1 ## arg2 #ifdef _MSC_VER #define OO_NUMBERNAME(name) OO_STRING_JOIN(name,__COUNTER__) #else #define OO_NUMBERNAME(name) OO_STRING_JOIN(name,__LINE__) #endif #ifndef OO_COMPILER_ASSERT #if defined(__clang__) #define OO_COMPILER_ASSERT_UNUSED __attribute__((unused)) #else #define OO_COMPILER_ASSERT_UNUSED #endif #define OO_COMPILER_ASSERT(exp) typedef char OO_NUMBERNAME(_dummy_array) [ (exp) ? 1 : -1 ] OO_COMPILER_ASSERT_UNUSED #endif #endif #ifndef OODLE2_PUBLIC_CORE_DEFINES #define OODLE2_PUBLIC_CORE_DEFINES 1 #define OOFUNC1 OOEXPFUNC #define OOFUNC2 OOEXPLINK #define OOFUNCSTART #define OODLE_CALLBACK OOLINK #if defined(OODLE_BUILDING_LIB) || defined(OODLE_BUILDING_DLL) #error Should not see OODLE_BUILDING set for users of oodle.h #endif #ifndef NULL #define NULL (0) #endif #define OODLE_MALLOC_MINIMUM_ALIGNMENT ((OO_SINTa)(2*sizeof(void *))) typedef void (OODLE_CALLBACK t_OodleFPVoidVoid)(void)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(OODLE_CALLBACK t_OodleFPVoidVoidStar)(void *)"
  }
]