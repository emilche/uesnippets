[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "GetThreadIsInTraceEventTLS()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TRACING_TRACING_TLS_H_ # define BASE_TRACING_TRACING_TLS_H_ # include \" base / base_export . h \" # include \" base / check . h \" # include \" base / memory / raw_ptr . h \" # include \" base / threading / thread_local . h \" namespace base { namespace tracing { BASE_EXPORT ThreadLocalBoolean*)",
    "insertText": "GetThreadIsInTraceEventTLS()"
  },
  {
    "label": "AutoThreadLocalBoolean()",
    "kind": "Method",
    "detail": "Function (class BASE_EXPORT AutoThreadLocalBoolean { public :)",
    "insertText": "AutoThreadLocalBoolean(ThreadLocalBoolean* thread_local_boolean) : thread_local_boolean_(thread_local_boolean)"
  },
  {
    "label": "DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DCHECK(!thread_local_boolean_->Get())"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (thread_local_boolean_ ->)",
    "insertText": "Set(true)"
  },
  {
    "label": "AutoThreadLocalBoolean()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "AutoThreadLocalBoolean()"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (thread_local_boolean_ ->)",
    "insertText": "Set(false)"
  },
  {
    "label": "AutoThreadLocalBoolean()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "AutoThreadLocalBoolean(const AutoThreadLocalBoolean&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AutoThreadLocalBoolean&)",
    "insertText": "operator(const AutoThreadLocalBoolean&)"
  }
]