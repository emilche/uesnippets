[
  {
    "label": "IsFilenameLegal()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_I18N_FILE_UTIL_ICU_H_ # define BASE_I18N_FILE_UTIL_ICU_H_ # include<string> # include \" base / files / file_path . h \" # include \" base / i18n / base_i18n_export . h \" namespace base { namespace i18n { BASE_I18N_EXPORT bool)",
    "insertText": "IsFilenameLegal(const std::u16string& file_name)"
  },
  {
    "label": "ReplaceIllegalCharactersInPath()",
    "kind": "Method",
    "detail": "Function (BASE_I18N_EXPORT void)",
    "insertText": "ReplaceIllegalCharactersInPath(FilePath::StringType* file_name, char replace_char)"
  },
  {
    "label": "LocaleAwareCompareFilenames()",
    "kind": "Method",
    "detail": "Function (BASE_I18N_EXPORT bool)",
    "insertText": "LocaleAwareCompareFilenames(const FilePath& a, const FilePath& b)"
  },
  {
    "label": "NormalizeFileNameEncoding()",
    "kind": "Method",
    "detail": "Function (BASE_I18N_EXPORT void)",
    "insertText": "NormalizeFileNameEncoding(FilePath* file_name)"
  }
]