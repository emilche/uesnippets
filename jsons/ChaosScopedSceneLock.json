[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FChaosScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosScene"
  },
  {
    "label": "FPBDRigidsSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsSolver"
  },
  {
    "label": "FScopedSceneLock_Chaos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedSceneLock_Chaos"
  },
  {
    "label": "FScopedSceneLock_Chaos()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" PhysicsInterfaceDeclaresCore . h \" # include \" Chaos / PhysicsObject . h \" enum class EPhysicsInterfaceScopedLockType : uint8 { Read,Write } ; class USkeletalMeshComponent ; class FChaosScene ; namespace Chaos { class FPBDRigidsSolver ; } struct FScopedSceneLock_Chaos {)",
    "insertText": "FScopedSceneLock_Chaos(FPhysicsActorHandle const* InActorHandle, EPhysicsInterfaceScopedLockType InLockType)"
  },
  {
    "label": "FScopedSceneLock_Chaos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedSceneLock_Chaos(FPhysicsActorHandle const* InActorHandleA, FPhysicsActorHandle const* InActorHandleB, EPhysicsInterfaceScopedLockType InLockType)"
  },
  {
    "label": "FScopedSceneLock_Chaos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedSceneLock_Chaos(FPhysicsConstraintHandle const* InConstraintHandle, EPhysicsInterfaceScopedLockType InLockType)"
  },
  {
    "label": "FScopedSceneLock_Chaos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedSceneLock_Chaos(USkeletalMeshComponent* InSkelMeshComp, EPhysicsInterfaceScopedLockType InLockType)"
  },
  {
    "label": "FScopedSceneLock_Chaos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedSceneLock_Chaos(Chaos::FPhysicsObjectHandle InObjectA, Chaos::FPhysicsObjectHandle InObjectB, EPhysicsInterfaceScopedLockType InLockType)"
  },
  {
    "label": "FScopedSceneLock_Chaos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedSceneLock_Chaos(FChaosScene* InScene, EPhysicsInterfaceScopedLockType InLockType)"
  },
  {
    "label": "FScopedSceneLock_Chaos()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FScopedSceneLock_Chaos()"
  },
  {
    "label": "FScopedSceneLock_Chaos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedSceneLock_Chaos(FScopedSceneLock_Chaos& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FScopedSceneLock_Chaos&)",
    "insertText": "operator(FScopedSceneLock_Chaos& Other)"
  },
  {
    "label": "FScopedSceneLock_Chaos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedSceneLock_Chaos(FScopedSceneLock_Chaos&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FScopedSceneLock_Chaos&)",
    "insertText": "operator(FScopedSceneLock_Chaos&& Other)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "LockScene()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "LockScene()"
  },
  {
    "label": "UnlockScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockScene()"
  },
  {
    "label": "GetSceneForActor()",
    "kind": "Method",
    "detail": "Function (FChaosScene*)",
    "insertText": "GetSceneForActor(FPhysicsActorHandle const* InActorHandle)"
  },
  {
    "label": "GetSceneForActor()",
    "kind": "Method",
    "detail": "Function (FChaosScene*)",
    "insertText": "GetSceneForActor(FPhysicsConstraintHandle const* InConstraintHandle)"
  }
]