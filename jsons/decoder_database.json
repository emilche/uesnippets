[
  {
    "label": "VCMDecoderDatabase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMDecoderDatabase"
  },
  {
    "label": "VCMDecoderDatabase()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_DECODER_DATABASE_H_ # define MODULES_VIDEO_CODING_DECODER_DATABASE_H_ # include<stdint . h> # include<map> # include<memory> # include \" absl / types / optional . h \" # include \" api / sequence_checker . h \" # include \" api / video_codecs / video_decoder . h \" # include \" modules / video_coding / encoded_frame . h \" # include \" modules / video_coding / generic_decoder . h \" namespace webrtc { class VCMDecoderDatabase { public :)",
    "insertText": "VCMDecoderDatabase()"
  },
  {
    "label": "VCMDecoderDatabase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VCMDecoderDatabase(const VCMDecoderDatabase&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (VCMDecoderDatabase&)",
    "insertText": "operator(const VCMDecoderDatabase&)"
  },
  {
    "label": "DeregisterExternalDecoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeregisterExternalDecoder(uint8_t payload_type)"
  },
  {
    "label": "RegisterExternalDecoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterExternalDecoder(uint8_t payload_type, std::unique_ptr<VideoDecoder> external_decoder)"
  },
  {
    "label": "IsExternalDecoderRegistered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExternalDecoderRegistered(uint8_t payload_type)"
  },
  {
    "label": "RegisterReceiveCodec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterReceiveCodec(uint8_t payload_type, const VideoDecoder::Settings& settings)"
  },
  {
    "label": "DeregisterReceiveCodec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeregisterReceiveCodec(uint8_t payload_type)"
  },
  {
    "label": "DeregisterReceiveCodecs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeregisterReceiveCodecs()"
  },
  {
    "label": "GetDecoder()",
    "kind": "Method",
    "detail": "Function (VCMGenericDecoder*)",
    "insertText": "GetDecoder(const VCMEncodedFrame& frame, VCMDecodedFrameCallback* decoded_frame_callback)"
  },
  {
    "label": "CreateAndInitDecoder()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CreateAndInitDecoder(const VCMEncodedFrame& frame) RTC_RUN_ON(decoder_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (SequenceChecker decoder_sequence_checker_ ; absl::optional<uint8_t> current_payload_type_ ; absl::optional<VCMGenericDecoder> current_decoder_)",
    "insertText": "RTC_GUARDED_BY(decoder_sequence_checker_)"
  }
]