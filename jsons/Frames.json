[
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "IFrameProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFrameProvider"
  },
  {
    "label": "IFrameProvider()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ContainersFwd . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" ProfilingDebugging / MiscTrace . h \" # include \" Templates / Function . h \" # include \" TraceServices / Model / AnalysisSession . h \" # include \" UObject / NameTypes . h \" namespace TraceServices { struct FFrame { uint64 Index ; double StartTime ; double EndTime ; ETraceFrameType FrameType ; } ; class IFrameProvider : public IProvider { public : ~)",
    "insertText": "IFrameProvider()"
  },
  {
    "label": "GetFrameCount()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetFrameCount(ETraceFrameType FrameType)"
  },
  {
    "label": "EnumerateFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateFrames(ETraceFrameType FrameType, uint64 Start, uint64 End, TFunctionRef<void(const FFrame&)> Callback)"
  },
  {
    "label": "EnumerateFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateFrames(ETraceFrameType FrameType, double StartTime, double EndTime, TFunctionRef<void(const FFrame&)> Callback)"
  },
  {
    "label": "GetFrameStartTimes()",
    "kind": "Method",
    "detail": "Function (const TArray64<double>&)",
    "insertText": "GetFrameStartTimes(ETraceFrameType FrameType)"
  },
  {
    "label": "GetFrameFromTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFrameFromTime(ETraceFrameType FrameType, double Time, FFrame& OutFrame)"
  },
  {
    "label": "GetFrame()",
    "kind": "Method",
    "detail": "Function (const FFrame*)",
    "insertText": "GetFrame(ETraceFrameType FrameType, uint64 Index)"
  },
  {
    "label": "GetFrameNumberForTimestamp()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetFrameNumberForTimestamp(ETraceFrameType FrameType, double Time)"
  },
  {
    "label": "GetFrameProviderName()",
    "kind": "Method",
    "detail": "Function (} ; FName)",
    "insertText": "GetFrameProviderName()"
  },
  {
    "label": "ReadFrameProvider()",
    "kind": "Method",
    "detail": "Function (const IFrameProvider&)",
    "insertText": "ReadFrameProvider(const IAnalysisSession& Session)"
  }
]