[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ConnectionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConnectionInfo"
  },
  {
    "label": "ConnectionInfo()",
    "kind": "Method",
    "detail": "Function (# ifndef P2P_BASE_CONNECTION_INFO_H_ # define P2P_BASE_CONNECTION_INFO_H_ # include<vector> # include \" absl / types / optional . h \" # include \" api / candidate . h \" # include \" api / units / timestamp . h \" namespace cricket { enum class IceCandidatePairState { WAITING = 0,IN_PROGRESS,SUCCEEDED,FAILED,} ; struct ConnectionInfo {)",
    "insertText": "ConnectionInfo()"
  },
  {
    "label": "ConnectionInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConnectionInfo(const ConnectionInfo&)"
  }
]