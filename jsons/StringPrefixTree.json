[
  {
    "label": "FStringPrefixTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStringPrefixTree"
  },
  {
    "label": "FNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNode"
  },
  {
    "label": "FStringPrefixTree()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / StringView . h \" # include \" Containers / UnrealString . h \" # include \" Misc / StringBuilder . h \" class FStringPrefixTree { public :)",
    "insertText": "FStringPrefixTree()"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Insert(FStringView ToAdd)"
  },
  {
    "label": "InsertAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertAll(const TArray<FString>& Array)"
  },
  {
    "label": "InsertAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertAll(const TArray<FStringView>& Array)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FStringView ToRemove)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Contains(FStringView Entry)"
  },
  {
    "label": "AnyStartsWith()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnyStartsWith(FStringView Prefix)"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Size()"
  },
  {
    "label": "GetAllEntries()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetAllEntries()"
  },
  {
    "label": "NumNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumNodes()"
  },
  {
    "label": "DumpToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DumpToString()"
  },
  {
    "label": "FNode()",
    "kind": "Method",
    "detail": "Function (private : struct FNode { FString Prefix ; TArray<FNode> Children ; bool IsLeaf = false ;)",
    "insertText": "FNode()"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Contains(FStringView ToFind)"
  },
  {
    "label": "AnyStartsWith()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnyStartsWith(FStringView ToFind)"
  },
  {
    "label": "GetAllEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllEntries(const FString& CurrentPrefix, TArray<FString>& OutEntries)"
  },
  {
    "label": "DumpToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpToString(FStringBuilderBase& Builder, TArray<bool, TInlineAllocator<32>>& DrawLines, bool bLastChild)"
  },
  {
    "label": "CanPrune()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "CanPrune()"
  }
]