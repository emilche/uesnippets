[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" uLang / Common / Common . h \" # include \" uLang / Common / Algo / Cases . h \" # include \" uLang / Common / Misc / Optional . h \" # include \" uLang / Common / Text / UTF8StringView . h \" namespace uLang { enum class EPackageRole : uint8_t { Source,External,GeneralCompatConstraint,PersistenceCompatConstraint,PersistenceSoftCompatConstraint } ; auto ExternalPackageRole = Cases<EPackageRole::External,EPackageRole::GeneralCompatConstraint,EPackageRole::PersistenceCompatConstraint,EPackageRole::PersistenceSoftCompatConstraint> ; auto ConstraintPackageRole = Cases<EPackageRole::GeneralCompatConstraint,EPackageRole::PersistenceCompatConstraint,EPackageRole::PersistenceSoftCompatConstraint> ; const char*)",
    "insertText": "ToString(EPackageRole Role)"
  },
  {
    "label": "ToPackageRole()",
    "kind": "Method",
    "detail": "Function (} } TOptional<EPackageRole>)",
    "insertText": "ToPackageRole(const CUTF8StringView& String)"
  }
]