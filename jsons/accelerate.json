[
  {
    "label": "AudioMultiVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioMultiVector"
  },
  {
    "label": "BackgroundNoise",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BackgroundNoise"
  },
  {
    "label": "Accelerate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Accelerate"
  },
  {
    "label": "AccelerateFactory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AccelerateFactory"
  },
  {
    "label": "Accelerate()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_ACCELERATE_H_ # define MODULES_AUDIO_CODING_NETEQ_ACCELERATE_H_ # include<stddef . h> # include<stdint . h> # include \" modules / audio_coding / neteq / time_stretch . h \" namespace webrtc { class AudioMultiVector ; class BackgroundNoise ; class Accelerate : public TimeStretch { public :)",
    "insertText": "Accelerate(int sample_rate_hz, size_t num_channels, const BackgroundNoise& background_noise) : TimeStretch(sample_rate_hz, num_channels, background_noise)"
  },
  {
    "label": "Accelerate()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Accelerate(const Accelerate&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Accelerate&)",
    "insertText": "operator(const Accelerate&)"
  },
  {
    "label": "SetParametersForPassiveSpeech()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SetParametersForPassiveSpeech(size_t len, int16_t* best_correlation, size_t* peak_index)"
  },
  {
    "label": "AccelerateFactory()",
    "kind": "Method",
    "detail": "Function (} ; struct AccelerateFactory {)",
    "insertText": "AccelerateFactory()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} Accelerate*)",
    "insertText": "Create(int sample_rate_hz, size_t num_channels, const BackgroundNoise& background_noise)"
  }
]