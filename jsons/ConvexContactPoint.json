[
  {
    "label": "TConvexContactPoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TConvexContactPoint"
  },
  {
    "label": "TConvexContactPoint()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Core . h \" # include \" Chaos / Collision / ContactPoint . h \" # include \" Chaos / Collision / ConvexFeature . h \" namespace Chaos::Private { template<T> class TConvexContactPoint { public : using FRealType = T ;)",
    "insertText": "TConvexContactPoint()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FRealType()",
    "kind": "Method",
    "detail": "Function (Phi = InvalidPhi<)",
    "insertText": "FRealType()"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSet()"
  },
  {
    "label": "GetContactPointType()",
    "kind": "Method",
    "detail": "Function (} EContactPointType)",
    "insertText": "GetContactPointType()"
  }
]