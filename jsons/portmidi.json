[
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (# ifndef PORT_MIDI_H # define PORT_MIDI_H # ifdef __cplusplus \" C \" { # endif # ifndef WIN32 # include<stdint . h> # else # ifndef INT32_DEFINED typedef int int32_t ; typedef unsigned int uint32_t ; # define INT32_DEFINED # endif # endif # ifdef _WINDLL # define PMEXPORT)",
    "insertText": "__declspec(dllexport)"
  },
  {
    "label": "Pm_Initialize()",
    "kind": "Method",
    "detail": "Function (pmNoError = 0,pmNoData = 0,pmGotData = 1,pmHostError = - 1 0 0 0 0,pmInvalidDeviceId,pmInsufficientMemory,pmBufferTooSmall,pmBufferOverflow,pmBadPtr,pmBadData,pmInternalError,pmBufferMaxSize } PmError ; PMEXPORT PmError)",
    "insertText": "Pm_Initialize(void)"
  },
  {
    "label": "Pm_Terminate()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmError)",
    "insertText": "Pm_Terminate(void)"
  },
  {
    "label": "Pm_HasHostError()",
    "kind": "Method",
    "detail": "Function (typedef void PortMidiStream ; # define PmStream PortMidiStream PMEXPORT int)",
    "insertText": "Pm_HasHostError(PortMidiStream * stream)"
  },
  {
    "label": "Pm_GetErrorText()",
    "kind": "Method",
    "detail": "Function (PMEXPORT const char*)",
    "insertText": "Pm_GetErrorText(PmError errnum)"
  },
  {
    "label": "Pm_GetHostErrorText()",
    "kind": "Method",
    "detail": "Function (PMEXPORT void)",
    "insertText": "Pm_GetHostErrorText(char * msg, unsigned int len)"
  },
  {
    "label": "Pm_CountDevices()",
    "kind": "Method",
    "detail": "Function (# define HDRLENGTH 5 0 # define PM_HOST_ERROR_MSG_LEN 2 5 6 u typedef int PmDeviceID ; # define pmNoDevice - 1 typedef struct { int structVersion ; const char* interf ; const char* name ; int input ; int output ; int opened ; } PmDeviceInfo ; PMEXPORT int)",
    "insertText": "Pm_CountDevices(void)"
  },
  {
    "label": "Pm_GetDefaultInputDeviceID()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmDeviceID)",
    "insertText": "Pm_GetDefaultInputDeviceID(void)"
  },
  {
    "label": "Pm_GetDefaultOutputDeviceID()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmDeviceID)",
    "insertText": "Pm_GetDefaultOutputDeviceID(void)"
  },
  {
    "label": "PmTimestamp()",
    "kind": "Method",
    "detail": "Function (typedef int32_t PmTimestamp ; typedef)",
    "insertText": "PmTimestamp(*PmTimeProcPtr)(void *time_info)"
  },
  {
    "label": "PmBefore()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "PmBefore(t1,t2) ((t1-t2) < 0) PMEXPORT const PmDeviceInfo* Pm_GetDeviceInfo( PmDeviceID id)"
  },
  {
    "label": "Pm_OpenInput()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmError)",
    "insertText": "Pm_OpenInput(PortMidiStream** stream, PmDeviceID inputDevice, void *inputDriverInfo, int32_t bufferSize, PmTimeProcPtr time_proc, void *time_info)"
  },
  {
    "label": "Pm_OpenOutput()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmError)",
    "insertText": "Pm_OpenOutput(PortMidiStream** stream, PmDeviceID outputDevice, void *outputDriverInfo, int32_t bufferSize, PmTimeProcPtr time_proc, void *time_info, int32_t latency)"
  },
  {
    "label": "PM_FILT_ACTIVE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "PM_FILT_ACTIVE(1 << 0x0E) #define PM_FILT_SYSEX (1 << 0x00) #define PM_FILT_CLOCK (1 << 0x08) #define PM_FILT_PLAY ((1 << 0x0A) | (1 << 0x0C) | (1 << 0x0B)) #define PM_FILT_TICK (1 << 0x09) #define PM_FILT_FD (1 << 0x0D) #define PM_FILT_UNDEFINED PM_FILT_FD #define PM_FILT_RESET (1 << 0x0F) #define PM_FILT_REALTIME (PM_FILT_ACTIVE | PM_FILT_SYSEX | PM_FILT_CLOCK | \\ PM_FILT_PLAY | PM_FILT_UNDEFINED | PM_FILT_RESET | PM_FILT_TICK) #define PM_FILT_NOTE ((1 << 0x19) | (1 << 0x18)) #define PM_FILT_CHANNEL_AFTERTOUCH (1 << 0x1D) #define PM_FILT_POLY_AFTERTOUCH (1 << 0x1A) #define PM_FILT_AFTERTOUCH (PM_FILT_CHANNEL_AFTERTOUCH | PM_FILT_POLY_AFTERTOUCH) #define PM_FILT_PROGRAM (1 << 0x1C) #define PM_FILT_CONTROL (1 << 0x1B) #define PM_FILT_PITCHBEND (1 << 0x1E) #define PM_FILT_MTC (1 << 0x01) #define PM_FILT_SONG_POSITION (1 << 0x02) #define PM_FILT_SONG_SELECT (1 << 0x03) #define PM_FILT_TUNE (1 << 0x06) #define PM_FILT_SYSTEMCOMMON (PM_FILT_MTC | PM_FILT_SONG_POSITION | PM_FILT_SONG_SELECT | PM_FILT_TUNE) PMEXPORT PmError Pm_SetFilter( PortMidiStream* stream, int32_t filters)"
  },
  {
    "label": "Pm_Channel()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "Pm_Channel(channel) (1<<(channel)) PMEXPORT PmError Pm_SetChannelMask(PortMidiStream *stream, int mask)"
  },
  {
    "label": "Pm_Abort()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmError)",
    "insertText": "Pm_Abort(PortMidiStream* stream)"
  },
  {
    "label": "Pm_Close()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmError)",
    "insertText": "Pm_Close(PortMidiStream* stream)"
  },
  {
    "label": "Pm_Synchronize()",
    "kind": "Method",
    "detail": "Function (PmError)",
    "insertText": "Pm_Synchronize(PortMidiStream* stream)"
  },
  {
    "label": "Pm_Message()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "Pm_Message(status, data1, data2) \\ ((((data2) << 16) & 0xFF0000) | \\ (((data1) << 8) & 0xFF00) | \\ ((status) & 0xFF)) #define Pm_MessageStatus(msg) ((msg) & 0xFF) #define Pm_MessageData1(msg) (((msg) >> 8) & 0xFF) #define Pm_MessageData2(msg) (((msg) >> 16) & 0xFF)"
  },
  {
    "label": "Pm_Read()",
    "kind": "Method",
    "detail": "Function (typedef struct { PmMessage message ; PmTimestamp timestamp ; } PmEvent ; PMEXPORT int)",
    "insertText": "Pm_Read(PortMidiStream *stream, PmEvent *buffer, int32_t length)"
  },
  {
    "label": "Pm_Poll()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmError)",
    "insertText": "Pm_Poll(PortMidiStream *stream)"
  },
  {
    "label": "Pm_Write()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmError)",
    "insertText": "Pm_Write(PortMidiStream *stream, PmEvent *buffer, int32_t length)"
  },
  {
    "label": "Pm_WriteShort()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmError)",
    "insertText": "Pm_WriteShort(PortMidiStream *stream, PmTimestamp when, int32_t msg)"
  },
  {
    "label": "Pm_WriteSysEx()",
    "kind": "Method",
    "detail": "Function (PMEXPORT PmError)",
    "insertText": "Pm_WriteSysEx(PortMidiStream *stream, PmTimestamp when, unsigned char *msg)"
  }
]