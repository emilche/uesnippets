[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "GetComApartmentTypeForThread()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_WIN_COM_INIT_UTIL_H_ # define BASE_WIN_COM_INIT_UTIL_H_ # include \" base / base_export . h \" # include \" base / check_op . h \" namespace base { namespace win { enum class ComApartmentType { NONE,STA,MTA,} ; BASE_EXPORT ComApartmentType)",
    "insertText": "GetComApartmentTypeForThread()"
  },
  {
    "label": "DCHECK_IS_ON()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "DCHECK_IS_ON() BASE_EXPORT void AssertComInitialized(const char* message = nullptr)"
  },
  {
    "label": "AssertComApartmentType()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT void)",
    "insertText": "AssertComApartmentType(ComApartmentType apartment_type)"
  },
  {
    "label": "AssertComInitialized()",
    "kind": "Method",
    "detail": "Function (# else void)",
    "insertText": "AssertComInitialized()"
  }
]