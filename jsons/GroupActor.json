[
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "UTypedElementSelectionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementSelectionSet"
  },
  {
    "label": "AGroupActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGroupActor"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AGroupActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGroupActor"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "GroupApplyDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GroupApplyDelta(const FVector& InDrag, const FRotator& InRot, const FVector& InScale )"
  },
  {
    "label": "DrawBracketsForGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawBracketsForGroups( class FPrimitiveDrawInterface* PDI, FViewport* Viewport, bool bMustBeSelected=true )"
  },
  {
    "label": "RemoveSubGroupsFromArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSubGroupsFromArray(TArray<AGroupActor*>& GroupArray)"
  },
  {
    "label": "NumActiveGroups()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumActiveGroups( bool bSelected=false, bool bDeepSearch=true )"
  },
  {
    "label": "AddSelectedActorsToSelectedGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSelectedActorsToSelectedGroup()"
  },
  {
    "label": "LockSelectedGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockSelectedGroups()"
  },
  {
    "label": "UnlockSelectedGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockSelectedGroups()"
  },
  {
    "label": "ToggleGroupMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleGroupMode()"
  },
  {
    "label": "SelectGroupsInSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectGroupsInSelection()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Lock()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(AActor& InActor)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(AActor& InActor)"
  },
  {
    "label": "ClearAndRemove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAndRemove()"
  },
  {
    "label": "CenterGroupLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CenterGroupLocation()"
  },
  {
    "label": "PostRemove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRemove()"
  },
  {
    "label": "SelectedGroupNeedsFixup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectedGroupNeedsFixup()"
  },
  {
    "label": "FixupGroupActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupGroupActor()"
  },
  {
    "label": "ActorHasParentInGroup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ActorHasParentInGroup(const AActor* Actor, const AGroupActor* GroupActor)"
  },
  {
    "label": "ActorHasParentInSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ActorHasParentInSelection(const AActor* Actor, FTypedElementListConstRef SelectionSet)"
  }
]