[
  {
    "label": "PDBSymDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymDumper"
  },
  {
    "label": "PDBSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbol"
  },
  {
    "label": "IPDBDataStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPDBDataStream"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "IPDBEnumChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPDBEnumChildren"
  },
  {
    "label": "IPDBLineNumber",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPDBLineNumber"
  },
  {
    "label": "IPDBRawSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPDBRawSymbol"
  },
  {
    "label": "IPDBSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPDBSession"
  },
  {
    "label": "IPDBSourceFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPDBSourceFile"
  },
  {
    "label": "PDBSymbolExe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolExe"
  },
  {
    "label": "PDBSymbolCompiland",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolCompiland"
  },
  {
    "label": "PDBSymbolCompilandDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolCompilandDetails"
  },
  {
    "label": "PDBSymbolCompilandEnv",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolCompilandEnv"
  },
  {
    "label": "PDBSymbolFunc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolFunc"
  },
  {
    "label": "PDBSymbolBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolBlock"
  },
  {
    "label": "PDBSymbolData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolData"
  },
  {
    "label": "PDBSymbolAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolAnnotation"
  },
  {
    "label": "PDBSymbolLabel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolLabel"
  },
  {
    "label": "PDBSymbolPublicSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolPublicSymbol"
  },
  {
    "label": "PDBSymbolTypeUDT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeUDT"
  },
  {
    "label": "PDBSymbolTypeEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeEnum"
  },
  {
    "label": "PDBSymbolTypeFunctionSig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeFunctionSig"
  },
  {
    "label": "PDBSymbolTypePointer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypePointer"
  },
  {
    "label": "PDBSymbolTypeArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeArray"
  },
  {
    "label": "PDBSymbolTypeBuiltin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeBuiltin"
  },
  {
    "label": "PDBSymbolTypeTypedef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeTypedef"
  },
  {
    "label": "PDBSymbolTypeBaseClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeBaseClass"
  },
  {
    "label": "PDBSymbolTypeFriend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeFriend"
  },
  {
    "label": "PDBSymbolTypeFunctionArg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeFunctionArg"
  },
  {
    "label": "PDBSymbolFuncDebugStart",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolFuncDebugStart"
  },
  {
    "label": "PDBSymbolFuncDebugEnd",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolFuncDebugEnd"
  },
  {
    "label": "PDBSymbolUsingNamespace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolUsingNamespace"
  },
  {
    "label": "PDBSymbolTypeVTableShape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeVTableShape"
  },
  {
    "label": "PDBSymbolTypeVTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeVTable"
  },
  {
    "label": "PDBSymbolCustom",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolCustom"
  },
  {
    "label": "PDBSymbolThunk",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolThunk"
  },
  {
    "label": "PDBSymbolTypeCustom",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeCustom"
  },
  {
    "label": "PDBSymbolTypeManaged",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeManaged"
  },
  {
    "label": "PDBSymbolTypeDimension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolTypeDimension"
  },
  {
    "label": "PDBSymbolUnknown",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolUnknown"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "PDB_UniqueId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PDB_UniqueId"
  },
  {
    "label": "PDB_NameSearchFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PDB_NameSearchFlags"
  },
  {
    "label": "VersionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VersionInfo"
  },
  {
    "label": "PDB_VariantType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PDB_VariantType"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Variant"
  },
  {
    "label": "hash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash"
  },
  {
    "label": "Variant()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_DEBUGINFO_PDB_PDBTYPES_H # define LLVM_DEBUGINFO_PDB_PDBTYPES_H # include \" llvm / Config / llvm - config . h \" # include<functional> # include<stdint . h> namespace llvm { class PDBSymDumper ; class PDBSymbol ; class IPDBDataStream ; template<class T> class IPDBEnumChildren ; class IPDBLineNumber ; class IPDBRawSymbol ; class IPDBSession ; class IPDBSourceFile ; typedef IPDBEnumChildren<PDBSymbol> IPDBEnumSymbols ; typedef IPDBEnumChildren<IPDBSourceFile> IPDBEnumSourceFiles ; typedef IPDBEnumChildren<IPDBDataStream> IPDBEnumDataStreams ; typedef IPDBEnumChildren<IPDBLineNumber> IPDBEnumLineNumbers ; class PDBSymbolExe ; class PDBSymbolCompiland ; class PDBSymbolCompilandDetails ; class PDBSymbolCompilandEnv ; class PDBSymbolFunc ; class PDBSymbolBlock ; class PDBSymbolData ; class PDBSymbolAnnotation ; class PDBSymbolLabel ; class PDBSymbolPublicSymbol ; class PDBSymbolTypeUDT ; class PDBSymbolTypeEnum ; class PDBSymbolTypeFunctionSig ; class PDBSymbolTypePointer ; class PDBSymbolTypeArray ; class PDBSymbolTypeBuiltin ; class PDBSymbolTypeTypedef ; class PDBSymbolTypeBaseClass ; class PDBSymbolTypeFriend ; class PDBSymbolTypeFunctionArg ; class PDBSymbolFuncDebugStart ; class PDBSymbolFuncDebugEnd ; class PDBSymbolUsingNamespace ; class PDBSymbolTypeVTableShape ; class PDBSymbolTypeVTable ; class PDBSymbolCustom ; class PDBSymbolThunk ; class PDBSymbolTypeCustom ; class PDBSymbolTypeManaged ; class PDBSymbolTypeDimension ; class PDBSymbolUnknown ; enum class PDB_ReaderType { DIA = 0,} ; struct PDB_UniqueId { uint64_t HighPart ; uint64_t LowPart ; } ; enum class PDB_TableType { Symbols,SourceFiles,LineNumbers,SectionContribs,Segments,InjectedSources,FrameData } ; enum PDB_NameSearchFlags { NS_Default = 0 x0,NS_CaseSensitive = 0 x1,NS_CaseInsensitive = 0 x2,NS_FileNameExtMatch = 0 x4,NS_Regex = 0 x8,NS_UndecoratedName = 0 x10 } ; enum class PDB_Checksum { None = 0,MD5 = 1,SHA1 = 2 } ; enum class PDB_Cpu { Intel8080 = 0 x0,Intel8086 = 0 x1,Intel80286 = 0 x2,Intel80386 = 0 x3,Intel80486 = 0 x4,Pentium = 0 x5,PentiumPro = 0 x6,Pentium3 = 0 x7,MIPS = 0 x10,MIPS16 = 0 x11,MIPS32 = 0 x12,MIPS64 = 0 x13,MIPSI = 0 x14,MIPSII = 0 x15,MIPSIII = 0 x16,MIPSIV = 0 x17,MIPSV = 0 x18,M68000 = 0 x20,M68010 = 0 x21,M68020 = 0 x22,M68030 = 0 x23,M68040 = 0 x24,Alpha = 0 x30,Alpha21164 = 0 x31,Alpha21164A = 0 x32,Alpha21264 = 0 x33,Alpha21364 = 0 x34,PPC601 = 0 x40,PPC603 = 0 x41,PPC604 = 0 x42,PPC620 = 0 x43,PPCFP = 0 x44,PPCBE = 0 x45,SH3 = 0 x50,SH3E = 0 x51,SH3DSP = 0 x52,SH4 = 0 x53,SHMedia = 0 x54,ARM3 = 0 x60,ARM4 = 0 x61,ARM4T = 0 x62,ARM5 = 0 x63,ARM5T = 0 x64,ARM6 = 0 x65,ARM_XMAC = 0 x66,ARM_WMMX = 0 x67,ARM7 = 0 x68,Omni = 0 x70,Ia64 = 0 x80,Ia64_2 = 0 x81,CEE = 0 x90,AM33 = 0 xa0,M32R = 0 xb0,TriCore = 0 xc0,X64 = 0 xd0,EBC = 0 xe0,Thumb = 0 xf0,ARMNT = 0 xf4,D3D11_Shader = 0 x100,} ; enum class PDB_Machine { Invalid = 0 xffff,Unknown = 0 x0,Am33 = 0 x13,Amd64 = 0 x8664,Arm = 0 x1C0,ArmNT = 0 x1C4,Ebc = 0 xEBC,x86 = 0 x14C,Ia64 = 0 x200,M32R = 0 x9041,Mips16 = 0 x266,MipsFpu = 0 x366,MipsFpu16 = 0 x466,PowerPC = 0 x1F0,PowerPCFP = 0 x1F1,R4000 = 0 x166,SH3 = 0 x1A2,SH3DSP = 0 x1A3,SH4 = 0 x1A6,SH5 = 0 x1A8,Thumb = 0 x1C2,WceMipsV2 = 0 x169 } ; enum class PDB_CallingConv { NearCdecl = 0 x00,FarCdecl = 0 x01,NearPascal = 0 x02,FarPascal = 0 x03,NearFastcall = 0 x04,FarFastcall = 0 x05,Skipped = 0 x06,NearStdcall = 0 x07,FarStdcall = 0 x08,NearSyscall = 0 x09,FarSyscall = 0 x0a,Thiscall = 0 x0b,MipsCall = 0 x0c,Generic = 0 x0d,Alphacall = 0 x0e,Ppccall = 0 x0f,SuperHCall = 0 x10,Armcall = 0 x11,AM33call = 0 x12,Tricall = 0 x13,Sh5call = 0 x14,M32R = 0 x15,Clrcall = 0 x16,= 0 x17,NearVectorcall = 0 x18,Reserved = 0 x19,} ; enum class PDB_Lang { C = 0 x00,Cpp = 0 x01,Fortran = 0 x02,Masm = 0 x03,Pascal = 0 x04,Basic = 0 x05,Cobol = 0 x06,Link = 0 x07,Cvtres = 0 x08,Cvtpgd = 0 x09,CSharp = 0 x0a,VB = 0 x0b,ILAsm = 0 x0c,Java = 0 x0d,JScript = 0 x0e,MSIL = 0 x0f,HLSL = 0 x10 } ; enum class PDB_DataKind { Unknown,Local,StaticLocal,Param,ObjectPtr,FileStatic,Global,Member,StaticMember,Constant } ; enum class PDB_SymType { None,Exe,Compiland,CompilandDetails,CompilandEnv,Function,Block,Data,Annotation,Label,PublicSymbol,UDT,Enum,FunctionSig,PointerType,ArrayType,BuiltinType,Typedef,BaseClass,,FunctionArg,FuncDebugStart,FuncDebugEnd,UsingNamespace,VTableShape,VTable,Custom,Thunk,CustomType,ManagedType,Dimension,Max } ; enum class PDB_LocType { Null,,TLS,RegRel,ThisRel,Enregistered,BitField,Slot,IlRel,MetaData,Constant,Max } ; enum class PDB_ThunkOrdinal { Standard,ThisAdjustor,Vcall,Pcode,UnknownLoad,TrampIncremental,BranchIsland } ; enum class PDB_UdtType { Struct,Class,Union,Interface } ; # ifdef FPO # undef FPO # endif enum class PDB_StackFrameType { FPO,KernelTrap,KernelTSS,EBP,FrameData } ; enum class PDB_MemoryType { Code,Data,Stack,HeapCode } ; enum class PDB_BuiltinType { None = 0,Void = 1,Char = 2,WCharT = 3,Int = 6,UInt = 7,Float = 8,BCD = 9,Bool = 1 0,Long = 1 3,ULong = 1 4,Currency = 2 5,Date = 2 6,Variant = 2 7,Complex = 2 8,Bitfield = 2 9,BSTR = 3 0,HResult = 3 1 } ; enum class PDB_RegisterId { Unknown = 0,VFrame = 3 0 0 0 6,AL = 1,CL = 2,DL = 3,BL = 4,AH = 5,CH = 6,DH = 7,BH = 8,AX = 9,CX = 1 0,DX = 1 1,BX = 1 2,SP = 1 3,BP = 1 4,SI = 1 5,DI = 1 6,EAX = 1 7,ECX = 1 8,EDX = 1 9,EBX = 2 0,ESP = 2 1,EBP = 2 2,ESI = 2 3,EDI = 2 4,ES = 2 5,CS = 2 6,SS = 2 7,DS = 2 8,FS = 2 9,GS = 3 0,IP = 3 1,RAX = 3 2 8,RBX = 3 2 9,RCX = 3 3 0,RDX = 3 3 1,RSI = 3 3 2,RDI = 3 3 3,RBP = 3 3 4,RSP = 3 3 5,R8 = 3 3 6,R9 = 3 3 7,R10 = 3 3 8,R11 = 3 3 9,R12 = 3 4 0,R13 = 3 4 1,R14 = 3 4 2,R15 = 3 4 3,} ; enum class PDB_MemberAccess { Private = 1,Protected = 2,Public = 3 } ; enum class PDB_ErrorCode { Success,NoPdbImpl,InvalidPath,InvalidFileFormat,InvalidParameter,AlreadyLoaded,UnknownError,NoMemory,DebugInfoMismatch } ; struct VersionInfo { uint32_t Major ; uint32_t Minor ; uint32_t Build ; uint32_t QFE ; } ; enum PDB_VariantType { Empty,Unknown,Int8,Int16,Int32,Int64,Single,Double,UInt8,UInt16,UInt32,UInt64,Bool,} ; struct Variant {)",
    "insertText": "Variant() : Type(PDB_VariantType::Empty)"
  },
  {
    "label": "VARIANT_EQUAL_CASE()",
    "kind": "Method",
    "detail": "Function (} PDB_VariantType Type ; union { bool Bool ; int8_t Int8 ; int16_t Int16 ; int32_t Int32 ; int64_t Int64 ; float Single ; double Double ; uint8_t UInt8 ; uint16_t UInt16 ; uint32_t UInt32 ; uint64_t UInt64 ; } ; # define)",
    "insertText": "VARIANT_EQUAL_CASE(Enum)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const Variant &Other)"
  },
  {
    "label": "VARIANT_EQUAL_CASE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VARIANT_EQUAL_CASE(Bool) VARIANT_EQUAL_CASE(Int8) VARIANT_EQUAL_CASE(Int16) VARIANT_EQUAL_CASE(Int32) VARIANT_EQUAL_CASE(Int64) VARIANT_EQUAL_CASE(Single) VARIANT_EQUAL_CASE(Double) VARIANT_EQUAL_CASE(UInt8) VARIANT_EQUAL_CASE(UInt16) VARIANT_EQUAL_CASE(UInt32) VARIANT_EQUAL_CASE(UInt64)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; } namespace std { template<> struct hash<llvm::PDB_SymType> { typedef llvm::PDB_SymType argument_type ; typedef std::size_t result_type ; result_type)",
    "insertText": "operator()(const argument_type &Arg)"
  }
]