[
  {
    "label": "TensorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TensorBase"
  },
  {
    "label": "Tensor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Tensor"
  },
  {
    "label": "TensorFixedSize",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TensorFixedSize"
  },
  {
    "label": "Eigen",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Eigen"
  },
  {
    "label": "nullaryExpr()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_CXX11_TENSOR_TENSOR_BASE_H # define EIGEN_CXX11_TENSOR_TENSOR_BASE_H namespace Eigen { # ifndef EIGEN_PARSED_BY_DOXYGEN template<Derived> class TensorBase<Derived,ReadOnlyAccessors> { public : typedef internal::traits<Derived> DerivedTraits ; typedef DerivedTraits::Scalar Scalar ; typedef DerivedTraits::Index Index ; typedef internal::remove_const<Scalar>::type CoeffReturnType ; const int NumDimensions = DerivedTraits::NumDimensions ; template<CustomNullaryOp> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseNullaryOp<CustomNullaryOp,const Derived>)",
    "insertText": "nullaryExpr(const CustomNullaryOp& func)"
  },
  {
    "label": "constant()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseNullaryOp<internal::scalar_constant_op<Scalar>,const Derived>)",
    "insertText": "constant(const Scalar& value)"
  },
  {
    "label": "random()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseNullaryOp<internal::UniformRandomGenerator<Scalar>,const Derived>)",
    "insertText": "random()"
  },
  {
    "label": "random()",
    "kind": "Method",
    "detail": "Function (} template<RandomGenerator> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseNullaryOp<RandomGenerator,const Derived>)",
    "insertText": "random(const RandomGenerator& gen = RandomGenerator())"
  },
  {
    "label": "generate()",
    "kind": "Method",
    "detail": "Function (} template<Generator> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorGeneratorOp<Generator,const Derived>)",
    "insertText": "generate(const Generator& generator)"
  },
  {
    "label": "unaryExpr()",
    "kind": "Method",
    "detail": "Function (} template<CustomUnaryOp> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<CustomUnaryOp,const Derived>)",
    "insertText": "unaryExpr(const CustomUnaryOp& func)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_opposite_op<Scalar>,const Derived>)",
    "insertText": "operator()"
  },
  {
    "label": "sqrt()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_sqrt_op<Scalar>,const Derived>)",
    "insertText": "sqrt()"
  },
  {
    "label": "sign()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_sign_op<Scalar>,const Derived>)",
    "insertText": "sign()"
  },
  {
    "label": "rsqrt()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_rsqrt_op<Scalar>,const Derived>)",
    "insertText": "rsqrt()"
  },
  {
    "label": "square()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_square_op<Scalar>,const Derived>)",
    "insertText": "square()"
  },
  {
    "label": "cube()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_cube_op<Scalar>,const Derived>)",
    "insertText": "cube()"
  },
  {
    "label": "inverse()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_inverse_op<Scalar>,const Derived>)",
    "insertText": "inverse()"
  },
  {
    "label": "tanh()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_tanh_op<Scalar>,const Derived>)",
    "insertText": "tanh()"
  },
  {
    "label": "lgamma()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_lgamma_op<Scalar>,const Derived>)",
    "insertText": "lgamma()"
  },
  {
    "label": "digamma()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_digamma_op<Scalar>,const Derived>)",
    "insertText": "digamma()"
  },
  {
    "label": "bessel_i0()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_i0_op<Scalar>,const Derived>)",
    "insertText": "bessel_i0()"
  },
  {
    "label": "bessel_i0e()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_i0e_op<Scalar>,const Derived>)",
    "insertText": "bessel_i0e()"
  },
  {
    "label": "bessel_i1()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_i1_op<Scalar>,const Derived>)",
    "insertText": "bessel_i1()"
  },
  {
    "label": "bessel_i1e()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_i1e_op<Scalar>,const Derived>)",
    "insertText": "bessel_i1e()"
  },
  {
    "label": "bessel_j0()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_j0_op<Scalar>,const Derived>)",
    "insertText": "bessel_j0()"
  },
  {
    "label": "bessel_y0()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_y0_op<Scalar>,const Derived>)",
    "insertText": "bessel_y0()"
  },
  {
    "label": "bessel_j1()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_j1_op<Scalar>,const Derived>)",
    "insertText": "bessel_j1()"
  },
  {
    "label": "bessel_y1()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_y1_op<Scalar>,const Derived>)",
    "insertText": "bessel_y1()"
  },
  {
    "label": "bessel_k0()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_k0_op<Scalar>,const Derived>)",
    "insertText": "bessel_k0()"
  },
  {
    "label": "bessel_k0e()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_k0e_op<Scalar>,const Derived>)",
    "insertText": "bessel_k0e()"
  },
  {
    "label": "bessel_k1()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_k1_op<Scalar>,const Derived>)",
    "insertText": "bessel_k1()"
  },
  {
    "label": "bessel_k1e()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_bessel_k1e_op<Scalar>,const Derived>)",
    "insertText": "bessel_k1e()"
  },
  {
    "label": "igamma()",
    "kind": "Method",
    "detail": "Function (} template<OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_igamma_op<Scalar>,const Derived,const OtherDerived>)",
    "insertText": "igamma(const OtherDerived& other)"
  },
  {
    "label": "igamma_der_a()",
    "kind": "Method",
    "detail": "Function (} template<OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_igamma_der_a_op<Scalar>,const Derived,const OtherDerived>)",
    "insertText": "igamma_der_a(const OtherDerived& other)"
  },
  {
    "label": "gamma_sample_der_alpha()",
    "kind": "Method",
    "detail": "Function (} template<OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_gamma_sample_der_alpha_op<Scalar>,const Derived,const OtherDerived>)",
    "insertText": "gamma_sample_der_alpha(const OtherDerived& other)"
  },
  {
    "label": "igammac()",
    "kind": "Method",
    "detail": "Function (} template<OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_igammac_op<Scalar>,const Derived,const OtherDerived>)",
    "insertText": "igammac(const OtherDerived& other)"
  },
  {
    "label": "zeta()",
    "kind": "Method",
    "detail": "Function (} template<OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_zeta_op<Scalar>,const Derived,const OtherDerived>)",
    "insertText": "zeta(const OtherDerived& other)"
  },
  {
    "label": "polygamma()",
    "kind": "Method",
    "detail": "Function (} template<OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_polygamma_op<Scalar>,const Derived,const OtherDerived>)",
    "insertText": "polygamma(const OtherDerived& other)"
  },
  {
    "label": "erf()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_erf_op<Scalar>,const Derived>)",
    "insertText": "erf()"
  },
  {
    "label": "erfc()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_erfc_op<Scalar>,const Derived>)",
    "insertText": "erfc()"
  },
  {
    "label": "ndtri()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_ndtri_op<Scalar>,const Derived>)",
    "insertText": "ndtri()"
  },
  {
    "label": "sigmoid()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_logistic_op<Scalar>,const Derived>)",
    "insertText": "sigmoid()"
  },
  {
    "label": "exp()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_exp_op<Scalar>,const Derived>)",
    "insertText": "exp()"
  },
  {
    "label": "expm1()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_expm1_op<Scalar>,const Derived>)",
    "insertText": "expm1()"
  },
  {
    "label": "log()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_log_op<Scalar>,const Derived>)",
    "insertText": "log()"
  },
  {
    "label": "log1p()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_log1p_op<Scalar>,const Derived>)",
    "insertText": "log1p()"
  },
  {
    "label": "log2()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_log2_op<Scalar>,const Derived>)",
    "insertText": "log2()"
  },
  {
    "label": "abs()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_abs_op<Scalar>,const Derived>)",
    "insertText": "abs()"
  },
  {
    "label": "clip()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_clamp_op<Scalar>,const Derived>)",
    "insertText": "clip(Scalar min, Scalar max)"
  },
  {
    "label": "conjugate()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const internal::conditional<NumTraits<CoeffReturnType>::IsComplex,TensorCwiseUnaryOp<internal::scalar_conjugate_op<Scalar>,const Derived>,Derived>::type)",
    "insertText": "conjugate()"
  },
  {
    "label": "pow()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::bind2nd_op<internal::scalar_pow_op<Scalar,Scalar>>,const Derived>)",
    "insertText": "pow(Scalar exponent)"
  },
  {
    "label": "real()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_real_op<Scalar>,const Derived>)",
    "insertText": "real()"
  },
  {
    "label": "imag()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_imag_op<Scalar>,const Derived>)",
    "insertText": "imag()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::bind2nd_op<internal::scalar_sum_op<Scalar,Scalar>>,const Derived>)",
    "insertText": "operator(Scalar rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::bind1st_op<internal::scalar_sum_op<Scalar>>,const Derived>)",
    "insertText": "operator(Scalar lhs, const Derived& rhs)"
  },
  {
    "label": "EIGEN_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT((NumTraits<Scalar>::IsSigned || internal::is_same<Scalar, const std::complex<float> >::value), YOU_MADE_A_PROGRAMMING_MISTAKE)"
  },
  {
    "label": "EIGEN_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT(NumTraits<Scalar>::IsInteger, YOU_MADE_A_PROGRAMMING_MISTAKE_TRY_MOD)"
  },
  {
    "label": "cwiseMax()",
    "kind": "Method",
    "detail": "Function (} template<int NanPropagation = PropagateFast> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_max_op<Scalar,Scalar,NanPropagation>,const Derived,const TensorCwiseNullaryOp<internal::scalar_constant_op<Scalar>,const Derived>>)",
    "insertText": "cwiseMax(Scalar threshold)"
  },
  {
    "label": "cwiseMin()",
    "kind": "Method",
    "detail": "Function (} template<int NanPropagation = PropagateFast> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_min_op<Scalar,Scalar,NanPropagation>,const Derived,const TensorCwiseNullaryOp<internal::scalar_constant_op<Scalar>,const Derived>>)",
    "insertText": "cwiseMin(Scalar threshold)"
  },
  {
    "label": "cast()",
    "kind": "Method",
    "detail": "Function (} template<NewType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const internal::conditional<internal::is_same<NewType,CoeffReturnType>::value,Derived,TensorConversionOp<NewType,const Derived>>::type)",
    "insertText": "cast()"
  },
  {
    "label": "round()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_round_op<Scalar>,const Derived>)",
    "insertText": "round()"
  },
  {
    "label": "rint()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_rint_op<Scalar>,const Derived>)",
    "insertText": "rint()"
  },
  {
    "label": "ceil()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_ceil_op<Scalar>,const Derived>)",
    "insertText": "ceil()"
  },
  {
    "label": "floor()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_floor_op<Scalar>,const Derived>)",
    "insertText": "floor()"
  },
  {
    "label": "binaryExpr()",
    "kind": "Method",
    "detail": "Function (} template<CustomBinaryOp,OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<CustomBinaryOp,const Derived,const OtherDerived>)",
    "insertText": "binaryExpr(const OtherDerived& other, const CustomBinaryOp& func)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_sum_op<Scalar>,const Derived,const OtherDerived>)",
    "insertText": "operator(const OtherDerived& other)"
  },
  {
    "label": "cwiseMax()",
    "kind": "Method",
    "detail": "Function (} template<int NaNPropagation = PropagateFast,OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_max_op<Scalar,Scalar,NaNPropagation>,const Derived,const OtherDerived>)",
    "insertText": "cwiseMax(const OtherDerived& other)"
  },
  {
    "label": "cwiseMin()",
    "kind": "Method",
    "detail": "Function (} template<int NaNPropagation = PropagateFast,OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_min_op<Scalar,Scalar,NaNPropagation>,const Derived,const OtherDerived>)",
    "insertText": "cwiseMin(const OtherDerived& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseBinaryOp<internal::scalar_cmp_op<Scalar,Scalar,internal::cmp_LT>,const Derived,const TensorCwiseNullaryOp<internal::scalar_constant_op<Scalar>,const Derived>>)",
    "insertText": "operator(Scalar threshold)"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_isnan_op<Scalar>,const)",
    "insertText": "Derived(isnan)()"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_isinf_op<Scalar>,const)",
    "insertText": "Derived(isinf)()"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_isfinite_op<Scalar>,const)",
    "insertText": "Derived(isfinite)()"
  },
  {
    "label": "select()",
    "kind": "Method",
    "detail": "Function (} template<ThenDerived,ElseDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorSelectOp<const Derived,const ThenDerived,const ElseDerived>)",
    "insertText": "select(const ThenDerived& thenTensor, const ElseDerived& elseTensor)"
  },
  {
    "label": "contract()",
    "kind": "Method",
    "detail": "Function (} typedef Eigen::IndexPair<Index> DimensionPair ; template<OtherDerived,Dimensions> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorContractionOp<const Dimensions,const Derived,const OtherDerived,const NoOpOutputKernel>)",
    "insertText": "contract(const OtherDerived& other, const Dimensions& dims)"
  },
  {
    "label": "contract()",
    "kind": "Method",
    "detail": "Function (} template<OtherDerived,Dimensions,OutputKernel> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorContractionOp<const Dimensions,const Derived,const OtherDerived,const OutputKernel>)",
    "insertText": "contract(const OtherDerived& other, const Dimensions& dims, const OutputKernel& output_kernel)"
  },
  {
    "label": "convolve()",
    "kind": "Method",
    "detail": "Function (} template<KernelDerived,Dimensions> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorConvolutionOp<const Dimensions,const Derived,const KernelDerived>)",
    "insertText": "convolve(const KernelDerived& kernel, const Dimensions& dims)"
  },
  {
    "label": "fft()",
    "kind": "Method",
    "detail": "Function (} template<int FFTDataType,int FFTDirection,FFT> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorFFTOp<const FFT,const Derived,FFTDataType,FFTDirection>)",
    "insertText": "fft(const FFT& dims)"
  },
  {
    "label": "cumsum()",
    "kind": "Method",
    "detail": "Function (} typedef TensorScanOp<internal::SumReducer<CoeffReturnType>,const Derived> TensorScanSumOp ; EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorScanSumOp)",
    "insertText": "cumsum(const Index& axis, bool exclusive = false)"
  },
  {
    "label": "cumprod()",
    "kind": "Method",
    "detail": "Function (} typedef TensorScanOp<internal::ProdReducer<CoeffReturnType>,const Derived> TensorScanProdOp ; EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorScanProdOp)",
    "insertText": "cumprod(const Index& axis, bool exclusive = false)"
  },
  {
    "label": "scan()",
    "kind": "Method",
    "detail": "Function (} template<Reducer> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorScanOp<Reducer,const Derived>)",
    "insertText": "scan(const Index& axis, const Reducer& reducer, bool exclusive = false)"
  },
  {
    "label": "sum()",
    "kind": "Method",
    "detail": "Function (} template<Dims> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReductionOp<internal::SumReducer<CoeffReturnType>,const Dims,const Derived>)",
    "insertText": "sum(const Dims& dims)"
  },
  {
    "label": "sum()",
    "kind": "Method",
    "detail": "Function (} const TensorReductionOp<internal::SumReducer<CoeffReturnType>,const DimensionList<Index,NumDimensions>,const Derived>)",
    "insertText": "sum()"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (DimensionList<Index,NumDimensions> in_dims ; return TensorReductionOp<internal::SumReducer<CoeffReturnType>,const DimensionList<Index,NumDimensions>,const)",
    "insertText": "Derived(derived(), in_dims, internal::SumReducer<CoeffReturnType>())"
  },
  {
    "label": "mean()",
    "kind": "Method",
    "detail": "Function (} template<Dims> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReductionOp<internal::MeanReducer<CoeffReturnType>,const Dims,const Derived>)",
    "insertText": "mean(const Dims& dims)"
  },
  {
    "label": "mean()",
    "kind": "Method",
    "detail": "Function (} const TensorReductionOp<internal::MeanReducer<CoeffReturnType>,const DimensionList<Index,NumDimensions>,const Derived>)",
    "insertText": "mean()"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (DimensionList<Index,NumDimensions> in_dims ; return TensorReductionOp<internal::MeanReducer<CoeffReturnType>,const DimensionList<Index,NumDimensions>,const)",
    "insertText": "Derived(derived(), in_dims, internal::MeanReducer<CoeffReturnType>())"
  },
  {
    "label": "prod()",
    "kind": "Method",
    "detail": "Function (} template<Dims> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReductionOp<internal::ProdReducer<CoeffReturnType>,const Dims,const Derived>)",
    "insertText": "prod(const Dims& dims)"
  },
  {
    "label": "prod()",
    "kind": "Method",
    "detail": "Function (} const TensorReductionOp<internal::ProdReducer<CoeffReturnType>,const DimensionList<Index,NumDimensions>,const Derived>)",
    "insertText": "prod()"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (DimensionList<Index,NumDimensions> in_dims ; return TensorReductionOp<internal::ProdReducer<CoeffReturnType>,const DimensionList<Index,NumDimensions>,const)",
    "insertText": "Derived(derived(), in_dims, internal::ProdReducer<CoeffReturnType>())"
  },
  {
    "label": "maximum()",
    "kind": "Method",
    "detail": "Function (} template<Dims,int NanPropagation = PropagateFast> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReductionOp<internal::MaxReducer<CoeffReturnType,NanPropagation>,const Dims,const Derived>)",
    "insertText": "maximum(const Dims& dims)"
  },
  {
    "label": "maximum()",
    "kind": "Method",
    "detail": "Function (} template<int NanPropagation = PropagateFast> const TensorReductionOp<internal::MaxReducer<CoeffReturnType,NanPropagation>,const DimensionList<Index,NumDimensions>,const Derived>)",
    "insertText": "maximum()"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (DimensionList<Index,NumDimensions> in_dims ; return TensorReductionOp<internal::MaxReducer<CoeffReturnType,NanPropagation>,const DimensionList<Index,NumDimensions>,const)",
    "insertText": "Derived(derived(), in_dims, internal::MaxReducer<CoeffReturnType,NanPropagation>())"
  },
  {
    "label": "minimum()",
    "kind": "Method",
    "detail": "Function (} template<Dims,int NanPropagation = PropagateFast> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReductionOp<internal::MinReducer<CoeffReturnType,NanPropagation>,const Dims,const Derived>)",
    "insertText": "minimum(const Dims& dims)"
  },
  {
    "label": "minimum()",
    "kind": "Method",
    "detail": "Function (} template<int NanPropagation = PropagateFast> const TensorReductionOp<internal::MinReducer<CoeffReturnType,NanPropagation>,const DimensionList<Index,NumDimensions>,const Derived>)",
    "insertText": "minimum()"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (DimensionList<Index,NumDimensions> in_dims ; return TensorReductionOp<internal::MinReducer<CoeffReturnType,NanPropagation>,const DimensionList<Index,NumDimensions>,const)",
    "insertText": "Derived(derived(), in_dims, internal::MinReducer<CoeffReturnType,NanPropagation>())"
  },
  {
    "label": "all()",
    "kind": "Method",
    "detail": "Function (} template<Dims> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReductionOp<internal::AndReducer,const Dims,const internal::conditional<internal::is_same<bool,CoeffReturnType>::value,Derived,TensorConversionOp<bool,const Derived>>::type>)",
    "insertText": "all(const Dims& dims)"
  },
  {
    "label": "all()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReductionOp<internal::AndReducer,const DimensionList<Index,NumDimensions>,const internal::conditional<internal::is_same<bool,CoeffReturnType>::value,Derived,TensorConversionOp<bool,const Derived>>::type>)",
    "insertText": "all()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (DimensionList<Index,NumDimensions> in_dims ; return cast<)",
    "insertText": "bool().reduce(in_dims, internal::AndReducer())"
  },
  {
    "label": "any()",
    "kind": "Method",
    "detail": "Function (} template<Dims> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReductionOp<internal::OrReducer,const Dims,const internal::conditional<internal::is_same<bool,CoeffReturnType>::value,Derived,TensorConversionOp<bool,const Derived>>::type>)",
    "insertText": "any(const Dims& dims)"
  },
  {
    "label": "any()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReductionOp<internal::OrReducer,const DimensionList<Index,NumDimensions>,const internal::conditional<internal::is_same<bool,CoeffReturnType>::value,Derived,TensorConversionOp<bool,const Derived>>::type>)",
    "insertText": "any()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (DimensionList<Index,NumDimensions> in_dims ; return cast<)",
    "insertText": "bool().reduce(in_dims, internal::OrReducer())"
  },
  {
    "label": "argmax()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorTupleReducerOp<internal::ArgMaxTupleReducer<Tuple<Index,CoeffReturnType>>,const array<Index,NumDimensions>,const Derived>)",
    "insertText": "argmax()"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (array<Index,NumDimensions> in_dims ;)",
    "insertText": "for(Index d = 0; d < NumDimensions; ++d)"
  },
  {
    "label": "argmin()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorTupleReducerOp<internal::ArgMinTupleReducer<Tuple<Index,CoeffReturnType>>,const array<Index,NumDimensions>,const Derived>)",
    "insertText": "argmin()"
  },
  {
    "label": "argmax()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorTupleReducerOp<internal::ArgMaxTupleReducer<Tuple<Index,CoeffReturnType>>,const array<Index,1>,const Derived>)",
    "insertText": "argmax(const Index return_dim)"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (array<Index,1> in_dims ; in_dims [ 0 ] = return_dim ; return TensorTupleReducerOp<internal::ArgMaxTupleReducer<Tuple<Index,CoeffReturnType>>,const array<Index,1>,const)",
    "insertText": "Derived(derived(), internal::ArgMaxTupleReducer<Tuple<Index, CoeffReturnType> >(), return_dim, in_dims)"
  },
  {
    "label": "argmin()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorTupleReducerOp<internal::ArgMinTupleReducer<Tuple<Index,CoeffReturnType>>,const array<Index,1>,const Derived>)",
    "insertText": "argmin(const Index return_dim)"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (array<Index,1> in_dims ; in_dims [ 0 ] = return_dim ; return TensorTupleReducerOp<internal::ArgMinTupleReducer<Tuple<Index,CoeffReturnType>>,const array<Index,1>,const)",
    "insertText": "Derived(derived(), internal::ArgMinTupleReducer<Tuple<Index, CoeffReturnType> >(), return_dim, in_dims)"
  },
  {
    "label": "reduce()",
    "kind": "Method",
    "detail": "Function (} template<Reducer,Dims> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReductionOp<Reducer,const Dims,const Derived>)",
    "insertText": "reduce(const Dims& dims, const Reducer& reducer)"
  },
  {
    "label": "trace()",
    "kind": "Method",
    "detail": "Function (} template<Dims> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorTraceOp<const Dims,const Derived>)",
    "insertText": "trace(const Dims& dims)"
  },
  {
    "label": "trace()",
    "kind": "Method",
    "detail": "Function (} const TensorTraceOp<const DimensionList<Index,NumDimensions>,const Derived>)",
    "insertText": "trace()"
  },
  {
    "label": "Derived()",
    "kind": "Method",
    "detail": "Function (DimensionList<Index,NumDimensions> in_dims ; return TensorTraceOp<const DimensionList<Index,NumDimensions>,const)",
    "insertText": "Derived(derived(), in_dims)"
  },
  {
    "label": "broadcast()",
    "kind": "Method",
    "detail": "Function (} template<Broadcast> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorBroadcastingOp<const Broadcast,const Derived>)",
    "insertText": "broadcast(const Broadcast& bcast)"
  },
  {
    "label": "concatenate()",
    "kind": "Method",
    "detail": "Function (} template<Axis,OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorConcatenationOp<Axis,const Derived,const OtherDerived>)",
    "insertText": "concatenate(const OtherDerived& other, Axis axis)"
  },
  {
    "label": "extract_patches()",
    "kind": "Method",
    "detail": "Function (} template<PatchDims> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorPatchOp<const PatchDims,const Derived>)",
    "insertText": "extract_patches(const PatchDims& patch_dims)"
  },
  {
    "label": "extract_image_patches()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorImagePatchOp<Dynamic,Dynamic,const Derived>)",
    "insertText": "extract_image_patches(const Index patch_rows = 1, const Index patch_cols = 1, const Index row_stride = 1, const Index col_stride = 1, const Index in_row_stride = 1, const Index in_col_stride = 1, const PaddingType padding_type = PADDING_SAME, const Scalar padding_value = Scalar(0))"
  },
  {
    "label": "extract_image_patches()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorImagePatchOp<Dynamic,Dynamic,const Derived>)",
    "insertText": "extract_image_patches(const Index patch_rows, const Index patch_cols, const Index row_stride, const Index col_stride, const Index in_row_stride, const Index in_col_stride, const Index row_inflate_stride, const Index col_inflate_stride, const Index padding_top, const Index padding_bottom, const Index padding_left,const Index padding_right, const Scalar padding_value)"
  },
  {
    "label": "extract_volume_patches()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorVolumePatchOp<Dynamic,Dynamic,Dynamic,const Derived>)",
    "insertText": "extract_volume_patches(const Index patch_planes, const Index patch_rows, const Index patch_cols, const Index plane_stride = 1, const Index row_stride = 1, const Index col_stride = 1, const PaddingType padding_type = PADDING_SAME, const Scalar padding_value = Scalar(0))"
  },
  {
    "label": "extract_volume_patches()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorVolumePatchOp<Dynamic,Dynamic,Dynamic,const Derived>)",
    "insertText": "extract_volume_patches(const Index patch_planes, const Index patch_rows, const Index patch_cols, const Index plane_stride, const Index row_stride, const Index col_stride, const Index plane_inflate_stride, const Index row_inflate_stride, const Index col_inflate_stride, const Index padding_top_z, const Index padding_bottom_z, const Index padding_top, const Index padding_bottom, const Index padding_left, const Index padding_right, const Scalar padding_value = Scalar(0))"
  },
  {
    "label": "swap_layout()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorLayoutSwapOp<const Derived>)",
    "insertText": "swap_layout()"
  },
  {
    "label": "reshape()",
    "kind": "Method",
    "detail": "Function (} template<NewDimensions> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReshapingOp<const NewDimensions,const Derived>)",
    "insertText": "reshape(const NewDimensions& newDimensions)"
  },
  {
    "label": "slice()",
    "kind": "Method",
    "detail": "Function (} template<StartIndices,Sizes> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorSlicingOp<const StartIndices,const Sizes,const Derived>)",
    "insertText": "slice(const StartIndices& startIndices, const Sizes& sizes)"
  },
  {
    "label": "stridedSlice()",
    "kind": "Method",
    "detail": "Function (} template<StartIndices,StopIndices,Strides> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorStridingSlicingOp<const StartIndices,const StopIndices,const Strides,const Derived>)",
    "insertText": "stridedSlice(const StartIndices& startIndices, const StopIndices& stopIndices, const Strides& strides)"
  },
  {
    "label": "chip()",
    "kind": "Method",
    "detail": "Function (} template<Index DimId> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorChippingOp<DimId,const Derived>)",
    "insertText": "chip(const Index offset)"
  },
  {
    "label": "chip()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorChippingOp<Dynamic,const Derived>)",
    "insertText": "chip(const Index offset, const Index dim)"
  },
  {
    "label": "reverse()",
    "kind": "Method",
    "detail": "Function (} template<ReverseDimensions> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorReverseOp<const ReverseDimensions,const Derived>)",
    "insertText": "reverse(const ReverseDimensions& rev)"
  },
  {
    "label": "pad()",
    "kind": "Method",
    "detail": "Function (} template<PaddingDimensions> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorPaddingOp<const PaddingDimensions,const Derived>)",
    "insertText": "pad(const PaddingDimensions& padding)"
  },
  {
    "label": "pad()",
    "kind": "Method",
    "detail": "Function (} template<PaddingDimensions> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorPaddingOp<const PaddingDimensions,const Derived>)",
    "insertText": "pad(const PaddingDimensions& padding, const Scalar padding_value)"
  },
  {
    "label": "shuffle()",
    "kind": "Method",
    "detail": "Function (} template<Shuffle> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorShufflingOp<const Shuffle,const Derived>)",
    "insertText": "shuffle(const Shuffle& shfl)"
  },
  {
    "label": "stride()",
    "kind": "Method",
    "detail": "Function (} template<Strides> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorStridingOp<const Strides,const Derived>)",
    "insertText": "stride(const Strides& strides)"
  },
  {
    "label": "inflate()",
    "kind": "Method",
    "detail": "Function (} template<Strides> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorInflationOp<const Strides,const Derived>)",
    "insertText": "inflate(const Strides& strides)"
  },
  {
    "label": "index_tuples()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorIndexTupleOp<const Derived>)",
    "insertText": "index_tuples()"
  },
  {
    "label": "customOp()",
    "kind": "Method",
    "detail": "Function (} template<CustomUnaryFunc> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCustomUnaryOp<const CustomUnaryFunc,const Derived>)",
    "insertText": "customOp(const CustomUnaryFunc& op)"
  },
  {
    "label": "customOp()",
    "kind": "Method",
    "detail": "Function (} template<OtherDerived,CustomBinaryFunc> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorCustomBinaryOp<const CustomBinaryFunc,const Derived,const OtherDerived>)",
    "insertText": "customOp(const OtherDerived& other, const CustomBinaryFunc& op)"
  },
  {
    "label": "eval()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorForcedEvalOp<const Derived>)",
    "insertText": "eval()"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (} protected : template<Scalar,int NumIndices,int Options,IndexType> class Tensor ; template<Scalar,Dimensions,int Option,IndexTypes> class TensorFixedSize ; template<OtherDerived,int AccessLevel> class Eigen::TensorBase ; EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Derived&)",
    "insertText": "derived()"
  },
  {
    "label": "setZero()",
    "kind": "Method",
    "detail": "Function (} } ; template<Derived,int AccessLevel = internal::accessors_level<Derived>::value> class TensorBase : public TensorBase<Derived,ReadOnlyAccessors> { public : typedef TensorBase<Derived,ReadOnlyAccessors> Base ; typedef internal::traits<Derived> DerivedTraits ; typedef DerivedTraits::Scalar Scalar ; typedef DerivedTraits::Index Index ; typedef Scalar CoeffReturnType ; const int NumDimensions = DerivedTraits::NumDimensions ; template<Scalar,int NumIndices,int Options,IndexType> class Tensor ; template<Scalar,Dimensions,int Option,IndexTypes> class TensorFixedSize ; template<OtherDerived,int OtherAccessLevel> class Eigen::TensorBase ; EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived&)",
    "insertText": "setZero()"
  },
  {
    "label": "setConstant()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived&)",
    "insertText": "setConstant(const Scalar& val)"
  },
  {
    "label": "setRandom()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived&)",
    "insertText": "setRandom()"
  },
  {
    "label": "setValues()",
    "kind": "Method",
    "detail": "Function (} # if EIGEN_HAS_VARIADIC_TEMPLATES EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived&)",
    "insertText": "setValues(const typename internal::Initializer<Derived, NumDimensions>::InitList& vals)"
  },
  {
    "label": "eval()",
    "kind": "Method",
    "detail": "Function (TensorEvaluator<Derived,DefaultDevice>)",
    "insertText": "eval(derived(), DefaultDevice())"
  },
  {
    "label": "NumDimensions()",
    "kind": "Method",
    "detail": "Function (internal::initialize_tensor<Derived,)",
    "insertText": "NumDimensions(eval, vals)"
  },
  {
    "label": "concatenate()",
    "kind": "Method",
    "detail": "Function (} template<Axis,OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const TensorConcatenationOp<const Axis,const Derived,const OtherDerived>)",
    "insertText": "concatenate(const OtherDerived& other, const Axis& axis)"
  },
  {
    "label": "device()",
    "kind": "Method",
    "detail": "Function (} template<DeviceType> TensorDevice<Derived,DeviceType>)",
    "insertText": "device(const DeviceType& dev)"
  },
  {
    "label": "device()",
    "kind": "Method",
    "detail": "Function (} template<DeviceType,DoneCallback> TensorAsyncDevice<Derived,DeviceType,DoneCallback>)",
    "insertText": "device(const DeviceType& dev, DoneCallback done)"
  },
  {
    "label": "EIGEN_DEFAULT_EMPTY_CONSTRUCTOR_AND_DESTRUCTOR()",
    "kind": "Method",
    "detail": "Function (} protected :)",
    "insertText": "EIGEN_DEFAULT_EMPTY_CONSTRUCTOR_AND_DESTRUCTOR(TensorBase) EIGEN_DEFAULT_COPY_CONSTRUCTOR(TensorBase) template<typename OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const OtherDerived& other)"
  },
  {
    "label": "assign()",
    "kind": "Method",
    "detail": "Function (typedef TensorAssignOp<Derived,const OtherDerived> Assign ; Assign)",
    "insertText": "assign(derived(), other.derived())"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (internal::TensorExecutor<const Assign,DefaultDevice)",
    "insertText": "run(assign, DefaultDevice())"
  }
]