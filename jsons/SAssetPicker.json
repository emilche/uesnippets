[
  {
    "label": "FFilter_HideOtherDevelopers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilter_HideOtherDevelopers"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "SAssetSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetSearchBox"
  },
  {
    "label": "SAssetView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetView"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SFilterList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFilterList"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FContentBrowserItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContentBrowserItem"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SAssetPicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetPicker"
  },
  {
    "label": "containing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "containing"
  },
  {
    "label": "FAssetTextFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetTextFilter"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "ExecuteRenameCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteRenameCommand()"
  },
  {
    "label": "SetFocusPostConstruct()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "SetFocusPostConstruct( double InCurrentTime, float InDeltaTime )"
  },
  {
    "label": "HandleKeyDownFromSearchBox()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleKeyDownFromSearchBox(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "FolderEntered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FolderEntered(const FString& FolderPath)"
  },
  {
    "label": "SetSearchBoxText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSearchBoxText(const FText& InSearchText)"
  },
  {
    "label": "OnSearchBoxChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSearchBoxChanged(const FText& InSearchText)"
  },
  {
    "label": "OnSearchBoxCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSearchBoxCommitted(const FText& InSearchText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "SetNewBackendFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNewBackendFilter(const FARFilter& NewFilter)"
  },
  {
    "label": "OnFilterChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterChanged()"
  },
  {
    "label": "OnNoneButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnNoneButtonClicked()"
  },
  {
    "label": "HandleNewItemRequested()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNewItemRequested(const FContentBrowserItem& NewItem)"
  },
  {
    "label": "HandleItemSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleItemSelectionChanged(const FContentBrowserItem& InSelectedItem, ESelectInfo::Type InSelectInfo)"
  },
  {
    "label": "HandleItemsActivated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleItemsActivated(TArrayView<const FContentBrowserItem> ActivatedItems, EAssetTypeActivationMethod::Type ActivationMethod)"
  },
  {
    "label": "SyncToAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncToAssets(const TArray<FAssetData>& AssetDataList)"
  },
  {
    "label": "RefreshAssetView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshAssetView(bool bRefreshSources)"
  },
  {
    "label": "HandleShowOtherDevelopersCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleShowOtherDevelopersCheckStateChanged( const ECheckBoxState InCheckboxState )"
  },
  {
    "label": "CanExecuteRenameRequested()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteRenameRequested()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings()"
  },
  {
    "label": "HandleSearchSettingsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSearchSettingsChanged()"
  },
  {
    "label": "GetItemContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetItemContextMenu(TArrayView<const FContentBrowserItem> SelectedItems)"
  },
  {
    "label": "ConvertAssetTypeCategoryToAssetCategoryPath()",
    "kind": "Method",
    "detail": "Function (TOptional<FAssetCategoryPath>)",
    "insertText": "ConvertAssetTypeCategoryToAssetCategoryPath(EAssetTypeCategories::Type DefaultFilterMenuExpansion)"
  }
]