[
  {
    "label": "TIntrRay3OrientedBox3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TIntrRay3OrientedBox3"
  },
  {
    "label": "FindIntersection()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BoxTypes . h \" # include \" IntrRay3AxisAlignedBox3 . h \" # include \" OrientedBoxTypes . h \" # include \" VectorUtil . h \" namespace UE { namespace Geometry { using namespace UE::Math ; template<RealType> class TIntrRay3OrientedBox3 { public : bool)",
    "insertText": "FindIntersection(const TRay<RealType>& Ray, const TOrientedBox3<RealType>& Box, RealType& RayParamOut)"
  },
  {
    "label": "GetAxis()",
    "kind": "Method",
    "detail": "Function (const TVector<RealType> OriginOffset = Ray . Origin - Box . Frame . Origin ; const TVector<RealType> Axis0 = Box . Frame .)",
    "insertText": "GetAxis(0)"
  },
  {
    "label": "GetAxis()",
    "kind": "Method",
    "detail": "Function (const TVector<RealType> Axis1 = Box . Frame .)",
    "insertText": "GetAxis(1)"
  },
  {
    "label": "GetAxis()",
    "kind": "Method",
    "detail": "Function (const TVector<RealType> Axis2 = Box . Frame .)",
    "insertText": "GetAxis(2)"
  },
  {
    "label": "RealType()",
    "kind": "Method",
    "detail": "Function (const TVector<RealType> Origin = TVector<)",
    "insertText": "RealType(TVector<RealType>::DotProduct(OriginOffset, Axis0), TVector<RealType>::DotProduct(OriginOffset, Axis1), TVector<RealType>::DotProduct(OriginOffset, Axis2))"
  },
  {
    "label": "RealType()",
    "kind": "Method",
    "detail": "Function (const TVector<RealType> Direction = TVector<)",
    "insertText": "RealType(TVector<RealType>::DotProduct(Ray.Direction, Axis0), TVector<RealType>::DotProduct(Ray.Direction, Axis1), TVector<RealType>::DotProduct(Ray.Direction, Axis2))"
  },
  {
    "label": "AdjustedRay()",
    "kind": "Method",
    "detail": "Function (const TRay<RealType>)",
    "insertText": "AdjustedRay(Origin, Direction)"
  },
  {
    "label": "AxisAlignedBox()",
    "kind": "Method",
    "detail": "Function (const TAxisAlignedBox3<RealType>)",
    "insertText": "AxisAlignedBox(TVector<RealType>(-Box.Extents.X, -Box.Extents.Y, -Box.Extents.Z), TVector<RealType>(Box.Extents.X, Box.Extents.Y, Box.Extents.Z))"
  }
]