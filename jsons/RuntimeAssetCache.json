[
  {
    "label": "FRuntimeAssetCacheBucket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRuntimeAssetCacheBucket"
  },
  {
    "label": "IRuntimeAssetCacheBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRuntimeAssetCacheBuilder"
  },
  {
    "label": "IRuntimeAssetCacheBackend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRuntimeAssetCacheBackend"
  },
  {
    "label": "FCacheEntryMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheEntryMetadata"
  },
  {
    "label": "FRuntimeAssetCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRuntimeAssetCache"
  },
  {
    "label": "DECLARE_FLOAT_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / NameTypes . h \" # include \" HAL / ThreadSafeCounter . h \" # include \" Stats / Stats . h \" # include \" RuntimeAssetCacheInterface . h \" # include \" RuntimeAssetCacheAsyncWorker . h \" class FRuntimeAssetCacheBucket ; class IRuntimeAssetCacheBuilder ;)",
    "insertText": "DECLARE_FLOAT_ACCUMULATOR_STAT_EXTERN(TEXT(\"RAC ASync Wait Time\"), STAT_RAC_ASyncWaitTime, STATGROUP_RAC,)"
  },
  {
    "label": "GetSynchronous()",
    "kind": "Method",
    "detail": "Function (class IRuntimeAssetCacheBuilder ; class IRuntimeAssetCacheBackend ; class FCacheEntryMetadata ; class FRuntimeAssetCacheBucket ; class FRuntimeAssetCache final : public FRuntimeAssetCacheInterface { public : FVoidPtrParam)",
    "insertText": "GetSynchronous(IRuntimeAssetCacheBuilder* CacheBuilder)"
  },
  {
    "label": "GetAsynchronous()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAsynchronous(IRuntimeAssetCacheBuilder* CacheBuilder, const FOnRuntimeAssetCacheAsyncComplete& OnCompletionDelegate)"
  },
  {
    "label": "GetAsynchronous()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAsynchronous(IRuntimeAssetCacheBuilder* CacheBuilder)"
  },
  {
    "label": "GetCacheSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCacheSize(FName Bucket)"
  },
  {
    "label": "ClearCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClearCache()"
  },
  {
    "label": "ClearCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClearCache(FName Bucket)"
  },
  {
    "label": "WaitAsynchronousCompletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitAsynchronousCompletion(int32 Handle)"
  },
  {
    "label": "GetAsynchronousResults()",
    "kind": "Method",
    "detail": "Function (FVoidPtrParam)",
    "insertText": "GetAsynchronousResults(int32 Handle)"
  },
  {
    "label": "PollAsynchronousCompletion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollAsynchronousCompletion(int32 Handle)"
  },
  {
    "label": "AddToAsyncCompletionCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToAsyncCompletionCounter(int32 Addend)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "FRuntimeAssetCache()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FRuntimeAssetCache()"
  },
  {
    "label": "GetNextHandle()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "GetNextHandle()"
  }
]