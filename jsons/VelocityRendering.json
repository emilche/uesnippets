[
  {
    "label": "FPrimitiveSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneInfo"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FStaticMeshBatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshBatch"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FPrimitiveViewRelevance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveViewRelevance"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVelocityRendering",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVelocityRendering"
  },
  {
    "label": "FVelocityMeshProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVelocityMeshProcessor"
  },
  {
    "label": "FOpaqueVelocityMeshProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpaqueVelocityMeshProcessor"
  },
  {
    "label": "FTranslucentVelocityMeshProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTranslucentVelocityMeshProcessor"
  },
  {
    "label": "GetMeshPassFromVelocityPass()",
    "kind": "Method",
    "detail": "Function (EMeshPass::Type)",
    "insertText": "GetMeshPassFromVelocityPass(EVelocityPass VelocityPass)"
  },
  {
    "label": "GetFormat()",
    "kind": "Method",
    "detail": "Function (EPixelFormat)",
    "insertText": "GetFormat(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "GetCreateFlags()",
    "kind": "Method",
    "detail": "Function (ETextureCreateFlags)",
    "insertText": "GetCreateFlags(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "GetRenderTargetDesc()",
    "kind": "Method",
    "detail": "Function (FRDGTextureDesc)",
    "insertText": "GetRenderTargetDesc(EShaderPlatform ShaderPlatform, FIntPoint Extent, const bool bRequireMultiView = false)"
  },
  {
    "label": "IsVelocityPassSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVelocityPassSupported(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "DepthPassCanOutputVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DepthPassCanOutputVelocity(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "BasePassCanOutputVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BasePassCanOutputVelocity(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "IsParallelVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsParallelVelocity(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "FVelocityMeshProcessor()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVelocityMeshProcessor(\n\t\tEMeshPass::Type MeshPassType,\n\t\tconst FScene* Scene,\n\t\tERHIFeatureLevel::Type FeatureLevel,\n\t\tconst FSceneView* InViewIfDynamicMeshCommand,\n\t\tconst FMeshPassProcessorRenderState& InPassDrawRenderState,\n\t\tFMeshPassDrawListContext* InDrawListContext)"
  },
  {
    "label": "PrimitiveHasVelocityForView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrimitiveHasVelocityForView(const FViewInfo& View, const FPrimitiveSceneProxy* PrimitiveSceneProxy)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Process(\n\t\tconst FMeshBatch& MeshBatch,\n\t\tuint64 BatchElementMask,\n\t\tint32 StaticMeshId,\n\t\tconst FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy,\n\t\tconst FMaterialRenderProxy& RESTRICT MaterialRenderProxy,\n\t\tconst FMaterial& RESTRICT MaterialResource,\n\t\tERasterizerFillMode MeshFillMode,\n\t\tERasterizerCullMode MeshCullMode)"
  },
  {
    "label": "CollectPSOInitializersInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CollectPSOInitializersInternal(\n\t\tconst FSceneTexturesConfig& SceneTexturesConfig,\n\t\tconst FPSOPrecacheVertexFactoryData& VertexFactoryData,\n\t\tconst FMaterial& RESTRICT MaterialResource,\n\t\tERasterizerFillMode MeshFillMode,\n\t\tERasterizerCullMode MeshCullMode,\n\t\tTArray<FPSOPrecacheData>& PSOInitializers)"
  },
  {
    "label": "FOpaqueVelocityMeshProcessor()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FOpaqueVelocityMeshProcessor(\n\t\tconst FScene* Scene,\n\t\tERHIFeatureLevel::Type FeatureLevel,\n\t\tconst FSceneView* InViewIfDynamicMeshCommand,\n\t\tconst FMeshPassProcessorRenderState& InPassDrawRenderState,\n\t\tFMeshPassDrawListContext* InDrawListContext,\n\t\tEDepthDrawingMode InEarlyZPassMode)"
  },
  {
    "label": "PrimitiveCanHaveVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrimitiveCanHaveVelocity(EShaderPlatform ShaderPlatform, const FPrimitiveSceneProxy* PrimitiveSceneProxy)"
  },
  {
    "label": "PrimitiveCanHaveVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrimitiveCanHaveVelocity(EShaderPlatform ShaderPlatform, bool bDrawVelocity, bool bHasStaticLighting)"
  },
  {
    "label": "PrimitiveHasVelocityForFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrimitiveHasVelocityForFrame(const FPrimitiveSceneProxy* PrimitiveSceneProxy)"
  },
  {
    "label": "TryAddMeshBatch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryAddMeshBatch(\n\t\tconst FMeshBatch& RESTRICT MeshBatch,\n\t\tuint64 BatchElementMask,\n\t\tconst FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy,\n\t\tint32 StaticMeshId,\n\t\tconst FMaterialRenderProxy* MaterialRenderProxy,\n\t\tconst FMaterial* Material)"
  },
  {
    "label": "FTranslucentVelocityMeshProcessor()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FTranslucentVelocityMeshProcessor(\n\t\tconst FScene* Scene,\n\t\tERHIFeatureLevel::Type FeatureLevel,\n\t\tconst FSceneView* InViewIfDynamicMeshCommand,\n\t\tconst FMeshPassProcessorRenderState& InPassDrawRenderState,\n\t\tFMeshPassDrawListContext* InDrawListContext)"
  },
  {
    "label": "PrimitiveCanHaveVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrimitiveCanHaveVelocity(EShaderPlatform ShaderPlatform, const FPrimitiveSceneProxy* PrimitiveSceneProxy)"
  },
  {
    "label": "PrimitiveHasVelocityForFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrimitiveHasVelocityForFrame(const FPrimitiveSceneProxy* PrimitiveSceneProxy)"
  },
  {
    "label": "TryAddMeshBatch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryAddMeshBatch(\n\t\tconst FMeshBatch& RESTRICT MeshBatch,\n\t\tuint64 BatchElementMask,\n\t\tconst FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy,\n\t\tint32 StaticMeshId,\n\t\tconst FMaterialRenderProxy* MaterialRenderProxy,\n\t\tconst FMaterial* Material)"
  }
]