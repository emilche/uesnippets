[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "ANavigationData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANavigationData"
  },
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "UBlackboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardComponent"
  },
  {
    "label": "UBlackboardData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardData"
  },
  {
    "label": "UEnvQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQuery"
  },
  {
    "label": "UEnvQueryGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryGenerator"
  },
  {
    "label": "UEnvQueryItemType_ActorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryItemType_ActorBase"
  },
  {
    "label": "UEnvQueryItemType_VectorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryItemType_VectorBase"
  },
  {
    "label": "UEnvQueryTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryTest"
  },
  {
    "label": "UNavigationQueryFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationQueryFilter"
  },
  {
    "label": "FEnvQueryInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryInstance"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FEnvNamedValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvNamedValue"
  },
  {
    "label": "FEnvDirection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvDirection"
  },
  {
    "label": "FEnvTraceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvTraceData"
  },
  {
    "label": "EDescriptionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDescriptionMode"
  },
  {
    "label": "ETraceTypeQuery",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETraceTypeQuery"
  },
  {
    "label": "ECollisionChannel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECollisionChannel"
  },
  {
    "label": "FEnvOverlapData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvOverlapData"
  },
  {
    "label": "ECollisionChannel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECollisionChannel"
  },
  {
    "label": "FEnvQueryItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryItem"
  },
  {
    "label": "TIsZeroConstructType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsZeroConstructType"
  },
  {
    "label": "FEnvQueryResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryResult"
  },
  {
    "label": "FEnvQuerySpatialData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQuerySpatialData"
  },
  {
    "label": "FEnvQueryItemDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryItemDetails"
  },
  {
    "label": "FEnvQueryContextData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryContextData"
  },
  {
    "label": "FEnvQueryOptionInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryOptionInstance"
  },
  {
    "label": "FEnvQueryDebugProfileData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryDebugProfileData"
  },
  {
    "label": "FStep",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStep"
  },
  {
    "label": "FOptionStat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionStat"
  },
  {
    "label": "FOptionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionData"
  },
  {
    "label": "FEnvQueryDebugData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryDebugData"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "FEQSQueryDebugData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEQSQueryDebugData"
  },
  {
    "label": "UEnvQueryTypes",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryTypes"
  },
  {
    "label": "FEnvQueryInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryInstance"
  },
  {
    "label": "doing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "doing"
  },
  {
    "label": "doing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "doing"
  },
  {
    "label": "FConstItemIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstItemIterator"
  },
  {
    "label": "FItemIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FItemIterator"
  },
  {
    "label": "FAIDynamicParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAIDynamicParam"
  },
  {
    "label": "FEQSParametrizedQueryExecutionRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEQSParametrizedQueryExecutionRequest"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogEQS, Display, All)"
  },
  {
    "label": "FEnvTraceData()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FEnvTraceData()"
  },
  {
    "label": "SetGeometryOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGeometryOnly()"
  },
  {
    "label": "SetNavmeshOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNavmeshOnly()"
  },
  {
    "label": "OnPostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostLoad()"
  },
  {
    "label": "IsSuccessful()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsSuccessful()"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (structures)",
    "insertText": "DECLARE_DELEGATE_OneParam(FQueryFinishedSignature, TSharedPtr<FEnvQueryResult>)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const FEnvQueryDebugProfileData& Other)"
  },
  {
    "label": "Store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Store(const FEnvQueryInstance& QueryInstance, const float ExecutionTime, const bool bStepDone)"
  },
  {
    "label": "PrepareOption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareOption(const FEnvQueryInstance& QueryInstance, const TArray<UEnvQueryGenerator*>& Generators, const int32 NumTests)"
  },
  {
    "label": "GetShortTypeName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetShortTypeName(const UObject* Ob)"
  },
  {
    "label": "DescribeContext()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "DescribeContext(TSubclassOf<UEnvQueryContext> ContextClass)"
  },
  {
    "label": "FEnvQueryInstance()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FEnvQueryInstance()"
  },
  {
    "label": "FEnvQueryInstance()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FEnvQueryInstance(const FEnvQueryInstance& Other)"
  },
  {
    "label": "ExecuteOneStep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteOneStep(double TimeLimit)"
  },
  {
    "label": "PrepareContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareContext(UClass* Context, FEnvQueryContextData& ContextData)"
  },
  {
    "label": "PrepareContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareContext(UClass* Context, TArray<FEnvQuerySpatialData>& Data)"
  },
  {
    "label": "PrepareContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareContext(UClass* Context, TArray<FVector>& Data)"
  },
  {
    "label": "PrepareContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareContext(UClass* Context, TArray<FRotator>& Data)"
  },
  {
    "label": "PrepareContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareContext(UClass* Context, TArray<AActor*>& Data)"
  },
  {
    "label": "ReserveItemData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReserveItemData(int32 NumAdditionalItems)"
  },
  {
    "label": "FinalizeGeneration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeGeneration()"
  },
  {
    "label": "FinalizeTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeTest()"
  },
  {
    "label": "FinalizeQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeQuery()"
  },
  {
    "label": "NormalizeScores()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NormalizeScores()"
  },
  {
    "label": "SortScores()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortScores()"
  },
  {
    "label": "PickRandomItemOfScoreAtLeast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PickRandomItemOfScoreAtLeast(float MinScore)"
  },
  {
    "label": "PickSingleItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PickSingleItem(int32 ItemIndex)"
  },
  {
    "label": "StripRedundantData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StripRedundantData()"
  },
  {
    "label": "FItemIterator()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FItemIterator(const UEnvQueryTest* QueryTest, FEnvQueryInstance& QueryInstance, int32 StartingItemIndex = INDEX_NONE)"
  },
  {
    "label": "SetScoreInternal()",
    "kind": "Method",
    "detail": "Function (score)",
    "insertText": "SetScoreInternal(bPassedTest ? 1.0f : 0.f)"
  },
  {
    "label": "HandleFailedTestResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFailedTestResult()"
  },
  {
    "label": "StoreTestResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreTestResult()"
  },
  {
    "label": "ConfigureBBKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigureBBKey(UObject &QueryOwner)"
  },
  {
    "label": "GenerateConfigurableParamsFromNamedValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateConfigurableParamsFromNamedValues(UObject &QueryOwner, TArray<FAIDynamicParam>& OutQueryConfig, TArray<FEnvNamedValue>& InQueryParams)"
  },
  {
    "label": "FEQSParametrizedQueryExecutionRequest()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FEQSParametrizedQueryExecutionRequest()"
  },
  {
    "label": "InitForOwnerAndBlackboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitForOwnerAndBlackboard(UObject& Owner, UBlackboardData* BBAsset)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Execute(UObject& QueryOwner, const UBlackboardComponent* BlackboardComponent, FQueryFinishedSignature& QueryFinishedDelegate)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(UObject& Owner, struct FPropertyChangedEvent& PropertyChangedEvent)"
  }
]