[
  {
    "label": "FMixerSourceVoiceBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMixerSourceVoiceBuffer"
  },
  {
    "label": "FMixerSourceVoiceFilterParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMixerSourceVoiceFilterParams"
  },
  {
    "label": "FMixerSourceVoiceInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMixerSourceVoiceInitParams"
  },
  {
    "label": "FMixerDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerDevice"
  },
  {
    "label": "FMixerSubmix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSubmix"
  },
  {
    "label": "FMixerSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSource"
  },
  {
    "label": "FMixerSourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSourceManager"
  },
  {
    "label": "ISourceBufferQueueListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceBufferQueueListener"
  },
  {
    "label": "FMixerSourceVoice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSourceVoice"
  },
  {
    "label": "FMixerSourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSourceManager"
  },
  {
    "label": "FMixerSourceVoice()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMixerSourceVoice()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(FMixerDevice* InMixerDevice)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init(const FMixerSourceVoiceInitParams& InFormat)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "SetPitch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPitch(const float InPitch)"
  },
  {
    "label": "SetVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVolume(const float InVolume)"
  },
  {
    "label": "SetDistanceAttenuation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDistanceAttenuation(const float InDistanceAttenuation)"
  },
  {
    "label": "SetLPFFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLPFFrequency(const float InFrequency)"
  },
  {
    "label": "SetHPFFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHPFFrequency(const float InFrequency)"
  },
  {
    "label": "SetModPitch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModPitch(const float InPitch)"
  },
  {
    "label": "SetModVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModVolume(const float InVolume)"
  },
  {
    "label": "SetModLPFFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModLPFFrequency(const float InFrequency)"
  },
  {
    "label": "SetModHPFFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModHPFFrequency(const float InFrequency)"
  },
  {
    "label": "SetModulationRouting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModulationRouting(FSoundModulationDefaultRoutingSettings& RoutingSettings)"
  },
  {
    "label": "SetSourceBufferListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceBufferListener(FSharedISourceBufferListenerPtr& InSourceBufferListener, bool InShouldSourceBufferListenerZeroBuffer)"
  },
  {
    "label": "SetChannelMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetChannelMap(const uint32 NumInputChannels, const Audio::FAlignedFloatBuffer& InChannelMap, const bool bInIs3D, const bool bInIsCenterChannelOnly)"
  },
  {
    "label": "SetSpatializationParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSpatializationParams(const FSpatializationParams& InParams)"
  },
  {
    "label": "Play()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Play()"
  },
  {
    "label": "Pause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pause()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "StopFade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopFade(int32 NumFrames)"
  },
  {
    "label": "SetSubmixSendInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSubmixSendInfo(FMixerSubmixWeakPtr Submix, const float SendLevel, const EMixerSourceSubmixSendStage SendStage = EMixerSourceSubmixSendStage::PostDistanceAttenuation)"
  },
  {
    "label": "ClearSubmixSendInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSubmixSendInfo(FMixerSubmixWeakPtr Submix)"
  },
  {
    "label": "SetOutputToBusOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOutputToBusOnly(bool bInOutputToBusOnly)"
  },
  {
    "label": "SetEnablement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnablement(bool bInEnableBusSendRouting, bool bInEnableMainSubmixOutput, bool bInEnableSubmixSendRouting)"
  },
  {
    "label": "SetAudioBusSendInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAudioBusSendInfo(EBusSendType InBusSendType, uint32 AudioBusId, float BusSendLevel)"
  },
  {
    "label": "OnMixBus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMixBus(FMixerSourceVoiceBuffer* OutMixerSourceBuffer)"
  }
]