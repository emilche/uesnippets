[
  {
    "label": "FPBDTriangleMeshCollisions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDTriangleMeshCollisions"
  },
  {
    "label": "FContourMinimizationIntersection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContourMinimizationIntersection"
  },
  {
    "label": "FGIAColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGIAColor"
  },
  {
    "label": "FBarycentricPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBarycentricPoint"
  },
  {
    "label": "struct",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "struct"
  },
  {
    "label": "FTriangleSubMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriangleSubMesh"
  },
  {
    "label": "struct",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "struct"
  },
  {
    "label": "FFullToSubMeshIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFullToSubMeshIndex"
  },
  {
    "label": "FScratchBuffers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScratchBuffers"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const SolverParticlesOrRange& Particles, const TSet<int32>& DisabledFaces, bool bCollideAgainstAllKinematicVertices, const TSet<int32>& EnabledKinematicFaces, const bool bOnlyCollideKinematics = false)"
  },
  {
    "label": "InitAllDynamic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAllDynamic()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const SolverParticlesOrRange& Particles, const FPBDFlatWeightMap& ThicknessMap)"
  },
  {
    "label": "InitFlesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFlesh(const SolverParticlesOrRange& Particles, const FPBDFlatWeightMap& ThicknessMap, const bool bUseFullMesh = false)"
  },
  {
    "label": "PostStepInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostStepInit(const SolverParticlesOrRange& Particles)"
  }
]