[
  {
    "label": "A",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "A"
  },
  {
    "label": "B",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "B"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "GTEST_API_",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GTEST_API_"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "ReturnSentinel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReturnSentinel"
  },
  {
    "label": "TestRole",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TestRole"
  },
  {
    "label": "AbortReason",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AbortReason"
  },
  {
    "label": "DeathTestFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DeathTestFactory"
  },
  {
    "label": "DefaultDeathTestFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DefaultDeathTestFactory"
  },
  {
    "label": "representing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "representing"
  },
  {
    "label": "InternalRunDeathTestFlag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InternalRunDeathTestFlag"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Create(const char* statement, Matcher<const std::string&> matcher,\n                     const char* file, int line, DeathTest** test)"
  },
  {
    "label": "set_last_death_test_message()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_last_death_test_message(const std::string& message)"
  },
  {
    "label": "ExitedUnsuccessfully()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExitedUnsuccessfully(int exit_status)"
  },
  {
    "label": "ContainsRegex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ContainsRegex(regex)"
  },
  {
    "label": "ContainsRegex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ContainsRegex(regex)"
  },
  {
    "label": "GTEST_CONCAT_TOKEN_()",
    "kind": "Method",
    "detail": "Function (goto)",
    "insertText": "GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__)"
  },
  {
    "label": "gtest_dt_ptr()",
    "kind": "Method",
    "detail": "Function (testing::internal::DeathTest>)",
    "insertText": "gtest_dt_ptr(gtest_dt)"
  },
  {
    "label": "GTEST_CONCAT_TOKEN_()",
    "kind": "Method",
    "detail": "Function (goto)",
    "insertText": "GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__)"
  },
  {
    "label": "gtest_sentinel()",
    "kind": "Method",
    "detail": "Function (testing::internal::DeathTest::ReturnSentinel)",
    "insertText": "gtest_sentinel(       \\\n              gtest_dt)"
  }
]