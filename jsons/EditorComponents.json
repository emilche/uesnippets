[
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "FGridWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGridWidget"
  },
  {
    "label": "FEditorCommonDrawHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorCommonDrawHelper"
  },
  {
    "label": "EAxisLines",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EAxisLines"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FGridWidget()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineTypes . h \" # include \" UObject / GCObject . h \" class FPrimitiveDrawInterface ; class FSceneView ; class UMaterial ; class UMaterialInstanceDynamic ; class FGridWidget : public FGCObject { public :)",
    "insertText": "FGridWidget()"
  },
  {
    "label": "DrawNewGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawNewGrid(const FSceneView* View,FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "GetActiveLevelGridMID()",
    "kind": "Method",
    "detail": "Function (UMaterialInstanceDynamic*)",
    "insertText": "GetActiveLevelGridMID()"
  },
  {
    "label": "FEditorCommonDrawHelper()",
    "kind": "Method",
    "detail": "Function (private : TSoftObjectPtr<UMaterial> GPUBasedGridMaterial ; TSoftObjectPtr<UMaterial> TextureBasedLevelGridMaterial ; TObjectPtr<UMaterialInstanceDynamic> LevelGridMaterialInst ; } ; class FEditorCommonDrawHelper { public :)",
    "insertText": "FEditorCommonDrawHelper()"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(const FSceneView* View,FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "DrawPivot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawPivot(const FSceneView* View,FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "DrawBaseInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawBaseInfo(const FSceneView* View,FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "DrawGridSection()",
    "kind": "Method",
    "detail": "Function (private : struct EAxisLines { enum Type { Major,Minor,} ; } ; void)",
    "insertText": "DrawGridSection(double ViewportGridY,double MaxSize,FVector* A,FVector* B,FVector::FReal* AX, FVector::FReal* BX,int32 Axis,const FSceneView* View,FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "DrawOriginAxisLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawOriginAxisLine(FVector* A,FVector* B, FVector::FReal* AX, FVector::FReal* BX,const FSceneView* View,FPrimitiveDrawInterface* PDI, const FLinearColor& Color)"
  },
  {
    "label": "DrawOldGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawOldGrid(const FSceneView* View,FPrimitiveDrawInterface* PDI)"
  }
]