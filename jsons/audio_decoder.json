[
  {
    "label": "AudioDecoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioDecoder"
  },
  {
    "label": "SpeechType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpeechType"
  },
  {
    "label": "EncodedAudioFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EncodedAudioFrame"
  },
  {
    "label": "DecodeResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DecodeResult"
  },
  {
    "label": "ParseResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ParseResult"
  },
  {
    "label": "ParsePayload()",
    "kind": "Method",
    "detail": "Function (std::vector<ParseResult>)",
    "insertText": "ParsePayload(rtc::Buffer&& payload,\n                                                uint32_t timestamp)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Decode(const uint8_t* encoded,\n             size_t encoded_len,\n             int sample_rate_hz,\n             size_t max_decoded_bytes,\n             int16_t* decoded,\n             SpeechType* speech_type)"
  },
  {
    "label": "DecodeRedundant()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DecodeRedundant(const uint8_t* encoded,\n                      size_t encoded_len,\n                      int sample_rate_hz,\n                      size_t max_decoded_bytes,\n                      int16_t* decoded,\n                      SpeechType* speech_type)"
  },
  {
    "label": "DecodePlc()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "DecodePlc(size_t num_frames, int16_t* decoded)"
  },
  {
    "label": "GeneratePlc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GeneratePlc(size_t requested_samples_per_channel,\n                           rtc::BufferT<int16_t>* concealment_audio)"
  },
  {
    "label": "ErrorCode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ErrorCode()"
  },
  {
    "label": "ConvertSpeechType()",
    "kind": "Method",
    "detail": "Function (SpeechType)",
    "insertText": "ConvertSpeechType(int16_t type)"
  },
  {
    "label": "DecodeRedundantInternal()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DecodeRedundantInternal(const uint8_t* encoded,\n                                      size_t encoded_len,\n                                      int sample_rate_hz,\n                                      int16_t* decoded,\n                                      SpeechType* speech_type)"
  }
]