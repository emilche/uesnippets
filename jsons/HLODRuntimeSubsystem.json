[
  {
    "label": "AWorldPartitionHLOD",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldPartitionHLOD"
  },
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "FHLODResourcesResidencySceneViewExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHLODResourcesResidencySceneViewExtension"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "UWorldPartitionRuntimeCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeCell"
  },
  {
    "label": "URuntimeHashExternalStreamingObjectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeHashExternalStreamingObjectBase"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UWorldPartitionHLODRuntimeSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionHLODRuntimeSubsystem"
  },
  {
    "label": "FCellData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCellData"
  },
  {
    "label": "FWorldPartitionHLODRuntimeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionHLODRuntimeData"
  },
  {
    "label": "FWorldPartitionHLODWarmupState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionHLODWarmupState"
  },
  {
    "label": "FAutoConsoleCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutoConsoleCommand"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Subsystems / WorldSubsystem . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" UObject / ObjectKey . h \" # include \" Containers / Ticker . h \" # include \" HLODRuntimeSubsystem . generated . h \" class AWorldPartitionHLOD ; class FSceneViewFamily ; class FHLODResourcesResidencySceneViewExtension ; class UWorldPartition ; class UWorldPartitionRuntimeCell ; class URuntimeHashExternalStreamingObjectBase ; class UWorld ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FWorldPartitionHLODActorRegisteredEvent, AWorldPartitionHLOD*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FWorldPartitionHLODActorUnregisteredEvent, AWorldPartitionHLOD*)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API UWorldPartitionHLODRuntimeSubsystem()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSubsystemCollectionBase& Collection)"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "DoesSupportWorldType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesSupportWorldType(const EWorldType::Type WorldType)"
  },
  {
    "label": "RegisterHLODActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterHLODActor(AWorldPartitionHLOD* InWorldPartitionHLOD)"
  },
  {
    "label": "UnregisterHLODActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterHLODActor(AWorldPartitionHLOD* InWorldPartitionHLOD)"
  },
  {
    "label": "OnCellShown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCellShown(const UWorldPartitionRuntimeCell* InCell)"
  },
  {
    "label": "OnCellHidden()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCellHidden(const UWorldPartitionRuntimeCell* InCell)"
  },
  {
    "label": "CanMakeVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMakeVisible(const UWorldPartitionRuntimeCell* InCell)"
  },
  {
    "label": "CanMakeInvisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMakeInvisible(const UWorldPartitionRuntimeCell* InCell)"
  },
  {
    "label": "GetHLODActorsForCell()",
    "kind": "Method",
    "detail": "Function (const TArray<AWorldPartitionHLOD*>&)",
    "insertText": "GetHLODActorsForCell(const UWorldPartitionRuntimeCell* InCell)"
  },
  {
    "label": "IsHLODEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHLODEnabled()"
  },
  {
    "label": "OnHLODActorRegisteredEvent()",
    "kind": "Method",
    "detail": "Function (FWorldPartitionHLODActorRegisteredEvent&)",
    "insertText": "OnHLODActorRegisteredEvent()"
  },
  {
    "label": "OnExternalStreamingObjectRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExternalStreamingObjectRemoved(URuntimeHashExternalStreamingObjectBase* ExternalStreamingObject)"
  },
  {
    "label": "OnCVarsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCVarsChanged()"
  },
  {
    "label": "GetNumOutdatedHLODActors()",
    "kind": "Method",
    "detail": "Function (# if ! UE_BUILD_SHIPPING uint32)",
    "insertText": "GetNumOutdatedHLODActors()"
  },
  {
    "label": "GetCellData()",
    "kind": "Method",
    "detail": "Function (} private : struct FCellData { bool bIsCellVisible = false ; TArray<AWorldPartitionHLOD*> LoadedHLODs ; } ; struct FWorldPartitionHLODRuntimeData { TMap<FGuid,FCellData> CellsData ; } ; TMap<TObjectPtr<UWorldPartition>,FWorldPartitionHLODRuntimeData> WorldPartitionsHLODRuntimeData ; const FCellData*)",
    "insertText": "GetCellData(const UWorldPartitionRuntimeCell* InCell)"
  },
  {
    "label": "GetCellData()",
    "kind": "Method",
    "detail": "Function (FCellData*)",
    "insertText": "GetCellData(AWorldPartitionHLOD* InWorldPartitionHLOD)"
  },
  {
    "label": "OnBeginRenderViews()",
    "kind": "Method",
    "detail": "Function (struct FWorldPartitionHLODWarmupState { uint32 WarmupLastRequestedFrame = INDEX_NONE ; uint32 WarmupCallsUntilReady = INDEX_NONE ; FBox WarmupBounds ; } ; typedef TMap<FObjectKey,FWorldPartitionHLODWarmupState> FHLODWarmupStateMap ; FHLODWarmupStateMap HLODActorsToWarmup ; void)",
    "insertText": "OnBeginRenderViews(const FSceneViewFamily& InViewFamily)"
  },
  {
    "label": "PrepareToWarmup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareToWarmup(const UWorldPartitionRuntimeCell* InCell, AWorldPartitionHLOD* InHLODActor)"
  },
  {
    "label": "ShouldPerformWarmup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldPerformWarmup()"
  },
  {
    "label": "ShouldPerformWarmupForCell()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldPerformWarmupForCell(const UWorldPartitionRuntimeCell* InCell)"
  },
  {
    "label": "OnWorldPartitionInitialized()",
    "kind": "Method",
    "detail": "Function (bool bCachedShouldPerformWarmup ; class FAutoConsoleCommand EnableHLODCommand ; bool WorldPartitionHLODEnabled ; class FHLODResourcesResidencySceneViewExtension ; TSharedPtr<FHLODResourcesResidencySceneViewExtension,ESPMode::ThreadSafe> SceneViewExtension ; void)",
    "insertText": "OnWorldPartitionInitialized(UWorldPartition* InWorldPartition)"
  },
  {
    "label": "OnWorldPartitionUninitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldPartitionUninitialized(UWorldPartition* InWorldPartition)"
  }
]