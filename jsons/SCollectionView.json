[
  {
    "label": "FCollectionAssetManagement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionAssetManagement"
  },
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSourcesSearch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSourcesSearch"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SHorizontalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHorizontalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FHistoryData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHistoryData"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "SCollectionView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCollectionView"
  },
  {
    "label": "FCollectionContextMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionContextMenu"
  },
  {
    "label": "FCreateCollectionPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateCollectionPayload"
  },
  {
    "label": "ISourceControlProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlProvider"
  },
  {
    "label": "ISourceControlProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlProvider"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FScopedPreventSelectionChangedDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedPreventSelectionChangedDelegate"
  },
  {
    "label": "FCollectionContextMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionContextMenu"
  },
  {
    "label": "FCollectionDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionDragDropOp"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DELEGATE_OneParam( FOnCollectionSelected, const FCollectionNameType& /*SelectedCollection*/)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "SetSelectedCollections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedCollections(const TArray<FCollectionNameType>& CollectionsToSelect, const bool bEnsureVisible = true)"
  },
  {
    "label": "SetExpandedCollections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExpandedCollections(const TArray<FCollectionNameType>& CollectionsToExpand)"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "SetSelectedAssetPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedAssetPaths(const TArray<FSoftObjectPath>& SelectedAssets)"
  },
  {
    "label": "ApplyHistoryData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyHistoryData( const FHistoryData& History )"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings(const FString& IniFilename, const FString& IniSection, const FString& SettingsString)"
  },
  {
    "label": "OnAddCollectionClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddCollectionClicked()"
  },
  {
    "label": "MakeAddCollectionMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeAddCollectionMenu(TSharedRef<SWidget> MenuParent)"
  },
  {
    "label": "CreateCollectionItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCollectionItem( ECollectionShareType::Type CollectionType, ECollectionStorageMode::Type StorageMode, const FCreateCollectionPayload& InCreationPayload )"
  },
  {
    "label": "RenameCollectionItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameCollectionItem( const TSharedPtr<FCollectionItem>& ItemToRename )"
  },
  {
    "label": "DeleteCollectionItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteCollectionItems( const TArray<TSharedPtr<FCollectionItem>>& ItemsToDelete )"
  },
  {
    "label": "GenerateCollectionRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "GenerateCollectionRow( TSharedPtr<FCollectionItem> CollectionItem, const TSharedRef<STableViewBase>& OwnerTable )"
  },
  {
    "label": "OnCollectionDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCollectionDragDetected(const FGeometry& Geometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "ValidateDragDropOnCollectionTree()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateDragDropOnCollectionTree(const FGeometry& Geometry, const FDragDropEvent& DragDropEvent, bool& OutIsKnownDragOperation)"
  },
  {
    "label": "HandleDragDropOnCollectionTree()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleDragDropOnCollectionTree(const FGeometry& Geometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "ValidateDragDropOnCollectionItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateDragDropOnCollectionItem(TSharedRef<FCollectionItem> CollectionItem, const FGeometry& Geometry, const FDragDropEvent& DragDropEvent, bool& OutIsKnownDragOperation)"
  },
  {
    "label": "HandleDragDropOnCollectionItem()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleDragDropOnCollectionItem(TSharedRef<FCollectionItem> CollectionItem, const FGeometry& Geometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "HandleSettingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSettingChanged(FName PropertyName)"
  },
  {
    "label": "ExpandParentItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandParentItems(const TSharedRef<FCollectionItem>& InCollectionItem)"
  },
  {
    "label": "MakeCollectionTreeContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "MakeCollectionTreeContextMenu()"
  },
  {
    "label": "OnCollectionCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCollectionCheckStateChanged( ECheckBoxState NewState, TSharedPtr<FCollectionItem> CollectionItem )"
  },
  {
    "label": "CollectionSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectionSelectionChanged( TSharedPtr< FCollectionItem > CollectionItem, ESelectInfo::Type SelectInfo )"
  },
  {
    "label": "CollectionItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectionItemScrolledIntoView( TSharedPtr<FCollectionItem> CollectionItem, const TSharedPtr<ITableRow>& Widget )"
  },
  {
    "label": "CollectionNameChangeCommit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CollectionNameChangeCommit( const TSharedPtr< FCollectionItem >& CollectionItem, const FString& NewName, bool bChangeConfirmed, FText& OutWarningMessage )"
  },
  {
    "label": "CollectionVerifyRenameCommit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CollectionVerifyRenameCommit(const TSharedPtr< FCollectionItem >& CollectionItem, const FString& NewName, const FSlateRect& MessageAnchor, FText& OutErrorMessage)"
  },
  {
    "label": "HandleCollectionCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCollectionCreated( const FCollectionNameType& Collection )"
  },
  {
    "label": "HandleCollectionRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCollectionRenamed( const FCollectionNameType& OriginalCollection, const FCollectionNameType& NewCollection )"
  },
  {
    "label": "HandleCollectionReparented()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCollectionReparented( const FCollectionNameType& Collection, const TOptional<FCollectionNameType>& OldParent, const TOptional<FCollectionNameType>& NewParent )"
  },
  {
    "label": "HandleCollectionDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCollectionDestroyed( const FCollectionNameType& Collection )"
  },
  {
    "label": "HandleCollectionUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCollectionUpdated( const FCollectionNameType& Collection )"
  },
  {
    "label": "HandleAssetsAddedToCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAssetsAddedToCollection( const FCollectionNameType& Collection, TConstArrayView<FSoftObjectPath> AssetsAdded )"
  },
  {
    "label": "HandleAssetsRemovedFromCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAssetsRemovedFromCollection( const FCollectionNameType& Collection, TConstArrayView<FSoftObjectPath> AssetsRemoved )"
  },
  {
    "label": "HandleSourceControlProviderChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSourceControlProviderChanged(class ISourceControlProvider& OldProvider, class ISourceControlProvider& NewProvider)"
  },
  {
    "label": "HandleSourceControlStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSourceControlStateChanged()"
  },
  {
    "label": "UpdateCollectionItemStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollectionItemStatus( const TSharedRef<FCollectionItem>& CollectionItem )"
  },
  {
    "label": "UpdateCollectionItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollectionItems()"
  },
  {
    "label": "UpdateFilteredCollectionItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFilteredCollectionItems()"
  },
  {
    "label": "SetCollectionsSearchFilterText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollectionsSearchFilterText( const FText& InSearchText, TArray<FText>& OutErrors )"
  }
]