[
  {
    "label": "FDragDropOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropOperation"
  },
  {
    "label": "UWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidget"
  },
  {
    "label": "UMGEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMGEDITOR_API"
  },
  {
    "label": "IHasWidgetDragDropExtensibility",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHasWidgetDragDropExtensibility"
  },
  {
    "label": "IWidgetDragDropExtension()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Internationalization / Text . h \" class FDragDropOperation ; class UWidget ; class IWidgetDragDropExtension { public : ~)",
    "insertText": "IWidgetDragDropExtension()"
  },
  {
    "label": "ShouldPreventDropOnTarget()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldPreventDropOnTarget(const UWidget* Target, const TSharedPtr<FDragDropOperation>& DragDropOp)"
  },
  {
    "label": "GetDropFailureText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDropFailureText(const UWidget* Target, const TSharedPtr<FDragDropOperation>& DragDropOp)"
  },
  {
    "label": "AddExtension()",
    "kind": "Method",
    "detail": "Function (} ; class FWidgetDragDropExtensibilityManager { public : void)",
    "insertText": "AddExtension(const TSharedRef<IWidgetDragDropExtension>& Extension)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Extensions .)",
    "insertText": "Add(Extension)"
  },
  {
    "label": "RemoveExtension()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "RemoveExtension(const TSharedRef<IWidgetDragDropExtension>& Extension)"
  },
  {
    "label": "RemoveSingleSwap()",
    "kind": "Method",
    "detail": "Function (int32 NumRemoved = Extensions .)",
    "insertText": "RemoveSingleSwap(Extension)"
  },
  {
    "label": "GetExtensions()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const TSharedPtr<IWidgetDragDropExtension>>)",
    "insertText": "GetExtensions()"
  }
]