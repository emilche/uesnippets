[
  {
    "label": "Unwrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Unwrapper"
  },
  {
    "label": "IsNewer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_INCLUDE_MODULE_COMMON_TYPES_PUBLIC_H_ # define MODULES_INCLUDE_MODULE_COMMON_TYPES_PUBLIC_H_ # include<limits> # include \" absl / types / optional . h \" namespace webrtc { template<U> bool)",
    "insertText": "IsNewer(U value, U prev_value)"
  },
  {
    "label": "kBreakpoint()",
    "kind": "Method",
    "detail": "Function (U)",
    "insertText": "kBreakpoint(std::numeric_limits<U>::max() >> 1)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (} template<U> class Unwrapper {)",
    "insertText": "static_assert(!std::numeric_limits<U>::is_signed, \"U must be unsigned\")"
  },
  {
    "label": "UnwrapWithoutUpdate()",
    "kind": "Method",
    "detail": "Function (public : int64_t)",
    "insertText": "UnwrapWithoutUpdate(U value)"
  },
  {
    "label": "int64_t()",
    "kind": "Method",
    "detail": "Function (int64_t kMaxPlusOne = static_cast<)",
    "insertText": "int64_t(std::numeric_limits<U>::max())"
  },
  {
    "label": "U()",
    "kind": "Method",
    "detail": "Function (U cropped_last = static_cast<)",
    "insertText": "U(*last_value_)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int64_t delta = value - cropped_last ;)",
    "insertText": "if(IsNewer(value, cropped_last))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(delta > 0 && (*last_value_ + delta - kMaxPlusOne) >= 0)"
  },
  {
    "label": "UpdateLast()",
    "kind": "Method",
    "detail": "Function (delta - = kMaxPlusOne ; } return* last_value_ + delta ; } void)",
    "insertText": "UpdateLast(int64_t last_value)"
  },
  {
    "label": "Unwrap()",
    "kind": "Method",
    "detail": "Function (last_value_ = last_value ; } int64_t)",
    "insertText": "Unwrap(U value)"
  },
  {
    "label": "UnwrapWithoutUpdate()",
    "kind": "Method",
    "detail": "Function (int64_t unwrapped =)",
    "insertText": "UnwrapWithoutUpdate(value)"
  },
  {
    "label": "UpdateLast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLast(unwrapped)"
  },
  {
    "label": "IsNewerTimestamp()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNewerTimestamp(uint32_t timestamp, uint32_t prev_timestamp)"
  },
  {
    "label": "LatestSequenceNumber()",
    "kind": "Method",
    "detail": "Function (} uint16_t)",
    "insertText": "LatestSequenceNumber(uint16_t sequence_number1, uint16_t sequence_number2)"
  },
  {
    "label": "LatestTimestamp()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "LatestTimestamp(uint32_t timestamp1, uint32_t timestamp2)"
  }
]