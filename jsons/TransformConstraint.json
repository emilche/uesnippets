[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UTransformableHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTransformableHandle"
  },
  {
    "label": "UTransformableComponentHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTransformableComponentHandle"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UTickableTransformConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTickableTransformConstraint"
  },
  {
    "label": "UTickableTranslationConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTickableTranslationConstraint"
  },
  {
    "label": "FDynamicCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicCache"
  },
  {
    "label": "UTickableRotationConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTickableRotationConstraint"
  },
  {
    "label": "FDynamicCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicCache"
  },
  {
    "label": "UTickableScaleConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTickableScaleConstraint"
  },
  {
    "label": "FDynamicCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicCache"
  },
  {
    "label": "UTickableParentConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTickableParentConstraint"
  },
  {
    "label": "FDynamicCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicCache"
  },
  {
    "label": "UTickableLookAtConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTickableLookAtConstraint"
  },
  {
    "label": "FTransformConstraintUtils",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransformConstraintUtils"
  },
  {
    "label": "FConstraintDependencyScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintDependencyScope"
  },
  {
    "label": "FHandleDependencyChecker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHandleDependencyChecker"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup()"
  },
  {
    "label": "OnHandleModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHandleModified(UTransformableHandle* InHandle, EHandleEvent InEvent)"
  },
  {
    "label": "RegisterDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDelegates()"
  },
  {
    "label": "SetupDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDependencies(const UWorld* InWorld)"
  },
  {
    "label": "UTickableTranslationConstraint()",
    "kind": "Method",
    "detail": "Function (CONSTRAINTS_API)",
    "insertText": "UTickableTranslationConstraint()"
  },
  {
    "label": "UTickableRotationConstraint()",
    "kind": "Method",
    "detail": "Function (CONSTRAINTS_API)",
    "insertText": "UTickableRotationConstraint()"
  },
  {
    "label": "UTickableScaleConstraint()",
    "kind": "Method",
    "detail": "Function (CONSTRAINTS_API)",
    "insertText": "UTickableScaleConstraint()"
  },
  {
    "label": "UTickableParentConstraint()",
    "kind": "Method",
    "detail": "Function (CONSTRAINTS_API)",
    "insertText": "UTickableParentConstraint()"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(UTickableParentConstraint, bScaling)"
  },
  {
    "label": "UTickableLookAtConstraint()",
    "kind": "Method",
    "detail": "Function (CONSTRAINTS_API)",
    "insertText": "UTickableLookAtConstraint()"
  },
  {
    "label": "FindQuatBetweenNormals()",
    "kind": "Method",
    "detail": "Function (FQuat)",
    "insertText": "FindQuatBetweenNormals(const FVector& A, const FVector& B)"
  },
  {
    "label": "GetParentConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetParentConstraints(\n\t\tUWorld* World,\n\t\tconst AActor* InChild,\n\t\tTArray< TWeakObjectPtr<UTickableConstraint> >& OutConstraints)"
  },
  {
    "label": "AddConstraint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddConstraint(\n\t\tUWorld* InWorld,\n\t\tUTransformableHandle* InParentHandle,\n\t\tUTransformableHandle* InChildHandle,\n\t\tUTickableTransformConstraint* Constraint,\n\t\tconst bool bMaintainOffset = true,\n\t\tconst bool bUseDefault = false)"
  },
  {
    "label": "ComputeRelativeTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "ComputeRelativeTransform(\n\t\tconst FTransform& InChildLocal,\n\t\tconst FTransform& InChildWorld,\n\t\tconst FTransform& InSpaceWorld,\n\t\tconst UTickableTransformConstraint* InConstraint)"
  },
  {
    "label": "GetRelativeTransform()",
    "kind": "Method",
    "detail": "Function (TOptional<FTransform>)",
    "insertText": "GetRelativeTransform(UWorld* InWorld, const uint32 InHandleHash)"
  },
  {
    "label": "GetConstraintsRelativeTransform()",
    "kind": "Method",
    "detail": "Function (TOptional<FTransform>)",
    "insertText": "GetConstraintsRelativeTransform(\n\t\tconst TArray< TWeakObjectPtr<UTickableConstraint> >& InConstraints,\n\t\tconst FTransform& InChildLocal, const FTransform& InChildWorld)"
  },
  {
    "label": "GetLastActiveConstraintIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLastActiveConstraintIndex(const TArray< TWeakObjectPtr<UTickableConstraint> >& InConstraints)"
  },
  {
    "label": "GetChildrenConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChildrenConstraints(\n\t\tUWorld* World,\n\t\tconst UTickableTransformConstraint* InConstraint,\n\t\tTArray< TWeakObjectPtr<UTickableConstraint> >& OutConstraints,\n\t\tconst bool bIncludeTarget = false)"
  },
  {
    "label": "UpdateTransformBasedOnConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTransformBasedOnConstraint(FTransform& CurrentTransform, USceneComponent* SceneComponent)"
  },
  {
    "label": "BuildDependencies()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildDependencies(UWorld* InWorld, UTickableTransformConstraint* Constraint)"
  },
  {
    "label": "BuildAttachmentsDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildAttachmentsDependencies(UWorld* InWorld, const UTickableTransformConstraint* Constraint)"
  }
]