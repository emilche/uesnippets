[
  {
    "label": "FCbFieldView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbFieldView"
  },
  {
    "label": "FCbObjectView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbObjectView"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "ICacheRecordPolicyShared",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICacheRecordPolicyShared"
  },
  {
    "label": "FOptionalCacheRecordPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOptionalCacheRecordPolicy"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCacheValuePolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCacheValuePolicy"
  },
  {
    "label": "Private",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Private"
  },
  {
    "label": "FCacheRecordPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheRecordPolicy"
  },
  {
    "label": "FCacheRecordPolicyBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheRecordPolicyBuilder"
  },
  {
    "label": "FOptionalCacheRecordPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOptionalCacheRecordPolicy"
  },
  {
    "label": "FCacheRecordPolicyBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheRecordPolicyBuilder"
  },
  {
    "label": "FOptionalCacheRecordPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOptionalCacheRecordPolicy"
  },
  {
    "label": "CombineCachePolicy()",
    "kind": "Method",
    "detail": "Function (ECachePolicy)",
    "insertText": "CombineCachePolicy(ECachePolicy A, ECachePolicy B)"
  },
  {
    "label": "TryLexFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLexFromString(ECachePolicy& OutPolicy, FUtf8StringView String)"
  },
  {
    "label": "TryLexFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLexFromString(ECachePolicy& OutPolicy, FWideStringView String)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, ECachePolicy& OutPolicy, ECachePolicy Default = ECachePolicy::Default)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FCacheValuePolicy& OutPolicy)"
  },
  {
    "label": "AddValuePolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddValuePolicy(const FCacheValuePolicy& Value)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (FCacheRecordPolicy)",
    "insertText": "Build()"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(*this)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FCacheRecordPolicy& OutPolicy)"
  }
]