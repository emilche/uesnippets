[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "FMovieSceneEvaluationTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationTrack"
  },
  {
    "label": "TRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRange"
  },
  {
    "label": "UMovieSceneSpawnTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSpawnTrack"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Curves / IntegralCurve . h \" # include \" Internationalization / Text . h \" # include \" Misc / Guid . h \" # include \" MovieSceneSection . h \" # include \" MovieSceneTrack . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneSpawnTrack . generated . h \" class UObject ; struct FFrameNumber ; struct FMovieSceneEvaluationTrack ; template<ElementType> class TRange ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "UMovieSceneSpawnTrack()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UMovieSceneSpawnTrack(const FObjectInitializer& Obj)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: const FGuid& GetObjectId()"
  },
  {
    "label": "GetEvaluationPriority()",
    "kind": "Method",
    "detail": "Function (ObjectGuid = InGuid ; } uint16)",
    "insertText": "GetEvaluationPriority()"
  },
  {
    "label": "PopulateSpawnedRangeMask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PopulateSpawnedRangeMask(const TRange<FFrameNumber>& InOverlap, TArray<TRange<FFrameNumber>, TInlineAllocator<1>>& OutRanges)"
  },
  {
    "label": "SupportsType()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "SupportsType(TSubclassOf<UMovieSceneSection> SectionClass)"
  },
  {
    "label": "CreateNewSection()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "CreateNewSection()"
  },
  {
    "label": "HasSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSection(const UMovieSceneSection& Section)"
  },
  {
    "label": "AddSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSection(UMovieSceneSection& Section)"
  },
  {
    "label": "RemoveSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSection(UMovieSceneSection& Section)"
  },
  {
    "label": "RemoveSectionAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSectionAt(int32 SectionIndex)"
  },
  {
    "label": "RemoveAllAnimationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllAnimationData()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "GetAllSections()",
    "kind": "Method",
    "detail": "Function (const TArray<UMovieSceneSection*>&)",
    "insertText": "GetAllSections()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "GetCookOptimizationFlags()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR ECookOptimizationFlags)",
    "insertText": "GetCookOptimizationFlags()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITORONLY_DATA FText)",
    "insertText": "GetDisplayName()"
  }
]