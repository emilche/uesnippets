[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TLockFreePointerListUnordered",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TLockFreePointerListUnordered"
  },
  {
    "label": "FLargeMemoryData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLargeMemoryData"
  },
  {
    "label": "FPooledLargeMemoryData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPooledLargeMemoryData"
  },
  {
    "label": "FLargeMemoryData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / LockFreeList . h \" # include \" CoreTypes . h \" # include<atomic> template<class T,int TPaddingForCacheContention> class TLockFreePointerListUnordered ; class FLargeMemoryData { public :)",
    "insertText": "FLargeMemoryData(const int64 PreAllocateBytes = 0)"
  },
  {
    "label": "FLargeMemoryData()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLargeMemoryData()"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(void* InData, int64 InOffset, int64 InNum)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write(InData, NumBytes, InNum)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Read(void* OutData, int64 InOffset, int64 InNum)"
  },
  {
    "label": "HasData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasData()"
  },
  {
    "label": "FLargeMemoryData()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FLargeMemoryData(const FLargeMemoryData&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FLargeMemoryData&)",
    "insertText": "operator(const FLargeMemoryData&)"
  },
  {
    "label": "GrowBuffer()",
    "kind": "Method",
    "detail": "Function (uint8* Data ; int64 NumBytes ; int64 MaxBytes ; void)",
    "insertText": "GrowBuffer()"
  },
  {
    "label": "FPooledLargeMemoryData()",
    "kind": "Method",
    "detail": "Function (} ; class FPooledLargeMemoryData { public :)",
    "insertText": "FPooledLargeMemoryData()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FLargeMemoryData&)",
    "insertText": "Get()"
  }
]