[
  {
    "label": "MockEchoRemover",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockEchoRemover"
  },
  {
    "label": "MockEchoRemover()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_MOCK_MOCK_ECHO_REMOVER_H_ # define MODULES_AUDIO_PROCESSING_AEC3_MOCK_MOCK_ECHO_REMOVER_H_ # include<vector> # include \" absl / types / optional . h \" # include \" modules / audio_processing / aec3 / echo_path_variability . h \" # include \" modules / audio_processing / aec3 / echo_remover . h \" # include \" modules / audio_processing / aec3 / render_buffer . h \" # include \" test / gmock . h \" namespace webrtc { namespace test { class MockEchoRemover : public EchoRemover { public :)",
    "insertText": "MockEchoRemover()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, ProcessCapture, (EchoPathVariability echo_path_variability, bool capture_signal_saturation, const absl::optional<DelayEstimate>& delay_estimate, RenderBuffer* render_buffer, Block* linear_output, Block* capture), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, UpdateEchoLeakageStatus, (bool leakage_detected), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, GetMetrics, (EchoControl::Metrics * metrics), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetCaptureOutputUsage, (bool capture_output_used), (override))"
  }
]