[
  {
    "label": "was",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "was"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "SSLCertChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSLCertChain"
  },
  {
    "label": "OpenSSLStreamAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OpenSSLStreamAdapter"
  },
  {
    "label": "method",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "method"
  },
  {
    "label": "SSLState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SSLState"
  },
  {
    "label": "ssl_verify_result_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ssl_verify_result_t"
  },
  {
    "label": "SetAllowLegacyTLSProtocols()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowLegacyTLSProtocols(const absl::optional<bool>& allow)"
  },
  {
    "label": "OpenSSLStreamAdapter()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "OpenSSLStreamAdapter(std::unique_ptr<StreamInterface> stream)"
  },
  {
    "label": "SslCipherSuiteToName()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "SslCipherSuiteToName(int crypto_suite)"
  },
  {
    "label": "IsBoringSsl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBoringSsl()"
  },
  {
    "label": "IsAcceptableCipher()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAcceptableCipher(int cipher, KeyType key_type)"
  },
  {
    "label": "IsAcceptableCipher()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAcceptableCipher(absl::string_view cipher, KeyType key_type)"
  },
  {
    "label": "EnableTimeCallbackForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableTimeCallbackForTesting()"
  },
  {
    "label": "OnEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEvent(StreamInterface* stream, int events, int err)"
  },
  {
    "label": "PostEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEvent(int events, int err)"
  },
  {
    "label": "SetTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeout(int delay_ms)"
  },
  {
    "label": "BeginSSL()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BeginSSL()"
  },
  {
    "label": "ContinueSSL()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ContinueSSL()"
  },
  {
    "label": "Error()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Error(absl::string_view context, int err, uint8_t alert, bool signal)"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup(uint8_t alert)"
  },
  {
    "label": "FlushInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushInput(unsigned int left)"
  },
  {
    "label": "VerifyPeerCertificate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VerifyPeerCertificate()"
  },
  {
    "label": "SSLVerifyCallback()",
    "kind": "Method",
    "detail": "Function (ssl_verify_result_t)",
    "insertText": "SSLVerifyCallback(SSL* ssl,\n                                                    uint8_t* out_alert)"
  },
  {
    "label": "SSLVerifyCallback()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSLVerifyCallback(X509_STORE_CTX* store, void* arg)"
  }
]