[
  {
    "label": "FStringsAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStringsAnalyzer"
  },
  {
    "label": "ERouteId",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERouteId"
  },
  {
    "label": "FStringsAnalyzer()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Trace / Analyzer . h \" # include \" TraceServices / Model / AnalysisSession . h \" namespace TraceServices { class FStringsAnalyzer : public UE::Trace::IAnalyzer { public :)",
    "insertText": "FStringsAnalyzer(IAnalysisSession& InSession) : Session(InSession)"
  },
  {
    "label": "OnAnalysisBegin()",
    "kind": "Method",
    "detail": "Function (} private : enum ERouteId : uint16 { RouteId_StaticString,RouteId_FName,} ; void)",
    "insertText": "OnAnalysisBegin(const FOnAnalysisContext& Context)"
  },
  {
    "label": "OnEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnEvent(uint16 RouteId, EStyle Style, const FOnEventContext& Context)"
  }
]