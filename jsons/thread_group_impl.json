[
  {
    "label": "WorkerThreadObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WorkerThreadObserver"
  },
  {
    "label": "TaskTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskTracker"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ScopedCommandsExecutor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedCommandsExecutor"
  },
  {
    "label": "WorkerThreadDelegateImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WorkerThreadDelegateImpl"
  },
  {
    "label": "ThreadGroupImplBlockingTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ThreadGroupImplBlockingTest"
  },
  {
    "label": "ThreadGroupImplMayBlockTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ThreadGroupImplMayBlockTest"
  },
  {
    "label": "InitializedInStart",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InitializedInStart"
  },
  {
    "label": "are",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "are"
  },
  {
    "label": "WaitForWorkersIdleForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForWorkersIdleForTesting(size_t n)"
  },
  {
    "label": "WaitForAllWorkersIdleForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForAllWorkersIdleForTesting()"
  },
  {
    "label": "WaitForWorkersCleanedUpForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForWorkersCleanedUpForTesting(size_t n)"
  },
  {
    "label": "EXCLUSIVE_LOCKS_REQUIRED()",
    "kind": "Method",
    "detail": "Function (override)",
    "insertText": "EXCLUSIVE_LOCKS_REQUIRED(lock_)"
  },
  {
    "label": "EXCLUSIVE_LOCKS_REQUIRED()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "EXCLUSIVE_LOCKS_REQUIRED(lock_)"
  },
  {
    "label": "EXCLUSIVE_LOCKS_REQUIRED()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "EXCLUSIVE_LOCKS_REQUIRED(lock_)"
  },
  {
    "label": "AdjustMaxTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustMaxTasks()"
  },
  {
    "label": "ScheduleAdjustMaxTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleAdjustMaxTasks()"
  },
  {
    "label": "EXCLUSIVE_LOCKS_REQUIRED()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "EXCLUSIVE_LOCKS_REQUIRED(lock_)"
  },
  {
    "label": "GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (workers_)",
    "insertText": "GUARDED_BY(lock_)"
  },
  {
    "label": "GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (idle_workers_stack_)",
    "insertText": "GUARDED_BY(lock_)"
  },
  {
    "label": "GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (idle_workers_stack_cv_for_testing_)",
    "insertText": "GUARDED_BY(lock_)"
  },
  {
    "label": "GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (num_workers_cleaned_up_for_testing_cv_)",
    "insertText": "GUARDED_BY(lock_)"
  }
]