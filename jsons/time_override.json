[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TIME_TIME_OVERRIDE_H_ # define BASE_TIME_TIME_OVERRIDE_H_ # include<atomic> # include \" base / base_export . h \" # include \" base / time / time . h \" # include \" build / build_config . h \" # include \" third_party / abseil - cpp / absl / types / optional . h \" namespace base { using TimeNowFunction =)",
    "insertText": "decltype(&Time::Now)"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (using TimeTicksNowFunction =)",
    "insertText": "decltype(&TimeTicks::Now)"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (using ThreadTicksNowFunction =)",
    "insertText": "decltype(&ThreadTicks::Now)"
  },
  {
    "label": "ScopedTimeClockOverrides()",
    "kind": "Method",
    "detail": "Function (namespace subtle { class BASE_EXPORT ScopedTimeClockOverrides { public :)",
    "insertText": "ScopedTimeClockOverrides(TimeNowFunction time_override, TimeTicksNowFunction time_ticks_override, ThreadTicksNowFunction thread_ticks_override)"
  },
  {
    "label": "ScopedTimeClockOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedTimeClockOverrides(const ScopedTimeClockOverrides&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScopedTimeClockOverrides&)",
    "insertText": "operator(const ScopedTimeClockOverrides&)"
  },
  {
    "label": "ScopedTimeClockOverrides()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ScopedTimeClockOverrides()"
  },
  {
    "label": "overrides_active()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "overrides_active()"
  },
  {
    "label": "TimeNowFromSystemTimeIgnoringOverride()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT Time)",
    "insertText": "TimeNowFromSystemTimeIgnoringOverride()"
  },
  {
    "label": "TimeTicksNowIgnoringOverride()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT TimeTicks)",
    "insertText": "TimeTicksNowIgnoringOverride()"
  },
  {
    "label": "ThreadTicksNowIgnoringOverride()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT ThreadTicks)",
    "insertText": "ThreadTicksNowIgnoringOverride()"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_POSIX) BASE_EXPORT absl::optional<TimeTicks> MaybeTimeTicksNowIgnoringOverride()"
  }
]