[
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FSlateIcon",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateIcon"
  },
  {
    "label": "ISlateStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateStyle"
  },
  {
    "label": "FSlateIcon()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" struct FSlateBrush ; struct FSlateIcon {)",
    "insertText": "FSlateIcon()"
  },
  {
    "label": "FSlateIcon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSlateIcon(const FName InStyleSetName, const FName InStyleName, const FName InSmallStyleName = NAME_None, const FName InStatusOverlayStyleName = NAME_None)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "operator(const FSlateIcon& A, const FSlateIcon& B)"
  },
  {
    "label": "GetIcon()",
    "kind": "Method",
    "detail": "Function (} public : const FSlateBrush*)",
    "insertText": "GetIcon()"
  },
  {
    "label": "GetOptionalIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetOptionalIcon()"
  },
  {
    "label": "GetSmallIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetSmallIcon()"
  },
  {
    "label": "GetOptionalSmallIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetOptionalSmallIcon()"
  },
  {
    "label": "GetOverlayIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetOverlayIcon()"
  },
  {
    "label": "GetSmallStyleName()",
    "kind": "Method",
    "detail": "Function (const FName&)",
    "insertText": "GetSmallStyleName()"
  },
  {
    "label": "GetStyleSetName()",
    "kind": "Method",
    "detail": "Function (const FName&)",
    "insertText": "GetStyleSetName()"
  }
]