[
  {
    "label": "TFrameValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TFrameValue"
  },
  {
    "label": "TFrameValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreGlobals . h \" # include \" Misc / Optional . h \" template<ValueType> struct TFrameValue { private : uint64 FrameSet ; TOptional<ValueType> Value ; public :)",
    "insertText": "TFrameValue(const ValueType& InValue) : FrameSet(GFrameCounter) , Value(InValue)"
  },
  {
    "label": "TFrameValue()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TFrameValue(ValueType&& InValue) : FrameSet(GFrameCounter) , Value(MoveTemp(InValue))"
  },
  {
    "label": "TFrameValue()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TFrameValue() : FrameSet(GFrameCounter)"
  },
  {
    "label": "TFrameValue()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TFrameValue(const TFrameValue& InValue) : FrameSet(GFrameCounter)"
  },
  {
    "label": "TFrameValue()",
    "kind": "Method",
    "detail": "Function (Value = InValue ; })",
    "insertText": "TFrameValue(TFrameValue&& InValue) : FrameSet(GFrameCounter)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Value =)",
    "insertText": "MoveTemp(InValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} TFrameValue&)",
    "insertText": "operator(const TFrameValue& InValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Value = InValue . Value ; FrameSet = GFrameCounter ; return* this ; } TFrameValue&)",
    "insertText": "operator(TFrameValue&& InValue)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Value =)",
    "insertText": "MoveTemp(InValue.Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FrameSet = GFrameCounter ; return* this ; } TFrameValue&)",
    "insertText": "operator(const ValueType& InValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Value = InValue ; FrameSet = GFrameCounter ; return* this ; } TFrameValue&)",
    "insertText": "operator(ValueType&& InValue)"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (FrameSet = GFrameCounter ; return* this ; } public : bool)",
    "insertText": "IsSet()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} const ValueType&)",
    "insertText": "GetValue()"
  },
  {
    "label": "TryGetValue()",
    "kind": "Method",
    "detail": "Function (} ValueType)",
    "insertText": "TryGetValue(ValueType UnsetValue)"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (ValueType Result =)",
    "insertText": "IsSet() ? MoveTemp(Value.GetValue()) : MoveTemp(UnsetValue)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (Value .)",
    "insertText": "Reset()"
  }
]