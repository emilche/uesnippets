[
  {
    "label": "AudioMultiVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioMultiVector"
  },
  {
    "label": "AudioMultiVector()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "AudioMultiVector(size_t N)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Zeros()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Zeros(size_t length)"
  },
  {
    "label": "PushBackInterleaved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushBackInterleaved(rtc::ArrayView<const int16_t> append_this)"
  },
  {
    "label": "PushBack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushBack(const AudioMultiVector& append_this)"
  },
  {
    "label": "PushBackFromIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushBackFromIndex(const AudioMultiVector& append_this,\n                                 size_t index)"
  },
  {
    "label": "PopFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopFront(size_t length)"
  },
  {
    "label": "PopBack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopBack(size_t length)"
  },
  {
    "label": "OverwriteAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverwriteAt(const AudioMultiVector& insert_this,\n                           size_t length,\n                           size_t position)"
  },
  {
    "label": "CrossFade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CrossFade(const AudioMultiVector& append_this,\n                         size_t fade_length)"
  },
  {
    "label": "AssertSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssertSize(size_t required_size)"
  },
  {
    "label": "CopyChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyChannel(size_t from_channel, size_t to_channel)"
  }
]