[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FormatRawSinkImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatRawSinkImpl"
  },
  {
    "label": "FormatSinkImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatSinkImpl"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FormatConversionCharInternal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FormatConversionCharInternal"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FormatConversionSpecImplFriend",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FormatConversionSpecImplFriend"
  },
  {
    "label": "FormatConversionSpecImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatConversionSpecImpl"
  },
  {
    "label": "str_format_internal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "str_format_internal"
  },
  {
    "label": "FormatConversionSpecImplFriend",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FormatConversionSpecImplFriend"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FormatConversionCharSetInternal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FormatConversionCharSetInternal"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "PutPaddedString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PutPaddedString(string_view v, int width, int precision, bool left)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "T(this)"
  },
  {
    "label": "FlagsToString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "FlagsToString(Flags v)"
  },
  {
    "label": "FlagsContains()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FlagsContains(flags_, Flags::kLeft)"
  },
  {
    "label": "FlagsContains()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FlagsContains(flags_, Flags::kShowPos)"
  },
  {
    "label": "FlagsContains()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FlagsContains(flags_, Flags::kSignCol)"
  },
  {
    "label": "FlagsContains()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FlagsContains(flags_, Flags::kAlt)"
  },
  {
    "label": "FlagsContains()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FlagsContains(flags_, Flags::kZero)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "T(*this)"
  },
  {
    "label": "FormatConversionCharSetUnion()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FormatConversionCharSetUnion(a, b)"
  }
]