[
  {
    "label": "LLVMConstants",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LLVMConstants"
  },
  {
    "label": "Tag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Tag"
  },
  {
    "label": "Attribute",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Attribute"
  },
  {
    "label": "Form",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Form"
  },
  {
    "label": "LocationAtom",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LocationAtom"
  },
  {
    "label": "TypeKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TypeKind"
  },
  {
    "label": "DecimalSignEncoding",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DecimalSignEncoding"
  },
  {
    "label": "EndianityEncoding",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EndianityEncoding"
  },
  {
    "label": "AccessAttribute",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AccessAttribute"
  },
  {
    "label": "VisibilityAttribute",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VisibilityAttribute"
  },
  {
    "label": "VirtualityAttribute",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VirtualityAttribute"
  },
  {
    "label": "SourceLanguage",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SourceLanguage"
  },
  {
    "label": "CaseSensitivity",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CaseSensitivity"
  },
  {
    "label": "CallingConvention",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CallingConvention"
  },
  {
    "label": "InlineAttribute",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "InlineAttribute"
  },
  {
    "label": "ArrayDimensionOrdering",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ArrayDimensionOrdering"
  },
  {
    "label": "DiscriminantList",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DiscriminantList"
  },
  {
    "label": "LineNumberOps",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LineNumberOps"
  },
  {
    "label": "LineNumberExtendedOps",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LineNumberExtendedOps"
  },
  {
    "label": "MacinfoRecordType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "MacinfoRecordType"
  },
  {
    "label": "CallFrameInfo",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CallFrameInfo"
  },
  {
    "label": "Constants",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Constants"
  },
  {
    "label": "LocationListEntry",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LocationListEntry"
  },
  {
    "label": "ApplePropertyAttributes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ApplePropertyAttributes"
  },
  {
    "label": "AcceleratorTable",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AcceleratorTable"
  },
  {
    "label": "GDBIndexEntryKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "GDBIndexEntryKind"
  },
  {
    "label": "GDBIndexEntryLinkage",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "GDBIndexEntryLinkage"
  },
  {
    "label": "PubIndexEntryDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PubIndexEntryDescriptor"
  },
  {
    "label": "HANDLE_DW_TAG()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_DWARF_H # define LLVM_SUPPORT_DWARF_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / Support / Compiler . h \" # include \" llvm / Support / DataTypes . h \" namespace llvm { namespace dwarf { enum LLVMConstants : uint32_t { DW_TAG_invalid = ~ 0 U,DW_VIRTUALITY_invalid = ~ 0 U,DWARF_VERSION = 4,DW_PUBTYPES_VERSION = 2,DW_PUBNAMES_VERSION = 2,DW_ARANGES_VERSION = 2 } ; const uint32_t DW_CIE_ID = UINT32_MAX ; const uint64_t DW64_CIE_ID = UINT64_MAX ; enum Tag : uint16_t { # define)",
    "insertText": "HANDLE_DW_TAG(ID, NAME)"
  },
  {
    "label": "isType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isType(Tag T)"
  },
  {
    "label": "HANDLE_DW_ATE()",
    "kind": "Method",
    "detail": "Function (enum TypeKind { # define)",
    "insertText": "HANDLE_DW_ATE(ID, NAME)"
  },
  {
    "label": "HANDLE_DW_VIRTUALITY()",
    "kind": "Method",
    "detail": "Function (enum DecimalSignEncoding { DW_DS_unsigned = 0 x01,DW_DS_leading_overpunch = 0 x02,DW_DS_trailing_overpunch = 0 x03,DW_DS_leading_separate = 0 x04,DW_DS_trailing_separate = 0 x05 } ; enum EndianityEncoding { DW_END_default = 0 x00,DW_END_big = 0 x01,DW_END_little = 0 x02,DW_END_lo_user = 0 x40,DW_END_hi_user = 0 xff } ; enum AccessAttribute { DW_ACCESS_public = 0 x01,DW_ACCESS_protected = 0 x02,DW_ACCESS_private = 0 x03 } ; enum VisibilityAttribute { DW_VIS_local = 0 x01,DW_VIS_exported = 0 x02,DW_VIS_qualified = 0 x03 } ; enum VirtualityAttribute { # define)",
    "insertText": "HANDLE_DW_VIRTUALITY(ID, NAME)"
  },
  {
    "label": "HANDLE_DW_LANG()",
    "kind": "Method",
    "detail": "Function (enum SourceLanguage { # define)",
    "insertText": "HANDLE_DW_LANG(ID, NAME)"
  },
  {
    "label": "TagString()",
    "kind": "Method",
    "detail": "Function (enum CaseSensitivity { DW_ID_case_sensitive = 0 x00,DW_ID_up_case = 0 x01,DW_ID_down_case = 0 x02,DW_ID_case_insensitive = 0 x03 } ; enum CallingConvention { DW_CC_normal = 0 x01,DW_CC_program = 0 x02,DW_CC_nocall = 0 x03,DW_CC_lo_user = 0 x40,DW_CC_hi_user = 0 xff } ; enum InlineAttribute { DW_INL_not_inlined = 0 x00,DW_INL_inlined = 0 x01,DW_INL_declared_not_inlined = 0 x02,DW_INL_declared_inlined = 0 x03 } ; enum ArrayDimensionOrdering { DW_ORD_row_major = 0 x00,DW_ORD_col_major = 0 x01 } ; enum DiscriminantList { DW_DSC_label = 0 x00,DW_DSC_range = 0 x01 } ; enum LineNumberOps { DW_LNS_extended_op = 0 x00,DW_LNS_copy = 0 x01,DW_LNS_advance_pc = 0 x02,DW_LNS_advance_line = 0 x03,DW_LNS_set_file = 0 x04,DW_LNS_set_column = 0 x05,DW_LNS_negate_stmt = 0 x06,DW_LNS_set_basic_block = 0 x07,DW_LNS_const_add_pc = 0 x08,DW_LNS_fixed_advance_pc = 0 x09,DW_LNS_set_prologue_end = 0 x0a,DW_LNS_set_epilogue_begin = 0 x0b,DW_LNS_set_isa = 0 x0c } ; enum LineNumberExtendedOps { DW_LNE_end_sequence = 0 x01,DW_LNE_set_address = 0 x02,DW_LNE_define_file = 0 x03,DW_LNE_set_discriminator = 0 x04,DW_LNE_lo_user = 0 x80,DW_LNE_hi_user = 0 xff } ; enum MacinfoRecordType { DW_MACINFO_define = 0 x01,DW_MACINFO_undef = 0 x02,DW_MACINFO_start_file = 0 x03,DW_MACINFO_end_file = 0 x04,DW_MACINFO_vendor_ext = 0 xff } ; enum CallFrameInfo { DW_CFA_extended = 0 x00,DW_CFA_nop = 0 x00,DW_CFA_advance_loc = 0 x40,DW_CFA_offset = 0 x80,DW_CFA_restore = 0 xc0,DW_CFA_set_loc = 0 x01,DW_CFA_advance_loc1 = 0 x02,DW_CFA_advance_loc2 = 0 x03,DW_CFA_advance_loc4 = 0 x04,DW_CFA_offset_extended = 0 x05,DW_CFA_restore_extended = 0 x06,DW_CFA_undefined = 0 x07,DW_CFA_same_value = 0 x08,DW_CFA_register = 0 x09,DW_CFA_remember_state = 0 x0a,DW_CFA_restore_state = 0 x0b,DW_CFA_def_cfa = 0 x0c,DW_CFA_def_cfa_register = 0 x0d,DW_CFA_def_cfa_offset = 0 x0e,DW_CFA_def_cfa_expression = 0 x0f,DW_CFA_expression = 0 x10,DW_CFA_offset_extended_sf = 0 x11,DW_CFA_def_cfa_sf = 0 x12,DW_CFA_def_cfa_offset_sf = 0 x13,DW_CFA_val_offset = 0 x14,DW_CFA_val_offset_sf = 0 x15,DW_CFA_val_expression = 0 x16,DW_CFA_MIPS_advance_loc8 = 0 x1d,DW_CFA_GNU_window_save = 0 x2d,DW_CFA_GNU_args_size = 0 x2e,DW_CFA_lo_user = 0 x1c,DW_CFA_hi_user = 0 x3f } ; enum Constants { DW_CHILDREN_no = 0 x00,DW_CHILDREN_yes = 0 x01,DW_EH_PE_absptr = 0 x00,DW_EH_PE_omit = 0 xff,DW_EH_PE_uleb128 = 0 x01,DW_EH_PE_udata2 = 0 x02,DW_EH_PE_udata4 = 0 x03,DW_EH_PE_udata8 = 0 x04,DW_EH_PE_sleb128 = 0 x09,DW_EH_PE_sdata2 = 0 x0A,DW_EH_PE_sdata4 = 0 x0B,DW_EH_PE_sdata8 = 0 x0C,DW_EH_PE_signed = 0 x08,DW_EH_PE_pcrel = 0 x10,DW_EH_PE_textrel = 0 x20,DW_EH_PE_datarel = 0 x30,DW_EH_PE_funcrel = 0 x40,DW_EH_PE_aligned = 0 x50,DW_EH_PE_indirect = 0 x80 } ; enum LocationListEntry : unsigned char { DW_LLE_end_of_list_entry,DW_LLE_base_address_selection_entry,DW_LLE_start_end_entry,DW_LLE_start_length_entry,DW_LLE_offset_pair_entry } ; enum ApplePropertyAttributes { DW_APPLE_PROPERTY_readonly = 0 x01,DW_APPLE_PROPERTY_getter = 0 x02,DW_APPLE_PROPERTY_assign = 0 x04,DW_APPLE_PROPERTY_readwrite = 0 x08,DW_APPLE_PROPERTY_retain = 0 x10,DW_APPLE_PROPERTY_copy = 0 x20,DW_APPLE_PROPERTY_nonatomic = 0 x40,DW_APPLE_PROPERTY_setter = 0 x80,DW_APPLE_PROPERTY_atomic = 0 x100,DW_APPLE_PROPERTY_weak = 0 x200,DW_APPLE_PROPERTY_strong = 0 x400,DW_APPLE_PROPERTY_unsafe_unretained = 0 x800 } ; enum AcceleratorTable { DW_ATOM_null = 0 u,DW_ATOM_die_offset = 1 u,DW_ATOM_cu_offset = 2 u,DW_ATOM_die_tag = 3 u,DW_ATOM_type_flags = 4 u,DW_FLAG_type_implementation = 2 u,DW_hash_function_djb = 0 u } ; enum GDBIndexEntryKind { GIEK_NONE,GIEK_TYPE,GIEK_VARIABLE,GIEK_FUNCTION,GIEK_OTHER,GIEK_UNUSED5,GIEK_UNUSED6,GIEK_UNUSED7 } ; enum GDBIndexEntryLinkage { GIEL_EXTERNAL,GIEL_STATIC } ; const char*)",
    "insertText": "TagString(unsigned Tag)"
  },
  {
    "label": "ChildrenString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "ChildrenString(unsigned Children)"
  },
  {
    "label": "AttributeString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "AttributeString(unsigned Attribute)"
  },
  {
    "label": "FormEncodingString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "FormEncodingString(unsigned Encoding)"
  },
  {
    "label": "OperationEncodingString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "OperationEncodingString(unsigned Encoding)"
  },
  {
    "label": "AttributeEncodingString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "AttributeEncodingString(unsigned Encoding)"
  },
  {
    "label": "DecimalSignString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "DecimalSignString(unsigned Sign)"
  },
  {
    "label": "EndianityString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "EndianityString(unsigned Endian)"
  },
  {
    "label": "AccessibilityString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "AccessibilityString(unsigned Access)"
  },
  {
    "label": "VisibilityString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "VisibilityString(unsigned Visibility)"
  },
  {
    "label": "VirtualityString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "VirtualityString(unsigned Virtuality)"
  },
  {
    "label": "LanguageString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "LanguageString(unsigned Language)"
  },
  {
    "label": "CaseString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "CaseString(unsigned Case)"
  },
  {
    "label": "ConventionString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "ConventionString(unsigned Convention)"
  },
  {
    "label": "InlineCodeString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "InlineCodeString(unsigned Code)"
  },
  {
    "label": "ArrayOrderString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "ArrayOrderString(unsigned Order)"
  },
  {
    "label": "DiscriminantString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "DiscriminantString(unsigned Discriminant)"
  },
  {
    "label": "LNStandardString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "LNStandardString(unsigned Standard)"
  },
  {
    "label": "LNExtendedString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "LNExtendedString(unsigned Encoding)"
  },
  {
    "label": "MacinfoString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "MacinfoString(unsigned Encoding)"
  },
  {
    "label": "CallFrameString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "CallFrameString(unsigned Encoding)"
  },
  {
    "label": "ApplePropertyString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "ApplePropertyString(unsigned)"
  },
  {
    "label": "AtomTypeString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "AtomTypeString(unsigned Atom)"
  },
  {
    "label": "GDBIndexEntryKindString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GDBIndexEntryKindString(GDBIndexEntryKind Kind)"
  },
  {
    "label": "GDBIndexEntryLinkageString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GDBIndexEntryLinkageString(GDBIndexEntryLinkage Linkage)"
  },
  {
    "label": "getTag()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getTag(StringRef TagString)"
  },
  {
    "label": "getOperationEncoding()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getOperationEncoding(StringRef OperationEncodingString)"
  },
  {
    "label": "getVirtuality()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getVirtuality(StringRef VirtualityString)"
  },
  {
    "label": "getLanguage()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getLanguage(StringRef LanguageString)"
  },
  {
    "label": "getAttributeEncoding()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getAttributeEncoding(StringRef EncodingString)"
  },
  {
    "label": "AttributeValueString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "AttributeValueString(uint16_t Attr, unsigned Val)"
  },
  {
    "label": "PubIndexEntryDescriptor()",
    "kind": "Method",
    "detail": "Function (struct PubIndexEntryDescriptor { GDBIndexEntryKind Kind ; GDBIndexEntryLinkage Linkage ;)",
    "insertText": "PubIndexEntryDescriptor(GDBIndexEntryKind Kind, GDBIndexEntryLinkage Linkage) : Kind(Kind), Linkage(Linkage)"
  },
  {
    "label": "PubIndexEntryDescriptor()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "PubIndexEntryDescriptor(GDBIndexEntryKind Kind) : Kind(Kind), Linkage(GIEL_EXTERNAL)"
  },
  {
    "label": "PubIndexEntryDescriptor()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "PubIndexEntryDescriptor(uint8_t Value) : Kind(static_cast<GDBIndexEntryKind>((Value & KIND_MASK) >> KIND_OFFSET)), Linkage(static_cast<GDBIndexEntryLinkage>((Value & LINKAGE_MASK) >> LINKAGE_OFFSET))"
  },
  {
    "label": "toBits()",
    "kind": "Method",
    "detail": "Function (} uint8_t)",
    "insertText": "toBits()"
  }
]