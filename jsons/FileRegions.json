[
  {
    "label": "FCbFieldView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbFieldView"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFileRegion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFileRegion"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FFileRegion()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" HAL / Platform . h \" # include \" PixelFormat . h \" class FCbFieldView ; class FCbWriter ; enum class EFileRegionType : uint8 { None = 0,BC1 = 2,BC2 = 5,BC3 = 6,BC4 = 3,BC5 = 7 } ; struct FFileRegion { const TCHAR* RegionsFileExtension ; uint64 Offset ; uint64 Length ; EFileRegionType Type ;)",
    "insertText": "FFileRegion() : Offset(0) , Length(0) , Type(EFileRegionType::None)"
  },
  {
    "label": "FFileRegion()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FFileRegion(uint64 InOffset, uint64 InLength, EFileRegionType InType) : Offset(InOffset) , Length(InLength) , Type(InType)"
  },
  {
    "label": "AccumulateFileRegions()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AccumulateFileRegions(TArray<FFileRegion>& InOutRegions, int64 EntryOffset, int64 PayloadOffset, int64 EndOffset, TArrayView<const FFileRegion> InnerFileRegions)"
  },
  {
    "label": "SerializeFileRegions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeFileRegions(class FArchive& Ar, TArray<FFileRegion>& Regions)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "operator(FCbWriter& Writer, const FFileRegion& Region)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Obj, FFileRegion& OutRegion)"
  },
  {
    "label": "SelectType()",
    "kind": "Method",
    "detail": "Function (EFileRegionType)",
    "insertText": "SelectType(EPixelFormat Format)"
  }
]