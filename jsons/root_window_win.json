[
  {
    "label": "RootWindowWin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RootWindowWin"
  },
  {
    "label": "RootWindowWin()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_TESTS_CEFCLIENT_BROWSER_ROOT_WINDOW_WIN_H_ # define CEF_TESTS_CEFCLIENT_BROWSER_ROOT_WINDOW_WIN_H_ # pragma once # include<windows . h> # include<commdlg . h> # include<string> # include \" include / base / cef_scoped_ptr . h \" # include \" tests / cefclient / browser / browser_window . h \" # include \" tests / cefclient / browser / root_window . h \" namespace client { class RootWindowWin : public RootWindow,public BrowserWindow::Delegate { public :)",
    "insertText": "RootWindowWin()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(RootWindow::Delegate* delegate, const RootWindowConfig& config, const CefBrowserSettings& settings)"
  },
  {
    "label": "InitAsPopup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAsPopup(RootWindow::Delegate* delegate, bool with_controls, bool with_osr, const CefPopupFeatures& popupFeatures, CefWindowInfo& windowInfo, CefRefPtr<CefClient>& client, CefBrowserSettings& settings)"
  },
  {
    "label": "Show()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Show(ShowMode mode)"
  },
  {
    "label": "Hide()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Hide()"
  },
  {
    "label": "SetBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBounds(int x, int y, size_t width, size_t height)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close(bool force)"
  },
  {
    "label": "SetDeviceScaleFactor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDeviceScaleFactor(float device_scale_factor)"
  },
  {
    "label": "GetDeviceScaleFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDeviceScaleFactor()"
  },
  {
    "label": "GetBrowser()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefBrowser>)",
    "insertText": "GetBrowser()"
  },
  {
    "label": "GetWindowHandle()",
    "kind": "Method",
    "detail": "Function (ClientWindowHandle)",
    "insertText": "GetWindowHandle()"
  },
  {
    "label": "WithWindowlessRendering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WithWindowlessRendering()"
  },
  {
    "label": "WithExtension()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WithExtension()"
  },
  {
    "label": "CreateBrowserWindow()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CreateBrowserWindow(const std::string& startup_url)"
  },
  {
    "label": "CreateRootWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRootWindow(const CefBrowserSettings& settings, bool initially_hidden)"
  },
  {
    "label": "RegisterRootClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterRootClass(HINSTANCE hInstance, const std::wstring& window_class, HBRUSH background_brush)"
  },
  {
    "label": "EditWndProc()",
    "kind": "Method",
    "detail": "Function (LRESULT CALLBACK)",
    "insertText": "EditWndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)"
  },
  {
    "label": "FindWndProc()",
    "kind": "Method",
    "detail": "Function (LRESULT CALLBACK)",
    "insertText": "FindWndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)"
  },
  {
    "label": "RootWndProc()",
    "kind": "Method",
    "detail": "Function (LRESULT CALLBACK)",
    "insertText": "RootWndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPaint()"
  },
  {
    "label": "OnFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFocus()"
  },
  {
    "label": "OnActivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActivate(bool active)"
  },
  {
    "label": "OnSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSize(bool minimized)"
  },
  {
    "label": "OnMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMove()"
  },
  {
    "label": "OnDpiChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDpiChanged(WPARAM wParam, LPARAM lParam)"
  },
  {
    "label": "OnEraseBkgnd()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnEraseBkgnd()"
  },
  {
    "label": "OnCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCommand(UINT id)"
  },
  {
    "label": "OnFind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFind()"
  },
  {
    "label": "OnFindEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFindEvent()"
  },
  {
    "label": "OnAbout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAbout()"
  },
  {
    "label": "OnNCCreate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNCCreate(LPCREATESTRUCT lpCreateStruct)"
  },
  {
    "label": "OnCreate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreate(LPCREATESTRUCT lpCreateStruct)"
  },
  {
    "label": "OnClose()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnClose()"
  },
  {
    "label": "OnDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDestroyed()"
  },
  {
    "label": "OnBrowserCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBrowserCreated(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "OnBrowserWindowDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBrowserWindowDestroyed()"
  },
  {
    "label": "OnSetAddress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetAddress(const std::string& url)"
  },
  {
    "label": "OnSetTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetTitle(const std::string& title)"
  },
  {
    "label": "OnSetFullscreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetFullscreen(bool fullscreen)"
  },
  {
    "label": "OnAutoResize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAutoResize(const CefSize& new_size)"
  },
  {
    "label": "OnSetLoadingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetLoadingState(bool isLoading, bool canGoBack, bool canGoForward)"
  },
  {
    "label": "OnSetDraggableRegions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetDraggableRegions(const std::vector<CefDraggableRegion>& regions)"
  },
  {
    "label": "NotifyDestroyedIfDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyDestroyedIfDone()"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (bool with_controls_ ; bool always_on_top_ ; bool with_osr_ ; bool with_extension_ ; bool is_popup_ ; RECT start_rect_ ; scoped_ptr<BrowserWindow> browser_window_ ; CefBrowserSettings browser_settings_ ; bool initialized_ ; HWND hwnd_ ; HRGN draggable_region_ ; HFONT font_ ; int font_height_ ; HWND back_hwnd_ ; HWND forward_hwnd_ ; HWND reload_hwnd_ ; HWND stop_hwnd_ ; HWND edit_hwnd_ ; WNDPROC edit_wndproc_old_ ; HWND find_hwnd_ ; UINT find_message_id_ ; WNDPROC find_wndproc_old_ ; FINDREPLACE find_state_ ; WCHAR find_buff_ [ 8 0 ] ; std::wstring find_what_last_ ; bool find_next_ ; bool find_match_case_last_ ; bool window_destroyed_ ; bool browser_destroyed_ ; bool called_enable_non_client_dpi_scaling_ ;)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(RootWindowWin)"
  }
]