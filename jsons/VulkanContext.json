[
  {
    "label": "FVulkanCommandBufferManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandBufferManager"
  },
  {
    "label": "FVulkanDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDevice"
  },
  {
    "label": "FVulkanDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDynamicRHI"
  },
  {
    "label": "FVulkanOcclusionQueryPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanOcclusionQueryPool"
  },
  {
    "label": "FVulkanPendingGfxState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanPendingGfxState"
  },
  {
    "label": "FVulkanPendingComputeState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanPendingComputeState"
  },
  {
    "label": "FVulkanQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanQueue"
  },
  {
    "label": "FVulkanSwapChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanSwapChain"
  },
  {
    "label": "FVulkanCommandListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandListContext"
  },
  {
    "label": "ShaderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderType"
  },
  {
    "label": "FVulkanDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDevice"
  },
  {
    "label": "FVulkanDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDynamicRHI"
  },
  {
    "label": "FVulkanCommandContextContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanCommandContextContainer"
  },
  {
    "label": "FVulkanCommandListContextImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandListContextImmediate"
  },
  {
    "label": "FVulkanCommandContextContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanCommandContextContainer"
  },
  {
    "label": "FVulkanDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDevice"
  },
  {
    "label": "FVulkanContextArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanContextArray"
  },
  {
    "label": "FVulkanCommandListContext()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanCommandListContext(FVulkanDynamicRHI* InRHI, FVulkanDevice* InDevice, FVulkanQueue* InQueue, FVulkanCommandListContext* InImmediate)"
  },
  {
    "label": "SetResourcesFromTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResourcesFromTables(const ShaderType* RESTRICT)"
  },
  {
    "label": "CommitGraphicsResourceTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitGraphicsResourceTables()"
  },
  {
    "label": "CommitComputeResourceTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitComputeResourceTables()"
  },
  {
    "label": "RHISetShaderTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetShaderTexture(FRHIGraphicsShader* Shader, uint32 TextureIndex, FRHITexture* NewTexture)"
  },
  {
    "label": "RHISetShaderTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetShaderTexture(FRHIComputeShader* PixelShader, uint32 TextureIndex, FRHITexture* NewTexture)"
  },
  {
    "label": "RHISetShaderSampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetShaderSampler(FRHIComputeShader* ComputeShader, uint32 SamplerIndex, FRHISamplerState* NewState)"
  },
  {
    "label": "RHISetShaderSampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetShaderSampler(FRHIGraphicsShader* Shader, uint32 SamplerIndex, FRHISamplerState* NewState)"
  },
  {
    "label": "RHISetUAVParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetUAVParameter(FRHIPixelShader* PixelShader, uint32 UAVIndex, FRHIUnorderedAccessView* UAV)"
  },
  {
    "label": "RHISetUAVParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetUAVParameter(FRHIComputeShader* ComputeShader, uint32 UAVIndex, FRHIUnorderedAccessView* UAV)"
  },
  {
    "label": "RHISetUAVParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetUAVParameter(FRHIComputeShader* ComputeShader, uint32 UAVIndex, FRHIUnorderedAccessView* UAV, uint32 InitialCount)"
  },
  {
    "label": "RHISetShaderResourceViewParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetShaderResourceViewParameter(FRHIGraphicsShader* Shader, uint32 SamplerIndex, FRHIShaderResourceView* SRV)"
  },
  {
    "label": "RHISetShaderResourceViewParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetShaderResourceViewParameter(FRHIComputeShader* ComputeShader, uint32 SamplerIndex, FRHIShaderResourceView* SRV)"
  },
  {
    "label": "RHISetShaderUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetShaderUniformBuffer(FRHIGraphicsShader* Shader, uint32 BufferIndex, FRHIUniformBuffer* Buffer)"
  },
  {
    "label": "RHISetShaderUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetShaderUniformBuffer(FRHIComputeShader* ComputeShader, uint32 BufferIndex, FRHIUniformBuffer* Buffer)"
  },
  {
    "label": "RHISetShaderParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetShaderParameter(FRHIGraphicsShader* Shader, uint32 BufferIndex, uint32 BaseIndex, uint32 NumBytes, const void* NewValue)"
  },
  {
    "label": "RHISetShaderParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetShaderParameter(FRHIComputeShader* ComputeShader, uint32 BufferIndex, uint32 BaseIndex, uint32 NumBytes, const void* NewValue)"
  },
  {
    "label": "WriteBeginTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteBeginTimestamp(FVulkanCmdBuffer* CmdBuffer)"
  },
  {
    "label": "WriteEndTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteEndTimestamp(FVulkanCmdBuffer* CmdBuffer)"
  },
  {
    "label": "ReadAndCalculateGPUFrameTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadAndCalculateGPUFrameTime()"
  },
  {
    "label": "EndRenderQueryInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndRenderQueryInternal(FVulkanCmdBuffer* CmdBuffer, FVulkanRenderQuery* Query)"
  },
  {
    "label": "ReleasePendingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleasePendingState()"
  },
  {
    "label": "BeginOcclusionQueryBatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginOcclusionQueryBatch(FVulkanCmdBuffer* CmdBuffer, uint32 NumQueriesInBatch)"
  },
  {
    "label": "EndOcclusionQueryBatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndOcclusionQueryBatch(FVulkanCmdBuffer* CmdBuffer)"
  },
  {
    "label": "PrepareForCPURead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareForCPURead()"
  },
  {
    "label": "RequestSubmitCurrentCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSubmitCurrentCommands()"
  },
  {
    "label": "InternalClearMRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalClearMRT(FVulkanCmdBuffer* CmdBuffer, bool bClearColor, int32 NumClearColors, const FLinearColor* ColorArray, bool bClearDepth, float Depth, bool bClearStencil, uint32 Stencil)"
  },
  {
    "label": "RHIClearMRT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIClearMRT(bool bClearColor, int32 NumClearColors, const FLinearColor* ColorArray, bool bClearDepth, float Depth, bool bClearStencil, uint32 Stencil)"
  },
  {
    "label": "InternalSubmitActiveCmdBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalSubmitActiveCmdBuffer()"
  },
  {
    "label": "ApplyStaticUniformBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyStaticUniformBuffers(TRHIShader* Shader)"
  },
  {
    "label": "FVulkanCommandListContextImmediate()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanCommandListContextImmediate(FVulkanDynamicRHI* InRHI, FVulkanDevice* InDevice, FVulkanQueue* InQueue)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "new(size_t Size)"
  },
  {
    "label": "delete()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "delete(void* RawMemory)"
  }
]