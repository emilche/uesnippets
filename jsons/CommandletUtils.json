[
  {
    "label": "FPackageTrailer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageTrailer"
  },
  {
    "label": "FPullRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPullRequest"
  },
  {
    "label": "FIoHash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIoHash"
  },
  {
    "label": "EFindPackageFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EFindPackageFlags"
  },
  {
    "label": "FWorkQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkQueue"
  },
  {
    "label": "FindPackages()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "FindPackages(EFindPackageFlags Flags)"
  },
  {
    "label": "FindPackagesInDirectory()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "FindPackagesInDirectory(const FString& DirectoryToSearch)"
  },
  {
    "label": "DiscoverPackages()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "DiscoverPackages(const FString& CmdlineParams, EFindPackageFlags Flags)"
  },
  {
    "label": "FindVirtualizedPayloads()",
    "kind": "Method",
    "detail": "Function (TArray<FIoHash>)",
    "insertText": "FindVirtualizedPayloads(const TArray<FString>& PackageNames)"
  },
  {
    "label": "FindVirtualizedPayloadsAndTrailers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindVirtualizedPayloadsAndTrailers(const TArray<FString>& PackagePaths, TMap<FString, UE::FPackageTrailer>& OutPackages, TSet<FIoHash>& OutPayloads)"
  },
  {
    "label": "ToRequestArray()",
    "kind": "Method",
    "detail": "Function (TArray<FPullRequest>)",
    "insertText": "ToRequestArray(TConstArrayView<FIoHash> IdentifierArray)"
  },
  {
    "label": "GetJob()",
    "kind": "Method",
    "detail": "Function (FJob)",
    "insertText": "GetJob()"
  },
  {
    "label": "CreateJobs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateJobs(int32 JobSize)"
  }
]