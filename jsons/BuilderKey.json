[
  {
    "label": "FBuilderKeys",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuilderKeys"
  },
  {
    "label": "FBuilderKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuilderKey"
  },
  {
    "label": "FBuilderKey()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / NameTypes . h \" namespace UE::DisplayBuilders { class FBuilderKeys ; class FBuilderKey { public :)",
    "insertText": "FBuilderKey()"
  },
  {
    "label": "ToName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "ToName()"
  },
  {
    "label": "GetKeyWithSuffix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetKeyWithSuffix(const FName Suffix)"
  },
  {
    "label": "IsNone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNone()"
  },
  {
    "label": "FBuilderKey()",
    "kind": "Method",
    "detail": "Function (private : FBuilderKeys ; const FName Key ;)",
    "insertText": "FBuilderKey(const FName InKey ) : Key( InKey)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} } ; class FBuilderKeys { public : const FBuilderKeys&)",
    "insertText": "Get()"
  },
  {
    "label": "PlaceActors()",
    "kind": "Method",
    "detail": "Function (const FBuilderKey&)",
    "insertText": "PlaceActors()"
  },
  {
    "label": "None()",
    "kind": "Method",
    "detail": "Function (const FBuilderKey&)",
    "insertText": "None()"
  },
  {
    "label": "FBuilderKeys()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FBuilderKeys()"
  }
]