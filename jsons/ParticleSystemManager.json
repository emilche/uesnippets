[
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UParticleSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystemComponent"
  },
  {
    "label": "FParticleSystemWorldManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleSystemWorldManager"
  },
  {
    "label": "FPSCTickData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPSCTickData"
  },
  {
    "label": "FParticleSystemWorldManagerTickFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleSystemWorldManagerTickFunction"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FTickList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTickList"
  },
  {
    "label": "FPSCTickData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / EngineTypes . h \" # include \" Engine / EngineBaseTypes . h \" # include \" Engine / World . h \" # include \" ParticleSystemManager . generated . h \" class UActorComponent ; class UParticleSystemComponent ; class FParticleSystemWorldManager ; # define PSC_MAN_USE_STATIC_TICK_LISTS 1 # define PSC_MAN_TG_WAIT_FOR_ASYNC 1 struct FPSCTickData {)",
    "insertText": "FPSCTickData()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<UActorComponent> PrereqComponent ; # if PSC_MAN_USE_STATIC_TICK_LISTS int32 TickListHandle ; # endif TEnumAsByte<ETickingGroup> TickGroup ; uint8 bCanTickConcurrent : 1 ; uint8 bPendingUnregister : 1 ; uint8 bPendingReregister : 1 ; } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API virtual void ExecuteTick(float DeltaTime, ELevelTick TickType, ENamedThreads::Type CurrentThread, const FGraphEventRef& MyCompletionGraphEvent)"
  },
  {
    "label": "DiagnosticMessage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DiagnosticMessage()"
  },
  {
    "label": "DiagnosticContext()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "DiagnosticContext(bool bDetailed)"
  },
  {
    "label": "MaxTickGroup()",
    "kind": "Method",
    "detail": "Function (FParticleSystemWorldManager* Owner ; } ; template<> struct TStructOpsTypeTraits<FParticleSystemWorldManagerTickFunction> : public TStructOpsTypeTraitsBase2<FParticleSystemWorldManagerTickFunction> { enum { WithCopy = false } ; } ; # define INITIAL_PSC_MANAGER_ASYNC_BATCH_SIZE 8 typedef TArray<int32,TInlineAllocator<INITIAL_PSC_MANAGER_ASYNC_BATCH_SIZE>> FPSCManagerAsyncTickBatch ; class FParticleSystemWorldManager : public FGCObject { private : const int32)",
    "insertText": "MaxTickGroup(int32)"
  },
  {
    "label": "OnWorldInit()",
    "kind": "Method",
    "detail": "Function (TMap<UWorld*,FParticleSystemWorldManager*> WorldManagers ; void)",
    "insertText": "OnWorldInit(UWorld* World, const UWorld::InitializationValues IVS)"
  },
  {
    "label": "OnWorldCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldCleanup(UWorld* World, bool bSessionEnded, bool bCleanupResources)"
  },
  {
    "label": "OnPreWorldFinishDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreWorldFinishDestroy(UWorld* World)"
  },
  {
    "label": "OnWorldBeginTearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldBeginTearDown(UWorld* World)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef TFunction<)",
    "insertText": "void(UParticleSystemComponent*, FPSCTickData&, int32)"
  },
  {
    "label": "FTickList()",
    "kind": "Method",
    "detail": "Function (struct FTickList {)",
    "insertText": "FTickList(FParticleSystemWorldManager* InOwner) :Owner(InOwner)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} FParticleSystemWorldManager* Owner ; TArray<int32> TickList ; void)",
    "insertText": "Add(int32 Handle)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(int32 Handle)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} int32&)",
    "insertText": "operator(const int32 Index)"
  },
  {
    "label": "OnShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShutdown()"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (FParticleSystemWorldManager** Ret = WorldManagers .)",
    "insertText": "Find(World)"
  },
  {
    "label": "FParticleSystemWorldManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FParticleSystemWorldManager()"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "RegisterComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterComponent(UParticleSystemComponent* PSC)"
  },
  {
    "label": "UnregisterComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterComponent(UParticleSystemComponent* PSC)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dump()"
  },
  {
    "label": "HandlePostGarbageCollect()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "HandlePostGarbageCollect()"
  },
  {
    "label": "BuildTickLists()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BuildTickLists(int32 StartIndex, ETickingGroup CurrTickGroup)"
  },
  {
    "label": "ProcessTickList()",
    "kind": "Method",
    "detail": "Function (template<bool bAsync> void)",
    "insertText": "ProcessTickList(float DeltaTime, ELevelTick TickType, ETickingGroup TickGroup, TArray<FTickList>& TickLists, const FGraphEventRef& TickGroupCompletionGraphEvent)"
  },
  {
    "label": "AddPSC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPSC(UParticleSystemComponent* PSC)"
  },
  {
    "label": "RemovePSC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePSC(int32 PSCIndex)"
  },
  {
    "label": "HandleManagerEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleManagerEnabled()"
  },
  {
    "label": "ClearPendingUnregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPendingUnregister()"
  }
]