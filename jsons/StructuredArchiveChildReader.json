[
  {
    "label": "FStructuredArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructuredArchive"
  },
  {
    "label": "FStructuredArchiveFormatter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructuredArchiveFormatter"
  },
  {
    "label": "FStructuredArchiveChildReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructuredArchiveChildReader"
  },
  {
    "label": "FStructuredArchiveChildReader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Misc / Build . h \" # include \" Misc / Optional . h \" # include \" Serialization / StructuredArchive . h \" # include \" Serialization / StructuredArchiveSlots . h \" class FStructuredArchive ; class FStructuredArchiveFormatter ; class FStructuredArchiveChildReader { public :)",
    "insertText": "FStructuredArchiveChildReader(FStructuredArchiveSlot InSlot)"
  },
  {
    "label": "FStructuredArchiveChildReader()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FStructuredArchiveChildReader()"
  },
  {
    "label": "FStructuredArchiveChildReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStructuredArchiveChildReader(FStructuredArchiveChildReader&&)"
  },
  {
    "label": "FStructuredArchiveChildReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStructuredArchiveChildReader(const FStructuredArchiveChildReader&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FStructuredArchiveChildReader&)",
    "insertText": "operator(FStructuredArchiveChildReader&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FStructuredArchiveChildReader&)",
    "insertText": "operator(const FStructuredArchiveChildReader&)"
  },
  {
    "label": "FStructuredArchiveChildReader()",
    "kind": "Method",
    "detail": "Function (} private : FStructuredArchiveFormatter* OwnedFormatter ; FStructuredArchive* StructuredArchive ; TOptional<FStructuredArchiveSlot> Root ; } ; # if ! WITH_TEXT_ARCHIVE_SUPPORT)",
    "insertText": "FStructuredArchiveChildReader(FStructuredArchiveSlot InSlot) : OwnedFormatter(nullptr) , StructuredArchive(nullptr)"
  },
  {
    "label": "FStructuredArchive()",
    "kind": "Method",
    "detail": "Function (StructuredArchive = new)",
    "insertText": "FStructuredArchive(InSlot.StructuredArchive.Formatter)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (Root .)",
    "insertText": "Emplace(StructuredArchive->Open())"
  }
]