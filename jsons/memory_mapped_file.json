[
  {
    "label": "FilePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FilePath"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "Access",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Access"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FILES_MEMORY_MAPPED_FILE_H_ # define BASE_FILES_MEMORY_MAPPED_FILE_H_ # include<stddef . h> # include<stdint . h> # include<utility> # include \" base / base_export . h \" # include \" base / files / file . h \" # include \" base / memory / raw_ptr . h \" # include \" build / build_config . h \" # if)",
    "insertText": "BUILDFLAG(IS_WIN)"
  },
  {
    "label": "MemoryMappedFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MemoryMappedFile()"
  },
  {
    "label": "MemoryMappedFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MemoryMappedFile(const MemoryMappedFile&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MemoryMappedFile&)",
    "insertText": "operator(const MemoryMappedFile&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (struct BASE_EXPORT Region { const Region kWholeFile ; bool)",
    "insertText": "operator(const Region& other)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (int64_t offset ; size_t size ; } ; [ [ nodiscard ] ] bool)",
    "insertText": "Initialize(const FilePath& file_name, Access access)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] bool)",
    "insertText": "Initialize(const FilePath& file_name)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} [ [ nodiscard ] ] bool)",
    "insertText": "Initialize(File file, Access access)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] bool)",
    "insertText": "Initialize(File file)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} [ [ nodiscard ] ] bool)",
    "insertText": "Initialize(File file, const Region& region, Access access)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] bool)",
    "insertText": "Initialize(File file, const Region& region)"
  },
  {
    "label": "data()",
    "kind": "Method",
    "detail": "Function (} const uint8_t*)",
    "insertText": "data()"
  },
  {
    "label": "CalculateVMAlignedBoundaries()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CalculateVMAlignedBoundaries(int64_t start, size_t size, int64_t* aligned_start, size_t* aligned_size, int32_t* offset)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_WIN) bool MapImageToMemory(Access access)"
  },
  {
    "label": "MapFileRegionToMemory()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "MapFileRegionToMemory(const Region& region, Access access)"
  },
  {
    "label": "CloseHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseHandles()"
  }
]