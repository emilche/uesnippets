[
  {
    "label": "FTranslationEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTranslationEditor"
  },
  {
    "label": "ULocalizationTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalizationTarget"
  },
  {
    "label": "FTranslationEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTranslationEditorModule"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # if WITH_EDITOR # include \" Toolkits / AssetEditorToolkit . h \" # endif class FTranslationEditor ; class ULocalizationTarget ; class FTranslationEditorModule : public IModuleInterface # if WITH_EDITOR,public IHasMenuExtensibility # endif { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "OpenTranslationPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenTranslationPicker()"
  },
  {
    "label": "CreateTranslationEditor()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR TSharedRef<FTranslationEditor>)",
    "insertText": "CreateTranslationEditor(const FString& ManifestFile, const FString& NativeArchiveFile, const FString& ArchiveFileToEdit, bool& OutLoadedSuccessfully)"
  },
  {
    "label": "CreateTranslationEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTranslationEditor>)",
    "insertText": "CreateTranslationEditor(ULocalizationTarget* const LocalizationTarget, const FString& CultureToEdit, bool& OutLoadedSuccessfully)"
  },
  {
    "label": "GetMenuExtensibilityManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtensibilityManager>)",
    "insertText": "GetMenuExtensibilityManager()"
  }
]