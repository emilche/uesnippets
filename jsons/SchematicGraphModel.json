[
  {
    "label": "SSchematicGraphPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSchematicGraphPanel"
  },
  {
    "label": "ANIMATIONEDITORWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMATIONEDITORWIDGETS_API"
  },
  {
    "label": "FSchematicGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSchematicGraphNode"
  },
  {
    "label": "SCHEMATICGRAPHELEMENT_BODY_BASE()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" SchematicGraphTag . h \" # include \" SchematicGraphNode . h \" # include \" SchematicGraphLink . h \" # include \" Framework / MultiBox / MultiBoxBuilder . h \" class SSchematicGraphPanel ; class FSchematicGraphModel : public TSharedFromThis<FSchematicGraphModel> { public :)",
    "insertText": "SCHEMATICGRAPHELEMENT_BODY_BASE(FSchematicGraphModel) virtual void Reset()"
  },
  {
    "label": "ApplyToPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyToPanel(SSchematicGraphPanel* InPanel)"
  },
  {
    "label": "AddNode()",
    "kind": "Method",
    "detail": "Function (} ; template<NodeType = FSchematicGraphNode> NodeType*)",
    "insertText": "AddNode(bool bNotify = true)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FSchematicGraphNode> NewNode =)",
    "insertText": "MakeShareable(new NodeType)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (NewNode -> Model = this ; Nodes .)",
    "insertText": "Add(NewNode)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (NodeByGuid .)",
    "insertText": "Add(NewNode->GetGuid(), NewNode)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (OnNodeAddedDelegate .)",
    "insertText": "Broadcast(NewNode.Get())"
  },
  {
    "label": "NodeType()",
    "kind": "Method",
    "detail": "Function (} return static_cast<)",
    "insertText": "NodeType(NewNode.Get())"
  },
  {
    "label": "FindNode()",
    "kind": "Method",
    "detail": "Function (} template<NodeType = FSchematicGraphNode> const NodeType*)",
    "insertText": "FindNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "NodeType()",
    "kind": "Method",
    "detail": "Function (const FSchematicGraphModel* ConstThis = this ; return const_cast<)",
    "insertText": "NodeType(ConstThis->FindNode<NodeType>(InNodeGuid))"
  },
  {
    "label": "FindNodeChecked()",
    "kind": "Method",
    "detail": "Function (} template<NodeType = FSchematicGraphNode> const NodeType*)",
    "insertText": "FindNodeChecked(const FGuid& InNodeGuid)"
  },
  {
    "label": "NodeType()",
    "kind": "Method",
    "detail": "Function (const FSchematicGraphModel* ConstThis = this ; return const_cast<)",
    "insertText": "NodeType(ConstThis->FindNodeChecked<NodeType>(InNodeGuid))"
  },
  {
    "label": "RemoveNode()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RemoveNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "SetParentNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParentNode(const FGuid& InChildNodeGuid, const FGuid& InParentNodeGuid, bool bUpdateGroupNode = true)"
  },
  {
    "label": "SetParentNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParentNode(const FSchematicGraphNode* InChildNode, const FSchematicGraphNode* InParentNode, bool bUpdateGroupNode = true)"
  },
  {
    "label": "RemoveFromParentNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveFromParentNode(const FGuid& InChildNodeGuid, bool bUpdateGroupNode = true)"
  },
  {
    "label": "RemoveFromParentNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveFromParentNode(const FSchematicGraphNode* InChildNode, bool bUpdateGroupNode = true)"
  },
  {
    "label": "GetNodes()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FSchematicGraphNode>>&)",
    "insertText": "GetNodes()"
  },
  {
    "label": "GetPositionForNode()",
    "kind": "Method",
    "detail": "Function (FVector2d)",
    "insertText": "GetPositionForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetPositionOffsetForNode()",
    "kind": "Method",
    "detail": "Function (FVector2d)",
    "insertText": "GetPositionOffsetForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "GetPositionOffsetForNode()",
    "kind": "Method",
    "detail": "Function (FVector2d)",
    "insertText": "GetPositionOffsetForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetPositionAnimationEnabledForNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPositionAnimationEnabledForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "GetPositionAnimationEnabledForNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPositionAnimationEnabledForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetSizeForNode()",
    "kind": "Method",
    "detail": "Function (FVector2d)",
    "insertText": "GetSizeForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "GetSizeForNode()",
    "kind": "Method",
    "detail": "Function (FVector2d)",
    "insertText": "GetSizeForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetScaleForNode()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScaleForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "GetScaleForNode()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScaleForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetScaleOffsetForNode()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScaleOffsetForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "GetScaleOffsetForNode()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScaleOffsetForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetMinimumLinkDistanceForNode()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMinimumLinkDistanceForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "GetMinimumLinkDistanceForNode()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMinimumLinkDistanceForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "IsAutoScaleEnabledForNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutoScaleEnabledForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "IsAutoScaleEnabledForNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutoScaleEnabledForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetNumLayersForNode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumLayersForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "GetNumLayersForNode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumLayersForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetColorForNode()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColorForNode(const FGuid& InNodeGuid, int32 InLayerIndex)"
  },
  {
    "label": "GetColorForNode()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColorForNode(const FSchematicGraphNode* InNode, int32 InLayerIndex)"
  },
  {
    "label": "GetBrushForNode()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBrushForNode(const FGuid& InNodeGuid, int32 InLayerIndex)"
  },
  {
    "label": "GetBrushForNode()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBrushForNode(const FSchematicGraphNode* InNode, int32 InLayerIndex)"
  },
  {
    "label": "GetToolTipForNode()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "GetToolTipForNode()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetVisibilityForNode()",
    "kind": "Method",
    "detail": "Function (ESchematicGraphVisibility::Type)",
    "insertText": "GetVisibilityForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "GetVisibilityForNode()",
    "kind": "Method",
    "detail": "Function (ESchematicGraphVisibility::Type)",
    "insertText": "GetVisibilityForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetVisibilityForChildNode()",
    "kind": "Method",
    "detail": "Function (TOptional<ESchematicGraphVisibility::Type>)",
    "insertText": "GetVisibilityForChildNode(const FGuid& InParentNodeGuid, const FGuid& InChildNodeGuid)"
  },
  {
    "label": "GetVisibilityForChildNode()",
    "kind": "Method",
    "detail": "Function (TOptional<ESchematicGraphVisibility::Type>)",
    "insertText": "GetVisibilityForChildNode(const FSchematicGraphNode* InParentNode, const FSchematicGraphNode* InChildNode)"
  },
  {
    "label": "GetPositionForChildNode()",
    "kind": "Method",
    "detail": "Function (TOptional<FVector2d>)",
    "insertText": "GetPositionForChildNode(const FGuid& InParentNodeGuid, const FGuid& InChildNodeGuid)"
  },
  {
    "label": "GetPositionForChildNode()",
    "kind": "Method",
    "detail": "Function (TOptional<FVector2d>)",
    "insertText": "GetPositionForChildNode(const FSchematicGraphNode* InParentNode, const FSchematicGraphNode* InChildNode)"
  },
  {
    "label": "GetScaleForChildNode()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetScaleForChildNode(const FGuid& InParentNodeGuid, const FGuid& InChildNodeGuid)"
  },
  {
    "label": "GetScaleForChildNode()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetScaleForChildNode(const FSchematicGraphNode* InParentNode, const FSchematicGraphNode* InChildNode)"
  },
  {
    "label": "GetInteractivityForChildNode()",
    "kind": "Method",
    "detail": "Function (TOptional<bool>)",
    "insertText": "GetInteractivityForChildNode(const FGuid& InParentNodeGuid, const FGuid& InChildNodeGuid)"
  },
  {
    "label": "GetInteractivityForChildNode()",
    "kind": "Method",
    "detail": "Function (TOptional<bool>)",
    "insertText": "GetInteractivityForChildNode(const FSchematicGraphNode* InParentNode, const FSchematicGraphNode* InChildNode)"
  },
  {
    "label": "IsDragSupportedForNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDragSupportedForNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "IsDragSupportedForNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDragSupportedForNode(const FSchematicGraphNode* InNode)"
  },
  {
    "label": "GetContextMenuForNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetContextMenuForNode(const FSchematicGraphNode* InNode, FMenuBuilder& OutMenu)"
  },
  {
    "label": "GetSelectedNodes()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FSchematicGraphNode>>)",
    "insertText": "GetSelectedNodes()"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "GetBackgroundColorForTag()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetBackgroundColorForTag(const FGuid& InNodeGuid, const FGuid& InTagGuid)"
  },
  {
    "label": "GetBackgroundColorForTag()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetBackgroundColorForTag(const FSchematicGraphTag* InTag)"
  },
  {
    "label": "GetForegroundColorForTag()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetForegroundColorForTag(const FGuid& InNodeGuid, const FGuid& InTagGuid)"
  },
  {
    "label": "GetForegroundColorForTag()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetForegroundColorForTag(const FSchematicGraphTag* InTag)"
  },
  {
    "label": "GetLabelColorForTag()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetLabelColorForTag(const FGuid& InNodeGuid, const FGuid& InTagGuid)"
  },
  {
    "label": "GetLabelColorForTag()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetLabelColorForTag(const FSchematicGraphTag* InTag)"
  },
  {
    "label": "GetBackgroundBrushForTag()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBackgroundBrushForTag(const FGuid& InNodeGuid, const FGuid& InTagGuid)"
  },
  {
    "label": "GetBackgroundBrushForTag()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBackgroundBrushForTag(const FSchematicGraphTag* InTag)"
  },
  {
    "label": "GetForegroundBrushForTag()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetForegroundBrushForTag(const FGuid& InNodeGuid, const FGuid& InTagGuid)"
  },
  {
    "label": "GetForegroundBrushForTag()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetForegroundBrushForTag(const FSchematicGraphTag* InTag)"
  },
  {
    "label": "GetLabelForTag()",
    "kind": "Method",
    "detail": "Function (const FText)",
    "insertText": "GetLabelForTag(const FGuid& InNodeGuid, const FGuid& InTagGuid)"
  },
  {
    "label": "GetLabelForTag()",
    "kind": "Method",
    "detail": "Function (const FText)",
    "insertText": "GetLabelForTag(const FSchematicGraphTag* InTag)"
  },
  {
    "label": "GetToolTipForTag()",
    "kind": "Method",
    "detail": "Function (const FText)",
    "insertText": "GetToolTipForTag(const FGuid& InNodeGuid, const FGuid& InTagGuid)"
  },
  {
    "label": "GetToolTipForTag()",
    "kind": "Method",
    "detail": "Function (const FText)",
    "insertText": "GetToolTipForTag(const FSchematicGraphTag* InTag)"
  },
  {
    "label": "GetVisibilityForTag()",
    "kind": "Method",
    "detail": "Function (ESchematicGraphVisibility::Type)",
    "insertText": "GetVisibilityForTag(const FGuid& InNodeGuid, const FGuid& InTagGuid)"
  },
  {
    "label": "GetVisibilityForTag()",
    "kind": "Method",
    "detail": "Function (ESchematicGraphVisibility::Type)",
    "insertText": "GetVisibilityForTag(const FSchematicGraphTag* InTag)"
  },
  {
    "label": "AddLink()",
    "kind": "Method",
    "detail": "Function (template<LinkType = FSchematicGraphLink> LinkType*)",
    "insertText": "AddLink(const FGuid& InSourceNodeGuid, const FGuid& InTargetNodeGuid, bool bNotify = true)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FSchematicGraphLink> NewLink =)",
    "insertText": "MakeShareable(new LinkType)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (NewLink -> Model = this ; NewLink -> SourceNodeGuid = InSourceNodeGuid ; NewLink -> TargetNodeGuid = InTargetNodeGuid ; Links .)",
    "insertText": "Add(NewLink)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LinkByGuid .)",
    "insertText": "Add(NewLink->GetGuid(), NewLink)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LinkByHash .)",
    "insertText": "Add(NewLink->GetLinkHash(), NewLink)"
  },
  {
    "label": "FindOrAdd()",
    "kind": "Method",
    "detail": "Function (NodeGuidToLinkGuids .)",
    "insertText": "FindOrAdd(InSourceNodeGuid).Get<0>().Add(NewLink->GetGuid())"
  },
  {
    "label": "FindOrAdd()",
    "kind": "Method",
    "detail": "Function (NodeGuidToLinkGuids .)",
    "insertText": "FindOrAdd(InTargetNodeGuid).Get<1>().Add(NewLink->GetGuid())"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (OnLinkAddedDelegate .)",
    "insertText": "Broadcast(NewLink.Get())"
  },
  {
    "label": "LinkType()",
    "kind": "Method",
    "detail": "Function (} return static_cast<)",
    "insertText": "LinkType(NewLink.Get())"
  },
  {
    "label": "FindLink()",
    "kind": "Method",
    "detail": "Function (} template<LinkType = FSchematicGraphLink> const LinkType*)",
    "insertText": "FindLink(const FGuid& InLinkGuid)"
  },
  {
    "label": "LinkType()",
    "kind": "Method",
    "detail": "Function (const FSchematicGraphModel* ConstThis = this ; return const_cast<)",
    "insertText": "LinkType(ConstThis->FindLink<LinkType>(InLinkGuid))"
  },
  {
    "label": "FindLinkChecked()",
    "kind": "Method",
    "detail": "Function (} template<LinkType = FSchematicGraphLink> const LinkType*)",
    "insertText": "FindLinkChecked(const FGuid& InLinkGuid)"
  },
  {
    "label": "LinkType()",
    "kind": "Method",
    "detail": "Function (const FSchematicGraphModel* ConstThis = this ; return const_cast<)",
    "insertText": "LinkType(ConstThis->FindLinkChecked<LinkType>(InLinkGuid))"
  },
  {
    "label": "FindLink()",
    "kind": "Method",
    "detail": "Function (} template<LinkType = FSchematicGraphLink> const LinkType*)",
    "insertText": "FindLink(const FGuid& InSourceNodeGuid, const FGuid& InTargetNodeGuid)"
  },
  {
    "label": "GetLinkHash()",
    "kind": "Method",
    "detail": "Function (const uint32 LinkHash =)",
    "insertText": "GetLinkHash(InSourceNodeGuid, InTargetNodeGuid)"
  },
  {
    "label": "LinkType()",
    "kind": "Method",
    "detail": "Function (const FSchematicGraphModel* ConstThis = this ; return const_cast<)",
    "insertText": "LinkType(ConstThis->FindLink<LinkType>(InSourceNodeGuid, InTargetNodeGuid))"
  },
  {
    "label": "FindLinkChecked()",
    "kind": "Method",
    "detail": "Function (} template<LinkType = FSchematicGraphLink> const LinkType*)",
    "insertText": "FindLinkChecked(const FGuid& InSourceNodeGuid, const FGuid& InTargetNodeGuid)"
  },
  {
    "label": "LinkType()",
    "kind": "Method",
    "detail": "Function (const FSchematicGraphModel* ConstThis = this ; return const_cast<)",
    "insertText": "LinkType(ConstThis->FindLinkChecked<LinkType>(InSourceNodeGuid, InTargetNodeGuid))"
  },
  {
    "label": "IsLinkedTo()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsLinkedTo(const FGuid& InSourceNodeGuid, const FGuid& InTargetNodeGuid)"
  },
  {
    "label": "FindLinksOnNode()",
    "kind": "Method",
    "detail": "Function (TArray<const FSchematicGraphLink*>)",
    "insertText": "FindLinksOnNode(const FGuid& InNodeGuid)"
  },
  {
    "label": "FindLinksOnSource()",
    "kind": "Method",
    "detail": "Function (TArray<const FSchematicGraphLink*>)",
    "insertText": "FindLinksOnSource(const FGuid& InSourceNodeGuid)"
  },
  {
    "label": "FindLinksOnTarget()",
    "kind": "Method",
    "detail": "Function (TArray<const FSchematicGraphLink*>)",
    "insertText": "FindLinksOnTarget(const FGuid& InTargetNodeGuid)"
  },
  {
    "label": "RemoveLink()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveLink(const FGuid& InLinkGuid)"
  },
  {
    "label": "GetLinks()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FSchematicGraphLink>>&)",
    "insertText": "GetLinks()"
  },
  {
    "label": "GetMinimumForLink()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMinimumForLink(const FSchematicGraphLink* InLink)"
  },
  {
    "label": "GetMaximumForLink()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaximumForLink(const FGuid& InLinkGuid)"
  },
  {
    "label": "GetMaximumForLink()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaximumForLink(const FSchematicGraphLink* InLink)"
  },
  {
    "label": "GetSourceNodeOffsetForLink()",
    "kind": "Method",
    "detail": "Function (FVector2d)",
    "insertText": "GetSourceNodeOffsetForLink(const FGuid& InLinkGuid)"
  },
  {
    "label": "GetSourceNodeOffsetForLink()",
    "kind": "Method",
    "detail": "Function (FVector2d)",
    "insertText": "GetSourceNodeOffsetForLink(const FSchematicGraphLink* InLink)"
  },
  {
    "label": "GetTargetNodeOffsetForLink()",
    "kind": "Method",
    "detail": "Function (FVector2d)",
    "insertText": "GetTargetNodeOffsetForLink(const FGuid& InLinkGuid)"
  },
  {
    "label": "GetTargetNodeOffsetForLink()",
    "kind": "Method",
    "detail": "Function (FVector2d)",
    "insertText": "GetTargetNodeOffsetForLink(const FSchematicGraphLink* InLink)"
  },
  {
    "label": "GetColorForLink()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColorForLink(const FGuid& InLinkGuid)"
  },
  {
    "label": "GetColorForLink()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColorForLink(const FSchematicGraphLink* InLink)"
  },
  {
    "label": "GetThicknessForLink()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetThicknessForLink(const FGuid& InLinkGuid)"
  },
  {
    "label": "GetThicknessForLink()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetThicknessForLink(const FSchematicGraphLink* InLink)"
  },
  {
    "label": "GetBrushForLink()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBrushForLink(const FGuid& InLinkGuid)"
  },
  {
    "label": "GetBrushForLink()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBrushForLink(const FSchematicGraphLink* InLink)"
  },
  {
    "label": "GetToolTipForLink()",
    "kind": "Method",
    "detail": "Function (const FText)",
    "insertText": "GetToolTipForLink(const FGuid& InLinkGuid)"
  },
  {
    "label": "GetToolTipForLink()",
    "kind": "Method",
    "detail": "Function (const FText)",
    "insertText": "GetToolTipForLink(const FSchematicGraphLink* InLink)"
  },
  {
    "label": "GetVisibilityForLink()",
    "kind": "Method",
    "detail": "Function (ESchematicGraphVisibility::Type)",
    "insertText": "GetVisibilityForLink(const FGuid& InLinkGuid)"
  },
  {
    "label": "GetVisibilityForLink()",
    "kind": "Method",
    "detail": "Function (ESchematicGraphVisibility::Type)",
    "insertText": "GetVisibilityForLink(const FSchematicGraphLink* InLink)"
  },
  {
    "label": "IsAutoGroupingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutoGroupingEnabled()"
  },
  {
    "label": "OnNodeAdded()",
    "kind": "Method",
    "detail": "Function (FOnSchematicGraphNodeAdded&)",
    "insertText": "OnNodeAdded()"
  },
  {
    "label": "SetLastExpandedNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastExpandedNode(const FSchematicGraphGroupNode* InGroupNode)"
  },
  {
    "label": "ClearLastExpandedNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLastExpandedNode()"
  },
  {
    "label": "SetLastExpandedNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastExpandedNode(nullptr)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Tick(float InDeltaTime)"
  },
  {
    "label": "FGuid()",
    "kind": "Method",
    "detail": "Function (protected : TArray<TSharedPtr<FSchematicGraphNode>> Nodes ; TMap<FGuid,TSharedPtr<FSchematicGraphNode>> NodeByGuid ; TArray<TSharedPtr<FSchematicGraphLink>> Links ; TMap<FGuid,TSharedPtr<FSchematicGraphLink>> LinkByGuid ; TMap<uint32,TSharedPtr<FSchematicGraphLink>> LinkByHash ; TMap<FGuid,TTuple<TArray<FGuid>,TArray<FGuid>>> NodeGuidToLinkGuids ; FGuid LastExpandedNode =)",
    "insertText": "FGuid()"
  }
]