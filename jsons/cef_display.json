[
  {
    "label": "CefDisplay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefDisplay"
  },
  {
    "label": "GetPrimaryDisplay()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_VIEWS_CEF_DISPLAY_H_ # define CEF_INCLUDE_VIEWS_CEF_DISPLAY_H_ # pragma once # include<vector> # include \" include / cef_base . h \" class CefDisplay : public CefBaseRefCounted { public : CefRefPtr<CefDisplay>)",
    "insertText": "GetPrimaryDisplay()"
  },
  {
    "label": "GetDisplayNearestPoint()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefDisplay>)",
    "insertText": "GetDisplayNearestPoint(const CefPoint& point, bool input_pixel_coords)"
  },
  {
    "label": "GetDisplayMatchingBounds()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefDisplay>)",
    "insertText": "GetDisplayMatchingBounds(const CefRect& bounds, bool input_pixel_coords)"
  },
  {
    "label": "GetDisplayCount()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetDisplayCount()"
  },
  {
    "label": "GetAllDisplays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllDisplays(std::vector<CefRefPtr<CefDisplay>>& displays)"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetID()"
  },
  {
    "label": "GetDeviceScaleFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDeviceScaleFactor()"
  },
  {
    "label": "ConvertPointToPixels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertPointToPixels(CefPoint& point)"
  },
  {
    "label": "ConvertPointFromPixels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertPointFromPixels(CefPoint& point)"
  },
  {
    "label": "GetBounds()",
    "kind": "Method",
    "detail": "Function (CefRect)",
    "insertText": "GetBounds()"
  },
  {
    "label": "GetWorkArea()",
    "kind": "Method",
    "detail": "Function (CefRect)",
    "insertText": "GetWorkArea()"
  },
  {
    "label": "GetRotation()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetRotation()"
  }
]