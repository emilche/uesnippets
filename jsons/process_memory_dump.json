[
  {
    "label": "MemoryTrackerSnapshot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemoryTrackerSnapshot"
  },
  {
    "label": "UnguessableToken",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnguessableToken"
  },
  {
    "label": "TraceEventMemoryOverhead",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TraceEventMemoryOverhead"
  },
  {
    "label": "TracedValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TracedValue"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "GetSystemPageSize()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetSystemPageSize()"
  },
  {
    "label": "CountResidentBytes()",
    "kind": "Method",
    "detail": "Function (absl::optional<size_t>)",
    "insertText": "CountResidentBytes(void* start_address,\n                                                   size_t mapped_size)"
  },
  {
    "label": "CountResidentBytesInSharedMemory()",
    "kind": "Method",
    "detail": "Function (absl::optional<size_t>)",
    "insertText": "CountResidentBytesInSharedMemory(\n      void* start_address,\n      size_t mapped_size)"
  },
  {
    "label": "ProcessMemoryDump()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ProcessMemoryDump(const MemoryDumpArgs& dump_args)"
  },
  {
    "label": "SetAllocatorDumpsForSerialization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllocatorDumpsForSerialization(\n      std::vector<std::unique_ptr<MemoryAllocatorDump>>)"
  },
  {
    "label": "SetAllEdgesForSerialization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllEdgesForSerialization(const std::vector<MemoryAllocatorDumpEdge>&)"
  },
  {
    "label": "DumpHeapUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpHeapUsage(\n      const std::unordered_map<base::trace_event::AllocationContext,\n                               base::trace_event::AllocationMetrics>&\n          metrics_by_context,\n      base::trace_event::TraceEventMemoryOverhead& overhead,\n      const char* allocator_name)"
  },
  {
    "label": "AddOwnershipEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOwnershipEdge(const MemoryAllocatorDumpGuid& source,\n                        const MemoryAllocatorDumpGuid& target,\n                        int importance)"
  },
  {
    "label": "AddOwnershipEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOwnershipEdge(const MemoryAllocatorDumpGuid& source,\n                        const MemoryAllocatorDumpGuid& target)"
  },
  {
    "label": "AddOverridableOwnershipEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOverridableOwnershipEdge(const MemoryAllocatorDumpGuid& source,\n                                   const MemoryAllocatorDumpGuid& target,\n                                   int importance)"
  },
  {
    "label": "CreateSharedMemoryOwnershipEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSharedMemoryOwnershipEdge(\n      const MemoryAllocatorDumpGuid& client_local_dump_guid,\n      const UnguessableToken& shared_memory_guid,\n      int importance)"
  },
  {
    "label": "CreateWeakSharedMemoryOwnershipEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateWeakSharedMemoryOwnershipEdge(\n      const MemoryAllocatorDumpGuid& client_local_dump_guid,\n      const UnguessableToken& shared_memory_guid,\n      int importance)"
  },
  {
    "label": "AddSuballocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSuballocation(const MemoryAllocatorDumpGuid& source,\n                        const std::string& target_node_name)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "TakeAllDumpsFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TakeAllDumpsFrom(ProcessMemoryDump* other)"
  },
  {
    "label": "FRIEND_TEST_ALL_PREFIXES()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FRIEND_TEST_ALL_PREFIXES(ProcessMemoryDumpTest, BackgroundModeTest)"
  },
  {
    "label": "GetDumpId()",
    "kind": "Method",
    "detail": "Function (MemoryAllocatorDumpGuid)",
    "insertText": "GetDumpId(const std::string& absolute_name)"
  },
  {
    "label": "CreateSharedMemoryOwnershipEdgeInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSharedMemoryOwnershipEdgeInternal(\n      const MemoryAllocatorDumpGuid& client_local_dump_guid,\n      const UnguessableToken& shared_memory_guid,\n      int importance,\n      bool is_weak)"
  }
]