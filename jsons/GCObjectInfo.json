[
  {
    "label": "FGCObjectInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGCObjectInfo"
  },
  {
    "label": "FGCObjectInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / StringFwd . h \" # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" # include \" Misc / AssertionMacros . h \" # include \" Templates / TypeHash . h \" # include \" UObject / Class . h \" # include \" UObject / GarbageCollection . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectArray . h \" class FGCObjectInfo { public :)",
    "insertText": "FGCObjectInfo()"
  },
  {
    "label": "FGCObjectInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGCObjectInfo(const UObject* Obj) : Name(Obj->GetFName()) , Flags(Obj->GetFlags()) , InternalFlags(Obj->GetInternalFlags()) , ClusterRootIndex(GUObjectArray.ObjectToObjectItem(Obj)->ClusterRootIndex) , bDisregardForGC(GUObjectArray.IsDisregardForGC(Obj)) , RefCount(GUObjectArray.ObjectToObjectItem(Obj)->GetRefCount())"
  },
  {
    "label": "TryResolveObject()",
    "kind": "Method",
    "detail": "Function (} private : FName Name ; FGCObjectInfo* Class = nullptr ; FGCObjectInfo* Outer = nullptr ; EObjectFlags Flags = RF_NoFlags ; EInternalObjectFlags InternalFlags = EInternalObjectFlags::None ; int32 ClusterRootIndex = - 1 ; bool bDisregardForGC = false ; int32 RefCount = 0 ; public : UObject*)",
    "insertText": "TryResolveObject()"
  },
  {
    "label": "GetClass()",
    "kind": "Method",
    "detail": "Function (FGCObjectInfo*)",
    "insertText": "GetClass()"
  },
  {
    "label": "HasAnyInternalFlags()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasAnyInternalFlags(EInternalObjectFlags InFlags)"
  },
  {
    "label": "IsRooted()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRooted()"
  },
  {
    "label": "IsNative()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNative()"
  },
  {
    "label": "IsGarbage()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsGarbage()"
  },
  {
    "label": "GetOwnerIndex()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetOwnerIndex()"
  },
  {
    "label": "GetRefCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetRefCount()"
  },
  {
    "label": "IsDisregardForGC()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsDisregardForGC()"
  },
  {
    "label": "GetPathName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPathName()"
  },
  {
    "label": "GetFullName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFullName()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FGCObjectInfo& Info)"
  },
  {
    "label": "FindOrAddInfoHelper()",
    "kind": "Method",
    "detail": "Function (} FGCObjectInfo*)",
    "insertText": "FindOrAddInfoHelper(const UObject* InObject, TMap<const UObject*, FGCObjectInfo*>& InOutObjectToInfoMap)"
  }
]