[
  {
    "label": "FAsyncPackage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncPackage"
  },
  {
    "label": "FFlushRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFlushRequest"
  },
  {
    "label": "FAsyncLoadingThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncLoadingThread"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FUnsafeWeakAsyncPackagePtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnsafeWeakAsyncPackagePtr"
  },
  {
    "label": "FWeakAsyncPackagePtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeakAsyncPackagePtr"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEventLoadNodePtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEventLoadNodePtr"
  },
  {
    "label": "FEventLoadNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEventLoadNode"
  },
  {
    "label": "FEventLoadNodeArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEventLoadNodeArray"
  },
  {
    "label": "FEventLoadGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEventLoadGraph"
  },
  {
    "label": "FAsyncLoadEventArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncLoadEventArgs"
  },
  {
    "label": "FImportOrImportIndexArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImportOrImportIndexArray"
  },
  {
    "label": "FAsyncPackage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncPackage"
  },
  {
    "label": "FScopedAsyncPackageEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedAsyncPackageEvent"
  },
  {
    "label": "FAsyncPackageScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncPackageScope"
  },
  {
    "label": "FEDLBootNotificationManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEDLBootNotificationManager"
  },
  {
    "label": "FLinkerLoad",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerLoad"
  },
  {
    "label": "FCompletionCallback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompletionCallback"
  },
  {
    "label": "FExportIORequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExportIORequest"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Class",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Class"
  },
  {
    "label": "Class",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Class"
  },
  {
    "label": "FScopedAsyncPackageEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedAsyncPackageEvent"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(WeakPtr.Package)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(WeakPtr.PackageName)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(int32 InNumImports, int32 InNumExports)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "GetAddedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAddedNodes(TArray<FEventLoadNodePtr>& OutAddedNodes, FAsyncPackage* Owner)"
  },
  {
    "label": "AddNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNode(FEventLoadNodePtr& NewNode, bool bHoldForLater = false, int32 NumImplicitPrereqs = 0)"
  },
  {
    "label": "DoneAddingPrerequistesFireIfNone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoneAddingPrerequistesFireIfNone(FEventLoadNodePtr& NewNode, bool bWasHeldForLater = false)"
  },
  {
    "label": "AddArc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddArc(FEventLoadNodePtr& PrereqisiteNode, FEventLoadNodePtr& DependentNode)"
  },
  {
    "label": "RemoveNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNode(FEventLoadNodePtr& NodeToRemove)"
  },
  {
    "label": "NodeWillBeFiredExternally()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NodeWillBeFiredExternally(FEventLoadNodePtr& NodeThatWasFired)"
  },
  {
    "label": "CheckForCyclesInner()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForCyclesInner(const TMultiMap<FEventLoadNodePtr, FEventLoadNodePtr>& Arcs, TSet<FEventLoadNodePtr>& Visited, TSet<FEventLoadNodePtr>& Stack, const FEventLoadNodePtr& Visit)"
  },
  {
    "label": "HeapPop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HeapPop(int32& OutItem, EAllowShrinking AllowShrinking = EAllowShrinking::Yes)"
  },
  {
    "label": "TickAsyncPackage()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "TickAsyncPackage(bool bUseTimeLimit, bool bInbUseFullTimeLimit, float& InOutTimeLimit)"
  },
  {
    "label": "MarkRequestIDsAsComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkRequestIDsAsComplete()"
  },
  {
    "label": "ResetLoader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetLoader()"
  },
  {
    "label": "DetachLinker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachLinker()"
  },
  {
    "label": "FlushObjectLinkerCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushObjectLinkerCache()"
  },
  {
    "label": "AddCompletionCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCompletionCallback(TUniquePtr<FLoadPackageAsyncDelegate>&& Callback, bool bInternal)"
  },
  {
    "label": "AddRequestID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequestID(int32 Id)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel()"
  },
  {
    "label": "AddObjectReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectReference(UObject* InObject)"
  },
  {
    "label": "EmptyReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyReferencedObjects()"
  },
  {
    "label": "GetLoadedAssetsAndPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLoadedAssetsAndPackages(TSet<FWeakObjectPtr>& AssetList, TSet<UPackage*>& PackageList)"
  },
  {
    "label": "AreAllDependenciesFullyLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAllDependenciesFullyLoaded(TSet<UPackage*>& VisitedPackages)"
  },
  {
    "label": "CreateClusters()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "CreateClusters(double InTickStartTime, bool bInUseTimeLimit, double InOutTimeLimit)"
  },
  {
    "label": "IsDependencyOf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDependencyOf(int32 RequestID)"
  },
  {
    "label": "AreAllDependenciesFullyLoadedInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAllDependenciesFullyLoadedInternal(FAsyncPackage* Package, TSet<UPackage*>& VisitedPackages, FString& OutError)"
  },
  {
    "label": "AddDependentRequestsTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDependentRequestsTo(FAsyncPackage* InDependency)"
  },
  {
    "label": "AddDependentRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDependentRequests(TArrayView<int32 const> Requests)"
  },
  {
    "label": "IsFullyLoadedObj()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFullyLoadedObj(UObject* Obj)"
  },
  {
    "label": "Event_CreateLinker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Event_CreateLinker()"
  },
  {
    "label": "Event_FinishLinker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Event_FinishLinker()"
  },
  {
    "label": "Event_StartImportPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Event_StartImportPackages()"
  },
  {
    "label": "Event_SetupImports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Event_SetupImports()"
  },
  {
    "label": "Event_SetupExports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Event_SetupExports()"
  },
  {
    "label": "Event_ProcessImportsAndExports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Event_ProcessImportsAndExports()"
  },
  {
    "label": "Event_ExportsDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Event_ExportsDone()"
  },
  {
    "label": "Event_ProcessPostloadWait()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Event_ProcessPostloadWait()"
  },
  {
    "label": "Event_StartPostload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Event_StartPostload()"
  },
  {
    "label": "MarkNewObjectForLoadIfItIsAnExport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkNewObjectForLoadIfItIsAnExport(UObject *Object)"
  },
  {
    "label": "AnyImportsAndExportWorkOutstanding()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnyImportsAndExportWorkOutstanding()"
  },
  {
    "label": "ConditionalQueueProcessImportsAndExports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalQueueProcessImportsAndExports(bool bRequeueForTimeout = false)"
  },
  {
    "label": "ConditionalQueueProcessPostloadWait()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalQueueProcessPostloadWait()"
  },
  {
    "label": "LoadImports_Event()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "LoadImports_Event()"
  },
  {
    "label": "SetupImports_Event()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "SetupImports_Event()"
  },
  {
    "label": "SetupExports_Event()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "SetupExports_Event()"
  },
  {
    "label": "ProcessImportsAndExports_Event()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "ProcessImportsAndExports_Event()"
  },
  {
    "label": "LinkImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LinkImport(int32 LocalImportIndex)"
  },
  {
    "label": "EventDrivenCreateExport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventDrivenCreateExport(int32 LocalExportIndex)"
  },
  {
    "label": "StartPrecacheRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartPrecacheRequest()"
  },
  {
    "label": "EventDrivenSerializeExport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventDrivenSerializeExport(int32 LocalExportIndex)"
  },
  {
    "label": "PrecacheRequestReady()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "PrecacheRequestReady(IAsyncReadRequest * Req)"
  },
  {
    "label": "MakeNextPrecacheRequestCurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeNextPrecacheRequestCurrent()"
  },
  {
    "label": "FlushPrecacheBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushPrecacheBuffer()"
  },
  {
    "label": "EventDrivenLoadingComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventDrivenLoadingComplete()"
  },
  {
    "label": "DumpDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpDependencies(const TCHAR* Label, UObject* Obj)"
  },
  {
    "label": "DumpDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpDependencies(const TCHAR* Label, FLinkerLoad* DumpLinker, FPackageIndex Index)"
  },
  {
    "label": "AddArc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddArc(FEventLoadNodePtr& PrereqisiteNode, FEventLoadNodePtr& DependentNode)"
  },
  {
    "label": "RemoveAllNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllNodes()"
  },
  {
    "label": "FireNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FireNode(FEventLoadNodePtr& NodeToFire)"
  },
  {
    "label": "GetDebuggingPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebuggingPath(FPackageIndex Idx)"
  },
  {
    "label": "CallCompletionCallbacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallCompletionCallbacks(bool bInternalOnly, EAsyncLoadingResult::Type LoadingResult)"
  },
  {
    "label": "PostLoadDeferredObjects()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "PostLoadDeferredObjects(double InTickStartTime, bool bInUseTimeLimit, double InOutTimeLimit)"
  },
  {
    "label": "CloseDelayedLinkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseDelayedLinkers()"
  },
  {
    "label": "GiveUpTimeSlice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GiveUpTimeSlice()"
  },
  {
    "label": "IsTimeLimitExceeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTimeLimitExceeded()"
  },
  {
    "label": "BeginAsyncLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginAsyncLoad()"
  },
  {
    "label": "EndAsyncLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndAsyncLoad()"
  },
  {
    "label": "CreateLinker()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "CreateLinker()"
  },
  {
    "label": "FinishLinker()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "FinishLinker()"
  },
  {
    "label": "LoadImports()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "LoadImports()"
  },
  {
    "label": "CreateImports()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "CreateImports()"
  },
  {
    "label": "CreateMetaData()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "CreateMetaData()"
  },
  {
    "label": "CreateExports()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "CreateExports()"
  },
  {
    "label": "PreLoadObjects()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "PreLoadObjects()"
  },
  {
    "label": "PostLoadObjects()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "PostLoadObjects()"
  },
  {
    "label": "FinishObjects()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "FinishObjects()"
  },
  {
    "label": "FinishExternalReadDependencies()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "FinishExternalReadDependencies()"
  },
  {
    "label": "ImportPreLoadedAsyncCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportPreLoadedAsyncCallback(const FName& PackageName, UPackage* LoadedPackage, EAsyncLoadingResult::Type Result)"
  },
  {
    "label": "AddDependencyTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDependencyTree(FAsyncPackage& ImportedPackage, TSet<FAsyncPackage*>& SearchedPackages)"
  },
  {
    "label": "AddUniqueLinkerDependencyPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddUniqueLinkerDependencyPackage(FAsyncPackage& PendingImport)"
  },
  {
    "label": "AddImportDependency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddImportDependency(const FName& PendingImport, const FName& PackageToLoad, FLinkerInstancingContext InstancingContext)"
  },
  {
    "label": "FreeReferencedImports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeReferencedImports()"
  },
  {
    "label": "UpdateLoadPercentage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLoadPercentage()"
  },
  {
    "label": "TrackCreateExportTimeForClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackCreateExportTimeForClass(const UClass* Class, double Time)"
  },
  {
    "label": "TrackPostLoadTimeForClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackPostLoadTimeForClass(const UClass* Class, double Time)"
  }
]