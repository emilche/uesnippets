[
  {
    "label": "ErleEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ErleEstimator"
  },
  {
    "label": "ErleEstimator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ErleEstimator(size_t startup_phase_length_blocks,\n                const EchoCanceller3Config& config,\n                size_t num_capture_channels)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(bool delay_change)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(\n      const RenderBuffer& render_buffer,\n      rtc::ArrayView<const std::vector<std::array<float, kFftLengthBy2Plus1>>>\n          filter_frequency_responses,\n      rtc::ArrayView<const float, kFftLengthBy2Plus1>\n          avg_render_spectrum_with_reverb,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>>\n          capture_spectra,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>>\n          subtractor_spectra,\n      const std::vector<bool>& converged_filters)"
  }
]