[
  {
    "label": "SDL_Window",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_Window"
  },
  {
    "label": "SDL_WINDOW_FULLSCREEN_DESKTOP()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_video_h_ # define SDL_video_h_ # include \" SDL_stdinc . h \" # include \" SDL_pixels . h \" # include \" SDL_rect . h \" # include \" SDL_surface . h \" # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif typedef struct { Uint32 format ; int w ; int h ; int refresh_rate ; void* driverdata ; } SDL_DisplayMode ; typedef struct SDL_Window SDL_Window ; typedef enum { SDL_WINDOW_FULLSCREEN = 0 x00000001,SDL_WINDOW_OPENGL = 0 x00000002,SDL_WINDOW_SHOWN = 0 x00000004,SDL_WINDOW_HIDDEN = 0 x00000008,SDL_WINDOW_BORDERLESS = 0 x00000010,SDL_WINDOW_RESIZABLE = 0 x00000020,SDL_WINDOW_MINIMIZED = 0 x00000040,SDL_WINDOW_MAXIMIZED = 0 x00000080,SDL_WINDOW_MOUSE_GRABBED = 0 x00000100,SDL_WINDOW_INPUT_FOCUS = 0 x00000200,SDL_WINDOW_MOUSE_FOCUS = 0 x00000400,)",
    "insertText": "SDL_WINDOW_FULLSCREEN_DESKTOP(SDL_WINDOW_FULLSCREEN | 0x00001000)"
  },
  {
    "label": "SDL_WINDOWPOS_UNDEFINED_DISPLAY()",
    "kind": "Method",
    "detail": "Function (# define SDL_WINDOWPOS_UNDEFINED_MASK 0 x1FFF0000u # define)",
    "insertText": "SDL_WINDOWPOS_UNDEFINED_DISPLAY(X) (SDL_WINDOWPOS_UNDEFINED_MASK|(X)) #define SDL_WINDOWPOS_UNDEFINED SDL_WINDOWPOS_UNDEFINED_DISPLAY(0) #define SDL_WINDOWPOS_ISUNDEFINED(X) \\ (((X)&0xFFFF0000) == SDL_WINDOWPOS_UNDEFINED_MASK) #define SDL_WINDOWPOS_CENTERED_MASK 0x2FFF0000u #define SDL_WINDOWPOS_CENTERED_DISPLAY(X) (SDL_WINDOWPOS_CENTERED_MASK|(X)) #define SDL_WINDOWPOS_CENTERED SDL_WINDOWPOS_CENTERED_DISPLAY(0) #define SDL_WINDOWPOS_ISCENTERED(X) \\ (((X)&0xFFFF0000) == SDL_WINDOWPOS_CENTERED_MASK)"
  },
  {
    "label": "SDL_GetNumVideoDrivers()",
    "kind": "Method",
    "detail": "Function (SDL_WINDOWEVENT_NONE,SDL_WINDOWEVENT_SHOWN,SDL_WINDOWEVENT_HIDDEN,SDL_WINDOWEVENT_EXPOSED,SDL_WINDOWEVENT_MOVED,SDL_WINDOWEVENT_RESIZED,SDL_WINDOWEVENT_SIZE_CHANGED,SDL_WINDOWEVENT_MINIMIZED,SDL_WINDOWEVENT_MAXIMIZED,SDL_WINDOWEVENT_RESTORED,SDL_WINDOWEVENT_ENTER,SDL_WINDOWEVENT_LEAVE,SDL_WINDOWEVENT_FOCUS_GAINED,SDL_WINDOWEVENT_FOCUS_LOST,SDL_WINDOWEVENT_CLOSE,SDL_WINDOWEVENT_TAKE_FOCUS,SDL_WINDOWEVENT_HIT_TEST,SDL_WINDOWEVENT_ICCPROF_CHANGED,SDL_WINDOWEVENT_DISPLAY_CHANGED } SDL_WindowEventID ; typedef enum { SDL_DISPLAYEVENT_NONE,SDL_DISPLAYEVENT_ORIENTATION,SDL_DISPLAYEVENT_CONNECTED,SDL_DISPLAYEVENT_DISCONNECTED,SDL_DISPLAYEVENT_MOVED } SDL_DisplayEventID ; typedef enum { SDL_ORIENTATION_UNKNOWN,SDL_ORIENTATION_LANDSCAPE,SDL_ORIENTATION_LANDSCAPE_FLIPPED,SDL_ORIENTATION_PORTRAIT,SDL_ORIENTATION_PORTRAIT_FLIPPED } SDL_DisplayOrientation ; typedef enum { SDL_FLASH_CANCEL,SDL_FLASH_BRIEFLY,SDL_FLASH_UNTIL_FOCUSED } SDL_FlashOperation ; typedef void* SDL_GLContext ; typedef enum { SDL_GL_RED_SIZE,SDL_GL_GREEN_SIZE,SDL_GL_BLUE_SIZE,SDL_GL_ALPHA_SIZE,SDL_GL_BUFFER_SIZE,SDL_GL_DOUBLEBUFFER,SDL_GL_DEPTH_SIZE,SDL_GL_STENCIL_SIZE,SDL_GL_ACCUM_RED_SIZE,SDL_GL_ACCUM_GREEN_SIZE,SDL_GL_ACCUM_BLUE_SIZE,SDL_GL_ACCUM_ALPHA_SIZE,SDL_GL_STEREO,SDL_GL_MULTISAMPLEBUFFERS,SDL_GL_MULTISAMPLESAMPLES,SDL_GL_ACCELERATED_VISUAL,SDL_GL_RETAINED_BACKING,SDL_GL_CONTEXT_MAJOR_VERSION,SDL_GL_CONTEXT_MINOR_VERSION,SDL_GL_CONTEXT_EGL,SDL_GL_CONTEXT_FLAGS,SDL_GL_CONTEXT_PROFILE_MASK,SDL_GL_SHARE_WITH_CURRENT_CONTEXT,SDL_GL_FRAMEBUFFER_SRGB_CAPABLE,SDL_GL_CONTEXT_RELEASE_BEHAVIOR,SDL_GL_CONTEXT_RESET_NOTIFICATION,SDL_GL_CONTEXT_NO_ERROR,SDL_GL_FLOATBUFFERS } SDL_GLattr ; typedef enum { SDL_GL_CONTEXT_PROFILE_CORE = 0 x0001,SDL_GL_CONTEXT_PROFILE_COMPATIBILITY = 0 x0002,SDL_GL_CONTEXT_PROFILE_ES = 0 x0004 } SDL_GLprofile ; typedef enum { SDL_GL_CONTEXT_DEBUG_FLAG = 0 x0001,SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = 0 x0002,SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG = 0 x0004,SDL_GL_CONTEXT_RESET_ISOLATION_FLAG = 0 x0008 } SDL_GLcontextFlag ; typedef enum { SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE = 0 x0000,SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0 x0001 } SDL_GLcontextReleaseFlag ; typedef enum { SDL_GL_CONTEXT_RESET_NO_NOTIFICATION = 0 x0000,SDL_GL_CONTEXT_RESET_LOSE_CONTEXT = 0 x0001 } SDL_GLContextResetNotification ; DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetNumVideoDrivers(void)"
  },
  {
    "label": "SDL_GetVideoDriver()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_GetVideoDriver(int index)"
  },
  {
    "label": "SDL_VideoInit()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_VideoInit(const char *driver_name)"
  },
  {
    "label": "SDL_VideoQuit()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_VideoQuit(void)"
  },
  {
    "label": "SDL_GetCurrentVideoDriver()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_GetCurrentVideoDriver(void)"
  },
  {
    "label": "SDL_GetNumVideoDisplays()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetNumVideoDisplays(void)"
  },
  {
    "label": "SDL_GetDisplayName()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_GetDisplayName(int displayIndex)"
  },
  {
    "label": "SDL_GetDisplayBounds()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetDisplayBounds(int displayIndex, SDL_Rect * rect)"
  },
  {
    "label": "SDL_GetDisplayUsableBounds()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetDisplayUsableBounds(int displayIndex, SDL_Rect * rect)"
  },
  {
    "label": "SDL_GetDisplayDPI()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetDisplayDPI(int displayIndex, float * ddpi, float * hdpi, float * vdpi)"
  },
  {
    "label": "SDL_GetDisplayOrientation()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_DisplayOrientation SDLCALL)",
    "insertText": "SDL_GetDisplayOrientation(int displayIndex)"
  },
  {
    "label": "SDL_GetNumDisplayModes()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetNumDisplayModes(int displayIndex)"
  },
  {
    "label": "SDL_GetDisplayMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetDisplayMode(int displayIndex, int modeIndex, SDL_DisplayMode * mode)"
  },
  {
    "label": "SDL_GetDesktopDisplayMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetDesktopDisplayMode(int displayIndex, SDL_DisplayMode * mode)"
  },
  {
    "label": "SDL_GetCurrentDisplayMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetCurrentDisplayMode(int displayIndex, SDL_DisplayMode * mode)"
  },
  {
    "label": "SDL_GetClosestDisplayMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_DisplayMode* SDLCALL)",
    "insertText": "SDL_GetClosestDisplayMode(int displayIndex, const SDL_DisplayMode * mode, SDL_DisplayMode * closest)"
  },
  {
    "label": "SDL_GetPointDisplayIndex()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetPointDisplayIndex(const SDL_Point * point)"
  },
  {
    "label": "SDL_GetRectDisplayIndex()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetRectDisplayIndex(const SDL_Rect * rect)"
  },
  {
    "label": "SDL_GetWindowDisplayIndex()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetWindowDisplayIndex(SDL_Window * window)"
  },
  {
    "label": "SDL_SetWindowDisplayMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetWindowDisplayMode(SDL_Window * window, const SDL_DisplayMode * mode)"
  },
  {
    "label": "SDL_GetWindowDisplayMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetWindowDisplayMode(SDL_Window * window, SDL_DisplayMode * mode)"
  },
  {
    "label": "SDL_GetWindowICCProfile()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void* SDLCALL)",
    "insertText": "SDL_GetWindowICCProfile(SDL_Window * window, size_t* size)"
  },
  {
    "label": "SDL_GetWindowPixelFormat()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint32 SDLCALL)",
    "insertText": "SDL_GetWindowPixelFormat(SDL_Window * window)"
  },
  {
    "label": "SDL_CreateWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Window* SDLCALL)",
    "insertText": "SDL_CreateWindow(const char *title, int x, int y, int w, int h, Uint32 flags)"
  },
  {
    "label": "SDL_CreateWindowFrom()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Window* SDLCALL)",
    "insertText": "SDL_CreateWindowFrom(const void *data)"
  },
  {
    "label": "SDL_GetWindowID()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint32 SDLCALL)",
    "insertText": "SDL_GetWindowID(SDL_Window * window)"
  },
  {
    "label": "SDL_GetWindowFromID()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Window* SDLCALL)",
    "insertText": "SDL_GetWindowFromID(Uint32 id)"
  },
  {
    "label": "SDL_GetWindowFlags()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint32 SDLCALL)",
    "insertText": "SDL_GetWindowFlags(SDL_Window * window)"
  },
  {
    "label": "SDL_SetWindowTitle()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowTitle(SDL_Window * window, const char *title)"
  },
  {
    "label": "SDL_GetWindowTitle()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_GetWindowTitle(SDL_Window * window)"
  },
  {
    "label": "SDL_SetWindowIcon()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowIcon(SDL_Window * window, SDL_Surface * icon)"
  },
  {
    "label": "SDL_SetWindowData()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void* SDLCALL)",
    "insertText": "SDL_SetWindowData(SDL_Window * window, const char *name, void *userdata)"
  },
  {
    "label": "SDL_GetWindowData()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void* SDLCALL)",
    "insertText": "SDL_GetWindowData(SDL_Window * window, const char *name)"
  },
  {
    "label": "SDL_SetWindowPosition()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowPosition(SDL_Window * window, int x, int y)"
  },
  {
    "label": "SDL_GetWindowPosition()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GetWindowPosition(SDL_Window * window, int *x, int *y)"
  },
  {
    "label": "SDL_SetWindowSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowSize(SDL_Window * window, int w, int h)"
  },
  {
    "label": "SDL_GetWindowSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GetWindowSize(SDL_Window * window, int *w, int *h)"
  },
  {
    "label": "SDL_GetWindowBordersSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetWindowBordersSize(SDL_Window * window, int *top, int *left, int *bottom, int *right)"
  },
  {
    "label": "SDL_GetWindowSizeInPixels()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GetWindowSizeInPixels(SDL_Window * window, int *w, int *h)"
  },
  {
    "label": "SDL_SetWindowMinimumSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowMinimumSize(SDL_Window * window, int min_w, int min_h)"
  },
  {
    "label": "SDL_GetWindowMinimumSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GetWindowMinimumSize(SDL_Window * window, int *w, int *h)"
  },
  {
    "label": "SDL_SetWindowMaximumSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowMaximumSize(SDL_Window * window, int max_w, int max_h)"
  },
  {
    "label": "SDL_GetWindowMaximumSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GetWindowMaximumSize(SDL_Window * window, int *w, int *h)"
  },
  {
    "label": "SDL_SetWindowBordered()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowBordered(SDL_Window * window, SDL_bool bordered)"
  },
  {
    "label": "SDL_SetWindowResizable()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowResizable(SDL_Window * window, SDL_bool resizable)"
  },
  {
    "label": "SDL_SetWindowAlwaysOnTop()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowAlwaysOnTop(SDL_Window * window, SDL_bool on_top)"
  },
  {
    "label": "SDL_ShowWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_ShowWindow(SDL_Window * window)"
  },
  {
    "label": "SDL_HideWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_HideWindow(SDL_Window * window)"
  },
  {
    "label": "SDL_RaiseWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_RaiseWindow(SDL_Window * window)"
  },
  {
    "label": "SDL_MaximizeWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_MaximizeWindow(SDL_Window * window)"
  },
  {
    "label": "SDL_MinimizeWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_MinimizeWindow(SDL_Window * window)"
  },
  {
    "label": "SDL_RestoreWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_RestoreWindow(SDL_Window * window)"
  },
  {
    "label": "SDL_SetWindowFullscreen()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetWindowFullscreen(SDL_Window * window, Uint32 flags)"
  },
  {
    "label": "SDL_HasWindowSurface()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_HasWindowSurface(SDL_Window *window)"
  },
  {
    "label": "SDL_GetWindowSurface()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Surface* SDLCALL)",
    "insertText": "SDL_GetWindowSurface(SDL_Window * window)"
  },
  {
    "label": "SDL_UpdateWindowSurface()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_UpdateWindowSurface(SDL_Window * window)"
  },
  {
    "label": "SDL_UpdateWindowSurfaceRects()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_UpdateWindowSurfaceRects(SDL_Window * window, const SDL_Rect * rects, int numrects)"
  },
  {
    "label": "SDL_DestroyWindowSurface()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_DestroyWindowSurface(SDL_Window *window)"
  },
  {
    "label": "SDL_SetWindowGrab()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowGrab(SDL_Window * window, SDL_bool grabbed)"
  },
  {
    "label": "SDL_SetWindowKeyboardGrab()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowKeyboardGrab(SDL_Window * window, SDL_bool grabbed)"
  },
  {
    "label": "SDL_SetWindowMouseGrab()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetWindowMouseGrab(SDL_Window * window, SDL_bool grabbed)"
  },
  {
    "label": "SDL_GetWindowGrab()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_GetWindowGrab(SDL_Window * window)"
  },
  {
    "label": "SDL_GetWindowKeyboardGrab()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_GetWindowKeyboardGrab(SDL_Window * window)"
  },
  {
    "label": "SDL_GetWindowMouseGrab()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_GetWindowMouseGrab(SDL_Window * window)"
  },
  {
    "label": "SDL_GetGrabbedWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Window* SDLCALL)",
    "insertText": "SDL_GetGrabbedWindow(void)"
  },
  {
    "label": "SDL_SetWindowMouseRect()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetWindowMouseRect(SDL_Window * window, const SDL_Rect * rect)"
  },
  {
    "label": "SDL_GetWindowMouseRect()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const SDL_Rect* SDLCALL)",
    "insertText": "SDL_GetWindowMouseRect(SDL_Window * window)"
  },
  {
    "label": "SDL_SetWindowBrightness()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetWindowBrightness(SDL_Window * window, float brightness)"
  },
  {
    "label": "SDL_GetWindowBrightness()",
    "kind": "Method",
    "detail": "Function (DECLSPEC float SDLCALL)",
    "insertText": "SDL_GetWindowBrightness(SDL_Window * window)"
  },
  {
    "label": "SDL_SetWindowOpacity()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetWindowOpacity(SDL_Window * window, float opacity)"
  },
  {
    "label": "SDL_GetWindowOpacity()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetWindowOpacity(SDL_Window * window, float * out_opacity)"
  },
  {
    "label": "SDL_SetWindowModalFor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetWindowModalFor(SDL_Window * modal_window, SDL_Window * parent_window)"
  },
  {
    "label": "SDL_SetWindowInputFocus()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetWindowInputFocus(SDL_Window * window)"
  },
  {
    "label": "SDL_SetWindowGammaRamp()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetWindowGammaRamp(SDL_Window * window, const Uint16 * red, const Uint16 * green, const Uint16 * blue)"
  },
  {
    "label": "SDL_GetWindowGammaRamp()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetWindowGammaRamp(SDL_Window * window, Uint16 * red, Uint16 * green, Uint16 * blue)"
  },
  {
    "label": "SDL_HitTestResult()",
    "kind": "Method",
    "detail": "Function (typedef enum { SDL_HITTEST_NORMAL,SDL_HITTEST_DRAGGABLE,SDL_HITTEST_RESIZE_TOPLEFT,SDL_HITTEST_RESIZE_TOP,SDL_HITTEST_RESIZE_TOPRIGHT,SDL_HITTEST_RESIZE_RIGHT,SDL_HITTEST_RESIZE_BOTTOMRIGHT,SDL_HITTEST_RESIZE_BOTTOM,SDL_HITTEST_RESIZE_BOTTOMLEFT,SDL_HITTEST_RESIZE_LEFT } SDL_HitTestResult ; typedef)",
    "insertText": "SDL_HitTestResult(SDLCALL *SDL_HitTest)(SDL_Window *win, const SDL_Point *area, void *data)"
  },
  {
    "label": "SDL_SetWindowHitTest()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetWindowHitTest(SDL_Window * window, SDL_HitTest callback, void *callback_data)"
  },
  {
    "label": "SDL_FlashWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_FlashWindow(SDL_Window * window, SDL_FlashOperation operation)"
  },
  {
    "label": "SDL_DestroyWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_DestroyWindow(SDL_Window * window)"
  },
  {
    "label": "SDL_IsScreenSaverEnabled()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_IsScreenSaverEnabled(void)"
  },
  {
    "label": "SDL_EnableScreenSaver()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_EnableScreenSaver(void)"
  },
  {
    "label": "SDL_DisableScreenSaver()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_DisableScreenSaver(void)"
  },
  {
    "label": "SDL_GL_LoadLibrary()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GL_LoadLibrary(const char *path)"
  },
  {
    "label": "SDL_GL_GetProcAddress()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void* SDLCALL)",
    "insertText": "SDL_GL_GetProcAddress(const char *proc)"
  },
  {
    "label": "SDL_GL_UnloadLibrary()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GL_UnloadLibrary(void)"
  },
  {
    "label": "SDL_GL_ExtensionSupported()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_GL_ExtensionSupported(const char *extension)"
  },
  {
    "label": "SDL_GL_ResetAttributes()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GL_ResetAttributes(void)"
  },
  {
    "label": "SDL_GL_SetAttribute()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GL_SetAttribute(SDL_GLattr attr, int value)"
  },
  {
    "label": "SDL_GL_GetAttribute()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GL_GetAttribute(SDL_GLattr attr, int *value)"
  },
  {
    "label": "SDL_GL_CreateContext()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_GLContext SDLCALL)",
    "insertText": "SDL_GL_CreateContext(SDL_Window * window)"
  },
  {
    "label": "SDL_GL_MakeCurrent()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GL_MakeCurrent(SDL_Window * window, SDL_GLContext context)"
  },
  {
    "label": "SDL_GL_GetCurrentWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Window* SDLCALL)",
    "insertText": "SDL_GL_GetCurrentWindow(void)"
  },
  {
    "label": "SDL_GL_GetCurrentContext()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_GLContext SDLCALL)",
    "insertText": "SDL_GL_GetCurrentContext(void)"
  },
  {
    "label": "SDL_GL_GetDrawableSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GL_GetDrawableSize(SDL_Window * window, int *w, int *h)"
  },
  {
    "label": "SDL_GL_SetSwapInterval()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GL_SetSwapInterval(int interval)"
  },
  {
    "label": "SDL_GL_GetSwapInterval()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GL_GetSwapInterval(void)"
  },
  {
    "label": "SDL_GL_SwapWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GL_SwapWindow(SDL_Window * window)"
  },
  {
    "label": "SDL_GL_DeleteContext()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GL_DeleteContext(SDL_GLContext context)"
  }
]