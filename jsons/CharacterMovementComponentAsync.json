[
  {
    "label": "FCharacterMovementComponentAsyncOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterMovementComponentAsyncOutput"
  },
  {
    "label": "FCharacterMovementComponentAsyncInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterMovementComponentAsyncInput"
  },
  {
    "label": "EShrinkCapsuleExtent",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShrinkCapsuleExtent"
  },
  {
    "label": "FFindFloorResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFindFloorResult"
  },
  {
    "label": "FStepDownResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStepDownResult"
  },
  {
    "label": "FCharacterAsyncOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterAsyncOutput"
  },
  {
    "label": "FUpdatedComponentAsyncOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdatedComponentAsyncOutput"
  },
  {
    "label": "FCharacterMovementComponentAsyncOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterMovementComponentAsyncOutput"
  },
  {
    "label": "FCachedMovementBaseAsyncData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedMovementBaseAsyncData"
  },
  {
    "label": "FRootMotionAsyncData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionAsyncData"
  },
  {
    "label": "FCharacterAsyncInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterAsyncInput"
  },
  {
    "label": "FUpdatedComponentAsyncInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdatedComponentAsyncInput"
  },
  {
    "label": "FCharacterMovementGTInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterMovementGTInputs"
  },
  {
    "label": "FCharacterMovementComponentAsyncInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterMovementComponentAsyncInput"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FCollisionShape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionShape"
  },
  {
    "label": "FCollisionQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionQueryParams"
  },
  {
    "label": "FCollisionResponseParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponseParams"
  },
  {
    "label": "FCharacterMovementComponentAsyncCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCharacterMovementComponentAsyncCallback"
  },
  {
    "label": "SetFromSweep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFromSweep(const FHitResult& InHit, const float InSweepFloorDist, const bool bIsWalkableFloor)"
  },
  {
    "label": "SetFromLineTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFromLineTrace(const FHitResult& InHit, const float InSweepFloorDist, const float InLineDist, const bool bIsWalkableFloor)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Copy(const FCharacterMovementComponentAsyncOutput& Value)"
  },
  {
    "label": "GetDeltaRotation()",
    "kind": "Method",
    "detail": "Function (FRotator)",
    "insertText": "GetDeltaRotation(const FRotator& InRotationRate, float InDeltaTime)"
  },
  {
    "label": "GetAxisDeltaRotation()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAxisDeltaRotation(float InAxisRotationRate, float InDeltaTime)"
  },
  {
    "label": "OnMovementModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMovementModeChanged(EMovementMode PrevMovementMode, const FCharacterMovementComponentAsyncInput& Input, FCharacterMovementComponentAsyncOutput& Output, uint8 PreviousCustomMode = 0)"
  },
  {
    "label": "PullBackHit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PullBackHit(FHitResult& Hit, const FVector& Start, const FVector& End, const float Dist)"
  },
  {
    "label": "ShouldCheckOverlapFlagToQueueOverlaps()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCheckOverlapFlagToQueueOverlaps(const UPrimitiveComponent& ThisComponent)"
  },
  {
    "label": "ShouldIgnoreHitResult()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldIgnoreHitResult(const UWorld* InWorld, FHitResult const& TestHit, FVector const& MovementDirDenormalized, const AActor* MovingActor, EMoveComponentFlags MoveFlags)"
  },
  {
    "label": "ShouldIgnoreOverlapResult()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldIgnoreOverlapResult(const UWorld* World, const AActor* ThisActor, const UPrimitiveComponent& ThisComponent, const AActor* OtherActor, const UPrimitiveComponent& OtherComponent)"
  }
]