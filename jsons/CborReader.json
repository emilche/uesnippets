[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FCborReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCborReader"
  },
  {
    "label": "FCborReader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CborTypes . h \" # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" class FArchive ; class FCborReader { public :)",
    "insertText": "FCborReader(FArchive* InStream, ECborEndianness InReaderEndianness = ECborEndianness::Platform)"
  },
  {
    "label": "FCborReader()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCborReader()"
  },
  {
    "label": "GetArchive()",
    "kind": "Method",
    "detail": "Function (const FArchive*)",
    "insertText": "GetArchive()"
  },
  {
    "label": "IsError()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsError()"
  },
  {
    "label": "GetError()",
    "kind": "Method",
    "detail": "Function (FCborHeader)",
    "insertText": "GetError()"
  },
  {
    "label": "GetContext()",
    "kind": "Method",
    "detail": "Function (const FCborContext&)",
    "insertText": "GetContext()"
  },
  {
    "label": "ReadNext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadNext(FCborContext& OutContext)"
  },
  {
    "label": "SkipContainer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SkipContainer(ECborCode ContainerType)"
  },
  {
    "label": "ReadUIntValue()",
    "kind": "Method",
    "detail": "Function (private : uint64)",
    "insertText": "ReadUIntValue(FCborContext& OutContext, FArchive& Ar)"
  },
  {
    "label": "ReadPrimValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadPrimValue(FCborContext& OutContext, FArchive& Ar)"
  },
  {
    "label": "SetError()",
    "kind": "Method",
    "detail": "Function (FCborHeader)",
    "insertText": "SetError(ECborCode ErrorCode)"
  }
]