[
  {
    "label": "FTransformData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransformData"
  },
  {
    "label": "FTransformData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Components / SceneComponent . h \" struct FTransformData { FVector Translation ; FRotator Rotation ; FVector Scale ;)",
    "insertText": "FTransformData() : Translation(ForceInitToZero) , Rotation(ForceInitToZero) , Scale(ForceInitToZero)"
  },
  {
    "label": "FTransformData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTransformData(const USceneComponent* InComponent) : Translation(InComponent->GetRelativeLocation()) , Rotation(InComponent->GetRelativeRotation()) , Scale(InComponent->GetRelativeScale3D())"
  },
  {
    "label": "FTransformData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTransformData(const FTransform& InTransform) : Translation(InTransform.GetTranslation()) , Rotation(InTransform.GetRotation().Rotator()) , Scale(InTransform.GetScale3D())"
  },
  {
    "label": "FTransformData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTransformData(const FVector& InTranslation, const FRotator& InRotation, const FVector& InScale) : Translation(InTranslation) , Rotation(InRotation) , Scale(InScale)"
  }
]