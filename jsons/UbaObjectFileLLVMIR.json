[
  {
    "label": "ObjectFileLLVMIR",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ObjectFileLLVMIR"
  },
  {
    "label": "BlockInfoCodes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BlockInfoCodes"
  },
  {
    "label": "Encoding",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Encoding"
  },
  {
    "label": "EntryKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EntryKind"
  },
  {
    "label": "FixedAbbrevIDs",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FixedAbbrevIDs"
  },
  {
    "label": "Abbrev",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Abbrev"
  },
  {
    "label": "AbbrevOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AbbrevOp"
  },
  {
    "label": "BlockInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BlockInfo"
  },
  {
    "label": "Entry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Entry"
  },
  {
    "label": "BitStreamReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BitStreamReader"
  },
  {
    "label": "DllStorage",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DllStorage"
  },
  {
    "label": "BitStreamEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BitStreamEntry"
  },
  {
    "label": "ObjectFileLLVMIR()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UbaObjectFile . h \" namespace uba { class ObjectFileLLVMIR : public ObjectFile { public :)",
    "insertText": "ObjectFileLLVMIR()"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(Logger& logger, const tchar* hint)"
  },
  {
    "label": "StripExports()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "StripExports(Logger& logger, u8* newData, const UnorderedSymbols& allNeededImports)"
  },
  {
    "label": "ParseBlock()",
    "kind": "Method",
    "detail": "Function (enum BlockInfoCodes : u8 ; enum Encoding : u8 ; enum EntryKind : u8 ; enum FixedAbbrevIDs : u8 ; struct Abbrev ; struct AbbrevOp ; struct BlockInfo ; struct Entry ; using AbbrevPtr = std::shared_ptr<Abbrev> ; class BitStreamReader ; bool)",
    "insertText": "ParseBlock(Logger& logger, BitStreamReader& reader, BlockInfo& blockInfo, u32 blockId, u32 indent)"
  },
  {
    "label": "IsLLVMIRFile()",
    "kind": "Method",
    "detail": "Function (enum DllStorage : u8 { DllStorage_Export,DllStorage_Import,DllStorage_None,} ; struct BitStreamEntry { u64 pos ; u32 word ; u32 wordBits ; u32 code ; DllStorage dllStorage ; u8 keepAsIs ; Vector<AbbrevOp> operands ; } ; Vector<BitStreamEntry> m_globalVarOrFunctionRecords ; u64 m_strTabPos ; u64 m_strTabSize ; } ; bool)",
    "insertText": "IsLLVMIRFile(const u8* data, u64 dataSize)"
  }
]