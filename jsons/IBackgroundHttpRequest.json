[
  {
    "label": "IBackgroundHttpRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBackgroundHttpRequest"
  },
  {
    "label": "IBackgroundHttpResponse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBackgroundHttpResponse"
  },
  {
    "label": "IBackgroundHttpManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBackgroundHttpManager"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BackgroundHttpNotificationObject . h \" # include \" Interfaces / IHttpResponse . h \" typedef TSharedPtr<class IBackgroundHttpRequest,ESPMode::ThreadSafe> FBackgroundHttpRequestPtr ; typedef TSharedPtr<class IBackgroundHttpResponse,ESPMode::ThreadSafe> FBackgroundHttpResponsePtr ; typedef TSharedPtr<class IBackgroundHttpManager,ESPMode::ThreadSafe> FBackgroundHttpManagerPtr ;)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FBackgroundHttpRequestCompleteDelegate, FBackgroundHttpRequestPtr , bool)"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FBackgroundHttpProgressUpdateDelegate, FBackgroundHttpRequestPtr , int32 , int32)"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FBackgroundHttpRequestMetricsDelegate, FBackgroundHttpRequestPtr , int32 , float)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (enum class EBackgroundHTTPPriority : uint8 { High,Normal,Low,Num } ; const TCHAR*)",
    "insertText": "LexToString(EBackgroundHTTPPriority InType)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (default : break ; } return)",
    "insertText": "TEXT(\"<Unknown EBackgroundHTTPPriority>\")"
  },
  {
    "label": "LexTryParseString()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "LexTryParseString(EBackgroundHTTPPriority& OutMode, const TCHAR* InBuffer)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (OutMode = EBackgroundHTTPPriority::High ; return true ; })",
    "insertText": "if(FCString::Stricmp(InBuffer, TEXT(\"Normal\")) == 0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (OutMode = EBackgroundHTTPPriority::Normal ; return true ; })",
    "insertText": "if(FCString::Stricmp(InBuffer, TEXT(\"Low\")) == 0)"
  },
  {
    "label": "SetURLAsList()",
    "kind": "Method",
    "detail": "Function (OutMode = EBackgroundHTTPPriority::Low ; return true ; } return false ; } class IBackgroundHttpRequest : public TSharedFromThis<IBackgroundHttpRequest,ESPMode::ThreadSafe> { public : void)",
    "insertText": "SetURLAsList(const TArray<FString>& URLs, int NumRetriesToAttempt)"
  },
  {
    "label": "GetURLList()",
    "kind": "Method",
    "detail": "Function (const TArray<FString>&)",
    "insertText": "GetURLList()"
  },
  {
    "label": "SetCompleteNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompleteNotification(FBackgroundHttpNotificationObjectPtr DownloadCompleteNotificationObject)"
  },
  {
    "label": "CompleteWithExistingResponseData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteWithExistingResponseData(FBackgroundHttpResponsePtr BackgroundResponse)"
  },
  {
    "label": "OnProcessRequestComplete()",
    "kind": "Method",
    "detail": "Function (FBackgroundHttpRequestCompleteDelegate&)",
    "insertText": "OnProcessRequestComplete()"
  },
  {
    "label": "OnProgressUpdated()",
    "kind": "Method",
    "detail": "Function (FBackgroundHttpProgressUpdateDelegate&)",
    "insertText": "OnProgressUpdated()"
  },
  {
    "label": "OnRequestMetrics()",
    "kind": "Method",
    "detail": "Function (FBackgroundHttpRequestMetricsDelegate&)",
    "insertText": "OnRequestMetrics()"
  },
  {
    "label": "ProcessRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessRequest()"
  },
  {
    "label": "HandleDelayedProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDelayedProcess()"
  },
  {
    "label": "CancelRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelRequest()"
  },
  {
    "label": "PauseRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseRequest()"
  },
  {
    "label": "ResumeRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeRequest()"
  },
  {
    "label": "GetResponse()",
    "kind": "Method",
    "detail": "Function (const FBackgroundHttpResponsePtr)",
    "insertText": "GetResponse()"
  },
  {
    "label": "GetRequestID()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetRequestID()"
  },
  {
    "label": "SetRequestID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRequestID(const FString& NewRequestID)"
  },
  {
    "label": "GetRequestPriority()",
    "kind": "Method",
    "detail": "Function (EBackgroundHTTPPriority)",
    "insertText": "GetRequestPriority()"
  },
  {
    "label": "SetRequestPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRequestPriority(EBackgroundHTTPPriority NewPriority)"
  },
  {
    "label": "IBackgroundHttpRequest()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IBackgroundHttpRequest()"
  },
  {
    "label": "GetDebugText()",
    "kind": "Method",
    "detail": "Function (# if ! UE_BUILD_SHIPPING void)",
    "insertText": "GetDebugText(TArray<FString>& Output)"
  }
]