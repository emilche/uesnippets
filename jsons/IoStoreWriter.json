[
  {
    "label": "FIoStoreWriterContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoStoreWriterContextImpl"
  },
  {
    "label": "FIoStoreWriterSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIoStoreWriterSettings"
  },
  {
    "label": "FIoStoreWriterResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIoStoreWriterResult"
  },
  {
    "label": "FIoWriteOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIoWriteOptions"
  },
  {
    "label": "FIoStoreWriterContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoStoreWriterContext"
  },
  {
    "label": "FProgress",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProgress"
  },
  {
    "label": "IIoStoreWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IIoStoreWriter"
  },
  {
    "label": "IIoStoreWriteRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IIoStoreWriteRequest"
  },
  {
    "label": "IIoStoreWriterReferenceChunkDatabase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IIoStoreWriterReferenceChunkDatabase"
  },
  {
    "label": "HashDbChunksByType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" IO / IoContainerId . h \" # include \" IO / IoDispatcher . h \" # include \" UObject / NameTypes . h \" class FIoStoreWriterContextImpl ; struct FIoStoreWriterSettings { FName CompressionMethod = NAME_None ; uint64 CompressionBlockSize = 6 4<<1 0 ; uint64 CompressionBlockAlignment = 0 ; int32 CompressionMinBytesSaved = 0 ; int32 CompressionMinPercentSaved = 0 ; int32 CompressionMinSizeToConsiderDDC = 0 ; uint64 MemoryMappingAlignment = 0 ; uint64 MaxPartitionSize = 0 ; bool bEnableFileRegions = false ; bool bCompressionEnableDDC = false ; bool bValidateChunkHashes = false ; } ; struct FIoStoreWriterResult { FIoContainerId ContainerId ; FString ContainerName ; int64 TocSize = 0 ; int64 TocEntryCount = 0 ; int64 PaddingSize = 0 ; int64 UncompressedContainerSize = 0 ; int64 CompressedContainerSize = 0 ; int64 DirectoryIndexSize = 0 ; uint64 TotalEntryCompressedSize = 0 ; uint64 ReferenceCacheMissBytes = 0 ; uint64 AddedChunksCount = 0 ; uint64 AddedChunksSize = 0 ; uint64 ModifiedChunksCount = 0 ; uint64 ModifiedChunksSize = 0 ; FName CompressionMethod = NAME_None ; EIoContainerFlags ContainerFlags = EIoContainerFlags::None ; } ; struct FIoWriteOptions { FString FileName ; const TCHAR* DebugName = nullptr ; bool bForceUncompressed = false ; bool bIsMemoryMapped = false ; } ; class FIoStoreWriterContext { public : struct FProgress { uint64 TotalChunksCount = 0 ; uint64 HashedChunksCount = 0 ; uint64 HashDbChunksCount = 0 ; uint64)",
    "insertText": "HashDbChunksByType(int8)"
  },
  {
    "label": "CompressedChunksByType()",
    "kind": "Method",
    "detail": "Function (0 } ; uint64 CompressedChunksCount = 0 ; uint64)",
    "insertText": "CompressedChunksByType(int8)"
  },
  {
    "label": "CompressionDDCHitsByType()",
    "kind": "Method",
    "detail": "Function (0 } ; uint64 SerializedChunksCount = 0 ; uint64 ScheduledCompressionTasksCount = 0 ; uint64)",
    "insertText": "CompressionDDCHitsByType(int8)"
  },
  {
    "label": "CompressionDDCPutsByType()",
    "kind": "Method",
    "detail": "Function (0 } ; uint64)",
    "insertText": "CompressionDDCPutsByType(int8)"
  },
  {
    "label": "RefDbChunksByType()",
    "kind": "Method",
    "detail": "Function (0 } ; uint64 CompressionDDCHitCount = 0 ; uint64 CompressionDDCMissCount = 0 ; uint64 CompressionDDCPutCount = 0 ; uint64 CompressionDDCPutErrorCount = 0 ; uint64 CompressionDDCGetBytes = 0 ; uint64 CompressionDDCPutBytes = 0 ; uint64 RefDbChunksCount { 0 } ; uint64)",
    "insertText": "RefDbChunksByType(int8)"
  },
  {
    "label": "BeginCompressChunksByType()",
    "kind": "Method",
    "detail": "Function (0 } ; uint64)",
    "insertText": "BeginCompressChunksByType(int8)"
  },
  {
    "label": "FIoStoreWriterContext()",
    "kind": "Method",
    "detail": "Function (0 } ; } ;)",
    "insertText": "FIoStoreWriterContext()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] FIoStatus)",
    "insertText": "Initialize(const FIoStoreWriterSettings& InWriterSettings)"
  },
  {
    "label": "CreateContainer()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IIoStoreWriter>)",
    "insertText": "CreateContainer(const TCHAR* InContainerPath, const FIoContainerSettings& InContainerSettings)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "GetProgress()",
    "kind": "Method",
    "detail": "Function (FProgress)",
    "insertText": "GetProgress()"
  },
  {
    "label": "IIoStoreWriteRequest()",
    "kind": "Method",
    "detail": "Function (private : FIoStoreWriterContextImpl* Impl ; } ; class IIoStoreWriteRequest { public : ~)",
    "insertText": "IIoStoreWriteRequest()"
  },
  {
    "label": "GetOrderHint()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetOrderHint()"
  },
  {
    "label": "GetRegions()",
    "kind": "Method",
    "detail": "Function (TArrayView<const FFileRegion>)",
    "insertText": "GetRegions()"
  },
  {
    "label": "GetChunkHash()",
    "kind": "Method",
    "detail": "Function (const FIoHash*)",
    "insertText": "GetChunkHash()"
  },
  {
    "label": "PrepareSourceBufferAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareSourceBufferAsync(UE::Tasks::FTaskEvent& CompletionEvent)"
  },
  {
    "label": "GetSourceBuffer()",
    "kind": "Method",
    "detail": "Function (const FIoBuffer*)",
    "insertText": "GetSourceBuffer()"
  },
  {
    "label": "FreeSourceBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeSourceBuffer()"
  },
  {
    "label": "GetSourceBufferSizeEstimate()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetSourceBufferSizeEstimate()"
  },
  {
    "label": "IIoStoreWriterReferenceChunkDatabase()",
    "kind": "Method",
    "detail": "Function (} ; class IIoStoreWriterReferenceChunkDatabase { public : ~)",
    "insertText": "IIoStoreWriterReferenceChunkDatabase()"
  },
  {
    "label": "RetrieveChunk()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "RetrieveChunk(const FIoContainerId& InContainerId, const FIoHash& InChunkHash, const FIoChunkId& InChunkId, TUniqueFunction<void(TIoStatusOr<FIoStoreCompressedReadResult>)> InCompletionCallback)"
  },
  {
    "label": "ChunkExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ChunkExists(const FIoContainerId& InContainerId, const FIoHash& InChunkHash, const FIoChunkId& InChunkId, int32& OutNumChunkBlocks)"
  },
  {
    "label": "GetCompressionBlockSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCompressionBlockSize()"
  },
  {
    "label": "NotifyAddedToWriter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAddedToWriter(const FIoContainerId& InContainerId, const FString& InContainerName)"
  },
  {
    "label": "IIoStoreWriter()",
    "kind": "Method",
    "detail": "Function (} ; class IIoStoreWriter { public : ~)",
    "insertText": "IIoStoreWriter()"
  },
  {
    "label": "SetReferenceChunkDatabase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReferenceChunkDatabase(TSharedPtr<IIoStoreWriterReferenceChunkDatabase> ReferenceChunkDatabase)"
  },
  {
    "label": "EnableDiskLayoutOrdering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableDiskLayoutOrdering(const TArray<TUniquePtr<FIoStoreReader>>& PatchSourceReaders = TArray<TUniquePtr<FIoStoreReader>>())"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(const FIoChunkId& ChunkId, FIoBuffer Chunk, const FIoWriteOptions& WriteOptions, uint64 OrderHint = MAX_uint64)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(const FIoChunkId& ChunkId, IIoStoreWriteRequest* Request, const FIoWriteOptions& WriteOptions)"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (TIoStatusOr<FIoStoreWriterResult>)",
    "insertText": "GetResult()"
  },
  {
    "label": "EnumerateChunks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateChunks(TFunction<bool(FIoStoreTocChunkInfo&&)>&& Callback)"
  }
]