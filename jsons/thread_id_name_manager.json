[
  {
    "label": "DefaultSingletonTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DefaultSingletonTraits"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "DefaultSingletonTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DefaultSingletonTraits"
  },
  {
    "label": "RegisterThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterThread(PlatformThreadHandle::Handle handle, PlatformThreadId id)"
  },
  {
    "label": "AddObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObserver(Observer*)"
  },
  {
    "label": "RemoveObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObserver(Observer*)"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(const std::string& name)"
  },
  {
    "label": "RemoveName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveName(PlatformThreadHandle::Handle handle, PlatformThreadId id)"
  },
  {
    "label": "GetIds()",
    "kind": "Method",
    "detail": "Function (std::vector<PlatformThreadId>)",
    "insertText": "GetIds()"
  }
]