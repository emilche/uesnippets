[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "ULineBatchComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULineBatchComponent"
  },
  {
    "label": "UPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterial"
  },
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FConstraintInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintInstance"
  },
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "FStaticMeshVertexBuffers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshVertexBuffers"
  },
  {
    "label": "FPhysScene_PhysX",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysScene_PhysX"
  },
  {
    "label": "FLocalVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalVertexFactory"
  },
  {
    "label": "FDynamicMeshIndexBuffer32",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMeshIndexBuffer32"
  },
  {
    "label": "FPhysCommandHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysCommandHandler"
  },
  {
    "label": "FRigidBodyCollisionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRigidBodyCollisionInfo"
  },
  {
    "label": "FCollisionNotifyInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionNotifyInfo"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FPhysCommandHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysCommandHandler"
  },
  {
    "label": "FPhysPendingCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPhysPendingCommand"
  },
  {
    "label": "FKCachedConvexDataElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKCachedConvexDataElement"
  },
  {
    "label": "FKCachedConvexData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKCachedConvexData"
  },
  {
    "label": "FKCachedPerTriData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKCachedPerTriData"
  },
  {
    "label": "FKConvexGeomRenderInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKConvexGeomRenderInfo"
  },
  {
    "label": "FPhysicsDelegates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsDelegates"
  },
  {
    "label": "SetFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrom(const FBodyInstance* BodyInst, const FVector& InDeltaVelocity = FVector::ZeroVector)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "Flush()"
  },
  {
    "label": "HasPendingCommands()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "HasPendingCommands()"
  },
  {
    "label": "ExecuteCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteCommands()"
  },
  {
    "label": "EnqueueCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueCommand(const FPhysPendingCommand& Command)"
  },
  {
    "label": "ClearForces_AssumesLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearForces_AssumesLocked(FBodyInstance* BodyInstance, bool bAllowSubstepping)"
  },
  {
    "label": "ClearTorques_AssumesLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTorques_AssumesLocked(FBodyInstance* BodyInstance, bool bAllowSubstepping)"
  },
  {
    "label": "HasValidGeometry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidGeometry()"
  },
  {
    "label": "InitGamePhys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitGamePhys()"
  },
  {
    "label": "TermGamePhys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TermGamePhys()"
  },
  {
    "label": "DeferredPhysResourceCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferredPhysResourceCleanup()"
  },
  {
    "label": "FindBodyTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "FindBodyTransform(AActor* Actor, FName BoneName)"
  },
  {
    "label": "FindBodyBox()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "FindBodyBox(AActor* Actor, FName BoneName)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnPhysicsAssetChanged, const UPhysicsAsset*)"
  }
]