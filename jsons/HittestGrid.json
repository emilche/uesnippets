[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "ICustomHitTestPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICustomHitTestPath"
  },
  {
    "label": "FHittestGrid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHittestGrid"
  },
  {
    "label": "FDebuggingFindNextFocusableWidgetArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebuggingFindNextFocusableWidgetArgs"
  },
  {
    "label": "FWidgetResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetResult"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FWidgetSortData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetSortData"
  },
  {
    "label": "FWidgetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetData"
  },
  {
    "label": "FWidgetIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetIndex"
  },
  {
    "label": "FIndexAndDistance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIndexAndDistance"
  },
  {
    "label": "FGridTestingParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGridTestingParams"
  },
  {
    "label": "FCell",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCell"
  },
  {
    "label": "FAppendedGridData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAppendedGridData"
  },
  {
    "label": "FHittestGrid()",
    "kind": "Method",
    "detail": "Function (SLATECORE_API)",
    "insertText": "FHittestGrid()"
  },
  {
    "label": "GetBubblePath()",
    "kind": "Method",
    "detail": "Function (TArray<FWidgetAndPointer>)",
    "insertText": "GetBubblePath(UE::Slate::FDeprecateVector2DParameter DesktopSpaceCoordinate, float CursorRadius, bool bIgnoreEnabledStatus, int32 UserIndex = INDEX_NONE)"
  },
  {
    "label": "SetHittestArea()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetHittestArea(const UE::Slate::FDeprecateVector2DParameter& HittestPositionInDesktop, const UE::Slate::FDeprecateVector2DParameter& HittestDimensions, const UE::Slate::FDeprecateVector2DParameter& HitestOffsetInWindow = FVector2f::ZeroVector)"
  },
  {
    "label": "InsertCustomHitTestPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertCustomHitTestPath(const SWidget* InWidget, const TSharedRef<ICustomHitTestPath>& CustomHitTestPath)"
  },
  {
    "label": "FindNextFocusableWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "FindNextFocusableWidget(const FArrangedWidget& StartingWidget, const EUINavigation Direction, const FNavigationReply& NavigationReply, const FArrangedWidget& RuleWidget, int32 UserIndex)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "AddWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWidget(const SWidget* InWidget, int32 InBatchPriorityGroup, int32 InLayerId, FSlateInvalidationWidgetSortOrder InSecondarySort)"
  },
  {
    "label": "RemoveWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveWidget(const SWidget* InWidget)"
  },
  {
    "label": "UpdateWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWidget(const SWidget* InWidget, FSlateInvalidationWidgetSortOrder InSecondarySort)"
  },
  {
    "label": "AddGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGrid(const TSharedRef<const FHittestGrid>& OtherGrid)"
  },
  {
    "label": "RemoveGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveGrid(const TSharedRef<const FHittestGrid>& OtherGrid)"
  },
  {
    "label": "RemoveGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveGrid(const SWidget* OtherGridOwner)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (WITH_SLATE_DEBUGGING)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FDebuggingFindNextFocusableWidget, const FHittestGrid* /*HittestGrid*/, const FDebuggingFindNextFocusableWidgetArgs& /*Info*/)"
  },
  {
    "label": "AddIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIndex(int32 WidgetIndex)"
  },
  {
    "label": "RemoveIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveIndex(int32 WidgetIndex)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ClearInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInternal(int32 TotalCells)"
  },
  {
    "label": "RemoveStaleAppendedHittestGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveStaleAppendedHittestGrid()"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (WITH_SLATE_DEBUGGING)",
    "insertText": "ENUM_CLASS_FLAGS(FHittestGrid::EDisplayGridFlags)"
  }
]