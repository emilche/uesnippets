[
  {
    "label": "SMessageLogCategoryListRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMessageLogCategoryListRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IMessageLogListing . h \" # include \" Widgets / SNullWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Styling / SlateColor . h \" # include \" Widgets / SWidget . h \" # include \" Layout / Margin . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Layout / SBox . h \" # include \" Widgets / Views / STableRow . h \" # include \" SlateOptMacros . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Widgets / Views / SListView . h \" # define LOCTEXT_NAMESPACE \" SMessageLogCategoryListRow \" class SMessageLogCategoryListRow : public SMultiColumnTableRow<IMessageLogListingPtr> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SMessageLogCategoryListRow)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: void Construct( const FArguments& InArgs, const IMessageLogListingRef& InLogListing, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (LogListing = InLogListing ; SMultiColumnTableRow<IMessageLogListingPtr)",
    "insertText": "Construct(FSuperRowType::FArguments(), InOwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (} public : BEGIN_SLATE_FUNCTION_BUILD_OPTIMIZATION TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "HandleNameColumnText()",
    "kind": "Method",
    "detail": "Function (} return SNullWidget::NullWidget ; } END_SLATE_FUNCTION_BUILD_OPTIMIZATION private : FText)",
    "insertText": "HandleNameColumnText()"
  },
  {
    "label": "GetFilteredMessages()",
    "kind": "Method",
    "detail": "Function (int32 NumMessages = LogListing ->)",
    "insertText": "GetFilteredMessages().Num()"
  },
  {
    "label": "Format()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Format(LOCTEXT(\"ColumnNameCountFormat\", \"{0} ({1})\"), LogListing->GetLabel(), FText::AsNumber(NumMessages))"
  },
  {
    "label": "HandleTextColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (} FSlateColor)",
    "insertText": "HandleTextColorAndOpacity()"
  },
  {
    "label": "UseSubduedForeground()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "UseSubduedForeground()"
  }
]