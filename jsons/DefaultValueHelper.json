[
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearColor"
  },
  {
    "label": "FDefaultValueHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDefaultValueHelper"
  },
  {
    "label": "TS()",
    "kind": "Method",
    "detail": "Function (TCHAR)",
    "insertText": "TS(const TCHAR* Sign)"
  },
  {
    "label": "IsWhitespace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWhitespace(TCHAR Char)"
  },
  {
    "label": "Trim()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Trim(int32& Pos, const FString& Source)"
  },
  {
    "label": "Trim()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Trim(const TCHAR* & Start, const TCHAR* End )"
  },
  {
    "label": "IsStringValidFloat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringValidFloat(const TCHAR* Start, const TCHAR* End)"
  },
  {
    "label": "IsStringValidInteger()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringValidInteger(const TCHAR* Start, const TCHAR* End, int32& OutBase)"
  },
  {
    "label": "IsStringValidInteger()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringValidInteger(const TCHAR* Start, const TCHAR* End)"
  },
  {
    "label": "GetUnqualifiedEnumValue()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetUnqualifiedEnumValue(const FString& Source)"
  },
  {
    "label": "HasWhitespaces()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasWhitespaces(const FString& Source)"
  },
  {
    "label": "RemoveWhitespaces()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "RemoveWhitespaces(const FString& Source)"
  },
  {
    "label": "GetParameters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetParameters(const FString& Source, const FString& TypeName, FString& OutForm)"
  },
  {
    "label": "Is()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Is(const FString& Source, const TCHAR* CompareStr)"
  },
  {
    "label": "StringFromCppString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StringFromCppString(const FString& Source, const FString& TypeName, FString& OutForm)"
  },
  {
    "label": "IsStringValidInteger()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringValidInteger(const FString& Source)"
  },
  {
    "label": "IsStringValidFloat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringValidFloat(const FString& Source)"
  },
  {
    "label": "IsStringValidVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringValidVector(const FString& Source)"
  },
  {
    "label": "IsStringValidRotator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringValidRotator(const FString& Source)"
  },
  {
    "label": "IsStringValidLinearColor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringValidLinearColor(const FString& Source)"
  },
  {
    "label": "ParseInt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseInt(const FString& Source, int32& OutVal)"
  },
  {
    "label": "ParseInt64()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseInt64(const FString& Source, int64& OutVal)"
  },
  {
    "label": "ParseFloat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseFloat(const FString& Source, float& OutVal)"
  },
  {
    "label": "ParseDouble()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseDouble(const FString& Source, double& OutVal)"
  },
  {
    "label": "ParseVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseVector(const FString& Source, FVector3f& OutVal)"
  },
  {
    "label": "ParseVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseVector(const FString& Source, FVector3d& OutVal)"
  },
  {
    "label": "ParseVector2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseVector2D(const FString& Source, FVector2f& OutVal)"
  },
  {
    "label": "ParseVector2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseVector2D(const FString& Source, FVector2d& OutVal)"
  },
  {
    "label": "ParseVector4()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseVector4(const FString& Source, FVector4f& OutVal)"
  },
  {
    "label": "ParseVector4()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseVector4(const FString& Source, FVector4d& OutVal)"
  },
  {
    "label": "ParseRotator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseRotator(const FString& Source, FRotator3f& OutVal)"
  },
  {
    "label": "ParseRotator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseRotator(const FString& Source, FRotator3d& OutVal)"
  },
  {
    "label": "ParseLinearColor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseLinearColor(const FString& Source, FLinearColor& OutVal)"
  },
  {
    "label": "ParseColor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseColor(const FString& Source, FColor& OutVal)"
  }
]