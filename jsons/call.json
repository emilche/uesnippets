[
  {
    "label": "Call",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Call"
  },
  {
    "label": "Stats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Stats"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (# ifndef CALL_CALL_H_ # define CALL_CALL_H_ # include<algorithm> # include<memory> # include<string> # include<vector> # include \" absl / strings / string_view . h \" # include \" api / adaptation / resource . h \" # include \" api / media_types . h \" # include \" api / task_queue / task_queue_base . h \" # include \" call / audio_receive_stream . h \" # include \" call / audio_send_stream . h \" # include \" call / call_config . h \" # include \" call / flexfec_receive_stream . h \" # include \" call / packet_receiver . h \" # include \" call / rtp_transport_controller_send_interface . h \" # include \" call / video_receive_stream . h \" # include \" call / video_send_stream . h \" # include \" rtc_base / copy_on_write_buffer . h \" # include \" rtc_base / network / sent_packet . h \" # include \" rtc_base / network_route . h \" # include \" rtc_base / ref_count . h \" namespace webrtc { class Call { public : using Config = CallConfig ; struct Stats { std::string)",
    "insertText": "ToString(int64_t time_ms)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (int send_bandwidth_bps = 0 ; int max_padding_bitrate_bps = 0 ; int recv_bandwidth_bps = 0 ; int64_t pacer_delay_ms = 0 ; int64_t rtt_ms = - 1 ; } ; Call*)",
    "insertText": "Create(const Call::Config& config)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (Call*)",
    "insertText": "Create(const Call::Config& config, Clock* clock, std::unique_ptr<RtpTransportControllerSendInterface> transportControllerSend)"
  },
  {
    "label": "CreateAudioSendStream()",
    "kind": "Method",
    "detail": "Function (AudioSendStream*)",
    "insertText": "CreateAudioSendStream(const AudioSendStream::Config& config)"
  },
  {
    "label": "DestroyAudioSendStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAudioSendStream(AudioSendStream* send_stream)"
  },
  {
    "label": "CreateAudioReceiveStream()",
    "kind": "Method",
    "detail": "Function (AudioReceiveStreamInterface*)",
    "insertText": "CreateAudioReceiveStream(const AudioReceiveStreamInterface::Config& config)"
  },
  {
    "label": "DestroyAudioReceiveStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAudioReceiveStream(AudioReceiveStreamInterface* receive_stream)"
  },
  {
    "label": "CreateVideoSendStream()",
    "kind": "Method",
    "detail": "Function (VideoSendStream*)",
    "insertText": "CreateVideoSendStream(VideoSendStream::Config config, VideoEncoderConfig encoder_config)"
  },
  {
    "label": "CreateVideoSendStream()",
    "kind": "Method",
    "detail": "Function (VideoSendStream*)",
    "insertText": "CreateVideoSendStream(VideoSendStream::Config config, VideoEncoderConfig encoder_config, std::unique_ptr<FecController> fec_controller)"
  },
  {
    "label": "DestroyVideoSendStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyVideoSendStream(VideoSendStream* send_stream)"
  },
  {
    "label": "CreateVideoReceiveStream()",
    "kind": "Method",
    "detail": "Function (VideoReceiveStreamInterface*)",
    "insertText": "CreateVideoReceiveStream(VideoReceiveStreamInterface::Config configuration)"
  },
  {
    "label": "DestroyVideoReceiveStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyVideoReceiveStream(VideoReceiveStreamInterface* receive_stream)"
  },
  {
    "label": "CreateFlexfecReceiveStream()",
    "kind": "Method",
    "detail": "Function (FlexfecReceiveStream*)",
    "insertText": "CreateFlexfecReceiveStream(const FlexfecReceiveStream::Config config)"
  },
  {
    "label": "DestroyFlexfecReceiveStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyFlexfecReceiveStream(FlexfecReceiveStream* receive_stream)"
  },
  {
    "label": "AddAdaptationResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAdaptationResource(rtc::scoped_refptr<Resource> resource)"
  },
  {
    "label": "Receiver()",
    "kind": "Method",
    "detail": "Function (PacketReceiver*)",
    "insertText": "Receiver()"
  },
  {
    "label": "GetTransportControllerSend()",
    "kind": "Method",
    "detail": "Function (RtpTransportControllerSendInterface*)",
    "insertText": "GetTransportControllerSend()"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (Stats)",
    "insertText": "GetStats()"
  },
  {
    "label": "SignalChannelNetworkState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SignalChannelNetworkState(MediaType media, NetworkState state)"
  },
  {
    "label": "OnAudioTransportOverheadChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAudioTransportOverheadChanged(int transport_overhead_per_packet)"
  },
  {
    "label": "OnLocalSsrcUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLocalSsrcUpdated(AudioReceiveStreamInterface& stream, uint32_t local_ssrc)"
  },
  {
    "label": "OnLocalSsrcUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLocalSsrcUpdated(VideoReceiveStreamInterface& stream, uint32_t local_ssrc)"
  },
  {
    "label": "OnLocalSsrcUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLocalSsrcUpdated(FlexfecReceiveStream& stream, uint32_t local_ssrc)"
  },
  {
    "label": "OnUpdateSyncGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUpdateSyncGroup(AudioReceiveStreamInterface& stream, absl::string_view sync_group)"
  },
  {
    "label": "OnSentPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSentPacket(const rtc::SentPacket& sent_packet)"
  },
  {
    "label": "SetClientBitratePreferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClientBitratePreferences(const BitrateSettings& preferences)"
  },
  {
    "label": "trials()",
    "kind": "Method",
    "detail": "Function (const FieldTrialsView&)",
    "insertText": "trials()"
  },
  {
    "label": "network_thread()",
    "kind": "Method",
    "detail": "Function (TaskQueueBase*)",
    "insertText": "network_thread()"
  },
  {
    "label": "worker_thread()",
    "kind": "Method",
    "detail": "Function (TaskQueueBase*)",
    "insertText": "worker_thread()"
  },
  {
    "label": "Call()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Call()"
  }
]