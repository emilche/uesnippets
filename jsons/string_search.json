[
  {
    "label": "UStringSearch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UStringSearch"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "BASE_I18N_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_I18N_EXPORT"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "BASE_I18N_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_I18N_EXPORT"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "BASE_I18N_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_I18N_EXPORT"
  },
  {
    "label": "StringSearchIgnoringCaseAndAccents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StringSearchIgnoringCaseAndAccents(const std::u16string& find_this,\n                                        const std::u16string& in_this,\n                                        size_t* match_index,\n                                        size_t* match_length)"
  },
  {
    "label": "StringSearch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StringSearch(const std::u16string& find_this,\n                  const std::u16string& in_this,\n                  size_t* match_index,\n                  size_t* match_length,\n                  bool case_sensitive,\n                  bool forward_search)"
  },
  {
    "label": "FixedPatternStringSearch()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FixedPatternStringSearch(const std::u16string& find_this,\n                                    bool case_sensitive)"
  },
  {
    "label": "Search()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Search(const std::u16string& in_this,\n              size_t* match_index,\n              size_t* match_length,\n              bool forward_search)"
  },
  {
    "label": "FixedPatternStringSearchIgnoringCaseAndAccents()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FixedPatternStringSearchIgnoringCaseAndAccents(\n      const std::u16string& find_this)"
  },
  {
    "label": "Search()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Search(const std::u16string& in_this,\n              size_t* match_index,\n              size_t* match_length)"
  },
  {
    "label": "RepeatingStringSearch()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "RepeatingStringSearch(const std::u16string& find_this,\n                        const std::u16string& in_this,\n                        bool case_sensitive)"
  },
  {
    "label": "NextMatchResult()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NextMatchResult(int& match_index, int& match_length)"
  }
]