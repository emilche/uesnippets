[
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FKeyDrawInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyDrawInfo"
  },
  {
    "label": "FCurvePointInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurvePointInfo"
  },
  {
    "label": "FCurveDrawParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveDrawParams"
  },
  {
    "label": "FKeyDrawInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Curves / KeyHandle . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" CurveEditorTypes . h \" struct FSlateBrush ; struct FKeyDrawInfo {)",
    "insertText": "FKeyDrawInfo() : ScreenSize(0.f, 0.f) , Brush(nullptr)"
  },
  {
    "label": "FCurvePointInfo()",
    "kind": "Method",
    "detail": "Function (} FVector2D ScreenSize ; const FSlateBrush* Brush ; TOptional<FLinearColor> Tint ; } ; struct FCurvePointInfo {)",
    "insertText": "FCurvePointInfo(FKeyHandle InHandle) : KeyHandle(InHandle) , ScreenPosition(0.f, 0.f) , LineDelta(0.f, 0.f) , Type(ECurvePointType::Key) , LayerBias(0)"
  },
  {
    "label": "FCurveDrawParams()",
    "kind": "Method",
    "detail": "Function (} FKeyHandle KeyHandle ; FVector2D ScreenPosition ; FVector2D LineDelta ; ECurvePointType Type ; int32 LayerBias ; FKeyDrawInfo DrawInfo ; } ; struct FCurveDrawParams { FLinearColor Color ; TArray<FVector2D> InterpolatingPoints ; TArray<FCurvePointInfo> Points ; FKeyDrawInfo ArriveTangentDrawInfo ; FKeyDrawInfo LeaveTangentDrawInfo ; float Thickness = 2 . f ; float DashLengthPx = 0 . f ; uint8 bKeyDrawEnabled : 1 ;)",
    "insertText": "FCurveDrawParams(FCurveModelID InID) : Color(0.2f, 0.2f, 0.2f) , bKeyDrawEnabled(1) , ID(InID)"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (} FCurveModelID)",
    "insertText": "GetID()"
  }
]