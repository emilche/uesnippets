[
  {
    "label": "MachineModuleInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineModuleInfo"
  },
  {
    "label": "Mangler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Mangler"
  },
  {
    "label": "MCAsmInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCAsmInfo"
  },
  {
    "label": "MCExpr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCExpr"
  },
  {
    "label": "MCSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSection"
  },
  {
    "label": "MCSectionMachO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSectionMachO"
  },
  {
    "label": "MCSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbol"
  },
  {
    "label": "MCContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCContext"
  },
  {
    "label": "GlobalValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalValue"
  },
  {
    "label": "TargetMachine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetMachine"
  },
  {
    "label": "TargetLoweringObjectFileELF",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetLoweringObjectFileELF"
  },
  {
    "label": "TargetLoweringObjectFileMachO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetLoweringObjectFileMachO"
  },
  {
    "label": "TargetLoweringObjectFileCOFF",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetLoweringObjectFileCOFF"
  },
  {
    "label": "TargetLoweringObjectFileELF()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_CODEGEN_TARGETLOWERINGOBJECTFILEIMPL_H # define LLVM_CODEGEN_TARGETLOWERINGOBJECTFILEIMPL_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / MC / SectionKind . h \" # include \" llvm / Target / TargetLoweringObjectFile . h \" namespace llvm { class MachineModuleInfo ; class Mangler ; class MCAsmInfo ; class MCExpr ; class MCSection ; class MCSectionMachO ; class MCSymbol ; class MCContext ; class GlobalValue ; class TargetMachine ; class TargetLoweringObjectFileELF : public TargetLoweringObjectFile { bool UseInitArray ; unsigned NextUniqueID = 0 ; public :)",
    "insertText": "TargetLoweringObjectFileELF() : UseInitArray(false)"
  },
  {
    "label": "TargetLoweringObjectFileELF()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TargetLoweringObjectFileELF()"
  },
  {
    "label": "emitPersonalityValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "emitPersonalityValue(MCStreamer &Streamer, const TargetMachine &TM, const MCSymbol *Sym)"
  },
  {
    "label": "getSectionForConstant()",
    "kind": "Method",
    "detail": "Function (MCSection*)",
    "insertText": "getSectionForConstant(SectionKind Kind, const Constant *C)"
  },
  {
    "label": "getExplicitSectionGlobal()",
    "kind": "Method",
    "detail": "Function (MCSection*)",
    "insertText": "getExplicitSectionGlobal(const GlobalValue *GV, SectionKind Kind, Mangler &Mang, const TargetMachine &TM)"
  },
  {
    "label": "SelectSectionForGlobal()",
    "kind": "Method",
    "detail": "Function (MCSection*)",
    "insertText": "SelectSectionForGlobal(const GlobalValue *GV, SectionKind Kind, Mangler &Mang, const TargetMachine &TM)"
  },
  {
    "label": "getSectionForJumpTable()",
    "kind": "Method",
    "detail": "Function (MCSection*)",
    "insertText": "getSectionForJumpTable(const Function &F, Mangler &Mang, const TargetMachine &TM)"
  },
  {
    "label": "shouldPutJumpTableInFunctionSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "shouldPutJumpTableInFunctionSection(bool UsesLabelDifference, const Function &F)"
  },
  {
    "label": "getTTypeGlobalReference()",
    "kind": "Method",
    "detail": "Function (const MCExpr*)",
    "insertText": "getTTypeGlobalReference(const GlobalValue *GV, unsigned Encoding, Mangler &Mang, const TargetMachine &TM, MachineModuleInfo *MMI, MCStreamer &Streamer)"
  },
  {
    "label": "getCFIPersonalitySymbol()",
    "kind": "Method",
    "detail": "Function (MCSymbol*)",
    "insertText": "getCFIPersonalitySymbol(const GlobalValue *GV, Mangler &Mang, const TargetMachine &TM, MachineModuleInfo *MMI)"
  },
  {
    "label": "InitializeELF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeELF(bool UseInitArray_)"
  },
  {
    "label": "getStaticCtorSection()",
    "kind": "Method",
    "detail": "Function (MCSection*)",
    "insertText": "getStaticCtorSection(unsigned Priority, const MCSymbol *KeySym)"
  },
  {
    "label": "getStaticDtorSection()",
    "kind": "Method",
    "detail": "Function (MCSection*)",
    "insertText": "getStaticDtorSection(unsigned Priority, const MCSymbol *KeySym)"
  },
  {
    "label": "TargetLoweringObjectFileMachO()",
    "kind": "Method",
    "detail": "Function (} ; class TargetLoweringObjectFileMachO : public TargetLoweringObjectFile { public : ~)",
    "insertText": "TargetLoweringObjectFileMachO()"
  },
  {
    "label": "emitModuleFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitModuleFlags(MCStreamer &Streamer, ArrayRef<Module::ModuleFlagEntry> ModuleFlags, Mangler &Mang, const TargetMachine &TM)"
  },
  {
    "label": "getIndirectSymViaGOTPCRel()",
    "kind": "Method",
    "detail": "Function (const MCExpr*)",
    "insertText": "getIndirectSymViaGOTPCRel(const MCSymbol *Sym, const MCValue &MV, int64_t Offset, MachineModuleInfo *MMI, MCStreamer &Streamer)"
  },
  {
    "label": "TargetLoweringObjectFileCOFF()",
    "kind": "Method",
    "detail": "Function (} ; class TargetLoweringObjectFileCOFF : public TargetLoweringObjectFile { public : ~)",
    "insertText": "TargetLoweringObjectFileCOFF()"
  },
  {
    "label": "getNameWithPrefix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNameWithPrefix(SmallVectorImpl<char> &OutName, const GlobalValue *GV, bool CannotUsePrivateLabel, Mangler &Mang, const TargetMachine &TM)"
  },
  {
    "label": "emitLinkerFlagsForGlobal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitLinkerFlagsForGlobal(raw_ostream &OS, const GlobalValue *GV, const Mangler &Mang)"
  }
]