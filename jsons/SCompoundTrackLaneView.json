[
  {
    "label": "FTimeToPixel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimeToPixel"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "STrackLane",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STrackLane"
  },
  {
    "label": "ITrackLaneWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITrackLaneWidget"
  },
  {
    "label": "SEQUENCERCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCERCORE_API"
  },
  {
    "label": "FSlot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlot"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SPanel . h \" # include \" Layout / Children . h \" struct FTimeToPixel ; struct FGeometry ; class FPaintArgs ; class FSlateWindowElementList ; namespace UE::Sequencer { class STrackLane ; class ITrackLaneWidget ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(FTimeToPixel, FGetTimeToPixel, const FGeometry&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SCompoundTrackLaneView : public SPanel { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SCompoundTrackLaneView)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FGetTimeToPixel, TimeToPixel) SLATE_END_ARGS() SCompoundTrackLaneView()"
  },
  {
    "label": "SCompoundTrackLaneView()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SCompoundTrackLaneView()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "AddWeakWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWeakWidget(TSharedPtr<ITrackLaneWidget> InWidget, TWeakPtr<STrackLane> InOwningLane)"
  },
  {
    "label": "AddStrongWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStrongWidget(TSharedPtr<ITrackLaneWidget> InWidget, TWeakPtr<STrackLane> InOwningLane)"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (FChildren*)",
    "insertText": "GetChildren()"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "FSlot()",
    "kind": "Method",
    "detail": "Function (private : struct FSlot : TSlotBase<FSlot> {)",
    "insertText": "FSlot(TSharedPtr<ITrackLaneWidget> InInterface, TWeakPtr<STrackLane> InOwningLane)"
  },
  {
    "label": "FSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSlot(TWeakPtr<ITrackLaneWidget> InWeakInterface, TWeakPtr<STrackLane> InOwningLane)"
  },
  {
    "label": "GetInterface()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITrackLaneWidget>)",
    "insertText": "GetInterface()"
  }
]