[
  {
    "label": "UNetBlobHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetBlobHandler"
  },
  {
    "label": "UNetObjectBlobHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetObjectBlobHandler"
  },
  {
    "label": "UPartialNetObjectAttachmentHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPartialNetObjectAttachmentHandler"
  },
  {
    "label": "UPartialNetObjectAttachmentHandlerConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPartialNetObjectAttachmentHandlerConfig"
  },
  {
    "label": "UNetRPCHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetRPCHandler"
  },
  {
    "label": "FNetObjectReference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectReference"
  },
  {
    "label": "FNetRefHandleManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetRefHandleManager"
  },
  {
    "label": "FObjectReferenceCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectReferenceCache"
  },
  {
    "label": "FReplicationConnections",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationConnections"
  },
  {
    "label": "FNetBlobManagerInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetBlobManagerInitParams"
  },
  {
    "label": "FNetBlobManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBlobManager"
  },
  {
    "label": "FSendRPCContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSendRPCContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRPCOwner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRPCOwner"
  },
  {
    "label": "FNetObjectAttachmentSendQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectAttachmentSendQueue"
  },
  {
    "label": "FNetObjectAttachmentQueueEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetObjectAttachmentQueueEntry"
  },
  {
    "label": "FProcessQueueContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProcessQueueContext"
  },
  {
    "label": "FNetBlobManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Iris / ReplicationSystem / ReplicationSystemTypes . h \" # include \" Iris / ReplicationSystem / NetBlob / NetBlob . h \" # include \" Iris / ReplicationSystem / NetBlob / NetBlobHandlerManager . h \" # include \" Iris / ReplicationSystem / NetRefHandleManager . h \" # include \" UObject / StrongObjectPtr . h \" class UNetBlobHandler ; class UNetObjectBlobHandler ; class UPartialNetObjectAttachmentHandler ; class UPartialNetObjectAttachmentHandlerConfig ; class UNetRPCHandler ; namespace UE::Net { class FNetObjectReference ; namespace Private { class FNetRefHandleManager ; class FObjectReferenceCache ; class FReplicationConnections ; } } namespace UE::Net::Private { struct FNetBlobManagerInitParams { UReplicationSystem* ReplicationSystem = nullptr ; bool bSendAttachmentsWithObject = false ; } ; class FNetBlobManager { public :)",
    "insertText": "FNetBlobManager()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FNetBlobManagerInitParams& InitParams)"
  },
  {
    "label": "RegisterNetBlobHandler()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterNetBlobHandler(UNetBlobHandler* Handler)"
  },
  {
    "label": "AllowObjectReplication()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowObjectReplication()"
  },
  {
    "label": "SendMulticastRPC()",
    "kind": "Method",
    "detail": "Function (struct FSendRPCContext { const UObject* RootObject = nullptr ; const UObject* SubObject = nullptr ; const UFunction* Function = nullptr ; } ; bool)",
    "insertText": "SendMulticastRPC(const FSendRPCContext& Context, const void* Parameters, ENetObjectAttachmentSendPolicyFlags SendFlags = ENetObjectAttachmentSendPolicyFlags::None)"
  },
  {
    "label": "SendUnicastRPC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendUnicastRPC(uint32 ConnectionId, const FSendRPCContext& Context, const void* Parameters, ENetObjectAttachmentSendPolicyFlags SendFlags = ENetObjectAttachmentSendPolicyFlags::None)"
  },
  {
    "label": "HasUnprocessedReliableAttachments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasUnprocessedReliableAttachments(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "HasAnyUnprocessedReliableAttachments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAnyUnprocessedReliableAttachments()"
  },
  {
    "label": "GetConnectionsPendingImmediateSend()",
    "kind": "Method",
    "detail": "Function (enum class EProcessMode { ProcessObjectsGoingOutOfScope,ProcessObjectsInScope,} ; FNetBitArrayView)",
    "insertText": "GetConnectionsPendingImmediateSend()"
  },
  {
    "label": "ProcessOOBNetObjectAttachmentSendQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessOOBNetObjectAttachmentSendQueue(FNetBitArray& OutConnectionsPendingImmediateSend)"
  },
  {
    "label": "ProcessNetObjectAttachmentSendQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessNetObjectAttachmentSendQueue(EProcessMode ProcessMode)"
  },
  {
    "label": "ResetNetObjectAttachmentSendQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetNetObjectAttachmentSendQueue()"
  },
  {
    "label": "GetNetBlobHandlerManager()",
    "kind": "Method",
    "detail": "Function (FNetBlobHandlerManager&)",
    "insertText": "GetNetBlobHandlerManager()"
  },
  {
    "label": "GetNetObjectBlobHandler()",
    "kind": "Method",
    "detail": "Function (} const UNetObjectBlobHandler*)",
    "insertText": "GetNetObjectBlobHandler()"
  },
  {
    "label": "AddConnection()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddConnection(uint32 ConnectionId)"
  },
  {
    "label": "RemoveConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveConnection(uint32 ConnectionId)"
  },
  {
    "label": "RegisterDefaultHandlers()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RegisterDefaultHandlers()"
  },
  {
    "label": "GetRPCOwner()",
    "kind": "Method",
    "detail": "Function (struct FRPCOwner { FNetObjectReference CallerRef ; FNetObjectReference TargetRef ; FInternalNetRefIndex RootObjectIndex = FNetRefHandleManager::InvalidInternalIndex ; FInternalNetRefIndex SubObjectIndex = FNetRefHandleManager::InvalidInternalIndex ; } ; bool)",
    "insertText": "GetRPCOwner(FRPCOwner& OutOwnerInfo, const FSendRPCContext& Context)"
  },
  {
    "label": "GetRootObjectIndicesFromHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRootObjectIndicesFromHandle(FNetRefHandle RootObjectRefHandle, FInternalNetRefIndex& OutRootObjectIndex)"
  },
  {
    "label": "GetRootObjectAndSubObjectIndicesFromSubObjectHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRootObjectAndSubObjectIndicesFromSubObjectHandle(FNetRefHandle SubObjectRefHandle, FInternalNetRefIndex& OutRootObjectIndex, FInternalNetRefIndex& OutSubObjectIndex)"
  },
  {
    "label": "GetRootObjectAndSubObjectIndicesFromAnyHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRootObjectAndSubObjectIndicesFromAnyHandle(FNetRefHandle AnyRefHandle, FInternalNetRefIndex& OutRootObjectIndex, FInternalNetRefIndex& OutSubObjectIndex)"
  },
  {
    "label": "FNetObjectAttachmentSendQueue()",
    "kind": "Method",
    "detail": "Function (class FNetObjectAttachmentSendQueue { public :)",
    "insertText": "FNetObjectAttachmentSendQueue()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FNetBlobManager* Manager)"
  },
  {
    "label": "Enqueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enqueue(uint32 ConnectionId, FInternalNetRefIndex OwnerIndex, FInternalNetRefIndex SubObjectIndex, const TRefCountPtr<FNetObjectAttachment>& Attachment, ENetObjectAttachmentSendPolicyFlags SendFlags)"
  },
  {
    "label": "Enqueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enqueue(FInternalNetRefIndex OwnerIndex, FInternalNetRefIndex SubObjectIndex, const TRefCountPtr<FNetObjectAttachment>& Attachment, ENetObjectAttachmentSendPolicyFlags SendFlags, FNetBitArray OpenConnections)"
  },
  {
    "label": "PrepareProcessQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareProcessQueue(FReplicationConnections* InConnections, const FNetRefHandleManager* InNetRefHandleManager)"
  },
  {
    "label": "ProcessQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessQueue(EProcessMode ProcessMode)"
  },
  {
    "label": "ResetProcessQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetProcessQueue()"
  },
  {
    "label": "PrepareAndProcessOOBAttachmentQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareAndProcessOOBAttachmentQueue(FReplicationConnections* InConnections, const FNetRefHandleManager* InNetRefHandleManager, FNetBitArray& OutConnetionsPendingImmediateSend)"
  },
  {
    "label": "PreSerializeAndSplitNetBlob()",
    "kind": "Method",
    "detail": "Function (private : struct FNetObjectAttachmentQueueEntry { uint32 ConnectionId ; FInternalNetRefIndex OwnerIndex ; FInternalNetRefIndex SubObjectIndex ; ENetObjectAttachmentSendPolicyFlags SendFlags ; TRefCountPtr<FNetObjectAttachment> Attachment ; FNetBitArray MulticastConnections ; } ; typedef TArray<FNetObjectAttachmentQueueEntry> FQueue ; bool)",
    "insertText": "PreSerializeAndSplitNetBlob(uint32 ConnectionId, const TRefCountPtr<FNetObjectAttachment>& Attachment, TArray<TRefCountPtr<FNetBlob>>& OutPartialNetBlobs, bool bInSendAttachmentsWithObject)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (FNetBlobManager* Manager ; FQueue AttachmentQueue ; FQueue ScheduleAsOOBAttachmentQueue ; bool bHasMulticastAttachments ; struct FProcessQueueContext { FNetBitArray AttachmentsToObjectsGoingOutOfScope ; FNetBitArray AttachmentsToObjectsInScope ; FNetBitArray ConnectionsPendingSendInPostDispatch ; TArray<uint32> ConnectionIds ; FReplicationConnections* Connections = nullptr ; const FNetRefHandleManager* NetRefHandleManager = nullptr ; FQueue* QueueToProcess = nullptr ; void)",
    "insertText": "Reset()"
  },
  {
    "label": "ClearAllBits()",
    "kind": "Method",
    "detail": "Function (Connections = nullptr ; NetRefHandleManager = nullptr ; QueueToProcess = nullptr ; ConnectionsPendingSendInPostDispatch .)",
    "insertText": "ClearAllBits()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  }
]