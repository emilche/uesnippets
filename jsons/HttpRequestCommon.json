[
  {
    "label": "FHttpResponseCommon",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHttpResponseCommon"
  },
  {
    "label": "IHttpTaskTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHttpTaskTimerHandle"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "FHttpRequestCommon()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FHttpRequestCommon()"
  },
  {
    "label": "GetURLParameter()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetURLParameter(const FString& ParameterName)"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (EHttpRequestStatus::Type)",
    "insertText": "GetStatus()"
  },
  {
    "label": "GetEffectiveURL()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetEffectiveURL()"
  },
  {
    "label": "GetFailureReason()",
    "kind": "Method",
    "detail": "Function (EHttpFailureReason)",
    "insertText": "GetFailureReason()"
  },
  {
    "label": "SetDelegateThreadPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDelegateThreadPolicy(EHttpRequestDelegateThreadPolicy InDelegateThreadPolicy)"
  },
  {
    "label": "GetDelegateThreadPolicy()",
    "kind": "Method",
    "detail": "Function (EHttpRequestDelegateThreadPolicy)",
    "insertText": "GetDelegateThreadPolicy()"
  },
  {
    "label": "GetOption()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetOption(const FName Option)"
  },
  {
    "label": "SetOption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOption(const FName Option, const FString & OptionValue)"
  },
  {
    "label": "SetTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeout(float InTimeoutSecs)"
  },
  {
    "label": "ClearTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTimeout()"
  },
  {
    "label": "ResetTimeoutStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetTimeoutStatus()"
  },
  {
    "label": "GetTimeout()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetTimeout()"
  },
  {
    "label": "GetTimeoutOrDefault()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTimeoutOrDefault()"
  },
  {
    "label": "SetActivityTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActivityTimeout(float InTimeoutSecs)"
  },
  {
    "label": "GetResponse()",
    "kind": "Method",
    "detail": "Function (const FHttpResponsePtr)",
    "insertText": "GetResponse()"
  },
  {
    "label": "FinishRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishRequest()"
  },
  {
    "label": "CancelRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelRequest()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "ProcessRequestUntilComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessRequestUntilComplete()"
  },
  {
    "label": "SetResponseBodyReceiveStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetResponseBodyReceiveStream(TSharedRef<FArchive> Stream)"
  },
  {
    "label": "GetElapsedTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetElapsedTime()"
  },
  {
    "label": "IsThreadedRequestComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsThreadedRequestComplete()"
  },
  {
    "label": "StartThreadedRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartThreadedRequest()"
  },
  {
    "label": "TickThreadedRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickThreadedRequest(float DeltaSeconds)"
  },
  {
    "label": "StartWaitingInQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartWaitingInQueue()"
  },
  {
    "label": "GetTimeStartedWaitingInQueue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTimeStartedWaitingInQueue()"
  },
  {
    "label": "PreProcess()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "PreProcess()"
  },
  {
    "label": "PostProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostProcess()"
  },
  {
    "label": "PopulateUserAgentHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateUserAgentHeader()"
  },
  {
    "label": "SetupRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupRequest()"
  },
  {
    "label": "PreCheck()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PreCheck()"
  },
  {
    "label": "ClearInCaseOfRetry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInCaseOfRetry()"
  },
  {
    "label": "SetStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStatus(EHttpRequestStatus::Type InCompletionStatus)"
  },
  {
    "label": "SetFailureReason()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFailureReason(EHttpFailureReason InFailureReason)"
  },
  {
    "label": "FinishRequestNotInHttpManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishRequestNotInHttpManager()"
  },
  {
    "label": "HandleRequestSucceed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRequestSucceed(TSharedPtr<IHttpResponse> InResponse)"
  },
  {
    "label": "HandleRequestFailed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRequestFailed(TSharedPtr<IHttpResponse> InResponse)"
  },
  {
    "label": "StartActivityTimeoutTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartActivityTimeoutTimer()"
  },
  {
    "label": "StartActivityTimeoutTimerBy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartActivityTimeoutTimerBy(double DelayToTrigger)"
  },
  {
    "label": "ResetActivityTimeoutTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetActivityTimeoutTimer(FStringView Reason)"
  },
  {
    "label": "OnActivityTimeoutTimerTaskTrigger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActivityTimeoutTimerTaskTrigger()"
  },
  {
    "label": "StopActivityTimeoutTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopActivityTimeoutTimer()"
  },
  {
    "label": "StartTotalTimeoutTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartTotalTimeoutTimer()"
  },
  {
    "label": "StopTotalTimeoutTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTotalTimeoutTimer()"
  },
  {
    "label": "OnTotalTimeoutTimerTaskTrigger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTotalTimeoutTimerTaskTrigger()"
  },
  {
    "label": "AbortRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortRequest()"
  },
  {
    "label": "CleanupRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupRequest()"
  },
  {
    "label": "HandleStatusCodeReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleStatusCodeReceived(int32 StatusCode)"
  },
  {
    "label": "TriggerStatusCodeReceivedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerStatusCodeReceivedDelegate(int32 StatusCode)"
  },
  {
    "label": "SetEffectiveURL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEffectiveURL(const FString& InEffectiveURL)"
  },
  {
    "label": "PassReceivedDataToStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassReceivedDataToStream(void* Ptr, int64 Length)"
  },
  {
    "label": "StopPassingReceivedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopPassingReceivedData()"
  },
  {
    "label": "GetActivityTimeoutOrDefault()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetActivityTimeoutOrDefault()"
  },
  {
    "label": "SetContentAsStreamedFileDefaultImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetContentAsStreamedFileDefaultImpl(const FString& Filename)"
  },
  {
    "label": "OpenRequestPayloadDefaultImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenRequestPayloadDefaultImpl()"
  },
  {
    "label": "CloseRequestPayloadDefaultImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseRequestPayloadDefaultImpl()"
  },
  {
    "label": "LogResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogResponse(const TSharedPtr<IHttpResponse>& InResponse)"
  },
  {
    "label": "WillTriggerMockFailure()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillTriggerMockFailure()"
  },
  {
    "label": "InitResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResponse()"
  },
  {
    "label": "CreateResponse()",
    "kind": "Method",
    "detail": "Function (FHttpResponsePtr)",
    "insertText": "CreateResponse()"
  },
  {
    "label": "MockResponseData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MockResponseData()"
  }
]