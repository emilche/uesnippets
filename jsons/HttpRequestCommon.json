[
  {
    "label": "FHttpResponseCommon",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHttpResponseCommon"
  },
  {
    "label": "IHttpTaskTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHttpTaskTimerHandle"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "FHttpRequestCommon()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FHttpRequestCommon()"
  },
  {
    "label": "StartWaitingInQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartWaitingInQueue()"
  },
  {
    "label": "PreProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PreProcess()"
  },
  {
    "label": "PostProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostProcess()"
  },
  {
    "label": "PopulateUserAgentHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateUserAgentHeader()"
  },
  {
    "label": "ClearInCaseOfRetry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInCaseOfRetry()"
  },
  {
    "label": "SetStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStatus(EHttpRequestStatus::Type InCompletionStatus)"
  },
  {
    "label": "SetFailureReason()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFailureReason(EHttpFailureReason InFailureReason)"
  },
  {
    "label": "FinishRequestNotInHttpManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishRequestNotInHttpManager()"
  },
  {
    "label": "HandleRequestSucceed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRequestSucceed(TSharedPtr<IHttpResponse> InResponse)"
  },
  {
    "label": "HandleRequestFailed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRequestFailed(TSharedPtr<IHttpResponse> InResponse)"
  },
  {
    "label": "StartActivityTimeoutTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartActivityTimeoutTimer()"
  },
  {
    "label": "StartActivityTimeoutTimerBy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartActivityTimeoutTimerBy(double DelayToTrigger)"
  },
  {
    "label": "ResetActivityTimeoutTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetActivityTimeoutTimer(FStringView Reason)"
  },
  {
    "label": "OnActivityTimeoutTimerTaskTrigger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActivityTimeoutTimerTaskTrigger()"
  },
  {
    "label": "StopActivityTimeoutTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopActivityTimeoutTimer()"
  },
  {
    "label": "StartTotalTimeoutTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartTotalTimeoutTimer()"
  },
  {
    "label": "StopTotalTimeoutTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTotalTimeoutTimer()"
  },
  {
    "label": "OnTotalTimeoutTimerTaskTrigger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTotalTimeoutTimerTaskTrigger()"
  },
  {
    "label": "HandleStatusCodeReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleStatusCodeReceived(int32 StatusCode)"
  },
  {
    "label": "TriggerStatusCodeReceivedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerStatusCodeReceivedDelegate(int32 StatusCode)"
  },
  {
    "label": "SetEffectiveURL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEffectiveURL(const FString& InEffectiveURL)"
  },
  {
    "label": "PassReceivedDataToStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassReceivedDataToStream(void* Ptr, int64 Length)"
  },
  {
    "label": "StopPassingReceivedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopPassingReceivedData()"
  },
  {
    "label": "SetContentAsStreamedFileDefaultImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetContentAsStreamedFileDefaultImpl(const FString& Filename)"
  },
  {
    "label": "OpenRequestPayloadDefaultImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenRequestPayloadDefaultImpl()"
  },
  {
    "label": "CloseRequestPayloadDefaultImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseRequestPayloadDefaultImpl()"
  },
  {
    "label": "LogResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogResponse(const TSharedPtr<IHttpResponse>& InResponse)"
  },
  {
    "label": "WillTriggerMockFailure()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillTriggerMockFailure()"
  },
  {
    "label": "InitResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResponse()"
  }
]