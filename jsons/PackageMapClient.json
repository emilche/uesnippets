[
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNetFieldExport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetFieldExport"
  },
  {
    "label": "FNetFieldExportGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetFieldExportGroup"
  },
  {
    "label": "FNetGuidCacheObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetGuidCacheObject"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FQueuedBunchObjectReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQueuedBunchObjectReference"
  },
  {
    "label": "FNetGUIDCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetGUIDCache"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FRefCountedNetGUIDArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRefCountedNetGUIDArray"
  },
  {
    "label": "FNetGUIDCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetGUIDCache"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "UPackageMapClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMapClient"
  },
  {
    "label": "FPendingAsyncLoadRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingAsyncLoadRequest"
  },
  {
    "label": "FIsOwnerOrPawnHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIsOwnerOrPawnHelper"
  },
  {
    "label": "UActorChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorChannel"
  },
  {
    "label": "FNetGUIDCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetGUIDCache"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FNetGUIDCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetGUIDCache"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "FPackageMapAckState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageMapAckState"
  },
  {
    "label": "UPackageMapClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMapClient"
  },
  {
    "label": "UActorChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorChannel"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FNetworkGUID NetGUID)"
  },
  {
    "label": "RemoveSwap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSwap(FNetworkGUID NetGUID)"
  },
  {
    "label": "FNetGUIDCache()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FNetGUIDCache( UNetDriver * InDriver )"
  },
  {
    "label": "CleanReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanReferences()"
  },
  {
    "label": "IsDynamicObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDynamicObject( const UObject* Object )"
  },
  {
    "label": "GetOrAssignNetGUID()",
    "kind": "Method",
    "detail": "Function (FNetworkGUID)",
    "insertText": "GetOrAssignNetGUID( UObject* Object, const TWeakObjectPtr<UObject>* WeakObjectPtr=nullptr /** Optional: pass in existing weakptr to prevent this function from constructing one internally */ )"
  },
  {
    "label": "AssignNewNetGUID_Server()",
    "kind": "Method",
    "detail": "Function (FNetworkGUID)",
    "insertText": "AssignNewNetGUID_Server( UObject* Object )"
  },
  {
    "label": "AssignNewNetGUIDFromPath_Server()",
    "kind": "Method",
    "detail": "Function (FNetworkGUID)",
    "insertText": "AssignNewNetGUIDFromPath_Server( const FString& PathName, UObject* ObjOuter, UClass* ObjClass )"
  },
  {
    "label": "RegisterNetGUID_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNetGUID_Internal( const FNetworkGUID& NetGUID, const FNetGuidCacheObject& CacheObject )"
  },
  {
    "label": "RegisterNetGUID_Server()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNetGUID_Server( const FNetworkGUID& NetGUID, UObject* Object )"
  },
  {
    "label": "RegisterNetGUID_Client()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNetGUID_Client( const FNetworkGUID& NetGUID, const UObject* Object )"
  },
  {
    "label": "RegisterNetGUIDFromPath_Client()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNetGUIDFromPath_Client( const FNetworkGUID& NetGUID, const FString& PathName, const FNetworkGUID& OuterGUID, const uint32 NetworkChecksum, const bool bNoLoad, const bool bIgnoreWhenMissing )"
  },
  {
    "label": "RegisterNetGUIDFromPath_Server()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNetGUIDFromPath_Server( const FNetworkGUID& NetGUID, const FString& PathName, const FNetworkGUID& OuterGUID, const uint32 NetworkChecksum, const bool bNoLoad, const bool bIgnoreWhenMissing )"
  },
  {
    "label": "GetClassNetworkChecksum()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetClassNetworkChecksum( UClass* Class )"
  },
  {
    "label": "GetNetworkChecksum()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNetworkChecksum( UObject* Obj )"
  },
  {
    "label": "SetNetworkChecksumMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetworkChecksumMode( const ENetworkChecksumMode NewMode )"
  },
  {
    "label": "SetAsyncLoadMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsyncLoadMode( const EAsyncLoadMode NewMode )"
  },
  {
    "label": "AsyncPackageCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncPackageCallback(const FName& PackageName, UPackage * Package, EAsyncLoadingResult::Type Result)"
  },
  {
    "label": "ResetCacheForDemo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCacheForDemo()"
  },
  {
    "label": "ConsumeAsyncLoadDelinquencyAnalytics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsumeAsyncLoadDelinquencyAnalytics(FNetAsyncLoadDelinquencyAnalytics& Out)"
  },
  {
    "label": "ResetAsyncLoadDelinquencyAnalytics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAsyncLoadDelinquencyAnalytics()"
  },
  {
    "label": "CollectReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectReferences(class FReferenceCollector& ReferenceCollector)"
  },
  {
    "label": "TrackQueuedBunchObjectReference()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FQueuedBunchObjectReference>)",
    "insertText": "TrackQueuedBunchObjectReference(const FNetworkGUID InNetGUID, UObject* InObject)"
  },
  {
    "label": "ReportSyncLoadedGUIDs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportSyncLoadedGUIDs()"
  },
  {
    "label": "ResetReplayDirtyTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetReplayDirtyTracking()"
  },
  {
    "label": "IsHistoryEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHistoryEnabled()"
  },
  {
    "label": "StartAsyncLoadingPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAsyncLoadingPackage(FNetGuidCacheObject& Object, const FNetworkGUID ObjectGUID, const bool bWasAlreadyAsyncLoading)"
  },
  {
    "label": "ValidateAsyncLoadingPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateAsyncLoadingPackage(FNetGuidCacheObject& Object, const FNetworkGUID ObjectGUID)"
  },
  {
    "label": "UpdateQueuedBunchObjectReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateQueuedBunchObjectReference(const FNetworkGUID NetGUID, UObject* NewObject)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UNetConnection * InConnection, TSharedPtr<FNetGUIDCache> InNetGUIDCache)"
  },
  {
    "label": "NetGUIDHasBeenAckd()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetGUIDHasBeenAckd(FNetworkGUID NetGUID)"
  },
  {
    "label": "ReceiveNetGUIDBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveNetGUIDBunch( FInBunch &InBunch )"
  },
  {
    "label": "AppendExportBunches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendExportBunches(TArray<FOutBunch *>& OutgoingBunches)"
  },
  {
    "label": "AppendExportData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendExportData(FArchive& Archive)"
  },
  {
    "label": "ReceiveExportData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveExportData(FArchive& Archive)"
  },
  {
    "label": "HandleUnAssignedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleUnAssignedObject( UObject* Obj )"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "SetHasQueuedBunches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasQueuedBunches( const FNetworkGUID& NetGUID, bool bHasQueuedBunches )"
  },
  {
    "label": "SyncPackageMapExportAckStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncPackageMapExportAckStatus( const UPackageMapClient* Source )"
  },
  {
    "label": "SavePackageMapExportAckStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePackageMapExportAckStatus( FPackageMapAckState& OutState )"
  },
  {
    "label": "RestorePackageMapExportAckStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestorePackageMapExportAckStatus( const FPackageMapAckState& InState )"
  },
  {
    "label": "OverridePackageMapExportAckStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverridePackageMapExportAckStatus( FPackageMapAckState* NewState )"
  },
  {
    "label": "ResetAckState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAckState()"
  },
  {
    "label": "AddNetFieldExportGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNetFieldExportGroup( const FString& PathName, TSharedPtr< FNetFieldExportGroup > NewNetFieldExportGroup )"
  },
  {
    "label": "TrackNetFieldExport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackNetFieldExport( FNetFieldExportGroup* NetFieldExportGroup, const int32 NetFieldExportHandle )"
  },
  {
    "label": "SerializeNetFieldExportGroupMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeNetFieldExportGroupMap( FArchive& Ar, bool bClearPendingExports=true )"
  },
  {
    "label": "SerializeNetFieldExportDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeNetFieldExportDelta(FArchive& Ar)"
  },
  {
    "label": "ReceiveCustomExportsBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveCustomExportsBunch(FInBunch& InBunch)"
  },
  {
    "label": "AppendNetFieldExports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendNetFieldExports( FArchive& Archive )"
  },
  {
    "label": "ReceiveNetFieldExports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveNetFieldExports( FArchive& Archive )"
  },
  {
    "label": "AppendNetFieldExportsInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendNetFieldExportsInternal( FArchive& Archive, const TSet<uint64>& InNetFieldExports, EAppendNetExportFlags Flags )"
  },
  {
    "label": "AppendNetExportGUIDs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendNetExportGUIDs( FArchive& Archive )"
  },
  {
    "label": "ReceiveNetExportGUIDs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveNetExportGUIDs( FArchive& Archive )"
  },
  {
    "label": "ExportNetGUIDForReplay()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportNetGUIDForReplay( FNetworkGUID&, UObject* Object, FString& PathName, UObject* ObjOuter )"
  },
  {
    "label": "ExportNetGUID()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportNetGUID( FNetworkGUID NetGUID, UObject* Object, FString PathName, UObject* ObjOuter )"
  },
  {
    "label": "ExportNetGUIDHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportNetGUIDHeader()"
  },
  {
    "label": "InternalWriteObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalWriteObject( FArchive& Ar, FNetworkGUID NetGUID, UObject* Object, FString ObjectPathName, UObject* ObjectOuter )"
  },
  {
    "label": "InternalLoadObject()",
    "kind": "Method",
    "detail": "Function (FNetworkGUID)",
    "insertText": "InternalLoadObject( FArchive & Ar, UObject *& Object, const int32 InternalLoadObjectRecursionCount )"
  },
  {
    "label": "ShouldSendFullPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldSendFullPath(const UObject* Object, const FNetworkGUID &NetGUID)"
  },
  {
    "label": "ReceiveNetFieldExportsCompat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveNetFieldExportsCompat(FInBunch& InBunch)"
  },
  {
    "label": "ReportSyncLoadsForActorSpawn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportSyncLoadsForActorSpawn(const AActor* Actor)"
  },
  {
    "label": "ConsumeQueuedActorDelinquencyAnalytics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsumeQueuedActorDelinquencyAnalytics(FNetQueuedActorDelinquencyAnalytics& Out)"
  },
  {
    "label": "ResetQueuedActorDelinquencyAnalytics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetQueuedActorDelinquencyAnalytics()"
  }
]