[
  {
    "label": "FAsyncCompilationNotification",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncCompilationNotification"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FQueuedThreadPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueuedThreadPool"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAnimSequenceCompilingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimSequenceCompilingManager"
  },
  {
    "label": "FAssetCompilingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetCompilingManager"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" IAssetCompilingManager . h \" # include \" Containers / Set . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / WeakObjectPtr . h \" class FAsyncCompilationNotification ; class UAnimSequence ; class USkeleton ; class FQueuedThreadPool ; enum class EQueuedWorkPriority : uint8 ; namespace UE::Anim { class FAnimSequenceCompilingManager : public IAssetCompilingManager { public : FAnimSequenceCompilingManager&)",
    "insertText": "Get()"
  },
  {
    "label": "FAnimSequenceCompilingManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimSequenceCompilingManager()"
  },
  {
    "label": "FinishAllCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishAllCompilation()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "GetAssetTypeName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetAssetTypeName()"
  },
  {
    "label": "GetAssetNameFormat()",
    "kind": "Method",
    "detail": "Function (FTextFormat)",
    "insertText": "GetAssetNameFormat()"
  },
  {
    "label": "GetDependentTypeNames()",
    "kind": "Method",
    "detail": "Function (TArrayView<FName>)",
    "insertText": "GetDependentTypeNames()"
  },
  {
    "label": "GetNumRemainingAssets()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumRemainingAssets()"
  },
  {
    "label": "GetThreadPool()",
    "kind": "Method",
    "detail": "Function (FQueuedThreadPool*)",
    "insertText": "GetThreadPool()"
  },
  {
    "label": "GetBasePriority()",
    "kind": "Method",
    "detail": "Function (EQueuedWorkPriority)",
    "insertText": "GetBasePriority(const UAnimSequence* InAnimSequence)"
  },
  {
    "label": "AddAnimSequences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimSequences(TArrayView<UAnimSequence* const> InAnimSequences)"
  },
  {
    "label": "FinishCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCompilation(TArrayView<UAnimSequence* const> InAnimSequences)"
  },
  {
    "label": "FinishCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCompilation(TArrayView<USkeleton* const> InSkeletons)"
  },
  {
    "label": "ProcessAsyncTasks()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ProcessAsyncTasks(bool bLimitExecutionTime = false)"
  },
  {
    "label": "ProcessAnimSequences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAnimSequences(bool bLimitExecutionTime, int32 MinBatchSize = 1)"
  },
  {
    "label": "PostCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostCompilation(TArrayView<UAnimSequence* const> InAnimSequences)"
  },
  {
    "label": "ApplyCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyCompilation(UAnimSequence* InAnimSequence)"
  },
  {
    "label": "UpdateCompilationNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCompilationNotification()"
  },
  {
    "label": "OnPostReachabilityAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostReachabilityAnalysis()"
  }
]