[
  {
    "label": "Base64Encode()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_BASE64_H_ # define BASE_BASE64_H_ # include<stdint . h> # include<string> # include<vector> # include \" base / base_export . h \" # include \" base / containers / span . h \" # include \" base / strings / string_piece . h \" # include \" third_party / abseil - cpp / absl / types / optional . h \" namespace base { BASE_EXPORT std::string)",
    "insertText": "Base64Encode(span<const uint8_t> input)"
  },
  {
    "label": "Base64EncodeAppend()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT void)",
    "insertText": "Base64EncodeAppend(span<const uint8_t> input, std::string* output)"
  },
  {
    "label": "Base64Encode()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT void)",
    "insertText": "Base64Encode(StringPiece input, std::string* output)"
  },
  {
    "label": "Base64Decode()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT bool)",
    "insertText": "Base64Decode(StringPiece input, std::string* output)"
  },
  {
    "label": "Base64Decode()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<std::vector<uint8_t>>)",
    "insertText": "Base64Decode(StringPiece input)"
  }
]