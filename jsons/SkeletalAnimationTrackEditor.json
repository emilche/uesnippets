[
  {
    "label": "ITrackExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITrackExtension"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FMovieSceneTimeWarpChannel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeWarpChannel"
  },
  {
    "label": "FMovieSceneSequenceTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceTransform"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FSequencerSectionPainter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerSectionPainter"
  },
  {
    "label": "UMovieSceneSkeletalAnimationSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSkeletalAnimationSection"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "UAnimSeqExportOption",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSeqExportOption"
  },
  {
    "label": "FSkeletalAnimationTrackEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalAnimationTrackEditor"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "FMovieSceneSkeletalAnimationParamsDetailCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneSkeletalAnimationParamsDetailCustomization"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FSkeletalAnimationSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalAnimationSection"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FSkeletalAnimationTrackEditor\")"
  },
  {
    "label": "CreateTrackEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISequencerTrackEditor>)",
    "insertText": "CreateTrackEditor( TSharedRef<ISequencer> OwningSequencer )"
  },
  {
    "label": "BuildAddAnimationSubMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildAddAnimationSubMenu(FGuid ObjectBinding, USkeleton* Skeleton, UE::Sequencer::TWeakViewModelPtr<UE::Sequencer::ITrackExtension> TrackModel)"
  },
  {
    "label": "BuildAnimationSubMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildAnimationSubMenu(FGuid ObjectBinding, USkeleton* Skeleton, UMovieSceneTrack* Track)"
  },
  {
    "label": "AddAnimationSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimationSubMenu(FMenuBuilder& MenuBuilder, TArray<FGuid> ObjectBindings, USkeleton* Skeleton, UMovieSceneTrack* Track)"
  },
  {
    "label": "FilterAnimSequences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FilterAnimSequences(const FAssetData& AssetData, USkeleton* Skeleton)"
  },
  {
    "label": "ShouldFilterAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldFilterAsset(const FAssetData& AssetData)"
  },
  {
    "label": "OnAnimationAssetSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnimationAssetSelected(const FAssetData& AssetData, TArray<FGuid> ObjectBindings, UMovieSceneTrack* Track)"
  },
  {
    "label": "OnAnimationAssetEnterPressed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnimationAssetEnterPressed(const TArray<FAssetData>& AssetData, TArray<FGuid> ObjectBindings, UMovieSceneTrack* Track)"
  },
  {
    "label": "AddKeyInternal()",
    "kind": "Method",
    "detail": "Function (FKeyPropertyResult)",
    "insertText": "AddKeyInternal(FFrameNumber KeyTime, UObject* Object, class UAnimSequenceBase* AnimSequence, UMovieSceneTrack* Track, int32 RowIndex)"
  },
  {
    "label": "ConstructObjectBindingTrackMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructObjectBindingTrackMenu(FMenuBuilder& MenuBuilder, TArray<FGuid> ObjectBindings)"
  },
  {
    "label": "HandleCreateAnimationSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCreateAnimationSequence(USkeletalMeshComponent* SkelMeshComp, USkeleton* Skeleton, FGuid Binding, bool bCeateSoftLink)"
  },
  {
    "label": "CreateAnimationSequence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateAnimationSequence(const TArray<UObject*> NewAssets,USkeletalMeshComponent* SkelMeshComp, FGuid Binding, bool bCreateSoftLink)"
  },
  {
    "label": "OpenLinkedAnimSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenLinkedAnimSequence(FGuid Binding)"
  },
  {
    "label": "CanOpenLinkedAnimSequence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanOpenLinkedAnimSequence(FGuid Binding)"
  },
  {
    "label": "BuildTrackContextMenu_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTrackContextMenu_Internal(FMenuBuilder& MenuBuilder, UMovieSceneTrack* const InTrack, const bool bAddSeparatorAtEnd)"
  },
  {
    "label": "CreatePoseAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreatePoseAsset(const TArray<UObject*> NewAssets, FGuid InObjectBinding)"
  },
  {
    "label": "HandleCreatePoseAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCreatePoseAsset(FGuid InObjectBinding)"
  },
  {
    "label": "OnSequencerSaved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSequencerSaved(ISequencer& InSequence)"
  },
  {
    "label": "OnSequencerDataChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSequencerDataChanged(EMovieSceneDataChangeType DataChangeType)"
  },
  {
    "label": "OnPostPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostPropertyChanged(UObject* InObject, struct FPropertyChangedEvent& InPropertyChangedEvent)"
  },
  {
    "label": "FindBestBlendSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindBestBlendSection(FGuid InObjectBinding)"
  }
]