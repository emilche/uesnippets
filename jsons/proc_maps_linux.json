[
  {
    "label": "MappedMemoryRegion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MappedMemoryRegion"
  },
  {
    "label": "Permission",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Permission"
  },
  {
    "label": "ReadProcMaps()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_DEBUG_PROC_MAPS_LINUX_H_ # define BASE_DEBUG_PROC_MAPS_LINUX_H_ # include<stdint . h> # include<string> # include<vector> # include \" base / base_export . h \" namespace base { namespace debug { struct MappedMemoryRegion { enum Permission { READ = 1<<0,WRITE = 1<<1,EXECUTE = 1<<2,PRIVATE = 1<<3,} ; uintptr_t start ; uintptr_t end ; unsigned long long offset ; uintptr_t base ; uint8_t permissions ; std::string path ; } ; BASE_EXPORT bool)",
    "insertText": "ReadProcMaps(std::string* proc_maps)"
  },
  {
    "label": "ParseProcMaps()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT bool)",
    "insertText": "ParseProcMaps(const std::string& input, std::vector<MappedMemoryRegion>* regions)"
  }
]