[
  {
    "label": "_SDL_Joystick",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_SDL_Joystick"
  },
  {
    "label": "SDL_VirtualJoystickDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_VirtualJoystickDesc"
  },
  {
    "label": "SDL_LockJoysticks()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_joystick_h_ # define SDL_joystick_h_ # include \" SDL_stdinc . h \" # include \" SDL_error . h \" # include \" SDL_guid . h \" # include \" SDL_mutex . h \" # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif # ifdef SDL_THREAD_SAFETY_ANALYSIS SDL_mutex* SDL_joystick_lock ; # endif struct _SDL_Joystick ; typedef struct _SDL_Joystick SDL_Joystick ; typedef SDL_GUID SDL_JoystickGUID ; typedef Sint32 SDL_JoystickID ; typedef enum { SDL_JOYSTICK_TYPE_UNKNOWN,SDL_JOYSTICK_TYPE_GAMECONTROLLER,SDL_JOYSTICK_TYPE_WHEEL,SDL_JOYSTICK_TYPE_ARCADE_STICK,SDL_JOYSTICK_TYPE_FLIGHT_STICK,SDL_JOYSTICK_TYPE_DANCE_PAD,SDL_JOYSTICK_TYPE_GUITAR,SDL_JOYSTICK_TYPE_DRUM_KIT,SDL_JOYSTICK_TYPE_ARCADE_PAD,SDL_JOYSTICK_TYPE_THROTTLE } SDL_JoystickType ; typedef enum { SDL_JOYSTICK_POWER_UNKNOWN = - 1,SDL_JOYSTICK_POWER_EMPTY,SDL_JOYSTICK_POWER_LOW,SDL_JOYSTICK_POWER_MEDIUM,SDL_JOYSTICK_POWER_FULL,SDL_JOYSTICK_POWER_WIRED,SDL_JOYSTICK_POWER_MAX } SDL_JoystickPowerLevel ; # define SDL_IPHONE_MAX_GFORCE 5 . 0 DECLSPEC void SDLCALL)",
    "insertText": "SDL_LockJoysticks(void) SDL_ACQUIRE(SDL_joystick_lock)"
  },
  {
    "label": "SDL_UnlockJoysticks()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_UnlockJoysticks(void) SDL_RELEASE(SDL_joystick_lock)"
  },
  {
    "label": "SDL_NumJoysticks()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_NumJoysticks(void)"
  },
  {
    "label": "SDL_JoystickNameForIndex()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_JoystickNameForIndex(int device_index)"
  },
  {
    "label": "SDL_JoystickPathForIndex()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_JoystickPathForIndex(int device_index)"
  },
  {
    "label": "SDL_JoystickGetDevicePlayerIndex()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickGetDevicePlayerIndex(int device_index)"
  },
  {
    "label": "SDL_JoystickGetDeviceGUID()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_JoystickGUID SDLCALL)",
    "insertText": "SDL_JoystickGetDeviceGUID(int device_index)"
  },
  {
    "label": "SDL_JoystickGetDeviceVendor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint16 SDLCALL)",
    "insertText": "SDL_JoystickGetDeviceVendor(int device_index)"
  },
  {
    "label": "SDL_JoystickGetDeviceProduct()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint16 SDLCALL)",
    "insertText": "SDL_JoystickGetDeviceProduct(int device_index)"
  },
  {
    "label": "SDL_JoystickGetDeviceProductVersion()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint16 SDLCALL)",
    "insertText": "SDL_JoystickGetDeviceProductVersion(int device_index)"
  },
  {
    "label": "SDL_JoystickGetDeviceType()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_JoystickType SDLCALL)",
    "insertText": "SDL_JoystickGetDeviceType(int device_index)"
  },
  {
    "label": "SDL_JoystickGetDeviceInstanceID()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_JoystickID SDLCALL)",
    "insertText": "SDL_JoystickGetDeviceInstanceID(int device_index)"
  },
  {
    "label": "SDL_JoystickOpen()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Joystick* SDLCALL)",
    "insertText": "SDL_JoystickOpen(int device_index)"
  },
  {
    "label": "SDL_JoystickFromInstanceID()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Joystick* SDLCALL)",
    "insertText": "SDL_JoystickFromInstanceID(SDL_JoystickID instance_id)"
  },
  {
    "label": "SDL_JoystickFromPlayerIndex()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Joystick* SDLCALL)",
    "insertText": "SDL_JoystickFromPlayerIndex(int player_index)"
  },
  {
    "label": "SDL_JoystickAttachVirtual()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickAttachVirtual(SDL_JoystickType type, int naxes, int nbuttons, int nhats)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef struct SDL_VirtualJoystickDesc { Uint16 version ; Uint16 type ; Uint16 naxes ; Uint16 nbuttons ; Uint16 nhats ; Uint16 vendor_id ; Uint16 product_id ; Uint16 padding ; Uint32 button_mask ; Uint32 axis_mask ; const char* name ; void* userdata ;)",
    "insertText": "void(SDLCALL *Update)(void *userdata)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(SDLCALL *SetPlayerIndex)(void *userdata, int player_index)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(SDLCALL *Rumble)(void *userdata, Uint16 low_frequency_rumble, Uint16 high_frequency_rumble)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(SDLCALL *RumbleTriggers)(void *userdata, Uint16 left_rumble, Uint16 right_rumble)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(SDLCALL *SetLED)(void *userdata, Uint8 red, Uint8 green, Uint8 blue)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(SDLCALL *SendEffect)(void *userdata, const void *data, int size)"
  },
  {
    "label": "SDL_JoystickAttachVirtualEx()",
    "kind": "Method",
    "detail": "Function (} SDL_VirtualJoystickDesc ; # define SDL_VIRTUAL_JOYSTICK_DESC_VERSION 1 DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickAttachVirtualEx(const SDL_VirtualJoystickDesc *desc)"
  },
  {
    "label": "SDL_JoystickDetachVirtual()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickDetachVirtual(int device_index)"
  },
  {
    "label": "SDL_JoystickIsVirtual()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_JoystickIsVirtual(int device_index)"
  },
  {
    "label": "SDL_JoystickSetVirtualAxis()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickSetVirtualAxis(SDL_Joystick *joystick, int axis, Sint16 value)"
  },
  {
    "label": "SDL_JoystickSetVirtualButton()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickSetVirtualButton(SDL_Joystick *joystick, int button, Uint8 value)"
  },
  {
    "label": "SDL_JoystickSetVirtualHat()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickSetVirtualHat(SDL_Joystick *joystick, int hat, Uint8 value)"
  },
  {
    "label": "SDL_JoystickName()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_JoystickName(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickPath()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_JoystickPath(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickGetPlayerIndex()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickGetPlayerIndex(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickSetPlayerIndex()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_JoystickSetPlayerIndex(SDL_Joystick *joystick, int player_index)"
  },
  {
    "label": "SDL_JoystickGetGUID()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_JoystickGUID SDLCALL)",
    "insertText": "SDL_JoystickGetGUID(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickGetVendor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint16 SDLCALL)",
    "insertText": "SDL_JoystickGetVendor(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickGetProduct()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint16 SDLCALL)",
    "insertText": "SDL_JoystickGetProduct(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickGetProductVersion()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint16 SDLCALL)",
    "insertText": "SDL_JoystickGetProductVersion(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickGetFirmwareVersion()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint16 SDLCALL)",
    "insertText": "SDL_JoystickGetFirmwareVersion(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickGetSerial()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_JoystickGetSerial(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickGetType()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_JoystickType SDLCALL)",
    "insertText": "SDL_JoystickGetType(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickGetGUIDString()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_JoystickGetGUIDString(SDL_JoystickGUID guid, char *pszGUID, int cbGUID)"
  },
  {
    "label": "SDL_JoystickGetGUIDFromString()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_JoystickGUID SDLCALL)",
    "insertText": "SDL_JoystickGetGUIDFromString(const char *pchGUID)"
  },
  {
    "label": "SDL_GetJoystickGUIDInfo()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_GetJoystickGUIDInfo(SDL_JoystickGUID guid, Uint16 *vendor, Uint16 *product, Uint16 *version, Uint16 *crc16)"
  },
  {
    "label": "SDL_JoystickGetAttached()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_JoystickGetAttached(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickInstanceID()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_JoystickID SDLCALL)",
    "insertText": "SDL_JoystickInstanceID(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickNumAxes()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickNumAxes(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickNumBalls()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickNumBalls(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickNumHats()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickNumHats(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickNumButtons()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickNumButtons(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickUpdate()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_JoystickUpdate(void)"
  },
  {
    "label": "SDL_JoystickEventState()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickEventState(int state)"
  },
  {
    "label": "SDL_JoystickGetAxis()",
    "kind": "Method",
    "detail": "Function (# define SDL_JOYSTICK_AXIS_MAX 3 2 7 6 7 # define SDL_JOYSTICK_AXIS_MIN - 3 2 7 6 8 DECLSPEC Sint16 SDLCALL)",
    "insertText": "SDL_JoystickGetAxis(SDL_Joystick *joystick, int axis)"
  },
  {
    "label": "SDL_JoystickGetAxisInitialState()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_JoystickGetAxisInitialState(SDL_Joystick *joystick, int axis, Sint16 *state)"
  },
  {
    "label": "SDL_HAT_RIGHTUP()",
    "kind": "Method",
    "detail": "Function (# define SDL_HAT_CENTERED 0 x00 # define SDL_HAT_UP 0 x01 # define SDL_HAT_RIGHT 0 x02 # define SDL_HAT_DOWN 0 x04 # define SDL_HAT_LEFT 0 x08 # define)",
    "insertText": "SDL_HAT_RIGHTUP(SDL_HAT_RIGHT|SDL_HAT_UP) #define SDL_HAT_RIGHTDOWN (SDL_HAT_RIGHT|SDL_HAT_DOWN) #define SDL_HAT_LEFTUP (SDL_HAT_LEFT|SDL_HAT_UP) #define SDL_HAT_LEFTDOWN (SDL_HAT_LEFT|SDL_HAT_DOWN) extern DECLSPEC Uint8 SDLCALL SDL_JoystickGetHat(SDL_Joystick *joystick, int hat)"
  },
  {
    "label": "SDL_JoystickGetBall()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickGetBall(SDL_Joystick *joystick, int ball, int *dx, int *dy)"
  },
  {
    "label": "SDL_JoystickGetButton()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint8 SDLCALL)",
    "insertText": "SDL_JoystickGetButton(SDL_Joystick *joystick, int button)"
  },
  {
    "label": "SDL_JoystickRumble()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickRumble(SDL_Joystick *joystick, Uint16 low_frequency_rumble, Uint16 high_frequency_rumble, Uint32 duration_ms)"
  },
  {
    "label": "SDL_JoystickRumbleTriggers()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickRumbleTriggers(SDL_Joystick *joystick, Uint16 left_rumble, Uint16 right_rumble, Uint32 duration_ms)"
  },
  {
    "label": "SDL_JoystickHasLED()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_JoystickHasLED(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickHasRumble()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_JoystickHasRumble(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickHasRumbleTriggers()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_JoystickHasRumbleTriggers(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickSetLED()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickSetLED(SDL_Joystick *joystick, Uint8 red, Uint8 green, Uint8 blue)"
  },
  {
    "label": "SDL_JoystickSendEffect()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_JoystickSendEffect(SDL_Joystick *joystick, const void *data, int size)"
  },
  {
    "label": "SDL_JoystickClose()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_JoystickClose(SDL_Joystick *joystick)"
  },
  {
    "label": "SDL_JoystickCurrentPowerLevel()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_JoystickPowerLevel SDLCALL)",
    "insertText": "SDL_JoystickCurrentPowerLevel(SDL_Joystick *joystick)"
  }
]