[
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBox"
  },
  {
    "label": "SStandaloneAssetEditorToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SStandaloneAssetEditorToolkitHost"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkit"
  },
  {
    "label": "FWidgetDrawerConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetDrawerConfig"
  },
  {
    "label": "FAssetEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorToolkit"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Framework / Docking / TabManager . h \" # include \" Toolkits / IToolkit . h \" # include \" Toolkits / IToolkitHost . h \" # include \" Toolkits / AssetEditorToolkit . h \" class SBorder ; class SBox ; class SStandaloneAssetEditorToolkitHost : public IToolkitHost,public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SStandaloneAssetEditorToolkitHost)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FRequestAssetEditorClose, OnRequestClose) SLATE_EVENT(FAssetEditorClosing, OnClose) SLATE_END_ARGS() void Construct( const FArguments& InArgs, const TSharedPtr<FTabManager>& InTabManager, const FName InitAppName)"
  },
  {
    "label": "SetupInitialContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupInitialContent(const TSharedRef<FTabManager::FLayout>& DefaultLayout, const TSharedPtr<SDockTab>& InHostTab, const bool bCreateDefaultStandaloneMenu)"
  },
  {
    "label": "SStandaloneAssetEditorToolkitHost()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SStandaloneAssetEditorToolkitHost()"
  },
  {
    "label": "GetParentWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SWidget>)",
    "insertText": "GetParentWidget()"
  },
  {
    "label": "BringToFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BringToFront()"
  },
  {
    "label": "GetTabManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class FTabManager>)",
    "insertText": "GetTabManager()"
  },
  {
    "label": "OnToolkitHostingFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolkitHostingFinished(const TSharedRef< class IToolkit >& Toolkit)"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetWorld()"
  },
  {
    "label": "GetCommonActions()",
    "kind": "Method",
    "detail": "Function (UTypedElementCommonActions*)",
    "insertText": "GetCommonActions()"
  },
  {
    "label": "GetStatusBarName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetStatusBarName()"
  },
  {
    "label": "RemoveViewportOverlayWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveViewportOverlayWidget(TSharedRef<SWidget> InOverlaidWidget, TSharedPtr<IAssetViewport> InViewport = nullptr)"
  },
  {
    "label": "OnActiveViewportChanged()",
    "kind": "Method",
    "detail": "Function (FOnActiveViewportChanged&)",
    "insertText": "OnActiveViewportChanged()"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "RestoreFromLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreFromLayout(const TSharedRef<FTabManager::FLayout>& NewLayout)"
  },
  {
    "label": "GenerateMenus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateMenus(bool bForceCreateMenu)"
  },
  {
    "label": "GetMenuExtenders()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FExtender>>&)",
    "insertText": "GetMenuExtenders()"
  },
  {
    "label": "SetToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToolbar(TSharedPtr<SWidget> Toolbar)"
  },
  {
    "label": "RegisterDrawer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDrawer(struct FWidgetDrawerConfig&& Drawer, int32 SlotIndex = INDEX_NONE)"
  },
  {
    "label": "GetEditorModeManager()",
    "kind": "Method",
    "detail": "Function (FEditorModeTools&)",
    "insertText": "GetEditorModeManager()"
  },
  {
    "label": "BindEditorCloseRequestToHostTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindEditorCloseRequestToHostTab()"
  },
  {
    "label": "UnbindEditorCloseRequestFromHostTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnbindEditorCloseRequestFromHostTab()"
  },
  {
    "label": "OnTabClosed()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnTabClosed(TSharedRef<SDockTab> TabClosed)"
  },
  {
    "label": "ShutdownToolkitHost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownToolkitHost()"
  },
  {
    "label": "GetMenuName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetMenuName()"
  }
]