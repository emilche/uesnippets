[
  {
    "label": "RegisterRegAlloc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RegisterRegAlloc"
  },
  {
    "label": "FunctionPass()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_CODEGEN_REGALLOCREGISTRY_H # define LLVM_CODEGEN_REGALLOCREGISTRY_H # include \" llvm / CodeGen / MachinePassRegistry . h \" namespace llvm { class RegisterRegAlloc : public MachinePassRegistryNode { public : typedef)",
    "insertText": "FunctionPass(*FunctionPassCtor)()"
  },
  {
    "label": "RegisterRegAlloc()",
    "kind": "Method",
    "detail": "Function (MachinePassRegistry Registry ;)",
    "insertText": "RegisterRegAlloc(const char *N, const char *D, FunctionPassCtor C) : MachinePassRegistryNode(N, D, (MachinePassCtor)C)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Registry .)",
    "insertText": "Add(this)"
  },
  {
    "label": "RegisterRegAlloc()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "RegisterRegAlloc()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (Registry .)",
    "insertText": "Remove(this)"
  },
  {
    "label": "getNext()",
    "kind": "Method",
    "detail": "Function (} RegisterRegAlloc*)",
    "insertText": "getNext()"
  },
  {
    "label": "getList()",
    "kind": "Method",
    "detail": "Function (} RegisterRegAlloc*)",
    "insertText": "getList()"
  },
  {
    "label": "getDefault()",
    "kind": "Method",
    "detail": "Function (} FunctionPassCtor)",
    "insertText": "getDefault()"
  },
  {
    "label": "setDefault()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setDefault(FunctionPassCtor C)"
  },
  {
    "label": "setDefault()",
    "kind": "Method",
    "detail": "Function (Registry .)",
    "insertText": "setDefault((MachinePassCtor)C)"
  },
  {
    "label": "setListener()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setListener(MachinePassRegistryListener *L)"
  },
  {
    "label": "setListener()",
    "kind": "Method",
    "detail": "Function (Registry .)",
    "insertText": "setListener(L)"
  }
]