[
  {
    "label": "FMassEntityManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassEntityManager"
  },
  {
    "label": "FMassArchetypeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassArchetypeData"
  },
  {
    "label": "FMassArchetypeHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassArchetypeHandle"
  },
  {
    "label": "MASSENTITY_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MASSENTITY_API"
  },
  {
    "label": "doesn",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "doesn"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MassArchetypeTypes . h \" # include \" StructUtils / InstancedStruct . h \" # include \" MassEntityView . generated . h \" struct FMassEntityManager ; struct FMassArchetypeData ; struct FMassArchetypeHandle ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMassEntityView()"
  },
  {
    "label": "FMassEntityView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMassEntityView(const FMassArchetypeHandle& ArchetypeHandle, FMassEntityHandle Entity)"
  },
  {
    "label": "FMassEntityView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMassEntityView(const FMassEntityManager& EntityManager, FMassEntityHandle Entity)"
  },
  {
    "label": "TryMakeView()",
    "kind": "Method",
    "detail": "Function (FMassEntityView)",
    "insertText": "TryMakeView(const FMassEntityManager& EntityManager, FMassEntityHandle Entity)"
  },
  {
    "label": "GetEntity()",
    "kind": "Method",
    "detail": "Function (FMassEntityHandle)",
    "insertText": "GetEntity()"
  },
  {
    "label": "GetFragmentDataPtr()",
    "kind": "Method",
    "detail": "Function (} template<T> T*)",
    "insertText": "GetFragmentDataPtr()"
  },
  {
    "label": "GetFragmentDataStruct()",
    "kind": "Method",
    "detail": "Function (} FStructView)",
    "insertText": "GetFragmentDataStruct(const UScriptStruct* FragmentType)"
  },
  {
    "label": "GetConstSharedFragmentDataPtr()",
    "kind": "Method",
    "detail": "Function (} template<T> const T*)",
    "insertText": "GetConstSharedFragmentDataPtr()"
  },
  {
    "label": "GetConstSharedFragmentData()",
    "kind": "Method",
    "detail": "Function (} template<T> const T&)",
    "insertText": "GetConstSharedFragmentData()"
  },
  {
    "label": "GetConstSharedFragmentDataStruct()",
    "kind": "Method",
    "detail": "Function (} FConstStructView)",
    "insertText": "GetConstSharedFragmentDataStruct(const UScriptStruct* FragmentType)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<T)",
    "insertText": "UE_REQUIRES(std::is_base_of_v<FMassSharedFragment, T>)> T& GetSharedFragmentData()"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<T)",
    "insertText": "UE_REQUIRES(std::is_base_of_v<FMassSharedFragment, T>)> T* GetSharedFragmentDataPtr()"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<T)",
    "insertText": "UE_REQUIRES(std::is_base_of_v<FMassConstSharedFragment, T>)> UE_DEPRECATED(5.5, \"Using GetSharedFragmentDataPtr with const shared fragments is deprecated. Use GetConstSharedFragmentDataPtr instead\") T* GetSharedFragmentDataPtr()"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<T)",
    "insertText": "UE_REQUIRES(std::is_base_of_v<FMassConstSharedFragment, T>)> UE_DEPRECATED(5.5, \"Using GetSharedFragmentDataPtr with const shared fragments is deprecated. Use GetConstSharedFragmentData instead\") T& GetSharedFragmentData()"
  },
  {
    "label": "GetSharedFragmentDataStruct()",
    "kind": "Method",
    "detail": "Function (} FStructView)",
    "insertText": "GetSharedFragmentDataStruct(const UScriptStruct* FragmentType)"
  },
  {
    "label": "HasTag()",
    "kind": "Method",
    "detail": "Function (} template<T> bool)",
    "insertText": "HasTag()"
  },
  {
    "label": "HasTag()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasTag(const UScriptStruct& TagType)"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSet()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FMassEntityView& Other)"
  },
  {
    "label": "GetFragmentPtrChecked()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetFragmentPtrChecked(const UScriptStruct& FragmentType)"
  },
  {
    "label": "GetConstSharedFragmentPtr()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "GetConstSharedFragmentPtr(const UScriptStruct& FragmentType)"
  },
  {
    "label": "GetConstSharedFragmentPtrChecked()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "GetConstSharedFragmentPtrChecked(const UScriptStruct& FragmentType)"
  },
  {
    "label": "GetSharedFragmentPtr()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetSharedFragmentPtr(const UScriptStruct& FragmentType)"
  },
  {
    "label": "GetSharedFragmentPtrChecked()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetSharedFragmentPtrChecked(const UScriptStruct& FragmentType)"
  }
]