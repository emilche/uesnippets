[
  {
    "label": "TInternalNetSerializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TInternalNetSerializer"
  },
  {
    "label": "ConstructNetSerializer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Iris / Serialization / NetSerializer . h \" # include \" Iris / Serialization / InternalNetSerializerBuilder . h \" namespace UE::Net::Private { template<NetSerializerImpl> class TInternalNetSerializer final { public : FNetSerializer)",
    "insertText": "ConstructNetSerializer(const TCHAR* Name)"
  },
  {
    "label": "ConstructNetSerializer()",
    "kind": "Method",
    "detail": "Function (FNetSerializer Serializer = TNetSerializer<NetSerializerImpl)",
    "insertText": "ConstructNetSerializer(Name)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (TInternalNetSerializerBuilder<NetSerializerImpl> Builder ; Builder .)",
    "insertText": "Validate()"
  },
  {
    "label": "GetTraits()",
    "kind": "Method",
    "detail": "Function (Serializer . Traits | = Builder .)",
    "insertText": "GetTraits()"
  },
  {
    "label": "GetQuantizedTypeSize()",
    "kind": "Method",
    "detail": "Function (\\ uint32 SerializerName # #)",
    "insertText": "GetQuantizedTypeSize()"
  },
  {
    "label": "GetQuantizedTypeAlignment()",
    "kind": "Method",
    "detail": "Function (} ; \\ uint32 SerializerName # #)",
    "insertText": "GetQuantizedTypeAlignment()"
  },
  {
    "label": "GetDefaultConfig()",
    "kind": "Method",
    "detail": "Function (} ; \\ const FNetSerializerConfig* SerializerName # #)",
    "insertText": "GetDefaultConfig()"
  }
]