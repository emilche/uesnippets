[
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "AnnexBBufferReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AnnexBBufferReader"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "AvccBufferWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AvccBufferWriter"
  },
  {
    "label": "H264CMSampleBufferToAnnexBBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "H264CMSampleBufferToAnnexBBuffer(CMSampleBufferRef avcc_sample_buffer,\n                                      bool is_keyframe,\n                                      rtc::Buffer* annexb_buffer)"
  },
  {
    "label": "H264AnnexBBufferToCMSampleBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "H264AnnexBBufferToCMSampleBuffer(const uint8_t* annexb_buffer,\n                                      size_t annexb_buffer_size,\n                                      CMVideoFormatDescriptionRef video_format,\n                                      CMSampleBufferRef* out_sample_buffer,\n                                      CMMemoryPoolRef memory_pool)"
  },
  {
    "label": "CreateVideoFormatDescription()",
    "kind": "Method",
    "detail": "Function (CMVideoFormatDescriptionRef)",
    "insertText": "CreateVideoFormatDescription(\n    const uint8_t* annexb_buffer,\n    size_t annexb_buffer_size)"
  },
  {
    "label": "AnnexBBufferReader()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "AnnexBBufferReader(const uint8_t* annexb_buffer, size_t length)"
  },
  {
    "label": "ReadNalu()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadNalu(const uint8_t** out_nalu, size_t* out_length)"
  },
  {
    "label": "SeekToStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SeekToStart()"
  },
  {
    "label": "SeekToNextNaluOfType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SeekToNextNaluOfType(H264::NaluType type)"
  },
  {
    "label": "AvccBufferWriter()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "AvccBufferWriter(uint8_t* const avcc_buffer, size_t length)"
  },
  {
    "label": "WriteNalu()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteNalu(const uint8_t* data, size_t data_size)"
  }
]