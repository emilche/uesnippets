[
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexBuffer"
  },
  {
    "label": "FDynamicReadBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicReadBuffer"
  },
  {
    "label": "FShaderCompilerEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderCompilerEnvironment"
  },
  {
    "label": "FMeshParticleInstanceVertices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshParticleInstanceVertices"
  },
  {
    "label": "FMeshParticleVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshParticleVertexFactory"
  },
  {
    "label": "FDataType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataType"
  },
  {
    "label": "FBatchParametersCPU",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBatchParametersCPU"
  },
  {
    "label": "FMeshParticleInstanceVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshParticleInstanceVertex"
  },
  {
    "label": "FMeshParticleInstanceVertexDynamicParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshParticleInstanceVertexDynamicParameter"
  },
  {
    "label": "FMeshParticleInstanceVertexPrevTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshParticleInstanceVertexPrevTransform"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RHI . h \" # include \" UniformBuffer . h \" # include \" VertexFactory . h \" # include \" Components . h \" # include \" SceneManagement . h \" # include \" VertexFactory . h \" # include \" ParticleVertexFactory . h \" class FMaterial ; class FVertexBuffer ; struct FDynamicReadBuffer ; struct FShaderCompilerEnvironment ;)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FMeshParticleUniformParameters, ENGINE_API) SHADER_PARAMETER( FVector4f, SubImageSize ) SHADER_PARAMETER( uint32, TexCoordWeightA ) SHADER_PARAMETER( uint32, TexCoordWeightB ) SHADER_PARAMETER( uint32, PrevTransformAvailable ) SHADER_PARAMETER( float, DeltaSeconds ) SHADER_PARAMETER( uint32, bUseLocalSpace ) SHADER_PARAMETER( FVector3f, LWCTile ) SHADER_PARAMETER( float, UseVelocityForMotionBlur ) END_GLOBAL_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "DECLARE_VERTEX_FACTORY_TYPE()",
    "kind": "Method",
    "detail": "Function (class FMeshParticleInstanceVertices ; class FMeshParticleVertexFactory : public FParticleVertexFactoryBase {)",
    "insertText": "DECLARE_VERTEX_FACTORY_TYPE(FMeshParticleVertexFactory)"
  },
  {
    "label": "FMeshParticleVertexFactory()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FMeshParticleVertexFactory(ERHIFeatureLevel::Type InFeatureLevel) : FParticleVertexFactoryBase(InFeatureLevel)"
  },
  {
    "label": "FDataType()",
    "kind": "Method",
    "detail": "Function (} struct FDataType : public FStaticMeshDataType { FVertexStreamComponent ParticleColorComponent ; FVertexStreamComponent TransformComponent [ 3 ] ; FVertexStreamComponent VelocityComponent ; FVertexStreamComponent SubUVs ; FVertexStreamComponent SubUVLerpAndRelTime ; bool bInitialized ;)",
    "insertText": "FDataType() : bInitialized(false)"
  },
  {
    "label": "FMeshParticleVertexFactory()",
    "kind": "Method",
    "detail": "Function (} } ; class FBatchParametersCPU : public FOneFrameResource { public : const struct FMeshParticleInstanceVertex* InstanceBuffer ; const struct FMeshParticleInstanceVertexDynamicParameter* DynamicParameterBuffer ; const struct FMeshParticleInstanceVertexPrevTransform* PrevTransformBuffer ; } ;)",
    "insertText": "FMeshParticleVertexFactory(EParticleVertexFactoryType InType, ERHIFeatureLevel::Type InFeatureLevel, int32 InDynamicVertexStride, int32 InDynamicParameterVertexStride) : FParticleVertexFactoryBase(InType, InFeatureLevel) , LODIdx(0xff) , DynamicVertexStride(InDynamicVertexStride) , DynamicParameterVertexStride(InDynamicParameterVertexStride) , InstanceVerticesCPU(nullptr)"
  },
  {
    "label": "FMeshParticleVertexFactory()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMeshParticleVertexFactory() : FParticleVertexFactoryBase(PVFT_MAX, ERHIFeatureLevel::Num) , LODIdx(0xff) , DynamicVertexStride(-1) , DynamicParameterVertexStride(-1) , InstanceVerticesCPU(nullptr)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "GetPSOPrecacheVertexFetchElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPSOPrecacheVertexFetchElements(EVertexInputStreamType VertexInputStreamType, FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "GetVertexElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexElements(ERHIFeatureLevel::Type FeatureLevel, int32 InDynamicVertexStride, int32 InDynamicParameterVertexStride, FDataType& Data, FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetData(FRHICommandListBase& RHICmdList, const FDataType& InData)"
  },
  {
    "label": "GetUniformBuffer()",
    "kind": "Method",
    "detail": "Function (MeshParticleUniformBuffer = InMeshParticleUniformBuffer ; } FRHIUniformBuffer*)",
    "insertText": "GetUniformBuffer()"
  },
  {
    "label": "SetInstanceBuffer()",
    "kind": "Method",
    "detail": "Function (DynamicVertexStride = InDynamicVertexStride ; DynamicParameterVertexStride = InDynamicParameterVertexStride ; } void)",
    "insertText": "SetInstanceBuffer(const FVertexBuffer* InstanceBuffer, uint32 StreamOffset, uint32 Stride)"
  },
  {
    "label": "SetDynamicParameterBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDynamicParameterBuffer(const FVertexBuffer* InDynamicParameterBuffer, uint32 StreamOffset, uint32 Stride)"
  },
  {
    "label": "LockPreviousTransformBuffer()",
    "kind": "Method",
    "detail": "Function (uint8*)",
    "insertText": "LockPreviousTransformBuffer(FRHICommandListBase& RHICmdList, uint32 ParticleCount)"
  },
  {
    "label": "UnlockPreviousTransformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockPreviousTransformBuffer(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "GetPreviousTransformBufferSRV()",
    "kind": "Method",
    "detail": "Function (FRHIShaderResourceView*)",
    "insertText": "GetPreviousTransformBufferSRV()"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Copy(const FMeshParticleVertexFactory& Other)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "GetInstanceVerticesCPU()",
    "kind": "Method",
    "detail": "Function (FMeshParticleInstanceVertices*&)",
    "insertText": "GetInstanceVerticesCPU()"
  },
  {
    "label": "GetLODIdx()",
    "kind": "Method",
    "detail": "Function (LODIdx = InLODIdx ; } uint8)",
    "insertText": "GetLODIdx()"
  },
  {
    "label": "ConstructMeshParticleVertexFactory()",
    "kind": "Method",
    "detail": "Function (protected : FDataType Data ; uint8 LODIdx ; int32 DynamicVertexStride ; int32 DynamicParameterVertexStride ; FRHIUniformBuffer* MeshParticleUniformBuffer ; FDynamicReadBuffer PrevTransformBuffer ; FMeshParticleInstanceVertices* InstanceVerticesCPU ; } ; FMeshParticleVertexFactory*)",
    "insertText": "ConstructMeshParticleVertexFactory(ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "ConstructMeshParticleVertexFactory()",
    "kind": "Method",
    "detail": "Function (} FMeshParticleVertexFactory*)",
    "insertText": "ConstructMeshParticleVertexFactory(EParticleVertexFactoryType InType, ERHIFeatureLevel::Type InFeatureLevel, int32 InDynamicVertexStride, int32 InDynamicParameterVertexStride)"
  }
]