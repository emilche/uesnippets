[
  {
    "label": "SGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphPin"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UK2Node_MakeStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_MakeStruct"
  },
  {
    "label": "FOptionalPinFromProperty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionalPinFromProperty"
  },
  {
    "label": "FOptionalPinOverrideState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionalPinOverrideState"
  },
  {
    "label": "SGraphNodeMakeStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphNodeMakeStruct"
  },
  {
    "label": "FOptionalPinOverrideState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Internationalization / Text . h \" # include \" KismetNodes / SGraphNodeK2Base . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" class SGraphPin ; class UEdGraphPin ; class UK2Node_MakeStruct ; struct FOptionalPinFromProperty ; struct FOptionalPinOverrideState { FText DisplayText ; FText TooltipText ; bool bIsOverrideEnabled ; bool bIsValuePinVisible ; bool bIsOverridePinVisible ;)",
    "insertText": "FOptionalPinOverrideState(FText InDisplayText, FText InTooltipText, bool bInIsOverridePinVisible, bool bInIsOverrideEnabled, bool bInIsValuePinVisible) : DisplayText(InDisplayText) , TooltipText(InTooltipText) , bIsOverrideEnabled(bInIsOverrideEnabled) , bIsValuePinVisible(bInIsValuePinVisible) , bIsOverridePinVisible(bInIsOverridePinVisible)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FOptionalPinOverrideState& InOther)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, UK2Node_MakeStruct* InNode)"
  },
  {
    "label": "IsPinEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPinEnabled(FOptionalPinFromProperty* InPropertyEntry)"
  },
  {
    "label": "CreatePinWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SGraphPin>)",
    "insertText": "CreatePinWidget(UEdGraphPin* Pin)"
  },
  {
    "label": "CreatePinWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePinWidgets()"
  }
]