[
  {
    "label": "FBrushBuilderDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBrushBuilderDragDropOp"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / DragAndDrop . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Styling / AppStyle . h \" # include \" Engine / BrushBuilder . h \" # include \" Editor . h \" # include \" Widgets / Layout / SBorder . h \" # include \" Widgets / Images / SImage . h \" # include \" Widgets / Layout / SBox . h \" # include \" LevelUtils . h \" class FBrushBuilderDragDropOp : public FDragDropOperation { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FBrushBuilderDragDropOp, FDragDropOperation) static TSharedRef<FBrushBuilderDragDropOp> New(TWeakObjectPtr<UBrushBuilder> InBrushBuilder, const FSlateBrush* InIconBrush, bool bInIsAddtive)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FBrushBuilderDragDropOp> Operation =)",
    "insertText": "MakeShareable(new FBrushBuilderDragDropOp(InBrushBuilder, InIconBrush, bInIsAddtive))"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (Operation -> MouseCursor = EMouseCursor::GrabHandClosed ; Operation ->)",
    "insertText": "Construct()"
  },
  {
    "label": "GetEditorWorldContext()",
    "kind": "Method",
    "detail": "Function (UWorld* World = GEditor ->)",
    "insertText": "GetEditorWorldContext().World()"
  },
  {
    "label": "GetDefaultBrush()",
    "kind": "Method",
    "detail": "Function (World ->)",
    "insertText": "GetDefaultBrush()->SetIsTemporarilyHiddenInEditor(true)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "OnDrop(bool bDropWasHandled, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetCurrentLevel()",
    "kind": "Method",
    "detail": "Function (ULevel* CurrentLevel = World ->)",
    "insertText": "GetCurrentLevel()"
  },
  {
    "label": "GetDefaultBrush()",
    "kind": "Method",
    "detail": "Function (World ->)",
    "insertText": "GetDefaultBrush()->BrushBuilder = DuplicateObject<UBrushBuilder>(BrushBuilder.Get(), World->GetDefaultBrush()->GetOuter())"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* Command = bIsAdditive ?)",
    "insertText": "TEXT(\"BRUSH ADD SELECTNEWBRUSH\") : TEXT(\"BRUSH SUBTRACT SELECTNEWBRUSH\")"
  },
  {
    "label": "Exec()",
    "kind": "Method",
    "detail": "Function (GEditor ->)",
    "insertText": "Exec(World, Command)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "OnDrop(bDropWasHandled, MouseEvent)"
  },
  {
    "label": "OnDragged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnDragged(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragged()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "OnDragged(DragDropEvent)"
  },
  {
    "label": "GetDefaultDecorator()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<class SWidget>)",
    "insertText": "GetDefaultDecorator()"
  },
  {
    "label": "GetBrushBuilder()",
    "kind": "Method",
    "detail": "Function (} TWeakObjectPtr<UBrushBuilder>)",
    "insertText": "GetBrushBuilder()"
  },
  {
    "label": "GetDefaultBrush()",
    "kind": "Method",
    "detail": "Function (World ->)",
    "insertText": "GetDefaultBrush()->SetIsTemporarilyHiddenInEditor(false)"
  }
]