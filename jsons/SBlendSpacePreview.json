[
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "UBlendSpace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendSpace"
  },
  {
    "label": "SBlendSpacePreview",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlendSpacePreview"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Layout / Visibility . h \" # include \" Math / MathFwd . h \" # include \" Math / Vector . h \" # include \" PersonaDelegates . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class UAnimGraphNode_Base ; class UBlendSpace ; class SBlendSpacePreview : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SBlendSpacePreview)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FOnGetBlendSpaceSampleName, OnGetBlendSpaceSampleName) SLATE_END_ARGS() void Construct(const FArguments& InArgs, UAnimGraphNode_Base* InNode)"
  },
  {
    "label": "GetBlendSpaceVisibility()",
    "kind": "Method",
    "detail": "Function (protected : EVisibility)",
    "insertText": "GetBlendSpaceVisibility()"
  },
  {
    "label": "GetBlendSpaceInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetBlendSpaceInfo(TWeakObjectPtr<const UBlendSpace>& OutBlendSpace, FVector& OutPosition, FVector& OutFilteredPosition)"
  }
]