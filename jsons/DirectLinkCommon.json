[
  {
    "label": "FSceneIdentifier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneIdentifier"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCommunicationStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommunicationStatus"
  },
  {
    "label": "FSceneIdentifier()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / Guid . h \" # include \" Templates / SharedPointer . h \" namespace DirectLink { using FSceneGraphId = uint32 ; FSceneGraphId InvalidId = 0 ; using FElementHash = uint32 ; FElementHash InvalidHash = 0 ; using FStreamPort = uint32 ; FStreamPort InvalidStreamPort = 0 ; struct FSceneIdentifier {)",
    "insertText": "FSceneIdentifier()"
  },
  {
    "label": "FSceneIdentifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSceneIdentifier(const FGuid& Id, const FString& Name) : SceneGuid(Id) , DisplayName(Name)"
  },
  {
    "label": "GetCurrentProtocolVersion()",
    "kind": "Method",
    "detail": "Function (} FGuid SceneGuid ; FString DisplayName ; } ; uint8)",
    "insertText": "GetCurrentProtocolVersion()"
  },
  {
    "label": "GetMinSupportedProtocolVersion()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "GetMinSupportedProtocolVersion()"
  },
  {
    "label": "IsTransmitting()",
    "kind": "Method",
    "detail": "Function (enum class EVisibility { Public,Private,} ; enum class EStreamConnectionState { Uninitialized,RequestSent,Active,Closed,} ; struct FCommunicationStatus { bool)",
    "insertText": "IsTransmitting()"
  }
]