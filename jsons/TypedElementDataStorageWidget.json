[
  {
    "label": "FTypedElementWidgetConstructor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementWidgetConstructor"
  },
  {
    "label": "STedsWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STedsWidget"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / SCompoundWidget . h \" # include \" Elements / Interfaces / TypedElementDataStorageInterface . h \" struct FTypedElementWidgetConstructor ; class STedsWidget : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(STedsWidget) : _UiRowHandle(UE::Editor::DataStorage::InvalidRowHandle) , _Content()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(UE::Editor::DataStorage::RowHandle, UiRowHandle) SLATE_DEFAULT_SLOT(FArguments, Content) SLATE_END_ARGS() TYPEDELEMENTFRAMEWORK_API STedsWidget()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(const TSharedRef< SWidget >& InContent)"
  },
  {
    "label": "GetRowHandle()",
    "kind": "Method",
    "detail": "Function (UE::Editor::DataStorage::RowHandle)",
    "insertText": "GetRowHandle()"
  },
  {
    "label": "RegisterTedsWidget()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RegisterTedsWidget(const TSharedPtr<SWidget>& InContentWidget)"
  },
  {
    "label": "GetStorageIfAvailable()",
    "kind": "Method",
    "detail": "Function (IEditorDataStorageProvider*)",
    "insertText": "GetStorageIfAvailable()"
  }
]