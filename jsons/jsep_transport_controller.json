[
  {
    "label": "Thread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Thread"
  },
  {
    "label": "PacketTransportInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PacketTransportInternal"
  },
  {
    "label": "JsepTransportController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JsepTransportController"
  },
  {
    "label": "Observer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Observer"
  },
  {
    "label": "Config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Config"
  },
  {
    "label": "SetLocalDescription()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "SetLocalDescription(SdpType type,\n                               const cricket::SessionDescription* description)"
  },
  {
    "label": "SetRemoteDescription()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "SetRemoteDescription(SdpType type,\n                                const cricket::SessionDescription* description)"
  },
  {
    "label": "LookupDtlsTransportByMid()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<webrtc::DtlsTransport>)",
    "insertText": "LookupDtlsTransportByMid(\n      const std::string& mid)"
  },
  {
    "label": "SetIceConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIceConfig(const cricket::IceConfig& config)"
  },
  {
    "label": "SetNeedsIceRestartFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNeedsIceRestartFlag()"
  },
  {
    "label": "MaybeStartGathering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeStartGathering()"
  },
  {
    "label": "AddRemoteCandidates()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "AddRemoteCandidates(\n      const std::string& mid,\n      const std::vector<cricket::Candidate>& candidates)"
  },
  {
    "label": "RemoveRemoteCandidates()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "RemoveRemoteCandidates(\n      const std::vector<cricket::Candidate>& candidates)"
  },
  {
    "label": "SetLocalCertificate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLocalCertificate(\n      const rtc::scoped_refptr<rtc::RTCCertificate>& certificate)"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetStats(const std::string& mid, cricket::TransportStats* stats)"
  },
  {
    "label": "SetActiveResetSrtpParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveResetSrtpParams(bool active_reset_srtp_params)"
  },
  {
    "label": "RollbackTransports()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "RollbackTransports()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (signal_ice_connection_state_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (signal_connection_state_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (signal_standardized_ice_connection_state_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (signal_ice_gathering_state_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (signal_ice_candidates_gathered_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (signal_ice_candidate_error_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (signal_ice_candidates_removed_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (signal_ice_candidate_pair_changed_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "ValidateAndMaybeUpdateBundleGroups()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "ValidateAndMaybeUpdateBundleGroups(\n      bool local,\n      SdpType type,\n      const cricket::SessionDescription* description)"
  },
  {
    "label": "ValidateContent()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "ValidateContent(const cricket::ContentInfo& content_info)"
  },
  {
    "label": "CreateJsepTransportDescription()",
    "kind": "Method",
    "detail": "Function (cricket::JsepTransportDescription)",
    "insertText": "CreateJsepTransportDescription(\n      const cricket::ContentInfo& content_info,\n      const cricket::TransportInfo& transport_info,\n      const std::vector<int>& encrypted_extension_ids,\n      int rtp_abs_sendtime_extn_id)"
  },
  {
    "label": "MergeEncryptedHeaderExtensionIdsForBundles()",
    "kind": "Method",
    "detail": "Function (std::vector<int>>)",
    "insertText": "MergeEncryptedHeaderExtensionIdsForBundles(\n      const cricket::SessionDescription* description)"
  },
  {
    "label": "GetEncryptedHeaderExtensionIds()",
    "kind": "Method",
    "detail": "Function (std::vector<int>)",
    "insertText": "GetEncryptedHeaderExtensionIds(\n      const cricket::ContentInfo& content_info)"
  },
  {
    "label": "GetRtpAbsSendTimeHeaderExtensionId()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetRtpAbsSendTimeHeaderExtensionId(\n      const cricket::ContentInfo& content_info)"
  },
  {
    "label": "RTC_RUN_ON()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_RUN_ON(network_thread_)"
  },
  {
    "label": "RTC_RUN_ON()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_RUN_ON(network_thread_)"
  },
  {
    "label": "RTC_RUN_ON()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_RUN_ON(network_thread_)"
  },
  {
    "label": "DetermineIceRole()",
    "kind": "Method",
    "detail": "Function (cricket::IceRole)",
    "insertText": "DetermineIceRole(\n      cricket::JsepTransport* jsep_transport,\n      const cricket::TransportInfo& transport_info,\n      SdpType type,\n      bool local)"
  },
  {
    "label": "CreateDtlsTransport()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<cricket::DtlsTransportInternal>)",
    "insertText": "CreateDtlsTransport(\n      const cricket::ContentInfo& content_info,\n      cricket::IceTransportInternal* ice)"
  },
  {
    "label": "CreateIceTransport()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<webrtc::IceTransportInterface>)",
    "insertText": "CreateIceTransport(\n      const std::string& transport_name,\n      bool rtcp)"
  },
  {
    "label": "CreateUnencryptedRtpTransport()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<webrtc::RtpTransport>)",
    "insertText": "CreateUnencryptedRtpTransport(\n      const std::string& transport_name,\n      rtc::PacketTransportInternal* rtp_packet_transport,\n      rtc::PacketTransportInternal* rtcp_packet_transport)"
  },
  {
    "label": "CreateSdesTransport()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<webrtc::SrtpTransport>)",
    "insertText": "CreateSdesTransport(\n      const std::string& transport_name,\n      cricket::DtlsTransportInternal* rtp_dtls_transport,\n      cricket::DtlsTransportInternal* rtcp_dtls_transport)"
  },
  {
    "label": "CreateDtlsSrtpTransport()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<webrtc::DtlsSrtpTransport>)",
    "insertText": "CreateDtlsSrtpTransport(\n      const std::string& transport_name,\n      cricket::DtlsTransportInternal* rtp_dtls_transport,\n      cricket::DtlsTransportInternal* rtcp_dtls_transport)"
  },
  {
    "label": "OnDtlsHandshakeError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDtlsHandshakeError(rtc::SSLHandshakeError error)"
  },
  {
    "label": "OnTransportChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnTransportChanged(const std::string& mid,\n                          cricket::JsepTransport* transport)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (transports_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (active_reset_srtp_params_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  }
]