[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "FTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTable"
  },
  {
    "label": "FTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTableColumn"
  },
  {
    "label": "ITableCellValueSorter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableCellValueSorter"
  },
  {
    "label": "SNetworkingProfilerWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNetworkingProfilerWindow"
  },
  {
    "label": "SNetStatsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNetStatsView"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<SNetworkingProfilerWindow> InProfilerWindow)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "RebuildTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildTree(bool bResync)"
  },
  {
    "label": "ResetStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetStats()"
  },
  {
    "label": "UpdateStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStats(uint32 InGameInstanceIndex, uint32 InConnectionIndex, TraceServices::ENetProfilerConnectionMode InConnectionMode, uint32 InStatsPacketStartIndex, uint32 InStatsPacketEndIndex, uint32 InStatsStartPosition, uint32 InStatsEndPosition)"
  },
  {
    "label": "SelectNetEventNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectNetEventNode(uint32 EventTypeIndex)"
  },
  {
    "label": "UpdateTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTree()"
  },
  {
    "label": "UpdateStatsInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStatsInternal()"
  },
  {
    "label": "InsightsManager_OnSessionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsightsManager_OnSessionChanged()"
  },
  {
    "label": "TreeView_GetMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "TreeView_GetMenuContent()"
  },
  {
    "label": "TreeView_BuildSortByMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeView_BuildSortByMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "TreeView_BuildViewColumnMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeView_BuildViewColumnMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "InitializeAndShowHeaderColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeAndShowHeaderColumns()"
  },
  {
    "label": "TreeViewHeaderRow_GenerateColumnMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "TreeViewHeaderRow_GenerateColumnMenu(const FTableColumn& Column)"
  },
  {
    "label": "TreeView_Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeView_Refresh()"
  },
  {
    "label": "TreeView_OnGetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeView_OnGetChildren(FNetEventNodePtr InParent, TArray<FNetEventNodePtr>& OutChildren)"
  },
  {
    "label": "TreeView_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeView_OnSelectionChanged(FNetEventNodePtr SelectedItem, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "TreeView_OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeView_OnMouseButtonDoubleClick(FNetEventNodePtr TreeNode)"
  },
  {
    "label": "TreeView_OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "TreeView_OnGenerateRow(FNetEventNodePtr TreeNode, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "TableRow_SetHoveredCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TableRow_SetHoveredCell(TSharedPtr<FTable> TablePtr, TSharedPtr<FTableColumn> ColumnPtr, FNetEventNodePtr NodePtr)"
  },
  {
    "label": "ApplyFiltering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyFiltering()"
  },
  {
    "label": "FilterOutZeroCountEvents_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterOutZeroCountEvents_OnCheckStateChanged(ECheckBoxState NewRadioState)"
  },
  {
    "label": "GetToggleButtonForNetEventType()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetToggleButtonForNetEventType(const ENetEventNodeType InNetEventType)"
  },
  {
    "label": "FilterByNetEventType_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterByNetEventType_OnCheckStateChanged(ECheckBoxState NewRadioState, const ENetEventNodeType InNetEventType)"
  },
  {
    "label": "SearchBox_OnTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SearchBox_OnTextChanged(const FText& InFilterText)"
  },
  {
    "label": "CreateGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGroups()"
  },
  {
    "label": "CreateGroupByOptionsSources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGroupByOptionsSources()"
  },
  {
    "label": "GroupBy_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GroupBy_OnSelectionChanged(TSharedPtr<ENetEventGroupingMode> NewGroupingMode, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "GetDefaultColumnBeingSorted()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetDefaultColumnBeingSorted()"
  },
  {
    "label": "GetDefaultColumnSortMode()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetDefaultColumnSortMode()"
  },
  {
    "label": "CreateSortings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSortings()"
  },
  {
    "label": "UpdateCurrentSortingByColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCurrentSortingByColumn()"
  },
  {
    "label": "SortTreeNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortTreeNodes()"
  },
  {
    "label": "SortTreeNodesRec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortTreeNodesRec(FNetEventNode& Node, const ITableCellValueSorter& Sorter)"
  },
  {
    "label": "SetSortModeForColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSortModeForColumn(const FName& ColumnId, EColumnSortMode::Type SortMode)"
  },
  {
    "label": "OnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type SortMode)"
  },
  {
    "label": "HeaderMenu_SortMode_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HeaderMenu_SortMode_IsChecked(const FName ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "HeaderMenu_SortMode_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HeaderMenu_SortMode_Execute(const FName ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "ContextMenu_SortMode_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_SortMode_IsChecked(const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "ContextMenu_SortMode_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_SortMode_Execute(const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "ContextMenu_SortByColumn_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_SortByColumn_IsChecked(const FName ColumnId)"
  },
  {
    "label": "ContextMenu_SortByColumn_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_SortByColumn_Execute(const FName ColumnId)"
  },
  {
    "label": "ShowColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowColumn(const FName ColumnId)"
  },
  {
    "label": "HideColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideColumn(const FName ColumnId)"
  },
  {
    "label": "ToggleColumnVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleColumnVisibility(const FName ColumnId)"
  },
  {
    "label": "ContextMenu_ShowAllColumns_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowAllColumns_Execute()"
  },
  {
    "label": "ContextMenu_ShowMinMaxMedColumns_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowMinMaxMedColumns_Execute()"
  },
  {
    "label": "ContextMenu_ResetColumns_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ResetColumns_Execute()"
  }
]