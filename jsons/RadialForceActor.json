[
  {
    "label": "UBillboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBillboardComponent"
  },
  {
    "label": "ARadialForceActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ARadialForceActor"
  },
  {
    "label": "URadialForceComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URadialForceComponent"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" PhysicsEngine / RigidBodyBase . h \" # include \" RadialForceActor . generated . h \" class UBillboardComponent ;)",
    "insertText": "UCLASS(MinimalAPI, hideCategories=(Collision, Input), showCategories=(\"Input|MouseInput\", \"Input|TouchInput\"), ComponentWrapperClass)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() private: UPROPERTY(Category = RadialForceActor, VisibleAnywhere, BlueprintReadOnly, meta = (ExposeFunctionCategories = \"Activation,Components|Activation,Physics,Physics|Components|RadialForce\", AllowPrivateAccess = \"true\"))"
  },
  {
    "label": "EditorApplyScale()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "EditorApplyScale(const FVector& DeltaScale, const FVector* PivotLocation, bool bAltDown, bool bShiftDown, bool bCtrlDown)"
  },
  {
    "label": "GetForceComponent()",
    "kind": "Method",
    "detail": "Function (# endif public : class URadialForceComponent*)",
    "insertText": "GetForceComponent()"
  }
]