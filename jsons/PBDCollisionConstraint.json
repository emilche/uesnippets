[
  {
    "label": "FChaosVDDataWrapperUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosVDDataWrapperUtils"
  },
  {
    "label": "FCollisionConstraintAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollisionConstraintAllocator"
  },
  {
    "label": "FCollisionContextAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollisionContextAllocator"
  },
  {
    "label": "FConstGenericParticleHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstGenericParticleHandle"
  },
  {
    "label": "FImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImplicitObject"
  },
  {
    "label": "FParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticlePairMidPhase"
  },
  {
    "label": "FPBDCollisionConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraint"
  },
  {
    "label": "FPBDCollisionConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraints"
  },
  {
    "label": "FPerShapeData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerShapeData"
  },
  {
    "label": "FShapeInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShapeInstance"
  },
  {
    "label": "FSingleShapePairCollisionDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSingleShapePairCollisionDetector"
  },
  {
    "label": "FSolverBody",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSolverBody"
  },
  {
    "label": "FSolverBodyContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSolverBodyContainer"
  },
  {
    "label": "FPBDCollisionConstraintMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraintMaterial"
  },
  {
    "label": "FPBDCollisionConstraintContainerCookie",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraintContainerCookie"
  },
  {
    "label": "FPBDCollisionConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraint"
  },
  {
    "label": "Private",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Private"
  },
  {
    "label": "Private",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Private"
  },
  {
    "label": "FContactPairModifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContactPairModifier"
  },
  {
    "label": "FGenericParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericParticlePairMidPhase"
  },
  {
    "label": "FParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticlePairMidPhase"
  },
  {
    "label": "FPBDCollisionConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraints"
  },
  {
    "label": "FShapePairParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShapePairParticlePairMidPhase"
  },
  {
    "label": "FSingleShapePairCollisionDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSingleShapePairCollisionDetector"
  },
  {
    "label": "FSphereApproximationParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSphereApproximationParticlePairMidPhase"
  },
  {
    "label": "ContactConstraintSortPredicate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContactConstraintSortPredicate(const FPBDCollisionConstraint& L, const FPBDCollisionConstraint& R)"
  },
  {
    "label": "CalculateImplicitBoundsTestFlags()",
    "kind": "Method",
    "detail": "Function (FImplicitBoundsTestFlags)",
    "insertText": "CalculateImplicitBoundsTestFlags(\n\t\t\tFGeometryParticleHandle* Particle0, const FImplicitObject* Implicit0, const FPerShapeData* Shape0,\n\t\t\tFGeometryParticleHandle* Particle1, const FImplicitObject* Implicit1, const FPerShapeData* Shape1,\n\t\t\tFRealSingle& OutDistanceCheckSize)"
  },
  {
    "label": "ContactConstraintSortPredicate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContactConstraintSortPredicate(const FPBDCollisionConstraint& L, const FPBDCollisionConstraint& R)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Make(\n\t\t\tFGeometryParticleHandle* Particle0,\n\t\t\tconst FImplicitObject* Implicit0,\n\t\t\tconst FPerShapeData* Shape0,\n\t\t\tconst FBVHParticles* Simplicial0,\n\t\t\tconst FRigidTransform3& ImplicitLocalTransform0,\n\t\t\tFGeometryParticleHandle* Particle1,\n\t\t\tconst FImplicitObject* Implicit1,\n\t\t\tconst FPerShapeData* Shape1,\n\t\t\tconst FBVHParticles* Simplicial1,\n\t\t\tconst FRigidTransform3& ImplicitLocalTransform1,\n\t\t\tconst FReal InCullDistance,\n\t\t\tconst bool bInUseManifold,\n\t\t\tconst EContactShapesType ShapesType,\n\t\t\tFPBDCollisionConstraint& OutConstraint)"
  },
  {
    "label": "MakeTriangle()",
    "kind": "Method",
    "detail": "Function (FPBDCollisionConstraint)",
    "insertText": "MakeTriangle(const FImplicitObject* Implicit0)"
  },
  {
    "label": "MakeCopy()",
    "kind": "Method",
    "detail": "Function (FPBDCollisionConstraint)",
    "insertText": "MakeCopy(const FPBDCollisionConstraint& Source)"
  },
  {
    "label": "RestoreFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreFrom(const FPBDCollisionConstraint& Source)"
  },
  {
    "label": "Activate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Activate()"
  },
  {
    "label": "UpdateParticleTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateParticleTransform(FGeometryParticleHandle* InParticle)"
  },
  {
    "label": "ClearMaterialProperties()",
    "kind": "Method",
    "detail": "Function (properties)",
    "insertText": "ClearMaterialProperties()"
  },
  {
    "label": "ResetManifold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetManifold()"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(ManifoldPoints)"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(ManifoldPoints)"
  },
  {
    "label": "AddIncrementalManifoldContact()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIncrementalManifoldContact(const FContactPoint& ContactPoint)"
  },
  {
    "label": "CorrectManifoldPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CorrectManifoldPoints()"
  },
  {
    "label": "UpdateManifoldContacts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateManifoldContacts()"
  },
  {
    "label": "TryRestoreManifold()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRestoreManifold()"
  },
  {
    "label": "ResetActiveManifoldContacts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetActiveManifoldContacts()"
  },
  {
    "label": "TryAddManifoldContact()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryAddManifoldContact(const FContactPoint& ContactPoint)"
  },
  {
    "label": "TryInsertManifoldContact()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryInsertManifoldContact(const FContactPoint& ContactPoint)"
  },
  {
    "label": "TryRestoreManifold()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryRestoreManifold()"
  },
  {
    "label": "FPBDCollisionConstraint()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "FPBDCollisionConstraint(\n\t\t\tFGeometryParticleHandle* Particle0,\n\t\t\tconst FImplicitObject* Implicit0,\n\t\t\tconst FPerShapeData* Shape0,\n\t\t\tconst FBVHParticles* Simplicial0,\n\t\t\tFGeometryParticleHandle* Particle1,\n\t\t\tconst FImplicitObject* Implicit1,\n\t\t\tconst FPerShapeData* Shape1,\n\t\t\tconst FBVHParticles* Simplicial1)"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(\n\t\t\tconst ECollisionCCDType InCCDType,\n\t\t\tconst EContactShapesType InShapesType,\n\t\t\tconst FRigidTransform3& InImplicitTransform0,\n\t\t\tconst FRigidTransform3& InImplicitTransform1,\n\t\t\tconst FReal InCullDistance,\n\t\t\tconst bool bInUseManifold)"
  },
  {
    "label": "AssignSavedManifoldPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignSavedManifoldPoints()"
  },
  {
    "label": "UpdateManifoldPointPhi()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateManifoldPointPhi(const int32 ManifoldPointIndex)"
  },
  {
    "label": "InitMarginsAndTolerances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitMarginsAndTolerances(const EImplicitObjectType ImplicitType0, const EImplicitObjectType ImplicitType1, const FRealSingle Margin0, const FRealSingle Margin1)"
  },
  {
    "label": "InitCCDThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitCCDThreshold()"
  },
  {
    "label": "UpdateMaterialPropertiesImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterialPropertiesImpl()"
  },
  {
    "label": "UpdateMassScales()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMassScales()"
  },
  {
    "label": "LogOneShotManifoldError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogOneShotManifoldError(const int32 MaxManifoldPoints, const TArrayView<const FContactPoint>& ContactPoints)"
  }
]