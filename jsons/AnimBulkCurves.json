[
  {
    "label": "FNamedIndexElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNamedIndexElement"
  },
  {
    "label": "FBulkCurves",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBulkCurves"
  },
  {
    "label": "FNamedIndexElement()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Animation / NamedValueArray . h \" namespace UE::Anim { struct FNamedIndexElement {)",
    "insertText": "FNamedIndexElement()"
  },
  {
    "label": "FNamedIndexElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNamedIndexElement(FName InName, int32 InIndex) : Name(InName) , Index(InIndex)"
  },
  {
    "label": "AddIndexed()",
    "kind": "Method",
    "detail": "Function (} FName Name = NAME_None ; int32 Index = INDEX_NONE ; } ; struct FBulkCurves : TNamedValueArray<FDefaultAllocator,FNamedIndexElement> { void)",
    "insertText": "AddIndexed(FName InName)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (Elements .)",
    "insertText": "Emplace(InName, Elements.Num())"
  }
]