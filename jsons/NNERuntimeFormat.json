[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNNEModelRaw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNNEModelRaw"
  },
  {
    "label": "FNNEFormatAttributeDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNNEFormatAttributeDesc"
  },
  {
    "label": "FNNEFormatOperatorDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNNEFormatOperatorDesc"
  },
  {
    "label": "FNNEFormatTensorDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNNEFormatTensorDesc"
  },
  {
    "label": "FNNERuntimeFormat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNNERuntimeFormat"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" NNEAttributeValue . h \" # include \" NNETypes . h \" # include \" UObject / Object . h \" # include \" NNERuntimeFormat . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Invalid,ONNX,ORT,NNERT } ; struct FNNEModelRaw { TArray<uint8> Data ; ENNEInferenceFormat Format { ENNEInferenceFormat::Invalid } ; } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(VisibleAnywhere, Category = \"Neural Network Inference\")"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (uint64 DataSize ; TArray64<uint8> TensorData ; bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "StaticStruct()",
    "kind": "Method",
    "detail": "Function (UScriptStruct* Struct =)",
    "insertText": "StaticStruct()"
  },
  {
    "label": "SerializeTaggedProperties()",
    "kind": "Method",
    "detail": "Function (Struct ->)",
    "insertText": "SerializeTaggedProperties(Ar, reinterpret_cast<uint8*>(this), Struct, nullptr)"
  },
  {
    "label": "SetNumUninitialized()",
    "kind": "Method",
    "detail": "Function (Ar<<DataSize ; TensorData .)",
    "insertText": "SetNumUninitialized(DataSize)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (Ar .)",
    "insertText": "Serialize((void*)TensorData.GetData(), DataSize)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(Ar.IsSaving())"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (DataSize = TensorData .)",
    "insertText": "Num()"
  }
]