[
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "UPoseableMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseableMeshComponent"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" BoneContainer . h \" # include \" Components / SkinnedMeshComponent . h \" # include \" PoseableMeshComponent . generated . h \" class USkeletalMeshComponent ;)",
    "insertText": "UCLASS(ClassGroup=Rendering, hidecategories=(Object,Physics), config=Engine, editinlinenew, meta=(BlueprintSpawnableComponent), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() const TArray<FTransform>& GetBoneSpaceTransforms()"
  },
  {
    "label": "RefreshBoneTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshBoneTransforms(FActorComponentTickFunction* TickFunction = NULL)"
  },
  {
    "label": "AllocateTransformData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateTransformData()"
  },
  {
    "label": "ShouldUpdateTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldUpdateTransform(bool bLODHasChanged)"
  },
  {
    "label": "IsRunningParallelEvaluation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRunningParallelEvaluation()"
  },
  {
    "label": "MarkRefreshTransformDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkRefreshTransformDirty()"
  }
]