[
  {
    "label": "UReplayNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UReplayNetConnection"
  },
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FInternetAddr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInternetAddr"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / NetConnection . h \" # include \" ReplayHelper . h \" # include \" ReplayNetConnection . generated . h \")",
    "insertText": "UCLASS(transient, config=Engine, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API UReplayNetConnection(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSEconds)"
  },
  {
    "label": "InitConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitConnection(UNetDriver* InDriver, EConnectionState InState, const FURL& InURL, int32 InConnectionSpeed = 0, int32 InMaxPacket=0)"
  },
  {
    "label": "LowLevelGetRemoteAddress()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LowLevelGetRemoteAddress(bool bAppendPort = false)"
  },
  {
    "label": "LowLevelDescribe()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LowLevelDescribe()"
  },
  {
    "label": "LowLevelSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LowLevelSend(void* Data, int32 CountBits, FOutPacketTraits& Traits)"
  },
  {
    "label": "IsNetReady()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "IsNetReady(bool Saturate)"
  },
  {
    "label": "HandleClientPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleClientPlayer(APlayerController* PC, UNetConnection* NetConnection)"
  },
  {
    "label": "GetRemoteAddr()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<const FInternetAddr>)",
    "insertText": "GetRemoteAddr()"
  },
  {
    "label": "ClientHasInitializedLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClientHasInitializedLevel(const ULevel* TestLevel)"
  },
  {
    "label": "RemoteAddressToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "RemoteAddressToString()"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CleanUp()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "NotifyActorDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorDestroyed(AActor* Actor, bool IsSeamlessTravel = false)"
  },
  {
    "label": "IsReplayReady()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReplayReady()"
  },
  {
    "label": "NotifyActorChannelCleanedUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorChannelCleanedUp(UActorChannel* Channel, EChannelCloseReason CloseReason)"
  },
  {
    "label": "InitRemoteConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRemoteConnection(UNetDriver* InDriver, class FSocket* InSocket, const FURL& InURL, const class FInternetAddr& InRemoteAddr, EConnectionState InState, int32 InMaxPacket = 0, int32 InPacketOverhead = 0)"
  },
  {
    "label": "InitLocalConnection()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitLocalConnection(UNetDriver* InDriver, class FSocket* InSocket, const FURL& InURL, EConnectionState InState, int32 InMaxPacket = 0, int32 InPacketOverhead = 0)"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StartRecording()"
  },
  {
    "label": "AddEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEvent(const FString& Group, const FString& Meta, const TArray<uint8>& Data)"
  },
  {
    "label": "AddOrUpdateEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrUpdateEvent(const FString& EventName, const FString& Group, const FString& Meta, const TArray<uint8>& Data)"
  },
  {
    "label": "AddUserToReplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUserToReplay(const FString& UserString)"
  },
  {
    "label": "GetActiveReplayName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetActiveReplayName()"
  },
  {
    "label": "OnSeamlessTravelStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSeamlessTravelStart(UWorld* CurrentWorld, const FString& LevelName)"
  },
  {
    "label": "SetAnalyticsProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnalyticsProvider(TSharedPtr<IAnalyticsProvider> InProvider)"
  },
  {
    "label": "SetCheckpointSaveMaxMSPerFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCheckpointSaveMaxMSPerFrame(const float InCheckpointSaveMaxMSPerFrame)"
  },
  {
    "label": "RequestCheckpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestCheckpoint()"
  },
  {
    "label": "SetExternalDataForObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetExternalDataForObject(UObject* OwningObject, const uint8* Src, const int32 NumBits)"
  },
  {
    "label": "TrackSendForProfiler()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "TrackSendForProfiler(const void* Data, int32 NumBytes)"
  },
  {
    "label": "OnLevelRemovedFromWorld()",
    "kind": "Method",
    "detail": "Function (FReplayHelper ReplayHelper ; int32 DemoFrameNum ; FDelegateHandle OnLevelRemovedFromWorldHandle ; FDelegateHandle OnLevelAddedToWorldHandle ; void)",
    "insertText": "OnLevelRemovedFromWorld(class ULevel* Level, class UWorld* World)"
  },
  {
    "label": "OnLevelAddedToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelAddedToWorld(class ULevel* Level, class UWorld* World)"
  },
  {
    "label": "NetworkRemapPath()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NetworkRemapPath(FName InPackageName, bool bReading)"
  }
]