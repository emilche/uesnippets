[
  {
    "label": "FScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScope"
  },
  {
    "label": "FAwaitable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAwaitable"
  },
  {
    "label": "FCoroSpinLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCoroSpinLock"
  },
  {
    "label": "CoroSpinLock_Detail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CoroSpinLock_Detail"
  },
  {
    "label": "CoroSpinLock_Detail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CoroSpinLock_Detail"
  },
  {
    "label": "FCoroSpinLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCoroSpinLock"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (CoroSpinLock_Detail::FAwaitable)",
    "insertText": "Lock(bool WriteLock = true)"
  },
  {
    "label": "suspend_always()",
    "kind": "Method",
    "detail": "Function (co_await)",
    "insertText": "suspend_always()"
  },
  {
    "label": "TryTakeLock()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryTakeLock()"
  },
  {
    "label": "FScope()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FScope(CoroSpinLock, WriteLock)"
  },
  {
    "label": "FScope()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FScope(&CS, WriteLock)"
  }
]