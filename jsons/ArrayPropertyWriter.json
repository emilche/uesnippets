[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "ArrayPropertyWriter()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcCoreAbstract_ArrayPropertyWriter_h # define Alembic_AbcCoreAbstract_ArrayPropertyWriter_h # include<Alembic / Util / Export . h> # include<Alembic / AbcCoreAbstract / Foundation . h> # include<Alembic / AbcCoreAbstract / BasePropertyWriter . h> # include<Alembic / AbcCoreAbstract / ArraySample . h> namespace Alembic { namespace AbcCoreAbstract { namespace ALEMBIC_VERSION_NS { class ALEMBIC_EXPORT ArrayPropertyWriter : public BasePropertyWriter { public : ~)",
    "insertText": "ArrayPropertyWriter()"
  },
  {
    "label": "setSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setSample(const ArraySample & iSamp)"
  },
  {
    "label": "setFromPreviousSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFromPreviousSample()"
  },
  {
    "label": "getNumSamples()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumSamples()"
  },
  {
    "label": "setTimeSamplingIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeSamplingIndex(uint32_t iIndex)"
  }
]