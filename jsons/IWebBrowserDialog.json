[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IWebBrowserDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWebBrowserDialog"
  },
  {
    "label": "IWebBrowserDialog()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" enum class EWebBrowserDialogType { Alert = 0,Confirm,Prompt,Unload = 1 2 7,} ; enum class EWebBrowserDialogEventResponse { Unhandled,Continue,Ignore,Handled,} ; class IWebBrowserDialog { public : ~)",
    "insertText": "IWebBrowserDialog()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (} EWebBrowserDialogType)",
    "insertText": "GetType()"
  },
  {
    "label": "Continue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Continue(bool Success = true, const FText& UserResponse = FText::GetEmpty())"
  },
  {
    "label": "GetMessageText()",
    "kind": "Method",
    "detail": "Function (const FText&)",
    "insertText": "GetMessageText()"
  },
  {
    "label": "GetDefaultPrompt()",
    "kind": "Method",
    "detail": "Function (const FText&)",
    "insertText": "GetDefaultPrompt()"
  },
  {
    "label": "IsReload()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReload()"
  }
]