[
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "UViewportInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportInteractor"
  },
  {
    "label": "AVREditorDockableWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AVREditorDockableWindow"
  },
  {
    "label": "UViewportDragOperationComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportDragOperationComponent"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UDockableWindowDragOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDockableWindowDragOperation"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UI / VREditorFloatingUI . h \" # include \" ViewportDragOperation . h \" # include \" ViewportInteractableInterface . h \" # include \" VREditorDockableWindow . generated . h \" class UStaticMeshComponent ; class UViewportInteractor ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: AVREditorDockableWindow(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "PostActorCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostActorCreated()"
  },
  {
    "label": "TickManually()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickManually(float DeltaTime)"
  },
  {
    "label": "UpdateRelativeRoomTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRelativeRoomTransform()"
  },
  {
    "label": "GetCloseButtonMeshComponent()",
    "kind": "Method",
    "detail": "Function (UStaticMeshComponent*)",
    "insertText": "GetCloseButtonMeshComponent()"
  },
  {
    "label": "GetSelectionBarMeshComponent()",
    "kind": "Method",
    "detail": "Function (UStaticMeshComponent*)",
    "insertText": "GetSelectionBarMeshComponent()"
  },
  {
    "label": "GetDockSelectDistance()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDockSelectDistance()"
  },
  {
    "label": "SetDockSelectDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDockSelectDistance(const float InDockDistance)"
  },
  {
    "label": "OnPressed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPressed(UViewportInteractor* Interactor, const FHitResult& InHitResult, bool& bOutResultedInDrag)"
  },
  {
    "label": "OnHover()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHover(UViewportInteractor* Interactor)"
  },
  {
    "label": "OnHoverEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHoverEnter(UViewportInteractor* Interactor, const FHitResult& InHitResult)"
  },
  {
    "label": "OnHoverLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHoverLeave(UViewportInteractor* Interactor, const UActorComponent* NewComponent)"
  },
  {
    "label": "OnDragRelease()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragRelease(UViewportInteractor* Interactor)"
  },
  {
    "label": "GetDragOperationComponent()",
    "kind": "Method",
    "detail": "Function (class UViewportDragOperationComponent*)",
    "insertText": "GetDragOperationComponent()"
  },
  {
    "label": "CanBeSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeSelected()"
  },
  {
    "label": "SetCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollision(const ECollisionEnabled::Type InCollisionType, const ECollisionResponse InCollisionResponse, const ECollisionChannel InCollisionChannel)"
  },
  {
    "label": "SetWindowMesh()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SetWindowMesh(UStaticMesh* WindowMesh)"
  },
  {
    "label": "SetSelectionBarColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionBarColor(const FLinearColor& LinearColor)"
  },
  {
    "label": "SetCloseButtonColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCloseButtonColor(const FLinearColor& LinearColor)"
  },
  {
    "label": "SetDockButtonColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDockButtonColor(const FLinearColor& LinearColor)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual void ExecuteDrag( class UViewportInteractor* Interactor, IViewportInteractableInterface* Interactable)"
  }
]