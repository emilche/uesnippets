[
  {
    "label": "CommonHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CommonHeader"
  },
  {
    "label": "CommonHeader()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_COMMON_HEADER_H_ # define MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_COMMON_HEADER_H_ # include<stddef . h> # include<stdint . h> namespace webrtc { namespace rtcp { class CommonHeader { public : size_t kHeaderSizeBytes = 4 ;)",
    "insertText": "CommonHeader()"
  },
  {
    "label": "CommonHeader()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CommonHeader(const CommonHeader&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CommonHeader&)",
    "insertText": "operator(const CommonHeader&)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(const uint8_t* buffer, size_t size_bytes)"
  },
  {
    "label": "type()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "type()"
  }
]