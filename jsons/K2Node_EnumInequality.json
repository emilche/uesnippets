[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UK2Node_EnumInequality",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_EnumInequality"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" Internationalization / Internationalization . h \" # include \" Internationalization / Text . h \" # include \" K2Node_EnumEquality . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" K2Node_EnumInequality . generated . h \" class FName ; class UClass ; class UObject ;)",
    "insertText": "UCLASS(MinimalAPI, meta=(Keywords = \"!=\"))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() virtual FText GetTooltipText()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetCompactNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCompactNodeTitle()"
  },
  {
    "label": "GetConditionalFunction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetConditionalFunction(FName& FunctionName, UClass** FunctionClass)"
  }
]