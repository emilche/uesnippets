[
  {
    "label": "FConstraintTickFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintTickFunction"
  },
  {
    "label": "UTickableConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTickableConstraint"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FConstraintsInWorld",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintsInWorld"
  },
  {
    "label": "FConstraintNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintNode"
  },
  {
    "label": "FConstraintsEvaluationGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintsEvaluationGraph"
  },
  {
    "label": "EGraphState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EGraphState"
  },
  {
    "label": "MarkForEvaluation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkForEvaluation(const TWeakObjectPtr<UTickableConstraint>& InConstraint)"
  },
  {
    "label": "FlushPendingEvaluations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushPendingEvaluations()"
  },
  {
    "label": "InvalidateData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateData()"
  },
  {
    "label": "Rebuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rebuild()"
  },
  {
    "label": "GetSortedConstraints()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSortedConstraints(TArray<TWeakObjectPtr<UTickableConstraint>>& OutConstraints)"
  },
  {
    "label": "UseEvaluationGraph()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseEvaluationGraph()"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate(const TWeakObjectPtr<UTickableConstraint>& InConstraint)"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate(FConstraintNode* InNode)"
  },
  {
    "label": "BuildGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildGraph(UWorld* InWorld, const TArrayView<const ConstraintPtr>& InConstraints, TArray<FConstraintNode>& OutNodes)"
  },
  {
    "label": "SortConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortConstraints(UWorld* InWorld, TArray<ConstraintPtr>& InOutConstraints)"
  }
]