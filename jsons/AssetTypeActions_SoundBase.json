[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "USoundBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundBase"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "AUDIOEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUDIOEDITOR_API"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetTypeActions_Base . h \" # include \" AssetTypeCategories . h \" # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" IAssetTypeActions . h \" # include \" Internationalization / Internationalization . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class SWidget ; class UClass ; class UObject ; class USoundBase ; struct FAssetData ; class FAssetTypeActions_SoundBase : public FAssetTypeActions_Base { public : FText)",
    "insertText": "GetName()"
  },
  {
    "label": "GetTypeColor()",
    "kind": "Method",
    "detail": "Function (} FColor)",
    "insertText": "GetTypeColor()"
  },
  {
    "label": "GetSupportedClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "GetSupportedClass()"
  },
  {
    "label": "AssetsActivatedOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AssetsActivatedOverride(const TArray<UObject*>& InObjects, EAssetTypeActivationMethod::Type ActivationType)"
  },
  {
    "label": "GetCategories()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCategories()"
  },
  {
    "label": "PlaySound()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "PlaySound(USoundBase* Sound)"
  },
  {
    "label": "StopSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopSound()"
  },
  {
    "label": "IsSoundPlaying()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSoundPlaying(USoundBase* Sound)"
  },
  {
    "label": "IsSoundPlaying()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSoundPlaying(const FAssetData& AssetData)"
  },
  {
    "label": "ExecutePlaySound()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ExecutePlaySound(TArray<TWeakObjectPtr<USoundBase>> Objects)"
  },
  {
    "label": "ExecuteStopSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteStopSound(TArray<TWeakObjectPtr<USoundBase>> Objects)"
  },
  {
    "label": "CanExecutePlayCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecutePlayCommand(TArray<TWeakObjectPtr<USoundBase>> Objects)"
  },
  {
    "label": "ExecuteMuteSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteMuteSound(TArray<TWeakObjectPtr<USoundBase>> Objects)"
  },
  {
    "label": "ExecuteSoloSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteSoloSound(TArray<TWeakObjectPtr<USoundBase>> Objects)"
  },
  {
    "label": "IsActionCheckedMute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActionCheckedMute(TArray<TWeakObjectPtr<USoundBase>> Objects)"
  },
  {
    "label": "IsActionCheckedSolo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActionCheckedSolo(TArray<TWeakObjectPtr<USoundBase>> Objects)"
  },
  {
    "label": "CanExecuteMuteCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteMuteCommand(TArray<TWeakObjectPtr<USoundBase>> Objects)"
  },
  {
    "label": "CanExecuteSoloCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteSoloCommand(TArray<TWeakObjectPtr<USoundBase>> Objects)"
  }
]