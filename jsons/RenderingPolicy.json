[
  {
    "label": "FSlateFontServices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateFontServices"
  },
  {
    "label": "FSlateElementBatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateElementBatch"
  },
  {
    "label": "FSlateShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResource"
  },
  {
    "label": "FSlateVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateVertex"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "FSlateRenderingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRenderingPolicy"
  },
  {
    "label": "FSlateFontCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateFontCache"
  },
  {
    "label": "FSlateShaderResourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResourceManager"
  },
  {
    "label": "FSlateRenderingPolicy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class FSlateFontServices ; class FSlateElementBatch ; class FSlateShaderResource ; struct FSlateVertex ; class FSceneInterface ; class FSlateRenderingPolicy { public :)",
    "insertText": "FSlateRenderingPolicy(const TSharedRef<class FSlateFontServices>& InFontServices, float InPixelCenterOffset) : FontServices(InFontServices) , PixelCenterOffset(InPixelCenterOffset)"
  },
  {
    "label": "FSlateRenderingPolicy()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSlateRenderingPolicy()"
  },
  {
    "label": "GetFontCache()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<class FSlateFontCache>)",
    "insertText": "GetFontCache()"
  },
  {
    "label": "GetFontServices()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class FSlateFontServices>)",
    "insertText": "GetFontServices()"
  },
  {
    "label": "GetResourceManager()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class FSlateShaderResourceManager>)",
    "insertText": "GetResourceManager()"
  },
  {
    "label": "IsVertexColorInLinearSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVertexColorInLinearSpace()"
  },
  {
    "label": "GetPixelCenterOffset()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPixelCenterOffset()"
  },
  {
    "label": "ClearScenes()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "ClearScenes()"
  },
  {
    "label": "FSlateRenderingPolicy()",
    "kind": "Method",
    "detail": "Function (} ; private :)",
    "insertText": "FSlateRenderingPolicy(const FSlateRenderingPolicy&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSlateRenderingPolicy&)",
    "insertText": "operator(const FSlateRenderingPolicy&)"
  }
]