[
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "IConsoleVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IConsoleVariable"
  },
  {
    "label": "UGameInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameInstance"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UReplicationSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UReplicationSystem"
  },
  {
    "label": "UObjectReplicationBridge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectReplicationBridge"
  },
  {
    "label": "FGameInstancePIEParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameInstancePIEParameters"
  },
  {
    "label": "FScopedCVarOverrideInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedCVarOverrideInt"
  },
  {
    "label": "FScopedTestSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedTestSettings"
  },
  {
    "label": "FScopedNetTestPIERestoration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedNetTestPIERestoration"
  },
  {
    "label": "FTestWorldInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTestWorldInstance"
  },
  {
    "label": "FContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContext"
  },
  {
    "label": "FContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContext"
  },
  {
    "label": "FTestWorlds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTestWorlds"
  },
  {
    "label": "PredicateT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PredicateT"
  },
  {
    "label": "PredicateT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PredicateT"
  },
  {
    "label": "FScopedCVarOverrideInt()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FScopedCVarOverrideInt(const TCHAR* VariableName, int32 Value)"
  },
  {
    "label": "FScopedTestSettings()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FScopedTestSettings()"
  },
  {
    "label": "FScopedNetTestPIERestoration()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FScopedNetTestPIERestoration()"
  },
  {
    "label": "CreateServer()",
    "kind": "Method",
    "detail": "Function (FTestWorldInstance)",
    "insertText": "CreateServer(const TCHAR* InURL)"
  },
  {
    "label": "CreateClient()",
    "kind": "Method",
    "detail": "Function (FTestWorldInstance)",
    "insertText": "CreateClient(int32 ServerPort)"
  },
  {
    "label": "FTestWorldInstance()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FTestWorldInstance(FTestWorldInstance&& Other)"
  },
  {
    "label": "GetPort()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPort()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds = 0.0166f)"
  },
  {
    "label": "LoadStreamingLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadStreamingLevel(FName LevelName)"
  },
  {
    "label": "UnloadStreamingLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnloadStreamingLevel(FName LevelName)"
  },
  {
    "label": "FTestWorldInstance()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FTestWorldInstance(const FGameInstancePIEParameters& InstanceParams)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "FindUnusedPIEInstance()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindUnusedPIEInstance()"
  },
  {
    "label": "FTestWorlds()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FTestWorlds(const TCHAR* ServerURL, float DeltaSeconds = 0.0166f)"
  },
  {
    "label": "CreateAndConnectClient()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateAndConnectClient()"
  },
  {
    "label": "TickAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickAll(int32 NumTicks=1)"
  },
  {
    "label": "TickServer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickServer()"
  },
  {
    "label": "TickClients()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickClients()"
  },
  {
    "label": "TickServerAndDrop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickServerAndDrop()"
  },
  {
    "label": "TickClientsAndDrop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickClientsAndDrop()"
  },
  {
    "label": "TickServerAndDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickServerAndDelay(uint32 NumFramesToDelay = 1)"
  },
  {
    "label": "TickClientsAndDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickClientsAndDelay(uint32 NumFramesToDelay = 1)"
  },
  {
    "label": "TickAllUntil()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TickAllUntil(const PredicateT& Predicate, float DeltaSeconds = 0.0166f, int32 MaxTicks = 60)"
  },
  {
    "label": "WaitForClientConnect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitForClientConnect(FTestWorldInstance& Client)"
  },
  {
    "label": "OnNetDriverCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNetDriverCreated(UWorld* InWorld, UNetDriver* InNetDriver)"
  }
]