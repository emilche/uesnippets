[
  {
    "label": "Logging",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Logging"
  },
  {
    "label": "Context",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Context"
  },
  {
    "label": "State",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "State"
  },
  {
    "label": "ThreadState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ThreadState"
  },
  {
    "label": "Context()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Context(uint32_t name, int64_t timestamp_ms, bool enabled)"
  },
  {
    "label": "SetGlobalContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalContext(uint32_t name)"
  },
  {
    "label": "SetGlobalContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalContext(const std::string& name)"
  },
  {
    "label": "SetGlobalContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalContext(const char* name)"
  },
  {
    "label": "SetGlobalEnable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalEnable(bool enabled)"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log(const char format[], ...)"
  },
  {
    "label": "Plot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Plot(int figure, const std::string& name, double value)"
  },
  {
    "label": "Plot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Plot(int figure,\n            const std::string& name,\n            double value,\n            const std::string& alg_name)"
  },
  {
    "label": "Plot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Plot(int figure, const std::string& name, double value, uint32_t ssrc)"
  },
  {
    "label": "Plot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Plot(int figure,\n            const std::string& name,\n            double value,\n            uint32_t ssrc,\n            const std::string& alg_name)"
  },
  {
    "label": "PlotBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlotBar(int figure, const std::string& name, double value, int flow_id)"
  },
  {
    "label": "PlotBaselineBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlotBaselineBar(int figure,\n                       const std::string& name,\n                       double value,\n                       int flow_id)"
  },
  {
    "label": "PlotErrorBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlotErrorBar(int figure,\n                    const std::string& name,\n                    double value,\n                    double ylow,\n                    double yhigh,\n                    const std::string& error_title,\n                    int flow_id)"
  },
  {
    "label": "PlotLimitErrorBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlotLimitErrorBar(int figure,\n                         const std::string& name,\n                         double value,\n                         double ylow,\n                         double yhigh,\n                         const std::string& error_title,\n                         double ymax,\n                         const std::string& limit_title,\n                         int flow_id)"
  },
  {
    "label": "PlotLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlotLabel(int figure,\n                 const std::string& title,\n                 const std::string& y_label,\n                 int num_flows)"
  },
  {
    "label": "MergePrevious()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergePrevious(const State& previous)"
  },
  {
    "label": "PushState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushState(const std::string& append_to_tag,\n                 int64_t timestamp_ms,\n                 bool enabled)"
  },
  {
    "label": "PopState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopState()"
  }
]