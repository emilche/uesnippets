[
  {
    "label": "FCADKernelArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCADKernelArchive"
  },
  {
    "label": "FDatabase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatabase"
  },
  {
    "label": "FModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModel"
  },
  {
    "label": "FShell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShell"
  },
  {
    "label": "FTopologicalFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalFace"
  },
  {
    "label": "CADKERNEL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CADKERNEL_API"
  },
  {
    "label": "FBody()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Core / CADEntity . h \" # include \" Core / MetadataDictionary . h \" # include \" Geo / GeoEnum . h \" # include \" Topo / Shell . h \" # include \" Topo / TopologicalEntity . h \" # include \" Topo / TopologicalFace . h \" # include \" Topo / TopologicalShapeEntity . h \" namespace UE::CADKernel { class FCADKernelArchive ; class FDatabase ; class FModel ; class FShell ; class FTopologicalFace ; class FBody : public FTopologicalShapeEntity { FEntity ; private : TArray<TSharedPtr<FShell>> Shells ;)",
    "insertText": "FBody()"
  },
  {
    "label": "FBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBody(const TArray<TSharedPtr<FShell>>& InShells)"
  },
  {
    "label": "AddShell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddShell(Shell.ToSharedRef())"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FCADKernelArchive& Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(Ar)"
  },
  {
    "label": "SerializeIdents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeIdents(Ar, Shells)"
  },
  {
    "label": "SpawnIdent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SpawnIdent(FDatabase& Database)"
  },
  {
    "label": "ResetMarkersRecursively()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetMarkersRecursively()"
  },
  {
    "label": "ResetMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetMarkers()"
  },
  {
    "label": "ResetMarkersRecursivelyOnEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetMarkersRecursivelyOnEntities(Shells)"
  },
  {
    "label": "GetInfo()",
    "kind": "Method",
    "detail": "Function (} # ifdef CADKERNEL_DEV FInfoEntity&)",
    "insertText": "GetInfo(FInfoEntity&)"
  },
  {
    "label": "GetEntityType()",
    "kind": "Method",
    "detail": "Function (# endif EEntity)",
    "insertText": "GetEntityType()"
  },
  {
    "label": "RemoveEmptyShell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEmptyShell()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(const FTopologicalShapeEntity* ShellToRemove)"
  },
  {
    "label": "ResetHost()",
    "kind": "Method",
    "detail": "Function (Shell ->)",
    "insertText": "ResetHost()"
  },
  {
    "label": "GetShells()",
    "kind": "Method",
    "detail": "Function (} const TArray<TSharedPtr<FShell>>&)",
    "insertText": "GetShells()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "FaceCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "FaceCount()"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (int32 FaceCount = 0 ;)",
    "insertText": "for(const TSharedPtr<FShell>& Shell : Shells)"
  },
  {
    "label": "GetFaces()",
    "kind": "Method",
    "detail": "Function (} return FaceCount ; } void)",
    "insertText": "GetFaces(TArray<FTopologicalFace*>& Faces)"
  },
  {
    "label": "GetFaces()",
    "kind": "Method",
    "detail": "Function (Shell ->)",
    "insertText": "GetFaces(Faces)"
  },
  {
    "label": "CompleteMetaData()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "CompleteMetaData()"
  },
  {
    "label": "CompleteMetaDataWithHostMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteMetaDataWithHostMetaData()"
  },
  {
    "label": "PropagateBodyOrientation()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "PropagateBodyOrientation()"
  },
  {
    "label": "Orient()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Orient()"
  },
  {
    "label": "FillTopologyReport()",
    "kind": "Method",
    "detail": "Function (} } # ifdef CADKERNEL_DEV void)",
    "insertText": "FillTopologyReport(FTopologyReport& Report)"
  }
]