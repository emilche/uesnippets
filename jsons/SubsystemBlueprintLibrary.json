[
  {
    "label": "USubsystemBlueprintLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USubsystemBlueprintLibrary"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / SubclassOf . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" Subsystems / EngineSubsystem . h \" # include \" Subsystems / GameInstanceSubsystem . h \" # include \" Subsystems / LocalPlayerSubsystem . h \" # include \" Subsystems / AudioEngineSubsystem . h \" # include \" SubsystemBlueprintLibrary . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintPure, Category = \"Engine Subsystems\", meta = (BlueprintInternalUseOnly = \"true\")) static ENGINE_API UEngineSubsystem* GetEngineSubsystem(TSubclassOf<UEngineSubsystem> Class)"
  },
  {
    "label": "GetWorldFrom()",
    "kind": "Method",
    "detail": "Function (private : UWorld*)",
    "insertText": "GetWorldFrom(UObject* ContextObject)"
  }
]