[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "APlayerCameraManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerCameraManager"
  },
  {
    "label": "FDebugDisplayInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugDisplayInfo"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UCameraModifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraModifier"
  },
  {
    "label": "APlayerCameraManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerCameraManager"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "FMinimalViewInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalViewInfo"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "OnCameraOwnerDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCameraOwnerDestroyed(AActor* InOwner)"
  },
  {
    "label": "GetTargetAlpha()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTargetAlpha()"
  },
  {
    "label": "DisplayDebug()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayDebug(class UCanvas* Canvas, const FDebugDisplayInfo& DebugDisplay, float& YL, float& YPos)"
  },
  {
    "label": "AddedToCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddedToCamera( APlayerCameraManager* Camera )"
  },
  {
    "label": "ModifyCamera()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifyCamera(float DeltaTime, struct FMinimalViewInfo& InOutPOV)"
  },
  {
    "label": "BlueprintModifyCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlueprintModifyCamera(float DeltaTime, FVector ViewLocation, FRotator ViewRotation, float FOV, FVector& NewViewLocation, FRotator& NewViewRotation, float& NewFOV)"
  },
  {
    "label": "BlueprintModifyPostProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlueprintModifyPostProcess(float DeltaTime, float& PostProcessBlendWeight, FPostProcessSettings& PostProcessSettings)"
  },
  {
    "label": "DisableModifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableModifier(bool bImmediate = false)"
  },
  {
    "label": "EnableModifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableModifier()"
  },
  {
    "label": "ToggleModifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleModifier()"
  },
  {
    "label": "ProcessViewRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessViewRotation(class AActor* ViewTarget, float DeltaTime, FRotator& OutViewRotation, FRotator& OutDeltaRot)"
  },
  {
    "label": "UpdateAlpha()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAlpha(float DeltaTime)"
  },
  {
    "label": "ModifyCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCamera(float DeltaTime, FVector ViewLocation, FRotator ViewRotation, float FOV, FVector& NewViewLocation, FRotator& NewViewRotation, float& NewFOV)"
  },
  {
    "label": "ModifyPostProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyPostProcess(float DeltaTime, float& PostProcessBlendWeight, FPostProcessSettings& PostProcessSettings)"
  }
]