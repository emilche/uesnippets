[
  {
    "label": "MatrixPower",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixPower"
  },
  {
    "label": "holds",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "holds"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "MatrixPowerParenthesesReturnValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixPowerParenthesesReturnValue"
  },
  {
    "label": "template",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "template"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "MatrixPowerAtomic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixPowerAtomic"
  },
  {
    "label": "stores",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "stores"
  },
  {
    "label": "template",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "template"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "directly",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "directly"
  },
  {
    "label": "MatrixPower",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixPower"
  },
  {
    "label": "stores",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "stores"
  },
  {
    "label": "holds",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "holds"
  },
  {
    "label": "MatrixPowerReturnValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixPowerReturnValue"
  },
  {
    "label": "holds",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "holds"
  },
  {
    "label": "MatrixComplexPowerReturnValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixComplexPowerReturnValue"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "getPadeDegree()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getPadeDegree(float normIminusT)"
  },
  {
    "label": "getPadeDegree()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getPadeDegree(double normIminusT)"
  },
  {
    "label": "getPadeDegree()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getPadeDegree(long double normIminusT)"
  },
  {
    "label": "computeSuperDiag()",
    "kind": "Method",
    "detail": "Function (ComplexScalar)",
    "insertText": "computeSuperDiag(const ComplexScalar&, const ComplexScalar&, RealScalar p)"
  },
  {
    "label": "computeSuperDiag()",
    "kind": "Method",
    "detail": "Function (RealScalar)",
    "insertText": "computeSuperDiag(RealScalar, RealScalar, RealScalar p)"
  },
  {
    "label": "computeBig()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "computeBig(res)"
  },
  {
    "label": "compute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "compute(ResultType& res, RealScalar p)"
  },
  {
    "label": "split()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "split(RealScalar& p, RealScalar& intpart)"
  },
  {
    "label": "initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initialize()"
  },
  {
    "label": "computeIntPower()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "computeIntPower(ResultType& res, RealScalar p)"
  },
  {
    "label": "computeFracPower()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "computeFracPower(ResultType& res, RealScalar p)"
  },
  {
    "label": "revertSchur()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "revertSchur(\n        Matrix<ComplexScalar, Rows, Cols, Options, MaxRows, MaxCols>& res,\n        const ComplexMatrix& T,\n        const ComplexMatrix& U)"
  },
  {
    "label": "revertSchur()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "revertSchur(\n        Matrix<RealScalar, Rows, Cols, Options, MaxRows, MaxCols>& res,\n        const ComplexMatrix& T,\n        const ComplexMatrix& U)"
  },
  {
    "label": "schurOfA()",
    "kind": "Method",
    "detail": "Function (ComplexSchur<MatrixType>)",
    "insertText": "schurOfA(m_A)"
  },
  {
    "label": "blockTp()",
    "kind": "Method",
    "detail": "Function (Dynamic>)",
    "insertText": "blockTp(m_fT, 0, 0, m_rank, m_rank)"
  }
]