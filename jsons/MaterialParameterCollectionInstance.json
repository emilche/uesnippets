[
  {
    "label": "FCollectionScalarParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollectionScalarParameter"
  },
  {
    "label": "FCollectionVectorParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollectionVectorParameter"
  },
  {
    "label": "FMaterialParameterCollectionInstanceResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialParameterCollectionInstanceResource"
  },
  {
    "label": "UMaterialParameterCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialParameterCollection"
  },
  {
    "label": "are",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "are"
  },
  {
    "label": "UMaterialParameterCollectionInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialParameterCollectionInstance"
  },
  {
    "label": "FMaterialParameterCollectionInstanceResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialParameterCollectionInstanceResource"
  },
  {
    "label": "SetCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollection(UMaterialParameterCollection* InCollection, UWorld* InWorld)"
  },
  {
    "label": "SetScalarParameterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetScalarParameterValue(FName ParameterName, float ParameterValue)"
  },
  {
    "label": "SetVectorParameterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetVectorParameterValue(FName ParameterName, const FLinearColor& ParameterValue)"
  },
  {
    "label": "UpdateRenderState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRenderState(bool bRecreateUniformBuffer)"
  },
  {
    "label": "DeferredUpdateRenderState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferredUpdateRenderState(bool bRecreateUniformBuffer)"
  }
]