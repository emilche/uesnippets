[
  {
    "label": "UDataStreamManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataStreamManager"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UDataStreamChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataStreamChannel"
  },
  {
    "label": "FDataStreamChannelRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataStreamChannelRecord"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / Channel . h \" # include \" Net / Core / Misc / ResizableCircularQueue . h \" # include \" DataStreamChannel . generated . h \" class UDataStreamManager ; namespace UE::Net { enum class EDataStreamWriteMode : unsigned ; } ;)",
    "insertText": "UCLASS(transient, customConstructor, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UDataStreamChannel(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "PostTickDispatch()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "PostTickDispatch()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddReferencedObjects(UObject* Object, FReferenceCollector& Collector)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(UNetConnection* InConnection, int32 InChIndex, EChannelCreateFlags CreateFlags)"
  },
  {
    "label": "ReInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReInit()"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CleanUp(const bool bForDestroy, EChannelCloseReason CloseReason)"
  },
  {
    "label": "ReceivedBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivedBunch(FInBunch& Bunch)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "CanStopTicking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanStopTicking()"
  },
  {
    "label": "Describe()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "Describe()"
  },
  {
    "label": "AppendExportBunches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendExportBunches(TArray<FOutBunch *>& OutExportBunches)"
  },
  {
    "label": "GetAdditionalRequiredBunches()",
    "kind": "Method",
    "detail": "Function (TArray<FOutBunch*>)",
    "insertText": "GetAdditionalRequiredBunches(const FOutBunch& OutgoingBunch, EChannelGetAdditionalRequiredBunchesFlags Flags)"
  },
  {
    "label": "AppendMustBeMappedGuids()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendMustBeMappedGuids(FOutBunch* Bunch)"
  },
  {
    "label": "ReceivedAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivedAck(int32 PacketId)"
  },
  {
    "label": "ReceivedNak()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivedNak(int32 PacketId)"
  },
  {
    "label": "HasAcknowledgedAllReliableData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAcknowledgedAllReliableData()"
  },
  {
    "label": "IsPacketWindowFull()",
    "kind": "Method",
    "detail": "Function (private : enum : uint32 { MaxPacketsInFlightCount = 2 5 6 U,BitStreamBufferByteCount = 2 0 4 8 U,} ; struct FDataStreamChannelRecord { const void* Record = nullptr ; uint32 PacketId = 0 U ; } ; bool)",
    "insertText": "IsPacketWindowFull()"
  },
  {
    "label": "DiscardAllRecords()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardAllRecords()"
  },
  {
    "label": "SendOpenBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendOpenBunch()"
  },
  {
    "label": "WriteData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteData(UE::Net::EDataStreamWriteMode WriteMode)"
  }
]