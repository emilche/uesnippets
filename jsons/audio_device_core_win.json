[
  {
    "label": "AudioDeviceWindowsCore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioDeviceWindowsCore"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_DEVICE_WIN_AUDIO_DEVICE_CORE_WIN_H_ # define MODULES_AUDIO_DEVICE_WIN_AUDIO_DEVICE_CORE_WIN_H_ #)",
    "insertText": "if(_MSC_VER >= 1400) #include \"rtc_base/win32.h\" #include \"modules/audio_device/audio_device_generic.h\" #include <wmcodecdsp.h> #include <audioclient.h> #include <audiopolicy.h> #include <avrt.h> #include <endpointvolume.h> #include <mediaobj.h> #include <mmdeviceapi.h> #include \"api/scoped_refptr.h\" #include \"rtc_base/synchronization/mutex.h\" #include \"rtc_base/win/scoped_com_initializer.h\" #pragma comment(lib, \"avrt.lib\") typedef BOOL(WINAPI* PAvRevertMmThreadCharacteristics)(HANDLE)"
  },
  {
    "label": "HANDLE()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "HANDLE(WINAPI* PAvSetMmThreadCharacteristicsA)(LPCSTR, LPDWORD)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "BOOL(WINAPI* PAvSetMmThreadPriority)(HANDLE, AVRT_PRIORITY)"
  },
  {
    "label": "AudioDeviceWindowsCore()",
    "kind": "Method",
    "detail": "Function (namespace webrtc { const float MAX_CORE_SPEAKER_VOLUME = 2 5 5 . 0 f ; const float MIN_CORE_SPEAKER_VOLUME = 0 . 0 f ; const float MAX_CORE_MICROPHONE_VOLUME = 2 5 5 . 0 f ; const float MIN_CORE_MICROPHONE_VOLUME = 0 . 0 f ; const uint16_t CORE_SPEAKER_VOLUME_STEP_SIZE = 1 ; const uint16_t CORE_MICROPHONE_VOLUME_STEP_SIZE = 1 ; class AudioDeviceWindowsCore : public AudioDeviceGeneric { public :)",
    "insertText": "AudioDeviceWindowsCore()"
  },
  {
    "label": "CoreAudioIsSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CoreAudioIsSupported()"
  },
  {
    "label": "ActiveAudioLayer()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "ActiveAudioLayer(AudioDeviceModule::AudioLayer& audioLayer)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (InitStatus)",
    "insertText": "Init() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "Terminate()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Terminate() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "Initialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialized()"
  },
  {
    "label": "PlayoutDevices()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "PlayoutDevices() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "RecordingDevices()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "RecordingDevices() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "PlayoutDeviceName()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "PlayoutDeviceName(uint16_t index, char name[kAdmMaxDeviceNameSize], char guid[kAdmMaxGuidSize]) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "RecordingDeviceName()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "RecordingDeviceName(uint16_t index, char name[kAdmMaxDeviceNameSize], char guid[kAdmMaxGuidSize]) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "SetPlayoutDevice()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetPlayoutDevice(uint16_t index) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "SetPlayoutDevice()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetPlayoutDevice(AudioDeviceModule::WindowsDeviceType device)"
  },
  {
    "label": "SetRecordingDevice()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetRecordingDevice(uint16_t index) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "SetRecordingDevice()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetRecordingDevice(AudioDeviceModule::WindowsDeviceType device) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "PlayoutIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "PlayoutIsAvailable(bool& available)"
  },
  {
    "label": "InitPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitPlayout() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "PlayoutIsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PlayoutIsInitialized()"
  },
  {
    "label": "RecordingIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "RecordingIsAvailable(bool& available)"
  },
  {
    "label": "InitRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitRecording() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "RecordingIsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RecordingIsInitialized()"
  },
  {
    "label": "StartPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StartPlayout() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "StopPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StopPlayout() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "Playing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Playing()"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StartRecording() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "StopRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StopRecording()"
  },
  {
    "label": "Recording()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Recording()"
  },
  {
    "label": "InitSpeaker()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitSpeaker() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "SpeakerIsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SpeakerIsInitialized()"
  },
  {
    "label": "InitMicrophone()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitMicrophone() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "MicrophoneIsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MicrophoneIsInitialized()"
  },
  {
    "label": "SpeakerVolumeIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SpeakerVolumeIsAvailable(bool& available) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "SetSpeakerVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetSpeakerVolume(uint32_t volume) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "SpeakerVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SpeakerVolume(uint32_t& volume) const RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "MaxSpeakerVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MaxSpeakerVolume(uint32_t& maxVolume)"
  },
  {
    "label": "MinSpeakerVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MinSpeakerVolume(uint32_t& minVolume)"
  },
  {
    "label": "MicrophoneVolumeIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MicrophoneVolumeIsAvailable(bool& available) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "SetMicrophoneVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetMicrophoneVolume(uint32_t volume) RTC_LOCKS_EXCLUDED(mutex_, volume_mutex_)"
  },
  {
    "label": "MicrophoneVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MicrophoneVolume(uint32_t& volume) const RTC_LOCKS_EXCLUDED(mutex_, volume_mutex_)"
  },
  {
    "label": "MaxMicrophoneVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MaxMicrophoneVolume(uint32_t& maxVolume)"
  },
  {
    "label": "MinMicrophoneVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MinMicrophoneVolume(uint32_t& minVolume)"
  },
  {
    "label": "SpeakerMuteIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SpeakerMuteIsAvailable(bool& available) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "SetSpeakerMute()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetSpeakerMute(bool enable) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "SpeakerMute()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SpeakerMute(bool& enabled)"
  },
  {
    "label": "MicrophoneMuteIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MicrophoneMuteIsAvailable(bool& available) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "SetMicrophoneMute()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetMicrophoneMute(bool enable)"
  },
  {
    "label": "MicrophoneMute()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MicrophoneMute(bool& enabled)"
  },
  {
    "label": "StereoPlayoutIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StereoPlayoutIsAvailable(bool& available)"
  },
  {
    "label": "SetStereoPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetStereoPlayout(bool enable) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "StereoPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StereoPlayout(bool& enabled)"
  },
  {
    "label": "StereoRecordingIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StereoRecordingIsAvailable(bool& available)"
  },
  {
    "label": "SetStereoRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetStereoRecording(bool enable) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "StereoRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StereoRecording(bool& enabled) const RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "PlayoutDelay()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "PlayoutDelay(uint16_t& delayMS) const RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "BuiltInAECIsAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuiltInAECIsAvailable()"
  },
  {
    "label": "EnableBuiltInAEC()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "EnableBuiltInAEC(bool enable)"
  },
  {
    "label": "AttachAudioBuffer()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AttachAudioBuffer(AudioDeviceBuffer* audioBuffer)"
  },
  {
    "label": "KeyPressed()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "KeyPressed()"
  },
  {
    "label": "InitSpeakerLocked()",
    "kind": "Method",
    "detail": "Function (private : PAvRevertMmThreadCharacteristics _PAvRevertMmThreadCharacteristics ; PAvSetMmThreadCharacteristicsA _PAvSetMmThreadCharacteristicsA ; PAvSetMmThreadPriority _PAvSetMmThreadPriority ; HMODULE _avrtLibrary ; bool _winSupportAvrt ; private : int32_t)",
    "insertText": "InitSpeakerLocked() RTC_EXCLUSIVE_LOCKS_REQUIRED(mutex_)"
  },
  {
    "label": "InitMicrophoneLocked()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitMicrophoneLocked() RTC_EXCLUSIVE_LOCKS_REQUIRED(mutex_)"
  },
  {
    "label": "PlayoutDevicesLocked()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "PlayoutDevicesLocked() RTC_EXCLUSIVE_LOCKS_REQUIRED(mutex_)"
  },
  {
    "label": "RecordingDevicesLocked()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "RecordingDevicesLocked() RTC_EXCLUSIVE_LOCKS_REQUIRED(mutex_)"
  },
  {
    "label": "InitCaptureThreadPriority()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "InitCaptureThreadPriority()"
  },
  {
    "label": "RevertCaptureThreadPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RevertCaptureThreadPriority()"
  },
  {
    "label": "WSAPICaptureThread()",
    "kind": "Method",
    "detail": "Function (DWORD WINAPI)",
    "insertText": "WSAPICaptureThread(LPVOID context)"
  },
  {
    "label": "DoCaptureThread()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "DoCaptureThread()"
  },
  {
    "label": "WSAPICaptureThreadPollDMO()",
    "kind": "Method",
    "detail": "Function (DWORD WINAPI)",
    "insertText": "WSAPICaptureThreadPollDMO(LPVOID context)"
  },
  {
    "label": "DoCaptureThreadPollDMO()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "DoCaptureThreadPollDMO() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "WSAPIRenderThread()",
    "kind": "Method",
    "detail": "Function (DWORD WINAPI)",
    "insertText": "WSAPIRenderThread(LPVOID context)"
  },
  {
    "label": "DoRenderThread()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "DoRenderThread()"
  },
  {
    "label": "_Lock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_Lock()"
  },
  {
    "label": "_UnLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_UnLock()"
  },
  {
    "label": "SetDMOProperties()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SetDMOProperties()"
  },
  {
    "label": "SetBoolProperty()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SetBoolProperty(IPropertyStore* ptrPS, REFPROPERTYKEY key, VARIANT_BOOL value)"
  },
  {
    "label": "SetVtI4Property()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SetVtI4Property(IPropertyStore* ptrPS, REFPROPERTYKEY key, LONG value)"
  },
  {
    "label": "_EnumerateEndpointDevicesAll()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_EnumerateEndpointDevicesAll(EDataFlow dataFlow)"
  },
  {
    "label": "_TraceCOMError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TraceCOMError(HRESULT hr)"
  },
  {
    "label": "_RefreshDeviceList()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_RefreshDeviceList(EDataFlow dir)"
  },
  {
    "label": "_DeviceListCount()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "_DeviceListCount(EDataFlow dir)"
  },
  {
    "label": "_GetDefaultDeviceName()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_GetDefaultDeviceName(EDataFlow dir, ERole role, LPWSTR szBuffer, int bufferLen)"
  },
  {
    "label": "_GetListDeviceName()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_GetListDeviceName(EDataFlow dir, int index, LPWSTR szBuffer, int bufferLen)"
  },
  {
    "label": "_GetDeviceName()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_GetDeviceName(IMMDevice* pDevice, LPWSTR pszBuffer, int bufferLen)"
  },
  {
    "label": "_GetListDeviceID()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_GetListDeviceID(EDataFlow dir, int index, LPWSTR szBuffer, int bufferLen)"
  },
  {
    "label": "_GetDefaultDeviceID()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_GetDefaultDeviceID(EDataFlow dir, ERole role, LPWSTR szBuffer, int bufferLen)"
  },
  {
    "label": "_GetDefaultDeviceIndex()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_GetDefaultDeviceIndex(EDataFlow dir, ERole role, int* index)"
  },
  {
    "label": "_GetDeviceID()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_GetDeviceID(IMMDevice* pDevice, LPWSTR pszBuffer, int bufferLen)"
  },
  {
    "label": "_GetDefaultDevice()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_GetDefaultDevice(EDataFlow dir, ERole role, IMMDevice** ppDevice)"
  },
  {
    "label": "_GetListDevice()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_GetListDevice(EDataFlow dir, int index, IMMDevice** ppDevice)"
  },
  {
    "label": "InitRecordingDMO()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitRecordingDMO()"
  },
  {
    "label": "RTC_ACQUIRED_AFTER()",
    "kind": "Method",
    "detail": "Function (ScopedCOMInitializer _comInit ; AudioDeviceBuffer* _ptrAudioBuffer ; Mutex mutex_ ; Mutex volume_mutex_)",
    "insertText": "RTC_ACQUIRED_AFTER(mutex_)"
  }
]