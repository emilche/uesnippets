[
  {
    "label": "MCDisassembler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCDisassembler"
  },
  {
    "label": "MemoryBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemoryBuffer"
  },
  {
    "label": "MCInstPrinter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCInstPrinter"
  },
  {
    "label": "RuntimeDyld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RuntimeDyld"
  },
  {
    "label": "RuntimeDyldCheckerImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RuntimeDyldCheckerImpl"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "RuntimeDyldChecker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RuntimeDyldChecker"
  },
  {
    "label": "RuntimeDyldChecker()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_EXECUTIONENGINE_RUNTIMEDYLDCHECKER_H # define LLVM_EXECUTIONENGINE_RUNTIMEDYLDCHECKER_H # include \" llvm / ADT / StringRef . h \" namespace llvm { class MCDisassembler ; class MemoryBuffer ; class MCInstPrinter ; class RuntimeDyld ; class RuntimeDyldCheckerImpl ; class raw_ostream ; class RuntimeDyldChecker { public :)",
    "insertText": "RuntimeDyldChecker(RuntimeDyld &RTDyld, MCDisassembler *Disassembler, MCInstPrinter *InstPrinter, raw_ostream &ErrStream)"
  },
  {
    "label": "RuntimeDyldChecker()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RuntimeDyldChecker()"
  },
  {
    "label": "getRTDyld()",
    "kind": "Method",
    "detail": "Function (RuntimeDyld&)",
    "insertText": "getRTDyld()"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "check(StringRef CheckExpr)"
  },
  {
    "label": "checkAllRulesInBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "checkAllRulesInBuffer(StringRef RulePrefix, MemoryBuffer *MemBuf)"
  },
  {
    "label": "getSectionAddr()",
    "kind": "Method",
    "detail": "Function (std::pair<uint64_t,std::string>)",
    "insertText": "getSectionAddr(StringRef FileName, StringRef SectionName, bool LocalAddress)"
  }
]