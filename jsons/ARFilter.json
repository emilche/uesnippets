[
  {
    "label": "FCbField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbField"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FARFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARFilter"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FARCompiledFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARCompiledFilter"
  },
  {
    "label": "FARFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / Class . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / SoftObjectPath . h \" # include \" UObject / TopLevelAssetPath . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_2 # include \" CoreMinimal . h \" # endif class FCbField ; class FCbWriter ; struct FAssetData ; struct FARFilter { PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FARFilter()"
  },
  {
    "label": "FARFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FARFilter(FARFilter&&)"
  },
  {
    "label": "FARFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FARFilter(const FARFilter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FARFilter&)",
    "insertText": "operator(FARFilter&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FARFilter&)",
    "insertText": "operator(const FARFilter&)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (TSet<FTopLevelAssetPath> RecursiveClassPathsExclusionSet ; bool bRecursivePaths = false ; bool bRecursiveClasses = false ; bool bIncludeOnlyOnDiskAssets = false ; uint32 WithoutPackageFlags = 0 ; uint32 WithPackageFlags = 0 ; void)",
    "insertText": "Append(const FARFilter& Other)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (PackageNames .)",
    "insertText": "Append(Other.PackageNames)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (PackagePaths .)",
    "insertText": "Append(Other.PackagePaths)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (SoftObjectPaths .)",
    "insertText": "Append(Other.SoftObjectPaths)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (ClassPaths .)",
    "insertText": "Append(Other.ClassPaths)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TagsAndValues .)",
    "insertText": "Add(TagIt.Key(), TagIt.Value())"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (} RecursiveClassPathsExclusionSet .)",
    "insertText": "Append(Other.RecursiveClassPathsExclusionSet)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bRecursivePaths | = Other . bRecursivePaths ; bRecursiveClasses | = Other . bRecursiveClasses ; bIncludeOnlyOnDiskAssets | = Other . bIncludeOnlyOnDiskAssets ; WithoutPackageFlags | = Other . WithoutPackageFlags ; WithPackageFlags | = Other . WithPackageFlags ; } bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "IsRecursive()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRecursive()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (PackageNames .)",
    "insertText": "Empty()"
  },
  {
    "label": "ensure()",
    "kind": "Method",
    "detail": "Function (bRecursivePaths = false ; bRecursiveClasses = false ; bIncludeOnlyOnDiskAssets = false ; WithoutPackageFlags = 0 ; WithPackageFlags = 0 ;)",
    "insertText": "ensure(IsEmpty())"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "SortForSaving()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortForSaving()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FARFilter& Other)"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Save(FCbWriter& Writer)"
  },
  {
    "label": "TryLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLoad(const FCbFieldView& Field)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "operator(FCbWriter& Writer, const FARFilter& Filter)"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (Filter .)",
    "insertText": "Save(Writer)"
  },
  {
    "label": "FARCompiledFilter()",
    "kind": "Method",
    "detail": "Function (} } ; template<> struct TStructOpsTypeTraits<FARFilter> : public TStructOpsTypeTraitsBase2<FARFilter> { enum { WithPostSerialize = true,} ; } ; struct FARCompiledFilter { PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FARCompiledFilter()"
  },
  {
    "label": "FARCompiledFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FARCompiledFilter(FARCompiledFilter&&)"
  },
  {
    "label": "FARCompiledFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FARCompiledFilter(const FARCompiledFilter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FARCompiledFilter&)",
    "insertText": "operator(FARCompiledFilter&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FARCompiledFilter&)",
    "insertText": "operator(const FARCompiledFilter&)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Clear()"
  }
]