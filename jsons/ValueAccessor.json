[
  {
    "label": "ValueAccessor0",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor0"
  },
  {
    "label": "ValueAccessor1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor1"
  },
  {
    "label": "ValueAccessor2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor2"
  },
  {
    "label": "ValueAccessor3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor3"
  },
  {
    "label": "CacheItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CacheItem"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "ValueAccessorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessorBase"
  },
  {
    "label": "Tree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Tree"
  },
  {
    "label": "ValueAccessorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessorBase"
  },
  {
    "label": "ValueAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor"
  },
  {
    "label": "RootNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RootNode"
  },
  {
    "label": "InternalNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InternalNode"
  },
  {
    "label": "LeafNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LeafNode"
  },
  {
    "label": "Tree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Tree"
  },
  {
    "label": "ValueAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor"
  },
  {
    "label": "ValueAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor"
  },
  {
    "label": "ValueAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor"
  },
  {
    "label": "ValueAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor"
  },
  {
    "label": "ValueAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor"
  },
  {
    "label": "ValueAccessorRW",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessorRW"
  },
  {
    "label": "CacheItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CacheItem"
  },
  {
    "label": "CacheItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CacheItem"
  },
  {
    "label": "ValueAccessor0",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor0"
  },
  {
    "label": "Tree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Tree"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "ValueAccessor1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor1"
  },
  {
    "label": "RootNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RootNode"
  },
  {
    "label": "InternalNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InternalNode"
  },
  {
    "label": "LeafNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LeafNode"
  },
  {
    "label": "Tree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Tree"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "ValueAccessor2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor2"
  },
  {
    "label": "RootNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RootNode"
  },
  {
    "label": "InternalNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InternalNode"
  },
  {
    "label": "LeafNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LeafNode"
  },
  {
    "label": "Tree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Tree"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "ValueAccessor3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAccessor3"
  },
  {
    "label": "RootNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RootNode"
  },
  {
    "label": "InternalNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InternalNode"
  },
  {
    "label": "LeafNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LeafNode"
  },
  {
    "label": "Tree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Tree"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "static_assert(CacheLevels < _TreeType::DEPTH, \"cache size exceeds tree depth\")"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (LockT)",
    "insertText": "lock(mMutex)"
  },
  {
    "label": "CacheItem()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "CacheItem(const CacheItem&)"
  },
  {
    "label": "CacheItem()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "CacheItem(const CacheItem&)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "static_assert(_TreeType::DEPTH >= 2, \"cache size exceeds tree depth\")"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "static_assert(_TreeType::DEPTH >= 3, \"cache size exceeds tree depth\")"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "static_assert(_TreeType::DEPTH >= 4, \"cache size exceeds tree depth\")"
  }
]