[
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "UDebugSkelMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDebugSkelMeshComponent"
  },
  {
    "label": "FVertInfluence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVertInfluence"
  },
  {
    "label": "FSkinWeightProfileInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinWeightProfileInfo"
  },
  {
    "label": "FRawSkinWeight",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRawSkinWeight"
  },
  {
    "label": "FImportedSkinWeightProfileData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportedSkinWeightProfileData"
  },
  {
    "label": "FRuntimeSkinWeightProfileData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRuntimeSkinWeightProfileData"
  },
  {
    "label": "FSkinWeightOverrideInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinWeightOverrideInfo"
  },
  {
    "label": "FSkinweightReadbackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinweightReadbackData"
  },
  {
    "label": "FSkinWeightProfileStack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinWeightProfileStack"
  },
  {
    "label": "FSkinWeightProfilesData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinWeightProfilesData"
  },
  {
    "label": "FSkinWeightProfileManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinWeightProfileManager"
  },
  {
    "label": "FSkinWeightProfileManagerAsyncTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinWeightProfileManagerAsyncTask"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BoneIndices . h \" # include \" Misc / StringBuilder . h \" # include \" RHIGPUReadback . h \" # include \" Rendering / SkinWeightVertexBuffer . h \" # include \" RenderingThread . h \" # include \" String / Join . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / NameTypes . h \" # include \" UObject / PerPlatformProperties . h \" # include \" SkinWeightProfile . generated . h \" class USkeletalMesh ; class UDebugSkelMeshComponent ; namespace SkeletalMeshImportData { struct FVertInfluence ; } int32 GSkinWeightProfilesLoadByDefaultMode ; int32 GSkinWeightProfilesDefaultLODOverride ; int32 GSkinWeightProfilesAllowedFromLOD ; FAutoConsoleVariableRef CVarSkinWeightsLoadByDefaultMode ; FAutoConsoleVariableRef CVarSkinWeightProfilesDefaultLODOverride ; FAutoConsoleVariableRef CVarSkinWeightProfilesAllowedFromLOD ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category = SkinWeights)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# endif } ; # if WITH_EDITORONLY_DATA struct FRawSkinWeight { FBoneIndexType InfluenceBones [ MAX_TOTAL_INFLUENCES ] ; uint16 InfluenceWeights [ MAX_TOTAL_INFLUENCES ] ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FRawSkinWeight& OverrideEntry)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; struct FImportedSkinWeightProfileData { TArray<FRawSkinWeight> SkinWeights ; TArray<SkeletalMeshImportData::FVertInfluence> SourceModelInfluences ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FImportedSkinWeightProfileData& ProfileData)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; # endif struct FRuntimeSkinWeightProfileData { struct FSkinWeightOverrideInfo { uint32 InfluencesOffset ; # if WITH_EDITORONLY_DATA uint8 NumInfluences_DEPRECATED ; # endif FArchive&)",
    "insertText": "operator(FArchive& Ar, FSkinWeightOverrideInfo& OverrideInfo)"
  },
  {
    "label": "ApplyOverrides()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "ApplyOverrides(FSkinWeightVertexBuffer* OverrideBuffer)"
  },
  {
    "label": "ApplyDefaultOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyDefaultOverride(FSkinWeightVertexBuffer* Buffer)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA TArray<FSkinWeightOverrideInfo> OverridesInfo_DEPRECATED ; TArray<uint16> Weights_DEPRECATED ; # endif TArray<uint8> BoneIDs ; TArray<uint8> BoneWeights ; TMap<uint32,uint32> VertexIndexToInfluenceOffset ; uint8 NumWeightsPerVertex ; bool b16BitBoneIndices ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FRuntimeSkinWeightProfileData& OverrideData)"
  },
  {
    "label": "max()",
    "kind": "Method",
    "detail": "Function (} ; struct FSkinweightReadbackData { TUniquePtr<FRHIGPUBufferReadback> BufferReadback ; TArray<uint8> ReadbackData ; uint32 ReadbackFinishedFrameIndex = std::numeric_limits<uint32)",
    "insertText": "max()"
  },
  {
    "label": "FSkinWeightProfileStack()",
    "kind": "Method",
    "detail": "Function (} ; struct FSkinWeightProfileStack { int32 MaxLayerCount = 2 ; TStaticArray<FName,MaxLayerCount> Layers ;)",
    "insertText": "FSkinWeightProfileStack()"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (InPlace,NAME_None } { } template<. . . ArgTypes)",
    "insertText": "UE_REQUIRES((sizeof...(ArgTypes) > 0 && sizeof...(ArgTypes) <= MaxLayerCount) && UE::Core::Private::TCanBeConvertedToFromAll_V<FName, ArgTypes...>) > explicit FSkinWeightProfileStack(ArgTypes&&... Args)"
  },
  {
    "label": "FSkinWeightProfileStack()",
    "kind": "Method",
    "detail": "Function (Layers [ LayerIndex ] = NAME_None ; } })",
    "insertText": "FSkinWeightProfileStack(const FName InProfileNames[MaxLayerCount])"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Layers [ LayerIndex ] = InProfileNames [ LayerIndex ] ; } } bool)",
    "insertText": "operator(const FSkinWeightProfileStack& InProfileStack)"
  },
  {
    "label": "Normalized()",
    "kind": "Method",
    "detail": "Function (OutProfileNames [ LayerIndex ] = Layers [ LayerIndex ] ; } } FSkinWeightProfileStack)",
    "insertText": "Normalized()"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (FSkinWeightProfileStack NormalizedLayers ;)",
    "insertText": "for(int32 ReadLayer = 0, WriteLayer = 0; ReadLayer < MaxLayerCount; ++ReadLayer)"
  },
  {
    "label": "GetUniqueId()",
    "kind": "Method",
    "detail": "Function (NormalizedLayers . Layers [ WriteLayer + + ] = Layers [ ReadLayer ] ; } } return NormalizedLayers ; } FString)",
    "insertText": "GetUniqueId()"
  },
  {
    "label": "IdString()",
    "kind": "Method",
    "detail": "Function (TStringBuilder<2 5 6>)",
    "insertText": "IdString(InPlace, UE::String::JoinBy(Layers, [](FName InLayerName) { return InLayerName.ToString(); }, TEXT(\"-\")))"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FSkinWeightProfileStack& InProfileStack)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (uint32 Hash = 0 ;)",
    "insertText": "for(int32 LayerIndex = 0; LayerIndex < MaxLayerCount; ++LayerIndex)"
  },
  {
    "label": "HashCombineFast()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombineFast(Hash, GetTypeHash(InProfileStack[LayerIndex]))"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} return Hash ; } } ; struct FSkinWeightProfilesData { void)",
    "insertText": "Init(FSkinWeightVertexBuffer* InBaseBuffer)"
  },
  {
    "label": "FSkinWeightProfilesData()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSkinWeightProfilesData()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_ThreeParams(int32 , FOnPickOverrideSkinWeightProfile, const USkeletalMesh* , const TArrayView<const FSkinWeightProfileInfo> , int32)"
  },
  {
    "label": "OverrideBaseBufferSkinWeightData()",
    "kind": "Method",
    "detail": "Function (FOnPickOverrideSkinWeightProfile OnPickOverrideSkinWeightProfile ; # if ! WITH_EDITOR void)",
    "insertText": "OverrideBaseBufferSkinWeightData(USkeletalMesh* Mesh, int32 LODIndex)"
  },
  {
    "label": "SetDynamicDefaultSkinWeightProfile()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "SetDynamicDefaultSkinWeightProfile(USkeletalMesh* Mesh, int32 LODIndex, bool bSerialization = false)"
  },
  {
    "label": "ClearDynamicDefaultSkinWeightProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDynamicDefaultSkinWeightProfile(USkeletalMesh* Mesh, int32 LODIndex)"
  },
  {
    "label": "SetupDynamicDefaultSkinWeightProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDynamicDefaultSkinWeightProfile()"
  },
  {
    "label": "GetDefaultOverrideBuffer()",
    "kind": "Method",
    "detail": "Function (FSkinWeightVertexBuffer*)",
    "insertText": "GetDefaultOverrideBuffer()"
  },
  {
    "label": "ContainsOverrideBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsOverrideBuffer(const FSkinWeightProfileStack& InProfileStack)"
  },
  {
    "label": "ContainsProfile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsProfile(const FName& ProfileName)"
  },
  {
    "label": "GetOverrideData()",
    "kind": "Method",
    "detail": "Function (const FRuntimeSkinWeightProfileData*)",
    "insertText": "GetOverrideData(const FName& ProfileName)"
  },
  {
    "label": "AddOverrideData()",
    "kind": "Method",
    "detail": "Function (FRuntimeSkinWeightProfileData&)",
    "insertText": "AddOverrideData(const FName& ProfileName)"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "GetResourcesSize()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetResourcesSize()"
  },
  {
    "label": "GetCPUAccessMemoryOverhead()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetCPUAccessMemoryOverhead()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FSkinWeightProfilesData& OverrideData)"
  },
  {
    "label": "SerializeMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeMetaData(FArchive& Ar)"
  },
  {
    "label": "ReleaseCPUResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseCPUResources()"
  },
  {
    "label": "CreateRHIBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRHIBuffers(FRHICommandListBase& RHICmdList, TArray<TPair<FSkinWeightProfileStack, FSkinWeightRHIInfo>>& OutBuffers)"
  },
  {
    "label": "InitRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHIForStreaming(const TArray<TPair<FSkinWeightProfileStack, FSkinWeightRHIInfo>>& IntermediateBuffers, FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "ReleaseRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHIForStreaming(FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "IsDefaultOverridden()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDefaultOverridden()"
  },
  {
    "label": "ReleaseBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseBuffer(const FSkinWeightProfileStack& InProfileStack, bool bForceRelease = false)"
  },
  {
    "label": "ApplyOverrideProfileStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyOverrideProfileStack(const FSkinWeightProfileStack& InProfileStack, FSkinWeightVertexBuffer* OverrideBuffer, const uint8* BaseBufferData = nullptr)"
  },
  {
    "label": "IsPendingReadback()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPendingReadback()"
  },
  {
    "label": "EnqueueGPUReadback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueGPUReadback()"
  },
  {
    "label": "IsGPUReadbackFinished()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGPUReadbackFinished()"
  },
  {
    "label": "EnqueueDataReadback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueDataReadback()"
  },
  {
    "label": "IsDataReadbackPending()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDataReadbackPending()"
  },
  {
    "label": "IsDataReadbackFinished()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDataReadbackFinished()"
  },
  {
    "label": "ResetGPUReadback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetGPUReadback()"
  }
]