[
  {
    "label": "FNetBitReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBitReader"
  },
  {
    "label": "FNetBitWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBitWriter"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "ISimCallbackObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISimCallbackObject"
  },
  {
    "label": "FSimCallbackOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimCallbackOutput"
  },
  {
    "label": "FSimCallbackInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimCallbackInput"
  },
  {
    "label": "FPushPhysicsData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPushPhysicsData"
  },
  {
    "label": "FSimCallbackNoInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimCallbackNoInput"
  },
  {
    "label": "FSimCallbackNoOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimCallbackNoOutput"
  },
  {
    "label": "FSimCallbackOutputHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimCallbackOutputHandle"
  },
  {
    "label": "TSimCallbackOutputHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSimCallbackOutputHandle"
  },
  {
    "label": "FSimCallbackOutput()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Queue . h \" # include \" Chaos / Defines . h \" # include \" Chaos / Core . h \" class FNetBitReader ; class FNetBitWriter ; class APlayerController ; namespace Chaos { class ISimCallbackObject ; struct FSimCallbackOutput {)",
    "insertText": "FSimCallbackOutput() : InternalTime(-1)"
  },
  {
    "label": "FSimCallbackOutput()",
    "kind": "Method",
    "detail": "Function (} FReal InternalTime ; protected : ~)",
    "insertText": "FSimCallbackOutput()"
  },
  {
    "label": "FSimCallbackInput()",
    "kind": "Method",
    "detail": "Function (} ; struct FSimCallbackInput {)",
    "insertText": "FSimCallbackInput() : NumSteps(0)"
  },
  {
    "label": "SetNumSteps_External()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetNumSteps_External(int32 InNumSteps)"
  },
  {
    "label": "NetSendInputCmd()",
    "kind": "Method",
    "detail": "Function (NumSteps = InNumSteps ; } bool)",
    "insertText": "NetSendInputCmd(FNetBitWriter& Ar)"
  },
  {
    "label": "Release_Internal()",
    "kind": "Method",
    "detail": "Function (private : int32 NumSteps ; void)",
    "insertText": "Release_Internal(ISimCallbackObject& CallbackObj)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (struct FPushPhysicsData ; } ; struct FSimCallbackNoInput : public FSimCallbackInput { void)",
    "insertText": "Reset()"
  },
  {
    "label": "FSimCallbackOutputHandle()",
    "kind": "Method",
    "detail": "Function (} } ; class FSimCallbackOutputHandle { public :)",
    "insertText": "FSimCallbackOutputHandle() : SimCallbackOutput(nullptr) , SimCallbackObject(nullptr)"
  },
  {
    "label": "FSimCallbackOutputHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSimCallbackOutputHandle(FSimCallbackOutput* Output, ISimCallbackObject* InCallbackObject) : SimCallbackOutput(Output) , SimCallbackObject(InCallbackObject)"
  },
  {
    "label": "FSimCallbackOutputHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSimCallbackOutputHandle(const FSimCallbackOutputHandle& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSimCallbackOutputHandle&)",
    "insertText": "operator(const FSimCallbackOutputHandle& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSimCallbackOutputHandle&)",
    "insertText": "operator(FSimCallbackOutputHandle&& Other)"
  },
  {
    "label": "Free_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free_External()"
  },
  {
    "label": "FSimCallbackOutputHandle()",
    "kind": "Method",
    "detail": "Function (SimCallbackOutput = Other . SimCallbackOutput ; Other . SimCallbackOutput = nullptr ; SimCallbackObject = Other . SimCallbackObject ; Other . SimCallbackObject = nullptr ; } return* this ; })",
    "insertText": "FSimCallbackOutputHandle(FSimCallbackOutputHandle&& Other) : SimCallbackOutput(Other.SimCallbackOutput) , SimCallbackObject(Other.SimCallbackObject)"
  },
  {
    "label": "FSimCallbackOutputHandle()",
    "kind": "Method",
    "detail": "Function (Other . SimCallbackOutput = nullptr ; Other . SimCallbackObject = nullptr ; } ~)",
    "insertText": "FSimCallbackOutputHandle()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "TSimCallbackOutputHandle()",
    "kind": "Method",
    "detail": "Function (FSimCallbackOutput* SimCallbackOutput ; ISimCallbackObject* SimCallbackObject ; } ; template<T> class TSimCallbackOutputHandle : public FSimCallbackOutputHandle { public :)",
    "insertText": "TSimCallbackOutputHandle() : FSimCallbackOutputHandle()"
  },
  {
    "label": "TSimCallbackOutputHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TSimCallbackOutputHandle(T* Output, ISimCallbackObject* CallbackObject) : FSimCallbackOutputHandle(Output, CallbackObject)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} T*)",
    "insertText": "Get()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} T*)",
    "insertText": "operator()"
  }
]