[
  {
    "label": "RelocToApply",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RelocToApply"
  },
  {
    "label": "RelocVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RelocVisitor"
  },
  {
    "label": "RelocToApply()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_OBJECT_RELOCVISITOR_H # define LLVM_OBJECT_RELOCVISITOR_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / Object / COFF . h \" # include \" llvm / Object / ELFObjectFile . h \" # include \" llvm / Object / MachO . h \" # include \" llvm / Object / ObjectFile . h \" # include \" llvm / Support / Debug . h \" # include \" llvm / Support / ELF . h \" # include \" llvm / Support / MachO . h \" # include \" llvm / Support / raw_ostream . h \" namespace llvm { namespace object { struct RelocToApply { int64_t Value ; char Width ;)",
    "insertText": "RelocToApply(int64_t Value, char Width) : Value(Value), Width(Width)"
  },
  {
    "label": "RelocToApply()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RelocToApply() : Value(0), Width(0)"
  },
  {
    "label": "RelocVisitor()",
    "kind": "Method",
    "detail": "Function (} } ; class RelocVisitor { public :)",
    "insertText": "RelocVisitor(const ObjectFile &Obj) : ObjToVisit(Obj), HasError(false)"
  },
  {
    "label": "visit()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visit(uint32_t RelocType, RelocationRef R, uint64_t Value = 0)"
  },
  {
    "label": "RelocToApply()",
    "kind": "Method",
    "detail": "Function (HasError = true ; return)",
    "insertText": "RelocToApply()"
  },
  {
    "label": "error()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "error()"
  },
  {
    "label": "switch()",
    "kind": "Method",
    "detail": "Function (} case Triple::aarch64 :)",
    "insertText": "switch(RelocType)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} } else)",
    "insertText": "if(ObjToVisit.getBytesInAddress() == 4)"
  },
  {
    "label": "report_fatal_error()",
    "kind": "Method",
    "detail": "Function (} } else {)",
    "insertText": "report_fatal_error(\"Invalid word size in object file\")"
  },
  {
    "label": "visitCOFF()",
    "kind": "Method",
    "detail": "Function (} } RelocToApply)",
    "insertText": "visitCOFF(uint32_t RelocType, RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitMachO()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitMachO(uint32_t RelocType, RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitMACHO_X86_64_UNSIGNED()",
    "kind": "Method",
    "detail": "Function (default : break ; case MachO::X86_64_RELOC_UNSIGNED : return)",
    "insertText": "visitMACHO_X86_64_UNSIGNED(R, Value)"
  },
  {
    "label": "getELFAddend()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "getELFAddend(RelocationRef R)"
  },
  {
    "label": "ELFRelocationRef()",
    "kind": "Method",
    "detail": "Function (ErrorOr<int64_t> AddendOrErr =)",
    "insertText": "ELFRelocationRef(R).getAddend()"
  },
  {
    "label": "MachOObjectFile()",
    "kind": "Method",
    "detail": "Function (const MachOObjectFile* Obj = cast<)",
    "insertText": "MachOObjectFile(R.getObject())"
  },
  {
    "label": "visitELF_386_NONE()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_386_NONE(RelocationRef R)"
  },
  {
    "label": "visitELF_386_32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_386_32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_386_PC32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_386_PC32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "getOffset()",
    "kind": "Method",
    "detail": "Function (uint64_t Address = R .)",
    "insertText": "getOffset()"
  },
  {
    "label": "visitELF_X86_64_NONE()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_X86_64_NONE(RelocationRef R)"
  },
  {
    "label": "visitELF_X86_64_64()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_X86_64_64(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "getELFAddend()",
    "kind": "Method",
    "detail": "Function (int64_t Addend =)",
    "insertText": "getELFAddend(R)"
  },
  {
    "label": "visitELF_X86_64_PC32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_X86_64_PC32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_X86_64_32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_X86_64_32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "Res()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "Res(Value + Addend)"
  },
  {
    "label": "visitELF_X86_64_32S()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_X86_64_32S(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_PPC64_ADDR32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_PPC64_ADDR32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_PPC64_ADDR64()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_PPC64_ADDR64(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_PPC_ADDR32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_PPC_ADDR32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_MIPS_32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_MIPS_32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "RelocToApply()",
    "kind": "Method",
    "detail": "Function (uint32_t Res = Value& 0 xFFFFFFFF ; return)",
    "insertText": "RelocToApply(Res, 4)"
  },
  {
    "label": "visitELF_MIPS64_32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_MIPS64_32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_MIPS64_64()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_MIPS64_64(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_AARCH64_ABS32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_AARCH64_ABS32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int64_t Res = Value + Addend ;)",
    "insertText": "if(Res < INT32_MIN || Res > UINT32_MAX)"
  },
  {
    "label": "visitELF_AARCH64_ABS64()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_AARCH64_ABS64(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_390_32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_390_32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_390_64()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_390_64(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_SPARC_32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_SPARC_32(RelocationRef R, uint32_t Value)"
  },
  {
    "label": "visitELF_SPARCV9_32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_SPARCV9_32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_SPARCV9_64()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_SPARCV9_64(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitELF_ARM_ABS32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitELF_ARM_ABS32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitCOFF_I386_SECREL()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitCOFF_I386_SECREL(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitCOFF_I386_DIR32()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitCOFF_I386_DIR32(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitCOFF_AMD64_SECREL()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitCOFF_AMD64_SECREL(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitCOFF_AMD64_ADDR64()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitCOFF_AMD64_ADDR64(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "visitMACHO_X86_64_UNSIGNED()",
    "kind": "Method",
    "detail": "Function (} RelocToApply)",
    "insertText": "visitMACHO_X86_64_UNSIGNED(RelocationRef R, uint64_t Value)"
  },
  {
    "label": "getLengthMachO64()",
    "kind": "Method",
    "detail": "Function (uint8_t Length =)",
    "insertText": "getLengthMachO64(R)"
  },
  {
    "label": "RelocToApply()",
    "kind": "Method",
    "detail": "Function (Length = 1<<Length ; return)",
    "insertText": "RelocToApply(Value, Length)"
  }
]