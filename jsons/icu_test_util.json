[
  {
    "label": "TimeZone",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimeZone"
  },
  {
    "label": "ScopedRestoreICUDefaultLocale",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedRestoreICUDefaultLocale"
  },
  {
    "label": "ScopedRestoreDefaultTimezone",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedRestoreDefaultTimezone"
  },
  {
    "label": "ScopedRestoreICUDefaultLocale()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_ICU_TEST_UTIL_H_ # define BASE_TEST_ICU_TEST_UTIL_H_ # include<memory> # include<string> # include \" third_party / icu / source / common / unicode / uversion . h \" U_NAMESPACE_BEGIN class TimeZone ; U_NAMESPACE_END namespace base { namespace test { class ScopedRestoreICUDefaultLocale { public :)",
    "insertText": "ScopedRestoreICUDefaultLocale()"
  },
  {
    "label": "ScopedRestoreICUDefaultLocale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedRestoreICUDefaultLocale(const std::string& locale)"
  },
  {
    "label": "ScopedRestoreICUDefaultLocale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedRestoreICUDefaultLocale(const ScopedRestoreICUDefaultLocale&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScopedRestoreICUDefaultLocale&)",
    "insertText": "operator(const ScopedRestoreICUDefaultLocale&)"
  },
  {
    "label": "ScopedRestoreDefaultTimezone()",
    "kind": "Method",
    "detail": "Function (private : const std::string default_locale_ ; } ; class ScopedRestoreDefaultTimezone { public :)",
    "insertText": "ScopedRestoreDefaultTimezone(const char* zoneid)"
  },
  {
    "label": "ScopedRestoreDefaultTimezone()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ScopedRestoreDefaultTimezone()"
  },
  {
    "label": "ScopedRestoreDefaultTimezone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedRestoreDefaultTimezone(const ScopedRestoreDefaultTimezone&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScopedRestoreDefaultTimezone&)",
    "insertText": "operator(const ScopedRestoreDefaultTimezone&)"
  },
  {
    "label": "InitializeICUForTesting()",
    "kind": "Method",
    "detail": "Function (private : std::unique_ptr<icu::TimeZone> original_zone_ ; } ; void)",
    "insertText": "InitializeICUForTesting()"
  }
]