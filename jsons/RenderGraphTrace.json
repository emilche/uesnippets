[
  {
    "label": "FRDGBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuffer"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FRDGPass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGPass"
  },
  {
    "label": "FRDGTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGTexture"
  },
  {
    "label": "FRDGViewableResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGViewableResource"
  },
  {
    "label": "FChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChannel"
  },
  {
    "label": "FRDGTrace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGTrace"
  },
  {
    "label": "UE_TRACE_CHANNEL_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" RHITransientResourceAllocator . h \" # include \" RenderGraphDefinitions . h \" # include \" Trace / Trace . h \" class FRDGBuffer ; class FRDGBuilder ; class FRDGPass ; class FRDGTexture ; class FRDGViewableResource ; namespace UE { namespace Trace { class FChannel ; } } # if RDG_ENABLE_TRACE)",
    "insertText": "UE_TRACE_CHANNEL_EXTERN(RDGChannel, RENDERCORE_API)"
  },
  {
    "label": "FRDGTrace()",
    "kind": "Method",
    "detail": "Function (class FRDGTrace { public :)",
    "insertText": "FRDGTrace()"
  },
  {
    "label": "OutputGraphBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputGraphBegin()"
  },
  {
    "label": "OutputGraphEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputGraphEnd(const FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "AddResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddResource(FRDGViewableResource* Resource)"
  },
  {
    "label": "AddTexturePassDependency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTexturePassDependency(FRDGTexture* Texture, FRDGPass* Pass)"
  },
  {
    "label": "AddBufferPassDependency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBufferPassDependency(FRDGBuffer* Buffer, FRDGPass* Pass)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (FRHITransientAllocationStats TransientAllocationStats ; bool)",
    "insertText": "IsEnabled()"
  }
]