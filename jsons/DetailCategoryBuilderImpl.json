[
  {
    "label": "IDetailGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailGroup"
  },
  {
    "label": "FDetailGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailGroup"
  },
  {
    "label": "IDetailPropertyRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailPropertyRow"
  },
  {
    "label": "FDetailPropertyRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailPropertyRow"
  },
  {
    "label": "FDetailLayoutCustomization",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDetailLayoutCustomization"
  },
  {
    "label": "FDetailLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailLayout"
  },
  {
    "label": "FDetailLayoutMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailLayoutMap"
  },
  {
    "label": "FDetailCategoryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailCategoryImpl"
  },
  {
    "label": "FDetailLayoutCustomization()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / SWidget . h \" # include \" IPropertyUtilities . h \" # include \" DetailTreeNode . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" PropertyNode . h \" # include \" UObject / StructOnScope . h \" # include \" PropertyHandle . h \" # include \" DetailWidgetRow . h \" # include \" DetailCustomBuilderRow . h \" # include \" DetailLayoutBuilderImpl . h \" # include \" IDetailCustomNodeBuilder . h \" # include \" DetailCategoryBuilder . h \" # include \" PropertyCustomizationHelpers . h \" class IDetailGroup ; class FDetailGroup ; class IDetailPropertyRow ; class FDetailPropertyRow ; struct FDetailLayoutCustomization {)",
    "insertText": "FDetailLayoutCustomization()"
  },
  {
    "label": "HasPropertyNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FDetailPropertyRow> PropertyRow ; TSharedPtr<FDetailGroup> DetailGroup ; TSharedPtr<FDetailWidgetRow> WidgetDecl ; TSharedPtr<FDetailCustomBuilderRow> CustomBuilderRow ; bool)",
    "insertText": "HasPropertyNode()"
  },
  {
    "label": "HasCustomWidget()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasCustomWidget()"
  },
  {
    "label": "HasCustomBuilder()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasCustomBuilder()"
  },
  {
    "label": "HasGroup()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasGroup()"
  },
  {
    "label": "HasExternalPropertyRow()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasExternalPropertyRow()"
  },
  {
    "label": "IsValidCustomization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidCustomization()"
  },
  {
    "label": "IsHidden()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsHidden()"
  },
  {
    "label": "GetPropertyNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyNode>)",
    "insertText": "GetPropertyNode()"
  },
  {
    "label": "GetWidgetRow()",
    "kind": "Method",
    "detail": "Function (FDetailWidgetRow)",
    "insertText": "GetWidgetRow()"
  },
  {
    "label": "GetPropertyHandles()",
    "kind": "Method",
    "detail": "Function (TArrayView<TSharedPtr<IPropertyHandle>>)",
    "insertText": "GetPropertyHandles()"
  },
  {
    "label": "GetFilterTextString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFilterTextString()"
  },
  {
    "label": "GetDetailLayoutRow()",
    "kind": "Method",
    "detail": "Function (bool bAdvanced { false } ; bool bCustom { false } ; const IDetailLayoutRow*)",
    "insertText": "GetDetailLayoutRow()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetName()"
  },
  {
    "label": "GetCustomResetToDefault()",
    "kind": "Method",
    "detail": "Function (TOptional<FResetToDefaultOverride>)",
    "insertText": "GetCustomResetToDefault()"
  },
  {
    "label": "FDetailLayout()",
    "kind": "Method",
    "detail": "Function (} ; class FDetailLayout { public :)",
    "insertText": "FDetailLayout(FName InInstanceName) : InstanceName(InInstanceName)"
  },
  {
    "label": "AddLayout()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddLayout(const FDetailLayoutCustomization& Layout)"
  },
  {
    "label": "GetSimpleLayouts()",
    "kind": "Method",
    "detail": "Function (const TArray<FDetailLayoutCustomization>&)",
    "insertText": "GetSimpleLayouts()"
  },
  {
    "label": "HasAdvancedLayouts()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAdvancedLayouts()"
  },
  {
    "label": "GetInstanceName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetInstanceName()"
  },
  {
    "label": "FindOrAdd()",
    "kind": "Method",
    "detail": "Function (} FDetailLayout&)",
    "insertText": "FindOrAdd(FName InstanceName)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FDetailLayout& Layout = Layouts [ LayoutIndex ] ;)",
    "insertText": "if(Layout.GetInstanceName() == InstanceName)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (int32 Index = Layouts .)",
    "insertText": "Add(FDetailLayout(InstanceName))"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (} RangedForConstIteratorType)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (} RangedForIteratorType)",
    "insertText": "end()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FDetailLayout&)",
    "insertText": "operator(int32 Index)"
  },
  {
    "label": "ShouldShowGroup()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldShowGroup(FName RequiredGroupName)"
  },
  {
    "label": "FDetailCategoryImpl()",
    "kind": "Method",
    "detail": "Function (private : TArray<FDetailLayout> Layouts ; bool bContainsBaseInstance ; } ; class FDetailCategoryImpl : public IDetailCategoryBuilder,public FDetailTreeNode,public TSharedFromThis<FDetailCategoryImpl> { public :)",
    "insertText": "FDetailCategoryImpl(FName InCategoryName, TSharedRef<FDetailLayoutBuilderImpl> InDetailLayout)"
  },
  {
    "label": "FDetailCategoryImpl()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDetailCategoryImpl()"
  },
  {
    "label": "InitiallyCollapsed()",
    "kind": "Method",
    "detail": "Function (IDetailCategoryBuilder&)",
    "insertText": "InitiallyCollapsed(bool bShouldBeInitiallyCollapsed)"
  },
  {
    "label": "OnExpansionChanged()",
    "kind": "Method",
    "detail": "Function (IDetailCategoryBuilder&)",
    "insertText": "OnExpansionChanged(FOnBooleanValueChanged InOnExpansionChanged)"
  },
  {
    "label": "RestoreExpansionState()",
    "kind": "Method",
    "detail": "Function (IDetailCategoryBuilder&)",
    "insertText": "RestoreExpansionState(bool bRestore)"
  },
  {
    "label": "HeaderContent()",
    "kind": "Method",
    "detail": "Function (IDetailCategoryBuilder&)",
    "insertText": "HeaderContent(TSharedRef<SWidget> InHeaderContent, bool bWholeRowContent = false)"
  },
  {
    "label": "AddProperty()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow&)",
    "insertText": "AddProperty(FName PropertyPath, UClass* ClassOuter = nullptr, FName InstanceName = NAME_None, EPropertyLocation::Type Location = EPropertyLocation::Default)"
  },
  {
    "label": "AddProperty()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow&)",
    "insertText": "AddProperty(TSharedPtr<IPropertyHandle> PropertyHandle, EPropertyLocation::Type Location = EPropertyLocation::Default)"
  },
  {
    "label": "AddExternalObjects()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddExternalObjects(const TArray<UObject*>& Objects, EPropertyLocation::Type Location = EPropertyLocation::Default, const FAddPropertyParams& Params = FAddPropertyParams())"
  },
  {
    "label": "AddExternalObjectProperty()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddExternalObjectProperty(const TArray<UObject*>& Objects, FName PropertyName, EPropertyLocation::Type Location = EPropertyLocation::Default, const FAddPropertyParams& Params = FAddPropertyParams())"
  },
  {
    "label": "AddExternalStructure()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddExternalStructure(TSharedPtr<FStructOnScope> StructData, EPropertyLocation::Type Location = EPropertyLocation::Default)"
  },
  {
    "label": "AddExternalStructureProperty()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddExternalStructureProperty(TSharedPtr<FStructOnScope> StructData, FName PropertyName, EPropertyLocation::Type Location = EPropertyLocation::Default, const FAddPropertyParams& Params = FAddPropertyParams())"
  },
  {
    "label": "AddExternalStructureProperty()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddExternalStructureProperty(TSharedPtr<IStructureDataProvider> StructData, FName PropertyName, EPropertyLocation::Type Location = EPropertyLocation::Default, const FAddPropertyParams& Params = FAddPropertyParams())"
  },
  {
    "label": "AddAllExternalStructureProperties()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IPropertyHandle>>)",
    "insertText": "AddAllExternalStructureProperties(TSharedRef<FStructOnScope> StructData, EPropertyLocation::Type Location = EPropertyLocation::Default, TArray<IDetailPropertyRow*>* OutPropertiesRow = nullptr)"
  },
  {
    "label": "AddAllExternalStructureProperties()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IPropertyHandle>>)",
    "insertText": "AddAllExternalStructureProperties(TSharedPtr<IStructureDataProvider> StructProvider, EPropertyLocation::Type Location = EPropertyLocation::Default, TArray<IDetailPropertyRow*>* OutPropertiesRow = nullptr)"
  },
  {
    "label": "IsParentLayoutValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsParentLayoutValid()"
  },
  {
    "label": "GetParentLayout()",
    "kind": "Method",
    "detail": "Function (} IDetailLayoutBuilder&)",
    "insertText": "GetParentLayout()"
  },
  {
    "label": "AddCustomRow()",
    "kind": "Method",
    "detail": "Function (} FDetailWidgetRow&)",
    "insertText": "AddCustomRow(const FText& FilterString, bool bForAdvanced = false)"
  },
  {
    "label": "AddCustomBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomBuilder(TSharedRef<IDetailCustomNodeBuilder> InCustomBuilder, bool bForAdvanced = false)"
  },
  {
    "label": "AddGroup()",
    "kind": "Method",
    "detail": "Function (IDetailGroup&)",
    "insertText": "AddGroup(FName GroupName, const FText& LocalizedDisplayName, bool bForAdvanced = false, bool bStartExpanded = false)"
  },
  {
    "label": "GetDefaultProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDefaultProperties(TArray<TSharedRef<IPropertyHandle> >& OutAllProperties, bool bSimpleProperties = true, bool bAdvancedProperties = true)"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (const FText&)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetToolTip()",
    "kind": "Method",
    "detail": "Function (const TOptional<FText>&)",
    "insertText": "GetToolTip()"
  },
  {
    "label": "SetToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToolTip(const FText& ToolTip)"
  },
  {
    "label": "SetCategoryVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCategoryVisibility(bool bIsVisible)"
  },
  {
    "label": "SetShowAdvanced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowAdvanced(bool bShowAdvanced)"
  },
  {
    "label": "GetSortOrder()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSortOrder()"
  },
  {
    "label": "SetSortOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSortOrder(int32 InSortOrder)"
  },
  {
    "label": "AddPropertyDisableInstancedReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPropertyDisableInstancedReference(TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "OnPasteFromText()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FOnPasteFromText>)",
    "insertText": "OnPasteFromText()"
  },
  {
    "label": "GetDetailsView()",
    "kind": "Method",
    "detail": "Function (} IDetailsViewPrivate*)",
    "insertText": "GetDetailsView()"
  },
  {
    "label": "GenerateWidgetForTableView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "GenerateWidgetForTableView(const TSharedRef<STableViewBase>& OwnerTable, bool bAllowFavoriteSystem)"
  },
  {
    "label": "GenerateStandaloneWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateStandaloneWidget(FDetailWidgetRow& OutRow)"
  },
  {
    "label": "GetNodeType()",
    "kind": "Method",
    "detail": "Function (EDetailNodeType)",
    "insertText": "GetNodeType()"
  },
  {
    "label": "GetInitiallyCollapsed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInitiallyCollapsed()"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChildren(FDetailNodeList& OutChildren, const bool& bInIgnoreVisibility = false)"
  },
  {
    "label": "ShouldBeExpanded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldBeExpanded()"
  },
  {
    "label": "GetVisibility()",
    "kind": "Method",
    "detail": "Function (ENodeVisibility)",
    "insertText": "GetVisibility()"
  },
  {
    "label": "FilterNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterNode(const FDetailFilter& DetailFilter)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "ShouldShowOnlyChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowOnlyChildren()"
  },
  {
    "label": "GetObjectName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetObjectName()"
  },
  {
    "label": "GetGeneratedChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetGeneratedChildren(FDetailNodeList& OutChildren, bool bIgnoreVisibility, bool bIgnoreAdvancedDropdown)"
  },
  {
    "label": "GetCustomPropertyTypeLayoutMap()",
    "kind": "Method",
    "detail": "Function (FCustomPropertyTypeLayoutMap)",
    "insertText": "GetCustomPropertyTypeLayoutMap()"
  },
  {
    "label": "GetCategoryName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetCategoryName()"
  },
  {
    "label": "GenerateLayout()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GenerateLayout()"
  },
  {
    "label": "AddPropertyNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPropertyNode(TSharedRef<FPropertyNode> PropertyNode, FName InstanceName)"
  },
  {
    "label": "SetDisplayName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisplayName(FName CategoryName, const FText& LocalizedNameOverride)"
  },
  {
    "label": "RequestItemExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestItemExpanded(TSharedRef<FDetailTreeNode> TreeNode, bool bShouldBeExpanded)"
  },
  {
    "label": "RefreshTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshTree(bool bRefilterCategory)"
  },
  {
    "label": "AddTickableNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTickableNode(FDetailTreeNode& TickableNode)"
  },
  {
    "label": "RemoveTickableNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTickableNode(FDetailTreeNode& TickableNode)"
  },
  {
    "label": "GetCategoryPathName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetCategoryPathName()"
  },
  {
    "label": "GetSavedExpansionState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSavedExpansionState(FDetailTreeNode& InTreeNode)"
  },
  {
    "label": "ContainsOnlyAdvanced()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsOnlyAdvanced()"
  },
  {
    "label": "GetNumCustomizations()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumCustomizations()"
  },
  {
    "label": "OnAdvancedDropdownClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAdvancedDropdownClicked()"
  },
  {
    "label": "SetCategoryAsSpecialFavorite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCategoryAsSpecialFavorite()"
  },
  {
    "label": "IsFavoriteCategory()",
    "kind": "Method",
    "detail": "Function (bFavoriteCategory = true ; bForceAdvanced = true ; } bool)",
    "insertText": "IsFavoriteCategory()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "SetIsEmpty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsEmpty(bool bInIsEmpty)"
  },
  {
    "label": "OnItemExpansionChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnItemExpansionChanged(bool bIsExpanded, bool bShouldSaveState)"
  },
  {
    "label": "GenerateChildrenForLayouts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateChildrenForLayouts()"
  },
  {
    "label": "GenerateChildrenForSingleLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateChildrenForSingleLayout(const FDetailLayout& Layout, const TArray<FDetailLayoutCustomization>& Customizations, FDetailNodeList& OutChildren)"
  },
  {
    "label": "GenerateNodesFromCustomizations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateNodesFromCustomizations(const TArray<FDetailLayoutCustomization>& InCustomizationList, FDetailNodeList& OutNodeList)"
  },
  {
    "label": "IsAdvancedLayout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAdvancedLayout(const FDetailLayoutCustomization& LayoutInfo)"
  },
  {
    "label": "AddCustomLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomLayout(const FDetailLayoutCustomization& LayoutInfo)"
  },
  {
    "label": "AddDefaultLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDefaultLayout(const FDetailLayoutCustomization& DefaultLayoutInfo, FName InstanceName)"
  },
  {
    "label": "GetLayoutForInstance()",
    "kind": "Method",
    "detail": "Function (FDetailLayout&)",
    "insertText": "GetLayoutForInstance(FName InstanceName)"
  },
  {
    "label": "ShouldAdvancedBeExpanded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldAdvancedBeExpanded()"
  },
  {
    "label": "IsAdvancedDropdownEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAdvancedDropdownEnabled()"
  },
  {
    "label": "ShouldAdvancedBeVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldAdvancedBeVisible()"
  },
  {
    "label": "IsParentEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsParentEnabled()"
  },
  {
    "label": "RefreshTreeInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshTreeInternal(bool bRefilterCategory)"
  },
  {
    "label": "InitializeObjectName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeObjectName()"
  }
]