[
  {
    "label": "FTimerNodeSortingByTimerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimerNodeSortingByTimerType"
  },
  {
    "label": "FTimerNodeSortingByInstanceCount",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimerNodeSortingByInstanceCount"
  },
  {
    "label": "FTimerNodeSortingByTotalInclusiveTime",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimerNodeSortingByTotalInclusiveTime"
  },
  {
    "label": "FTimerNodeSortingByTotalExclusiveTime",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimerNodeSortingByTotalExclusiveTime"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTimerNodeSortingByTimerType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" InsightsCore / Table / ViewModels / TableCellValueSorter . h \" # include \" InsightsCore / Table / ViewModels / TableColumn . h \" # include \" InsightsCore / Table / ViewModels / TreeNodeGrouping . h \" # include \" Insights / TimingProfiler / ViewModels / TimerNode . h \" namespace UE::Insights::TimingProfiler { class FTimerNodeSortingByTimerType : public FTableCellValueSorter { public :)",
    "insertText": "FTimerNodeSortingByTimerType(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "Sort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sort(TArray<FBaseTreeNodePtr>& NodesToSort, ESortMode SortMode)"
  },
  {
    "label": "FTimerNodeSortingByInstanceCount()",
    "kind": "Method",
    "detail": "Function (} ; class FTimerNodeSortingByInstanceCount : public FTableCellValueSorter { public :)",
    "insertText": "FTimerNodeSortingByInstanceCount(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FTimerNodeSortingByTotalInclusiveTime()",
    "kind": "Method",
    "detail": "Function (} ; class FTimerNodeSortingByTotalInclusiveTime : public FTableCellValueSorter { public :)",
    "insertText": "FTimerNodeSortingByTotalInclusiveTime(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FTimerNodeSortingByTotalExclusiveTime()",
    "kind": "Method",
    "detail": "Function (} ; class FTimerNodeSortingByTotalExclusiveTime : public FTableCellValueSorter { public :)",
    "insertText": "FTimerNodeSortingByTotalExclusiveTime(TSharedRef<FTableColumn> InColumnRef)"
  }
]