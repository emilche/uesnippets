[
  {
    "label": "FQuantizedPlayCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuantizedPlayCommand"
  },
  {
    "label": "FQuantizedQueueCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuantizedQueueCommand"
  },
  {
    "label": "FQuantizedTickRateChange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuantizedTickRateChange"
  },
  {
    "label": "FQuantizedTransportReset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuantizedTransportReset"
  },
  {
    "label": "FQuantizedOtherClockStart",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuantizedOtherClockStart"
  },
  {
    "label": "FQuantizedNotify",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuantizedNotify"
  },
  {
    "label": "FQuantizedPlayCommand()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AudioMixerClock . h \" namespace Audio { class FQuantizedPlayCommand : public IQuartzQuantizedCommand { public :)",
    "insertText": "FQuantizedPlayCommand()"
  },
  {
    "label": "GetDeepCopyOfDerivedObject()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<IQuartzQuantizedCommand>)",
    "insertText": "GetDeepCopyOfDerivedObject()"
  },
  {
    "label": "OnQueuedCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnQueuedCustom(const FQuartzQuantizedCommandInitInfo& InCommandInitInfo)"
  },
  {
    "label": "OnFinalCallbackCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFinalCallbackCustom(int32 InNumFramesLeft)"
  },
  {
    "label": "CancelCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelCustom()"
  },
  {
    "label": "RequiresAudioDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresAudioDevice()"
  },
  {
    "label": "GetCommandType()",
    "kind": "Method",
    "detail": "Function (EQuartzCommandType)",
    "insertText": "GetCommandType()"
  },
  {
    "label": "OverrideFramesUntilExec()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OverrideFramesUntilExec(int32 NumFramesUntilExec)"
  },
  {
    "label": "FQuantizedQueueCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FQuantizedQueueCommand()"
  },
  {
    "label": "SetTickRate()",
    "kind": "Method",
    "detail": "Function (} private : TSharedPtr<FQuartzClock> OwningClockPtr { nullptr } ; FAudioComponentCommandInfo AudioComponentData ; } ; class FQuantizedTickRateChange : public IQuartzQuantizedCommand { public : void)",
    "insertText": "SetTickRate(const FQuartzClockTickRate& InTickRate)"
  },
  {
    "label": "IsClockAltering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClockAltering()"
  },
  {
    "label": "FQuantizedNotify()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FQuantizedNotify()"
  }
]