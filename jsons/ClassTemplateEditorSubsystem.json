[
  {
    "label": "FSubsystemCollectionBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSubsystemCollectionBase"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "GAMEPROJECTGENERATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GAMEPROJECTGENERATION_API"
  },
  {
    "label": "UClassTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClassTemplate"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" EditorSubsystem . h \" # include \" UObject / Class . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" ClassTemplateEditorSubsystem . generated . h \" class FSubsystemCollectionBase ; class FText ; class UClass ;)",
    "insertText": "UCLASS(Abstract)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual void BeginDestroy()"
  },
  {
    "label": "GetDirectory()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDirectory()"
  },
  {
    "label": "ReadHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadHeader(FString& OutHeaderFileText, FText& OutFailReason)"
  },
  {
    "label": "ReadSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadSource(FString& OutSourceFileText, FText& OutFailReason)"
  },
  {
    "label": "GetGeneratedBaseClass()",
    "kind": "Method",
    "detail": "Function (const UClass*)",
    "insertText": "GetGeneratedBaseClass()"
  },
  {
    "label": "SetGeneratedBaseClass()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SetGeneratedBaseClass(UClass* InClass)"
  },
  {
    "label": "GetFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFilename()"
  },
  {
    "label": "GetHeaderFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetHeaderFilename()"
  },
  {
    "label": "GetSourceFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSourceFilename()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual FString GetDirectory()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UClassTemplateEditorSubsystem()",
    "kind": "Method",
    "detail": "Function (FTemplateRegistry TemplateRegistry ; public :)",
    "insertText": "UClassTemplateEditorSubsystem()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSubsystemCollectionBase& Collection)"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "RegisterTemplates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTemplates()"
  },
  {
    "label": "GetEngineTemplateDirectory()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEngineTemplateDirectory()"
  },
  {
    "label": "ContainsClassTemplate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsClassTemplate(const UClass* InClass)"
  },
  {
    "label": "FindClassTemplate()",
    "kind": "Method",
    "detail": "Function (const UClassTemplate*)",
    "insertText": "FindClassTemplate(const UClass* InClass)"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (class UClassTemplate ; private : void)",
    "insertText": "Register(const UClassTemplate* InClassTemplate)"
  },
  {
    "label": "Unregister()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Unregister(const UClassTemplate* InClassTemplate)"
  }
]