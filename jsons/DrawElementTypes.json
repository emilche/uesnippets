[
  {
    "label": "FSlateRenderBatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRenderBatch"
  },
  {
    "label": "FSlateDrawLayerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateDrawLayerHandle"
  },
  {
    "label": "FSlateResourceHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateResourceHandle"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FSlateDataPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateDataPayload"
  },
  {
    "label": "FSlateGradientStop",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateGradientStop"
  },
  {
    "label": "FSlateDrawElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateDrawElement"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "ERotationSpace",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERotationSpace"
  },
  {
    "label": "FSlateShaderResourceProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResourceProxy"
  },
  {
    "label": "FSlateGradientStop",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateGradientStop"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "FSlateTintableElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateTintableElement"
  },
  {
    "label": "FSlateBoxElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBoxElement"
  },
  {
    "label": "FSlateRoundedBoxElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateRoundedBoxElement"
  },
  {
    "label": "FSlateTextElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateTextElement"
  },
  {
    "label": "FSlateShapedTextElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateShapedTextElement"
  },
  {
    "label": "FSlateGradientElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateGradientElement"
  },
  {
    "label": "FSlateSplineElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateSplineElement"
  },
  {
    "label": "FSlateLineElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateLineElement"
  },
  {
    "label": "FSlateViewportElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateViewportElement"
  },
  {
    "label": "FSlateCustomDrawerElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateCustomDrawerElement"
  },
  {
    "label": "FSlateLayerElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateLayerElement"
  },
  {
    "label": "FSlateDrawLayerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateDrawLayerHandle"
  },
  {
    "label": "FSlateCachedBufferElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateCachedBufferElement"
  },
  {
    "label": "FSlateRenderDataHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRenderDataHandle"
  },
  {
    "label": "FSlateCustomVertsElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateCustomVertsElement"
  },
  {
    "label": "FSlatePostProcessElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlatePostProcessElement"
  },
  {
    "label": "MakeDebugQuad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeDebugQuad( FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, FLinearColor Tint = FLinearColor::White)"
  },
  {
    "label": "MakeBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeBox( \n\t\tFSlateWindowElementList& ElementList,\n\t\tuint32 InLayer,\n\t\tconst FPaintGeometry& PaintGeometry,\n\t\tconst FSlateBrush* InBrush,\n\t\tESlateDrawEffect InDrawEffects = ESlateDrawEffect::None,\n\t\tconst FLinearColor& InTint = FLinearColor::White )"
  },
  {
    "label": "MakeText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeText( FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, const FString& InText, const int32 StartIndex, const int32 EndIndex, const FSlateFontInfo& InFontInfo, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint = FLinearColor::White )"
  },
  {
    "label": "MakeText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeText( FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, const FString& InText, const FSlateFontInfo& InFontInfo, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint = FLinearColor::White )"
  },
  {
    "label": "MakeSpline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeSpline(FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, const UE::Slate::FDeprecateVector2DParameter InStart, const UE::Slate::FDeprecateVector2DParameter InStartDir, const UE::Slate::FDeprecateVector2DParameter InEnd, const UE::Slate::FDeprecateVector2DParameter InEndDir, float InThickness = 0.0f, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint=FLinearColor::White)"
  },
  {
    "label": "MakeCubicBezierSpline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeCubicBezierSpline(FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, const UE::Slate::FDeprecateVector2DParameter P0, const UE::Slate::FDeprecateVector2DParameter P1, const UE::Slate::FDeprecateVector2DParameter P2, const UE::Slate::FDeprecateVector2DParameter P3, float InThickness = 0.0f, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint = FLinearColor::White)"
  },
  {
    "label": "MakeDrawSpaceSpline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeDrawSpaceSpline(FSlateWindowElementList& ElementList, uint32 InLayer, const UE::Slate::FDeprecateVector2DParameter InStart, const UE::Slate::FDeprecateVector2DParameter InStartDir, const UE::Slate::FDeprecateVector2DParameter InEnd, const UE::Slate::FDeprecateVector2DParameter InEndDir, float InThickness = 0.0f, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint=FLinearColor::White)"
  },
  {
    "label": "MakeLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeLines(FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, const TArray<FVector2d>& Points, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint=FLinearColor::White, bool bAntialias = true, float Thickness = 1.0f)"
  },
  {
    "label": "MakeLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeLines(FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, TArray<FVector2f> Points, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint = FLinearColor::White, bool bAntialias = true, float Thickness = 1.0f)"
  },
  {
    "label": "MakeDashedLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeDashedLines(FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, TArray<FVector2f>&& Points, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint = FLinearColor::White, float Thickness = 1.0f, float DashLengthPx = 10.0f, float DashScreenOffset = 0.f)"
  },
  {
    "label": "MakeLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeLines(FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, const TArray<FVector2d>& Points, const TArray<FLinearColor>& PointColors, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint=FLinearColor::White, bool bAntialias = true, float Thickness = 1.0f)"
  },
  {
    "label": "MakeLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeLines(FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, TArray<FVector2f> Points, TArray<FLinearColor> PointColors, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint=FLinearColor::White, bool bAntialias = true, float Thickness = 1.0f)"
  },
  {
    "label": "MakeDashedLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeDashedLines(FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, TArray<FVector2f>&& Points, TArray<FLinearColor>&& PointColors, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint = FLinearColor::White, float Thickness = 1.0f, float DashLengthPx = 10.0f, float DashScreenOffset = 0.f)"
  },
  {
    "label": "MakeViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeViewport( FSlateWindowElementList& ElementList, uint32 InLayer, const FPaintGeometry& PaintGeometry, TSharedPtr<const ISlateViewport> Viewport, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None, const FLinearColor& InTint=FLinearColor::White )"
  },
  {
    "label": "MakeCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeCustom( FSlateWindowElementList& ElementList, uint32 InLayer, TSharedPtr<ICustomSlateElement, ESPMode::ThreadSafe> CustomDrawer )"
  },
  {
    "label": "MakeCustomVerts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeCustomVerts(FSlateWindowElementList& ElementList, uint32 InLayer, const FSlateResourceHandle& InRenderResourceHandle, const TArray<FSlateVertex>& InVerts, const TArray<SlateIndex>& InIndexes, ISlateUpdatableInstanceBuffer* InInstanceData, uint32 InInstanceOffset, uint32 InNumInstances, ESlateDrawEffect InDrawEffects = ESlateDrawEffect::None)"
  },
  {
    "label": "ApplyPositionOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPositionOffset(UE::Slate::FDeprecateVector2DParameter InOffset)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FSlateWindowElementList& ElementList, EElementType InElementType, uint32 InLayer, const FPaintGeometry& PaintGeometry, ESlateDrawEffect InDrawEffects)"
  },
  {
    "label": "GetRotationPoint()",
    "kind": "Method",
    "detail": "Function (FVector2f)",
    "insertText": "GetRotationPoint( const FPaintGeometry& PaintGeometry, const TOptional<FVector2f>& UserRotationPoint, ERotationSpace RotationSpace )"
  }
]