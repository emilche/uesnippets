[
  {
    "label": "SAccessLevel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SAccessLevel"
  },
  {
    "label": "SQualifier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SQualifier"
  },
  {
    "label": "CAstPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CAstPackage"
  },
  {
    "label": "CAstCompilationUnit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CAstCompilationUnit"
  },
  {
    "label": "CControlScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CControlScope"
  },
  {
    "label": "CClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CClass"
  },
  {
    "label": "CClassDefinition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CClassDefinition"
  },
  {
    "label": "CDataDefinition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CDataDefinition"
  },
  {
    "label": "CEnumeration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CEnumeration"
  },
  {
    "label": "CEnumerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CEnumerator"
  },
  {
    "label": "CFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CFunction"
  },
  {
    "label": "CInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CInterface"
  },
  {
    "label": "CModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CModule"
  },
  {
    "label": "CModulePart",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CModulePart"
  },
  {
    "label": "CModuleAlias",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CModuleAlias"
  },
  {
    "label": "CSnippet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSnippet"
  },
  {
    "label": "CLogicalScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CLogicalScope"
  },
  {
    "label": "CSemanticAnalyzerImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSemanticAnalyzerImpl"
  },
  {
    "label": "CSemanticProgram",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSemanticProgram"
  },
  {
    "label": "CScopedAccessLevelDefinition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CScopedAccessLevelDefinition"
  },
  {
    "label": "CTypeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTypeBase"
  },
  {
    "label": "CTypeAlias",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTypeAlias"
  },
  {
    "label": "CTypeScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTypeScope"
  },
  {
    "label": "CTypeType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTypeType"
  },
  {
    "label": "CTypeVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTypeVariable"
  },
  {
    "label": "SResolvedDefinition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SResolvedDefinition"
  },
  {
    "label": "VERSECOMPILER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VERSECOMPILER_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CSemanticAnalyzerImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSemanticAnalyzerImpl"
  },
  {
    "label": "CDefinition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CDefinition"
  },
  {
    "label": "CDataDefinition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CDataDefinition"
  },
  {
    "label": "VERSECOMPILER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VERSECOMPILER_API"
  },
  {
    "label": "CScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CScope"
  },
  {
    "label": "CreateFunction()",
    "kind": "Method",
    "detail": "Function (TSRef<CFunction>)",
    "insertText": "CreateFunction(const CSymbol FunctionName)"
  },
  {
    "label": "CreateDataDefinition()",
    "kind": "Method",
    "detail": "Function (TSRef<CDataDefinition>)",
    "insertText": "CreateDataDefinition(const CSymbol VarName)"
  },
  {
    "label": "CreateDataDefinition()",
    "kind": "Method",
    "detail": "Function (TSRef<CDataDefinition>)",
    "insertText": "CreateDataDefinition(const CSymbol VarName, const CTypeBase* Type)"
  },
  {
    "label": "CreateTypeAlias()",
    "kind": "Method",
    "detail": "Function (TSRef<CTypeAlias>)",
    "insertText": "CreateTypeAlias(const CSymbol Name)"
  },
  {
    "label": "CreateTypeVariable()",
    "kind": "Method",
    "detail": "Function (TSRef<CTypeVariable>)",
    "insertText": "CreateTypeVariable(const CSymbol Name, const CTypeBase* Type)"
  },
  {
    "label": "CreateModuleAlias()",
    "kind": "Method",
    "detail": "Function (TSRef<CModuleAlias>)",
    "insertText": "CreateModuleAlias(const CSymbol Name)"
  },
  {
    "label": "CreateAccessLevelDefinition()",
    "kind": "Method",
    "detail": "Function (TSRef<CScopedAccessLevelDefinition>)",
    "insertText": "CreateAccessLevelDefinition(TOptional<CSymbol> ClassName)"
  },
  {
    "label": "ResolvedDefnsAppend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolvedDefnsAppend(SResolvedDefinitionArray* ResolvedDefns, const SmallDefinitionArray& Definitions)"
  },
  {
    "label": "ResolvedDefnsAppendWithContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolvedDefnsAppendWithContext(SResolvedDefinitionArray* ResolvedDefns, const SmallDefinitionArray& Definitions, const CDataDefinition* Context)"
  },
  {
    "label": "CreateNestedTypeScope()",
    "kind": "Method",
    "detail": "Function (TSRef<CTypeScope>)",
    "insertText": "CreateNestedTypeScope()"
  },
  {
    "label": "GenerateNewVisitStamp()",
    "kind": "Method",
    "detail": "Function (VisitStampType)",
    "insertText": "GenerateNewVisitStamp()"
  },
  {
    "label": "SetRevision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRevision(SemanticRevision Revision)"
  }
]