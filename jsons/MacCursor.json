[
  {
    "label": "FCocoaWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCocoaWindow"
  },
  {
    "label": "FMacCursor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMacCursor"
  },
  {
    "label": "FMacCursor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / ICursor . h \" # include \" Math / IntRect . h \" # include \" Math / IntVector . h \" @ class FCocoaWindow ; class FMacCursor : public ICursor { public :)",
    "insertText": "FMacCursor()"
  },
  {
    "label": "CreateCursorFromFile()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "CreateCursorFromFile(const FString& InPathToCursorWithoutExtension, FVector2D HotSpot)"
  },
  {
    "label": "IsCreateCursorFromRGBABufferSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCreateCursorFromRGBABufferSupported()"
  },
  {
    "label": "GetPosition()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetPosition()"
  },
  {
    "label": "SetPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPosition(const int32 X, const int32 Y)"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetType(const EMouseCursor::Type InNewCursor)"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (EMouseCursor::Type)",
    "insertText": "GetType()"
  },
  {
    "label": "Show()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Show(bool bShow)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Lock(const RECT* const Bounds)"
  },
  {
    "label": "SetTypeShape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTypeShape(EMouseCursor::Type InCursorType, void* CursorHandle)"
  },
  {
    "label": "UpdateCursorClipping()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "UpdateCursorClipping(FIntVector2& CursorPosition)"
  },
  {
    "label": "WarpCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WarpCursor(const int32 X, const int32 Y)"
  },
  {
    "label": "GetIntPosition()",
    "kind": "Method",
    "detail": "Function (FIntVector2)",
    "insertText": "GetIntPosition()"
  },
  {
    "label": "GetMouseWarpDelta()",
    "kind": "Method",
    "detail": "Function (FIntVector2)",
    "insertText": "GetMouseWarpDelta()"
  },
  {
    "label": "SetHighPrecisionMouseMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHighPrecisionMouseMode(const bool bEnable)"
  },
  {
    "label": "UpdateCurrentPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCurrentPosition(const FIntVector2& Position)"
  },
  {
    "label": "UpdateVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisibility()"
  },
  {
    "label": "IsLocked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocked()"
  },
  {
    "label": "SetShouldIgnoreLocking()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetShouldIgnoreLocking(bool bIgnore)"
  }
]