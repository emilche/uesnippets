[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AInstancedFoliageActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AInstancedFoliageActor"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "HHitProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HHitProxy"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UFoliageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFoliageType"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FViewportClick",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewportClick"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFoliageUISettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageUISettings"
  },
  {
    "label": "FFoliageMeshUIInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageMeshUIInfo"
  },
  {
    "label": "FMeshInfoSnapshot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshInfoSnapshot"
  },
  {
    "label": "FFoliagePaintingGeometryFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliagePaintingGeometryFilter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEdModeFoliage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdModeFoliage"
  },
  {
    "label": "UViewportInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportInteractor"
  },
  {
    "label": "filters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "filters"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "FEdModeFoliageSelectionUpdate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdModeFoliageSelectionUpdate"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Load()"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Save()"
  },
  {
    "label": "NotifyNewCurrentLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyNewCurrentLevel()"
  },
  {
    "label": "NotifyLevelAddedToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyLevelAddedToWorld(ULevel* InLevel, UWorld* InWorld)"
  },
  {
    "label": "NotifyLevelRemovedFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyLevelRemovedFromWorld(ULevel* InLevel, UWorld* InWorld)"
  },
  {
    "label": "NotifyAssetRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAssetRemoved(const FAssetData& AssetInfo)"
  },
  {
    "label": "NotifyActorSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorSelectionChanged(bool bSelect, const TArray<AActor*>& Selection)"
  },
  {
    "label": "MoveSelectedFoliageToLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveSelectedFoliageToLevel(ULevel* InTargetLevel)"
  },
  {
    "label": "MoveSelectedFoliageToActorEditorContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveSelectedFoliageToActorEditorContext()"
  },
  {
    "label": "EndTracking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndTracking()"
  },
  {
    "label": "OnObjectsReplaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectsReplaced(const TMap<UObject*, UObject*>& ReplacementMap)"
  },
  {
    "label": "ForceRealTimeViewports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRealTimeViewports(const bool bEnable)"
  },
  {
    "label": "StartFoliageBrushTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartFoliageBrushTrace(FEditorViewportClient* ViewportClient, class UViewportInteractor* Interactor = nullptr)"
  },
  {
    "label": "EndFoliageBrushTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFoliageBrushTrace()"
  },
  {
    "label": "FoliageBrushTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FoliageBrushTrace(FEditorViewportClient* ViewportClient, const FVector& InRayOrigin, const FVector& InRayDirection)"
  },
  {
    "label": "GetRandomVectorInBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRandomVectorInBrush(FVector& OutStart, FVector& OutEnd)"
  },
  {
    "label": "PreApplyBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreApplyBrush()"
  },
  {
    "label": "ApplyBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyBrush(FEditorViewportClient* ViewportClient)"
  },
  {
    "label": "PopulateFoliageMeshList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateFoliageMeshList()"
  },
  {
    "label": "OnFoliageMeshListSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFoliageMeshListSortModeChanged(EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "OnInstanceCountUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInstanceCountUpdated(const UFoliageType* FoliageType)"
  },
  {
    "label": "CalcTotalInstanceCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalcTotalInstanceCount(int32& OutInstanceCountTotal, int32& OutInstanceCountCurrentLevel)"
  },
  {
    "label": "CanPaint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPaint(const ULevel* InLevel)"
  },
  {
    "label": "CanPaint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPaint(const UFoliageType* FoliageType, const ULevel* InLevel)"
  },
  {
    "label": "RemoveFoliageType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveFoliageType(UFoliageType** FoliageTypes, int32 Num)"
  },
  {
    "label": "ReallocateClusters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReallocateClusters(UFoliageType* Settings)"
  },
  {
    "label": "BakeFoliage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BakeFoliage(UFoliageType* Settings, bool bSelectedOnly)"
  },
  {
    "label": "ReplaceSettingsObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceSettingsObject(UFoliageType* OldSettings, UFoliageType* NewSettings)"
  },
  {
    "label": "IncludeNonFoliageActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncludeNonFoliageActors(const TArray<const UFoliageType*>& FoliageTypes, bool bOnlyCurrentLevel)"
  },
  {
    "label": "ExcludeFoliageActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExcludeFoliageActors(const TArray<const UFoliageType*>& FoliageTypes, bool bOnlyCurrentLevel)"
  },
  {
    "label": "SelectInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstances(const TArray<const UFoliageType*>& FoliageTypes, bool bSelect)"
  },
  {
    "label": "SelectInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstances(const UFoliageType* Settings, bool bSelect)"
  },
  {
    "label": "SelectInvalidInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInvalidInstances(const TArray<const UFoliageType*>& FoliageTypes)"
  },
  {
    "label": "SelectInvalidInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInvalidInstances(const UFoliageType* Settings)"
  },
  {
    "label": "AdjustBrushRadius()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustBrushRadius(float Multiplier)"
  },
  {
    "label": "AdjustPaintDensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustPaintDensity(float Multiplier)"
  },
  {
    "label": "AdjustUnpaintDensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustUnpaintDensity(float Multiplier)"
  },
  {
    "label": "AddInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstances(UWorld* InWorld, const TArray<FDesiredFoliageInstance>& DesiredInstances, const FFoliagePaintingGeometryFilter& OverrideGeometryFilter, bool InRebuildFoliageTree = true)"
  },
  {
    "label": "OnEndPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndPIE(const bool bIsSimulating)"
  },
  {
    "label": "OnSetPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetPaint()"
  },
  {
    "label": "OnSetReapplySettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetReapplySettings()"
  },
  {
    "label": "OnSetSelectInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetSelectInstance()"
  },
  {
    "label": "OnSetLasso()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetLasso()"
  },
  {
    "label": "OnSetPaintFill()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetPaintFill()"
  },
  {
    "label": "OnSetErase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetErase()"
  },
  {
    "label": "OnSetPlace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetPlace()"
  },
  {
    "label": "OnReflectSelectionInPalette()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReflectSelectionInPalette()"
  },
  {
    "label": "RemoveSelectedInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSelectedInstances(UWorld* InWorld)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "HandleToolChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToolChanged()"
  },
  {
    "label": "ClearAllToolSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllToolSelection()"
  },
  {
    "label": "AddInstancesForBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstancesForBrush(UWorld* InWorld, const UFoliageType* Settings, const FSphere& BrushSphere, int32 DesiredInstanceCount, float Pressure)"
  },
  {
    "label": "AddSingleInstanceForBrush()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddSingleInstanceForBrush(UWorld* InWorld, const UFoliageType* Settings, float Pressure)"
  },
  {
    "label": "RemoveInstancesForBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInstancesForBrush(UWorld* InWorld, const UFoliageType* Settings, const FSphere& BrushSphere, int32 DesiredInstanceCount, float Pressure)"
  },
  {
    "label": "ApplyPaintBucket_Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPaintBucket_Add(AActor* Actor)"
  },
  {
    "label": "ApplyPaintBucket_Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPaintBucket_Remove(AActor* Actor)"
  },
  {
    "label": "ReapplyInstancesDensityForBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReapplyInstancesDensityForBrush(UWorld* InWorld, const UFoliageType* Settings, const FSphere& BrushSphere, float Pressure)"
  },
  {
    "label": "ReapplyInstancesForBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReapplyInstancesForBrush(UWorld* InWorld, const UFoliageType* Settings, const FSphere& BrushSphere, float Pressure, bool bSingleInstanceMode)"
  },
  {
    "label": "ReapplyInstancesForBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReapplyInstancesForBrush(UWorld* InWorld, AInstancedFoliageActor* IFA, const UFoliageType* Settings, FFoliageInfo* MeshInfo, const FSphere& BrushSphere, float Pressure, bool bSingleInstanceMode)"
  },
  {
    "label": "SelectInstancesForBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstancesForBrush(UWorld* InWorld, const UFoliageType* Settings, const FSphere& BrushSphere, bool bSelect)"
  },
  {
    "label": "SelectInstanceAtLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstanceAtLocation(UWorld* InWorld, const UFoliageType* Settings, const FVector& BrushLocation, bool bSelect)"
  },
  {
    "label": "SelectInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstances(UWorld* InWorld, bool bSelect)"
  },
  {
    "label": "SelectInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstances(UWorld* InWorld, const UFoliageType* Settings, bool bSelect)"
  },
  {
    "label": "ApplySelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySelection(UWorld* InWorld, bool bApply)"
  },
  {
    "label": "UpdateInstancePartitioning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInstancePartitioning(UWorld* InWorld)"
  },
  {
    "label": "PostTransformSelectedInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostTransformSelectedInstances(UWorld* InWorld)"
  },
  {
    "label": "TransformSelectedInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformSelectedInstances(UWorld* InWorld, const FVector& InDrag, const FRotator& InRot, const FVector& InScale, bool bDuplicate)"
  },
  {
    "label": "UpdateWidgetLocationToInstanceSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWidgetLocationToInstanceSelection()"
  },
  {
    "label": "SnapInstanceToGround()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SnapInstanceToGround(AInstancedFoliageActor* InIFA, const UFoliageType* Settings, FFoliageInfo& Mesh, int32 InstanceIdx)"
  },
  {
    "label": "SnapSelectedInstancesToGround()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapSelectedInstancesToGround(UWorld* InWorld)"
  },
  {
    "label": "HandleOnActorSpawned()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnActorSpawned(AActor* Actor)"
  },
  {
    "label": "HandleOnFoliageTypeMeshChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnFoliageTypeMeshChanged(UFoliageType* FoliageType)"
  },
  {
    "label": "CalculatePotentialInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculatePotentialInstances(UWorld* InWorld, const UFoliageType* Settings, const TArray<FDesiredFoliageInstance>& DesiredInstances, TArray<FPotentialInstance> OutPotentialInstances[NUM_INSTANCE_BUCKETS], LandscapeLayerCacheData* LandscaleLayerCachesPtr, const FFoliageUISettings* UISettings, const FFoliagePaintingGeometryFilter* OverrideGeometryFilter = nullptr)"
  },
  {
    "label": "CalculatePotentialInstances_ThreadSafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculatePotentialInstances_ThreadSafe(UWorld* InWorld, const UFoliageType* Settings, const TArray<FDesiredFoliageInstance>* DesiredInstances, TArray<FPotentialInstance> OutPotentialInstances[NUM_INSTANCE_BUCKETS], const FFoliageUISettings* UISettings, const int32 StartIdx, const int32 LastIdx, const FFoliagePaintingGeometryFilter* OverrideGeometryFilter = nullptr)"
  },
  {
    "label": "GetStaticMeshVertexColorForHit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetStaticMeshVertexColorForHit(const UStaticMeshComponent* InStaticMeshComponent, int32 InTriangleIndex, const FVector& InHitLocation, FColor& OutVertexColor)"
  },
  {
    "label": "IsUsingVertexColorMask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingVertexColorMask(const UFoliageType* Settings)"
  },
  {
    "label": "VertexMaskCheck()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VertexMaskCheck(const FHitResult& Hit, const UFoliageType* Settings)"
  },
  {
    "label": "SetBrushOpacity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBrushOpacity(const float InOpacity)"
  },
  {
    "label": "RebuildFoliageTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildFoliageTree(const UFoliageType* Settings)"
  },
  {
    "label": "BeginSelectionUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginSelectionUpdate()"
  },
  {
    "label": "EndSelectionUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndSelectionUpdate()"
  }
]