[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "SPropertyEditorDateTime",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyEditorDateTime"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Fonts / SlateFontInfo . h \" # include \" Misc / Attribute . h \" # include \" Styling / AppStyle . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Types / SlateEnums . h \" # include \" UserInterface / PropertyEditor / PropertyEditorConstants . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FText ; class SPropertyEditorDateTime : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPropertyEditorDateTime ) : _Font( FAppStyle::GetFontStyle( PropertyEditorConstants::PropertyFontStyle ))"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FSlateFontInfo, Font ) SLATE_END_ARGS() static bool Supports( const TSharedRef< class FPropertyEditor >& InPropertyEditor)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef< class FPropertyEditor >& InPropertyEditor)"
  },
  {
    "label": "GetDesiredWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDesiredWidth(float& OutMinDesiredWidth, float& OutMaxDesiredWidth)"
  },
  {
    "label": "HandleTextCommitted()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleTextCommitted(const FText& NewText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "CanEdit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEdit()"
  }
]