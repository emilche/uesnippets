[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "SPropertyEditorDateTime",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyEditorDateTime"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( const TSharedRef< class FPropertyEditor >& InPropertyEditor )"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs, const TSharedRef< class FPropertyEditor >& InPropertyEditor )"
  },
  {
    "label": "GetDesiredWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDesiredWidth( float& OutMinDesiredWidth, float& OutMaxDesiredWidth )"
  },
  {
    "label": "HandleTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTextCommitted( const FText& NewText, ETextCommit::Type CommitInfo )"
  }
]