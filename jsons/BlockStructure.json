[
  {
    "label": "FBlockEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlockEntry"
  },
  {
    "label": "FBlockStructure",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlockStructure"
  },
  {
    "label": "FBlockStructure",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlockStructure"
  },
  {
    "label": "FBlockEntry()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FBlockEntry(uint64 InOffset, uint64 InSize)"
  },
  {
    "label": "InsertBefore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertBefore(FBlockEntry* NewEntry, FBlockEntry** Head)"
  },
  {
    "label": "InsertAfter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertAfter(FBlockEntry* NewEntry, FBlockEntry** Tail)"
  },
  {
    "label": "Unlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlink(FBlockEntry** Head, FBlockEntry** Tail)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(uint64 InOffset, uint64 InSize)"
  },
  {
    "label": "Chop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Chop(uint64 InOffset, uint64 InSize, FBlockEntry** Head, FBlockEntry** Tail)"
  },
  {
    "label": "FBlockStructure()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FBlockStructure()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(uint64 Offset, uint64 Size, ESearchDir::Type SearchDir = ESearchDir::FromStart)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const FBlockRange& BlockRange, ESearchDir::Type SearchDir = ESearchDir::FromStart)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const FBlockStructure& OtherStructure, ESearchDir::Type SearchDir = ESearchDir::FromStart)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(uint64 Offset, uint64 Size, ESearchDir::Type SearchDir = ESearchDir::FromStart)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(const FBlockRange& BlockRange, ESearchDir::Type SearchDir = ESearchDir::FromStart)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(const FBlockStructure& OtherStructure, ESearchDir::Type SearchDir = ESearchDir::FromStart)"
  },
  {
    "label": "CollectOverlaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectOverlaps(FBlockEntry* First, ESearchDir::Type SearchDir)"
  },
  {
    "label": "CountSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CountSize(const FBlockStructure& Structure)"
  },
  {
    "label": "HasIntersection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasIntersection(const FBlockStructure& ByteStructure, const FBlockStructure& Intersection)"
  },
  {
    "label": "SerializeIntersection()",
    "kind": "Method",
    "detail": "Function (FBlockStructure)",
    "insertText": "SerializeIntersection(const FBlockStructure& ByteStructure, const FBlockStructure& Intersection)"
  }
]