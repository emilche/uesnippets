[
  {
    "label": "FEmbeddedCallParamsHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEmbeddedCallParamsHelper"
  },
  {
    "label": "FEmbeddedDelegates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmbeddedDelegates"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FEmbeddedCommunication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmbeddedCommunication"
  },
  {
    "label": "FEmbeddedKeepAwake",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmbeddedKeepAwake"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (ue)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FEmbeddedCommunicationParamsDelegate, const FEmbeddedCallParamsHelper&)"
  },
  {
    "label": "IsEmbeddedSubsystemAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmbeddedSubsystemAvailable(FName SubsystemName)"
  },
  {
    "label": "SetNamedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNamedObject(const FString& Name, void* Object)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "ForceTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceTick(int ID, float MinTimeSlice=0.1f, float MaxTimeSlice=0.5f)"
  },
  {
    "label": "WakeGameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WakeGameThread()"
  },
  {
    "label": "TickGameThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TickGameThread(float DeltaTime)"
  },
  {
    "label": "KeepAwake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "KeepAwake(FName Requester, bool bNeedsRendering)"
  },
  {
    "label": "AllowSleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllowSleep(FName Requester)"
  },
  {
    "label": "UELogFatal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UELogFatal(const TCHAR* String)"
  },
  {
    "label": "UELogError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UELogError(const TCHAR* String)"
  },
  {
    "label": "UELogWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UELogWarning(const TCHAR* String)"
  },
  {
    "label": "UELogDisplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UELogDisplay(const TCHAR* String)"
  },
  {
    "label": "UELogLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UELogLog(const TCHAR* String)"
  },
  {
    "label": "UELogVerbose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UELogVerbose(const TCHAR* String)"
  },
  {
    "label": "IsAwakeForTicking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAwakeForTicking()"
  },
  {
    "label": "IsAwakeForRendering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAwakeForRendering()"
  },
  {
    "label": "GetDebugInfo()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugInfo()"
  }
]