[
  {
    "label": "FImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImplicitObject"
  },
  {
    "label": "FTriangleMeshImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriangleMeshImplicitObject"
  },
  {
    "label": "FConvex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConvex"
  },
  {
    "label": "FChaosDerivedDataReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosDerivedDataReader"
  },
  {
    "label": "FChaosDerivedDataReader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / UniquePtr . h \" # include \" PhysicsEngine / BodySetup . h \" namespace Chaos { class FImplicitObject ; class FTriangleMeshImplicitObject ; class FConvex ; } template<T,int d> class FChaosDerivedDataReader { public :)",
    "insertText": "FChaosDerivedDataReader(FBulkData* InBulkData)"
  },
  {
    "label": "FChaosDerivedDataReader()",
    "kind": "Method",
    "detail": "Function (TArray<Chaos::FConvexPtr> ConvexGeometries ; TArray<Chaos::FTriangleMeshImplicitObjectPtr> TriMeshGeometries ; FBodySetupUVInfo UVInfo ; TArray<int32> FaceRemap ; private :)",
    "insertText": "FChaosDerivedDataReader()"
  },
  {
    "label": "FChaosDerivedDataReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FChaosDerivedDataReader(const FChaosDerivedDataReader& Other)"
  },
  {
    "label": "FChaosDerivedDataReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FChaosDerivedDataReader(FChaosDerivedDataReader&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FChaosDerivedDataReader&)",
    "insertText": "operator(const FChaosDerivedDataReader& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FChaosDerivedDataReader&)",
    "insertText": "operator(FChaosDerivedDataReader&& Other)"
  }
]