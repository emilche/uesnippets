[
  {
    "label": "DeepScanLineOutputPart",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DeepScanLineOutputPart"
  },
  {
    "label": "DeepScanLineOutputPart()",
    "kind": "Method",
    "detail": "Function (# ifndef IMFDEEPSCANLINEOUTPUTPART_H_ # define IMFDEEPSCANLINEOUTPUTPART_H_ # include \" ImfDeepScanLineOutputFile . h \" # include \" ImfExport . h \" # include \" ImfMultiPartOutputFile . h \" # include \" ImfNamespace . h \" OPENEXR_IMF_INTERNAL_NAMESPACE_HEADER_ENTER class DeepScanLineOutputPart { public : IMF_EXPORT)",
    "insertText": "DeepScanLineOutputPart(MultiPartOutputFile& multiPartFile, int partNumber)"
  },
  {
    "label": "fileName()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT const char*)",
    "insertText": "fileName()"
  },
  {
    "label": "header()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT const Header&)",
    "insertText": "header()"
  },
  {
    "label": "setFrameBuffer()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "setFrameBuffer(const DeepFrameBuffer& frameBuffer)"
  },
  {
    "label": "frameBuffer()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT const DeepFrameBuffer&)",
    "insertText": "frameBuffer()"
  },
  {
    "label": "writePixels()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "writePixels(int numScanLines = 1)"
  },
  {
    "label": "currentScanLine()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT int)",
    "insertText": "currentScanLine()"
  },
  {
    "label": "copyPixels()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "copyPixels(DeepScanLineInputFile& in)"
  },
  {
    "label": "copyPixels()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "copyPixels(DeepScanLineInputPart& in)"
  },
  {
    "label": "updatePreviewImage()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "updatePreviewImage(const PreviewRgba newPixels[])"
  }
]