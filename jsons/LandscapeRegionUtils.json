[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "ALandscapeProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeProxy"
  },
  {
    "label": "ULandscapeInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeInfo"
  },
  {
    "label": "ALandscapeStreamingProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeStreamingProxy"
  },
  {
    "label": "ALocationVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALocationVolume"
  },
  {
    "label": "CreateLandscapeRegionVolume()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Math / MathFwd . h \" # include \" Containers / Array . h \" # include \" Templates / Function . h \" class AActor ; class UWorld ; class ALandscapeProxy ; class ULandscapeInfo ; class ALandscapeStreamingProxy ; class ALandscapeProxy ; class ALocationVolume ; namespace LandscapeRegionUtils { ALocationVolume*)",
    "insertText": "CreateLandscapeRegionVolume(UWorld* World, ALandscapeProxy* ParentLandscapeActor, const FIntPoint& RegionCoordinate, double RegionSize)"
  },
  {
    "label": "ForEachComponentByRegion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachComponentByRegion(int32 RegionSize, const TArray<FIntPoint>& ComponentCoordinates, TFunctionRef<bool(const FIntPoint&, const TArray<FIntPoint>&)> RegionFn)"
  },
  {
    "label": "ForEachRegion_LoadProcessUnload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachRegion_LoadProcessUnload(ULandscapeInfo* LandscapeInfo, const FIntRect& Domain, UWorld* World, TFunctionRef<bool(const FBox&, const TArray<ALandscapeProxy*>)> RegionFn)"
  },
  {
    "label": "NumLandscapeRegions()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumLandscapeRegions(ULandscapeInfo* InLandscapeInfo)"
  }
]