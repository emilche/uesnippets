[
  {
    "label": "FPerParticleGravity",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerParticleGravity"
  },
  {
    "label": "FChaosDebugDrawSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosDebugDrawSettings"
  },
  {
    "label": "FPBDIslandMergeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandMergeSet"
  },
  {
    "label": "FPBDIslandParticle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandParticle"
  },
  {
    "label": "FPBDIslandManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandManager"
  },
  {
    "label": "FPBDIsland",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIsland"
  },
  {
    "label": "FPBDIslandConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandConstraint"
  },
  {
    "label": "FPBDIslandManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandManager"
  },
  {
    "label": "FPBDIsland",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIsland"
  },
  {
    "label": "FPBDIsland",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIsland"
  },
  {
    "label": "FPBDIslandManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandManager"
  },
  {
    "label": "FPBDIslandMergeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandMergeSet"
  },
  {
    "label": "FPBDIslandManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandManager"
  },
  {
    "label": "FPBDIslandManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandManager"
  },
  {
    "label": "FPBDIslandGroupManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandGroupManager"
  },
  {
    "label": "FPBDRigidsEvolutionGBF",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsEvolutionGBF"
  },
  {
    "label": "FPBDIslandParticle()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDIslandParticle()"
  },
  {
    "label": "FPBDIslandParticle()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDIslandParticle(FGeometryParticleHandle* InParticle)"
  },
  {
    "label": "Reuse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reuse(FGeometryParticleHandle* InParticle)"
  },
  {
    "label": "Trash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Trash()"
  },
  {
    "label": "FPBDIslandConstraint()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDIslandConstraint()"
  },
  {
    "label": "FPBDIslandConstraint()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDIslandConstraint(const int32 InContainerId, FConstraintHandle* InConstraint)"
  },
  {
    "label": "Reuse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reuse(const int32 InContainerId, FConstraintHandle* InConstraint)"
  },
  {
    "label": "Trash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Trash()"
  },
  {
    "label": "FPBDIsland()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDIsland()"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(Nodes)"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(ContainerEdges[ContainerId])"
  },
  {
    "label": "Reuse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reuse()"
  },
  {
    "label": "Trash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Trash()"
  },
  {
    "label": "UpdateSyncState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSyncState()"
  },
  {
    "label": "FPBDIslandMergeSet()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDIslandMergeSet()"
  },
  {
    "label": "Reuse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reuse()"
  },
  {
    "label": "Trash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Trash()"
  },
  {
    "label": "FPBDIslandManager()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDIslandManager(FPBDRigidsSOAs& InParticles)"
  },
  {
    "label": "AddParticle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParticle(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "RemoveParticle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveParticle(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "ReserveParticles()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ReserveParticles(const int32 InNumParticles)"
  },
  {
    "label": "UpdateParticleMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateParticleMaterial(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "WakeParticleIslands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WakeParticleIslands(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "SleepParticle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SleepParticle(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "AddConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraint(const int32 ContainerId, FConstraintHandle* Constraint, const TVec2<FGeometryParticleHandle*>& ConstrainedParticles)"
  },
  {
    "label": "AddContainerConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContainerConstraints(ConstraintContainerType& ConstraintContainer)"
  },
  {
    "label": "RemoveConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveConstraint(FConstraintHandle* ConstraintHandle)"
  },
  {
    "label": "RemoveParticleConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveParticleConstraints(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "RemoveParticleContainerConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveParticleContainerConstraints(FGeometryParticleHandle* Particle, const int32 ContainerId)"
  },
  {
    "label": "RemoveContainerConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveContainerConstraints(const int32 ContainerId)"
  },
  {
    "label": "WakeConstraintIsland()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WakeConstraintIsland(FConstraintHandle* Constraint)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "RemoveAllConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllConstraints()"
  },
  {
    "label": "AddConstraintContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraintContainer(const FPBDConstraintContainer& Container)"
  },
  {
    "label": "RemoveConstraintContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveConstraintContainer(const FPBDConstraintContainer& Container)"
  },
  {
    "label": "SetMaterialContainers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialContainers(const TArrayCollectionArray<TSerializablePtr<FChaosPhysicsMaterial>>* InPhysicsMaterials, const TArrayCollectionArray<TUniquePtr<FChaosPhysicsMaterial>>* InPerParticlePhysicsMaterials, const THandleArray<FChaosPhysicsMaterial>* InSimMaterials)"
  },
  {
    "label": "SetGravityForces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGravityForces(const FPerParticleGravity* InGravity)"
  },
  {
    "label": "SetDisableCounterThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisableCounterThreshold(const int32 InDisableCounterThreshold)"
  },
  {
    "label": "SetIsDeterministic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsDeterministic(const bool bInIsDeterministic)"
  },
  {
    "label": "SetAssignLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAssignLevels(const bool bInAssignLevels)"
  },
  {
    "label": "UpdateExplicitSleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateExplicitSleep()"
  },
  {
    "label": "UpdateParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateParticles()"
  },
  {
    "label": "UpdateIslands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateIslands()"
  },
  {
    "label": "UpdateSleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSleep(const FReal Dt = 0)"
  },
  {
    "label": "EndTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndTick()"
  },
  {
    "label": "VisitAwakeConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisitAwakeConstraints(const int32 ContainerId, const VisitorType& Visitor)"
  },
  {
    "label": "VisitConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisitConstraints(const int32 ContainerId, const VisitorType& Visitor)"
  },
  {
    "label": "SetParticleResimFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParticleResimFrame(FGeometryParticleHandle* Particle, const int32 ResimFrame)"
  },
  {
    "label": "ResetParticleResimFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetParticleResimFrame(const int32 ResetFrame = INDEX_NONE)"
  },
  {
    "label": "GetNumIslands()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetNumIslands()"
  },
  {
    "label": "GetParticleIsland()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetParticleIsland(Particle)"
  },
  {
    "label": "DestroyGraphNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyGraphNode(FPBDIslandParticle* Node)"
  },
  {
    "label": "DestroyGraphEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyGraphEdge(FPBDIslandConstraint* Edge)"
  },
  {
    "label": "BindEdgeToNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindEdgeToNodes(FPBDIslandConstraint* Edge, FPBDIslandParticle* Node0, FPBDIslandParticle* Node1)"
  },
  {
    "label": "UnbindEdgeFromNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnbindEdgeFromNodes(FPBDIslandConstraint* Edge)"
  },
  {
    "label": "UpdateGraphNodeSleepSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGraphNodeSleepSettings(FPBDIslandParticle* Node)"
  },
  {
    "label": "UpdateGraphNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGraphNode(FPBDIslandParticle* Node)"
  },
  {
    "label": "UpdateGraphEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGraphEdge(FPBDIslandConstraint* Edge)"
  },
  {
    "label": "DestroyIsland()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyIsland(FPBDIsland* Island)"
  },
  {
    "label": "AssignNodeIsland()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignNodeIsland(FPBDIslandParticle* Node)"
  },
  {
    "label": "AssignEdgeIsland()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignEdgeIsland(FPBDIslandConstraint* Edge)"
  },
  {
    "label": "AddNodeToIsland()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNodeToIsland(FPBDIslandParticle* Node, FPBDIsland* Island)"
  },
  {
    "label": "RemoveNodeFromIsland()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNodeFromIsland(FPBDIslandParticle* Node)"
  },
  {
    "label": "DestroyIslandNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyIslandNodes(FPBDIsland* Island)"
  },
  {
    "label": "AddEdgeToIsland()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEdgeToIsland(FPBDIslandConstraint* Edge, FPBDIsland* Island)"
  },
  {
    "label": "RemoveEdgeFromIsland()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEdgeFromIsland(FPBDIslandConstraint* Edge)"
  },
  {
    "label": "WakeNodeIslands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WakeNodeIslands(const FPBDIslandParticle* Node)"
  },
  {
    "label": "EnqueueIslandCheckSleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueIslandCheckSleep(FPBDIsland* Island, const bool bIsSleepAllowed)"
  },
  {
    "label": "DestroyMergeSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyMergeSet(FPBDIslandMergeSet* IslandMergeSet)"
  },
  {
    "label": "AddIslandToMergeSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIslandToMergeSet(FPBDIsland* Island, FPBDIslandMergeSet* IslandMergeSet)"
  },
  {
    "label": "RemoveIslandFromMergeSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveIslandFromMergeSet(FPBDIsland* Island)"
  },
  {
    "label": "ProcessIslands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessIslands()"
  },
  {
    "label": "ProcessWakes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessWakes()"
  },
  {
    "label": "ProcessMerges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessMerges()"
  },
  {
    "label": "ProcessSplits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessSplits()"
  },
  {
    "label": "AssignLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignLevels()"
  },
  {
    "label": "ProcessIslandMerge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessIslandMerge(FPBDIsland* ParentIsland, FPBDIsland* ChildIsland)"
  },
  {
    "label": "ProcessIslandSplits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessIslandSplits(FPBDIsland* Island)"
  },
  {
    "label": "AssignIslandLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignIslandLevels(FPBDIsland* Island)"
  },
  {
    "label": "SortIslandEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortIslandEdges(FPBDIsland* Island)"
  },
  {
    "label": "ProcessSleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessSleep(const FRealSingle Dt)"
  },
  {
    "label": "ProcessParticlesSleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessParticlesSleep(const FRealSingle Dt)"
  },
  {
    "label": "ProcessIslandSleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessIslandSleep(FPBDIsland* Island, const FRealSingle Dt)"
  },
  {
    "label": "PropagateIslandSleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateIslandSleep(FPBDIsland* Island)"
  },
  {
    "label": "PropagateIslandSleepToParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateIslandSleepToParticles(FPBDIsland* Island)"
  },
  {
    "label": "PropagateIslandSleepToConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateIslandSleepToConstraints(FPBDIsland* Island)"
  },
  {
    "label": "ProcessParticlesDisable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessParticlesDisable(TArray<FPBDRigidParticleHandle*>& OutDisableParticles)"
  },
  {
    "label": "ProcessIslandDisable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessIslandDisable(FPBDIsland* Island, TArray<FPBDRigidParticleHandle*>& OutDisableParticles)"
  },
  {
    "label": "FinalizeIslands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeIslands()"
  },
  {
    "label": "ApplyDeterminism()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyDeterminism()"
  },
  {
    "label": "GetNextVisitEpoch()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNextVisitEpoch()"
  }
]