[
  {
    "label": "FSimpleTitleContainerArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleTitleContainerArgs"
  },
  {
    "label": "FSimpleTitleContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleTitleContainer"
  },
  {
    "label": "FSimpleTitleContainerArgs()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HeaderAndBodyContainer . h \" class FSimpleTitleContainerArgs : public FHeaderAndBodyContainerArgs { public :)",
    "insertText": "FSimpleTitleContainerArgs(FText InTitle = FText::GetEmpty(), const FName& InIdentifier = \"FSimpleTitleContainer\", const TSharedRef<FSlateBuilder>& InHeader = MakeShared<FSlateBuilder>(), const TSharedRef<FSlateBuilder>& InBody = MakeShared<FSlateBuilder>(), const bool bIsExpanded = false ) : FHeaderAndBodyContainerArgs(InIdentifier , InHeader, InBody, bIsExpanded ) , Title( InTitle)"
  },
  {
    "label": "FSimpleTitleContainer()",
    "kind": "Method",
    "detail": "Function (} FText Title ; } ; class FSimpleTitleContainer : public FHeaderAndBodyContainer { public :)",
    "insertText": "FSimpleTitleContainer(const FSimpleTitleContainerArgs& Args)"
  },
  {
    "label": "FSimpleTitleContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSimpleTitleContainer(FSimpleTitleContainerArgs&& Args)"
  }
]