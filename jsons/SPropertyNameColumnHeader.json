[
  {
    "label": "SPropertyNameColumnHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyNameColumnHeader"
  },
  {
    "label": "IPropertyTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableColumn"
  },
  {
    "label": "IPropertyTableUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableUtilities"
  },
  {
    "label": "IPropertyTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Layout / Margin . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Layout / SBorder . h \" # include \" Widgets / SBoxPanel . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Styling / AppStyle . h \" # include \" UserInterface / PropertyTable / SColumnHeader . h \" # include \" Widgets / Layout / SSpacer . h \" # include \" IPropertyTableRow . h \" # include \" Editor / EditorEngine . h \" class SPropertyNameColumnHeader : public SColumnHeader { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPropertyNameColumnHeader ) : _Style( TEXT(\"PropertyTable\") ) , _Customization()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FName, Style ) SLATE_ARGUMENT( TSharedPtr< IPropertyTableCustomColumn >, Customization ) SLATE_END_ARGS() void Construct( const FArguments& InArgs, const TSharedRef< class IPropertyTableColumn >& InPropertyTableColumn, const TSharedRef< class IPropertyTableUtilities >& InPropertyUtilities)"
  },
  {
    "label": "Style()",
    "kind": "Method",
    "detail": "Function (Style = InArgs . _Style ; SColumnHeader::FArguments ColumnArgs ; ColumnArgs .)",
    "insertText": "Style(Style)"
  },
  {
    "label": "Customization()",
    "kind": "Method",
    "detail": "Function (ColumnArgs .)",
    "insertText": "Customization(InArgs._Customization)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(ColumnArgs, InPropertyTableColumn, InPropertyUtilities)"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (ChildSlot [)",
    "insertText": "SNew(SSpacer)"
  },
  {
    "label": "GenerateCell()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SWidget>)",
    "insertText": "GenerateCell(const TSharedRef< class IPropertyTableRow >& PropertyTableRow)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FString PropertyName ;)",
    "insertText": "if(PropertyTableRow->GetDataSource()->AsPropertyPath().IsValid())"
  },
  {
    "label": "GetDataSource()",
    "kind": "Method",
    "detail": "Function (const TWeakFieldPtr<const FProperty> Property = PropertyTableRow ->)",
    "insertText": "GetDataSource()->AsPropertyPath()->GetLeafMostProperty()"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (PropertyName =)",
    "insertText": "GetFriendlyName(Property.Get())"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "SNew(SHorizontalBox ) +SHorizontalBox::Slot() [ SNew( SBorder ) .BorderImage( FAppStyle::GetBrush( \"PropertyTable.HeaderRow.Background\" ) ) .VAlign( VAlign_Center) .Padding( FMargin( 2, 0, 2, 0 ) ) [ SNew( STextBlock ) .Text( FText::FromString(PropertyName) ) .ColorAndOpacity(FLinearColor(1.0f, 1.0f, 1.0f))"
  },
  {
    "label": "OnTitleClicked()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnTitleClicked()"
  }
]