[
  {
    "label": "scale_factors",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scale_factors"
  },
  {
    "label": "macroblockd_plane",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "macroblockd_plane"
  },
  {
    "label": "mv_precision",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "mv_precision"
  },
  {
    "label": "buf_2d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "buf_2d"
  },
  {
    "label": "inter_predictor()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_COMMON_VP9_RECONINTER_H_ # define VPX_VP9_COMMON_VP9_RECONINTER_H_ # include \" vp9 / common / vp9_filter . h \" # include \" vp9 / common / vp9_onyxc_int . h \" # include \" vpx / vpx_integer . h \" # include \" vpx_dsp / vpx_filter . h \" # ifdef __cplusplus \" C \" { # endif void)",
    "insertText": "inter_predictor(const uint8_t *src, int src_stride, uint8_t *dst, int dst_stride, const int subpel_x, const int subpel_y, const struct scale_factors *sf, int w, int h, int ref, const InterpKernel *kernel, int xs, int ys)"
  },
  {
    "label": "ref()",
    "kind": "Method",
    "detail": "Function (sf -> predict [ subpel_x ! = 0 ] [ subpel_y ! = 0 ] [)",
    "insertText": "ref(src, src_stride, dst, dst_stride, kernel, subpel_x, xs, subpel_y, ys, w, h)"
  },
  {
    "label": "highbd_inter_predictor()",
    "kind": "Method",
    "detail": "Function (} # if CONFIG_VP9_HIGHBITDEPTH void)",
    "insertText": "highbd_inter_predictor(const uint16_t *src, int src_stride, uint16_t *dst, int dst_stride, const int subpel_x, const int subpel_y, const struct scale_factors *sf, int w, int h, int ref, const InterpKernel *kernel, int xs, int ys, int bd)"
  },
  {
    "label": "ref()",
    "kind": "Method",
    "detail": "Function (sf -> highbd_predict [ subpel_x ! = 0 ] [ subpel_y ! = 0 ] [)",
    "insertText": "ref(src, src_stride, dst, dst_stride, kernel, subpel_x, xs, subpel_y, ys, w, h, bd)"
  },
  {
    "label": "average_split_mvs()",
    "kind": "Method",
    "detail": "Function (} # endif MV)",
    "insertText": "average_split_mvs(const struct macroblockd_plane *pd, const MODE_INFO *mi, int ref, int block)"
  },
  {
    "label": "clamp_mv_to_umv_border_sb()",
    "kind": "Method",
    "detail": "Function (MV)",
    "insertText": "clamp_mv_to_umv_border_sb(const MACROBLOCKD *xd, const MV *src_mv, int bw, int bh, int ss_x, int ss_y)"
  },
  {
    "label": "vp9_build_inter_predictors_sby()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_build_inter_predictors_sby(MACROBLOCKD *xd, int mi_row, int mi_col, BLOCK_SIZE bsize)"
  },
  {
    "label": "vp9_build_inter_predictors_sbp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_build_inter_predictors_sbp(MACROBLOCKD *xd, int mi_row, int mi_col, BLOCK_SIZE bsize, int plane)"
  },
  {
    "label": "vp9_build_inter_predictors_sbuv()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_build_inter_predictors_sbuv(MACROBLOCKD *xd, int mi_row, int mi_col, BLOCK_SIZE bsize)"
  },
  {
    "label": "vp9_build_inter_predictors_sb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_build_inter_predictors_sb(MACROBLOCKD *xd, int mi_row, int mi_col, BLOCK_SIZE bsize)"
  },
  {
    "label": "vp9_build_inter_predictor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_build_inter_predictor(const uint8_t *src, int src_stride, uint8_t *dst, int dst_stride, const MV *src_mv, const struct scale_factors *sf, int w, int h, int ref, const InterpKernel *kernel, enum mv_precision precision, int x, int y)"
  },
  {
    "label": "vp9_highbd_build_inter_predictor()",
    "kind": "Method",
    "detail": "Function (# if CONFIG_VP9_HIGHBITDEPTH void)",
    "insertText": "vp9_highbd_build_inter_predictor(const uint16_t *src, int src_stride, uint16_t *dst, int dst_stride, const MV *src_mv, const struct scale_factors *sf, int w, int h, int ref, const InterpKernel *kernel, enum mv_precision precision, int x, int y, int bd)"
  },
  {
    "label": "scaled_buffer_offset()",
    "kind": "Method",
    "detail": "Function (# endif int64_t)",
    "insertText": "scaled_buffer_offset(int x_offset, int y_offset, int stride, const struct scale_factors *sf)"
  },
  {
    "label": "scale_value_x()",
    "kind": "Method",
    "detail": "Function (const int x = sf ? sf ->)",
    "insertText": "scale_value_x(x_offset, sf)"
  },
  {
    "label": "scale_value_y()",
    "kind": "Method",
    "detail": "Function (const int y = sf ? sf ->)",
    "insertText": "scale_value_y(y_offset, sf)"
  },
  {
    "label": "setup_pred_plane()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setup_pred_plane(struct buf_2d *dst, uint8_t *src, int stride, int mi_row, int mi_col, const struct scale_factors *scale, int subsampling_x, int subsampling_y)"
  },
  {
    "label": "x()",
    "kind": "Method",
    "detail": "Function (const int)",
    "insertText": "x(MI_SIZE * mi_col)"
  },
  {
    "label": "y()",
    "kind": "Method",
    "detail": "Function (const int)",
    "insertText": "y(MI_SIZE * mi_row)"
  },
  {
    "label": "scaled_buffer_offset()",
    "kind": "Method",
    "detail": "Function (dst -> buf = src +)",
    "insertText": "scaled_buffer_offset(x, y, stride, scale)"
  },
  {
    "label": "vp9_setup_dst_planes()",
    "kind": "Method",
    "detail": "Function (dst -> stride = stride ; } void)",
    "insertText": "vp9_setup_dst_planes(struct macroblockd_plane planes[MAX_MB_PLANE], const YV12_BUFFER_CONFIG *src, int mi_row, int mi_col)"
  },
  {
    "label": "vp9_setup_pre_planes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_setup_pre_planes(MACROBLOCKD *xd, int idx, const YV12_BUFFER_CONFIG *src, int mi_row, int mi_col, const struct scale_factors *sf)"
  }
]