[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "FWorldTileCollectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldTileCollectionModel"
  },
  {
    "label": "FPropertyEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditorModule"
  },
  {
    "label": "FocusStrategy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FocusStrategy"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FWorldTileCollectionModel()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / WorldCompositionUtility . h \" # include \" Tiles / WorldTileModel . h \" # include \" LevelCollectionModel . h \" # include \" EditorUndoClient . h \" class FMenuBuilder ; class IDetailsView ; class FWorldTileCollectionModel : public FLevelCollectionModel,public FEditorUndoClient { public : ~)",
    "insertText": "FWorldTileCollectionModel()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorldTileCollectionModel>)",
    "insertText": "Create(UWorld* InWorld)"
  },
  {
    "label": "LevelCollectionModel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorldTileCollectionModel>)",
    "insertText": "LevelCollectionModel(new FWorldTileCollectionModel())"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (LevelCollectionModel ->)",
    "insertText": "Initialize(InWorld)"
  },
  {
    "label": "TranslateLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TranslateLevels(const FLevelModelList& InList, FVector2D InAbsoluteDelta, bool bSnapDelta = true)"
  },
  {
    "label": "SnapTranslationDelta()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "SnapTranslationDelta(const FLevelModelList& InList, FVector2D InTranslationDelta, bool bBoundsSnapping, FVector2D::FReal InSnappingValue)"
  },
  {
    "label": "CreateDragDropOp()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<WorldHierarchy::FWorldBrowserDragDropOp>)",
    "insertText": "CreateDragDropOp()"
  },
  {
    "label": "CreateDragDropOp()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<WorldHierarchy::FWorldBrowserDragDropOp>)",
    "insertText": "CreateDragDropOp(const FLevelModelList& InLevels)"
  },
  {
    "label": "PassesAllFilters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesAllFilters(const FLevelModel& InLevelModel)"
  },
  {
    "label": "BuildHierarchyMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildHierarchyMenu(FMenuBuilder& InMenuBuilder, EBuildHierarchyMenuFlags Flags)"
  },
  {
    "label": "CustomizeFileMainMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeFileMainMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "GetPlayerView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPlayerView(FVector& Location, FRotator& Rotation)"
  },
  {
    "label": "GetObserverView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetObserverView(FVector& Location, FRotator& Rotation)"
  },
  {
    "label": "CompareLevelsZOrder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompareLevelsZOrder(TSharedPtr<FLevelModel> InA, TSharedPtr<FLevelModel> InB)"
  },
  {
    "label": "RegisterDetailsCustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDetailsCustomization(class FPropertyEditorModule& PropertyModule, TSharedPtr<class IDetailsView> InDetailsView)"
  },
  {
    "label": "UnregisterDetailsCustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterDetailsCustomization(class FPropertyEditorModule& PropertyModule, TSharedPtr<class IDetailsView> InDetailsView)"
  },
  {
    "label": "IsTileWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTileWorld()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UWorld* InWorld)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "OnLevelsCollectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelsCollectionChanged()"
  },
  {
    "label": "OnLevelsSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelsSelectionChanged()"
  },
  {
    "label": "OnLevelsHierarchyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelsHierarchyChanged()"
  },
  {
    "label": "OnPreLoadLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreLoadLevels(const FLevelModelList& InList)"
  },
  {
    "label": "OnPreShowLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreShowLevels(const FLevelModelList& InList)"
  },
  {
    "label": "HasWorldRoot()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "HasWorldRoot()"
  },
  {
    "label": "GetWorldRootModel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FWorldTileModel>)",
    "insertText": "GetWorldRootModel()"
  },
  {
    "label": "DeselectLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeselectLevels(const FWorldTileLayer& InLayer)"
  },
  {
    "label": "AreAnyLayersSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAnyLayersSelected()"
  },
  {
    "label": "ShelveLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShelveLevels(const FWorldTileModelList& InLevels)"
  },
  {
    "label": "UnshelveLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnshelveLevels(const FWorldTileModelList& InLevels)"
  },
  {
    "label": "AreAnySelectedLevelsHaveLandscape()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAnySelectedLevelsHaveLandscape()"
  },
  {
    "label": "CreateNewEmptyLevel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FLevelModel>)",
    "insertText": "CreateNewEmptyLevel()"
  },
  {
    "label": "GetLayers()",
    "kind": "Method",
    "detail": "Function (TArray<FWorldTileLayer>&)",
    "insertText": "GetLayers()"
  },
  {
    "label": "AddLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLayer(const FWorldTileLayer& InLayer)"
  },
  {
    "label": "AddManagedLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddManagedLayer(const FWorldTileLayer& InLayer)"
  },
  {
    "label": "SetSelectedLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedLayer(const FWorldTileLayer& InLayer)"
  },
  {
    "label": "SetSelectedLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedLayers(const TArray<FWorldTileLayer>& InLayers)"
  },
  {
    "label": "ToggleLayerSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleLayerSelection(const FWorldTileLayer& InLayer)"
  },
  {
    "label": "IsLayerSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLayerSelected(const FWorldTileLayer& InLayer)"
  },
  {
    "label": "OnLevelLoadedFromDisk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelLoadedFromDisk(TSharedPtr<FWorldTileModel> InLevel)"
  },
  {
    "label": "UpdateStreamingPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStreamingPreview(FVector2D InPreviewLocation, bool bEnabled)"
  },
  {
    "label": "GetPreviewStreamingLevels()",
    "kind": "Method",
    "detail": "Function (const TMap<FName,int32>&)",
    "insertText": "GetPreviewStreamingLevels()"
  },
  {
    "label": "SnapTranslationDeltaLandscape()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "SnapTranslationDeltaLandscape(const TSharedPtr<FWorldTileModel>& LandscapeTile, FVector2D InAbsoluteDelta, float SnappingDistance)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bSuccess)"
  },
  {
    "label": "Focus()",
    "kind": "Method",
    "detail": "Function (} enum FocusStrategy { OriginAtCenter,EnsureEditable,EnsureEditableCentered } ; void)",
    "insertText": "Focus(FBox InArea, FocusStrategy InStaragegy)"
  },
  {
    "label": "BuildWorldCompositionMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildWorldCompositionMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "SetupParentChildLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupParentChildLinks()"
  },
  {
    "label": "OnPreSaveWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreSaveWorld(class UWorld* World, FObjectPreSaveContext ObjectSaveContext)"
  },
  {
    "label": "OnPostSaveWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostSaveWorld(class UWorld* World, FObjectPostSaveContext ObjectSaveContext)"
  },
  {
    "label": "OnNewCurrentLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewCurrentLevel()"
  },
  {
    "label": "GetCorrespondingModel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FWorldTileModel>)",
    "insertText": "GetCorrespondingModel(ULevel* InLevel)"
  },
  {
    "label": "PrepareToLoadLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareToLoadLevels(FWorldTileModelList& InLevels)"
  },
  {
    "label": "PreWorldOriginOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreWorldOriginOffset(UWorld* InWorld, FIntVector InSrcOrigin, FIntVector InDstOrigin)"
  },
  {
    "label": "PostWorldOriginOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostWorldOriginOffset(UWorld* InWorld, FIntVector InSrcOrigin, FIntVector InDstOrigin)"
  },
  {
    "label": "PopulateLayersList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateLayersList()"
  },
  {
    "label": "MoveWorldOrigin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveWorldOrigin(const FIntPoint& InOrigin2D)"
  },
  {
    "label": "AddLevelToTheWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddLevelToTheWorld(const TSharedPtr<FWorldTileModel>& InLevel)"
  },
  {
    "label": "FillLayersSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillLayersSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "FillAdjacentLandscapeSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillAdjacentLandscapeSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "FillReimportTiledLandscapeSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillReimportTiledLandscapeSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "FillWeightmapsSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillWeightmapsSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "CreateNewLevel_Executed()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CreateNewLevel_Executed()"
  },
  {
    "label": "MoveWorldOrigin_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveWorldOrigin_Executed()"
  },
  {
    "label": "ResetWorldOrigin_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetWorldOrigin_Executed()"
  },
  {
    "label": "ResetLevelOrigin_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetLevelOrigin_Executed()"
  },
  {
    "label": "ClearParentLink_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearParentLink_Executed()"
  },
  {
    "label": "AddLandscapeProxy_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLandscapeProxy_Executed(FWorldTileModel::EWorldDirections InWhere)"
  },
  {
    "label": "CanAddLandscapeProxy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAddLandscapeProxy(FWorldTileModel::EWorldDirections InWhere)"
  },
  {
    "label": "CanReimportTiledlandscape()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReimportTiledlandscape()"
  },
  {
    "label": "ImportTiledLandscape_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportTiledLandscape_Executed()"
  },
  {
    "label": "ReimportTiledLandscape_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReimportTiledLandscape_Executed(FName TargetLayer)"
  },
  {
    "label": "OnToggleLockTilesLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleLockTilesLocation()"
  },
  {
    "label": "IsLockTilesLocationEnabled()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "IsLockTilesLocationEnabled()"
  },
  {
    "label": "HasMeshProxySupport()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "HasMeshProxySupport()"
  },
  {
    "label": "GenerateLODLevels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateLODLevels(FLevelModelList InLevelList, int32 TargetLODIndex)"
  },
  {
    "label": "AssignSelectedLevelsToLayer_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignSelectedLevelsToLayer_Executed(FWorldTileLayer InLayer)"
  }
]