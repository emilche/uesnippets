[
  {
    "label": "IWebSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWebSocket"
  },
  {
    "label": "IWebSocketsManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWebSocketsManager"
  },
  {
    "label": "FWebSocketsModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWebSocketsModule"
  },
  {
    "label": "FLwsWebSocketsManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLwsWebSocketsManager"
  },
  {
    "label": "FLwsWebSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLwsWebSocket"
  },
  {
    "label": "FWebSocketsModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" Delegates / Delegate . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" Templates / SharedPointer . h \" # if WITH_WEBSOCKETS class IWebSocket ; class IWebSocketsManager ; # endif class FWebSocketsModule : public IModuleInterface { public :)",
    "insertText": "FWebSocketsModule() #if WITH_WEBSOCKETS : WebSocketsManager(nullptr)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (} # if WITH_WEBSOCKETS)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnWebSocketCreated, const TSharedPtr<class IWebSocket>& , const TArray<FString>& , const FString&)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FOnWebSocketCreated OnWebSocketCreated ; # endif FWebSocketsModule&)",
    "insertText": "Get()"
  },
  {
    "label": "CreateWebSocket()",
    "kind": "Method",
    "detail": "Function (# if WITH_WEBSOCKETS TSharedRef<IWebSocket>)",
    "insertText": "CreateWebSocket(const FString& Url, const TArray<FString>& Protocols, const TMap<FString, FString>& UpgradeHeaders = TMap<FString, FString>())"
  },
  {
    "label": "CreateWebSocket()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IWebSocket>)",
    "insertText": "CreateWebSocket(const FString& Url, const FString& Protocol = FString(), const TMap<FString, FString>& UpgradeHeaders = TMap<FString, FString>())"
  },
  {
    "label": "BuildUpgradeHeader()",
    "kind": "Method",
    "detail": "Function (# endif private : FString)",
    "insertText": "BuildUpgradeHeader(const TMap<FString, FString>& Headers)"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  }
]