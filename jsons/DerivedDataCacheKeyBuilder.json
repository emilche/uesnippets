[
  {
    "label": "FCacheKeyBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheKeyBuilder"
  },
  {
    "label": "FCacheKeyBuilder()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DerivedDataCacheKey . h \" # include \" Misc / Guid . h \" # include \" Serialization / Archive . h \" # include \" UObject / NameTypes . h \" # include<type_traits> namespace UE::DerivedData { class FCacheKeyBuilder final : public FArchive { public :)",
    "insertText": "FCacheKeyBuilder()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (FCacheKey)",
    "insertText": "Build(FCacheBucket Bucket)"
  },
  {
    "label": "GetArchiveName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetArchiveName()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(void* Data, int64 Num)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (using FArchive::operator<<; FArchive&)",
    "insertText": "operator(FName& Name)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (template<ArgType> FCacheKeyBuilder&)",
    "insertText": "operator(ArgType&& Arg)"
  },
  {
    "label": "ArgType()",
    "kind": "Method",
    "detail": "Function (FArchive& Ar =* this ; Ar<<const_cast<std::decay_t<)",
    "insertText": "ArgType(Arg)"
  },
  {
    "label": "SetIsSaving()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsSaving(true)"
  },
  {
    "label": "SetIsPersistent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsPersistent(false)"
  },
  {
    "label": "BaseVersion()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "BaseVersion(TEXT(\"7ad57ac2-c657-4c11-890c-6d9a2d88dd33\"))"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (HashBuilder .)",
    "insertText": "Update(&BaseVersion, sizeof(FGuid))"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (HashBuilder .)",
    "insertText": "Update(Data, uint64(Num))"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString NameString = Name .)",
    "insertText": "ToString()"
  }
]