[
  {
    "label": "IChunkEvictionPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkEvictionPolicy"
  },
  {
    "label": "IMemoryChunkStoreStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMemoryChunkStoreStat"
  },
  {
    "label": "IChunkReferenceTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkReferenceTracker"
  },
  {
    "label": "IMemoryChunkStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMemoryChunkStore"
  },
  {
    "label": "FMemoryChunkStoreFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryChunkStoreFactory"
  },
  {
    "label": "IMemoryChunkStore()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Installer / ChunkStore . h \" namespace BuildPatchServices { class IChunkEvictionPolicy ; class IMemoryChunkStoreStat ; class IChunkReferenceTracker ; class IMemoryChunkStore : public IChunkStore { public : ~)",
    "insertText": "IMemoryChunkStore()"
  },
  {
    "label": "DumpToOverflow()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DumpToOverflow()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FMemoryChunkStoreFactory { public : IMemoryChunkStore*)",
    "insertText": "Create(int32 ChunkCount, IChunkEvictionPolicy* EvictionPolicy, IChunkStore* OverflowStore, IMemoryChunkStoreStat* MemoryChunkStoreStat, IChunkReferenceTracker* InOptionalChunkReferenceTracker)"
  },
  {
    "label": "IMemoryChunkStoreStat()",
    "kind": "Method",
    "detail": "Function (} ; class IMemoryChunkStoreStat { public : ~)",
    "insertText": "IMemoryChunkStoreStat()"
  },
  {
    "label": "OnChunkStored()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnChunkStored(const FGuid& ChunkId)"
  },
  {
    "label": "OnChunkReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChunkReleased(const FGuid& ChunkId)"
  },
  {
    "label": "OnChunkBooted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChunkBooted(const FGuid& ChunkId)"
  },
  {
    "label": "OnStoreUseUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStoreUseUpdated(int32 ChunkCount)"
  },
  {
    "label": "OnStoreSizeUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStoreSizeUpdated(int32 Size)"
  }
]