[
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FRHISamplerState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHISamplerState"
  },
  {
    "label": "FRHITexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHITexture"
  },
  {
    "label": "FGenerateMipsStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenerateMipsStruct"
  },
  {
    "label": "FGenerateMipsParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenerateMipsParams"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGenerateMips",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenerateMips"
  },
  {
    "label": "WillFormatSupportCompute()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" PixelFormat . h \" # include \" RHIDefinitions . h \" # include \" RenderGraphDefinitions . h \" # include \" Templates / SharedPointer . h \" class FRDGBuilder ; class FRHICommandListImmediate ; class FRHISamplerState ; class FRHITexture ; struct FGenerateMipsStruct ; struct FGenerateMipsParams { ESamplerFilter Filter = SF_Bilinear ; ESamplerAddressMode AddressU = AM_Clamp ; ESamplerAddressMode AddressV = AM_Clamp ; ESamplerAddressMode AddressW = AM_Clamp ; } ; enum class EGenerateMipsPass { AutoDetect,Compute,Raster } ; class FGenerateMips { public : bool)",
    "insertText": "WillFormatSupportCompute(EPixelFormat InPixelFormat)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Execute(FRDGBuilder& GraphBuilder, ERHIFeatureLevel::Type FeatureLevel, FRDGTextureRef Texture, FGenerateMipsParams Params = {}, EGenerateMipsPass Pass = EGenerateMipsPass::AutoDetect)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Execute(FRDGBuilder& GraphBuilder, ERHIFeatureLevel::Type FeatureLevel, FRDGTextureRef Texture, FRHISamplerState* Sampler, EGenerateMipsPass Pass = EGenerateMipsPass::AutoDetect)"
  },
  {
    "label": "ExecuteCompute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteCompute(FRDGBuilder& GraphBuilder, ERHIFeatureLevel::Type FeatureLevel, FRDGTextureRef Texture, FRHISamplerState* Sampler)"
  },
  {
    "label": "ExecuteCompute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteCompute(FRDGBuilder& GraphBuilder, ERHIFeatureLevel::Type FeatureLevel, FRDGTextureRef Texture, FRHISamplerState* Sampler, FRDGBufferRef ConditionBuffer, uint32 Offset = 0)"
  },
  {
    "label": "ExecuteRaster()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteRaster(FRDGBuilder& GraphBuilder, ERHIFeatureLevel::Type FeatureLevel, FRDGTextureRef Texture, FRHISamplerState* Sampler)"
  }
]