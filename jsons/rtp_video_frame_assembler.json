[
  {
    "label": "RtpVideoFrameAssembler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpVideoFrameAssembler"
  },
  {
    "label": "AssembledFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AssembledFrame"
  },
  {
    "label": "PayloadFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PayloadFormat"
  },
  {
    "label": "Impl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Impl"
  },
  {
    "label": "AssembledFrame()",
    "kind": "Method",
    "detail": "Function (# ifndef API_VIDEO_RTP_VIDEO_FRAME_ASSEMBLER_H_ # define API_VIDEO_RTP_VIDEO_FRAME_ASSEMBLER_H_ # include<cstdint> # include<memory> # include<utility> # include \" absl / container / inlined_vector . h \" # include \" api / video / encoded_frame . h \" # include \" modules / rtp_rtcp / source / rtp_packet_received . h \" namespace webrtc { class RtpVideoFrameAssembler { public : class AssembledFrame { public :)",
    "insertText": "AssembledFrame(uint16_t rtp_seq_num_start, uint16_t rtp_seq_num_end, std::unique_ptr<EncodedFrame> frame) : rtp_seq_num_start_(rtp_seq_num_start), rtp_seq_num_end_(rtp_seq_num_end), frame_(std::move(frame))"
  },
  {
    "label": "RtpSeqNumStart()",
    "kind": "Method",
    "detail": "Function (} uint16_t)",
    "insertText": "RtpSeqNumStart()"
  },
  {
    "label": "RtpVideoFrameAssembler()",
    "kind": "Method",
    "detail": "Function (} private : uint16_t rtp_seq_num_start_ ; uint16_t rtp_seq_num_end_ ; std::unique_ptr<EncodedFrame> frame_ ; } ; using FrameVector = absl::InlinedVector<AssembledFrame,3> ; enum PayloadFormat { kRaw,kH264,kVp8,kVp9,kAv1,kGeneric } ;)",
    "insertText": "RtpVideoFrameAssembler(PayloadFormat payload_format)"
  },
  {
    "label": "RtpVideoFrameAssembler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtpVideoFrameAssembler(const RtpVideoFrameAssembler& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RtpVideoFrameAssembler&)",
    "insertText": "operator(const RtpVideoFrameAssembler& other)"
  },
  {
    "label": "RtpVideoFrameAssembler()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtpVideoFrameAssembler()"
  },
  {
    "label": "InsertPacket()",
    "kind": "Method",
    "detail": "Function (FrameVector)",
    "insertText": "InsertPacket(const RtpPacketReceived& packet)"
  }
]