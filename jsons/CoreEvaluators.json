[
  {
    "label": "returns",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "returns"
  },
  {
    "label": "storage_kind_to_evaluator_kind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "storage_kind_to_evaluator_kind"
  },
  {
    "label": "returns",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "returns"
  },
  {
    "label": "storage_kind_to_shape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "storage_kind_to_shape"
  },
  {
    "label": "storage_kind_to_shape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "storage_kind_to_shape"
  },
  {
    "label": "storage_kind_to_shape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "storage_kind_to_shape"
  },
  {
    "label": "storage_kind_to_shape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "storage_kind_to_shape"
  },
  {
    "label": "storage_kind_to_shape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "storage_kind_to_shape"
  },
  {
    "label": "ternary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ternary_evaluator"
  },
  {
    "label": "binary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "binary_evaluator"
  },
  {
    "label": "unary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unary_evaluator"
  },
  {
    "label": "evaluator_traits_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator_traits_base"
  },
  {
    "label": "evaluator_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator_traits"
  },
  {
    "label": "evaluator_assume_aliasing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator_assume_aliasing"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "evaluator_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator_base"
  },
  {
    "label": "inherit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "inherit"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "plainobjectbase_evaluator_data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "plainobjectbase_evaluator_data"
  },
  {
    "label": "plainobjectbase_evaluator_data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "plainobjectbase_evaluator_data"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "unary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unary_evaluator"
  },
  {
    "label": "nullary_wrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nullary_wrapper"
  },
  {
    "label": "nullary_wrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nullary_wrapper"
  },
  {
    "label": "nullary_wrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nullary_wrapper"
  },
  {
    "label": "nullary_wrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nullary_wrapper"
  },
  {
    "label": "nullary_wrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nullary_wrapper"
  },
  {
    "label": "nullary_wrapper_workaround_msvc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nullary_wrapper_workaround_msvc"
  },
  {
    "label": "nullary_wrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nullary_wrapper"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "unary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unary_evaluator"
  },
  {
    "label": "Data",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Data"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "ternary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ternary_evaluator"
  },
  {
    "label": "Data",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Data"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "binary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "binary_evaluator"
  },
  {
    "label": "Data",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Data"
  },
  {
    "label": "unary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unary_evaluator"
  },
  {
    "label": "Data",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Data"
  },
  {
    "label": "mapbase_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mapbase_evaluator"
  },
  {
    "label": "mapbase_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mapbase_evaluator"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "block_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "block_evaluator"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "block_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "block_evaluator"
  },
  {
    "label": "unary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unary_evaluator"
  },
  {
    "label": "block_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "block_evaluator"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "unary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unary_evaluator"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "evaluator_wrapper_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator_wrapper_base"
  },
  {
    "label": "unary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unary_evaluator"
  },
  {
    "label": "unary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unary_evaluator"
  },
  {
    "label": "reverse_packet_cond",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "reverse_packet_cond"
  },
  {
    "label": "unary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unary_evaluator"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "EvalToTemp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EvalToTemp"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "EvalToTemp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EvalToTemp"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "products()",
    "kind": "Method",
    "detail": "Function (algebra)",
    "insertText": "products(Product)"
  },
  {
    "label": "evaluator_base()",
    "kind": "Method",
    "detail": "Function (EIGEN_DEVICE_FUNC)",
    "insertText": "evaluator_base(const evaluator_base&)"
  },
  {
    "label": "EIGEN_UNUSED_VARIABLE()",
    "kind": "Method",
    "detail": "Function (EIGEN_INTERNAL_DEBUGGING)",
    "insertText": "EIGEN_UNUSED_VARIABLE(outerStride)"
  },
  {
    "label": "eigen_internal_assert()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "eigen_internal_assert(outerStride==OuterStride)"
  },
  {
    "label": "op()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "op(i,j)"
  },
  {
    "label": "op()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "op(i)"
  },
  {
    "label": "op()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "op()"
  },
  {
    "label": "op()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "op(i,j)"
  },
  {
    "label": "op()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "op(i+j)"
  },
  {
    "label": "op()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "op(i)"
  },
  {
    "label": "m_wrapper()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "m_wrapper(m_functor, row, col)"
  },
  {
    "label": "m_wrapper()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "m_wrapper(m_functor,index)"
  },
  {
    "label": "coeff()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "coeff(RowsAtCompileTime == 1 ? 0 : index, RowsAtCompileTime == 1 ? index : 0)"
  },
  {
    "label": "coeffRef()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "coeffRef(RowsAtCompileTime == 1 ? 0 : index, RowsAtCompileTime == 1 ? index : 0)"
  }
]