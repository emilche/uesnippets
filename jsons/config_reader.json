[
  {
    "label": "NetworkTesterConfigs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkTesterConfigs"
  },
  {
    "label": "ConfigReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConfigReader"
  },
  {
    "label": "Config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Config"
  },
  {
    "label": "RTC_PUSH_IGNORING_WUNDEF()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_TOOLS_NETWORK_TESTER_CONFIG_READER_H_ # define RTC_TOOLS_NETWORK_TESTER_CONFIG_READER_H_ # include<fstream> # include<string> # include \" absl / types / optional . h \" # include \" rtc_base / ignore_wundef . h \" # ifdef WEBRTC_NETWORK_TESTER_PROTO)",
    "insertText": "RTC_PUSH_IGNORING_WUNDEF() #include \"rtc_tools/network_tester/network_tester_config.pb.h\" RTC_POP_IGNORING_WUNDEF()"
  },
  {
    "label": "ConfigReader()",
    "kind": "Method",
    "detail": "Function (# else class NetworkTesterConfigs ; # endif namespace webrtc { class ConfigReader { public : struct Config { int packet_send_interval_ms ; int packet_size ; int execution_time_ms ; } ;)",
    "insertText": "ConfigReader(const std::string& config_file_path)"
  },
  {
    "label": "ConfigReader()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ConfigReader()"
  },
  {
    "label": "ConfigReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigReader(const ConfigReader&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ConfigReader&)",
    "insertText": "operator(const ConfigReader&)"
  },
  {
    "label": "GetNextConfig()",
    "kind": "Method",
    "detail": "Function (absl::optional<Config>)",
    "insertText": "GetNextConfig()"
  }
]