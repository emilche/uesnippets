[
  {
    "label": "SColorBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorBlock"
  },
  {
    "label": "SPropertyEditorColor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyEditorColor"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "IPropertyUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyUtilities"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" IPropertyUtilities . h \" # include \" Presentation / PropertyEditor / PropertyEditor . h \" class SColorBlock ; class SPropertyEditorColor : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPropertyEditorColor)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() static bool Supports( const TSharedRef< class FPropertyEditor >& PropertyEditor)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef< class FPropertyEditor >& InPropertyEditor, const TSharedRef< class IPropertyUtilities >& InPropertyUtilities)"
  },
  {
    "label": "ConstructColorBlock()",
    "kind": "Method",
    "detail": "Function (protected : TSharedRef<SColorBlock>)",
    "insertText": "ConstructColorBlock()"
  },
  {
    "label": "ConstructAlphaColorBlock()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SColorBlock>)",
    "insertText": "ConstructAlphaColorBlock()"
  },
  {
    "label": "ShouldDisplayIgnoreAlpha()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldDisplayIgnoreAlpha()"
  },
  {
    "label": "OnGetColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "OnGetColor()"
  },
  {
    "label": "ColorBlock_OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ColorBlock_OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetVisibilityForOpaqueDisplay()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetVisibilityForOpaqueDisplay()"
  },
  {
    "label": "CreateColorPickerWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateColorPickerWindow(const TSharedRef< class FPropertyEditor >& PropertyEditor, bool bUseAlpha, bool bOnlyRefreshOnOk=false)"
  },
  {
    "label": "SetColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColor(FLinearColor NewColor)"
  },
  {
    "label": "OnColorPickerCancelled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerCancelled(FLinearColor OriginalColor)"
  },
  {
    "label": "CanEdit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEdit()"
  }
]