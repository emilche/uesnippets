[
  {
    "label": "FChangelistGroupTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChangelistGroupTreeItem"
  },
  {
    "label": "SExpandableArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SExpandableArea"
  },
  {
    "label": "SExpandableChangelistArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SExpandableChangelistArea"
  },
  {
    "label": "SWidgetSwitcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidgetSwitcher"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "USourceControlSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USourceControlSettings"
  },
  {
    "label": "SSourceControlChangelistsWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSourceControlChangelistsWidget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAsyncTimestampUpdater",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncTimestampUpdater"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / AsyncWork . h \" # include \" CoreMinimal . h \" # include<atomic> # include \" ISourceControlProvider . h \" # include \" Misc / EnumClassFlags . h \" # include \" Misc / TextFilter . h \" # include \" SSourceControlCommon . h \" # include \" Stats / Stats . h \" # include \" UObject / ObjectSaveContext . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STreeView . h \" class FChangelistGroupTreeItem ; class SExpandableArea ; class SExpandableChangelistArea ; class SWidgetSwitcher ; class SSearchBox ; class USourceControlSettings ; class SSourceControlChangelistsWidget : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSourceControlChangelistsWidget)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SSourceControlChangelistsWidget()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SSourceControlChangelistsWidget()"
  },
  {
    "label": "SetSelectedFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedFiles(const TArray<FString>& Filenames)"
  },
  {
    "label": "FRIEND_ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (private : enum class ERefreshFlags { SourceControlChangelists = 1<<0,UnsavedAssets = 1<<1,UncontrolledChangelists = 1<<2,All = SourceControlChangelists | UnsavedAssets | UncontrolledChangelists,} ;)",
    "insertText": "FRIEND_ENUM_CLASS_FLAGS(ERefreshFlags)"
  },
  {
    "label": "DoWork()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "DoWork()"
  },
  {
    "label": "CanAbandon()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAbandon()"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (bAbandon = true ; } TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "Name()"
  },
  {
    "label": "MakeToolBar()",
    "kind": "Method",
    "detail": "Function (} public : std::atomic<bool> bAbandon ; TSet<FString> RequestedFileTimestamps ; TMap<FString,FDateTime> QueriedFileTimestamps ; } ; private : TSharedRef<SWidget>)",
    "insertText": "MakeToolBar()"
  },
  {
    "label": "CreateChangelistTreeView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<STreeView<FChangelistTreeItemPtr>>)",
    "insertText": "CreateChangelistTreeView(TArray<TSharedPtr<IChangelistTreeItem>>& ItemSources)"
  },
  {
    "label": "CreateChangelistFilesView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SListView<FChangelistTreeItemPtr>>)",
    "insertText": "CreateChangelistFilesView()"
  },
  {
    "label": "CreateUnsavedAssetsFilesView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SListView<FChangelistTreeItemPtr>>)",
    "insertText": "CreateUnsavedAssetsFilesView()"
  },
  {
    "label": "OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRow(FChangelistTreeItemPtr InTreeItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnGetChangelistChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChangelistChildren(FChangelistTreeItemPtr InParent, TArray<FChangelistTreeItemPtr>& OutChildren)"
  },
  {
    "label": "OnFileViewHiddenColumnsListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFileViewHiddenColumnsListChanged()"
  },
  {
    "label": "GetColumnSortPriority()",
    "kind": "Method",
    "detail": "Function (EColumnSortPriority::Type)",
    "insertText": "GetColumnSortPriority(const FName ColumnId)"
  },
  {
    "label": "GetColumnSortMode()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetColumnSortMode(const FName ColumnId)"
  },
  {
    "label": "OnColumnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "IsFileViewSortedByFileStatusIcon()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFileViewSortedByFileStatusIcon()"
  },
  {
    "label": "IsFileViewSortedByLastModifiedTimestamp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFileViewSortedByLastModifiedTimestamp()"
  },
  {
    "label": "SortFileView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortFileView()"
  },
  {
    "label": "OnChangelistSearchTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangelistSearchTextChanged(const FText& InFilterText)"
  },
  {
    "label": "OnUncontrolledChangelistSearchTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUncontrolledChangelistSearchTextChanged(const FText& InFilterText)"
  },
  {
    "label": "OnFileSearchTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFileSearchTextChanged(const FText& InFilterText)"
  },
  {
    "label": "PopulateItemSearchStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateItemSearchStrings(const IChangelistTreeItem& Item, TArray<FString>& OutStrings)"
  },
  {
    "label": "OnUnsavedAssetChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnsavedAssetChanged(const FString& Filepath)"
  },
  {
    "label": "OnFilesDragged()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnFilesDragged(const FGeometry& InGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "OnUnsavedAssetsDragged()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnUnsavedAssetsDragged(const FGeometry& InGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "RequestChangelistsRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestChangelistsRefresh()"
  },
  {
    "label": "RequestFileStatusRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestFileStatusRefresh(const IChangelistTreeItem& Changelist)"
  },
  {
    "label": "RequestFileStatusRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestFileStatusRefresh(TSet<FString>&& Pathnames)"
  },
  {
    "label": "OnRefreshUI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRefreshUI(ERefreshFlags RefreshFlags)"
  },
  {
    "label": "OnRefreshUnsavedAssetsWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRefreshUnsavedAssetsWidgets(int64 CurrUpdateNum, const TFunction<void(TSharedPtr<IFileViewTreeItem>&)>& AddItemToFileView)"
  },
  {
    "label": "OnRefreshSourceControlWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRefreshSourceControlWidgets(int64 CurreUpdateNum, const TFunction<void(TSharedPtr<IFileViewTreeItem>&)>& AddItemToFileView)"
  },
  {
    "label": "OnRefreshUncontrolledChangelistWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRefreshUncontrolledChangelistWidgets(int64 CurreUpdateNum, const TFunction<void(TSharedPtr<IFileViewTreeItem>&)>& AddItemToFileView)"
  },
  {
    "label": "ClearChangelistsTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChangelistsTree()"
  },
  {
    "label": "OnOpenContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnOpenContextMenu()"
  },
  {
    "label": "GetCurrentChangelistState()",
    "kind": "Method",
    "detail": "Function (FSourceControlChangelistStatePtr)",
    "insertText": "GetCurrentChangelistState()"
  },
  {
    "label": "GetCurrentUncontrolledChangelistState()",
    "kind": "Method",
    "detail": "Function (FUncontrolledChangelistStatePtr)",
    "insertText": "GetCurrentUncontrolledChangelistState()"
  },
  {
    "label": "GetCurrentChangelist()",
    "kind": "Method",
    "detail": "Function (FSourceControlChangelistPtr)",
    "insertText": "GetCurrentChangelist()"
  },
  {
    "label": "GetCurrentUncontrolledChangelist()",
    "kind": "Method",
    "detail": "Function (TOptional<FUncontrolledChangelist>)",
    "insertText": "GetCurrentUncontrolledChangelist()"
  },
  {
    "label": "GetChangelistStateFromSelection()",
    "kind": "Method",
    "detail": "Function (FSourceControlChangelistStatePtr)",
    "insertText": "GetChangelistStateFromSelection()"
  },
  {
    "label": "GetChangelistFromSelection()",
    "kind": "Method",
    "detail": "Function (FSourceControlChangelistPtr)",
    "insertText": "GetChangelistFromSelection()"
  },
  {
    "label": "GetSelectedFiles()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetSelectedFiles()"
  },
  {
    "label": "HasFilesSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasFilesSelected()"
  },
  {
    "label": "GetSelectedShelvedFiles()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetSelectedShelvedFiles()"
  },
  {
    "label": "HasShelvedFilesSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasShelvedFilesSelected()"
  },
  {
    "label": "GetSelectedFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSelectedFiles(TArray<FString>& OutControlledFiles, TArray<FString>& OutUncontrolledFiles)"
  },
  {
    "label": "GetSelectedFileStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSelectedFileStates(TArray<FSourceControlStateRef>& OutControlledFileStates, TArray<FSourceControlStateRef>& OutUncontrolledFileStates)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnNewChangelist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewChangelist()"
  },
  {
    "label": "OnDeleteChangelist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteChangelist()"
  },
  {
    "label": "CanDeleteChangelist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteChangelist()"
  },
  {
    "label": "CanDeleteChangelist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteChangelist(FText* OutFailureMessage)"
  },
  {
    "label": "OnEditChangelist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditChangelist()"
  },
  {
    "label": "OnSubmitChangelist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSubmitChangelist()"
  },
  {
    "label": "CanSubmitChangelist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSubmitChangelist()"
  },
  {
    "label": "CanSubmitChangelist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSubmitChangelist(FText* OutFailureMessage)"
  },
  {
    "label": "OnValidateChangelist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnValidateChangelist()"
  },
  {
    "label": "CanValidateChangelist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanValidateChangelist()"
  },
  {
    "label": "OnNewUncontrolledChangelist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewUncontrolledChangelist()"
  },
  {
    "label": "OnEditUncontrolledChangelist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditUncontrolledChangelist()"
  },
  {
    "label": "CanEditUncontrolledChangelist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditUncontrolledChangelist()"
  },
  {
    "label": "OnDeleteUncontrolledChangelist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteUncontrolledChangelist()"
  },
  {
    "label": "CanDeleteUncontrolledChangelist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteUncontrolledChangelist()"
  },
  {
    "label": "OnRevertUnchanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRevertUnchanged()"
  },
  {
    "label": "CanRevertUnchanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRevertUnchanged()"
  },
  {
    "label": "OnRevert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRevert()"
  },
  {
    "label": "CanRevert()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRevert()"
  },
  {
    "label": "OnShelve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShelve()"
  },
  {
    "label": "OnUnshelve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnshelve()"
  },
  {
    "label": "OnDeleteShelvedFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteShelvedFiles()"
  },
  {
    "label": "TryMoveFiles()",
    "kind": "Method",
    "detail": "Function (TValueOrError<void,void>)",
    "insertText": "TryMoveFiles()"
  },
  {
    "label": "OnShowHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowHistory()"
  },
  {
    "label": "OnDiffAgainstDepot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDiffAgainstDepot()"
  },
  {
    "label": "CanDiffAgainstDepot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDiffAgainstDepot()"
  },
  {
    "label": "OnDiffAgainstWorkspace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDiffAgainstWorkspace()"
  },
  {
    "label": "CanDiffAgainstWorkspace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDiffAgainstWorkspace()"
  },
  {
    "label": "OnUncontrolledChangelistStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUncontrolledChangelistStateChanged()"
  },
  {
    "label": "OnSourceControlProviderChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSourceControlProviderChanged(ISourceControlProvider& OldProvider, ISourceControlProvider& NewProvider)"
  },
  {
    "label": "OnSourceControlStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSourceControlStateChanged()"
  },
  {
    "label": "OnItemDoubleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemDoubleClicked(TSharedPtr<IChangelistTreeItem> Item)"
  },
  {
    "label": "OnChangelistSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangelistSelectionChanged(TSharedPtr<IChangelistTreeItem> SelectedItem, ESelectInfo::Type SelectionType)"
  },
  {
    "label": "OnChangelistsStatusUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangelistsStatusUpdated(const TSharedRef<ISourceControlOperation>& InOperation, ECommandResult::Type InType)"
  },
  {
    "label": "OnStartSourceControlOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStartSourceControlOperation(TSharedRef<ISourceControlOperation> Operation, const FText& Message)"
  },
  {
    "label": "OnEndSourceControlOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSourceControlOperation(const TSharedRef<ISourceControlOperation>& Operation, ECommandResult::Type InType)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Execute(const FText& Message, const TSharedRef<ISourceControlOperation>& InOperation, TSharedPtr<ISourceControlChangelist> InChangelist, const TArray<FString>& InFiles, EConcurrency::Type InConcurrency, const FSourceControlOperationComplete& InOperationCompleteDelegate)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Execute(const FText& Message, const TSharedRef<ISourceControlOperation>& InOperation, TSharedPtr<ISourceControlChangelist> InChangelist, const EConcurrency::Type InConcurrency, const FSourceControlOperationComplete& InOperationCompleteDelegate)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Execute(const FText& Message, const TSharedRef<ISourceControlOperation>& InOperation, const EConcurrency::Type InConcurrency, const FSourceControlOperationComplete& InOperationCompleteDelegate)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Execute(const FText& Message, const TSharedRef<ISourceControlOperation>& InOperation, const TArray<FString>& InFiles, EConcurrency::Type InConcurrency, const FSourceControlOperationComplete& InOperationCompleteDelegate)"
  },
  {
    "label": "ExecuteUncontrolledChangelistOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteUncontrolledChangelistOperation(const FText& Message, const TFunction<void()>& UncontrolledChangelistTask)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "EditChangelistDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditChangelistDescription(const FText& InNewChangelistDescription, const FSourceControlChangelistStatePtr& InChangelistState)"
  },
  {
    "label": "OnPackageSaved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPackageSaved(const FString& PackageFilename, UPackage* Package, FObjectPostSaveContext ObjectSaveContext)"
  },
  {
    "label": "GetActiveFileListView()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<SExpandableChangelistArea> UnsavedAssetsExpandableArea ; TSharedPtr<STreeView<FChangelistTreeItemPtr>> UnsavedAssetsTreeView ; TArray<TSharedPtr<IChangelistTreeItem>> UnsavedAssetsTreeNode ; TSharedPtr<SExpandableChangelistArea> ChangelistExpandableArea ; TSharedPtr<STreeView<FChangelistTreeItemPtr>> ChangelistTreeView ; TArray<TSharedPtr<IChangelistTreeItem>> ChangelistTreeNodes ; TSharedPtr<SExpandableChangelistArea> UncontrolledChangelistExpandableArea ; TSharedPtr<STreeView<FChangelistTreeItemPtr>> UncontrolledChangelistTreeView ; TArray<TSharedPtr<IChangelistTreeItem>> UncontrolledChangelistTreeNodes ; TSharedPtr<SListView<FChangelistTreeItemPtr>> FileListView ; TArray<TSharedPtr<IChangelistTreeItem>> FileListNodes ; TArray<FName> FileViewHiddenColumnsList ; TSharedPtr<SListView<FChangelistTreeItemPtr>> UnsavedAssetsFileListView ; TSharedPtr<SWidgetSwitcher> FileListViewSwitcher ; SListView<FChangelistTreeItemPtr>&)",
    "insertText": "GetActiveFileListView()"
  },
  {
    "label": "StartRefreshStatus()",
    "kind": "Method",
    "detail": "Function (TMap<TSharedPtr<void>,TSharedPtr<IChangelistTreeItem>> SourceControlItemCache ; TMap<TSharedPtr<void>,TSharedPtr<IChangelistTreeItem>> UncontrolledChangelistItemCache ; TMap<FString,TSharedPtr<IFileViewTreeItem>> OfflineFileItemCache ; TUniquePtr<FAsyncTask<FAsyncTimestampUpdater>> TimestampUpdateTask ; TSet<FString> OutdatedTimestampFiles ; FDelegateHandle SourceControlStateChangedDelegateHandle ; int64 UpdateRequestNum = 0 ; bool bInitialRefreshDone = false ; bool bShouldRefresh = false ; bool bSourceControlAvailable = false ; bool bUpdateMonitoredFileStatusList = false ; TArray<FString> FilesToSelect ; FName PrimarySortedColumn ; FName SecondarySortedColumn ; EColumnSortMode::Type PrimarySortMode = EColumnSortMode::Ascending ; EColumnSortMode::Type SecondarySortMode = EColumnSortMode::None ; TSharedPtr<TTextFilter<const IChangelistTreeItem&>> ChangelistTextFilter ; TSharedPtr<TTextFilter<const IChangelistTreeItem&>> UncontrolledChangelistTextFilter ; TSharedPtr<TTextFilter<const IChangelistTreeItem&>> FileTextFilter ; TSharedPtr<SSearchBox> FileSearchBox ; void)",
    "insertText": "StartRefreshStatus()"
  },
  {
    "label": "TickRefreshStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickRefreshStatus(double InDeltaTime)"
  },
  {
    "label": "EndRefreshStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndRefreshStatus()"
  }
]