[
  {
    "label": "ST_DLL_LINK",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ST_DLL_LINK"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Core / ExportBegin . h \" # include \" Core / Types . h \" # include \" PortableCrt . h \" # include<cstdio> # include<cassert> # if)",
    "insertText": "defined(__GNUC__) || defined(__psp2__) #include <string.h> #else #include <cstring> #endif #ifdef ST_SETS_PACKING_INTERNALLY #pragma pack(push, 4)"
  },
  {
    "label": "CBasicFixedString()",
    "kind": "Method",
    "detail": "Function (template<size_t uiDataSize = 2 5 6> class ST_DLL_LINK CBasicFixedString { public :)",
    "insertText": "CBasicFixedString(void)"
  },
  {
    "label": "CBasicFixedString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CBasicFixedString(const CBasicFixedString& cCopy)"
  },
  {
    "label": "CBasicFixedString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CBasicFixedString(const char* pchData)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear(void)"
  },
  {
    "label": "empty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "empty(void)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "resize(size_t uiSize)"
  },
  {
    "label": "c_str()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "c_str(void)"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "size(void)"
  },
  {
    "label": "length()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "length(void)"
  },
  {
    "label": "substr()",
    "kind": "Method",
    "detail": "Function (CBasicFixedString)",
    "insertText": "substr(size_t uiStart, size_t uiCount = npos)"
  },
  {
    "label": "find()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "find(char chFind, size_t uiStart = 0)"
  },
  {
    "label": "erase_all()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "erase_all(const char chErase)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const char* pchData)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const CBasicFixedString& strRight)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const char& chRight)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (char&)",
    "insertText": "operator(size_t uiIndex)"
  },
  {
    "label": "Format()",
    "kind": "Method",
    "detail": "Function (CBasicFixedString ST_CALL_CONV)",
    "insertText": "Format(const char* pchFormat, ...)"
  },
  {
    "label": "Extension()",
    "kind": "Method",
    "detail": "Function (CBasicFixedString)",
    "insertText": "Extension(char chExtensionChar = '.')"
  },
  {
    "label": "NoExtension()",
    "kind": "Method",
    "detail": "Function (CBasicFixedString)",
    "insertText": "NoExtension(char chExtensionChar = '.')"
  },
  {
    "label": "Path()",
    "kind": "Method",
    "detail": "Function (CBasicFixedString)",
    "insertText": "Path(CBasicFixedString strDelimiters = \"/\\\\\")"
  },
  {
    "label": "NoPath()",
    "kind": "Method",
    "detail": "Function (CBasicFixedString)",
    "insertText": "NoPath(CBasicFixedString strDelimiters = \"/\\\\\")"
  },
  {
    "label": "MakePlatformCompliantPath()",
    "kind": "Method",
    "detail": "Function (CBasicFixedString)",
    "insertText": "MakePlatformCompliantPath(void)"
  },
  {
    "label": "st_uint32()",
    "kind": "Method",
    "detail": "Function (enum { npos =)",
    "insertText": "st_uint32(-1)"
  }
]