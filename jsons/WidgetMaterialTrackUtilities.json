[
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidget"
  },
  {
    "label": "FWidgetMaterialHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetMaterialHandle"
  },
  {
    "label": "FWidgetMaterialPropertyPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetMaterialPropertyPath"
  },
  {
    "label": "FWidgetMaterialHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class UMaterialInterface ; class UWidget ; class FWidgetMaterialHandle { public :)",
    "insertText": "FWidgetMaterialHandle() : TypeName(NAME_None) , Data(nullptr)"
  },
  {
    "label": "FWidgetMaterialHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FWidgetMaterialHandle(FName InTypeName, void* InData) : TypeName(InTypeName) , Data(InData)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FWidgetMaterialHandle& In)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FWidgetMaterialHandle& A, const FWidgetMaterialHandle& B)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "SetMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterial(UMaterialInterface* InMaterial, UWidget* OwnerWidget)"
  },
  {
    "label": "FWidgetMaterialPropertyPath()",
    "kind": "Method",
    "detail": "Function (private : FName ; void* Data ; } ; struct FWidgetMaterialPropertyPath {)",
    "insertText": "FWidgetMaterialPropertyPath(const TArray<FProperty*>& InPropertyPath, const FString& InDisplayName) : PropertyPath(InPropertyPath) , DisplayName(InDisplayName)"
  },
  {
    "label": "GetMaterialHandle()",
    "kind": "Method",
    "detail": "Function (} TArray<FProperty*> PropertyPath ; FString DisplayName ; } ; namespace WidgetMaterialTrackUtilities { FWidgetMaterialHandle)",
    "insertText": "GetMaterialHandle(UWidget* Widget, TArrayView<const FName> BrushPropertyNamePath)"
  },
  {
    "label": "GetMaterialBrushPropertyPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMaterialBrushPropertyPaths(UWidget* Widget, TArray<FWidgetMaterialPropertyPath>& MaterialBrushPropertyPaths)"
  },
  {
    "label": "GetTrackNameFromPropertyNamePath()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetTrackNameFromPropertyNamePath(TArrayView<const FName> PropertyNamePath)"
  }
]