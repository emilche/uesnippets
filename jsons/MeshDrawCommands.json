[
  {
    "label": "FMeshBatchAndRelevance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshBatchAndRelevance"
  },
  {
    "label": "FStaticMeshBatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshBatch"
  },
  {
    "label": "FParallelCommandListSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParallelCommandListSet"
  },
  {
    "label": "FInstanceCullingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceCullingManager"
  },
  {
    "label": "FPrimitiveIdVertexBufferPoolEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveIdVertexBufferPoolEntry"
  },
  {
    "label": "FPrimitiveIdVertexBufferPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveIdVertexBufferPool"
  },
  {
    "label": "FMeshDrawCommandPassSetupTaskContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawCommandPassSetupTaskContext"
  },
  {
    "label": "FPrimitiveBounds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveBounds"
  },
  {
    "label": "FParallelMeshDrawCommandPass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParallelMeshDrawCommandPass"
  },
  {
    "label": "FPrimitiveIdVertexBufferPool()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MeshPassProcessor . h \" # include \" TranslucentPassResource . h \" # include \" InstanceCulling / InstanceCullingContext . h \" # include \" InstanceCulling / InstanceCullingManager . h \" # include \" ScenePrivateBase . h \" struct FMeshBatchAndRelevance ; class FStaticMeshBatch ; class FParallelCommandListSet ; class FInstanceCullingManager ; struct FPrimitiveIdVertexBufferPoolEntry { int32 BufferSize = 0 ; uint32 LastDiscardId = 0 ; FBufferRHIRef BufferRHI ; } ; class FPrimitiveIdVertexBufferPool : public FRenderResource { public :)",
    "insertText": "FPrimitiveIdVertexBufferPool()"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (FPrimitiveIdVertexBufferPoolEntry)",
    "insertText": "Allocate(FRHICommandList& RHICmdList, int32 BufferSize)"
  },
  {
    "label": "ReturnToFreeList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReturnToFreeList(FPrimitiveIdVertexBufferPoolEntry Entry)"
  },
  {
    "label": "DiscardAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardAll()"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "FMeshDrawCommandPassSetupTaskContext()",
    "kind": "Method",
    "detail": "Function (private : uint32 DiscardId ; TArray<FPrimitiveIdVertexBufferPoolEntry> Entries ; FCriticalSection AllocationCS ; } ; TGlobalResource<FPrimitiveIdVertexBufferPool> GPrimitiveIdVertexBufferPool ; class FMeshDrawCommandPassSetupTaskContext { public :)",
    "insertText": "FMeshDrawCommandPassSetupTaskContext()"
  },
  {
    "label": "FParallelMeshDrawCommandPass()",
    "kind": "Method",
    "detail": "Function (const FViewInfo* View ; const FScene* Scene ; EShadingPath ShadingPath ; EShaderPlatform ShaderPlatform ; EMeshPass::Type PassType ; bool bUseGPUScene ; bool bDynamicInstancing ; bool bReverseCulling ; bool bRenderSceneTwoSided ; FExclusiveDepthStencil::Type BasePassDepthStencilAccess ; FExclusiveDepthStencil::Type DefaultBasePassDepthStencilAccess ; FMeshPassProcessor* MeshPassProcessor ; FMeshPassProcessor* MobileBasePassCSMMeshPassProcessor ; const TArray<FMeshBatchAndRelevance,SceneRenderingAllocator>* DynamicMeshElements ; const TArray<FMeshPassMask,SceneRenderingAllocator>* DynamicMeshElementsPassRelevance ; int32 InstanceFactor ; int32 NumDynamicMeshElements ; int32 NumDynamicMeshCommandBuildRequestElements ; FMeshCommandOneFrameArray MeshDrawCommands ; FMeshCommandOneFrameArray MobileBasePassCSMMeshDrawCommands ; TArray<const FStaticMeshBatch*,SceneRenderingAllocator> DynamicMeshCommandBuildRequests ; TArray<EMeshDrawCommandCullingPayloadFlags,SceneRenderingAllocator> DynamicMeshCommandBuildFlags ; TArray<const FStaticMeshBatch*,SceneRenderingAllocator> MobileBasePassCSMDynamicMeshCommandBuildRequests ; FDynamicMeshDrawCommandStorage MeshDrawCommandStorage ; FGraphicsMinimalPipelineStateSet MinimalPipelineStatePassSet ; bool NeedsShaderInitialisation ; void* PrimitiveIdBufferData ; int32 PrimitiveIdBufferDataSize ; FMeshCommandOneFrameArray TempVisibleMeshDrawCommands ; ETranslucencyPass::Type TranslucencyPass ; ETranslucentSortPolicy::Type TranslucentSortPolicy ; FVector TranslucentSortAxis ; FVector ViewOrigin ; FMatrix ViewMatrix ; const TScenePrimitiveArray<struct FPrimitiveBounds>* PrimitiveBounds ; int32 VisibleMeshDrawCommandsNum ; int32 NewPassVisibleMeshDrawCommandsNum ; int32 MaxInstances ; FInstanceCullingContext InstanceCullingContext ; } ; class FParallelMeshDrawCommandPass { public :)",
    "insertText": "FParallelMeshDrawCommandPass() : bHasInstanceCullingDrawParameters(false) , MaxNumDraws(0)"
  },
  {
    "label": "FParallelMeshDrawCommandPass()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FParallelMeshDrawCommandPass()"
  },
  {
    "label": "DispatchPassSetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchPassSetup(FScene* Scene, const FViewInfo& View, FInstanceCullingContext &&InstanceCullingContext, EMeshPass::Type PassType, FExclusiveDepthStencil::Type BasePassDepthStencilAccess, FMeshPassProcessor* MeshPassProcessor, const TArray<FMeshBatchAndRelevance, SceneRenderingAllocator>& DynamicMeshElements, const TArray<FMeshPassMask, SceneRenderingAllocator>* DynamicMeshElementsPassRelevance, int32 NumDynamicMeshElements, TArray<const FStaticMeshBatch*, SceneRenderingAllocator>& InOutDynamicMeshCommandBuildRequests, TArray<EMeshDrawCommandCullingPayloadFlags, SceneRenderingAllocator> InOutDynamicMeshCommandBuildFlags, int32 NumDynamicMeshCommandBuildRequestElements, FMeshCommandOneFrameArray& InOutMeshDrawCommands, FMeshPassProcessor* MobileBasePassCSMMeshPassProcessor = nullptr, FMeshCommandOneFrameArray* InOutMobileBasePassCSMMeshDrawCommands = nullptr)"
  },
  {
    "label": "BuildRenderingCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildRenderingCommands(FRDGBuilder& GraphBuilder, const FGPUScene& GPUScene, FInstanceCullingDrawParams& OutInstanceCullingDrawParams)"
  },
  {
    "label": "WaitForSetupTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForSetupTask()"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(FRHICommandList& RHICmdList, const FInstanceCullingDrawParams* InstanceCullingDrawParams = nullptr)"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dispatch(FRDGDispatchPassBuilder& DispatchPassBuilder, const FInstanceCullingDrawParams* InstanceCullingDrawParams = nullptr, float ViewportScale = 1.0f)"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dispatch(FRDGDispatchPassBuilder& DispatchPassBuilder, const FInstanceCullingDrawParams* InstanceCullingDrawParams, TFunctionRef<void(FRHICommandList&)> SetupCommandListFunction)"
  },
  {
    "label": "WaitForTasksAndEmpty()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "WaitForTasksAndEmpty()"
  },
  {
    "label": "SetDumpInstancingStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDumpInstancingStats(const FString& InPassName)"
  },
  {
    "label": "HasAnyDraw()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAnyDraw()"
  },
  {
    "label": "FreeCreateSnapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeCreateSnapshot()"
  },
  {
    "label": "IsOnDemandShaderCreationEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOnDemandShaderCreationEnabled()"
  },
  {
    "label": "GetInstanceCullingContext()",
    "kind": "Method",
    "detail": "Function (FInstanceCullingContext*)",
    "insertText": "GetInstanceCullingContext()"
  },
  {
    "label": "WaitForMeshPassSetupTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForMeshPassSetupTask()"
  },
  {
    "label": "SortAndMergeDynamicPassMeshDrawCommands()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "SortAndMergeDynamicPassMeshDrawCommands(const FSceneView& SceneView, FRHICommandList& RHICmdList, FMeshCommandOneFrameArray& VisibleMeshDrawCommands, FDynamicMeshDrawCommandStorage& MeshDrawCommandStorage, FRHIBuffer*& OutPrimitiveIdVertexBuffer, uint32 InstanceFactor, const FGPUScenePrimitiveCollector* DynamicPrimitiveCollector)"
  }
]