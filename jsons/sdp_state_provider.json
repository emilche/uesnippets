[
  {
    "label": "SdpStateProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SdpStateProvider"
  },
  {
    "label": "SdpStateProvider()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_SDP_STATE_PROVIDER_H_ # define PC_SDP_STATE_PROVIDER_H_ # include<string> # include \" api / jsep . h \" # include \" api / peer_connection_interface . h \" namespace webrtc { class SdpStateProvider { public : ~)",
    "insertText": "SdpStateProvider()"
  },
  {
    "label": "signaling_state()",
    "kind": "Method",
    "detail": "Function (} PeerConnectionInterface::SignalingState)",
    "insertText": "signaling_state()"
  },
  {
    "label": "local_description()",
    "kind": "Method",
    "detail": "Function (const SessionDescriptionInterface*)",
    "insertText": "local_description()"
  },
  {
    "label": "remote_description()",
    "kind": "Method",
    "detail": "Function (const SessionDescriptionInterface*)",
    "insertText": "remote_description()"
  },
  {
    "label": "current_local_description()",
    "kind": "Method",
    "detail": "Function (const SessionDescriptionInterface*)",
    "insertText": "current_local_description()"
  },
  {
    "label": "current_remote_description()",
    "kind": "Method",
    "detail": "Function (const SessionDescriptionInterface*)",
    "insertText": "current_remote_description()"
  },
  {
    "label": "pending_local_description()",
    "kind": "Method",
    "detail": "Function (const SessionDescriptionInterface*)",
    "insertText": "pending_local_description()"
  },
  {
    "label": "pending_remote_description()",
    "kind": "Method",
    "detail": "Function (const SessionDescriptionInterface*)",
    "insertText": "pending_remote_description()"
  },
  {
    "label": "NeedsIceRestart()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsIceRestart(const std::string& content_name)"
  },
  {
    "label": "IceRestartPending()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IceRestartPending(const std::string& content_name)"
  },
  {
    "label": "GetDtlsRole()",
    "kind": "Method",
    "detail": "Function (absl::optional<rtc::SSLRole>)",
    "insertText": "GetDtlsRole(const std::string& mid)"
  }
]