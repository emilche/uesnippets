[
  {
    "label": "IBuildInstallerThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildInstallerThread"
  },
  {
    "label": "IBuildInstallerSharedContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildInstallerSharedContext"
  },
  {
    "label": "IBuildInstallerThread()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / Function . h \" # include \" Templates / SharedPointer . h \" namespace BuildPatchServices { class IBuildInstallerThread { protected : ~)",
    "insertText": "IBuildInstallerThread()"
  },
  {
    "label": "RunTask()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "RunTask(TUniqueFunction<void()> Task)"
  },
  {
    "label": "IBuildInstallerSharedContext()",
    "kind": "Method",
    "detail": "Function (} ; } class IBuildInstallerSharedContext { public : ~)",
    "insertText": "IBuildInstallerSharedContext()"
  },
  {
    "label": "CreateThread()",
    "kind": "Method",
    "detail": "Function (} BuildPatchServices::IBuildInstallerThread*)",
    "insertText": "CreateThread()"
  },
  {
    "label": "ReleaseThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseThread(BuildPatchServices::IBuildInstallerThread* Thread)"
  },
  {
    "label": "PreallocateThreads()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreallocateThreads(uint32 NumThreads)"
  },
  {
    "label": "NumThreadsPerInstaller()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "NumThreadsPerInstaller(bool bUseChunkDBs)"
  }
]