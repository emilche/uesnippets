[
  {
    "label": "FMovieSceneEntitySystemRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneEntitySystemRunner"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "IMovieSceneSequenceTickManagerClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieSceneSequenceTickManagerClient"
  },
  {
    "label": "UMovieSceneSequenceTickManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequenceTickManager"
  },
  {
    "label": "FTickableClientData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTickableClientData"
  },
  {
    "label": "FLinkerGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinkerGroup"
  },
  {
    "label": "FPendingOperation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingOperation"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" MovieSceneSequenceTickInterval . h \" # include \" MovieSceneLatentActionManager . h \" # include \" MovieSceneSequenceTickManager . generated . h \" class FMovieSceneEntitySystemRunner ; class UMovieSceneEntitySystemLinker ; class IMovieSceneSequenceTickManagerClient ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() MOVIESCENE_API UMovieSceneSequenceTickManager(const FObjectInitializer& Init)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSequenceTickManager*)",
    "insertText": "Get(UObject* PlaybackContext)"
  },
  {
    "label": "RegisterTickClient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTickClient(const FMovieSceneSequenceTickInterval& TickInterval, TScriptInterface<IMovieSceneSequenceTickManagerClient> InTickInterface)"
  },
  {
    "label": "UnregisterTickClient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTickClient(TScriptInterface<IMovieSceneSequenceTickManagerClient> InTickInterface)"
  },
  {
    "label": "GetLinker()",
    "kind": "Method",
    "detail": "Function (UMovieSceneEntitySystemLinker*)",
    "insertText": "GetLinker(const FMovieSceneSequenceTickInterval& TickInterval)"
  },
  {
    "label": "GetRunner()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneEntitySystemRunner>)",
    "insertText": "GetRunner(const FMovieSceneSequenceTickInterval& TickInterval)"
  },
  {
    "label": "AddLatentAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLatentAction(FMovieSceneSequenceLatentActionDelegate Delegate)"
  },
  {
    "label": "RunLatentActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunLatentActions()"
  },
  {
    "label": "ClearLatentActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLatentActions(UObject* Object)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "TickSequenceActors()",
    "kind": "Method",
    "detail": "Function (private : struct FTickableClientData { IMovieSceneSequenceTickManagerClient* Interface ; TWeakObjectPtr<> WeakObject ; int32 LinkerIndex ; bool bTickWhenPaused ; } ; struct FLinkerGroup { TObjectPtr<UMovieSceneEntitySystemLinker> Linker ; TSharedPtr<FMovieSceneEntitySystemRunner> Runner ; int32 RoundedTickIntervalMs = 0 ; float FrameBudgetMs = 0 . f ; float LastUnpausedTimeSeconds = - 1 ; float LastTimeSeconds = - 1 ; uint16 BudgetedStarvationCount = 0 ; uint16 NumClients = 0 ; } ; struct FPendingOperation { enum class EType { Register,Unregister } ; TScriptInterface<IMovieSceneSequenceTickManagerClient> Interface ; TWeakObjectPtr<UObject> WeakObject ; FMovieSceneSequenceTickInterval TickInterval ; EType Type ; } ; private : void)",
    "insertText": "TickSequenceActors(float DeltaSeconds)"
  },
  {
    "label": "FlushRunners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushRunners()"
  },
  {
    "label": "ProcessPendingOperations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPendingOperations(TArrayView<const FPendingOperation> InOperations)"
  },
  {
    "label": "UnregisterTickClientImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTickClientImpl(IMovieSceneSequenceTickManagerClient* InClientInterface)"
  }
]