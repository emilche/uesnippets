[
  {
    "label": "IEventLoop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEventLoop"
  },
  {
    "label": "FIORequestHandleTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIORequestHandleTraits"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IIOManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IIOManager"
  },
  {
    "label": "FParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParams"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EventLoop / EventLoopHandle . h \" # include \" Misc / EnumClassFlags . h \" # include \" Misc / Timespan . h \" namespace UE::EventLoop { class IEventLoop ; struct FIORequestHandleTraits { auto Name =)",
    "insertText": "TEXT(\"EventLoopIORequestHandle\")"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} ; using FIORequestHandle = TResourceHandle<FIORequestHandleTraits> ; enum class EIOFlags : uint32 { None = 0,Read = 1<<0,Write = 1<<1,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EIOFlags)"
  },
  {
    "label": "IIOManager()",
    "kind": "Method",
    "detail": "Function (class IIOManager : public FNoncopyable { public : struct FParams { } ; ~)",
    "insertText": "IIOManager()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "Notify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Notify()"
  },
  {
    "label": "Poll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Poll(FTimespan WaitTime)"
  }
]