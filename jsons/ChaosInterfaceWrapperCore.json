[
  {
    "label": "UPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterial"
  },
  {
    "label": "FCapsule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCapsule"
  },
  {
    "label": "FImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImplicitObject"
  },
  {
    "label": "FDummyPhysType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDummyPhysType"
  },
  {
    "label": "FDummyPhysActor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDummyPhysActor"
  },
  {
    "label": "FDummyCallback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDummyCallback"
  },
  {
    "label": "so",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "so"
  },
  {
    "label": "FPhysicsRaycastInputAdapater",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPhysicsRaycastInputAdapater"
  },
  {
    "label": "so",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "so"
  },
  {
    "label": "FPhysicsSweepInputAdapater",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPhysicsSweepInputAdapater"
  },
  {
    "label": "so",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "so"
  },
  {
    "label": "FPhysicsOverlapInputAdapater",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPhysicsOverlapInputAdapater"
  },
  {
    "label": "FQueryDebugParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQueryDebugParams"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "must"
  },
  {
    "label": "GetQueryFilterData()",
    "kind": "Method",
    "detail": "Function (FCollisionFilterData)",
    "insertText": "GetQueryFilterData(const Chaos::FPerShapeData& Shape)"
  },
  {
    "label": "GetSimulationFilterData()",
    "kind": "Method",
    "detail": "Function (FCollisionFilterData)",
    "insertText": "GetSimulationFilterData(const Chaos::FPerShapeData& Shape)"
  },
  {
    "label": "GetImplicitType()",
    "kind": "Method",
    "detail": "Function (ECollisionShapeType)",
    "insertText": "GetImplicitType(const Chaos::FImplicitObject& InGeometry)"
  },
  {
    "label": "GetImplicitType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetImplicitType(InGeometry)"
  },
  {
    "label": "GetRadius()",
    "kind": "Method",
    "detail": "Function (Chaos::FReal)",
    "insertText": "GetRadius(const Chaos::FCapsule& InCapsule)"
  },
  {
    "label": "GetHalfHeight()",
    "kind": "Method",
    "detail": "Function (Chaos::FReal)",
    "insertText": "GetHalfHeight(const Chaos::FCapsule& InCapsule)"
  },
  {
    "label": "GetInvalidPhysicsFaceIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetInvalidPhysicsFaceIndex()"
  }
]