[
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "ANIMGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMGRAPH_API"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" AnimNodes / AnimNode_PoseDriver . h \" # include \" AnimGraphNode_PoseHandler . h \" # include \" EdGraph / EdGraphNodeUtils . h \" # include \" AnimGraphNode_PoseDriver . generated . h \" class FCompilerResultsLog ;)",
    "insertText": "UCLASS(BlueprintType)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Settings)"
  },
  {
    "label": "GetPreviewPoseDriverNode()",
    "kind": "Method",
    "detail": "Function (int32 SelectedTargetIndex ; FSimpleMulticastDelegate SelectedTargetChangeDelegate ; public : FAnimNode_PoseDriver*)",
    "insertText": "GetPreviewPoseDriverNode()"
  },
  {
    "label": "AutoSetTargetScales()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoSetTargetScales(float& OutMaxDistance)"
  },
  {
    "label": "AddNewTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewTarget()"
  },
  {
    "label": "ReserveTargetTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReserveTargetTransforms()"
  },
  {
    "label": "GetColorFromWeight()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColorFromWeight(float InWeight)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetMenuCategory()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMenuCategory()"
  },
  {
    "label": "GetNodeBodyTintColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeBodyTintColor()"
  },
  {
    "label": "ValidateAnimNodeDuringCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateAnimNodeDuringCompilation(USkeleton* ForSkeleton, FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "GetEditorMode()",
    "kind": "Method",
    "detail": "Function (FEditorModeID)",
    "insertText": "GetEditorMode()"
  },
  {
    "label": "SupportsAssetClass()",
    "kind": "Method",
    "detail": "Function (EAnimAssetHandlerType)",
    "insertText": "SupportsAssetClass(const UClass* AssetClass)"
  },
  {
    "label": "CopyNodeDataToPreviewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyNodeDataToPreviewNode(FAnimNode_Base* InPreviewNode)"
  },
  {
    "label": "IsPoseAssetRequired()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "IsPoseAssetRequired()"
  }
]