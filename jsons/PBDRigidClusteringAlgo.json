[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UpdateClusterMassProperties()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "UpdateClusterMassProperties(\n\t\tFPBDRigidClusteredParticleHandle* Parent,\n\t\tconst TSet<FPBDRigidParticleHandle*>& Children)"
  },
  {
    "label": "AdjustClusterInertia()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "AdjustClusterInertia(FPBDRigidClusteredParticleHandle* Cluster, EInertiaOperations InertiaOperations)"
  },
  {
    "label": "MoveClusterToMassOffset()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "MoveClusterToMassOffset(FPBDRigidClusteredParticleHandle* Cluster, EMassOffsetType MassOffsetTypes)"
  },
  {
    "label": "UpdateKinematicProperties()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "UpdateKinematicProperties(\n\t\tFPBDRigidParticleHandle* Parent,\n\t\tconst FRigidClustering::FClusterMap&,\n\t\tFRigidClustering::FRigidEvolution&)"
  },
  {
    "label": "UpdateGeometry()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "UpdateGeometry(\n\t\tChaos::FPBDRigidClusteredParticleHandle* Parent,\n\t\tconst TSet<FPBDRigidParticleHandle*>& Children,\n\t\tconst FRigidClustering::FClusterMap& ChildrenMap,\n\t\tconst Chaos::FImplicitObjectPtr& ProxyGeometry,\n\t\tconst FClusterCreationParameters& Parameters)"
  },
  {
    "label": "BuildScaledGeometry()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "BuildScaledGeometry(Chaos::FPBDRigidClusteredParticleHandle* ParticleHandle, const Chaos::FImplicitObjectPtr& ProxyGeometry, const FVector& WorldScale)"
  },
  {
    "label": "UpdateCollisionFlags()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "UpdateCollisionFlags(Chaos::FPBDRigidClusteredParticleHandle* ParticleHandle, const bool bUseParticleImplicit)"
  },
  {
    "label": "UpdateClusterFilterDataFromChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateClusterFilterDataFromChildren(FPBDRigidClusteredParticleHandle* ClusterParent, const TArray<FPBDRigidParticleHandle*>& Children)"
  }
]