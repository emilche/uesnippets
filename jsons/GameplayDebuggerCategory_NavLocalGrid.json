[
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FGameplayDebuggerCategory_NavLocalGrid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerCategory_NavLocalGrid"
  },
  {
    "label": "FRepData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepData"
  },
  {
    "label": "FGridData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGridData"
  },
  {
    "label": "FRepAgentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepAgentData"
  },
  {
    "label": "FGameplayDebuggerCategory_NavLocalGrid()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if WITH_GAMEPLAY_DEBUGGER_MENU # include \" GameplayDebuggerCategory . h \" class APlayerController ; class FGameplayDebuggerCategory_NavLocalGrid : public FGameplayDebuggerCategory { public :)",
    "insertText": "FGameplayDebuggerCategory_NavLocalGrid()"
  },
  {
    "label": "CollectData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectData(APlayerController* OwnerPC, AActor* DebugActor)"
  },
  {
    "label": "DrawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawData(APlayerController* OwnerPC, FGameplayDebuggerCanvasContext& CanvasContext)"
  },
  {
    "label": "CreateDebugSceneProxy()",
    "kind": "Method",
    "detail": "Function (FDebugRenderSceneProxy*)",
    "insertText": "CreateDebugSceneProxy(const UPrimitiveComponent* InComponent, FDebugDrawDelegateHelper*& OutDelegateHelper)"
  },
  {
    "label": "OnDataPackReplicated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDataPackReplicated(int32 DataPackId)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FGameplayDebuggerCategory>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "FRepData()",
    "kind": "Method",
    "detail": "Function (struct FRepData { struct FGridData { FBox Bounds ; float CellSize ; int32 NumRows ; int32 NumCols ; TArray<uint8> Cells ; } ; TArray<FGridData> Grids ; int32 NumSources ; int32 VersionNum ;)",
    "insertText": "FRepData() : NumSources(0), VersionNum(0)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  }
]