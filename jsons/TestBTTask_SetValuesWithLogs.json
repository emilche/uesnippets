[
  {
    "label": "FBTSetValueTaskMemory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBTSetValueTaskMemory"
  },
  {
    "label": "UTestBTTask_SetValuesWithLogs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTestBTTask_SetValuesWithLogs"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / ObjectMacros . h \" # include \" BehaviorTree / BTTaskNode . h \" # include \" TestBTTask_SetValuesWithLogs . generated . h \" struct FBTSetValueTaskMemory { uint64 EndFrameIdx ; uint64 EndFrameIdx2 ; } ;)",
    "insertText": "UCLASS(meta=(HiddenNode))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UTestBTTask_SetValuesWithLogs(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "TickTask()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "TickTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds)"
  },
  {
    "label": "LogExecution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogExecution(UBehaviorTreeComponent& OwnerComp, int32 LogNumber)"
  },
  {
    "label": "ExecuteTask()",
    "kind": "Method",
    "detail": "Function (EBTNodeResult::Type)",
    "insertText": "ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "AbortTask()",
    "kind": "Method",
    "detail": "Function (EBTNodeResult::Type)",
    "insertText": "AbortTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "GetInstanceMemorySize()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetInstanceMemorySize()"
  },
  {
    "label": "InitializeMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeMemory(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTMemoryInit::Type InitType)"
  },
  {
    "label": "CleanupMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupMemory(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTMemoryClear::Type CleanupType)"
  }
]