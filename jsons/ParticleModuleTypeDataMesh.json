[
  {
    "label": "UParticleEmitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleEmitter"
  },
  {
    "label": "UParticleSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystemComponent"
  },
  {
    "label": "FParticleEmitterInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEmitterInstance"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "EMeshScreenAlignment",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMeshScreenAlignment"
  },
  {
    "label": "EMeshCameraFacingUpAxis",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMeshCameraFacingUpAxis"
  },
  {
    "label": "EMeshCameraFacingOptions",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMeshCameraFacingOptions"
  },
  {
    "label": "UParticleModuleTypeDataMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleModuleTypeDataMesh"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Math / RandomStream . h \" # include \" Distributions / DistributionVector . h \" # include \" Particles / Orientation / ParticleModuleOrientationAxisLock . h \" # include \" Particles / TypeData / ParticleModuleTypeDataBase . h \" # include \" ParticleModuleTypeDataMesh . generated . h \" class UParticleEmitter ; class UParticleSystemComponent ; struct FParticleEmitterInstance ; class UStaticMesh ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (PSMA_MeshFaceCameraWithRoll)",
    "insertText": "UMETA(DisplayName=\"Face Camera With Roll\"), PSMA_MeshFaceCameraWithSpin UMETA(DisplayName=\"Face Camera With Spin\"), PSMA_MeshFaceCameraWithLockedAxis UMETA(DisplayName=\"Face Camera With Locked-Axis\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (CameraFacing_NoneUP)",
    "insertText": "UMETA(DisplayName=\"None\"), CameraFacing_ZUp UMETA(DisplayName=\"Z Up\"), CameraFacing_NegativeZUp UMETA(DisplayName=\"-Z Up\"), CameraFacing_YUp UMETA(DisplayName=\"Y Up\"), CameraFacing_NegativeYUp UMETA(DisplayName=\"-Y Up\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (XAxisFacing_NoUp)",
    "insertText": "UMETA(DisplayName=\"X Axis Facing : No Up\"), XAxisFacing_ZUp UMETA(DisplayName=\"X Axis Facing : Z Up\"), XAxisFacing_NegativeZUp UMETA(DisplayName=\"X Axis Facing : -Z Up\"), XAxisFacing_YUp UMETA(DisplayName=\"X Axis Facing : Y Up\"), XAxisFacing_NegativeYUp UMETA(DisplayName=\"X Axis Facing : -Y Up\"), LockedAxis_ZAxisFacing UMETA(DisplayName=\"Locked Axis : Z Axis Facing\"), LockedAxis_NegativeZAxisFacing UMETA(DisplayName=\"Locked Axis : -Z Axis Facing\"), LockedAxis_YAxisFacing UMETA(DisplayName=\"Locked Axis : Y Axis Facing\"), LockedAxis_NegativeYAxisFacing UMETA(DisplayName=\"Locked Axis : -Y Axis Facing\"), VelocityAligned_ZAxisFacing UMETA(DisplayName=\"Velocity Aligned : Z Axis Facing\"), VelocityAligned_NegativeZAxisFacing UMETA(DisplayName=\"Velocity Aligned : -Z Axis Facing\"), VelocityAligned_YAxisFacing UMETA(DisplayName=\"Velocity Aligned : Y Axis Facing\"), VelocityAligned_NegativeYAxisFacing UMETA(DisplayName=\"Velocity Aligned : -Y Axis Facing\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(editinlinenew, hidecategories=Object, MinimalAPI, meta=(DisplayName = \"Mesh Data\"))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=Mesh)"
  },
  {
    "label": "GetCurrentDetailMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCurrentDetailMode()"
  },
  {
    "label": "GetMeshParticleMotionBlurMinDetailMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMeshParticleMotionBlurMinDetailMode()"
  },
  {
    "label": "OnMeshChanged()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "OnMeshChanged()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "IsPostLoadThreadSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPostLoadThreadSafe()"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditChange(FProperty* PropertyThatWillChange)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "CreateDistribution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDistribution()"
  },
  {
    "label": "SetToSensibleDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToSensibleDefaults(UParticleEmitter* Owner)"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (FParticleEmitterInstance*)",
    "insertText": "CreateInstance(UParticleEmitter* InEmitterParent, UParticleSystemComponent* InComponent)"
  },
  {
    "label": "GetVertexFactoryType()",
    "kind": "Method",
    "detail": "Function (const FVertexFactoryType*)",
    "insertText": "GetVertexFactoryType()"
  },
  {
    "label": "CollectPSOPrecacheData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectPSOPrecacheData(const UParticleEmitter* Emitter, FPSOPrecacheParams& OutParams)"
  },
  {
    "label": "SupportsSpecificScreenAlignmentFlags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsSpecificScreenAlignmentFlags()"
  }
]