[
  {
    "label": "FAnimModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimModel"
  },
  {
    "label": "SAnimTimeline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimTimeline"
  },
  {
    "label": "FTrackMarkerBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackMarkerBar"
  },
  {
    "label": "SAnimEditorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimEditorBase"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "UEditorAnimBaseObj",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorAnimBaseObj"
  },
  {
    "label": "UAnimSingleNodeInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSingleNodeInstance"
  },
  {
    "label": "SAnimationScrubPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimationScrubPanel"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" UObject / GCObject . h \" # include \" IPersonaPreviewScene . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" PersonaDelegates . h \" # include \" SAnimationScrubPanel . h \" # include \" EditorObjectsTracker . h \" class FAnimModel ; class SAnimTimeline ; class FTrackMarkerBar { public : float Time ; FLinearColor DrawColour ; } ; class SAnimEditorBase : public SCompoundWidget,public FGCObject { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimEditorBase) : _DisplayAnimTimeline(true) , _DisplayAnimScrubBar(false)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnObjectsSelected, OnObjectsSelected) SLATE_ARGUMENT( bool, DisplayAnimTimeline ) SLATE_ARGUMENT( bool, DisplayAnimScrubBar ) SLATE_ARGUMENT( bool, DisplayAnimScrubBarEditing ) SLATE_ARGUMENT( TSharedPtr<FAnimModel>, AnimModel ) SLATE_END_ARGS() void Construct(const FArguments& InArgs, const TSharedPtr<class IPersonaPreviewScene>& InPreviewScene)"
  },
  {
    "label": "GetViewMinInput()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetViewMinInput()"
  },
  {
    "label": "SetInputViewRange()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetInputViewRange(float InViewMinInput, float InViewMaxInput)"
  },
  {
    "label": "ScrollInputViewRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollInputViewRange(float ScreenDelta, FVector2D ScreenViewSize)"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(const TArray<UObject*>& SelectedItems)"
  },
  {
    "label": "GetScrubValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScrubValue()"
  },
  {
    "label": "ShowInDetailsView()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "ShowInDetailsView(UClass* EdClass)"
  },
  {
    "label": "ClearDetailsView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDetailsView()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "CreateDocumentAnchor()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SWidget>)",
    "insertText": "CreateDocumentAnchor()"
  },
  {
    "label": "GetPreviewScene()",
    "kind": "Method",
    "detail": "Function (protected : TWeakPtr<IPersonaPreviewScene> PreviewScenePtr ; TSharedRef<IPersonaPreviewScene>)",
    "insertText": "GetPreviewScene()"
  },
  {
    "label": "ConstructAnimScrubPanel()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SWidget>)",
    "insertText": "ConstructAnimScrubPanel(bool bDisplayAnimScrubBarEditing)"
  },
  {
    "label": "InitDetailsViewEditorObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitDetailsViewEditorObject(class UEditorAnimBaseObj* EdObj)"
  },
  {
    "label": "GetSequenceLength()",
    "kind": "Method",
    "detail": "Function (} ; float)",
    "insertText": "GetSequenceLength()"
  },
  {
    "label": "GetEditorObject()",
    "kind": "Method",
    "detail": "Function (UAnimationAsset*)",
    "insertText": "GetEditorObject()"
  },
  {
    "label": "GetEditorObjectName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetEditorObjectName()"
  },
  {
    "label": "GetPreviewInstance()",
    "kind": "Method",
    "detail": "Function (float ViewMinInput ; float ViewMaxInput ; class UAnimSingleNodeInstance*)",
    "insertText": "GetPreviewInstance()"
  },
  {
    "label": "GetPercentageInternal()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SVerticalBox> EditorPanels ; TSharedPtr<SVerticalBox> NonScrollEditorPanels ; TSharedPtr<class SAnimationScrubPanel> AnimScrubPanel ; FEditorObjectTracker EditorObjectTracker ; FOnObjectsSelected OnObjectsSelected ; TSharedPtr<SAnimTimeline> TimelineWidget ; private : float)",
    "insertText": "GetPercentageInternal()"
  }
]