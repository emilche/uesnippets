[
  {
    "label": "IncomingVideoStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IncomingVideoStream"
  },
  {
    "label": "IncomingVideoStream()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_RENDER_INCOMING_VIDEO_STREAM_H_ # define VIDEO_RENDER_INCOMING_VIDEO_STREAM_H_ # include<stdint . h> # include \" api / sequence_checker . h \" # include \" api / task_queue / task_queue_factory . h \" # include \" api / video / video_frame . h \" # include \" api / video / video_sink_interface . h \" # include \" rtc_base / race_checker . h \" # include \" rtc_base / task_queue . h \" # include \" rtc_base / thread_annotations . h \" # include \" video / render / video_render_frames . h \" namespace webrtc { class IncomingVideoStream : public rtc::VideoSinkInterface<VideoFrame> { public :)",
    "insertText": "IncomingVideoStream(TaskQueueFactory* task_queue_factory, int32_t delay_ms, rtc::VideoSinkInterface<VideoFrame>* callback)"
  },
  {
    "label": "IncomingVideoStream()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IncomingVideoStream()"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnFrame(const VideoFrame& video_frame)"
  },
  {
    "label": "Dequeue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dequeue()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (SequenceChecker main_thread_checker_ ; rtc::RaceChecker decoder_race_checker_ ; VideoRenderFrames render_buffers_)",
    "insertText": "RTC_GUARDED_BY(&incoming_render_queue_)"
  }
]