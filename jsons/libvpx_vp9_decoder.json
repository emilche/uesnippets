[
  {
    "label": "LibvpxVp9Decoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LibvpxVp9Decoder"
  },
  {
    "label": "LibvpxVp9Decoder()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_CODECS_VP9_LIBVPX_VP9_DECODER_H_ # define MODULES_VIDEO_CODING_CODECS_VP9_LIBVPX_VP9_DECODER_H_ # ifdef RTC_ENABLE_VP9 # include \" api / video_codecs / video_decoder . h \" # include \" modules / video_coding / codecs / vp9 / include / vp9 . h \" # include \" modules / video_coding / codecs / vp9 / vp9_frame_buffer_pool . h \" # include \" vpx / vp8cx . h \" namespace webrtc { class LibvpxVp9Decoder : public VP9Decoder { public :)",
    "insertText": "LibvpxVp9Decoder()"
  },
  {
    "label": "Configure()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Configure(const Settings& settings)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Decode(const EncodedImage& input_image, bool missing_frames, int64_t)"
  },
  {
    "label": "RegisterDecodeCompleteCallback()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RegisterDecodeCompleteCallback(DecodedImageCallback* callback)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Release()"
  },
  {
    "label": "GetDecoderInfo()",
    "kind": "Method",
    "detail": "Function (DecoderInfo)",
    "insertText": "GetDecoderInfo()"
  },
  {
    "label": "ImplementationName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "ImplementationName()"
  },
  {
    "label": "ReturnFrame()",
    "kind": "Method",
    "detail": "Function (private : int)",
    "insertText": "ReturnFrame(const vpx_image_t* img, uint32_t timestamp, int qp, const webrtc::ColorSpace* explicit_color_space)"
  }
]