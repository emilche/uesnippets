[
  {
    "label": "FIOSWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIOSWindow"
  },
  {
    "label": "FIOSApplication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIOSApplication"
  },
  {
    "label": "IInputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInputDevice"
  },
  {
    "label": "FIOSInputInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIOSInputInterface"
  },
  {
    "label": "CreateIOSApplication()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / Accessibility / GenericAccessibleInterfaces . h \" # include \" GenericPlatform / GenericApplication . h \" class FIOSWindow ; class FIOSApplication : public GenericApplication { public : FIOSApplication*)",
    "insertText": "CreateIOSApplication()"
  },
  {
    "label": "FIOSApplication()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "FIOSApplication()"
  },
  {
    "label": "SetMessageHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMessageHandler(const TSharedRef< FGenericApplicationMessageHandler >& InMessageHandler)"
  },
  {
    "label": "SetAccessibleMessageHandler()",
    "kind": "Method",
    "detail": "Function (# if WITH_ACCESSIBILITY void)",
    "insertText": "SetAccessibleMessageHandler(const TSharedRef<FGenericAccessibleMessageHandler>& InAccessibleMessageHandler)"
  },
  {
    "label": "PollGameDeviceState()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PollGameDeviceState(const float TimeDelta)"
  },
  {
    "label": "GetWorkArea()",
    "kind": "Method",
    "detail": "Function (FPlatformRect)",
    "insertText": "GetWorkArea(const FPlatformRect& CurrentWindow)"
  },
  {
    "label": "MakeWindow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FGenericWindow>)",
    "insertText": "MakeWindow()"
  },
  {
    "label": "AddExternalInputDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExternalInputDevice(TSharedPtr<class IInputDevice> InputDevice)"
  },
  {
    "label": "OrientationChanged()",
    "kind": "Method",
    "detail": "Function (# if ! PLATFORM_TVOS void)",
    "insertText": "OrientationChanged(UIInterfaceOrientation orientation)"
  },
  {
    "label": "GetInputInterface()",
    "kind": "Method",
    "detail": "Function (UIInterfaceOrientation CachedOrientation ; # endif IInputInterface*)",
    "insertText": "GetInputInterface()"
  },
  {
    "label": "IsGamepadAttached()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsGamepadAttached()"
  },
  {
    "label": "FindWindowByAppDelegateView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FIOSWindow>)",
    "insertText": "FindWindowByAppDelegateView()"
  },
  {
    "label": "InitializeWindow()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "InitializeWindow(const TSharedRef< FGenericWindow >& Window, const TSharedRef< FGenericWindowDefinition >& InDefinition, const TSharedPtr< FGenericWindow >& InParent, const bool bShowImmediately)"
  },
  {
    "label": "OnAccessibleEventRaised()",
    "kind": "Method",
    "detail": "Function (# if WITH_ACCESSIBILITY void)",
    "insertText": "OnAccessibleEventRaised(const FAccessibleEventArgs& Args)"
  },
  {
    "label": "CacheDisplayMetrics()",
    "kind": "Method",
    "detail": "Function (# endif private : TSharedPtr<class FIOSInputInterface> InputInterface ; TArray<TSharedPtr<class IInputDevice>> ExternalInputDevices ; bool bHasLoadedInputPlugins ; TArray<TSharedRef<FIOSWindow>> Windows ; # if WITH_ACCESSIBILITY NSTimer* AccessibilityAnnouncementDelayTimer ; # endif FCriticalSection CriticalSection ; bool bOrientationChanged ; void)",
    "insertText": "CacheDisplayMetrics()"
  }
]