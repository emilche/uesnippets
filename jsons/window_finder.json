[
  {
    "label": "XAtomCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "XAtomCache"
  },
  {
    "label": "WindowFinder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WindowFinder"
  },
  {
    "label": "Options",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Options"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_WINDOW_FINDER_H_ # define MODULES_DESKTOP_CAPTURE_WINDOW_FINDER_H_ # include<memory> # include \" api / scoped_refptr . h \" # include \" modules / desktop_capture / desktop_capture_types . h \" # include \" modules / desktop_capture / desktop_geometry . h \" # if)",
    "insertText": "defined(WEBRTC_MAC) && !defined(WEBRTC_IOS)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(WEBRTC_USE_X11)"
  },
  {
    "label": "WindowFinder()",
    "kind": "Method",
    "detail": "Function (# endif class WindowFinder { public :)",
    "insertText": "WindowFinder()"
  },
  {
    "label": "GetWindowUnderPoint()",
    "kind": "Method",
    "detail": "Function (WindowId)",
    "insertText": "GetWindowUnderPoint(DesktopVector point)"
  },
  {
    "label": "Options()",
    "kind": "Method",
    "detail": "Function (struct Options final {)",
    "insertText": "Options()"
  },
  {
    "label": "Options()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Options(const Options& other)"
  },
  {
    "label": "Options()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Options(Options&& other)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# endif } ; std::unique_ptr<WindowFinder>)",
    "insertText": "Create(const Options& options)"
  }
]