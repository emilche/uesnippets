[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UEditorEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorEngine"
  },
  {
    "label": "FLayerViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayerViewModel"
  },
  {
    "label": "FLayerViewModel()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / WeakObjectPtr . h \" # include \" EditorUndoClient . h \" # include \" Layers / LayersSubsystem . h \" # include \" Layers / Layer . h \" class AActor ; class UEditorEngine ; class FLayerViewModel : public TSharedFromThis<FLayerViewModel>,public FEditorUndoClient { public : ~)",
    "insertText": "FLayerViewModel()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FLayerViewModel>)",
    "insertText": "Create(const TWeakObjectPtr< ULayer >& InLayer, const TWeakObjectPtr< UEditorEngine >& InEditor)"
  },
  {
    "label": "NewLayer()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FLayerViewModel>)",
    "insertText": "NewLayer(new FLayerViewModel( InLayer, InEditor ))"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (NewLayer ->)",
    "insertText": "Initialize()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetName()"
  },
  {
    "label": "GetNameAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNameAsText()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "ToggleVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleVisibility()"
  },
  {
    "label": "CanRenameTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameTo(const FName& NewLayerName, FString& OutMessage)"
  },
  {
    "label": "RenameTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameTo(const FName& NewLayerName)"
  },
  {
    "label": "CanAssignActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAssignActors(const TArray< TWeakObjectPtr<AActor> > Actors, FText& OutMessage)"
  },
  {
    "label": "CanAssignActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAssignActor(const TWeakObjectPtr<AActor> Actor, FText& OutMessage)"
  },
  {
    "label": "AppendActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendActors(TArray< TWeakObjectPtr< AActor > >& InActors)"
  },
  {
    "label": "AppendActorsOfSpecificType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendActorsOfSpecificType(TArray< TWeakObjectPtr< AActor > >& InActors, const TWeakObjectPtr< UClass >& Class)"
  },
  {
    "label": "AddActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActor(const TWeakObjectPtr<AActor>& Actor)"
  },
  {
    "label": "AddActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActors(const TArray< TWeakObjectPtr<AActor> >& Actors)"
  },
  {
    "label": "RemoveActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActors(const TArray< TWeakObjectPtr<AActor> >& Actors)"
  },
  {
    "label": "RemoveActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActor(const TWeakObjectPtr<AActor>& Actor)"
  },
  {
    "label": "SelectActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectActors(bool bSelect, bool bNotify, bool bSelectEvenIfHidden, const TSharedPtr< IFilter< const TWeakObjectPtr< AActor >& > >& Filter)"
  },
  {
    "label": "GetActorStatTotal()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActorStatTotal(int32 StatsIndex)"
  },
  {
    "label": "SelectActorsOfSpecificType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectActorsOfSpecificType(const TWeakObjectPtr< UClass >& Class)"
  },
  {
    "label": "GetActorStats()",
    "kind": "Method",
    "detail": "Function (const TArray<FLayerActorStats>&)",
    "insertText": "GetActorStats()"
  },
  {
    "label": "SetDataSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataSource(const TWeakObjectPtr< ULayer >& InLayer)"
  },
  {
    "label": "GetDataSource()",
    "kind": "Method",
    "detail": "Function (const TWeakObjectPtr<ULayer>)",
    "insertText": "GetDataSource()"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(FLayerViewModel, FChangedEvent ) FChangedEvent& OnChanged()"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (RenamedRequestEvent .)",
    "insertText": "Broadcast()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_EVENT_OneParam(FLayerViewModel, FVisibilityToggledEvent, const TSharedPtr<FLayerViewModel>& ) FVisibilityToggledEvent& OnVisibilityToggled()"
  },
  {
    "label": "OnLayersChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLayersChanged(const ELayersAction::Type Action, const TWeakObjectPtr< ULayer >& ChangedLayer, const FName& ChangedProperty)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "RefreshActorStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshActorStats()"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bSuccess)"
  }
]