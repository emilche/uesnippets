[
  {
    "label": "_Arg1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Arg1"
  },
  {
    "label": "_Arg2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Arg2"
  },
  {
    "label": "_Result",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Result"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___FUNCTIONAL_POINTER_TO_BINARY_FUNCTION_H # define _LIBCPP___FUNCTIONAL_POINTER_TO_BINARY_FUNCTION_H # include<__config> # include<__functional / binary_function . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD #if _LIBCPP_STD_VER <= 14 || defined(_LIBCPP_ENABLE_CXX17_REMOVED_BINDERS)"
  },
  {
    "label": "_Result()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_Result(*__f_)(_Arg1, _Arg2)"
  },
  {
    "label": "pointer_to_binary_function()",
    "kind": "Method",
    "detail": "Function (public : _LIBCPP_INLINE_VISIBILITY)",
    "insertText": "pointer_to_binary_function(_Result (*__f)(_Arg1, _Arg2)) : __f_(__f)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_INLINE_VISIBILITY _Result)",
    "insertText": "operator()(_Arg1 __x, _Arg2 __y)"
  },
  {
    "label": "ptr_fun()",
    "kind": "Method",
    "detail": "Function (} } ; template<class _Arg1,class _Arg2,class _Result> _LIBCPP_DEPRECATED_IN_CXX11 _LIBCPP_INLINE_VISIBILITY pointer_to_binary_function<_Arg1,_Arg2,_Result>)",
    "insertText": "ptr_fun(_Result (*__f)(_Arg1,_Arg2))"
  }
]