[
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "SDisappearingBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDisappearingBar"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Animation / CurveSequence . h \" # include \" Layout / Visibility . h \" # include \" Math / Color . h \" # include \" Misc / Attribute . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FDragDropEvent ; class SWidget ; struct FGeometry ; class SDisappearingBar : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SDisappearingBar)"
  },
  {
    "label": "SLATE_DEFAULT_SLOT()",
    "kind": "Method",
    "detail": "Function (_Visibility = EVisibility::HitTestInvisible ; })",
    "insertText": "SLATE_DEFAULT_SLOT(FArguments, Content) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragEnter(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "GetFadeColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (private : FLinearColor)",
    "insertText": "GetFadeColorAndOpacity()"
  }
]