[
  {
    "label": "FMemAllocNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemAllocNode"
  },
  {
    "label": "ECallstackType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECallstackType"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / SharedPointer . h \" # include \" TraceServices / Model / Memory . h \" # include \" InsightsCore / Table / ViewModels / TableTreeNode . h \" # include \" Insights / MemoryProfiler / ViewModels / MemAllocTable . h \" # include \" Insights / MemoryProfiler / ViewModels / MemoryAlloc . h \" # include \" Insights / MemoryProfiler / ViewModels / MemorySharedState . h \" namespace UE::Insights::MemoryProfiler { class FMemAllocNode ; typedef TSharedPtr<class FMemAllocNode> FMemAllocNodePtr ; typedef TSharedRef<class FMemAllocNode> FMemAllocNodeRef ; typedef TSharedRef<const class FMemAllocNode> FMemAllocNodeRefConst ; typedef TWeakPtr<class FMemAllocNode> FMemAllocNodeWeak ; class FMemAllocNode : public FTableTreeNode {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FMemAllocNode, FTableTreeNode)"
  },
  {
    "label": "FMemAllocNode()",
    "kind": "Method",
    "detail": "Function (AllocCallstack,FreeCallstack } ;)",
    "insertText": "FMemAllocNode(const FName InName, TWeakPtr<FMemAllocTable> InParentTable, int32 InRowIndex) : FTableTreeNode(InName, InParentTable, InRowIndex) , MemAllocTable(InParentTable.Pin().Get())"
  },
  {
    "label": "FMemAllocNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMemAllocNode(const FName InGroupName, TWeakPtr<FMemAllocTable> InParentTable) : FTableTreeNode(InGroupName, InParentTable) , MemAllocTable(InParentTable.Pin().Get())"
  },
  {
    "label": "GetMemTableChecked()",
    "kind": "Method",
    "detail": "Function (} FMemAllocTable&)",
    "insertText": "GetMemTableChecked()"
  },
  {
    "label": "GetMemAlloc()",
    "kind": "Method",
    "detail": "Function (} const FMemoryAlloc*)",
    "insertText": "GetMemAlloc()"
  },
  {
    "label": "GetMemAllocChecked()",
    "kind": "Method",
    "detail": "Function (} const FMemoryAlloc&)",
    "insertText": "GetMemAllocChecked()"
  },
  {
    "label": "GetAllocCallstackId()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetAllocCallstackId()"
  },
  {
    "label": "GetFreeCallstackId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetFreeCallstackId()"
  },
  {
    "label": "GetFullCallstack()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFullCallstack(ECallstackType InCallstackType)"
  },
  {
    "label": "GetFullCallstackSourceFiles()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFullCallstackSourceFiles(ECallstackType InCallstackType)"
  },
  {
    "label": "GetTopFunction()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTopFunction(ECallstackType InCallstackType)"
  },
  {
    "label": "GetTopFunctionEx()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTopFunctionEx(ECallstackType InCallstackType)"
  },
  {
    "label": "GetTopSourceFile()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTopSourceFile(ECallstackType InCallstackType)"
  },
  {
    "label": "GetTopSourceFileEx()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTopSourceFileEx(ECallstackType InCallstackType)"
  },
  {
    "label": "GetFullCallstackOrSourceFiles()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "GetFullCallstackOrSourceFiles(ECallstackType InCallstackType, uint8 Flags)"
  },
  {
    "label": "GetTopFunctionOrSourceFile()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTopFunctionOrSourceFile(ECallstackType InCallstackType, uint8 Flags)"
  }
]