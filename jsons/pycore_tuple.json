[
  {
    "label": "_Py_tuple_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_Py_tuple_state"
  },
  {
    "label": "_PyTuple_InitGlobalObjects()",
    "kind": "Method",
    "detail": "Function (# ifndef Py_INTERNAL_TUPLE_H # define Py_INTERNAL_TUPLE_H # ifdef __cplusplus \" C \" { # endif # ifndef Py_BUILD_CORE # error \" this header requires Py_BUILD_CORE define \" # endif # include \" tupleobject . h \" PyStatus)",
    "insertText": "_PyTuple_InitGlobalObjects(PyInterpreterState *)"
  },
  {
    "label": "_PyTuple_InitTypes()",
    "kind": "Method",
    "detail": "Function (PyStatus)",
    "insertText": "_PyTuple_InitTypes(PyInterpreterState *)"
  },
  {
    "label": "_PyTuple_Fini()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_PyTuple_Fini(PyInterpreterState *)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(PyTuple_MAXSAVESIZE) && PyTuple_MAXSAVESIZE <= 0 # define PyTuple_NFREELISTS 0 # undef PyTuple_MAXSAVESIZE # undef PyTuple_MAXFREELIST #elif !defined(WITH_FREELISTS)"
  },
  {
    "label": "_PyTuple_ITEMS()",
    "kind": "Method",
    "detail": "Function (# if PyTuple_NFREELISTS> 0 PyTupleObject* free_list [ PyTuple_NFREELISTS ] ; int numfree [ PyTuple_NFREELISTS ] ; # else char _unused ; # endif } ; # define)",
    "insertText": "_PyTuple_ITEMS(op) (_PyTuple_CAST(op)->ob_item) extern PyObject *_PyTuple_FromArray(PyObject *const *, Py_ssize_t)"
  },
  {
    "label": "_PyTuple_FromArraySteal()",
    "kind": "Method",
    "detail": "Function (PyObject*)",
    "insertText": "_PyTuple_FromArraySteal(PyObject *const *, Py_ssize_t)"
  }
]