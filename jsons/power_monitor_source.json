[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "PowerEvent",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PowerEvent"
  },
  {
    "label": "PowerMonitorTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PowerMonitorTest"
  },
  {
    "label": "PowerMonitorSource()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "PowerMonitorSource()"
  },
  {
    "label": "GetCurrentThermalState()",
    "kind": "Method",
    "detail": "Function (PowerThermalObserver::DeviceThermalState)",
    "insertText": "GetCurrentThermalState()"
  },
  {
    "label": "GetInitialSpeedLimit()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetInitialSpeedLimit()"
  },
  {
    "label": "SetCurrentThermalState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentThermalState(\n      PowerThermalObserver::DeviceThermalState state)"
  },
  {
    "label": "GetRemainingBatteryCapacity()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetRemainingBatteryCapacity()"
  },
  {
    "label": "ProcessPowerEventHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPowerEventHelper(PowerEvent)"
  },
  {
    "label": "ProcessThermalEventHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessThermalEventHelper(\n      PowerThermalObserver::DeviceThermalState)"
  },
  {
    "label": "ProcessPowerEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPowerEvent(PowerEvent event_id)"
  },
  {
    "label": "ProcessThermalEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessThermalEvent(\n      PowerThermalObserver::DeviceThermalState new_thermal_state)"
  },
  {
    "label": "ProcessSpeedLimitEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessSpeedLimitEvent(int speed_limit)"
  }
]