[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "PowerEvent",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PowerEvent"
  },
  {
    "label": "PowerMonitorTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PowerMonitorTest"
  },
  {
    "label": "PowerMonitorSource()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_POWER_MONITOR_POWER_MONITOR_SOURCE_H_ # define BASE_POWER_MONITOR_POWER_MONITOR_SOURCE_H_ # include \" base / base_export . h \" # include \" base / power_monitor / power_observer . h \" # include \" base / synchronization / lock . h \" # include \" build / build_config . h \" namespace base { class BASE_EXPORT PowerMonitorSource { public :)",
    "insertText": "PowerMonitorSource()"
  },
  {
    "label": "PowerMonitorSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PowerMonitorSource(const PowerMonitorSource&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (PowerMonitorSource&)",
    "insertText": "operator(const PowerMonitorSource&)"
  },
  {
    "label": "GetCurrentThermalState()",
    "kind": "Method",
    "detail": "Function (enum PowerEvent { POWER_STATE_EVENT,SUSPEND_EVENT,RESUME_EVENT } ; PowerThermalObserver::DeviceThermalState)",
    "insertText": "GetCurrentThermalState()"
  },
  {
    "label": "GetInitialSpeedLimit()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetInitialSpeedLimit()"
  },
  {
    "label": "SetCurrentThermalState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentThermalState(PowerThermalObserver::DeviceThermalState state)"
  },
  {
    "label": "IsOnBatteryPower()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOnBatteryPower()"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_ANDROID) virtual int GetRemainingBatteryCapacity()"
  },
  {
    "label": "DeviceThermalStateToString()",
    "kind": "Method",
    "detail": "Function (# endif const char*)",
    "insertText": "DeviceThermalStateToString(PowerThermalObserver::DeviceThermalState state)"
  },
  {
    "label": "ProcessPowerEventHelper()",
    "kind": "Method",
    "detail": "Function (protected : class PowerMonitorTest ; void)",
    "insertText": "ProcessPowerEventHelper(PowerEvent)"
  },
  {
    "label": "ProcessThermalEventHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessThermalEventHelper(PowerThermalObserver::DeviceThermalState)"
  },
  {
    "label": "ProcessPowerEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPowerEvent(PowerEvent event_id)"
  },
  {
    "label": "ProcessThermalEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessThermalEvent(PowerThermalObserver::DeviceThermalState new_thermal_state)"
  },
  {
    "label": "ProcessSpeedLimitEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessSpeedLimitEvent(int speed_limit)"
  }
]