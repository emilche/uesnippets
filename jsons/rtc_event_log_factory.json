[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RtcEventLogFactory()",
    "kind": "Method",
    "detail": "Function (# ifndef API_RTC_EVENT_LOG_RTC_EVENT_LOG_FACTORY_H_ # define API_RTC_EVENT_LOG_RTC_EVENT_LOG_FACTORY_H_ # include<memory> # include \" api / rtc_event_log / rtc_event_log . h \" # include \" api / rtc_event_log / rtc_event_log_factory_interface . h \" # include \" api / task_queue / task_queue_factory . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { class RTC_EXPORT RtcEventLogFactory : public RtcEventLogFactoryInterface { public :)",
    "insertText": "RtcEventLogFactory(TaskQueueFactory* task_queue_factory)"
  },
  {
    "label": "RtcEventLogFactory()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtcEventLogFactory()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} std::unique_ptr<RtcEventLog>)",
    "insertText": "Create(RtcEventLog::EncodingType encoding_type)"
  },
  {
    "label": "CreateRtcEventLog()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventLog>)",
    "insertText": "CreateRtcEventLog(RtcEventLog::EncodingType encoding_type)"
  }
]