[
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FGuidStructCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGuidStructCustomization"
  },
  {
    "label": "customization",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "customization"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "WriteGuidToProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteGuidToProperty(TSharedPtr<IPropertyHandle> GuidPropertyHandle, const FGuid& Guid)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeShareable(new FGuidStructCustomization)"
  },
  {
    "label": "SetGuidValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGuidValue( const FGuid& Guid )"
  },
  {
    "label": "HandleGuidActionClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleGuidActionClicked( EPropertyEditorGuidActions::Type Action )"
  },
  {
    "label": "HandleTextBoxTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTextBoxTextChanged( const FText& NewText )"
  },
  {
    "label": "HandleTextBoxTextCommited()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTextBoxTextCommited( const FText& NewText, ETextCommit::Type CommitInfo )"
  }
]