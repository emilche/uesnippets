[
  {
    "label": "FAssetContextMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetContextMenu"
  },
  {
    "label": "FAssetTextFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetTextFilter"
  },
  {
    "label": "FAssetThumbnail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetThumbnail"
  },
  {
    "label": "FAssetViewItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetViewItem"
  },
  {
    "label": "FAssetViewItemCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetViewItemCollection"
  },
  {
    "label": "FContentBrowserItemDataTemporaryContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBrowserItemDataTemporaryContext"
  },
  {
    "label": "FContentBrowserItemDataUpdate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBrowserItemDataUpdate"
  },
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "FFilter_ShowRedirectors",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilter_ShowRedirectors"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FPathPermissionList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPathPermissionList"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FWeakWidgetPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWeakWidgetPath"
  },
  {
    "label": "FWidgetPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetPath"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SAssetColumnView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetColumnView"
  },
  {
    "label": "SAssetListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetListView"
  },
  {
    "label": "SAssetTileView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetTileView"
  },
  {
    "label": "SBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBox"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SContentBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SContentBrowser"
  },
  {
    "label": "SFilterList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFilterList"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFactory"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FAssetViewInstanceConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetViewInstanceConfig"
  },
  {
    "label": "FCharacterEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterEvent"
  },
  {
    "label": "FCollectionNameType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollectionNameType"
  },
  {
    "label": "FContentBrowserInstanceConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContentBrowserInstanceConfig"
  },
  {
    "label": "FFiltersAdditionalParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFiltersAdditionalParams"
  },
  {
    "label": "FFocusEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFocusEvent"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FToolMenuContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CONTENTBROWSER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CONTENTBROWSER_API"
  },
  {
    "label": "as",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "as"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FAssetViewFrontendFilterHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetViewFrontendFilterHelper"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FCreateDeferredItemData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateDeferredItemData"
  },
  {
    "label": "FQuickJumpData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuickJumpData"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "SetSourcesData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourcesData(const FSourcesData& InSourcesData)"
  },
  {
    "label": "SetBackendFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBackendFilter(const FARFilter& InBackendFilter, TArray<TSharedRef<const FPathPermissionList>>* InCustomPermissionLists = nullptr)"
  },
  {
    "label": "NewFolderItemRequested()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NewFolderItemRequested(const FContentBrowserItemTemporaryContext& NewItemContext)"
  },
  {
    "label": "NewFileItemRequested()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NewFileItemRequested(const FContentBrowserItemDataTemporaryContext& NewItemContext)"
  },
  {
    "label": "CreateNewAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewAsset(const FString& DefaultAssetName, const FString& PackagePath, UClass* AssetClass, UFactory* Factory)"
  },
  {
    "label": "RenameItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameItem(const FContentBrowserItem& ItemToRename)"
  },
  {
    "label": "SyncToItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncToItems( TArrayView<const FContentBrowserItem> ItemsToSync, const bool bFocusOnSync = true )"
  },
  {
    "label": "SyncToVirtualPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncToVirtualPaths( TArrayView<const FName> VirtualPathsToSync, const bool bFocusOnSync = true )"
  },
  {
    "label": "SyncToLegacy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncToLegacy( TArrayView<const FAssetData> AssetDataList, TArrayView<const FString> FolderList, const bool bFocusOnSync = true )"
  },
  {
    "label": "InitDeferredPendingSyncItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitDeferredPendingSyncItems()"
  },
  {
    "label": "ApplyHistoryData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyHistoryData( const FHistoryData& History )"
  },
  {
    "label": "RequestSlowFullListRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSlowFullListRefresh()"
  },
  {
    "label": "RequestQuickFrontendListRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestQuickFrontendListRefresh()"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings(const FString& IniFilename, const FString& IniSection, const FString& SettingsString)"
  },
  {
    "label": "AdjustActiveSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustActiveSelection(int32 SelectionDelta)"
  },
  {
    "label": "OnOpenAssetsOrFolders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOpenAssetsOrFolders()"
  },
  {
    "label": "OnPreviewAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewAssets()"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection(bool bForceSilent = false)"
  },
  {
    "label": "HandleSettingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSettingChanged(FName PropertyName)"
  },
  {
    "label": "SetUserSearching()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUserSearching(bool bInSearching)"
  },
  {
    "label": "ForceShowPluginFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceShowPluginFolder( bool bEnginePlugin )"
  },
  {
    "label": "OverrideShowEngineContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideShowEngineContent()"
  },
  {
    "label": "OverrideShowDeveloperContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideShowDeveloperContent()"
  },
  {
    "label": "OverrideShowPluginContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideShowPluginContent()"
  },
  {
    "label": "OverrideShowLocalizedContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideShowLocalizedContent()"
  },
  {
    "label": "GetViewButtonContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetViewButtonContent()"
  },
  {
    "label": "SetCurrentViewType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentViewType(EAssetViewType::Type NewType)"
  },
  {
    "label": "SetCurrentThumbnailSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentThumbnailSize(EThumbnailSize NewThumbnailSize)"
  },
  {
    "label": "ThumbnailSizeToDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ThumbnailSizeToDisplayName(EThumbnailSize InSize)"
  },
  {
    "label": "SetFilterBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterBar(TSharedPtr<SFilterList> InFilterBar)"
  },
  {
    "label": "SetShouldFilterItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldFilterItem(FOnShouldFilterItem InCallback)"
  },
  {
    "label": "SyncToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncToSelection( const bool bFocusOnSync = true )"
  },
  {
    "label": "CalculateFillScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateFillScale( const FGeometry& AllottedGeometry )"
  },
  {
    "label": "CalculateThumbnailHintColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateThumbnailHintColorAndOpacity()"
  },
  {
    "label": "ProcessItemsPendingFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessItemsPendingFilter(const double TickStartTime)"
  },
  {
    "label": "CreateTileView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SAssetTileView>)",
    "insertText": "CreateTileView()"
  },
  {
    "label": "CreateListView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SAssetListView>)",
    "insertText": "CreateListView()"
  },
  {
    "label": "CreateColumnView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SAssetColumnView>)",
    "insertText": "CreateColumnView()"
  },
  {
    "label": "CreateCustomView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateCustomView()"
  },
  {
    "label": "RefreshSourceItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSourceItems()"
  },
  {
    "label": "RefreshFilteredItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshFilteredItems()"
  },
  {
    "label": "SetMajorityAssetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMajorityAssetType(FName NewMajorityAssetType)"
  },
  {
    "label": "OnAssetsAddedToCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetsAddedToCollection( const FCollectionNameType& Collection, TConstArrayView<FSoftObjectPath> ObjectPaths )"
  },
  {
    "label": "OnAssetsRemovedFromCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetsRemovedFromCollection( const FCollectionNameType& Collection, TConstArrayView<FSoftObjectPath> ObjectPaths )"
  },
  {
    "label": "OnCollectionRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCollectionRenamed( const FCollectionNameType& OriginalCollection, const FCollectionNameType& NewCollection )"
  },
  {
    "label": "OnCollectionUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCollectionUpdated( const FCollectionNameType& Collection )"
  },
  {
    "label": "OnFrontendFiltersChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrontendFiltersChanged()"
  },
  {
    "label": "SortList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortList(bool bSyncToSelection = true)"
  },
  {
    "label": "RegisterGetViewButtonMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterGetViewButtonMenu()"
  },
  {
    "label": "PopulateViewButtonMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateViewButtonMenu(UToolMenu* Menu)"
  },
  {
    "label": "PopulateFilterAdditionalParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateFilterAdditionalParams(FFiltersAdditionalParams& OutParams)"
  },
  {
    "label": "ToggleShowFolders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowFolders()"
  },
  {
    "label": "ToggleShowEmptyFolders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowEmptyFolders()"
  },
  {
    "label": "ToggleShowLocalizedContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowLocalizedContent()"
  },
  {
    "label": "ToggleRealTimeThumbnails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleRealTimeThumbnails()"
  },
  {
    "label": "ToggleShowPluginContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowPluginContent()"
  },
  {
    "label": "ToggleShowEngineContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowEngineContent()"
  },
  {
    "label": "ToggleShowDevelopersContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowDevelopersContent()"
  },
  {
    "label": "ToggleShowFavorites()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowFavorites()"
  },
  {
    "label": "ToggleDockCollections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleDockCollections()"
  },
  {
    "label": "ToggleIncludeClassNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleIncludeClassNames()"
  },
  {
    "label": "ToggleIncludeAssetPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleIncludeAssetPaths()"
  },
  {
    "label": "ToggleIncludeCollectionNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleIncludeCollectionNames()"
  },
  {
    "label": "ToggleFilteringRecursively()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleFilteringRecursively()"
  },
  {
    "label": "ToggleShowAllFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowAllFolder()"
  },
  {
    "label": "ToggleOrganizeFolders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleOrganizeFolders()"
  },
  {
    "label": "SetCurrentViewTypeFromMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentViewTypeFromMenu(EAssetViewType::Type NewType)"
  },
  {
    "label": "CreateCurrentView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCurrentView()"
  },
  {
    "label": "CreateShadowOverlay()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateShadowOverlay( TSharedRef<STableViewBase> Table )"
  },
  {
    "label": "RefreshList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshList()"
  },
  {
    "label": "SetSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelection(const TSharedPtr<FAssetViewItem>& Item)"
  },
  {
    "label": "SetItemSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemSelection(const TSharedPtr<FAssetViewItem>& Item, bool bSelected, const ESelectInfo::Type SelectInfo = ESelectInfo::Direct)"
  },
  {
    "label": "RequestScrollIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestScrollIntoView(const TSharedPtr<FAssetViewItem>& Item)"
  },
  {
    "label": "MakeListViewWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeListViewWidget(TSharedPtr<FAssetViewItem> AssetItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "MakeTileViewWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeTileViewWidget(TSharedPtr<FAssetViewItem> AssetItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "MakeColumnViewWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeColumnViewWidget(TSharedPtr<FAssetViewItem> AssetItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "AssetItemWidgetDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssetItemWidgetDestroyed(const TSharedPtr<FAssetViewItem>& Item)"
  },
  {
    "label": "UpdateThumbnails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateThumbnails()"
  },
  {
    "label": "AddItemToNewThumbnailRelevancyMap()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FAssetThumbnail>)",
    "insertText": "AddItemToNewThumbnailRelevancyMap(const TSharedPtr<FAssetViewItem>& Item, TMap< TSharedPtr<FAssetViewItem>, TSharedPtr<FAssetThumbnail> >& NewRelevantThumbnails)"
  },
  {
    "label": "AssetSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssetSelectionChanged( TSharedPtr<FAssetViewItem > AssetItem, ESelectInfo::Type SelectInfo )"
  },
  {
    "label": "ItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ItemScrolledIntoView(TSharedPtr<FAssetViewItem> AssetItem, const TSharedPtr<ITableRow>& Widget)"
  },
  {
    "label": "OnGetContextMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnGetContextMenuContent()"
  },
  {
    "label": "OnListMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnListMouseButtonDoubleClick(TSharedPtr<FAssetViewItem> AssetItem)"
  },
  {
    "label": "OnDraggingAssetItem()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDraggingAssetItem(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "AssetVerifyRenameCommit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AssetVerifyRenameCommit(const TSharedPtr<FAssetViewItem>& Item, const FText& NewName, const FSlateRect& MessageAnchor, FText& OutErrorMessage)"
  },
  {
    "label": "AssetRenameBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssetRenameBegin(const TSharedPtr<FAssetViewItem>& Item, const FString& NewName, const FSlateRect& MessageAnchor)"
  },
  {
    "label": "AssetRenameCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssetRenameCommit(const TSharedPtr<FAssetViewItem>& Item, const FString& NewName, const FSlateRect& MessageAnchor, const ETextCommit::Type CommitType)"
  },
  {
    "label": "EndThumbnailEditModeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "EndThumbnailEditModeClicked()"
  },
  {
    "label": "ToggleThumbnailEditMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleThumbnailEditMode()"
  },
  {
    "label": "OnThumbnailSizeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnThumbnailSizeChanged(EThumbnailSize NewThumbnailSize)"
  },
  {
    "label": "UpdateThumbnailSizeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateThumbnailSizeValue()"
  },
  {
    "label": "OnSortColumnHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSortColumnHeader(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type NewSortMode)"
  },
  {
    "label": "BeginCreateDeferredItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCreateDeferredItem()"
  },
  {
    "label": "EndCreateDeferredItem()",
    "kind": "Method",
    "detail": "Function (FContentBrowserItem)",
    "insertText": "EndCreateDeferredItem(const TSharedPtr<FAssetViewItem>& InItem, const FString& InName, const bool bFinalize, FText& OutErrorText)"
  },
  {
    "label": "ResetQuickJump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetQuickJump()"
  },
  {
    "label": "HandleQuickJumpKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleQuickJumpKeyDown(const TCHAR InCharacter, const bool bIsControlDown, const bool bIsAltDown, const bool bTestOnly)"
  },
  {
    "label": "PerformQuickJump()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PerformQuickJump(const bool bWasJumping)"
  },
  {
    "label": "ResetColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetColumns()"
  },
  {
    "label": "ExportColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportColumns()"
  },
  {
    "label": "OnHiddenColumnsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHiddenColumnsChanged()"
  },
  {
    "label": "GetMaxRowSizeForColumn()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetMaxRowSizeForColumn(const FName& ColumnId)"
  },
  {
    "label": "HandleItemDataUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleItemDataUpdated(TArrayView<const FContentBrowserItemDataUpdate> InUpdatedItems)"
  },
  {
    "label": "HandleItemDataDiscoveryComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleItemDataDiscoveryComplete()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "ExecutePaste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecutePaste()"
  },
  {
    "label": "OnCompleteFiltering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCompleteFiltering(double InAmortizeDuration)"
  },
  {
    "label": "OnInterruptFiltering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInterruptFiltering()"
  },
  {
    "label": "OnInteractDuringFiltering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInteractDuringFiltering()"
  }
]