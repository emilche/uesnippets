[
  {
    "label": "VoiceProcessingAudioUnitObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VoiceProcessingAudioUnitObserver"
  },
  {
    "label": "VoiceProcessingAudioUnit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VoiceProcessingAudioUnit"
  },
  {
    "label": "State",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "State"
  },
  {
    "label": "OnDeliverRecordedData()",
    "kind": "Method",
    "detail": "Function (# ifndef SDK_OBJC_NATIVE_SRC_AUDIO_VOICE_PROCESSING_AUDIO_UNIT_H_ # define SDK_OBJC_NATIVE_SRC_AUDIO_VOICE_PROCESSING_AUDIO_UNIT_H_ # include<AudioUnit / AudioUnit . h> namespace webrtc { namespace ios_adm { class VoiceProcessingAudioUnitObserver { public : OSStatus)",
    "insertText": "OnDeliverRecordedData(AudioUnitRenderActionFlags* flags, const AudioTimeStamp* time_stamp, UInt32 bus_number, UInt32 num_frames, AudioBufferList* io_data)"
  },
  {
    "label": "OnGetPlayoutData()",
    "kind": "Method",
    "detail": "Function (OSStatus)",
    "insertText": "OnGetPlayoutData(AudioUnitRenderActionFlags* io_action_flags, const AudioTimeStamp* time_stamp, UInt32 bus_number, UInt32 num_frames, AudioBufferList* io_data)"
  },
  {
    "label": "VoiceProcessingAudioUnitObserver()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "VoiceProcessingAudioUnitObserver()"
  },
  {
    "label": "VoiceProcessingAudioUnit()",
    "kind": "Method",
    "detail": "Function (} } ; class VoiceProcessingAudioUnit { public :)",
    "insertText": "VoiceProcessingAudioUnit(bool bypass_voice_processing, VoiceProcessingAudioUnitObserver* observer)"
  },
  {
    "label": "VoiceProcessingAudioUnit()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "VoiceProcessingAudioUnit()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (enum State : int32_t { kInitRequired,kUninitialized,kInitialized,kStarted,} ; const UInt32 kBytesPerSample ; bool)",
    "insertText": "Init()"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (VoiceProcessingAudioUnit::State)",
    "insertText": "GetState()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize(Float64 sample_rate)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (OSStatus)",
    "insertText": "Start()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Stop()"
  },
  {
    "label": "Uninitialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Uninitialize()"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (OSStatus)",
    "insertText": "Render(AudioUnitRenderActionFlags* flags, const AudioTimeStamp* time_stamp, UInt32 output_bus_number, UInt32 num_frames, AudioBufferList* io_data)"
  },
  {
    "label": "OnGetPlayoutData()",
    "kind": "Method",
    "detail": "Function (private : OSStatus)",
    "insertText": "OnGetPlayoutData(void* in_ref_con, AudioUnitRenderActionFlags* flags, const AudioTimeStamp* time_stamp, UInt32 bus_number, UInt32 num_frames, AudioBufferList* io_data)"
  },
  {
    "label": "OnDeliverRecordedData()",
    "kind": "Method",
    "detail": "Function (OSStatus)",
    "insertText": "OnDeliverRecordedData(void* in_ref_con, AudioUnitRenderActionFlags* flags, const AudioTimeStamp* time_stamp, UInt32 bus_number, UInt32 num_frames, AudioBufferList* io_data)"
  },
  {
    "label": "NotifyGetPlayoutData()",
    "kind": "Method",
    "detail": "Function (OSStatus)",
    "insertText": "NotifyGetPlayoutData(AudioUnitRenderActionFlags* flags, const AudioTimeStamp* time_stamp, UInt32 bus_number, UInt32 num_frames, AudioBufferList* io_data)"
  },
  {
    "label": "NotifyDeliverRecordedData()",
    "kind": "Method",
    "detail": "Function (OSStatus)",
    "insertText": "NotifyDeliverRecordedData(AudioUnitRenderActionFlags* flags, const AudioTimeStamp* time_stamp, UInt32 bus_number, UInt32 num_frames, AudioBufferList* io_data)"
  },
  {
    "label": "GetFormat()",
    "kind": "Method",
    "detail": "Function (AudioStreamBasicDescription)",
    "insertText": "GetFormat(Float64 sample_rate)"
  },
  {
    "label": "DisposeAudioUnit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisposeAudioUnit()"
  }
]