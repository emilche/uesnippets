[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ITraceFilterPreset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ITraceFilterPreset"
  },
  {
    "label": "SFilterPreset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFilterPreset"
  },
  {
    "label": "SFilterPresetCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFilterPresetCheckBox"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / Input / SCheckBox . h \" enum class ECheckBoxState : uint8 ; namespace UE::TraceTools { struct ITraceFilterPreset ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnPresetChanged, const class SFilterPreset&)"
  },
  {
    "label": "SetOnFilterCtrlClicked()",
    "kind": "Method",
    "detail": "Function (class SFilterPresetCheckBox : public SCheckBox { public : void)",
    "insertText": "SetOnFilterCtrlClicked(const FOnClicked& NewFilterCtrlClicked)"
  },
  {
    "label": "SetOnFilterAltClicked()",
    "kind": "Method",
    "detail": "Function (OnFilterCtrlClicked = NewFilterCtrlClicked ; } void)",
    "insertText": "SetOnFilterAltClicked(const FOnClicked& NewFilteAltClicked)"
  },
  {
    "label": "SetOnFilterDoubleClicked()",
    "kind": "Method",
    "detail": "Function (OnFilterAltClicked = NewFilteAltClicked ; } void)",
    "insertText": "SetOnFilterDoubleClicked(const FOnClicked& NewFilterDoubleClicked)"
  },
  {
    "label": "SetOnFilterMiddleButtonClicked()",
    "kind": "Method",
    "detail": "Function (OnFilterDoubleClicked = NewFilterDoubleClicked ; } void)",
    "insertText": "SetOnFilterMiddleButtonClicked(const FOnClicked& NewFilterMiddleButtonClicked)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (OnFilterMiddleButtonClicked = NewFilterMiddleButtonClicked ; } FReply)",
    "insertText": "OnMouseButtonDoubleClick(const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "OnMouseButtonDoubleClick(InMyGeometry, InMouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (} } FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseButtonUp(InMyGeometry, InMouseEvent)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(InMouseEvent.IsAltDown() && OnFilterAltClicked.IsBound())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(InMouseEvent.GetEffectingButton() == EKeys::MiddleMouseButton && OnFilterMiddleButtonClicked.IsBound())"
  },
  {
    "label": "Handled()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "Handled().ReleaseMouseCapture()"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (} } private : FOnClicked OnFilterCtrlClicked ; FOnClicked OnFilterAltClicked ; FOnClicked OnFilterDoubleClicked ; FOnClicked OnFilterMiddleButtonClicked ; } ; class SFilterPreset : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnRequestRemove, const TSharedRef<SFilterPreset>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnRequestEnableOnly, const TSharedRef<SFilterPreset>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnRequestDelete, const TSharedRef<SFilterPreset>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnRequestSave, const TSharedRef<SFilterPreset>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnHighlightPreset, const TSharedPtr<ITraceFilterPreset>&)"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE(FOnRequestEnableAll)"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE(FOnRequestDisableAll)"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE(FOnRequestRemoveAll)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SFilterPreset)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<ITraceFilterPreset>, FilterPreset) SLATE_EVENT(FOnPresetChanged, OnPresetChanged) SLATE_EVENT(FOnRequestRemove, OnRequestRemove) SLATE_EVENT(FOnRequestEnableOnly, OnRequestEnableOnly) SLATE_EVENT(FOnRequestDelete, OnRequestDelete)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_EVENT(FOnRequestSave, OnRequestSave)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_EVENT(FOnHighlightPreset, OnHighlightPreset) SLATE_EVENT(FOnRequestEnableAll, OnRequestEnableAll) SLATE_EVENT(FOnRequestDisableAll, OnRequestDisableAll) SLATE_EVENT(FOnRequestRemoveAll, OnRequestRemoveAll) SLATE_END_ARGS() virtual ~SFilterPreset()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnMouseLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseLeave(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseMove()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseMove(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "MarkAsEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAsEnabled(bool InEnabled)"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(bool InEnabled)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "GetFilterPreset()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<ITraceFilterPreset>&)",
    "insertText": "GetFilterPreset()"
  },
  {
    "label": "PresetToggled()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "PresetToggled(ECheckBoxState NewState)"
  },
  {
    "label": "FilterCtrlClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "FilterCtrlClicked()"
  },
  {
    "label": "FilterAltClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "FilterAltClicked()"
  },
  {
    "label": "FilterDoubleClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "FilterDoubleClicked()"
  },
  {
    "label": "FilterMiddleButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "FilterMiddleButtonClicked()"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText()"
  },
  {
    "label": "GetRightClickMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetRightClickMenuContent()"
  },
  {
    "label": "RemovePreset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePreset()"
  },
  {
    "label": "EnableOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableOnly()"
  },
  {
    "label": "EnableAllPresets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableAllPresets()"
  },
  {
    "label": "DisableAllPresets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableAllPresets()"
  },
  {
    "label": "RemoveAllPresets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllPresets()"
  },
  {
    "label": "SavePreset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePreset()"
  },
  {
    "label": "DeletePreset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeletePreset()"
  },
  {
    "label": "IsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsChecked()"
  },
  {
    "label": "GetPresetForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetPresetForegroundColor()"
  },
  {
    "label": "GetNameLabelPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetNameLabelPadding()"
  },
  {
    "label": "GetNameLabelColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetNameLabelColorAndOpacity()"
  },
  {
    "label": "GetPresetName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPresetName()"
  }
]