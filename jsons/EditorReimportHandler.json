[
  {
    "label": "FReimportHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReimportHandler"
  },
  {
    "label": "FImportResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImportResult"
  },
  {
    "label": "FReimportManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReimportManager"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Instance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / GCObject . h \" # include \" Containers / ArrayView . h \" class FReimportHandler ; namespace UE::Interchange { class FImportResult ; using FAssetImportResultRef = TSharedRef<FImportResult,ESPMode::ThreadSafe> ; } class FReimportManager : FGCObject { public : FReimportManager*)",
    "insertText": "Instance()"
  },
  {
    "label": "RegisterHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterHandler(FReimportHandler& InHandler)"
  },
  {
    "label": "UnregisterHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterHandler(FReimportHandler& InHandler)"
  },
  {
    "label": "CanReimport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReimport(UObject* Obj, TArray<FString> *ReimportSourceFilenames = nullptr)"
  },
  {
    "label": "Reimport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Reimport(UObject* Obj, bool bAskForNewFileIfMissing = false, bool bShowNotification = true, FString PreferredReimportFile = TEXT(\"\"), FReimportHandler* SpecifiedReimportHandler = nullptr, int32 SourceFileIndex = INDEX_NONE, bool bForceNewFile = false, bool bAutomated = false, bool bInForceShowDialog = false)"
  },
  {
    "label": "ReimportAsync()",
    "kind": "Method",
    "detail": "Function (UE::Interchange::FAssetImportResultRef)",
    "insertText": "ReimportAsync(UObject* Obj, bool bAskForNewFileIfMissing = false, bool bShowNotification = true, FString PreferredReimportFile = TEXT(\"\"), FReimportHandler* SpecifiedReimportHandler = nullptr, int32 SourceFileIndex = INDEX_NONE, bool bInForceNewFile = false, bool bAutomated = false, bool bForceShowDialog = false)"
  },
  {
    "label": "ValidateAllSourceFileAndReimport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateAllSourceFileAndReimport(TArray<UObject*> &ToImportObjects, bool bShowNotification = true, int32 SourceFileIndex = INDEX_NONE, bool bForceNewFile = false, bool bAutomated = false)"
  },
  {
    "label": "ReimportMultiple()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReimportMultiple(TArrayView<UObject*> Objects, bool bAskForNewFileIfMissing = false, bool bShowNotification = true, FString PreferredReimportFile = TEXT(\"\"), FReimportHandler* SpecifiedReimportHandler = nullptr, int32 SourceFileIndex = INDEX_NONE, bool bForceNewFile = false, bool bAutomated = false)"
  },
  {
    "label": "UpdateReimportPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateReimportPaths(UObject* Obj, const TArray<FString>& InFilenames)"
  },
  {
    "label": "UpdateReimportPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateReimportPath(UObject* Obj, const FString& Filename, int32 SourceFileIndex)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FPreReimportNotification, UObject*)"
  },
  {
    "label": "OnPreReimport()",
    "kind": "Method",
    "detail": "Function (FPreReimportNotification&)",
    "insertText": "OnPreReimport()"
  },
  {
    "label": "OnPostReimport()",
    "kind": "Method",
    "detail": "Function (FPostReimportNotification&)",
    "insertText": "OnPostReimport()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "SortHandlersIfNeeded()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "SortHandlersIfNeeded()"
  },
  {
    "label": "OnInterchangePostReimported()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInterchangePostReimported(UObject* ReimportAsset)"
  },
  {
    "label": "FReimportManager()",
    "kind": "Method",
    "detail": "Function (TArray<FReimportHandler*> Handlers ; bool bHandlersNeedSorting ; FPreReimportNotification PreReimport ; FPostReimportNotification PostReimport ; FDelegateHandle InterchangePostReimportedDelegateHandle ;)",
    "insertText": "FReimportManager()"
  },
  {
    "label": "FReimportManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FReimportManager(const FReimportManager&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FReimportManager&)",
    "insertText": "operator(const FReimportManager&)"
  },
  {
    "label": "FReimportHandler()",
    "kind": "Method",
    "detail": "Function (} ; namespace EReimportResult { enum Type { Failed,Succeeded,Cancelled } ; } class FReimportHandler { public :)",
    "insertText": "FReimportHandler() : bAutomatedReimport(false)"
  },
  {
    "label": "Instance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Instance()->RegisterHandler( *this)"
  },
  {
    "label": "FReimportHandler()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FReimportHandler()"
  },
  {
    "label": "Instance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Instance()->UnregisterHandler( *this)"
  },
  {
    "label": "CanReimport()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanReimport(UObject* Obj, TArray<FString>& OutFilenames)"
  },
  {
    "label": "SetReimportPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReimportPaths(UObject* Obj, const TArray<FString>& NewReimportPaths)"
  },
  {
    "label": "SetReimportPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReimportPaths(UObject* Obj, const FString& NewReimportPath, const int32 SourceIndex)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TArray<FString> NewReimportPaths ; NewReimportPaths .)",
    "insertText": "Add(NewReimportPath)"
  },
  {
    "label": "SetReimportPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReimportPaths(Obj, NewReimportPaths)"
  },
  {
    "label": "SetReimportSourceIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetReimportSourceIndex(UObject* Obj, const int32 SourceIndex)"
  },
  {
    "label": "Reimport()",
    "kind": "Method",
    "detail": "Function (} EReimportResult::Type)",
    "insertText": "Reimport(UObject* Obj)"
  },
  {
    "label": "Reimport()",
    "kind": "Method",
    "detail": "Function (EReimportResult::Type)",
    "insertText": "Reimport(UObject* Obj, int32 SourceFileIndex)"
  },
  {
    "label": "GetPriority()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetPriority()"
  },
  {
    "label": "GetFactoryObject()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<UObject>*)",
    "insertText": "GetFactoryObject()"
  },
  {
    "label": "SetPreferredReimportPath()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetPreferredReimportPath(const FString& Path)"
  },
  {
    "label": "SetAutomatedReimport()",
    "kind": "Method",
    "detail": "Function (PreferredReimportPath = Path ; } void)",
    "insertText": "SetAutomatedReimport(const bool InAutomatedReimport)"
  },
  {
    "label": "IsAutomatedReimport()",
    "kind": "Method",
    "detail": "Function (bAutomatedReimport = InAutomatedReimport ; } bool)",
    "insertText": "IsAutomatedReimport()"
  },
  {
    "label": "IsForceShowDialog()",
    "kind": "Method",
    "detail": "Function (bForceShowDialog = InbForceShowDialog ; } bool)",
    "insertText": "IsForceShowDialog()"
  }
]