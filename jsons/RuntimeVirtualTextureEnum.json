[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ERuntimeVirtualTextureShaderUniform",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERuntimeVirtualTextureShaderUniform"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / EnumRange . h \" # include \" RuntimeVirtualTextureEnum . generated . h \" namespace RuntimeVirtualTexture { enum { MaxTextureLayers = 3 } ; } enum class ERuntimeVirtualTextureAttributeType : uint8 { BaseColor,Normal,Roughness,Specular,Mask,Mask4,WorldHeight,Displacement,Count } ;)",
    "insertText": "static_assert((uint32)ERuntimeVirtualTextureAttributeType::Count <= 8u, \"ERuntimeVirtualTextureAttributeType can no longer be used to create 8bit masks.\")"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (BaseColor)",
    "insertText": "UMETA(DisplayName = \"Base Color\"), Mask4 UMETA(DisplayName = \"Mask4\", ToolTip = \"4 channel mask texture.\"), BaseColor_Normal_Roughness UMETA(DisplayName = \"Base Color, Normal, Roughness\", ToolTip = \"Local space Normal. Requires less memory than 'Base Color, Normal, Roughness, Specular'. Supports LQ compression.\"), BaseColor_Normal_Specular UMETA(DisplayName = \"Base Color, Normal, Roughness, Specular\"), BaseColor_Normal_Specular_YCoCg UMETA(DisplayName = \"YCoCg Base Color, Normal, Roughness, Specular\", ToolTip = \"Base Color is stored in YCoCg space. This requires more memory but may provide better quality.\"), BaseColor_Normal_Specular_Mask_YCoCg UMETA(DisplayName = \"YCoCg Base Color, Normal, Roughness, Specular, Mask\", ToolTip=\"Base Color is stored in YCoCg space. This requires more memory but may provide better quality.\"), WorldHeight UMETA(DisplayName = \"World Height\"), Displacement UMETA(DisplayName = \"Displacement\"), Count UMETA(Hidden)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (namespace RuntimeVirtualTexture { enum { MaterialType_NumBits = 3 } ; })",
    "insertText": "static_assert((uint32)ERuntimeVirtualTextureMaterialType::Count <= (1 << (uint32)RuntimeVirtualTexture::MaterialType_NumBits), \"NumBits is too small\")"
  },
  {
    "label": "ENUM_RANGE_BY_COUNT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_RANGE_BY_COUNT(ERuntimeVirtualTextureMaterialType, ERuntimeVirtualTextureMaterialType::Count)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Never)",
    "insertText": "UMETA(DisplayName = \"Never\"), Exclusive UMETA(DisplayName = \"From Virtual Texture\"), Always UMETA(DisplayName = \"Always\")"
  }
]