[
  {
    "label": "SDeviceDetailsFeatureListRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDeviceDetailsFeatureListRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Widgets / SNullWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Styling / SlateColor . h \" # include \" Widgets / SWidget . h \" # include \" Layout / Margin . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Layout / SBox . h \" # include \" Widgets / Views / STableRow . h \" # include \" Models / DeviceDetailsFeature . h \" # include \" SlateOptMacros . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Widgets / Views / SListView . h \" # define LOCTEXT_NAMESPACE \" SDeviceDetailsFeatureListRow \" class SDeviceDetailsFeatureListRow : public SMultiColumnTableRow<TSharedPtr<FDeviceDetailsFeature>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SDeviceDetailsFeatureListRow)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: void Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView, const TSharedRef<FDeviceDetailsFeature>& InFeature)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (Feature = InFeature ; SMultiColumnTableRow<TSharedPtr<FDeviceDetailsFeature>)",
    "insertText": "Construct(FSuperRowType::FArguments(), InOwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (} public : BEGIN_SLATE_FUNCTION_BUILD_OPTIMIZATION TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const FCoreTexts& CoreTexts =)",
    "insertText": "Get()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(ColumnName == \"Feature\")"
  },
  {
    "label": "HandleTextColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (} return SNullWidget::NullWidget ; } END_SLATE_FUNCTION_BUILD_OPTIMIZATION private : FSlateColor)",
    "insertText": "HandleTextColorAndOpacity()"
  },
  {
    "label": "UseSubduedForeground()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "UseSubduedForeground()"
  }
]