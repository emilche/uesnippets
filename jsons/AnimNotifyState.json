[
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FAnimNotifyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyEvent"
  },
  {
    "label": "FBranchingPointNotifyPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBranchingPointNotifyPayload"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "UAnimNotifyState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimNotifyState"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / ScriptMacros . h \" # include \" Animation / AnimNotifyQueue . h \" # include \" AnimNotifyState . generated . h \" class UAnimSequenceBase ; class USkeletalMeshComponent ; struct FAnimNotifyEvent ; struct FBranchingPointNotifyPayload ; # if WITH_EDITORONLY_DATA class FPrimitiveDrawInterface ; class FCanvas ; class FSceneView ; # endif)",
    "insertText": "UCLASS(abstract, editinlinenew, Blueprintable, const, hidecategories=Object, collapsecategories, meta=(ShowWorldContextPin), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UFUNCTION(BlueprintNativeEvent) ENGINE_API FString GetNotifyName()"
  },
  {
    "label": "OnAnimNotifyCreatedInEditor()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "OnAnimNotifyCreatedInEditor(FAnimNotifyEvent& ContainingAnimNotifyEvent)"
  },
  {
    "label": "CanBePlaced()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "CanBePlaced(UAnimSequenceBase* Animation)"
  },
  {
    "label": "DrawInEditor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DrawInEditor(FPrimitiveDrawInterface* PDI, USkeletalMeshComponent* MeshComp, const UAnimSequenceBase* Animation, const FAnimNotifyEvent& NotifyEvent)"
  },
  {
    "label": "DrawCanvasInEditor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DrawCanvasInEditor(FCanvas& Canvas, FSceneView& View, USkeletalMeshComponent* MeshComp, const UAnimSequenceBase* Animation, const FAnimNotifyEvent& NotifyEvent)"
  },
  {
    "label": "ShouldFireInEditor()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldFireInEditor()"
  },
  {
    "label": "NotifyBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBegin(USkeletalMeshComponent * MeshComp, UAnimSequenceBase * Animation, float TotalDuration, const FAnimNotifyEventReference& EventReference)"
  },
  {
    "label": "NotifyTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyTick(USkeletalMeshComponent * MeshComp, UAnimSequenceBase * Animation, float FrameDeltaTime, const FAnimNotifyEventReference& EventReference)"
  },
  {
    "label": "NotifyEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyEnd(USkeletalMeshComponent * MeshComp, UAnimSequenceBase * Animation, const FAnimNotifyEventReference& EventReference)"
  },
  {
    "label": "BranchingPointNotifyBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BranchingPointNotifyBegin(FBranchingPointNotifyPayload& BranchingPointPayload)"
  },
  {
    "label": "BranchingPointNotifyTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BranchingPointNotifyTick(FBranchingPointNotifyPayload& BranchingPointPayload, float FrameDeltaTime)"
  },
  {
    "label": "BranchingPointNotifyEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BranchingPointNotifyEnd(FBranchingPointNotifyPayload& BranchingPointPayload)"
  },
  {
    "label": "GetEditorComment()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEditorComment()"
  },
  {
    "label": "GetEditorColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetEditorColor()"
  },
  {
    "label": "FLinearColor()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA return)",
    "insertText": "FLinearColor(NotifyColor)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# else return FLinearColor::Black ; # endif } void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PreSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreSave(FObjectPreSaveContext ObjectSaveContext)"
  },
  {
    "label": "GetContainingAsset()",
    "kind": "Method",
    "detail": "Function (bool bIsNativeBranchingPoint ; protected : UObject*)",
    "insertText": "GetContainingAsset()"
  }
]