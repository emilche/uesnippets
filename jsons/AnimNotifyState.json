[
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FAnimNotifyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyEvent"
  },
  {
    "label": "FBranchingPointNotifyPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBranchingPointNotifyPayload"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "UAnimNotifyState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimNotifyState"
  },
  {
    "label": "NotifyBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBegin(USkeletalMeshComponent * MeshComp, UAnimSequenceBase * Animation, float TotalDuration)"
  },
  {
    "label": "NotifyTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyTick(USkeletalMeshComponent * MeshComp, UAnimSequenceBase * Animation, float FrameDeltaTime)"
  },
  {
    "label": "NotifyEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyEnd(USkeletalMeshComponent * MeshComp, UAnimSequenceBase * Animation)"
  },
  {
    "label": "NotifyBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBegin(USkeletalMeshComponent * MeshComp, UAnimSequenceBase * Animation, float TotalDuration, const FAnimNotifyEventReference& EventReference)"
  },
  {
    "label": "NotifyTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyTick(USkeletalMeshComponent * MeshComp, UAnimSequenceBase * Animation, float FrameDeltaTime, const FAnimNotifyEventReference& EventReference)"
  },
  {
    "label": "NotifyEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyEnd(USkeletalMeshComponent * MeshComp, UAnimSequenceBase * Animation, const FAnimNotifyEventReference& EventReference)"
  },
  {
    "label": "BranchingPointNotifyBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BranchingPointNotifyBegin(FBranchingPointNotifyPayload& BranchingPointPayload)"
  },
  {
    "label": "BranchingPointNotifyTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BranchingPointNotifyTick(FBranchingPointNotifyPayload& BranchingPointPayload, float FrameDeltaTime)"
  },
  {
    "label": "BranchingPointNotifyEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BranchingPointNotifyEnd(FBranchingPointNotifyPayload& BranchingPointPayload)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "FLinearColor()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FLinearColor(NotifyColor)"
  }
]