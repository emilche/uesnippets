[
  {
    "label": "VideoSourceSinkController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoSourceSinkController"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "VideoSourceSinkController()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "VideoSourceSinkController(rtc::VideoSinkInterface<VideoFrame>* sink,\n                            rtc::VideoSourceInterface<VideoFrame>* source)"
  },
  {
    "label": "SetSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSource(rtc::VideoSourceInterface<VideoFrame>* source)"
  },
  {
    "label": "RequestRefreshFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRefreshFrame()"
  },
  {
    "label": "PushSourceSinkSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushSourceSinkSettings()"
  },
  {
    "label": "SetRestrictions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRestrictions(VideoSourceRestrictions restrictions)"
  },
  {
    "label": "SetPixelsPerFrameUpperLimit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPixelsPerFrameUpperLimit(\n      absl::optional<size_t> pixels_per_frame_upper_limit)"
  },
  {
    "label": "SetFrameRateUpperLimit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameRateUpperLimit(absl::optional<double> frame_rate_upper_limit)"
  },
  {
    "label": "SetRotationApplied()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationApplied(bool rotation_applied)"
  },
  {
    "label": "SetResolutionAlignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResolutionAlignment(int resolution_alignment)"
  },
  {
    "label": "SetResolutions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResolutions(std::vector<rtc::VideoSinkWants::FrameSize> resolutions)"
  },
  {
    "label": "SetActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActive(bool active)"
  },
  {
    "label": "SetRequestedResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRequestedResolution(\n      absl::optional<rtc::VideoSinkWants::FrameSize> requested_resolution)"
  },
  {
    "label": "RTC_EXCLUSIVE_LOCKS_REQUIRED()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_EXCLUSIVE_LOCKS_REQUIRED(sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (source_)",
    "insertText": "RTC_GUARDED_BY(&sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (restrictions_)",
    "insertText": "RTC_GUARDED_BY(&sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (pixels_per_frame_upper_limit_)",
    "insertText": "RTC_GUARDED_BY(&sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (frame_rate_upper_limit_)",
    "insertText": "RTC_GUARDED_BY(&sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (resolutions_)",
    "insertText": "RTC_GUARDED_BY(&sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (requested_resolution_)",
    "insertText": "RTC_GUARDED_BY(&sequence_checker_)"
  }
]