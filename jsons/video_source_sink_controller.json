[
  {
    "label": "VideoSourceSinkController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoSourceSinkController"
  },
  {
    "label": "VideoSourceSinkController()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_VIDEO_SOURCE_SINK_CONTROLLER_H_ # define VIDEO_VIDEO_SOURCE_SINK_CONTROLLER_H_ # include<string> # include<vector> # include \" absl / types / optional . h \" # include \" api / sequence_checker . h \" # include \" api / video / video_frame . h \" # include \" api / video / video_sink_interface . h \" # include \" api / video / video_source_interface . h \" # include \" call / adaptation / video_source_restrictions . h \" # include \" rtc_base / system / no_unique_address . h \" namespace webrtc { class VideoSourceSinkController { public :)",
    "insertText": "VideoSourceSinkController(rtc::VideoSinkInterface<VideoFrame>* sink, rtc::VideoSourceInterface<VideoFrame>* source)"
  },
  {
    "label": "VideoSourceSinkController()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "VideoSourceSinkController()"
  },
  {
    "label": "SetSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSource(rtc::VideoSourceInterface<VideoFrame>* source)"
  },
  {
    "label": "HasSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSource()"
  },
  {
    "label": "RequestRefreshFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRefreshFrame()"
  },
  {
    "label": "PushSourceSinkSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushSourceSinkSettings()"
  },
  {
    "label": "restrictions()",
    "kind": "Method",
    "detail": "Function (VideoSourceRestrictions)",
    "insertText": "restrictions()"
  },
  {
    "label": "pixels_per_frame_upper_limit()",
    "kind": "Method",
    "detail": "Function (absl::optional<size_t>)",
    "insertText": "pixels_per_frame_upper_limit()"
  },
  {
    "label": "frame_rate_upper_limit()",
    "kind": "Method",
    "detail": "Function (absl::optional<double>)",
    "insertText": "frame_rate_upper_limit()"
  },
  {
    "label": "rotation_applied()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "rotation_applied()"
  },
  {
    "label": "resolution_alignment()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "resolution_alignment()"
  },
  {
    "label": "resolutions()",
    "kind": "Method",
    "detail": "Function (const std::vector<rtc::VideoSinkWants::FrameSize>&)",
    "insertText": "resolutions()"
  },
  {
    "label": "active()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "active()"
  },
  {
    "label": "requested_resolution()",
    "kind": "Method",
    "detail": "Function (absl::optional<rtc::VideoSinkWants::FrameSize>)",
    "insertText": "requested_resolution()"
  },
  {
    "label": "SetRestrictions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRestrictions(VideoSourceRestrictions restrictions)"
  },
  {
    "label": "SetPixelsPerFrameUpperLimit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPixelsPerFrameUpperLimit(absl::optional<size_t> pixels_per_frame_upper_limit)"
  },
  {
    "label": "SetFrameRateUpperLimit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameRateUpperLimit(absl::optional<double> frame_rate_upper_limit)"
  },
  {
    "label": "SetRotationApplied()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationApplied(bool rotation_applied)"
  },
  {
    "label": "SetResolutionAlignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResolutionAlignment(int resolution_alignment)"
  },
  {
    "label": "SetResolutions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResolutions(std::vector<rtc::VideoSinkWants::FrameSize> resolutions)"
  },
  {
    "label": "SetActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActive(bool active)"
  },
  {
    "label": "SetRequestedResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRequestedResolution(absl::optional<rtc::VideoSinkWants::FrameSize> requested_resolution)"
  },
  {
    "label": "CurrentSettingsToSinkWants()",
    "kind": "Method",
    "detail": "Function (private : rtc::VideoSinkWants)",
    "insertText": "CurrentSettingsToSinkWants() const RTC_EXCLUSIVE_LOCKS_REQUIRED(sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (RTC_NO_UNIQUE_ADDRESS SequenceChecker sequence_checker_ ; rtc::VideoSinkInterface<VideoFrame>* const sink_ ; rtc::VideoSourceInterface<VideoFrame>* source_)",
    "insertText": "RTC_GUARDED_BY(&sequence_checker_)"
  }
]