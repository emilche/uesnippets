[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FDiskCachedAssetData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDiskCachedAssetData"
  },
  {
    "label": "FAssetRegistryReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRegistryReader"
  },
  {
    "label": "FAssetRegistryWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRegistryWriter"
  },
  {
    "label": "FAssetRegistryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRegistryImpl"
  },
  {
    "label": "FAssetDataDiscovery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetDataDiscovery"
  },
  {
    "label": "FFilesToSearch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilesToSearch"
  },
  {
    "label": "FCachePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachePayload"
  },
  {
    "label": "FGatheredPathData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGatheredPathData"
  },
  {
    "label": "FPathExistence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPathExistence"
  },
  {
    "label": "FSetPathProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetPathProperties"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAssetGatherDiagnostics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetGatherDiagnostics"
  },
  {
    "label": "FAssetDataGatherer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetDataGatherer"
  },
  {
    "label": "FResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResults"
  },
  {
    "label": "FResultContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResultContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FScopedGatheringPause",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedGatheringPause"
  },
  {
    "label": "FAssetDataGatherer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FAssetDataGatherer(const TArray<FString>& InLongPackageNamesDenyList,\n\t\tconst TArray<FString>& InMountRelativePathsDenyList, bool bInAsyncEnabled, UE::AssetRegistry::FAssetRegistryImpl& InRegistryImpl)"
  },
  {
    "label": "OnInitialSearchCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInitialSearchCompleted()"
  },
  {
    "label": "StartAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAsync()"
  },
  {
    "label": "EnsureCompletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureCompletion()"
  },
  {
    "label": "GetAndTrimSearchResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAndTrimSearchResults(FResults& InOutResults, FResultContext& OutContext)"
  },
  {
    "label": "GetDiagnostics()",
    "kind": "Method",
    "detail": "Function (FAssetGatherDiagnostics)",
    "insertText": "GetDiagnostics()"
  },
  {
    "label": "GetPackageResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPackageResults(FResults& InOutResults)"
  },
  {
    "label": "WaitOnPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitOnPath(FStringView LocalPath)"
  },
  {
    "label": "ClearCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCache()"
  },
  {
    "label": "ScanPathsSynchronous()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScanPathsSynchronous(const TArray<FString>& InPaths, bool bForceRescan, bool bIgnoreDenyListScanFilters)"
  },
  {
    "label": "WaitForIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForIdle(float TimeoutSeconds = -1.0f)"
  },
  {
    "label": "SetInitialPluginsLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitialPluginsLoaded()"
  },
  {
    "label": "AddMountPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMountPoint(FStringView LocalPath, FStringView LongPackageName)"
  },
  {
    "label": "RemoveMountPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMountPoint(FStringView LocalPath)"
  },
  {
    "label": "AddRequiredMountPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequiredMountPoints(TArrayView<FString> LocalPaths)"
  },
  {
    "label": "OnDirectoryCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDirectoryCreated(FStringView LocalPath)"
  },
  {
    "label": "OnFilesCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilesCreated(TConstArrayView<FString> LocalPaths)"
  },
  {
    "label": "PrioritizeSearchPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrioritizeSearchPath(const FString& PathToPrioritize)"
  },
  {
    "label": "SetIsOnAllowList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsOnAllowList(FStringView LocalPath, bool bIsAllowed)"
  },
  {
    "label": "IsVerseFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVerseFile(FStringView FilePath)"
  },
  {
    "label": "ReadAssetFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadAssetFile(FPackageReader& PackageReader, TArray<FAssetData*>& AssetDataList,\n\t\tFPackageDependencyData& DependencyData, TArray<FString>& CookedPackagesToLoadUponDiscovery,\n\t\tFPackageReader::EReadOptions Options)"
  },
  {
    "label": "SetGatherOnGameThreadOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGatherOnGameThreadOnly(bool bValue)"
  },
  {
    "label": "InnerTickLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InnerTickLoop(bool bInSynchronousTick, bool bContributeToCacheSave, double EndTimeSeconds)"
  },
  {
    "label": "TickInternal()",
    "kind": "Method",
    "detail": "Function (ETickResult)",
    "insertText": "TickInternal(double& TickStartTime, bool bPollDiscovery)"
  },
  {
    "label": "IngestDiscoveryResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IngestDiscoveryResults()"
  },
  {
    "label": "OnFileCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFileCreated(FStringView LocalPath)"
  },
  {
    "label": "SetDirectoryProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDirectoryProperties(FStringView LocalPath, const UE::AssetDataGather::Private::FSetPathProperties& Properties)"
  },
  {
    "label": "WaitOnPathsInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitOnPathsInternal(TArrayView<UE::AssetDataGather::Private::FPathExistence> QueryPaths)"
  },
  {
    "label": "SortPathsByPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortPathsByPriority(TArrayView<UE::AssetDataGather::Private::FPathExistence> QueryPaths,\n\t\tUE::AssetDataGather::Private::EPriority Priority, int32& OutNumPaths)"
  },
  {
    "label": "ConsumeCacheFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsumeCacheFiles(TArray<UE::AssetDataGather::Private::FCachePayload> Payloads)"
  },
  {
    "label": "TryReserveSaveCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryReserveSaveCache(bool& bOutShouldSave, TArray<TPair<FName,FDiskCachedAssetData*>>& AssetsToSave)"
  },
  {
    "label": "SaveCacheFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveCacheFile(const TArray<TPair<FName,FDiskCachedAssetData*>>& AssetsToSave)"
  },
  {
    "label": "SaveCacheFileInternal()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "SaveCacheFileInternal(const FString& CacheFilename,\n\t\tconst TArray<TPair<FName,FDiskCachedAssetData*>>& AssetsToSave)"
  },
  {
    "label": "GetAssetsToSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetsToSave(TArrayView<const FString> SaveCacheLongPackageNameDirs,\n\t\tTArray<TPair<FName,FDiskCachedAssetData*>>& OutAssetsToSave)"
  },
  {
    "label": "GetCacheAssetsToSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCacheAssetsToSave(TArray<TPair<FName,FDiskCachedAssetData*>>& OutAssetsToSave)"
  },
  {
    "label": "AddToCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToCache(FName PackageName, FDiskCachedAssetData* DiskCachedAssetData)"
  },
  {
    "label": "SetIsIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsIdle(bool IsIdle)"
  },
  {
    "label": "SetIsIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsIdle(bool IsIdle, double& TickStartTime)"
  },
  {
    "label": "Shrink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shrink()"
  },
  {
    "label": "NormalizeLocalPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "NormalizeLocalPath(FStringView LocalPath)"
  },
  {
    "label": "NormalizeLongPackageName()",
    "kind": "Method",
    "detail": "Function (FStringView)",
    "insertText": "NormalizeLongPackageName(FStringView LongPackageName)"
  }
]