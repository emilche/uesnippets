[
  {
    "label": "vp8_encode_intra()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP8_ENCODER_ENCODEINTRA_H_ # define VPX_VP8_ENCODER_ENCODEINTRA_H_ # include \" onyx_int . h \" # ifdef __cplusplus \" C \" { # endif int)",
    "insertText": "vp8_encode_intra(MACROBLOCK *x, int use_dc_pred)"
  },
  {
    "label": "vp8_encode_intra16x16mby()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_encode_intra16x16mby(MACROBLOCK *x)"
  },
  {
    "label": "vp8_encode_intra16x16mbuv()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_encode_intra16x16mbuv(MACROBLOCK *x)"
  },
  {
    "label": "vp8_encode_intra4x4mby()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_encode_intra4x4mby(MACROBLOCK *mb)"
  },
  {
    "label": "vp8_encode_intra4x4block()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_encode_intra4x4block(MACROBLOCK *x, int ib)"
  }
]