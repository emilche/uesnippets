[
  {
    "label": "FEdMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdMode"
  },
  {
    "label": "UEdMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdMode"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "FEditorModeTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorModeTools"
  },
  {
    "label": "FAssetEditorModeUILayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorModeUILayer"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "IToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkit"
  },
  {
    "label": "IToolkit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Framework / Docking / WorkspaceItem . h \" # include \" Framework / Docking / TabManager . h \" class FEdMode ; class UEdMode ; class IToolkitHost ; class FEditorModeTools ; class FAssetEditorModeUILayer ; namespace EToolkitMode { enum Type { Standalone,WorldCentric,} ; } namespace EToolkitTabSpot { enum Type { Details,Document,Navigation,ToolBar,Placement,Viewport,BelowLevelEditor,} ; } class IToolkit { public : ~)",
    "insertText": "IToolkit()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<FTabManager>& TabManager)"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (public : FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetToolkitContextFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitContextFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitName()"
  },
  {
    "label": "GetTabSuffix()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTabSuffix()"
  },
  {
    "label": "GetToolkitToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitToolTipText()"
  },
  {
    "label": "GetWorkspaceMenuCategory()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorkspaceItem>)",
    "insertText": "GetWorkspaceMenuCategory()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "IsAssetEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetEditor()"
  },
  {
    "label": "GetObjectsCurrentlyBeingEdited()",
    "kind": "Method",
    "detail": "Function (const TArray<UObject*>*)",
    "insertText": "GetObjectsCurrentlyBeingEdited()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "IsHosted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHosted()"
  },
  {
    "label": "GetToolkitHost()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<IToolkitHost>)",
    "insertText": "GetToolkitHost()"
  },
  {
    "label": "ProcessCommandBindings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessCommandBindings(const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "BringToolkitToFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BringToolkitToFront()"
  },
  {
    "label": "IsBlueprintEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBlueprintEditor()"
  },
  {
    "label": "ToolkitBroughtToFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToolkitBroughtToFront()"
  },
  {
    "label": "IsSimpleAssetEditor()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "IsSimpleAssetEditor()"
  },
  {
    "label": "GetInlineContent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetInlineContent()"
  },
  {
    "label": "SetModeUILayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModeUILayer(const TSharedPtr<FAssetEditorModeUILayer> InLayer)"
  }
]