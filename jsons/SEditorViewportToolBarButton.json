[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FButtonStyle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FButtonStyle"
  },
  {
    "label": "FCheckBoxStyle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCheckBoxStyle"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SEditorViewportToolBarButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditorViewportToolBarButton"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Framework / Commands / UICommandInfo . h \" # include \" Framework / SlateDelegates . h \" # include \" HAL / Platform . h \" # include \" Misc / Attribute . h \" # include \" Styling / AppStyle . h \" # include \" Styling / ISlateStyle . h \" # include \" Styling / SlateTypes . h \" # include \" Styling / SlateWidgetStyleAsset . h \" # include \" Styling / ToolBarStyle . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FName ; class SWidget ; struct FButtonStyle ; struct FCheckBoxStyle ; struct FSlateBrush ; enum class ECheckBoxState : uint8 ; class SEditorViewportToolBarButton : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SEditorViewportToolBarButton) : _ButtonType(EUserInterfaceActionType::Button) , _ButtonStyle(&FAppStyle::Get().GetWidgetStyle<FToolBarStyle>(\"EditorViewportToolBar\").ButtonStyle) , _CheckBoxStyle(&FAppStyle::Get().GetWidgetStyle<FToolBarStyle>(\"EditorViewportToolBar\").ToggleButton) , _IsChecked(false)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnClicked, OnClicked) SLATE_ARGUMENT(EUserInterfaceActionType, ButtonType) SLATE_STYLE_ARGUMENT(FButtonStyle, ButtonStyle) SLATE_STYLE_ARGUMENT(FCheckBoxStyle, CheckBoxStyle) SLATE_ATTRIBUTE(bool, IsChecked) SLATE_ATTRIBUTE(FName, Image) SLATE_DEFAULT_SLOT( FArguments, Content ) SLATE_END_ARGS() UNREALED_API void Construct( const FArguments& Declaration)"
  },
  {
    "label": "OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnCheckStateChanged(ECheckBoxState NewCheckedState)"
  },
  {
    "label": "OnGetButtonImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "OnGetButtonImage()"
  },
  {
    "label": "OnIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "OnIsChecked()"
  }
]