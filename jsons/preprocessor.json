[
  {
    "label": "macro_definition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "macro_definition"
  },
  {
    "label": "stb_arena",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "stb_arena"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<stdlib . h> enum { PP_RESULT_ok,PP_RESULT_supplementary,PP_RESULT_undef_of_undefined_macro,PP_RESULT_explicit_warning,PP_RESULT_internal_error_out_of_memory,PP_RESULT_ERROR = 5,PP_RESULT_counter_overflowed,PP_RESULT_too_many_arguments_to_macro,PP_RESULT_invalid_char,PP_RESULT_unrecognized_directive,PP_RESULT_directive_not_at_start_of_line,PP_RESULT_unexpected_character_in_directive,PP_RESULT_unexpected_character_after_end_of_directive,PP_RESULT_undef_of_predefined_macro,PP_RESULT_identifier_too_long,PP_RESULT_malformed_pragma_message,PP_RESULT_malformed_line_filename,PP_RESULT_invalid_line_linenumber,PP_RESULT_count } ; enum { PP_RESULT_MODE_error,PP_RESULT_MODE_warning,PP_RESULT_MODE_supplementary,PP_RESULT_MODE_warning_fast,PP_RESULT_MODE_no_warning } ; struct macro_definition ; struct stb_arena ; typedef struct { char* filename ; int line_number ; int column ; } pp_where ; typedef struct { char* message ; int diagnostic_code ; int error_level ; pp_where* where ; } pp_diagnostic ; # ifdef __cplusplus # define STB_PP_DEF \" C \" # else # define STB_PP_DEF # endif typedef const)",
    "insertText": "char(*loadfile_callback_func)(const char* filename, void* custom_context, size_t* out_length)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*freefile_callback_func)(const char* filename, const char* loaded_file, void* custom_context)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (typedef const)",
    "insertText": "char(*resolveinclude_callback_func)(const char* path, unsigned int path_len, const char* parent, void* custom_context)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (typedef const)",
    "insertText": "char(*custommacro_begin_callback_func)(const char* original_text, void* custom_context)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*custommacro_end_callback_func)(const char* original_text, void* custom_context, const char* substitution_text)"
  },
  {
    "label": "init_preprocessor()",
    "kind": "Method",
    "detail": "Function (STB_PP_DEF void)",
    "insertText": "init_preprocessor(loadfile_callback_func load_callback, freefile_callback_func free_callback, resolveinclude_callback_func resolve_callback, custommacro_begin_callback_func custommacro_begin_callback, custommacro_end_callback_func custommacro_end_callback)"
  },
  {
    "label": "preprocess_file()",
    "kind": "Method",
    "detail": "Function (STB_PP_DEF char*)",
    "insertText": "preprocess_file(const char* filename, void* custom_context, struct macro_definition** predefined_macros, int num_predefined_macros, pp_diagnostic** pd, int* num_pd, char* output_inlinebuffer, size_t output_inlinebuffersize)"
  },
  {
    "label": "preprocessor_file_size()",
    "kind": "Method",
    "detail": "Function (STB_PP_DEF int)",
    "insertText": "preprocessor_file_size(char* text)"
  },
  {
    "label": "preprocessor_file_capacity()",
    "kind": "Method",
    "detail": "Function (STB_PP_DEF int)",
    "insertText": "preprocessor_file_capacity(char* text)"
  },
  {
    "label": "preprocessor_file_append()",
    "kind": "Method",
    "detail": "Function (STB_PP_DEF char*)",
    "insertText": "preprocessor_file_append(char* text, const char* appended_text, int appended_text_len)"
  },
  {
    "label": "preprocessor_file_free()",
    "kind": "Method",
    "detail": "Function (STB_PP_DEF void)",
    "insertText": "preprocessor_file_free(char* text, pp_diagnostic* pd)"
  },
  {
    "label": "pp_define()",
    "kind": "Method",
    "detail": "Function (STB_PP_DEF struct macro_definition*)",
    "insertText": "pp_define(struct stb_arena* a, const char* def)"
  },
  {
    "label": "pp_define_custom_macro()",
    "kind": "Method",
    "detail": "Function (STB_PP_DEF struct macro_definition*)",
    "insertText": "pp_define_custom_macro(struct stb_arena* a, const char* identifier, unsigned char preprocess_args_first)"
  },
  {
    "label": "pp_set_warning_mode()",
    "kind": "Method",
    "detail": "Function (STB_PP_DEF void)",
    "insertText": "pp_set_warning_mode(int result_code, int result_mode)"
  },
  {
    "label": "preprocessor_hash()",
    "kind": "Method",
    "detail": "Function (STB_PP_DEF unsigned int)",
    "insertText": "preprocessor_hash(const char* data, size_t len)"
  }
]