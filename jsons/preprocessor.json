[
  {
    "label": "macro_definition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "macro_definition"
  },
  {
    "label": "stb_arena",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "stb_arena"
  },
  {
    "label": "macro_definition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "macro_definition"
  },
  {
    "label": "macro_definition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "macro_definition"
  },
  {
    "label": "stb_arena",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "stb_arena"
  },
  {
    "label": "macro_definition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "macro_definition"
  },
  {
    "label": "stb_arena",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "stb_arena"
  },
  {
    "label": "init_preprocessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init_preprocessor(\n\tloadfile_callback_func load_callback,\n\tfreefile_callback_func free_callback,\n\tresolveinclude_callback_func resolve_callback,\n\tcustommacro_begin_callback_func custommacro_begin_callback,\n\tcustommacro_end_callback_func custommacro_end_callback)"
  },
  {
    "label": "preprocessor_file_size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "preprocessor_file_size(char* text)"
  },
  {
    "label": "preprocessor_file_capacity()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "preprocessor_file_capacity(char* text)"
  },
  {
    "label": "preprocessor_file_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "preprocessor_file_free(char* text, pp_diagnostic* pd)"
  },
  {
    "label": "pp_set_warning_mode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pp_set_warning_mode(int result_code, int result_mode)"
  },
  {
    "label": "preprocessor_hash()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "preprocessor_hash(const char* data, size_t len)"
  }
]