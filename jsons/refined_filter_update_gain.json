[
  {
    "label": "AdaptiveFirFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AdaptiveFirFilter"
  },
  {
    "label": "ApmDataDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ApmDataDumper"
  },
  {
    "label": "EchoPathVariability",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EchoPathVariability"
  },
  {
    "label": "FftData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FftData"
  },
  {
    "label": "RenderSignalAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RenderSignalAnalyzer"
  },
  {
    "label": "SubtractorOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SubtractorOutput"
  },
  {
    "label": "RefinedFilterUpdateGain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RefinedFilterUpdateGain"
  },
  {
    "label": "RefinedFilterUpdateGain()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_REFINED_FILTER_UPDATE_GAIN_H_ # define MODULES_AUDIO_PROCESSING_AEC3_REFINED_FILTER_UPDATE_GAIN_H_ # include<stddef . h> # include<array> # include<atomic> # include<memory> # include \" api / array_view . h \" # include \" api / audio / echo_canceller3_config . h \" # include \" modules / audio_processing / aec3 / aec3_common . h \" namespace webrtc { class AdaptiveFirFilter ; class ApmDataDumper ; struct EchoPathVariability ; struct FftData ; class RenderSignalAnalyzer ; struct SubtractorOutput ; class RefinedFilterUpdateGain { public :)",
    "insertText": "RefinedFilterUpdateGain(const EchoCanceller3Config::Filter::RefinedConfiguration& config, size_t config_change_duration_blocks)"
  },
  {
    "label": "RefinedFilterUpdateGain()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RefinedFilterUpdateGain()"
  },
  {
    "label": "RefinedFilterUpdateGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefinedFilterUpdateGain(const RefinedFilterUpdateGain&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RefinedFilterUpdateGain&)",
    "insertText": "operator(const RefinedFilterUpdateGain&)"
  },
  {
    "label": "HandleEchoPathChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEchoPathChange(const EchoPathVariability& echo_path_variability)"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compute(const std::array<float, kFftLengthBy2Plus1>& render_power, const RenderSignalAnalyzer& render_signal_analyzer, const SubtractorOutput& subtractor_output, rtc::ArrayView<const float> erl, size_t size_partitions, bool saturated_capture_signal, bool disallow_leakage_diverged, FftData* gain_fft)"
  },
  {
    "label": "SetConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConfig(const EchoCanceller3Config::Filter::RefinedConfiguration& config, bool immediate_effect)"
  },
  {
    "label": "UpdateCurrentConfig()",
    "kind": "Method",
    "detail": "Function (old_target_config_ = current_config_ = target_config_ = config ; config_change_counter_ = 0 ; } else { old_target_config_ = current_config_ ; target_config_ = config ; config_change_counter_ = config_change_duration_blocks_ ; } } private : std::atomic<int> instance_count_ ; std::unique_ptr<ApmDataDumper> data_dumper_ ; const int config_change_duration_blocks_ ; float one_by_config_change_duration_blocks_ ; EchoCanceller3Config::Filter::RefinedConfiguration current_config_ ; EchoCanceller3Config::Filter::RefinedConfiguration target_config_ ; EchoCanceller3Config::Filter::RefinedConfiguration old_target_config_ ; std::array<float,kFftLengthBy2Plus1> H_error_ ; size_t poor_excitation_counter_ ; size_t call_counter_ = 0 ; int config_change_counter_ = 0 ; void)",
    "insertText": "UpdateCurrentConfig()"
  }
]