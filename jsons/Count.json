[
  {
    "label": "_InputIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_COUNT_H # define _LIBCPP___ALGORITHM_COUNT_H # include<__config> # include<__iterator / iterator_traits . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _InputIterator, class _Tp> _LIBCPP_NODISCARD_EXT inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 typename iterator_traits<_InputIterator>::difference_type count(_InputIterator __first, _InputIterator __last, const _Tp& __value)"
  },
  {
    "label": "__r()",
    "kind": "Method",
    "detail": "Function (iterator_traits<_InputIterator>::difference_type)",
    "insertText": "__r(0)"
  }
]