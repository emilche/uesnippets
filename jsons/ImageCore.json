[
  {
    "label": "FImage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImage"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FImageInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImageInfo"
  },
  {
    "label": "FCbObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbObject"
  },
  {
    "label": "FImageView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImageView"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FFloat16Color",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFloat16Color"
  },
  {
    "label": "FLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearColor"
  },
  {
    "label": "FFloat16",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFloat16"
  },
  {
    "label": "FImage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImage"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FFloat16Color",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFloat16Color"
  },
  {
    "label": "FLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearColor"
  },
  {
    "label": "FFloat16",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFloat16"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FFloat16Color",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFloat16Color"
  },
  {
    "label": "FLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearColor"
  },
  {
    "label": "FFloat16",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFloat16"
  },
  {
    "label": "FSharedImage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedImage"
  },
  {
    "label": "FSharedImage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedImage"
  },
  {
    "label": "FSharedImage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedImage"
  },
  {
    "label": "FMipMapImage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMipMapImage"
  },
  {
    "label": "FMipInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMipInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "GetBytesPerPixel()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetBytesPerPixel(Type Format)"
  },
  {
    "label": "GetNameView()",
    "kind": "Method",
    "detail": "Function (FUtf8StringView)",
    "insertText": "GetNameView(Type Format)"
  },
  {
    "label": "GetFormatFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFormatFromString(FUtf8StringView InString, Type& OutFormat)"
  },
  {
    "label": "IsHDR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHDR(Type Format)"
  },
  {
    "label": "HasAlphaChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAlphaChannel(Type Format)"
  },
  {
    "label": "GetOnePixelLinear()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetOnePixelLinear(const void * PixelData,Type Format,EGammaSpace Gamma)"
  },
  {
    "label": "GetOnePixelLinear()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetOnePixelLinear(PixelData,Format,bSRGB ? EGammaSpace::sRGB : EGammaSpace::Linear)"
  },
  {
    "label": "ImageInfoFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImageInfoFromCompactBinary(const FCbObject& InObject)"
  },
  {
    "label": "FImage()",
    "kind": "Method",
    "detail": "Function (IMAGECORE_API)",
    "insertText": "FImage(int32 InSizeX, int32 InSizeY, int32 InNumSlices, ERawImageFormat::Type InFormat, EGammaSpace InGammaSpace)"
  },
  {
    "label": "FreeData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeData(bool bAsyncDetached)"
  },
  {
    "label": "Swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Swap(FImage & Other)"
  },
  {
    "label": "ChangeFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeFormat(ERawImageFormat::Type DestFormat, EGammaSpace DestGammaSpace)"
  },
  {
    "label": "TransformToWorkingColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformToWorkingColorSpace(const FVector2d& SourceRedChromaticity, const FVector2d& SourceGreenChromaticity, const FVector2d& SourceBlueChromaticity, const FVector2d& SourceWhiteChromaticity, UE::Color::EChromaticAdaptationMethod Method, double EqualityTolerance = 1.e-7)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(int32 InSizeX, int32 InSizeY, int32 InNumSlices, ERawImageFormat::Type InFormat, EGammaSpace InGammaSpace)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(int32 InSizeX, int32 InSizeY, ERawImageFormat::Type InFormat, EGammaSpace InGammaSpace)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FImageInfo & Info)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(ERawImageFormat::Type InFormat, EGammaSpace InGammaSpace)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(int32 MipZeroWidth, int32 MipZeroHeight, int32 NumMips, ERawImageFormat::Type InFormat, EGammaSpace InGammaSpace)"
  },
  {
    "label": "CopyTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyTo(FMipMapImage& DestImage, ERawImageFormat::Type DestFormat, EGammaSpace DestGammaSpace)"
  },
  {
    "label": "ChangeFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeFormat(ERawImageFormat::Type DestFormat, EGammaSpace DestGammaSpace)"
  },
  {
    "label": "ImageParallelForComputeNumJobsForPixels()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ImageParallelForComputeNumJobsForPixels(int64 & OutNumPixelsPerJob,int64 NumPixels)"
  },
  {
    "label": "ImageParallelForComputeNumJobsForRows()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ImageParallelForComputeNumJobsForRows(int32 & OutNumItemsPerJob,int64 SizeX,int64 SizeY)"
  },
  {
    "label": "CopyImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyImage(const FImageView & SrcImage,const FImageView & DestImage)"
  },
  {
    "label": "CopyImageRGBABGRA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyImageRGBABGRA(const FImageView & SrcImage,const FImageView & DestImage)"
  },
  {
    "label": "CopyImageTo2U16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyImageTo2U16(const FImageView & SrcImage,const FImageView & DestImage)"
  },
  {
    "label": "TransposeImageRGBABGRA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransposeImageRGBABGRA(const FImageView & Image)"
  },
  {
    "label": "SanitizeFloat16AndSetAlphaOpaqueForBC6H()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SanitizeFloat16AndSetAlphaOpaqueForBC6H(const FImageView & InOutImage)"
  },
  {
    "label": "DetectAlphaChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DetectAlphaChannel(const FImageView & InImage)"
  },
  {
    "label": "SetAlphaOpaque()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlphaOpaque(const FImageView & InImage)"
  },
  {
    "label": "ResizeTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeTo(const FImageView & SourceImage,FImage& DestImage, int32 DestSizeX, int32 DestSizeY, ERawImageFormat::Type DestFormat, EGammaSpace DestGammaSpace)"
  },
  {
    "label": "ComputeChannelLinearMinMax()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeChannelLinearMinMax(const FImageView & InImage, FLinearColor & OutMin, FLinearColor & OutMax)"
  },
  {
    "label": "ScaleChannelsSoMinMaxIsInZeroToOne()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ScaleChannelsSoMinMaxIsInZeroToOne(const FImageView & ImageToModify)"
  },
  {
    "label": "ComputeImageLinearAverage()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "ComputeImageLinearAverage(const FImageView & Image)"
  },
  {
    "label": "TransformToWorkingColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformToWorkingColorSpace(const FImageView& InLinearImage, const FVector2d& SourceRedChromaticity, const FVector2d& SourceGreenChromaticity, const FVector2d& SourceBlueChromaticity, const FVector2d& SourceWhiteChromaticity, UE::Color::EChromaticAdaptationMethod Method, double EqualityTolerance = 1.e-7)"
  },
  {
    "label": "ResizeImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeImage(const FImageView & SourceImage,const FImageView & DestImage, EResizeImageFilter Filter = EResizeImageFilter::Default)"
  },
  {
    "label": "ResizeImageAllocDest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeImageAllocDest(const FImageView & SourceImage,FImage & DestImage,int32 DestSizeX, int32 DestSizeY, ERawImageFormat::Type DestFormat, EGammaSpace DestGammaSpace, EResizeImageFilter Filter = EResizeImageFilter::Default)"
  },
  {
    "label": "ResizeImageAllocDest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeImageAllocDest(const FImageView & SourceImage,FImage & DestImage,int32 DestSizeX, int32 DestSizeY, EResizeImageFilter Filter = EResizeImageFilter::Default)"
  },
  {
    "label": "ResizeImageInPlace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeImageInPlace(FImage & Image,int32 DestSizeX, int32 DestSizeY, ERawImageFormat::Type DestFormat, EGammaSpace DestGammaSpace, EResizeImageFilter Filter = EResizeImageFilter::Default)"
  },
  {
    "label": "ResizeImageInPlace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeImageInPlace(FImage & Image,int32 DestSizeX, int32 DestSizeY, EResizeImageFilter Filter = EResizeImageFilter::Default)"
  }
]