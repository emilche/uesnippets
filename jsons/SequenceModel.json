[
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FEditorViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewModel"
  },
  {
    "label": "FSequenceModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequenceModel"
  },
  {
    "label": "FSequencerEditorViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerEditorViewModel"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / SharedPointer . h \" # include \" Containers / SortedMap . h \" # include \" Misc / Guid . h \" # include \" Delegates / DelegateCombinations . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" MovieSceneSequenceID . h \" # include \" EventHandlers / ISignedObjectEventHandler . h \" # include \" SequencerCoreFwd . h \" # include \" MVVM / ViewModels / ViewModel . h \" # include \" MVVM / Extensions / IOutlinerExtension . h \" # include \" MVVM / Extensions / IGeometryExtension . h \" # include \" MVVM / Extensions / ISortableExtension . h \" # include \" MVVM / Extensions / ICurveEditorTreeItemExtension . h \" class ISequencer ; class FSequencer ; class FCurveEditor ; class UMovieScene ; class UMovieSceneSequence ; namespace UE { namespace Sequencer { class FEditorViewModel ; class FSequenceModel ; class FSequencerEditorViewModel ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnInitializeSequenceModel, TSharedPtr<FEditorViewModel>, TSharedPtr<FSequenceModel>)"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (class FSequenceModel : public FViewModel,public ISortableExtension,public IOutlinerDropTargetOutlinerExtension,public UE::MovieScene::ISignedObjectEventHandler { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FSequenceModel, FViewModel, ISortableExtension, IOutlinerDropTargetOutlinerExtension)"
  },
  {
    "label": "FSequenceModel()",
    "kind": "Method",
    "detail": "Function (FOnInitializeSequenceModel CreateExtensionsEvent ;)",
    "insertText": "FSequenceModel(TWeakPtr<FSequencerEditorViewModel> InEditorViewModel)"
  },
  {
    "label": "InitializeExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeExtensions()"
  },
  {
    "label": "GetSequenceID()",
    "kind": "Method",
    "detail": "Function (FMovieSceneSequenceID)",
    "insertText": "GetSequenceID()"
  },
  {
    "label": "GetSequence()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSequence*)",
    "insertText": "GetSequence()"
  },
  {
    "label": "GetMovieScene()",
    "kind": "Method",
    "detail": "Function (UMovieScene*)",
    "insertText": "GetMovieScene()"
  },
  {
    "label": "SetSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSequence(UMovieSceneSequence* InSequence, FMovieSceneSequenceID InSequenceID)"
  },
  {
    "label": "GetEditor()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSequencerEditorViewModel>)",
    "insertText": "GetEditor()"
  },
  {
    "label": "GetSequencer()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISequencer>)",
    "insertText": "GetSequencer()"
  },
  {
    "label": "GetSequencerImpl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSequencer>)",
    "insertText": "GetSequencerImpl()"
  },
  {
    "label": "GetBottomSpacer()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FViewModel>)",
    "insertText": "GetBottomSpacer()"
  },
  {
    "label": "OnModifiedIndirectly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModifiedIndirectly(UMovieSceneSignedObject*)"
  },
  {
    "label": "OnModifiedDirectly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModifiedDirectly(UMovieSceneSignedObject*)"
  },
  {
    "label": "SortChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortChildren()"
  },
  {
    "label": "GetSortingKey()",
    "kind": "Method",
    "detail": "Function (FSortingKey)",
    "insertText": "GetSortingKey()"
  },
  {
    "label": "SetCustomOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomOrder(int32 InCustomOrder)"
  },
  {
    "label": "CanAcceptDrop()",
    "kind": "Method",
    "detail": "Function (TOptional<EItemDropZone>)",
    "insertText": "CanAcceptDrop(const FViewModelPtr& TargetModel, const FDragDropEvent& DragDropEvent, EItemDropZone InItemDropZone)"
  },
  {
    "label": "PerformDrop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformDrop(const FViewModelPtr& TargetModel, const FDragDropEvent& DragDropEvent, EItemDropZone InItemDropZone)"
  }
]