[
  {
    "label": "FEarlyReflectionsFastSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEarlyReflectionsFastSettings"
  },
  {
    "label": "FEarlyReflectionsFast",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEarlyReflectionsFast"
  },
  {
    "label": "FEarlyReflectionsFastSettings()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DSP / BufferVectorOperations . h \" # include \" DSP / IntegerDelay . h \" # include \" DSP / LongDelayAPF . h \" # include \" DSP / BufferOnePoleLPF . h \" # include \" DSP / FeedbackDelayNetwork . h \" namespace Audio { struct FEarlyReflectionsFastSettings { float Gain ; float PreDelayMsec ; float Bandwidth ; float Decay ; float Absorption ;)",
    "insertText": "FEarlyReflectionsFastSettings()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FEarlyReflectionsFastSettings& Other)"
  },
  {
    "label": "FEarlyReflectionsFast()",
    "kind": "Method",
    "detail": "Function (} ; class FEarlyReflectionsFast { public : const float MaxGain ; const float MinGain ; const float MaxPreDelay ; const float MinPreDelay ; const float MaxBandwidth ; const float MinBandwidth ; const float MaxDecay ; const float MinDecay ; const float MaxAbsorption ; const float MinAbsorption ; const FEarlyReflectionsFastSettings DefaultSettings ;)",
    "insertText": "FEarlyReflectionsFast(float InSampleRate, int32 InMaxNumInternalBufferSamples, const FEarlyReflectionsFastSettings& InSettings=DefaultSettings)"
  },
  {
    "label": "FEarlyReflectionsFast()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FEarlyReflectionsFast()"
  },
  {
    "label": "SetSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSettings(const FEarlyReflectionsFastSettings& InSettings)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const FAlignedFloatBuffer& InSamples, const int32 InNumChannels, FAlignedFloatBuffer& OutLeftSamples, FAlignedFloatBuffer& OutRightSamples)"
  },
  {
    "label": "FlushAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAudio()"
  },
  {
    "label": "ClampSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClampSettings(FEarlyReflectionsFastSettings& InOutSettings)"
  },
  {
    "label": "ApplySettings()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ApplySettings()"
  }
]