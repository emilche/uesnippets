[
  {
    "label": "SMessageLogMessageListRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMessageLogMessageListRow"
  },
  {
    "label": "IMessageToken",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageToken"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" InputCoreTypes . h \" # include \" Logging / TokenizedMessage . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / SBoxPanel . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableRow . h \" # if WITH_EDITOR # include \" IDocumentation . h \" # include \" Interfaces / IMainFrameModule . h \" # endif # define LOCTEXT_NAMESPACE \" SMessageLogMessageListRow \" class SMessageLogMessageListRow : public STableRow<TSharedPtr<FTokenizedMessage>> { public :)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnTokenClicked, TSharedPtr<FTokenizedMessage>, const TSharedRef<class IMessageToken>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnMessageClicked, TSharedPtr<FTokenizedMessage>)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "SLATE_BEGIN_ARGS(SMessageLogMessageListRow) : _Message() , _OnTokenClicked() , _OnMessageDoubleClicked()"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TSharedPtr<FTokenizedMessage>, Message) SLATE_EVENT(FOnTokenClicked, OnTokenClicked) SLATE_EVENT(FOnMessageClicked, OnMessageDoubleClicked) SLATE_END_ARGS() void Construct( const FArguments& InArgs, const TSharedRef< STableViewBase >& InOwnerTableView)"
  },
  {
    "label": "GenerateWidget()",
    "kind": "Method",
    "detail": "Function (public : TSharedRef<SWidget>)",
    "insertText": "GenerateWidget()"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDoubleClick(const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply HandledReply = STableRow<TSharedPtr<FTokenizedMessage>)",
    "insertText": "OnMouseButtonDoubleClick(InMyGeometry, InMouseEvent)"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnMessageDoubleClicked .)",
    "insertText": "ExecuteIfBound(Message)"
  },
  {
    "label": "Handled()",
    "kind": "Method",
    "detail": "Function (HandledReply =)",
    "insertText": "Handled()"
  },
  {
    "label": "CreateHyperlink()",
    "kind": "Method",
    "detail": "Function (} return HandledReply ; } protected : TSharedRef<SWidget>)",
    "insertText": "CreateHyperlink(const TSharedRef<IMessageToken>& InMessageToken, const FText& InToolTip = FText())"
  },
  {
    "label": "CreateMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateMessage(const TSharedRef<SHorizontalBox>& InHorzBox, const TSharedRef<IMessageToken>& InMessageToken, float Padding)"
  },
  {
    "label": "GetActionLinkVisibility()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "GetActionLinkVisibility(TSharedRef<FActionToken> ActionToken)"
  },
  {
    "label": "GetActionLinkEnable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetActionLinkEnable(TSharedRef<FActionToken> ActionToken)"
  },
  {
    "label": "HandleActionHyperlinkNavigate()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HandleActionHyperlinkNavigate(TSharedRef<FActionToken> ActionToken)"
  },
  {
    "label": "ExecuteAction()",
    "kind": "Method",
    "detail": "Function (ActionToken ->)",
    "insertText": "ExecuteAction()"
  },
  {
    "label": "HandleHyperlinkNavigate()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HandleHyperlinkNavigate(TSharedRef<IMessageToken> InMessageToken)"
  },
  {
    "label": "GetOnMessageTokenActivated()",
    "kind": "Method",
    "detail": "Function (InMessageToken ->)",
    "insertText": "GetOnMessageTokenActivated().ExecuteIfBound(InMessageToken)"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnTokenClicked .)",
    "insertText": "ExecuteIfBound(Message, InMessageToken)"
  },
  {
    "label": "HandleTokenButtonClicked()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "HandleTokenButtonClicked(TSharedRef<IMessageToken> InMessageToken)"
  },
  {
    "label": "HandleDocsHyperlinkNavigate()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR void)",
    "insertText": "HandleDocsHyperlinkNavigate(FString DocumentationLink)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Get()->Open(DocumentationLink, FDocumentationSourceInfo(TEXT(\"msg_log\")))"
  },
  {
    "label": "HandleTutorialHyperlinkNavigate()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HandleTutorialHyperlinkNavigate(FString TutorialAssetName)"
  },
  {
    "label": "IMainFrameModule()",
    "kind": "Method",
    "detail": "Function (IMainFrameModule& MainFrameModule = FModuleManager::GetModuleChecked<)",
    "insertText": "IMainFrameModule(TEXT(\"MainFrame\"))"
  },
  {
    "label": "BroadcastMainFrameRequestResource()",
    "kind": "Method",
    "detail": "Function (MainFrameModule .)",
    "insertText": "BroadcastMainFrameRequestResource(\"Tutorial\", TutorialAssetName)"
  }
]