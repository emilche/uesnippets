[
  {
    "label": "UInterchangeBaseNodeContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeBaseNodeContainer"
  },
  {
    "label": "UInterchangeTranslatorSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeTranslatorSettings"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UInterchangeTranslatorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeTranslatorBase"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" InterchangeResult . h \" # include \" InterchangeResultsContainer . h \" # include \" InterchangeSourceData . h \" # include \" Misc / AssertionMacros . h \" # include \" Nodes / InterchangeBaseNodeContainer . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" InterchangeTranslatorBase . generated . h \" class UInterchangeBaseNodeContainer ;)",
    "insertText": "UCLASS(BlueprintType, Blueprintable, editinlinenew, Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintCallable, Category = \"Interchange\") INTERCHANGECORE_API void LoadSettings()"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (None = 0 x0,Textures = 0 x1<<0,Materials = 0 x1<<1,Meshes = 0 x1<<2,Animations = 0 x1<<3,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EInterchangeTranslatorAssetType)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(BlueprintType, Blueprintable, Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: INTERCHANGECORE_API virtual bool CanImportSourceData(const UInterchangeSourceData* InSourceData)"
  },
  {
    "label": "IsThreadSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsThreadSafe()"
  },
  {
    "label": "GetSupportedAssetTypes()",
    "kind": "Method",
    "detail": "Function (} EInterchangeTranslatorAssetType)",
    "insertText": "GetSupportedAssetTypes() const PURE_VIRTUAL(UInterchangeTranslatorBase::GetSupportedAssetTypes, return EInterchangeTranslatorAssetType::None;)"
  },
  {
    "label": "GetSupportedFormats()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetSupportedFormats() const PURE_VIRTUAL(UInterchangeTranslatorBase::GetSupportedExtensions, return TArray<FString>();)"
  },
  {
    "label": "Translate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Translate(UInterchangeBaseNodeContainer& BaseNodeContainer)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T* Item = Results -> Add<)",
    "insertText": "T()"
  },
  {
    "label": "GetFilename()",
    "kind": "Method",
    "detail": "Function (Item -> SourceAssetName = SourceData ->)",
    "insertText": "GetFilename()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Results ->)",
    "insertText": "Add(Item)"
  },
  {
    "label": "SetResultsContainer()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "SetResultsContainer(UInterchangeResultsContainer* InResults)"
  },
  {
    "label": "GetSourceData()",
    "kind": "Method",
    "detail": "Function (Results = InResults ; } const UInterchangeSourceData*)",
    "insertText": "GetSourceData()"
  }
]