[
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FSkeletonRemapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletonRemapping"
  },
  {
    "label": "FSkeletonRemapping()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Animation / AnimTypes . h \" class USkeleton ; struct FSkeletonRemapping {)",
    "insertText": "FSkeletonRemapping()"
  },
  {
    "label": "FSkeletonRemapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSkeletonRemapping(const USkeleton* InSourceSkeleton, const USkeleton* InTargetSkeleton)"
  },
  {
    "label": "GetSourceSkeleton()",
    "kind": "Method",
    "detail": "Function (const TWeakObjectPtr<const USkeleton>&)",
    "insertText": "GetSourceSkeleton()"
  },
  {
    "label": "GetTargetSkeletonBoneIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetTargetSkeletonBoneIndex(int32 SourceSkeletonBoneIndex)"
  },
  {
    "label": "GetSourceSkeletonBoneIndex()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetSourceSkeletonBoneIndex(int32 TargetSkeletonBoneIndex)"
  },
  {
    "label": "RetargetBoneTransformToTargetSkeleton()",
    "kind": "Method",
    "detail": "Function (} FTransform)",
    "insertText": "RetargetBoneTransformToTargetSkeleton(int32 TargetSkeletonBoneIndex, const FTransform& SourceTransform)"
  },
  {
    "label": "RetargetBoneTranslationToTargetSkeleton()",
    "kind": "Method",
    "detail": "Function (} FVector)",
    "insertText": "RetargetBoneTranslationToTargetSkeleton(int32 TargetSkeletonBoneIndex, const FVector& SourceTranslation)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const TTuple<FQuat,FQuat>& QQ = RetargetingTable [ TargetSkeletonBoneIndex ] ; return QQ .)",
    "insertText": "Get().RotateVector(SourceTranslation)"
  },
  {
    "label": "RetargetBoneRotationToTargetSkeleton()",
    "kind": "Method",
    "detail": "Function (} FQuat)",
    "insertText": "RetargetBoneRotationToTargetSkeleton(int32 TargetSkeletonBoneIndex, const FQuat& SourceRotation)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const TTuple<FQuat,FQuat>& QQ = RetargetingTable [ TargetSkeletonBoneIndex ] ; return QQ .)",
    "insertText": "Get() * SourceRotation * QQ.Get<1>()"
  },
  {
    "label": "RetargetAdditiveTransformToTargetSkeleton()",
    "kind": "Method",
    "detail": "Function (} FTransform)",
    "insertText": "RetargetAdditiveTransformToTargetSkeleton(int32 TargetSkeletonBoneIndex, const FTransform& SourceTransform)"
  },
  {
    "label": "RetargetAdditiveTranslationToTargetSkeleton()",
    "kind": "Method",
    "detail": "Function (} FVector)",
    "insertText": "RetargetAdditiveTranslationToTargetSkeleton(int32 TargetSkeletonBoneIndex, const FVector& SourceTranslation)"
  },
  {
    "label": "RetargetAdditiveRotationToTargetSkeleton()",
    "kind": "Method",
    "detail": "Function (} FQuat)",
    "insertText": "RetargetAdditiveRotationToTargetSkeleton(int32 TargetSkeletonBoneIndex, const FQuat& SourceRotation)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const TTuple<FQuat,FQuat>& QQ = RetargetingTable [ TargetSkeletonBoneIndex ] ; return QQ .)",
    "insertText": "Get() * SourceRotation * QQ.Get<0>().Inverse()"
  },
  {
    "label": "RegenerateMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegenerateMapping()"
  },
  {
    "label": "RequiresReferencePoseRetarget()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RequiresReferencePoseRetarget()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GenerateMapping()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "GenerateMapping()"
  }
]