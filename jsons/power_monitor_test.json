[
  {
    "label": "PowerMonitorTestSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PowerMonitorTestSource"
  },
  {
    "label": "ScopedPowerMonitorTestSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedPowerMonitorTestSource"
  },
  {
    "label": "PowerMonitorTestObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PowerMonitorTestObserver"
  },
  {
    "label": "ScopedPowerMonitorTestSource()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_POWER_MONITOR_TEST_H_ # define BASE_TEST_POWER_MONITOR_TEST_H_ # include \" base / power_monitor / power_monitor . h \" # include \" base / power_monitor / power_monitor_source . h \" # include \" base / power_monitor / power_observer . h \" namespace base { namespace test { class PowerMonitorTestSource ; class ScopedPowerMonitorTestSource { public :)",
    "insertText": "ScopedPowerMonitorTestSource()"
  },
  {
    "label": "ScopedPowerMonitorTestSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedPowerMonitorTestSource(const ScopedPowerMonitorTestSource&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScopedPowerMonitorTestSource&)",
    "insertText": "operator(const ScopedPowerMonitorTestSource&)"
  },
  {
    "label": "GetCurrentThermalState()",
    "kind": "Method",
    "detail": "Function (PowerThermalObserver::DeviceThermalState)",
    "insertText": "GetCurrentThermalState()"
  },
  {
    "label": "IsOnBatteryPower()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOnBatteryPower()"
  },
  {
    "label": "Suspend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Suspend()"
  },
  {
    "label": "Resume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resume()"
  },
  {
    "label": "SetOnBatteryPower()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnBatteryPower(bool on_battery_power)"
  },
  {
    "label": "GenerateSuspendEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateSuspendEvent()"
  },
  {
    "label": "GenerateResumeEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateResumeEvent()"
  },
  {
    "label": "GeneratePowerStateEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GeneratePowerStateEvent(bool on_battery_power)"
  },
  {
    "label": "GenerateThermalThrottlingEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateThermalThrottlingEvent(PowerThermalObserver::DeviceThermalState new_thermal_state)"
  },
  {
    "label": "GenerateSpeedLimitEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateSpeedLimitEvent(int speed_limit)"
  },
  {
    "label": "PowerMonitorTestObserver()",
    "kind": "Method",
    "detail": "Function (private : PowerMonitorTestSource* power_monitor_test_source_ = nullptr ; } ; class PowerMonitorTestObserver : public PowerSuspendObserver,public PowerThermalObserver,public PowerStateObserver { public :)",
    "insertText": "PowerMonitorTestObserver()"
  },
  {
    "label": "OnPowerStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPowerStateChange(bool on_battery_power)"
  },
  {
    "label": "OnSuspend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSuspend()"
  },
  {
    "label": "OnResume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResume()"
  },
  {
    "label": "OnThermalStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnThermalStateChange(PowerThermalObserver::DeviceThermalState new_state)"
  },
  {
    "label": "OnSpeedLimitChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSpeedLimitChange(int speed_limit)"
  },
  {
    "label": "power_state_changes()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "power_state_changes()"
  }
]