[
  {
    "label": "IInDataStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInDataStream"
  },
  {
    "label": "TRACEANALYSIS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEANALYSIS_API"
  },
  {
    "label": "FTraceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTraceData"
  },
  {
    "label": "GetStoreDir()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" HAL / Platform . h \" # include \" Templates / UniquePtr . h \" # include \" Trace / DataStream . h \" namespace UE { namespace Trace { class IInDataStream ; class FStoreClient { public : struct FStatus { FUtf8StringView)",
    "insertText": "GetStoreDir()"
  },
  {
    "label": "GetRecorderPort()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetRecorderPort()"
  },
  {
    "label": "GetStorePort()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetStorePort()"
  },
  {
    "label": "GetSponsored()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSponsored()"
  },
  {
    "label": "GetChangeSerial()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetChangeSerial()"
  },
  {
    "label": "GetSettingsSerial()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSettingsSerial()"
  },
  {
    "label": "GetWatchDirectories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetWatchDirectories(TArray<FString>& OutDirs)"
  },
  {
    "label": "GetMajorVersion()",
    "kind": "Method",
    "detail": "Function (} ; struct FVersion { uint32)",
    "insertText": "GetMajorVersion()"
  },
  {
    "label": "GetMinorVersion()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetMinorVersion()"
  },
  {
    "label": "GetConfiguration()",
    "kind": "Method",
    "detail": "Function (FUtf8StringView)",
    "insertText": "GetConfiguration()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} ; struct FTraceInfo { FUtf8StringView)",
    "insertText": "GetName()"
  },
  {
    "label": "GetId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetId()"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetSize()"
  },
  {
    "label": "GetTimestamp()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetTimestamp()"
  },
  {
    "label": "GetUri()",
    "kind": "Method",
    "detail": "Function (FUtf8StringView)",
    "insertText": "GetUri()"
  },
  {
    "label": "FStoreClient()",
    "kind": "Method",
    "detail": "Function (} ; struct FTraceData : public TUniquePtr<IInDataStream> { using TUniquePtr<IInDataStream>::TUniquePtr ; } ; ~)",
    "insertText": "FStoreClient()"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (FStoreClient*)",
    "insertText": "Connect(const TCHAR* Host, uint32 Port = 0)"
  },
  {
    "label": "Reconnect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Reconnect(const TCHAR* Host, uint32 Port)"
  },
  {
    "label": "delete()",
    "kind": "Method",
    "detail": "Function (void operator)",
    "insertText": "delete(void* Addr)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetStoreAddress()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetStoreAddress()"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (const FStatus*)",
    "insertText": "GetStatus()"
  },
  {
    "label": "GetVersion()",
    "kind": "Method",
    "detail": "Function (const FVersion*)",
    "insertText": "GetVersion()"
  },
  {
    "label": "GetTraceCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTraceCount()"
  },
  {
    "label": "GetTraceInfo()",
    "kind": "Method",
    "detail": "Function (const FTraceInfo*)",
    "insertText": "GetTraceInfo(uint32 Index)"
  },
  {
    "label": "GetTraceInfoById()",
    "kind": "Method",
    "detail": "Function (const FTraceInfo*)",
    "insertText": "GetTraceInfoById(uint32 Id)"
  },
  {
    "label": "ReadTrace()",
    "kind": "Method",
    "detail": "Function (FTraceData)",
    "insertText": "ReadTrace(uint32 Id)"
  },
  {
    "label": "SetStoreDirectories()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetStoreDirectories(const TCHAR* StoreDir, const TArray<FString>& AddWatchDirs, const TArray<FString>& RemoveWatchDirs)"
  },
  {
    "label": "SetSponsored()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSponsored(bool bSponsored)"
  },
  {
    "label": "GetTraceId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTraceId()"
  },
  {
    "label": "GetIpAddress()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetIpAddress()"
  },
  {
    "label": "GetControlPort()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetControlPort()"
  },
  {
    "label": "GetSessionCount()",
    "kind": "Method",
    "detail": "Function (} ; uint32)",
    "insertText": "GetSessionCount()"
  },
  {
    "label": "GetSessionInfo()",
    "kind": "Method",
    "detail": "Function (const FSessionInfo*)",
    "insertText": "GetSessionInfo(uint32 Index)"
  },
  {
    "label": "GetSessionInfoById()",
    "kind": "Method",
    "detail": "Function (const FSessionInfo*)",
    "insertText": "GetSessionInfoById(uint32 Id)"
  },
  {
    "label": "GetSessionInfoByTraceId()",
    "kind": "Method",
    "detail": "Function (const FSessionInfo*)",
    "insertText": "GetSessionInfoByTraceId(uint32 TraceId)"
  },
  {
    "label": "GetSessionInfoByGuid()",
    "kind": "Method",
    "detail": "Function (const FSessionInfo*)",
    "insertText": "GetSessionInfoByGuid(const FGuid& TraceGuid)"
  },
  {
    "label": "FStoreClient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStoreClient(const FStoreClient&)"
  },
  {
    "label": "FStoreClient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStoreClient(const FStoreClient&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const FStoreClient&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const FStoreClient&&)"
  }
]