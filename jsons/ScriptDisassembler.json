[
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "FKismetBytecodeDisassembler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetBytecodeDisassembler"
  },
  {
    "label": "FKismetBytecodeDisassembler()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Math / Quat . h \" # include \" Math / Rotator . h \" # include \" Math / Transform . h \" # include \" Math / UnrealMathSSE . h \" # include \" UObject / Script . h \" class FOutputDevice ; class UFunction ; class FKismetBytecodeDisassembler { private : TArray<uint8> Script ; FString Indents ; FOutputDevice& Ar ; public :)",
    "insertText": "FKismetBytecodeDisassembler(FOutputDevice& InAr)"
  },
  {
    "label": "DisassembleStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisassembleStructure(UFunction* Source)"
  },
  {
    "label": "DisassembleAllFunctionsInClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisassembleAllFunctionsInClasses(FOutputDevice& Ar, const FString& ClassnameSubstring)"
  },
  {
    "label": "ReadINT()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "ReadINT(int32& ScriptIndex)"
  },
  {
    "label": "ReadQWORD()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "ReadQWORD(int32& ScriptIndex)"
  },
  {
    "label": "ReadBYTE()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "ReadBYTE(int32& ScriptIndex)"
  },
  {
    "label": "ReadName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ReadName(int32& ScriptIndex)"
  },
  {
    "label": "ReadWORD()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "ReadWORD(int32& ScriptIndex)"
  },
  {
    "label": "ReadFLOAT()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ReadFLOAT(int32& ScriptIndex)"
  },
  {
    "label": "ReadFVECTOR()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ReadFVECTOR(int32& ScriptIndex)"
  },
  {
    "label": "ReadFROTATOR()",
    "kind": "Method",
    "detail": "Function (FRotator)",
    "insertText": "ReadFROTATOR(int32& ScriptIndex)"
  },
  {
    "label": "ReadFQUAT()",
    "kind": "Method",
    "detail": "Function (FQuat)",
    "insertText": "ReadFQUAT(int32& ScriptIndex)"
  },
  {
    "label": "ReadFTRANSFORM()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "ReadFTRANSFORM(int32& ScriptIndex)"
  },
  {
    "label": "ReadSkipCount()",
    "kind": "Method",
    "detail": "Function (CodeSkipSizeType)",
    "insertText": "ReadSkipCount(int32& ScriptIndex)"
  },
  {
    "label": "ReadString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ReadString(int32& ScriptIndex)"
  },
  {
    "label": "ReadString8()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ReadString8(int32& ScriptIndex)"
  },
  {
    "label": "ReadString16()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ReadString16(int32& ScriptIndex)"
  },
  {
    "label": "SerializeExpr()",
    "kind": "Method",
    "detail": "Function (EExprToken)",
    "insertText": "SerializeExpr(int32& ScriptIndex)"
  },
  {
    "label": "ProcessCommon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCommon(int32& ScriptIndex, EExprToken Opcode)"
  },
  {
    "label": "InitTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTables()"
  },
  {
    "label": "Skip()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "Skip(int32& ScriptIndex)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (ScriptIndex + =)",
    "insertText": "sizeof(T)"
  },
  {
    "label": "AddIndent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddIndent()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (Indents + =)",
    "insertText": "TEXT(\" \")"
  },
  {
    "label": "DropIndent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DropIndent()"
  },
  {
    "label": "LeftInline()",
    "kind": "Method",
    "detail": "Function (Indents .)",
    "insertText": "LeftInline(Indents.Len() - 2)"
  },
  {
    "label": "ReadPointer()",
    "kind": "Method",
    "detail": "Function (} template<T> T*)",
    "insertText": "ReadPointer(int32& ScriptIndex)"
  }
]