[
  {
    "label": "FGeometryCollectionVertexFactoryShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionVertexFactoryShaderParameters"
  },
  {
    "label": "FMeshDrawSingleShaderBindings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawSingleShaderBindings"
  },
  {
    "label": "FGeometryCollectionVertexFactory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionVertexFactory"
  },
  {
    "label": "FDataType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataType"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DynamicMeshBuilder . h \" # include \" EngineGlobals . h \" # include \" PrimitiveViewRelevance . h \" # include \" PrimitiveSceneProxy . h \" # include \" StaticMeshResources . h \" # include \" Rendering / SkinWeightVertexBuffer . h \" # include \" ShaderParameterUtils . h \")",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FGeometryCollectionVertexFactoryUniformShaderParameters, ENGINE_API) SHADER_PARAMETER(FIntVector4,VertexFetch_Parameters) SHADER_PARAMETER(uint32,LODLightmapDataIndex) SHADER_PARAMETER_SRV(Buffer<float2>, VertexFetch_TexCoordBuffer) SHADER_PARAMETER_SRV(Buffer<float>, VertexFetch_PositionBuffer) SHADER_PARAMETER_SRV(Buffer<float4>, VertexFetch_PackedTangentsBuffer) SHADER_PARAMETER_SRV(Buffer<float4>, VertexFetch_ColorComponentsBuffer) END_GLOBAL_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FGCBoneLooseParameters, ENGINE_API) SHADER_PARAMETER_SRV(Buffer<float4>, VertexFetch_BoneTransformBuffer) SHADER_PARAMETER_SRV(Buffer<float4>, VertexFetch_BonePrevTransformBuffer) SHADER_PARAMETER_SRV(Buffer<uint>, VertexFetch_BoneMapBuffer) END_GLOBAL_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "DECLARE_TYPE_LAYOUT()",
    "kind": "Method",
    "detail": "Function (class FGeometryCollectionVertexFactoryShaderParameters : public FVertexFactoryShaderParameters {)",
    "insertText": "DECLARE_TYPE_LAYOUT(FGeometryCollectionVertexFactoryShaderParameters, NonVirtual)"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Bind(const FShaderParameterMap& ParameterMap)"
  },
  {
    "label": "GetElementShaderBindings()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetElementShaderBindings(const FSceneInterface* Scene, const FSceneView* View, const FMeshMaterialShader* Shader, const EVertexInputStreamType InputStreamType, ERHIFeatureLevel::Type FeatureLevel, const FVertexFactory* VertexFactory, const FMeshBatchElement& BatchElement, class FMeshDrawSingleShaderBindings& ShaderBindings, FVertexInputStreamArray& VertexStreams)"
  },
  {
    "label": "DECLARE_VERTEX_FACTORY_TYPE_API()",
    "kind": "Method",
    "detail": "Function (} ; struct FGeometryCollectionVertexFactory : public FVertexFactory {)",
    "insertText": "DECLARE_VERTEX_FACTORY_TYPE_API(FGeometryCollectionVertexFactory, ENGINE_API)"
  },
  {
    "label": "FGeometryCollectionVertexFactory()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FGeometryCollectionVertexFactory(ERHIFeatureLevel::Type InFeatureLevel, bool EnableLooseParameter = false) : FVertexFactory(InFeatureLevel) , LooseParameterUniformBuffer(nullptr) , EnableLooseParameter(EnableLooseParameter)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (} struct FDataType : public FStaticMeshDataType { FRHIShaderResourceView* BoneTransformSRV = nullptr ; FRHIShaderResourceView* BonePrevTransformSRV = nullptr ; FRHIShaderResourceView* BoneMapSRV = nullptr ; } ; bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ValidateCompiledResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateCompiledResult(const FVertexFactoryType* Type, EShaderPlatform Platform, const FShaderParameterMap& ParameterMap, TArray<FString>& OutErrors)"
  },
  {
    "label": "GetPSOPrecacheVertexFetchElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPSOPrecacheVertexFetchElements(EVertexInputStreamType VertexInputStreamType, FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetData(FRHICommandListBase& RHICmdList, const FDataType& InData)"
  },
  {
    "label": "UpdateRHI()",
    "kind": "Method",
    "detail": "Function (Data = InData ;)",
    "insertText": "UpdateRHI(RHICmdList)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Copy(const FGeometryCollectionVertexFactory& Other)"
  },
  {
    "label": "ENQUEUE_RENDER_COMMAND()",
    "kind": "Method",
    "detail": "Function (FGeometryCollectionVertexFactory* VertexFactory = this ; const FDataType* DataCopy =& Other . Data ;)",
    "insertText": "ENQUEUE_RENDER_COMMAND(FGeometryCollectionVertexFactoryCopyData)( [VertexFactory, DataCopy](FRHICommandListImmediate& RHICmdList) { VertexFactory->Data = *DataCopy; })"
  },
  {
    "label": "BeginUpdateResourceRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginUpdateResourceRHI(this)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "GetPositionsSRV()",
    "kind": "Method",
    "detail": "Function (FRHIShaderResourceView*)",
    "insertText": "GetPositionsSRV()"
  },
  {
    "label": "GetLooseParameterBuffer()",
    "kind": "Method",
    "detail": "Function (} FUniformBufferRHIRef)",
    "insertText": "GetLooseParameterBuffer()"
  },
  {
    "label": "GetBoneTransformSRV()",
    "kind": "Method",
    "detail": "Function (Data . BoneTransformSRV = BoneTransformSRV ; } FRHIShaderResourceView*)",
    "insertText": "GetBoneTransformSRV()"
  },
  {
    "label": "GetBonePrevTransformSRV()",
    "kind": "Method",
    "detail": "Function (Data . BonePrevTransformSRV = BonePrevTransformSRV ; } FRHIShaderResourceView*)",
    "insertText": "GetBonePrevTransformSRV()"
  },
  {
    "label": "GetBoneMapSRV()",
    "kind": "Method",
    "detail": "Function (Data . BoneMapSRV = BoneMapSRV ; } FRHIShaderResourceView*)",
    "insertText": "GetBoneMapSRV()"
  }
]