[
  {
    "label": "OptionKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OptionKey"
  },
  {
    "label": "OptionRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OptionRegistry"
  },
  {
    "label": "ValT()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_OPTIONS_H # define LLVM_SUPPORT_OPTIONS_H # include \" llvm / ADT / DenseMap . h \" # include \" llvm / Support / CommandLine . h \" namespace llvm { namespace detail { template<ValT,Base,)",
    "insertText": "ValT(Base::*Mem)"
  },
  {
    "label": "addOption()",
    "kind": "Method",
    "detail": "Function (} class OptionRegistry { private : DenseMap<void*,cl::Option*> Options ; void)",
    "insertText": "addOption(void *Key, cl::Option *O)"
  },
  {
    "label": "OptionRegistry()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "OptionRegistry()"
  },
  {
    "label": "instance()",
    "kind": "Method",
    "detail": "Function (} OptionRegistry&)",
    "insertText": "instance()"
  },
  {
    "label": "ValT()",
    "kind": "Method",
    "detail": "Function (template<ValT,Base,)",
    "insertText": "ValT(Base::*Mem)> static void registerOption(const char *ArgStr, const char *Desc, const ValT &InitValue)"
  },
  {
    "label": "ValT()",
    "kind": "Method",
    "detail": "Function (cl::opt<ValT>* Option = new cl::opt<)",
    "insertText": "ValT(ArgStr, cl::desc(Desc), cl::Hidden, cl::init(InitValue))"
  },
  {
    "label": "instance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "instance().addOption(&detail::OptionKey<ValT, Base, Mem>::ID, Option)"
  },
  {
    "label": "ValT()",
    "kind": "Method",
    "detail": "Function (} template<ValT,Base,)",
    "insertText": "ValT(Base::*Mem)> ValT get()"
  },
  {
    "label": "find()",
    "kind": "Method",
    "detail": "Function (auto It = Options .)",
    "insertText": "find(&detail::OptionKey<ValT, Base, Mem>::ID)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(It != Options.end() && \"Option not in OptionRegistry\")"
  }
]