[
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "UMRMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMRMeshComponent"
  },
  {
    "label": "UARSessionConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UARSessionConfig"
  },
  {
    "label": "UARTrackedGeometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UARTrackedGeometry"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FARSessionPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARSessionPayload"
  },
  {
    "label": "FARPlaneUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARPlaneUpdatePayload"
  },
  {
    "label": "FARPointUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARPointUpdatePayload"
  },
  {
    "label": "FARFaceUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARFaceUpdatePayload"
  },
  {
    "label": "FARImageUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARImageUpdatePayload"
  },
  {
    "label": "FARQRCodeUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARQRCodeUpdatePayload"
  },
  {
    "label": "FARPoseUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARPoseUpdatePayload"
  },
  {
    "label": "FAREnvironmentProbeUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAREnvironmentProbeUpdatePayload"
  },
  {
    "label": "FARObjectUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARObjectUpdatePayload"
  },
  {
    "label": "FARMeshUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARMeshUpdatePayload"
  },
  {
    "label": "FARGeoAnchorUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARGeoAnchorUpdatePayload"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "SetFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFlag(EARSessionConfigFlags InFlag)"
  },
  {
    "label": "FromSessionConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FromSessionConfig(const UARSessionConfig& InConfig)"
  },
  {
    "label": "CalculateVertexNormals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateVertexNormals(TArray<FAccumulatedNormal>& AccumulatedNormals, const TArray<VertexType>& Vertices, const TArray<MRMESH_INDEX_TYPE>& Indices, TArray<FPackedNormal>& OutTangentData, FVector MeshCenter = FVector::ZeroVector, float PositionScale = 1.f)"
  },
  {
    "label": "UARComponent()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UARComponent()"
  },
  {
    "label": "SetNativeID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNativeID(FGuid NativeID)"
  },
  {
    "label": "ReceiveRemove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveRemove()"
  },
  {
    "label": "UpdateVisualization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisualization()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(UARTrackedGeometry* TrackedGeometry)"
  },
  {
    "label": "OnRep_Payload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_Payload()"
  },
  {
    "label": "RemoveMeshComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMeshComponent(UARTrackedGeometry* TrackedGeometry)"
  },
  {
    "label": "ManageMeshComponentForDebugMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ManageMeshComponentForDebugMode(bool bDebugModeEnabled, const FARSessionPayload& SessionPayload)"
  },
  {
    "label": "ReceiveAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAdd(const FARPlaneUpdatePayload& Payload)"
  },
  {
    "label": "ReceiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUpdate(const FARPlaneUpdatePayload& Payload)"
  },
  {
    "label": "SetPlaneComponentDebugMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaneComponentDebugMode(EPlaneComponentDebugMode NewDebugMode)"
  },
  {
    "label": "SetObjectClassificationDebugColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectClassificationDebugColors(const TMap<EARObjectClassification, FLinearColor>& InColors)"
  },
  {
    "label": "ServerUpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUpdatePayload(const FARPlaneUpdatePayload& NewPayload)"
  },
  {
    "label": "GetDebugMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDebugMode()"
  },
  {
    "label": "ReceiveAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAdd(const FARPointUpdatePayload& Payload)"
  },
  {
    "label": "ReceiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUpdate(const FARPointUpdatePayload& Payload)"
  },
  {
    "label": "ServerUpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUpdatePayload(const FARPointUpdatePayload& NewPayload)"
  },
  {
    "label": "ReceiveAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAdd(const FARFaceUpdatePayload& Payload)"
  },
  {
    "label": "ReceiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUpdate(const FARFaceUpdatePayload& Payload)"
  },
  {
    "label": "SetFaceComponentDebugMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFaceComponentDebugMode(EFaceComponentDebugMode NewDebugMode)"
  },
  {
    "label": "ServerUpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUpdatePayload(const FARFaceUpdatePayload& NewPayload)"
  },
  {
    "label": "GetDebugMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDebugMode()"
  },
  {
    "label": "ReceiveAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAdd(const FARImageUpdatePayload& Payload)"
  },
  {
    "label": "ReceiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUpdate(const FARImageUpdatePayload& Payload)"
  },
  {
    "label": "SetImageComponentDebugMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetImageComponentDebugMode(EImageComponentDebugMode NewDebugMode)"
  },
  {
    "label": "ServerUpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUpdatePayload(const FARImageUpdatePayload& NewPayload)"
  },
  {
    "label": "GetDebugMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDebugMode()"
  },
  {
    "label": "ReceiveAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAdd(const FARQRCodeUpdatePayload& Payload)"
  },
  {
    "label": "ReceiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUpdate(const FARQRCodeUpdatePayload& Payload)"
  },
  {
    "label": "SetQRCodeComponentDebugMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQRCodeComponentDebugMode(EQRCodeComponentDebugMode NewDebugMode)"
  },
  {
    "label": "ServerUpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUpdatePayload(const FARQRCodeUpdatePayload& NewPayload)"
  },
  {
    "label": "GetDebugMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDebugMode()"
  },
  {
    "label": "ReceiveAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAdd(const FARPoseUpdatePayload& Payload)"
  },
  {
    "label": "ReceiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUpdate(const FARPoseUpdatePayload& Payload)"
  },
  {
    "label": "SetPoseComponentDebugMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPoseComponentDebugMode(EPoseComponentDebugMode NewDebugMode)"
  },
  {
    "label": "ServerUpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUpdatePayload(const FARPoseUpdatePayload& NewPayload)"
  },
  {
    "label": "GetDebugMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDebugMode()"
  },
  {
    "label": "ReceiveAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAdd(const FAREnvironmentProbeUpdatePayload& Payload)"
  },
  {
    "label": "ReceiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUpdate(const FAREnvironmentProbeUpdatePayload& Payload)"
  },
  {
    "label": "ServerUpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUpdatePayload(const FAREnvironmentProbeUpdatePayload& NewPayload)"
  },
  {
    "label": "ReceiveAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAdd(const FARObjectUpdatePayload& Payload)"
  },
  {
    "label": "ReceiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUpdate(const FARObjectUpdatePayload& Payload)"
  },
  {
    "label": "ServerUpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUpdatePayload(const FARObjectUpdatePayload& NewPayload)"
  },
  {
    "label": "ReceiveAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAdd(const FARMeshUpdatePayload& Payload)"
  },
  {
    "label": "ReceiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUpdate(const FARMeshUpdatePayload& Payload)"
  },
  {
    "label": "ServerUpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUpdatePayload(const FARMeshUpdatePayload& NewPayload)"
  },
  {
    "label": "SetGeoAnchorComponentDebugMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGeoAnchorComponentDebugMode(EGeoAnchorComponentDebugMode NewDebugMode)"
  },
  {
    "label": "ReceiveAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAdd(const FARGeoAnchorUpdatePayload& Payload)"
  },
  {
    "label": "ReceiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUpdate(const FARGeoAnchorUpdatePayload& Payload)"
  },
  {
    "label": "ServerUpdatePayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUpdatePayload(const FARGeoAnchorUpdatePayload& NewPayload)"
  },
  {
    "label": "GetDebugMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDebugMode()"
  }
]