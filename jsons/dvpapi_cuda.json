[
  {
    "label": "dvpInitCUDAContext()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpInitCUDAContext(uint32_t flags)"
  },
  {
    "label": "dvpCloseCUDAContext()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpCloseCUDAContext()"
  },
  {
    "label": "dvpBindToCUDACtx()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpBindToCUDACtx(DVPBufferHandle hBuf)"
  },
  {
    "label": "dvpUnbindFromCUDACtx()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpUnbindFromCUDACtx(DVPBufferHandle hBuf)"
  },
  {
    "label": "dvpCreateGPUCUDAArray()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpCreateGPUCUDAArray(CUarray array,\n                      DVPBufferHandle *bufferHandle)"
  },
  {
    "label": "dvpCreateGPUCUDADevicePtr()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpCreateGPUCUDADevicePtr(CUdeviceptr devPtr,\n                          DVPBufferHandle *bufferHandle)"
  },
  {
    "label": "dvpMapBufferWaitCUDAStream()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMapBufferWaitCUDAStream(DVPBufferHandle gpuBufferHandle,\n                           CUstream stream)"
  },
  {
    "label": "dvpMapBufferEndCUDAStream()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpMapBufferEndCUDAStream(DVPBufferHandle gpuBufferHandle,\n                          CUstream stream)"
  },
  {
    "label": "dvpGetRequiredConstantsCUDACtx()",
    "kind": "Method",
    "detail": "Function (DVPAPI_INTERFACE)",
    "insertText": "dvpGetRequiredConstantsCUDACtx(uint32_t *bufferAddrAlignment,\n                               uint32_t *bufferGPUStrideAlignment,\n                               uint32_t *semaphoreAddrAlignment,\n                               uint32_t *semaphoreAllocSize,\n                               uint32_t *semaphorePayloadOffset,\n                               uint32_t *semaphorePayloadSize)"
  }
]