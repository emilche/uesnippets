[
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "FBPVariableMetaDataEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPVariableMetaDataEntry"
  },
  {
    "label": "FDataValidationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataValidationContext"
  },
  {
    "label": "FRotationConversionCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRotationConversionCache"
  },
  {
    "label": "UBlueprintGeneratedClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintGeneratedClass"
  },
  {
    "label": "UBlueprintGeneratedClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintGeneratedClass"
  },
  {
    "label": "USimpleConstructionScript",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USimpleConstructionScript"
  },
  {
    "label": "ValidateGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateGuid()"
  },
  {
    "label": "AddChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildNode(USCS_Node* InNode, bool bAddToAllNodes = true)"
  },
  {
    "label": "RemoveChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildNode(USCS_Node* InNode, bool bRemoveFromAllNodes = true)"
  },
  {
    "label": "RemoveChildNodeAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildNodeAt(int32 ChildIndex, bool bRemoveFromAllNodes = true)"
  },
  {
    "label": "MoveChildNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveChildNodes(USCS_Node* SourceNode, int32 InsertLocation = INDEX_NONE)"
  },
  {
    "label": "IsChildOf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildOf(USCS_Node* TestParent)"
  },
  {
    "label": "PreloadChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreloadChain()"
  },
  {
    "label": "SetVariableName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVariableName(const FName& NewName, bool bRenameTemplate = true)"
  },
  {
    "label": "SetOnNameChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnNameChanged(const FSCSNodeNameChanged& OnChange)"
  },
  {
    "label": "NameWasModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NameWasModified()"
  },
  {
    "label": "SetMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMetaData(FName Key, FString Value)"
  },
  {
    "label": "RemoveMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMetaData(FName Key)"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParent(USCS_Node* InParentNode)"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParent(const USceneComponent* InParentComponent)"
  },
  {
    "label": "SaveToTransactionBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveToTransactionBuffer()"
  },
  {
    "label": "RenameComponentTemplate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameComponentTemplate(UActorComponent* ComponentTemplate, const FName& NewName)"
  }
]