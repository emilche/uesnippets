[
  {
    "label": "IClassViewerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IClassViewerFilter"
  },
  {
    "label": "IPinTypeSelectorFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPinTypeSelectorFilter"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FBlueprintNamespacePathTree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintNamespacePathTree"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "FBlueprintNamespaceHelper()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / SoftObjectPath . h \" class IClassViewerFilter ; class IPinTypeSelectorFilter ; class UBlueprint ; class UObject ; struct FAssetData ; struct FBlueprintNamespacePathTree ; class FBlueprintNamespaceHelper { public :)",
    "insertText": "FBlueprintNamespaceHelper()"
  },
  {
    "label": "AddBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBlueprint(const UBlueprint* InBlueprint)"
  },
  {
    "label": "AddNamespace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNamespace(const FString& Namespace)"
  },
  {
    "label": "AddNamespaces()",
    "kind": "Method",
    "detail": "Function (template<ContainerType> void)",
    "insertText": "AddNamespaces(const ContainerType& NamespaceList)"
  },
  {
    "label": "AddNamespace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNamespace(Namespace)"
  },
  {
    "label": "RemoveNamespace()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "RemoveNamespace(const FString& Namespace)"
  },
  {
    "label": "IsIncludedInNamespaceList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIncludedInNamespaceList(const FString& TestNamespace)"
  },
  {
    "label": "IsImportedAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImportedAsset(const FAssetData& InAssetData)"
  },
  {
    "label": "IsImportedObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImportedObject(const UObject* InObject)"
  },
  {
    "label": "IsImportedObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImportedObject(const FSoftObjectPath& InObjectPath)"
  },
  {
    "label": "GetClassViewerFilter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IClassViewerFilter>)",
    "insertText": "GetClassViewerFilter()"
  }
]