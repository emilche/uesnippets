[
  {
    "label": "WebRtcSpl_GetScalingSquare()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_GetScalingSquare(int16_t* in_vector,\n                                   size_t in_vector_length,\n                                   size_t times)"
  },
  {
    "label": "WebRtcSpl_MemSetW16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_MemSetW16(int16_t* vector,\n                         int16_t set_value,\n                         size_t vector_length)"
  },
  {
    "label": "WebRtcSpl_MemSetW32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_MemSetW32(int32_t* vector,\n                         int32_t set_value,\n                         size_t vector_length)"
  },
  {
    "label": "WebRtcSpl_MemCpyReversedOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_MemCpyReversedOrder(int16_t* out_vector,\n                                   int16_t* in_vector,\n                                   size_t vector_length)"
  },
  {
    "label": "WebRtcSpl_CopyFromEndW16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_CopyFromEndW16(const int16_t* in_vector,\n                              size_t in_vector_length,\n                              size_t samples,\n                              int16_t* out_vector)"
  },
  {
    "label": "WebRtcSpl_ZerosArrayW16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ZerosArrayW16(int16_t* vector, size_t vector_length)"
  },
  {
    "label": "WebRtcSpl_ZerosArrayW32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ZerosArrayW32(int32_t* vector, size_t vector_length)"
  },
  {
    "label": "WebRtcSpl_MaxAbsValueW16C()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_MaxAbsValueW16C(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxAbsValueW16Neon()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_MaxAbsValueW16Neon(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxAbsValueW16_mips()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_MaxAbsValueW16_mips(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxAbsValueW32C()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_MaxAbsValueW32C(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxAbsValueW32Neon()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_MaxAbsValueW32Neon(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxAbsValueW32_mips()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_MaxAbsValueW32_mips(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxValueW16C()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_MaxValueW16C(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxValueW16Neon()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_MaxValueW16Neon(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxValueW16_mips()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_MaxValueW16_mips(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxValueW32C()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_MaxValueW32C(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxValueW32Neon()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_MaxValueW32Neon(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxValueW32_mips()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_MaxValueW32_mips(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MinValueW16C()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_MinValueW16C(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MinValueW16Neon()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_MinValueW16Neon(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MinValueW16_mips()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_MinValueW16_mips(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MinValueW32C()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_MinValueW32C(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MinValueW32Neon()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_MinValueW32Neon(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MinValueW32_mips()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_MinValueW32_mips(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MinMaxW16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_MinMaxW16(const int16_t* vector,\n                         size_t length,\n                         int16_t* min_val,\n                         int16_t* max_val)"
  },
  {
    "label": "WebRtcSpl_MinMaxW16Neon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_MinMaxW16Neon(const int16_t* vector,\n                             size_t length,\n                             int16_t* min_val,\n                             int16_t* max_val)"
  },
  {
    "label": "WebRtcSpl_MaxAbsIndexW16()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WebRtcSpl_MaxAbsIndexW16(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxAbsElementW16()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_MaxAbsElementW16(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxIndexW16()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WebRtcSpl_MaxIndexW16(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MaxIndexW32()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WebRtcSpl_MaxIndexW32(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MinIndexW16()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WebRtcSpl_MinIndexW16(const int16_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_MinIndexW32()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WebRtcSpl_MinIndexW32(const int32_t* vector, size_t length)"
  },
  {
    "label": "WebRtcSpl_VectorBitShiftW16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_VectorBitShiftW16(int16_t* out_vector,\n                                 size_t vector_length,\n                                 const int16_t* in_vector,\n                                 int16_t right_shifts)"
  },
  {
    "label": "WebRtcSpl_VectorBitShiftW32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_VectorBitShiftW32(int32_t* out_vector,\n                                 size_t vector_length,\n                                 const int32_t* in_vector,\n                                 int16_t right_shifts)"
  },
  {
    "label": "WebRtcSpl_VectorBitShiftW32ToW16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_VectorBitShiftW32ToW16(int16_t* out_vector,\n                                      size_t vector_length,\n                                      const int32_t* in_vector,\n                                      int right_shifts)"
  },
  {
    "label": "WebRtcSpl_ScaleVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ScaleVector(const int16_t* in_vector,\n                           int16_t* out_vector,\n                           int16_t gain,\n                           size_t vector_length,\n                           int16_t right_shifts)"
  },
  {
    "label": "WebRtcSpl_ScaleVectorWithSat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ScaleVectorWithSat(const int16_t* in_vector,\n                                  int16_t* out_vector,\n                                  int16_t gain,\n                                  size_t vector_length,\n                                  int16_t right_shifts)"
  },
  {
    "label": "WebRtcSpl_ScaleAndAddVectors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ScaleAndAddVectors(const int16_t* in_vector1,\n                                  int16_t gain1,\n                                  int right_shifts1,\n                                  const int16_t* in_vector2,\n                                  int16_t gain2,\n                                  int right_shifts2,\n                                  int16_t* out_vector,\n                                  size_t vector_length)"
  },
  {
    "label": "WebRtcSpl_ScaleAndAddVectorsWithRoundC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcSpl_ScaleAndAddVectorsWithRoundC(const int16_t* in_vector1,\n                                           int16_t in_vector1_scale,\n                                           const int16_t* in_vector2,\n                                           int16_t in_vector2_scale,\n                                           int right_shifts,\n                                           int16_t* out_vector,\n                                           size_t length)"
  },
  {
    "label": "WebRtcSpl_ScaleAndAddVectorsWithRound_mips()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcSpl_ScaleAndAddVectorsWithRound_mips(const int16_t* in_vector1,\n                                               int16_t in_vector1_scale,\n                                               const int16_t* in_vector2,\n                                               int16_t in_vector2_scale,\n                                               int right_shifts,\n                                               int16_t* out_vector,\n                                               size_t length)"
  },
  {
    "label": "WebRtcSpl_ReverseOrderMultArrayElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ReverseOrderMultArrayElements(int16_t* out_vector,\n                                             const int16_t* in_vector,\n                                             const int16_t* window,\n                                             size_t vector_length,\n                                             int16_t right_shifts)"
  },
  {
    "label": "WebRtcSpl_ElementwiseVectorMult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ElementwiseVectorMult(int16_t* out_vector,\n                                     const int16_t* in_vector,\n                                     const int16_t* window,\n                                     size_t vector_length,\n                                     int16_t right_shifts)"
  },
  {
    "label": "WebRtcSpl_AddVectorsAndShift()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_AddVectorsAndShift(int16_t* out_vector,\n                                  const int16_t* in_vector1,\n                                  const int16_t* in_vector2,\n                                  size_t vector_length,\n                                  int16_t right_shifts)"
  },
  {
    "label": "WebRtcSpl_AddAffineVectorToVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_AddAffineVectorToVector(int16_t* out_vector,\n                                       const int16_t* in_vector,\n                                       int16_t gain,\n                                       int32_t add_constant,\n                                       int16_t right_shifts,\n                                       size_t vector_length)"
  },
  {
    "label": "WebRtcSpl_AffineTransformVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_AffineTransformVector(int16_t* out_vector,\n                                     const int16_t* in_vector,\n                                     int16_t gain,\n                                     int32_t add_constant,\n                                     int16_t right_shifts,\n                                     size_t vector_length)"
  },
  {
    "label": "WebRtcSpl_AutoCorrelation()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WebRtcSpl_AutoCorrelation(const int16_t* in_vector,\n                                 size_t in_vector_length,\n                                 size_t order,\n                                 int32_t* result,\n                                 int* scale)"
  },
  {
    "label": "WebRtcSpl_LevinsonDurbin()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_LevinsonDurbin(const int32_t* auto_corr,\n                                 int16_t* lpc_coef,\n                                 int16_t* refl_coef,\n                                 size_t order)"
  },
  {
    "label": "WebRtcSpl_ReflCoefToLpc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ReflCoefToLpc(const int16_t* refl_coef,\n                             int use_order,\n                             int16_t* lpc_coef)"
  },
  {
    "label": "WebRtcSpl_LpcToReflCoef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_LpcToReflCoef(int16_t* lpc_coef,\n                             int use_order,\n                             int16_t* refl_coef)"
  },
  {
    "label": "WebRtcSpl_AutoCorrToReflCoef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_AutoCorrToReflCoef(const int32_t* auto_corr,\n                                  int use_order,\n                                  int16_t* refl_coef)"
  },
  {
    "label": "WebRtcSpl_CrossCorrelationC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_CrossCorrelationC(int32_t* cross_correlation,\n                                 const int16_t* seq1,\n                                 const int16_t* seq2,\n                                 size_t dim_seq,\n                                 size_t dim_cross_correlation,\n                                 int right_shifts,\n                                 int step_seq2)"
  },
  {
    "label": "WebRtcSpl_CrossCorrelationNeon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_CrossCorrelationNeon(int32_t* cross_correlation,\n                                    const int16_t* seq1,\n                                    const int16_t* seq2,\n                                    size_t dim_seq,\n                                    size_t dim_cross_correlation,\n                                    int right_shifts,\n                                    int step_seq2)"
  },
  {
    "label": "WebRtcSpl_CrossCorrelation_mips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_CrossCorrelation_mips(int32_t* cross_correlation,\n                                     const int16_t* seq1,\n                                     const int16_t* seq2,\n                                     size_t dim_seq,\n                                     size_t dim_cross_correlation,\n                                     int right_shifts,\n                                     int step_seq2)"
  },
  {
    "label": "WebRtcSpl_GetHanningWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_GetHanningWindow(int16_t* window, size_t size)"
  },
  {
    "label": "WebRtcSpl_SqrtOfOneMinusXSquared()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_SqrtOfOneMinusXSquared(int16_t* in_vector,\n                                      size_t vector_length,\n                                      int16_t* out_vector)"
  },
  {
    "label": "WebRtcSpl_RandU()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_RandU(uint32_t* seed)"
  },
  {
    "label": "WebRtcSpl_RandN()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_RandN(uint32_t* seed)"
  },
  {
    "label": "WebRtcSpl_RandUArray()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_RandUArray(int16_t* vector,\n                             int16_t vector_length,\n                             uint32_t* seed)"
  },
  {
    "label": "WebRtcSpl_Sqrt()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_Sqrt(int32_t value)"
  },
  {
    "label": "WebRtcSpl_DivU32U16()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "WebRtcSpl_DivU32U16(uint32_t num, uint16_t den)"
  },
  {
    "label": "WebRtcSpl_DivW32W16()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_DivW32W16(int32_t num, int16_t den)"
  },
  {
    "label": "WebRtcSpl_DivW32W16ResW16()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcSpl_DivW32W16ResW16(int32_t num, int16_t den)"
  },
  {
    "label": "WebRtcSpl_DivResultInQ31()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_DivResultInQ31(int32_t num, int32_t den)"
  },
  {
    "label": "WebRtcSpl_DivW32HiLow()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_DivW32HiLow(int32_t num, int16_t den_hi, int16_t den_low)"
  },
  {
    "label": "WebRtcSpl_Energy()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcSpl_Energy(int16_t* vector,\n                         size_t vector_length,\n                         int* scale_factor)"
  },
  {
    "label": "WebRtcSpl_FilterAR()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WebRtcSpl_FilterAR(const int16_t* ar_coef,\n                          size_t ar_coef_length,\n                          const int16_t* in_vector,\n                          size_t in_vector_length,\n                          int16_t* filter_state,\n                          size_t filter_state_length,\n                          int16_t* filter_state_low,\n                          size_t filter_state_low_length,\n                          int16_t* out_vector,\n                          int16_t* out_vector_low,\n                          size_t out_vector_low_length)"
  },
  {
    "label": "WebRtcSpl_FilterMAFastQ12()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_FilterMAFastQ12(const int16_t* in_vector,\n                               int16_t* out_vector,\n                               const int16_t* ma_coef,\n                               size_t ma_coef_length,\n                               size_t vector_length)"
  },
  {
    "label": "WebRtcSpl_FilterARFastQ12()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_FilterARFastQ12(const int16_t* data_in,\n                               int16_t* data_out,\n                               const int16_t* __restrict coefficients,\n                               size_t coefficients_length,\n                               size_t data_length)"
  },
  {
    "label": "WebRtcSpl_DownsampleFastC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcSpl_DownsampleFastC(const int16_t* data_in,\n                              size_t data_in_length,\n                              int16_t* data_out,\n                              size_t data_out_length,\n                              const int16_t* __restrict coefficients,\n                              size_t coefficients_length,\n                              int factor,\n                              size_t delay)"
  },
  {
    "label": "WebRtcSpl_DownsampleFastNeon()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcSpl_DownsampleFastNeon(const int16_t* data_in,\n                                 size_t data_in_length,\n                                 int16_t* data_out,\n                                 size_t data_out_length,\n                                 const int16_t* __restrict coefficients,\n                                 size_t coefficients_length,\n                                 int factor,\n                                 size_t delay)"
  },
  {
    "label": "WebRtcSpl_DownsampleFast_mips()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcSpl_DownsampleFast_mips(const int16_t* data_in,\n                                  size_t data_in_length,\n                                  int16_t* data_out,\n                                  size_t data_out_length,\n                                  const int16_t* __restrict coefficients,\n                                  size_t coefficients_length,\n                                  int factor,\n                                  size_t delay)"
  },
  {
    "label": "WebRtcSpl_ComplexFFT()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcSpl_ComplexFFT(int16_t vector[], int stages, int mode)"
  },
  {
    "label": "WebRtcSpl_ComplexIFFT()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcSpl_ComplexIFFT(int16_t vector[], int stages, int mode)"
  },
  {
    "label": "WebRtcSpl_ComplexBitReverse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ComplexBitReverse(int16_t* __restrict complex_data, int stages)"
  },
  {
    "label": "WebRtcSpl_Resample22khzTo16khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample22khzTo16khz(const int16_t* in,\n                                    int16_t* out,\n                                    WebRtcSpl_State22khzTo16khz* state,\n                                    int32_t* tmpmem)"
  },
  {
    "label": "WebRtcSpl_ResetResample22khzTo16khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ResetResample22khzTo16khz(WebRtcSpl_State22khzTo16khz* state)"
  },
  {
    "label": "WebRtcSpl_Resample16khzTo22khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample16khzTo22khz(const int16_t* in,\n                                    int16_t* out,\n                                    WebRtcSpl_State16khzTo22khz* state,\n                                    int32_t* tmpmem)"
  },
  {
    "label": "WebRtcSpl_ResetResample16khzTo22khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ResetResample16khzTo22khz(WebRtcSpl_State16khzTo22khz* state)"
  },
  {
    "label": "WebRtcSpl_Resample22khzTo8khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample22khzTo8khz(const int16_t* in,\n                                   int16_t* out,\n                                   WebRtcSpl_State22khzTo8khz* state,\n                                   int32_t* tmpmem)"
  },
  {
    "label": "WebRtcSpl_ResetResample22khzTo8khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ResetResample22khzTo8khz(WebRtcSpl_State22khzTo8khz* state)"
  },
  {
    "label": "WebRtcSpl_Resample8khzTo22khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample8khzTo22khz(const int16_t* in,\n                                   int16_t* out,\n                                   WebRtcSpl_State8khzTo22khz* state,\n                                   int32_t* tmpmem)"
  },
  {
    "label": "WebRtcSpl_ResetResample8khzTo22khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ResetResample8khzTo22khz(WebRtcSpl_State8khzTo22khz* state)"
  },
  {
    "label": "WebRtcSpl_Resample48khzTo32khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample48khzTo32khz(const int32_t* In, int32_t* Out, size_t K)"
  },
  {
    "label": "WebRtcSpl_Resample32khzTo24khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample32khzTo24khz(const int32_t* In, int32_t* Out, size_t K)"
  },
  {
    "label": "WebRtcSpl_Resample44khzTo32khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample44khzTo32khz(const int32_t* In, int32_t* Out, size_t K)"
  },
  {
    "label": "WebRtcSpl_Resample48khzTo16khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample48khzTo16khz(const int16_t* in,\n                                    int16_t* out,\n                                    WebRtcSpl_State48khzTo16khz* state,\n                                    int32_t* tmpmem)"
  },
  {
    "label": "WebRtcSpl_ResetResample48khzTo16khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ResetResample48khzTo16khz(WebRtcSpl_State48khzTo16khz* state)"
  },
  {
    "label": "WebRtcSpl_Resample16khzTo48khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample16khzTo48khz(const int16_t* in,\n                                    int16_t* out,\n                                    WebRtcSpl_State16khzTo48khz* state,\n                                    int32_t* tmpmem)"
  },
  {
    "label": "WebRtcSpl_ResetResample16khzTo48khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ResetResample16khzTo48khz(WebRtcSpl_State16khzTo48khz* state)"
  },
  {
    "label": "WebRtcSpl_Resample48khzTo8khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample48khzTo8khz(const int16_t* in,\n                                   int16_t* out,\n                                   WebRtcSpl_State48khzTo8khz* state,\n                                   int32_t* tmpmem)"
  },
  {
    "label": "WebRtcSpl_ResetResample48khzTo8khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ResetResample48khzTo8khz(WebRtcSpl_State48khzTo8khz* state)"
  },
  {
    "label": "WebRtcSpl_Resample8khzTo48khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_Resample8khzTo48khz(const int16_t* in,\n                                   int16_t* out,\n                                   WebRtcSpl_State8khzTo48khz* state,\n                                   int32_t* tmpmem)"
  },
  {
    "label": "WebRtcSpl_ResetResample8khzTo48khz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_ResetResample8khzTo48khz(WebRtcSpl_State8khzTo48khz* state)"
  },
  {
    "label": "WebRtcSpl_DownsampleBy2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_DownsampleBy2(const int16_t* in,\n                             size_t len,\n                             int16_t* out,\n                             int32_t* filtState)"
  },
  {
    "label": "WebRtcSpl_UpsampleBy2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_UpsampleBy2(const int16_t* in,\n                           size_t len,\n                           int16_t* out,\n                           int32_t* filtState)"
  },
  {
    "label": "WebRtcSpl_AnalysisQMF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_AnalysisQMF(const int16_t* in_data,\n                           size_t in_data_length,\n                           int16_t* low_band,\n                           int16_t* high_band,\n                           int32_t* filter_state1,\n                           int32_t* filter_state2)"
  },
  {
    "label": "WebRtcSpl_SynthesisQMF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcSpl_SynthesisQMF(const int16_t* low_band,\n                            const int16_t* high_band,\n                            size_t band_length,\n                            int16_t* out_data,\n                            int32_t* filter_state1,\n                            int32_t* filter_state2)"
  }
]