[
  {
    "label": "template",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "template"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "UntypedFormatSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UntypedFormatSpec"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "FormatCountCapture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatCountCapture"
  },
  {
    "label": "str_format_internal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "str_format_internal"
  },
  {
    "label": "template",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "template"
  },
  {
    "label": "method",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "method"
  },
  {
    "label": "template",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "template"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "FormatRawSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatRawSink"
  },
  {
    "label": "Point",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Point"
  },
  {
    "label": "Point",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Point"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FormatConversionSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatConversionSpec"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FormatSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatSink"
  },
  {
    "label": "FormatConvertResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FormatConvertResult"
  },
  {
    "label": "format()",
    "kind": "Method",
    "detail": "Function (absl::UntypedFormatSpec)",
    "insertText": "format(\"%d\")"
  },
  {
    "label": "MyFormat()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MyFormat(\"foo %x bar\")"
  },
  {
    "label": "MyFormat()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MyFormat(\"foo %d bar\")"
  },
  {
    "label": "orig()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "orig(\"For example PI is approximately \")"
  },
  {
    "label": "AbslFormatFlush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbslFormatFlush(MySink* dest, absl::string_view part)"
  },
  {
    "label": "format()",
    "kind": "Method",
    "detail": "Function (absl::UntypedFormatSpec)",
    "insertText": "format(in_format)"
  },
  {
    "label": "AbslStringify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbslStringify(Sink& sink, const X& value)"
  }
]