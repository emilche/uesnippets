[
  {
    "label": "PreservedAnalyses",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PreservedAnalyses"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "LazyCallGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraph"
  },
  {
    "label": "Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Node"
  },
  {
    "label": "SCC",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCC"
  },
  {
    "label": "iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "iterator"
  },
  {
    "label": "LazyCallGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraph"
  },
  {
    "label": "LazyCallGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraph"
  },
  {
    "label": "Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Node"
  },
  {
    "label": "LazyCallGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraph"
  },
  {
    "label": "LazyCallGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraph"
  },
  {
    "label": "SCC",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCC"
  },
  {
    "label": "LazyCallGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraph"
  },
  {
    "label": "LazyCallGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraph"
  },
  {
    "label": "postorder_scc_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "postorder_scc_iterator"
  },
  {
    "label": "LazyCallGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraph"
  },
  {
    "label": "LazyCallGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraph"
  },
  {
    "label": "IsAtEndT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsAtEndT"
  },
  {
    "label": "GraphTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GraphTraits"
  },
  {
    "label": "GraphTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GraphTraits"
  },
  {
    "label": "LazyCallGraphAnalysis",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraphAnalysis"
  },
  {
    "label": "LazyCallGraphPrinterPass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyCallGraphPrinterPass"
  },
  {
    "label": "insertEdgeInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insertEdgeInternal(Function &Callee)"
  },
  {
    "label": "insertEdgeInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insertEdgeInternal(Node &CalleeN)"
  },
  {
    "label": "removeEdgeInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeEdgeInternal(Function &Callee)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insert(Node &N)"
  },
  {
    "label": "internalDFS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "internalDFS(SmallVectorImpl<std::pair<Node *, Node::iterator>> &DFSStack,\n                SmallVectorImpl<Node *> &PendingSCCStack, Node *N,\n                SmallVectorImpl<SCC *> &ResultSCCs)"
  },
  {
    "label": "insertIntraSCCEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insertIntraSCCEdge(Node &CallerN, Node &CalleeN)"
  },
  {
    "label": "insertOutgoingEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insertOutgoingEdge(Node &CallerN, Node &CalleeN)"
  },
  {
    "label": "removeInterSCCEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeInterSCCEdge(Node &CallerN, Node &CalleeN)"
  },
  {
    "label": "postorder_scc_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "postorder_scc_iterator(*this)"
  },
  {
    "label": "insertInto()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "insertInto(F, N)"
  },
  {
    "label": "insertEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insertEdge(Node &Caller, Function &Callee)"
  },
  {
    "label": "removeEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeEdge(Node &Caller, Function &Callee)"
  },
  {
    "label": "updateGraphPtrs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "updateGraphPtrs()"
  },
  {
    "label": "LazyCallGraph()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "LazyCallGraph(M)"
  },
  {
    "label": "LazyCallGraphPrinterPass()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "LazyCallGraphPrinterPass(raw_ostream &OS)"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (PreservedAnalyses)",
    "insertText": "run(Module &M, ModuleAnalysisManager *AM)"
  }
]