[
  {
    "label": "FMixerDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerDevice"
  },
  {
    "label": "FAudioDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDevice"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FAudioDeviceHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDeviceHandle"
  },
  {
    "label": "FAudioDeviceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDeviceManager"
  },
  {
    "label": "FAudioDeviceHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / WeakObjectPtr . h \" # ifndef INSTRUMENT_AUDIODEVICE_HANDLES # define INSTRUMENT_AUDIODEVICE_HANDLES 0 # endif namespace Audio { class FMixerDevice ; using FDeviceId = uint32 ; } class FAudioDevice ; class UWorld ; class FAudioDeviceHandle { public :)",
    "insertText": "FAudioDeviceHandle()"
  },
  {
    "label": "FAudioDeviceHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAudioDeviceHandle(const FAudioDeviceHandle& Other)"
  },
  {
    "label": "FAudioDeviceHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAudioDeviceHandle(FAudioDeviceHandle&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAudioDeviceHandle&)",
    "insertText": "operator(const FAudioDeviceHandle& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAudioDeviceHandle&)",
    "insertText": "operator(FAudioDeviceHandle&& Other)"
  },
  {
    "label": "GetAudioDevice()",
    "kind": "Method",
    "detail": "Function (FAudioDevice*)",
    "insertText": "GetAudioDevice()"
  },
  {
    "label": "GetDeviceID()",
    "kind": "Method",
    "detail": "Function (Audio::FDeviceId)",
    "insertText": "GetDeviceID()"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<UWorld>)",
    "insertText": "GetWorld()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FAudioDeviceHandle()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FAudioDeviceHandle(FAudioDevice* InDevice, Audio::FDeviceId InID, UWorld* InWorld)"
  },
  {
    "label": "AddStackDumpToAudioDeviceContainer()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<UWorld> World ; FAudioDevice* Device ; Audio::FDeviceId DeviceId ; # if INSTRUMENT_AUDIODEVICE_HANDLES uint32 StackWalkID ; void)",
    "insertText": "AddStackDumpToAudioDeviceContainer()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# endif class FAudioDeviceManager ; public : const FAudioDevice&)",
    "insertText": "operator()"
  }
]