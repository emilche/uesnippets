[
  {
    "label": "RegisterContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RegisterContext"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_PROFILER_REGISTER_CONTEXT_H_ # define BASE_PROFILER_REGISTER_CONTEXT_H_ # include<cstdint> # include \" build / build_config . h \" # if)",
    "insertText": "BUILDFLAG(IS_WIN) #include <windows.h> #elif BUILDFLAG(IS_APPLE) #include <mach/machine/thread_status.h> #elif BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS)"
  },
  {
    "label": "AsUintPtr()",
    "kind": "Method",
    "detail": "Function (template<T> uintptr_t&)",
    "insertText": "AsUintPtr(T* value)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (} # if)",
    "insertText": "BUILDFLAG(IS_WIN)"
  },
  {
    "label": "RegisterContextStackPointer()",
    "kind": "Method",
    "detail": "Function (uintptr_t&)",
    "insertText": "RegisterContextStackPointer(::CONTEXT* context)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (Rsp)",
    "insertText": "defined(ARCH_CPU_X86_64)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (Sp)",
    "insertText": "defined(ARCH_CPU_ARM64)"
  },
  {
    "label": "AsUintPtr()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "AsUintPtr(&context->Esp)"
  },
  {
    "label": "RegisterContextFramePointer()",
    "kind": "Method",
    "detail": "Function (# endif } uintptr_t&)",
    "insertText": "RegisterContextFramePointer(::CONTEXT* context)"
  },
  {
    "label": "AsUintPtr()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "AsUintPtr(&context->Ebp)"
  },
  {
    "label": "RegisterContextInstructionPointer()",
    "kind": "Method",
    "detail": "Function (# endif } uintptr_t&)",
    "insertText": "RegisterContextInstructionPointer(::CONTEXT* context)"
  },
  {
    "label": "AsUintPtr()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "AsUintPtr(&context->Eip)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# endif } # elif)",
    "insertText": "BUILDFLAG(IS_MAC) || BUILDFLAG(IS_IOS) #if defined(ARCH_CPU_X86_64)"
  },
  {
    "label": "RegisterContextStackPointer()",
    "kind": "Method",
    "detail": "Function (uintptr_t&)",
    "insertText": "RegisterContextStackPointer(x86_thread_state64_t* context)"
  },
  {
    "label": "RegisterContextFramePointer()",
    "kind": "Method",
    "detail": "Function (} uintptr_t&)",
    "insertText": "RegisterContextFramePointer(x86_thread_state64_t* context)"
  },
  {
    "label": "RegisterContextInstructionPointer()",
    "kind": "Method",
    "detail": "Function (} uintptr_t&)",
    "insertText": "RegisterContextInstructionPointer(x86_thread_state64_t* context)"
  },
  {
    "label": "RegisterContextStackPointer()",
    "kind": "Method",
    "detail": "Function (uintptr_t&)",
    "insertText": "RegisterContextStackPointer(arm_thread_state64_t* context)"
  },
  {
    "label": "RegisterContextFramePointer()",
    "kind": "Method",
    "detail": "Function (} uintptr_t&)",
    "insertText": "RegisterContextFramePointer(arm_thread_state64_t* context)"
  },
  {
    "label": "RegisterContextInstructionPointer()",
    "kind": "Method",
    "detail": "Function (} uintptr_t&)",
    "insertText": "RegisterContextInstructionPointer(arm_thread_state64_t* context)"
  },
  {
    "label": "RegisterContextStackPointer()",
    "kind": "Method",
    "detail": "Function (} # else struct RegisterContext { uintptr_t stack_pointer ; uintptr_t frame_pointer ; uintptr_t instruction_pointer ; } ; uintptr_t&)",
    "insertText": "RegisterContextStackPointer(RegisterContext* context)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(ARCH_CPU_ARM_FAMILY) && defined(ARCH_CPU_32_BITS) inline uintptr_t& RegisterContextStackPointer(mcontext_t* context)"
  },
  {
    "label": "RegisterContextFramePointer()",
    "kind": "Method",
    "detail": "Function (} uintptr_t&)",
    "insertText": "RegisterContextFramePointer(mcontext_t* context)"
  },
  {
    "label": "RegisterContextInstructionPointer()",
    "kind": "Method",
    "detail": "Function (} uintptr_t&)",
    "insertText": "RegisterContextInstructionPointer(mcontext_t* context)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} # elif)",
    "insertText": "defined(ARCH_CPU_ARM_FAMILY) && defined(ARCH_CPU_64_BITS) inline uintptr_t& RegisterContextStackPointer(mcontext_t* context)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} # elif)",
    "insertText": "defined(ARCH_CPU_X86_FAMILY) && defined(ARCH_CPU_32_BITS) inline uintptr_t& RegisterContextStackPointer(mcontext_t* context)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} # elif)",
    "insertText": "defined(ARCH_CPU_X86_FAMILY) && defined(ARCH_CPU_64_BITS) inline uintptr_t& RegisterContextStackPointer(mcontext_t* context)"
  },
  {
    "label": "RegisterContextStackPointer()",
    "kind": "Method",
    "detail": "Function (} # else uintptr_t&)",
    "insertText": "RegisterContextStackPointer(mcontext_t* context)"
  }
]