[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "FObjectKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectKey"
  },
  {
    "label": "ANIMATIONMODIFIERS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMATIONMODIFIERS_API"
  },
  {
    "label": "FAnimationModifierDetailCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationModifierDetailCustomization"
  },
  {
    "label": "ESuppressionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESuppressionMode"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Animation / AnimCurveTypes . h \" # include \" Animation / AnimEnums . h \" # include \" AnimationBlueprintLibrary . h \" # include \" Containers / Map . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformMisc . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / Guid . h \" # include \" Misc / MessageDialog . h \" # include \" Misc / Optional . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" AnimationModifier . generated . h \" class FArchive ; class FName ; class UAnimSequence ; class UClass ; class USkeleton ; struct FFrame ; struct FObjectKey ;)",
    "insertText": "UCLASS(Blueprintable, config = Editor, defaultconfig)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UAnimationModifier()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UAnimationModifier()"
  },
  {
    "label": "ApplyToAnimationSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyToAnimationSequence(UAnimSequence* AnimSequence)"
  },
  {
    "label": "RevertFromAnimationSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RevertFromAnimationSequence(UAnimSequence* AnimSequence)"
  },
  {
    "label": "OnApply_Implementation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApply_Implementation(UAnimSequence* AnimationSequence)"
  },
  {
    "label": "OnRevert_Implementation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRevert_Implementation(UAnimSequence* AnimationSequence)"
  },
  {
    "label": "CanRevert()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanRevert(IInterface_AssetUserData* AssetUserDataInterface)"
  },
  {
    "label": "IsLatestRevisionApplied()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLatestRevisionApplied(IInterface_AssetUserData* AssetUserDataInterface)"
  },
  {
    "label": "GetLatestRevisionGuid()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GetLatestRevisionGuid()"
  },
  {
    "label": "GetAssetRegistryTagsForAppliedModifiersFromSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetRegistryTagsForAppliedModifiersFromSkeleton(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "HasLegacyPreviousAppliedModifierOnSkeleton()",
    "kind": "Method",
    "detail": "Function (const FName AnimationModifiersTag ; TCHAR AnimationModifiersDelimiter = ' ; ' ; TCHAR AnimationModifiersAssignment = ' = ' ; bool)",
    "insertText": "HasLegacyPreviousAppliedModifierOnSkeleton()"
  },
  {
    "label": "RemoveLegacyPreviousAppliedModifierOnSkeleton()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveLegacyPreviousAppliedModifierOnSkeleton(USkeleton* Skeleton)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "GetSkeleton()",
    "kind": "Method",
    "detail": "Function (const USkeleton*)",
    "insertText": "GetSkeleton()"
  },
  {
    "label": "GetNativeClassRevision()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNativeClassRevision()"
  },
  {
    "label": "UpdateCompressedAnimationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCompressedAnimationData()"
  },
  {
    "label": "UpdateRevisionGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRevisionGuid(UClass* ModifierClass)"
  },
  {
    "label": "UpdateNativeRevisionGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNativeRevisionGuid()"
  },
  {
    "label": "ExecuteOnRevert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteOnRevert(UAnimSequence* InAnimSequence)"
  },
  {
    "label": "ExecuteOnApply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteOnApply(UAnimSequence* InAnimSequence)"
  },
  {
    "label": "ApplyToAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyToAll(TSubclassOf<UAnimationModifier> ModifierSubClass, bool bForceApply = true)"
  },
  {
    "label": "LoadModifierReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadModifierReferencers(TSubclassOf<UAnimationModifier> ModifierSubClass)"
  },
  {
    "label": "GetAppliedModifier()",
    "kind": "Method",
    "detail": "Function (private : UAnimSequence* CurrentAnimSequence = nullptr ; USkeleton* CurrentSkeleton = nullptr ; UAnimationModifier*)",
    "insertText": "GetAppliedModifier(IInterface_AssetUserData* AssetUserDataInterface)"
  },
  {
    "label": "SetAppliedModifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAppliedModifier(TScriptInterface<IInterface_AssetUserData> AssetUserDataInterface, UAnimationModifier* AppliedModifier)"
  },
  {
    "label": "FindAndRemoveAppliedModifier()",
    "kind": "Method",
    "detail": "Function (UAnimationModifier*)",
    "insertText": "FindAndRemoveAppliedModifier(TScriptInterface<IInterface_AssetUserData> AssetUserDataInterface)"
  },
  {
    "label": "GetLegacyPreviouslyAppliedModifierForModifierOnSkeleton()",
    "kind": "Method",
    "detail": "Function (UAnimationModifier*)",
    "insertText": "GetLegacyPreviouslyAppliedModifierForModifierOnSkeleton()"
  },
  {
    "label": "FApplyModifiersScope()",
    "kind": "Method",
    "detail": "Function (} ; namespace UE { namespace Anim { struct FApplyModifiersScope { UAnimationModifier ; enum ESuppressionMode : uint8 { NoChange,SuppressWarningAndError,SuppressWarning,ShowDialog,ForceDialog,RevertAtWarning,} ;)",
    "insertText": "FApplyModifiersScope(const FApplyModifiersScope&)"
  },
  {
    "label": "FApplyModifiersScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FApplyModifiersScope(ESuppressionMode Mode = NoChange)"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Open(Mode)"
  },
  {
    "label": "FApplyModifiersScope()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FApplyModifiersScope()"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "IsScopePending()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsScopePending()"
  },
  {
    "label": "HandleError()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "HandleError(const UAnimationModifier* Modifier, const FText& Message, const FText& Title)"
  },
  {
    "label": "HandleWarning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleWarning(const UAnimationModifier* Modifier, const FText& Message, const FText& Title)"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (private : ESuppressionMode)",
    "insertText": "Open(ESuppressionMode Mode = NoChange)"
  },
  {
    "label": "CurrentMode()",
    "kind": "Method",
    "detail": "Function (ESuppressionMode)",
    "insertText": "CurrentMode()"
  }
]