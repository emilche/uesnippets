[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UK2Node_FunctionEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_FunctionEntry"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SListView"
  },
  {
    "label": "SFieldNotificationCheckList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFieldNotificationCheckList"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" FieldNotificationId . h \" # include \" Misc / Attribute . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class ITableRow ; class STableViewBase ; class SWidget ; class UK2Node_FunctionEntry ; enum class ECheckBoxState : uint8 ; template<ItemType> class SListView ; namespace UE::FieldNotification { class SFieldNotificationCheckList : public SCompoundWidget { public : typedef SListView<TSharedPtr<FFieldNotificationId>> SComboListType ;)",
    "insertText": "SLATE_BEGIN_ARGS(SFieldNotificationCheckList)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakObjectPtr<UBlueprint>, BlueprintPtr) SLATE_ARGUMENT(FName, FieldName) SLATE_ARGUMENT(bool, IsFieldFunction) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetFieldNotifyIconVisibility()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "GetFieldNotifyIconVisibility()"
  },
  {
    "label": "GenerateMenuItemRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "GenerateMenuItemRow(TSharedPtr<FFieldNotificationId> InItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnMenuOpenChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMenuOpenChanged(bool bOpen)"
  },
  {
    "label": "IsCheckBoxEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCheckBoxEnabled(FName OtherName)"
  },
  {
    "label": "OnVariableCheckboxState()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "OnVariableCheckboxState(FName OtherName)"
  },
  {
    "label": "OnVariableCheckBoxChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnVariableCheckBoxChanged(ECheckBoxState InNewState, FName OtherName)"
  },
  {
    "label": "GetFieldNotifyFunctionEntryNodesInBlueprint()",
    "kind": "Method",
    "detail": "Function (TArray<UK2Node_FunctionEntry*>)",
    "insertText": "GetFieldNotifyFunctionEntryNodesInBlueprint()"
  }
]