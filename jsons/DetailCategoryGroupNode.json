[
  {
    "label": "FDetailCategoryGroupNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailCategoryGroupNode"
  },
  {
    "label": "FDetailCategoryGroupNode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DetailCategoryBuilderImpl . h \" # include \" DetailTreeNode . h \" # include \" IDetailsView . h \" # include \" IPropertyUtilities . h \" # include \" PropertyCustomizationHelpers . h \" # include \" PropertyHandle . h \" # include \" UObject / NameTypes . h \" class FDetailCategoryGroupNode : public FDetailTreeNode,public TSharedFromThis<FDetailCategoryGroupNode> { public :)",
    "insertText": "FDetailCategoryGroupNode(FName InGroupName, TSharedRef<FDetailCategoryImpl> InParentCategory)"
  },
  {
    "label": "SetChildren()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetChildren(const FDetailNodeList& InChildNodes)"
  },
  {
    "label": "SetShowBorder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowBorder(bool bInShowBorder)"
  },
  {
    "label": "GetShowBorder()",
    "kind": "Method",
    "detail": "Function (bShowBorder = bInShowBorder ; } bool)",
    "insertText": "GetShowBorder()"
  },
  {
    "label": "GetHasSplitter()",
    "kind": "Method",
    "detail": "Function (bHasSplitter = bInHasSplitter ; } bool)",
    "insertText": "GetHasSplitter()"
  },
  {
    "label": "GetDetailsView()",
    "kind": "Method",
    "detail": "Function (} IDetailsViewPrivate*)",
    "insertText": "GetDetailsView()"
  },
  {
    "label": "OnItemExpansionChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnItemExpansionChanged(bool bIsExpanded, bool bShouldSaveState)"
  },
  {
    "label": "ShouldBeExpanded()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldBeExpanded()"
  },
  {
    "label": "GenerateStandaloneWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateStandaloneWidget(FDetailWidgetRow& OutRow)"
  },
  {
    "label": "GetNodeType()",
    "kind": "Method",
    "detail": "Function (EDetailNodeType)",
    "insertText": "GetNodeType()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutFilterStrings .)",
    "insertText": "Add(GroupName.ToString())"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "GetChildren(FDetailNodeList& OutChildren, const bool& bInIgnoreVisibility)"
  },
  {
    "label": "FilterNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterNode(const FDetailFilter& InFilter)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "ShouldShowOnlyChildren()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldShowOnlyChildren()"
  }
]