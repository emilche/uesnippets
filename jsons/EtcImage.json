[
  {
    "label": "Block4x4",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Block4x4"
  },
  {
    "label": "EncoderSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EncoderSpec"
  },
  {
    "label": "SortedBlockList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SortedBlockList"
  },
  {
    "label": "Image",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Image"
  },
  {
    "label": "EncodingStatus",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EncodingStatus"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Image()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EtcColorFloatRGBA . h \" # include \" EtcBlock4x4EncodingBits . h \" # include \" EtcErrorMetric . h \" namespace Etc { class Block4x4 ; class EncoderSpec ; class SortedBlockList ; class Image { public : enum EncodingStatus { SUCCESS = 0,WARNING_THRESHOLD = 1<<0,WARNING_EFFORT_OUT_OF_RANGE = 1<<1,WARNING_JOBS_OUT_OF_RANGE = 1<<2,WARNING_SOME_NON_OPAQUE_PIXELS = 1<<3,WARNING_ALL_OPAQUE_PIXELS = 1<<4,WARNING_ALL_TRANSPARENT_PIXELS = 1<<5,WARNING_SOME_TRANSLUCENT_PIXELS = 1<<6,WARNING_SOME_RGBA_NOT_0_TO_1 = 1<<7,WARNING_SOME_BLUE_VALUES_ARE_NOT_ZERO = 1<<8,WARNING_SOME_GREEN_VALUES_ARE_NOT_ZERO = 1<<9,ERROR_THRESHOLD = 1<<1 6,ERROR_UNKNOWN_FORMAT = 1<<1 7,ERROR_UNKNOWN_ERROR_METRIC = 1<<1 8,ERROR_ZERO_WIDTH_OR_HEIGHT = 1<<1 9,} ; enum class Format { UNKNOWN,ETC1,RGB8,SRGB8,RGBA8,SRGBA8,R11,SIGNED_R11,RG11,SIGNED_RG11,RGB8A1,SRGB8A1,FORMATS,DEFAULT = SRGB8 } ;)",
    "insertText": "Image(float *a_pafSourceRGBA, unsigned int a_uiSourceWidth, unsigned int a_uiSourceHeight, ErrorMetric a_errormetric)"
  },
  {
    "label": "Image()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Image(Format a_format, unsigned int a_uiSourceWidth, unsigned int a_uiSourceHeight, unsigned char *a_paucEncidingBits, unsigned int a_uiEncodingBitsBytes, Image *a_pimageSource, ErrorMetric a_errormetric)"
  },
  {
    "label": "Image()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Image(void)"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (EncodingStatus)",
    "insertText": "Encode(Format a_format, ErrorMetric a_errormetric, float a_fEffort, unsigned int a_uiJobs, unsigned int a_uiMaxJobs)"
  },
  {
    "label": "AddToEncodingStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToEncodingStatus(EncodingStatus a_encStatus)"
  },
  {
    "label": "m_encodingStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "m_encodingStatus(EncodingStatus)((unsigned int)m_encodingStatus | (unsigned int)a_encStatus)"
  },
  {
    "label": "GetSourceWidth()",
    "kind": "Method",
    "detail": "Function (} unsigned int)",
    "insertText": "GetSourceWidth(void)"
  },
  {
    "label": "GetSourcePixel()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA*)",
    "insertText": "GetSourcePixel(unsigned int a_uiH, unsigned int a_uiV)"
  },
  {
    "label": "CalcExtendedDimension()",
    "kind": "Method",
    "detail": "Function (unsigned short)",
    "insertText": "CalcExtendedDimension(unsigned short a_ushOriginalDimension)"
  },
  {
    "label": "GetErrorMetric()",
    "kind": "Method",
    "detail": "Function (} ErrorMetric)",
    "insertText": "GetErrorMetric(void)"
  },
  {
    "label": "EncodingFormatToString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "EncodingFormatToString(void)"
  },
  {
    "label": "TrackEncodingWarning()",
    "kind": "Method",
    "detail": "Function (int m_iNumOpaquePixels ; int m_iNumTranslucentPixels ; int m_iNumTransparentPixels ; ColorFloatRGBA m_numColorValues ; ColorFloatRGBA m_numOutOfRangeValues ; bool m_bVerboseOutput ; private : void)",
    "insertText": "TrackEncodingWarning(EncodingStatus a_encStatus)"
  },
  {
    "label": "m_warningsToCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "m_warningsToCapture(EncodingStatus)((unsigned int)m_warningsToCapture | (unsigned int)a_encStatus)"
  },
  {
    "label": "AddToEncodingStatusIfSignfigant()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddToEncodingStatusIfSignfigant(EncodingStatus a_encStatus)"
  },
  {
    "label": "AddToEncodingStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToEncodingStatus(a_encStatus)"
  },
  {
    "label": "FindEncodingWarningTypesForCurFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindEncodingWarningTypesForCurFormat()"
  },
  {
    "label": "FindAndSetEncodingWarnings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAndSetEncodingWarnings()"
  },
  {
    "label": "InitBlocksAndBlockSorter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBlocksAndBlockSorter(void)"
  },
  {
    "label": "RunFirstPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunFirstPass(unsigned int a_uiMultithreadingOffset, unsigned int a_uiMultithreadingStride)"
  },
  {
    "label": "SetEncodingBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncodingBits(unsigned int a_uiMultithreadingOffset, unsigned int a_uiMultithreadingStride)"
  },
  {
    "label": "IterateThroughWorstBlocks()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "IterateThroughWorstBlocks(unsigned int a_uiMaxBlocks, unsigned int a_uiMultithreadingOffset, unsigned int a_uiMultithreadingStride)"
  }
]