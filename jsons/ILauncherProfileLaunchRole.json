[
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "ILauncherProfileLaunchRole",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILauncherProfileLaunchRole"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Serialization / JsonWriter . h \" class FJsonObject ; class ILauncherProfileLaunchRole ; namespace ELauncherProfileRoleInstanceTypes { enum Type { DedicatedServer,ListenServer,StandaloneClient,UnrealEditor } ; FString)",
    "insertText": "ToString(ELauncherProfileRoleInstanceTypes::Type InstanceType)"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (default : return)",
    "insertText": "FString()"
  },
  {
    "label": "GetAssignedDevice()",
    "kind": "Method",
    "detail": "Function (} } } typedef TSharedPtr<class ILauncherProfileLaunchRole> ILauncherProfileLaunchRolePtr ; typedef TSharedRef<class ILauncherProfileLaunchRole> ILauncherProfileLaunchRoleRef ; class ILauncherProfileLaunchRole { public : const FString&)",
    "insertText": "GetAssignedDevice()"
  },
  {
    "label": "GetUATCommandLine()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetUATCommandLine()"
  },
  {
    "label": "GetInitialCulture()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetInitialCulture()"
  },
  {
    "label": "GetInitialMap()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetInitialMap()"
  },
  {
    "label": "GetInstanceType()",
    "kind": "Method",
    "detail": "Function (ELauncherProfileRoleInstanceTypes::Type)",
    "insertText": "GetInstanceType()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetName()"
  },
  {
    "label": "IsVsyncEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVsyncEnabled()"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Load(const FJsonObject& Object)"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Save(TJsonWriter<>& Writer, const TCHAR* Name = TEXT(\"\"))"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Archive)"
  },
  {
    "label": "SetCommandLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCommandLine(const FString& NewCommandLine)"
  },
  {
    "label": "SetInitialCulture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitialCulture(const FString& CultureName)"
  },
  {
    "label": "SetInitialMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitialMap(const FString& MapName)"
  },
  {
    "label": "SetInstanceType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceType(ELauncherProfileRoleInstanceTypes::Type InInstanceType)"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(const FString& NewName)"
  },
  {
    "label": "SetVsyncEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVsyncEnabled(bool Enabled)"
  },
  {
    "label": "ILauncherProfileLaunchRole()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "ILauncherProfileLaunchRole()"
  }
]