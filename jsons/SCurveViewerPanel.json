[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FWidgetStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetStyle"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CurveDrawInfo . h \" # include \" CurveEditor . h \" # include \" CurveEditorTypes . h \" # include \" HAL / Platform . h \" # include \" Misc / Attribute . h \" # include \" Rendering / RenderingCommon . h \" # include \" SCurveEditorView . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SLeafWidget . h \" class FCurveEditor ; class FPaintArgs ; class FSlateRect ; class FSlateWindowElementList ; class FWidgetStyle ; struct FGeometry ; class SCurveViewerPanel : public SCurveEditorView {)",
    "insertText": "SLATE_BEGIN_ARGS(SCurveViewerPanel)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(float, CurveThickness) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedRef<FCurveEditor> InCurveEditor)"
  },
  {
    "label": "GetCachedDrawParams()",
    "kind": "Method",
    "detail": "Function (const TArray<FCurveDrawParams>&)",
    "insertText": "GetCachedDrawParams()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "DrawCurves()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "DrawCurves(const FGeometry& AllottedGeometry, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, ESlateDrawEffect DrawEffects)"
  }
]