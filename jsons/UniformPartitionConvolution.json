[
  {
    "label": "FUniformPartitionConvolutionSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniformPartitionConvolutionSettings"
  },
  {
    "label": "FUniformPartitionConvolution",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformPartitionConvolution"
  },
  {
    "label": "FInputTransformOutputGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputTransformOutputGroup"
  },
  {
    "label": "FInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInput"
  },
  {
    "label": "FOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOutput"
  },
  {
    "label": "FImpulseResponse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImpulseResponse"
  },
  {
    "label": "FUniformPartitionConvolutionFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformPartitionConvolutionFactory"
  },
  {
    "label": "PushBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushBlock(const float* InSamples)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "PopBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopBlock()"
  },
  {
    "label": "PopBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopBlock(float* OutSamples)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetImpulseResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetImpulseResponse(const float* InSamples, int32 InNum)"
  },
  {
    "label": "FFTSettingsFromConvolutionSettings()",
    "kind": "Method",
    "detail": "Function (FFFTSettings)",
    "insertText": "FFTSettingsFromConvolutionSettings(const FConvolutionSettings& InConvolutionSettings)"
  }
]