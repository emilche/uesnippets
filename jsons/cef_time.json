[
  {
    "label": "_cef_time_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_time_t"
  },
  {
    "label": "cef_time_to_timet()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_INTERNAL_CEF_TIME_H_ # define CEF_INCLUDE_INTERNAL_CEF_TIME_H_ # pragma once # ifdef __cplusplus \" C \" { # endif # include<time . h> # include \" include / internal / cef_export . h \" typedef struct _cef_time_t { int year ; int month ; int day_of_week ; int day_of_month ; int hour ; int minute ; int second ; int millisecond ; } cef_time_t ; CEF_EXPORT int)",
    "insertText": "cef_time_to_timet(const cef_time_t* cef_time, time_t* time)"
  },
  {
    "label": "cef_time_from_timet()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_time_from_timet(time_t time, cef_time_t* cef_time)"
  },
  {
    "label": "cef_time_to_doublet()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_time_to_doublet(const cef_time_t* cef_time, double* time)"
  },
  {
    "label": "cef_time_from_doublet()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_time_from_doublet(double time, cef_time_t* cef_time)"
  },
  {
    "label": "cef_time_now()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_time_now(cef_time_t* cef_time)"
  },
  {
    "label": "cef_time_delta()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_time_delta(const cef_time_t* cef_time1, const cef_time_t* cef_time2, long long* delta)"
  }
]