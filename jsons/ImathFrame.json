[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Vec3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Vec3"
  },
  {
    "label": "Matrix44",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Matrix44"
  },
  {
    "label": "firstFrame()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMATHFRAME_H # define INCLUDED_IMATHFRAME_H # include \" ImathNamespace . h \" IMATH_INTERNAL_NAMESPACE_HEADER_ENTER template<class T> class Vec3 ; template<class T> class Matrix44 ; template<class T> Matrix44<T>)",
    "insertText": "firstFrame(const Vec3<T>&, const Vec3<T>&, const Vec3<T>&)"
  },
  {
    "label": "nextFrame()",
    "kind": "Method",
    "detail": "Function (template<class T> Matrix44<T>)",
    "insertText": "nextFrame(const Matrix44<T>&, const Vec3<T>&, const Vec3<T>&, Vec3<T>&, Vec3<T>&)"
  },
  {
    "label": "lastFrame()",
    "kind": "Method",
    "detail": "Function (template<class T> Matrix44<T>)",
    "insertText": "lastFrame(const Matrix44<T>&, const Vec3<T>&, const Vec3<T>&)"
  },
  {
    "label": "firstFrame()",
    "kind": "Method",
    "detail": "Function (template<class T> Matrix44<T>)",
    "insertText": "firstFrame(const Vec3<T>& pi, const Vec3<T>& pj, const Vec3<T>& pk)"
  },
  {
    "label": "normalizeExc()",
    "kind": "Method",
    "detail": "Function (Vec3<T> t = pj - pi ; t .)",
    "insertText": "normalizeExc()"
  },
  {
    "label": "cross()",
    "kind": "Method",
    "detail": "Function (Vec3<T> n = t .)",
    "insertText": "cross(pk - pi)"
  },
  {
    "label": "normalize()",
    "kind": "Method",
    "detail": "Function (n .)",
    "insertText": "normalize()"
  },
  {
    "label": "fabs()",
    "kind": "Method",
    "detail": "Function (int i =)",
    "insertText": "fabs(t[0]) < fabs (t[1])"
  },
  {
    "label": "v()",
    "kind": "Method",
    "detail": "Function (Vec3<T>)",
    "insertText": "v(0.0, 0.0, 0.0)"
  },
  {
    "label": "cross()",
    "kind": "Method",
    "detail": "Function (v [ i ] = 1 . 0 ; n = t .)",
    "insertText": "cross(v)"
  },
  {
    "label": "cross()",
    "kind": "Method",
    "detail": "Function (} Vec3<T> b = t .)",
    "insertText": "cross(n)"
  },
  {
    "label": "nextFrame()",
    "kind": "Method",
    "detail": "Function (Matrix44<T> M ; M [ 0 ] [ 0 ] = t [ 0 ] ; M [ 0 ] [ 1 ] = t [ 1 ] ; M [ 0 ] [ 2 ] = t [ 2 ] ; M [ 0 ] [ 3 ] = 0 . 0,M [ 1 ] [ 0 ] = n [ 0 ] ; M [ 1 ] [ 1 ] = n [ 1 ] ; M [ 1 ] [ 2 ] = n [ 2 ] ; M [ 1 ] [ 3 ] = 0 . 0,M [ 2 ] [ 0 ] = b [ 0 ] ; M [ 2 ] [ 1 ] = b [ 1 ] ; M [ 2 ] [ 2 ] = b [ 2 ] ; M [ 2 ] [ 3 ] = 0 . 0,M [ 3 ] [ 0 ] = pi [ 0 ] ; M [ 3 ] [ 1 ] = pi [ 1 ] ; M [ 3 ] [ 2 ] = pi [ 2 ] ; M [ 3 ] [ 3 ] = 1 . 0 ; return M ; } template<class T> Matrix44<T>)",
    "insertText": "nextFrame(const Matrix44<T>& Mi, const Vec3<T>& pi, const Vec3<T>& pj, Vec3<T>& ti, Vec3<T>& tj)"
  },
  {
    "label": "a()",
    "kind": "Method",
    "detail": "Function (Vec3<T>)",
    "insertText": "a(0.0, 0.0, 0.0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (T r = 0 . 0 ;)",
    "insertText": "if(ti.length() != 0.0 && tj.length() != 0.0)"
  },
  {
    "label": "dot()",
    "kind": "Method",
    "detail": "Function (T dot = ti .)",
    "insertText": "dot(tj)"
  },
  {
    "label": "acosf()",
    "kind": "Method",
    "detail": "Function (r =)",
    "insertText": "acosf(dot)"
  },
  {
    "label": "cross()",
    "kind": "Method",
    "detail": "Function (a = ti .)",
    "insertText": "cross(tj)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(a.length() != 0.0 && r != 0.0)"
  },
  {
    "label": "setAxisAngle()",
    "kind": "Method",
    "detail": "Function (Matrix44<T> R ; R .)",
    "insertText": "setAxisAngle(a, r)"
  },
  {
    "label": "translate()",
    "kind": "Method",
    "detail": "Function (Matrix44<T> Tj ; Tj .)",
    "insertText": "translate(pj)"
  },
  {
    "label": "translate()",
    "kind": "Method",
    "detail": "Function (Matrix44<T> Ti ; Ti .)",
    "insertText": "translate(-pi)"
  },
  {
    "label": "translate()",
    "kind": "Method",
    "detail": "Function (Matrix44<T> Tr ; Tr .)",
    "insertText": "translate(pj - pi)"
  }
]