[
  {
    "label": "FEngineVersion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEngineVersion"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FEngineVersion()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / EngineVersionBase . h \" # include \" Containers / UnrealString . h \" # include \" Serialization / StructuredArchive . h \" class FEngineVersion : public FEngineVersionBase { public :)",
    "insertText": "FEngineVersion()"
  },
  {
    "label": "FEngineVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEngineVersion(uint16 InMajor, uint16 InMinor, uint16 InPatch, uint32 InChangelist, const FString &InBranch)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(uint16 InMajor, uint16 InMinor, uint16 InPatch, uint32 InChangelist, const FString &InBranch)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "ExactMatch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExactMatch(const FEngineVersion& Other)"
  },
  {
    "label": "IsCompatibleWith()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompatibleWith(const FEngineVersionBase &Other)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString(EVersionComponent LastComponent = EVersionComponent::Branch)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(const FString &Text, FEngineVersion &OutVersion)"
  },
  {
    "label": "Current()",
    "kind": "Method",
    "detail": "Function (const FEngineVersion&)",
    "insertText": "Current()"
  },
  {
    "label": "CompatibleWith()",
    "kind": "Method",
    "detail": "Function (const FEngineVersion&)",
    "insertText": "CompatibleWith()"
  },
  {
    "label": "TearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDown()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(class FArchive &Ar, FEngineVersion &Version)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(FStructuredArchive::FSlot Slot, FEngineVersion &Version)"
  },
  {
    "label": "GetBranch()",
    "kind": "Method",
    "detail": "Function (const FString)",
    "insertText": "GetBranch()"
  },
  {
    "label": "GetBranchDescriptor()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetBranchDescriptor()"
  }
]