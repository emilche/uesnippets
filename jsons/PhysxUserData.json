[
  {
    "label": "UPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterial"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "FConstraintInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintInstance"
  },
  {
    "label": "FKShapeElem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKShapeElem"
  },
  {
    "label": "FPhysScene_PhysX",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysScene_PhysX"
  },
  {
    "label": "FCustomPhysXPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomPhysXPayload"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FPhysxUserData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPhysxUserData"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FPhysxUserData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" EngineDefines . h \" # include \" Physics / PhysicsInterfaceDeclares . h \" class UPhysicalMaterial ; class UPrimitiveComponent ; struct FBodyInstance ; struct FConstraintInstance ; struct FKShapeElem ; class FPhysScene_PhysX ; struct FKShapeElem ; struct FCustomPhysXPayload ; namespace EPhysxUserDataType { enum Type { Invalid,BodyInstance,PhysicalMaterial,PhysScene,ConstraintInstance,PrimitiveComponent,AggShape,CustomPayload,} ; } ; struct FPhysxUserData { protected : EPhysxUserDataType::Type Type ; void* Payload ; public :)",
    "insertText": "FPhysxUserData() :Type(EPhysxUserDataType::Invalid), Payload(nullptr)"
  },
  {
    "label": "FPhysxUserData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysxUserData(FBodyInstance* InPayload) :Type(EPhysxUserDataType::BodyInstance), Payload(InPayload)"
  },
  {
    "label": "FPhysxUserData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysxUserData(UPhysicalMaterial* InPayload) :Type(EPhysxUserDataType::PhysicalMaterial), Payload(InPayload)"
  },
  {
    "label": "FPhysxUserData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysxUserData(FPhysScene* InPayload) :Type(EPhysxUserDataType::PhysScene), Payload(InPayload)"
  },
  {
    "label": "FPhysxUserData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysxUserData(FConstraintInstance* InPayload) :Type(EPhysxUserDataType::ConstraintInstance), Payload(InPayload)"
  },
  {
    "label": "FPhysxUserData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysxUserData(UPrimitiveComponent* InPayload) :Type(EPhysxUserDataType::PrimitiveComponent), Payload(InPayload)"
  },
  {
    "label": "FPhysxUserData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysxUserData(FKShapeElem* InPayload) :Type(EPhysxUserDataType::AggShape), Payload(InPayload)"
  },
  {
    "label": "FPhysxUserData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPhysxUserData(FCustomPhysXPayload* InPayload) :Type(EPhysxUserDataType::CustomPayload), Payload(InPayload)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} template<class T> T*)",
    "insertText": "Get(void* UserData)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (template<class T> void)",
    "insertText": "Set(void* UserData, T* Payload)"
  },
  {
    "label": "IsGarbage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGarbage(void* UserData)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "Set(void* UserData, FBodyInstance* Payload)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "Set(void* UserData, UPhysicalMaterial* Payload)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "Set(void* UserData, FPhysScene* Payload)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "Set(void* UserData, FConstraintInstance* Payload)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "Set(void* UserData, UPrimitiveComponent* Payload)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "Set(void* UserData, FKShapeElem* Payload)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "Set(void* UserData, FCustomPhysXPayload* Payload)"
  }
]