[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FShapedTextOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShapedTextOptions"
  },
  {
    "label": "UTextLayoutWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextLayoutWidget"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Attribute . h \" # include \" Layout / Margin . h \" # include \" Components / Widget . h \" # include \" Framework / Text / TextLayout . h \" # include \" TextWidgetTypes . generated . h \" enum class ETextShapingMethod : uint8 ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UMG_API FShapedTextOptions()"
  },
  {
    "label": "SynchronizeShapedTextProperties()",
    "kind": "Method",
    "detail": "Function (template<TWidgetType> void)",
    "insertText": "SynchronizeShapedTextProperties(TWidgetType& InWidget)"
  },
  {
    "label": "SetTextShapingMethod()",
    "kind": "Method",
    "detail": "Function (InWidget .)",
    "insertText": "SetTextShapingMethod(bOverride_TextShapingMethod ? TOptional<ETextShapingMethod>(TextShapingMethod) : TOptional<ETextShapingMethod>())"
  },
  {
    "label": "SetTextFlowDirection()",
    "kind": "Method",
    "detail": "Function (InWidget .)",
    "insertText": "SetTextFlowDirection(bOverride_TextFlowDirection ? TOptional<ETextFlowDirection>(TextFlowDirection) : TOptional<ETextFlowDirection>())"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FShapedTextOptions& Other)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Abstract, BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: bool GetAutoWrapText()"
  },
  {
    "label": "SetShapedTextOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShapedTextOptions(FShapedTextOptions InShapedTextOptions)"
  },
  {
    "label": "SetWrappingPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWrappingPolicy(ETextWrappingPolicy InWrappingPolicy)"
  },
  {
    "label": "SetAutoWrapText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoWrapText(bool InAutoWrapText)"
  },
  {
    "label": "SetWrapTextAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWrapTextAt(float InWrapTextAt)"
  },
  {
    "label": "SetLineHeightPercentage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLineHeightPercentage(float InLineHeightPercentage)"
  },
  {
    "label": "SetApplyLineHeightToBottomLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetApplyLineHeightToBottomLine(bool InApplyLineHeightToBottomLine)"
  },
  {
    "label": "SetMargin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMargin(const FMargin& InMargin)"
  },
  {
    "label": "OnShapedTextOptionsChanged()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnShapedTextOptionsChanged(FShapedTextOptions InShapedTextOptions)"
  },
  {
    "label": "OnJustificationChanged()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnJustificationChanged(ETextJustify::Type InJustification)"
  },
  {
    "label": "OnWrappingPolicyChanged()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnWrappingPolicyChanged(ETextWrappingPolicy InWrappingPolicy)"
  },
  {
    "label": "OnAutoWrapTextChanged()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnAutoWrapTextChanged(bool InAutoWrapText)"
  },
  {
    "label": "OnWrapTextAtChanged()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnWrapTextAtChanged(float InWrapTextAt)"
  },
  {
    "label": "OnLineHeightPercentageChanged()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnLineHeightPercentageChanged(float InLineHeightPercentage)"
  },
  {
    "label": "OnApplyLineHeightToBottomLineChanged()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnApplyLineHeightToBottomLineChanged(bool InApplyLineHeightToBottomLine)"
  },
  {
    "label": "OnMarginChanged()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnMarginChanged(const FMargin& InMargin)"
  },
  {
    "label": "SynchronizeTextLayoutProperties()",
    "kind": "Method",
    "detail": "Function (} ; template<TWidgetType> void)",
    "insertText": "SynchronizeTextLayoutProperties(TWidgetType& InWidget)"
  },
  {
    "label": "SynchronizeShapedTextProperties()",
    "kind": "Method",
    "detail": "Function (ShapedTextOptions .)",
    "insertText": "SynchronizeShapedTextProperties(InWidget)"
  },
  {
    "label": "SetJustification()",
    "kind": "Method",
    "detail": "Function (InWidget .)",
    "insertText": "SetJustification(Justification)"
  },
  {
    "label": "SetAutoWrapText()",
    "kind": "Method",
    "detail": "Function (InWidget .)",
    "insertText": "SetAutoWrapText(!!AutoWrapText)"
  },
  {
    "label": "SetWrapTextAt()",
    "kind": "Method",
    "detail": "Function (InWidget .)",
    "insertText": "SetWrapTextAt(WrapTextAt != 0 ? WrapTextAt : TAttribute<float>())"
  },
  {
    "label": "SetWrappingPolicy()",
    "kind": "Method",
    "detail": "Function (InWidget .)",
    "insertText": "SetWrappingPolicy(WrappingPolicy)"
  },
  {
    "label": "SetMargin()",
    "kind": "Method",
    "detail": "Function (InWidget .)",
    "insertText": "SetMargin(Margin)"
  },
  {
    "label": "SetLineHeightPercentage()",
    "kind": "Method",
    "detail": "Function (InWidget .)",
    "insertText": "SetLineHeightPercentage(LineHeightPercentage)"
  },
  {
    "label": "SetApplyLineHeightToBottomLine()",
    "kind": "Method",
    "detail": "Function (InWidget .)",
    "insertText": "SetApplyLineHeightToBottomLine(ApplyLineHeightToBottomLine)"
  }
]