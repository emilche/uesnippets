[
  {
    "label": "SEyeDropperButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEyeDropperButton"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Input / CursorReply . h \" # include \" Input / Reply . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Styling / SlateColor . h \" # include \" Widgets / Input / SButton . h \" class SEyeDropperButton : public SButton { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnDropperComplete, bool) SLATE_BEGIN_ARGS( SEyeDropperButton ) : _OnValueChanged() , _OnBegin() , _OnComplete() , _DisplayGamma()"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnLinearColorValueChanged, OnValueChanged) SLATE_EVENT(FSimpleDelegate, OnBegin) SLATE_EVENT(FOnDropperComplete, OnComplete) SLATE_ATTRIBUTE(float, DisplayGamma) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseMove()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseMove(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnCursorQuery()",
    "kind": "Method",
    "detail": "Function (FCursorReply)",
    "insertText": "OnCursorQuery(const FGeometry& MyGeometry, const FPointerEvent& CursorEvent)"
  },
  {
    "label": "OnMouseCaptureLost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseCaptureLost(const FCaptureLostEvent& CaptureLostEvent)"
  },
  {
    "label": "OnClicked()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "OnClicked()"
  },
  {
    "label": "GetEscapeTextVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetEscapeTextVisibility()"
  },
  {
    "label": "GetDropperImageColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetDropperImageColor()"
  },
  {
    "label": "IsMouseOver()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMouseOver(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnPreTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreTick(float DeltaTime)"
  },
  {
    "label": "ResetDropperModeStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDropperModeStates()"
  }
]