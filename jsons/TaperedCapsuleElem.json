[
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FMeshElementCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshElementCollector"
  },
  {
    "label": "FKTaperedCapsuleElem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKTaperedCapsuleElem"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FKTaperedCapsuleElem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FKTaperedCapsuleElem()"
  },
  {
    "label": "FKTaperedCapsuleElem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FKTaperedCapsuleElem( float InRadius0, float InRadius1, float InLength )"
  },
  {
    "label": "FKTaperedCapsuleElem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FKTaperedCapsuleElem(const FKTaperedCapsuleElem&)"
  },
  {
    "label": "FTransform()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FTransform(Rotation, Center )"
  },
  {
    "label": "ScaleElem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScaleElem(FVector DeltaSize, float MinSize)"
  },
  {
    "label": "DrawTaperedCapsuleSides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawTaperedCapsuleSides(FPrimitiveDrawInterface* PDI, const FTransform& ElemTM, const FVector& InCenter0, const FVector& InCenter1, float InRadius0, float InRadius1, const FColor& Color)"
  }
]