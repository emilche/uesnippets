[
  {
    "label": "FJsonDomBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonDomBuilder"
  },
  {
    "label": "FArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArray"
  },
  {
    "label": "FObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObject"
  },
  {
    "label": "TPrintPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPrintPolicy"
  },
  {
    "label": "NumberType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NumberType"
  },
  {
    "label": "BoolType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BoolType"
  },
  {
    "label": "FNumber",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNumber"
  },
  {
    "label": "FObject()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<type_traits> # include \" Dom / JsonValue . h \" # include \" Dom / JsonObject . h \" # include \" Serialization / JsonSerializer . h \" # include \" Templates / UnrealTypeTraits . h \" class FJsonDomBuilder { public : class FArray ; class FObject { public :)",
    "insertText": "FObject() : Object(MakeShared<FJsonObject>())"
  },
  {
    "label": "FObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FObject(TSharedPtr<FJsonObject> InObject) : Object(InObject.ToSharedRef())"
  },
  {
    "label": "FObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FObject(TSharedRef<FJsonObject> InObject) : Object(InObject)"
  },
  {
    "label": "AsJsonValue()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FJsonValueObject>)",
    "insertText": "AsJsonValue()"
  },
  {
    "label": "AsJsonObject()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FJsonObject>)",
    "insertText": "AsJsonObject()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (FString Result ; auto JsonWriter = TJsonWriterFactory<TCHAR,TPrintPolicy<TCHAR>)",
    "insertText": "Create(&Result)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(Object, JsonWriter)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} FObject&)",
    "insertText": "Set(const FString& Key, const FArray& Arr)"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (Object ->)",
    "insertText": "SetField(Key, Arr.AsJsonValue())"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (Object ->)",
    "insertText": "SetField(Key, Obj.AsJsonValue())"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (Object ->)",
    "insertText": "SetField(Key, MakeShared<FJsonValueString>(Str))"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (Object ->)",
    "insertText": "SetField(Key, MakeShared<FJsonValueNumber>(Number))"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (Object ->)",
    "insertText": "SetField(Key, MakeShared<FJsonValueBoolean>(Boolean))"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (Object ->)",
    "insertText": "SetField(Key, MakeShared<FJsonValueNull>())"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (Object ->)",
    "insertText": "SetField(Key, Value ? Value : MakeShared<FJsonValueNull>())"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (Object ->)",
    "insertText": "SetField(KV.Key, KV.Value)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} template<template<class> class TPrintPolicy = TPrettyJsonPrintPolicy> FString)",
    "insertText": "ToString()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(Array, JsonWriter)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} FArray&)",
    "insertText": "Add(const FArray& Arr)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (Array .)",
    "insertText": "Emplace(Arr.AsJsonValue())"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (Array .)",
    "insertText": "Emplace(Obj.AsJsonValue())"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (Array .)",
    "insertText": "Emplace(MakeShared<FJsonValueString>(Str))"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (Array .)",
    "insertText": "Emplace(MakeShared<FJsonValueNumber>(Number))"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (Array .)",
    "insertText": "Emplace(MakeShared<FJsonValueBoolean>(Boolean))"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (Array .)",
    "insertText": "Emplace(MakeShared<FJsonValueNull>())"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (Array .)",
    "insertText": "Emplace(Value)"
  },
  {
    "label": "Temp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Temp(Add(Forward<ValueType>(Value)), 0)"
  }
]