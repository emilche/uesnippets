[
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FViewData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewData"
  },
  {
    "label": "FRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderer"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ShaderParameterMacros . h \" # include \" FroxelDefinitions . h \" class FRDGBuilder ; class FViewInfo ; namespace Froxel {)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FSharedParameters, ) SHADER_PARAMETER(FVector4f, FroxelToViewScaleBias) SHADER_PARAMETER(FVector4f, FroxelToClipScaleBias) SHADER_PARAMETER(FVector2f, FroxelClipToViewScale) SHADER_PARAMETER(float, FroxelRecLog2DepthScale1) SHADER_PARAMETER(float, FroxelRecNearScale) SHADER_PARAMETER(float, FroxelDepthScale1) SHADER_PARAMETER(float, FroxelNear) SHADER_PARAMETER(float, FroxelViewToClipTransformScale) SHADER_PARAMETER(float, FroxelClipToViewTransformScale) SHADER_PARAMETER(float, FroxelClipToViewTransformBias) SHADER_PARAMETER(float, FroxelRadius) SHADER_PARAMETER(float, FroxelInvRadius) SHADER_PARAMETER(uint32, bFroxelIsOrtho) SHADER_PARAMETER(uint32, FroxelArgsOffset) SHADER_PARAMETER(uint32, FroxelArgsStride) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FBuilderParameters, ) SHADER_PARAMETER_STRUCT_INCLUDE(FSharedParameters, FroxelParameters) SHADER_PARAMETER_RDG_BUFFER_UAV(RWStructuredBuffer< FPackedFroxel >, OutFroxels) SHADER_PARAMETER_RDG_BUFFER_UAV(RWBuffer< uint >, OutFroxelArgs) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FParameters, ) SHADER_PARAMETER_STRUCT_INCLUDE(FSharedParameters, FroxelParameters) SHADER_PARAMETER_RDG_BUFFER_SRV(StructuredBuffer< FPackedFroxel >, Froxels) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer< uint >, FroxelArgs) END_SHADER_PARAMETER_STRUCT() FSharedParameters MakeSharedParameters(const FViewInfo &View)"
  },
  {
    "label": "GetBuilderParameters()",
    "kind": "Method",
    "detail": "Function (struct FViewData { class FRenderer* FroxelData = nullptr ; FRDGBuffer* FroxelsRDG = nullptr ; FRDGBuffer* FroxelArgsRDG = nullptr ; FSharedParameters SharedParameters ; int32 ArgsOffset = 0 ; FBuilderParameters)",
    "insertText": "GetBuilderParameters(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "GetShaderParameters()",
    "kind": "Method",
    "detail": "Function (FParameters)",
    "insertText": "GetShaderParameters(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "FRenderer()",
    "kind": "Method",
    "detail": "Function (} ; class FRenderer { public : int32 ArgsStride = 4 ; int32 IndirectWorkGroupSize = FROXEL_INDIRECT_ARG_WORKGROUP_SIZE ; int32 TileSize = FROXEL_TILE_SIZE ;)",
    "insertText": "FRenderer()"
  },
  {
    "label": "FRenderer()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRenderer(bool bIsEnabled, FRDGBuilder& GraphBuilder, const TArray<FViewInfo>& Views)"
  },
  {
    "label": "GetView()",
    "kind": "Method",
    "detail": "Function (const FViewData*)",
    "insertText": "GetView(int32 ViewIndex)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEnabled()"
  }
]