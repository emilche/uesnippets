[
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "UMovieSceneSkeletalAnimationSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSkeletalAnimationSection"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FActiveSkeletalAnimation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveSkeletalAnimation"
  },
  {
    "label": "FBoneTransformFinalizeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoneTransformFinalizeData"
  },
  {
    "label": "FBoundObjectActiveSkeletalAnimations",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoundObjectActiveSkeletalAnimations"
  },
  {
    "label": "FMontagePlayerPerSectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMontagePlayerPerSectionData"
  },
  {
    "label": "FSkeletalAnimationSystemData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalAnimationSystemData"
  },
  {
    "label": "UMovieSceneSkeletalAnimationSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSkeletalAnimationSystem"
  },
  {
    "label": "FBoneTransformFinalizeData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" EntitySystem / MovieSceneSequenceInstanceHandle . h \" # include \" Evaluation / MovieScenePlayback . h \" # include \" UObject / ObjectKey . h \" # include \" MovieSceneSkeletalAnimationSystem . generated . h \" class IMovieScenePlayer ; class UAnimMontage ; class UMovieSceneSkeletalAnimationSection ; enum class ESwapRootBone : uint8 ; namespace UE::MovieScene { struct FActiveSkeletalAnimation { const UMovieSceneSkeletalAnimationSection* AnimSection ; FMovieSceneContext Context ; FFrameTime EvalFrameTime ; FMovieSceneEntityID EntityID ; FRootInstanceHandle RootInstanceHandle ; double BlendWeight ; float FromEvalTime ; float ToEvalTime ; EMovieScenePlayerStatus::Type PlayerStatus ; uint8 bFireNotifies : 1 ; uint8 bPlaying : 1 ; uint8 bResetDynamics : 1 ; uint8 bWantsRestoreState : 1 ; uint8 bPreviewPlayback : 1 ; } ; struct FBoneTransformFinalizeData {)",
    "insertText": "FBoneTransformFinalizeData()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (USkeletalMeshComponent* SkeletalMeshComponent ; ESwapRootBone SwapRootBone ; FTransform CurrentTransform ; TOptional<FTransform> InitialTransform ; FDelegateHandle OnBoneTransformsFinalizedHandle ; void)",
    "insertText": "Register(USkeletalMeshComponent* InSkeleletalMeshCompononent, ESwapRootBone InSwapRootBone, FTransform& InCurrentTransform, TOptional<FTransform> InTransform)"
  },
  {
    "label": "Unregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unregister()"
  },
  {
    "label": "BoneTransformFinalized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BoneTransformFinalized()"
  },
  {
    "label": "ResetSkeletalAnimations()",
    "kind": "Method",
    "detail": "Function (} ; struct FBoundObjectActiveSkeletalAnimations { using FAnimationArray = TArray<FActiveSkeletalAnimation,TInlineAllocator<2>> ; FAnimationArray Animations ; FAnimationArray SimulatedAnimations ; FBoneTransformFinalizeData BoneTransformFinalizeData ; } ; struct FMontagePlayerPerSectionData { TWeakObjectPtr<UAnimMontage> Montage ; int32 MontageInstanceId ; } ; struct FSkeletalAnimationSystemData { void)",
    "insertText": "ResetSkeletalAnimations()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (TMap<USkeletalMeshComponent*,FBoundObjectActiveSkeletalAnimations> SkeletalAnimations ; TMap<FObjectKey,TMap<FObjectKey,FMontagePlayerPerSectionData>> MontageData ; } ; })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UMovieSceneSkeletalAnimationSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "ResolveSkeletalMeshComponentBinding()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "ResolveSkeletalMeshComponentBinding(UObject* InObject)"
  },
  {
    "label": "OnSchedulePersistentTasks()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnSchedulePersistentTasks(UE::MovieScene::IEntitySystemScheduler* TaskScheduler)"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "CleanSystemData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanSystemData()"
  }
]