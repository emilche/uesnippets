[
  {
    "label": "FNetworkReplayVersion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkReplayVersion"
  },
  {
    "label": "FLocalFileNetworkReplayStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalFileNetworkReplayStreamer"
  },
  {
    "label": "FLocalFileReplayCustomVersion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocalFileReplayCustomVersion"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLocalFileChunkInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocalFileChunkInfo"
  },
  {
    "label": "FLocalFileReplayDataInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocalFileReplayDataInfo"
  },
  {
    "label": "FLocalFileEventInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocalFileEventInfo"
  },
  {
    "label": "FLocalFileReplayInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocalFileReplayInfo"
  },
  {
    "label": "FLocalFileStreamFArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalFileStreamFArchive"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCachedFileRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedFileRequest"
  },
  {
    "label": "FQueuedLocalFileRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueuedLocalFileRequest"
  },
  {
    "label": "FGenericQueuedLocalFileRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericQueuedLocalFileRequest"
  },
  {
    "label": "TLocalFileAsyncGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TLocalFileAsyncGraphTask"
  },
  {
    "label": "TGenericQueuedLocalFileRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGenericQueuedLocalFileRequest"
  },
  {
    "label": "TLocalFileRequestCommonData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TLocalFileRequestCommonData"
  },
  {
    "label": "TGenericCachedLocalFileRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGenericCachedLocalFileRequest"
  },
  {
    "label": "FLocalFileNetworkReplayStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalFileNetworkReplayStreamer"
  },
  {
    "label": "FLocalFileSerializationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocalFileSerializationInfo"
  },
  {
    "label": "FLocalFileSerializationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocalFileSerializationInfo"
  },
  {
    "label": "FLocalFileSerializationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocalFileSerializationInfo"
  },
  {
    "label": "FLocalFileNetworkReplayStreamingFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalFileNetworkReplayStreamingFactory"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"StartRecording\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"WriteHeader\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"WritingHeader\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"WritingStream\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"StopRecording\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"StartPlayback\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"ReadingHeader\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"ReadingStream\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"EnumeratingStreams\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"WritingCheckpoint\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"ReadingCheckpoint\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"UpdatingEvent\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"EnumeratingEvents\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"RequestingEvent\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"StopStreaming\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"DeletingFinishedStream\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"RefreshingLiveStream\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"KeepReplay\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"RenameReplay\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"RenameReplayFriendlyName\" )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT( \"Unknown EQueuedLocalFileRequestType type.\" )"
  },
  {
    "label": "CancelRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelRequest()"
  },
  {
    "label": "FLocalFileNetworkReplayStreamer()",
    "kind": "Method",
    "detail": "Function (LOCALFILENETWORKREPLAYSTREAMING_API)",
    "insertText": "FLocalFileNetworkReplayStreamer()"
  },
  {
    "label": "FLocalFileNetworkReplayStreamer()",
    "kind": "Method",
    "detail": "Function (LOCALFILENETWORKREPLAYSTREAMING_API)",
    "insertText": "FLocalFileNetworkReplayStreamer(const FString& InDemoSavePath)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds)"
  },
  {
    "label": "OnFileRequestComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFileRequestComplete(const TSharedPtr<FQueuedLocalFileRequest, ESPMode::ThreadSafe>& Request)"
  },
  {
    "label": "DeleteFinishedStream_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteFinishedStream_Internal(const FString& StreamName, const int32 UserIndex, const FDeleteFinishedStreamCallback& Delegate)"
  },
  {
    "label": "EnumerateEvents_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateEvents_Internal(const FString& ReplayName, const FString& Group, const int32 UserIndex, const FEnumerateEventsCallback& Delegate)"
  },
  {
    "label": "RequestEventData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestEventData_Internal(const FString& ReplayName, const FString& EventId, const int32 UserIndex, const FRequestEventDataCallback& Delegate)"
  },
  {
    "label": "KeepReplay_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "KeepReplay_Internal(const FString& ReplayName, const bool bKeep, const int32 UserIndex, const FKeepReplayCallback& Delegate)"
  },
  {
    "label": "RenameReplayFriendlyName_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameReplayFriendlyName_Internal(const FString& ReplayName, const FString& NewFriendlyName, const int32 UserIndex, const FRenameReplayCallback& Delegate)"
  },
  {
    "label": "RenameReplay_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameReplay_Internal(const FString& ReplayName, const FString& NewName, const int32 UserIndex, const FRenameReplayCallback& Delegate)"
  },
  {
    "label": "ProcessNextFileRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessNextFileRequest()"
  },
  {
    "label": "CancelStreamingRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelStreamingRequests()"
  },
  {
    "label": "SetLastError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastError(FLocalFileReplayResult&& Result)"
  },
  {
    "label": "ConditionallyFlushStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionallyFlushStream()"
  },
  {
    "label": "ConditionallyLoadNextChunk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionallyLoadNextChunk()"
  },
  {
    "label": "ConditionallyRefreshReplayInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionallyRefreshReplayInfo()"
  },
  {
    "label": "FlushCheckpointInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCheckpointInternal(const uint32 TimeInMS)"
  },
  {
    "label": "ReadReplayInfo()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ReadReplayInfo(StreamName, OutReplayInfo, EReadReplayInfoFlags::None)"
  },
  {
    "label": "WriteReplayInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteReplayInfo(const FString& StreamName, const FLocalFileReplayInfo& ReplayInfo)"
  },
  {
    "label": "WriteReplayInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteReplayInfo(FArchive& Archive, const FLocalFileReplayInfo& ReplayInfo)"
  },
  {
    "label": "WriteReplayInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteReplayInfo(FArchive& Archive, const FLocalFileReplayInfo& InReplayInfo, struct FLocalFileSerializationInfo& SerializationInfo)"
  },
  {
    "label": "FlushStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushStream(const uint32 TimeInMS)"
  },
  {
    "label": "WriteHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteHeader()"
  },
  {
    "label": "AddRequestToCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequestToCache(int32 ChunkIndex, const TArray<uint8>& RequestData)"
  },
  {
    "label": "AddRequestToCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequestToCache(int32 ChunkIndex, TArray<uint8>&& RequestData)"
  },
  {
    "label": "CleanupRequestCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupRequestCache()"
  },
  {
    "label": "UpdateCurrentReplayInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCurrentReplayInfo(FLocalFileReplayInfo& ReplayInfo, EUpdateReplayInfoFlags UpdateFlags = EUpdateReplayInfoFlags::None)"
  },
  {
    "label": "GetDemoFullFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDemoFullFilename(const FString& DemoPath, const FString& FileName)"
  },
  {
    "label": "GetDemoFreeStorageSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDemoFreeStorageSpace(uint64& DiskFreeSpace, const FString& DemoPath)"
  }
]