[
  {
    "label": "SDL_Finger",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_Finger"
  },
  {
    "label": "SDL_TOUCH_MOUSEID()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_touch_h_ # define SDL_touch_h_ # include \" SDL_stdinc . h \" # include \" SDL_error . h \" # include \" SDL_video . h \" # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif typedef Sint64 SDL_TouchID ; typedef Sint64 SDL_FingerID ; typedef enum { SDL_TOUCH_DEVICE_INVALID = - 1,SDL_TOUCH_DEVICE_DIRECT,SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE,SDL_TOUCH_DEVICE_INDIRECT_RELATIVE } SDL_TouchDeviceType ; typedef struct SDL_Finger { SDL_FingerID id ; float x ; float y ; float pressure ; } SDL_Finger ; # define)",
    "insertText": "SDL_TOUCH_MOUSEID((Uint32)-1) #define SDL_MOUSE_TOUCHID ((Sint64)-1) extern DECLSPEC int SDLCALL SDL_GetNumTouchDevices(void)"
  },
  {
    "label": "SDL_GetTouchDevice()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_TouchID SDLCALL)",
    "insertText": "SDL_GetTouchDevice(int index)"
  },
  {
    "label": "SDL_GetTouchName()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_GetTouchName(int index)"
  },
  {
    "label": "SDL_GetTouchDeviceType()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_TouchDeviceType SDLCALL)",
    "insertText": "SDL_GetTouchDeviceType(SDL_TouchID touchID)"
  },
  {
    "label": "SDL_GetNumTouchFingers()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetNumTouchFingers(SDL_TouchID touchID)"
  },
  {
    "label": "SDL_GetTouchFinger()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Finger* SDLCALL)",
    "insertText": "SDL_GetTouchFinger(SDL_TouchID touchID, int index)"
  }
]