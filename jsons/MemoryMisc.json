[
  {
    "label": "FGenericMemoryStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericMemoryStats"
  },
  {
    "label": "FGenericMemoryStatsMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericMemoryStatsMap"
  },
  {
    "label": "FScopedMemoryStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedMemoryStats"
  },
  {
    "label": "FSharedMemoryTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSharedMemoryTracker"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / UnrealString . h \" # include \" Containers / Map . h \" # include \" Containers / StringView . h \" # include \" Misc / StringBuilder . h \" # ifndef UE_MEMORY_STAT_DESCRIPTION_LENGTH_DEFAULT # define UE_MEMORY_STAT_DESCRIPTION_LENGTH 6 4 # endif # ifndef UE_MEMORY_STAT_PREALLOCATION_COUNT # define UE_MEMORY_STAT_PREALLOCATION_COUNT 3 2 # endif struct FGenericMemoryStats { private : PRAGMA_DISABLE_DEPRECATION_WARNINGS int32 EntryCount = UE_MEMORY_STAT_PREALLOCATION_COUNT ; int32 StringLength = UE_MEMORY_STAT_DESCRIPTION_LENGTH ; using FInternalMap = TMap<FStringView,SIZE_T,TInlineSetAllocator<EntryCount>> ; public : void)",
    "insertText": "Add(const FStringView& InDescription, SIZE_T InValue)"
  },
  {
    "label": "Emplace_GetRef()",
    "kind": "Method",
    "detail": "Function (const FStringView DescriptionView = Descriptions .)",
    "insertText": "Emplace_GetRef(InPlace, InDescription).ToView()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Data .)",
    "insertText": "Add(DescriptionView, InValue)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (} SIZE_T*)",
    "insertText": "Find(const FStringView& InDescription)"
  },
  {
    "label": "FindRef()",
    "kind": "Method",
    "detail": "Function (} SIZE_T)",
    "insertText": "FindRef(const FStringView& InDescription)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (} FInternalMap::TRangedForConstIterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (} FInternalMap::TRangedForConstIterator)",
    "insertText": "end()"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (} private : TArray<TStringBuilder<StringLength>,TInlineAllocator<EntryCount>> Descriptions ; class FGenericMemoryStatsMap : public FInternalMap { public : SIZE_T*)",
    "insertText": "Find(const FString& InDescription)"
  },
  {
    "label": "DescriptionView()",
    "kind": "Method",
    "detail": "Function (const FStringView)",
    "insertText": "DescriptionView(InDescription)"
  },
  {
    "label": "FindRef()",
    "kind": "Method",
    "detail": "Function (} SIZE_T)",
    "insertText": "FindRef(const FString& InDescription)"
  },
  {
    "label": "FScopedMemoryStats()",
    "kind": "Method",
    "detail": "Function (} ; # ifndef ENABLE_MEMORY_SCOPE_STATS # define ENABLE_MEMORY_SCOPE_STATS 0 # endif # if ENABLE_MEMORY_SCOPE_STATS class FScopedMemoryStats { public :)",
    "insertText": "FScopedMemoryStats(const TCHAR* Name)"
  },
  {
    "label": "FScopedMemoryStats()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FScopedMemoryStats()"
  },
  {
    "label": "PrintMemoryDiff()",
    "kind": "Method",
    "detail": "Function (} } ; # endif # ifndef ENABLE_SHARED_MEMORY_TRACKER # define ENABLE_SHARED_MEMORY_TRACKER 0 # endif # if ENABLE_SHARED_MEMORY_TRACKER&& PLATFORM_UNIX class FSharedMemoryTracker { public : void)",
    "insertText": "PrintMemoryDiff(const TCHAR* Context)"
  },
  {
    "label": "FSharedMemoryTracker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSharedMemoryTracker(const FString& InContext)"
  },
  {
    "label": "FSharedMemoryTracker()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSharedMemoryTracker()"
  },
  {
    "label": "PrintMemoryDiff()",
    "kind": "Method",
    "detail": "Function (private : const FString PrintContext ; const FExtendedPlatformMemoryStats StartStats ; } ; # else class FSharedMemoryTracker { public : void)",
    "insertText": "PrintMemoryDiff(const TCHAR*)"
  },
  {
    "label": "FSharedMemoryTracker()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSharedMemoryTracker(const FString&)"
  }
]