[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "SScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBar"
  },
  {
    "label": "STimingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingView"
  },
  {
    "label": "FFrameTrackSampleRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameTrackSampleRef"
  },
  {
    "label": "SFrameTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFrameTrack"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "HasFrameStatSeries()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasFrameStatSeries(ETraceFrameType FrameType, uint32 TimerId)"
  },
  {
    "label": "AddTimerFrameStatSeries()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTimerFrameStatsTrackSeries>)",
    "insertText": "AddTimerFrameStatSeries(ETraceFrameType FrameType, uint32 TimerId, FLinearColor Color, FText Name)"
  },
  {
    "label": "RemoveTimerFrameStatSeries()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveTimerFrameStatSeries(ETraceFrameType FrameType, uint32 TimerId)"
  },
  {
    "label": "GetNumSeriesForTimer()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumSeriesForTimer(uint32 TimerId)"
  },
  {
    "label": "FindOrAddSeries()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FFrameTrackSeries>)",
    "insertText": "FindOrAddSeries(ETraceFrameType FrameType)"
  },
  {
    "label": "UpdateState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateState()"
  },
  {
    "label": "GetSampleAtMousePosition()",
    "kind": "Method",
    "detail": "Function (FFrameTrackSampleRef)",
    "insertText": "GetSampleAtMousePosition(double X, double Y)"
  },
  {
    "label": "SelectFrameAtMousePosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectFrameAtMousePosition(double X, double Y, bool JoinCurrentSelection)"
  },
  {
    "label": "ShowContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowContextMenu(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "CreateThresholdsMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateThresholdsMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "CreateUpperThresholdWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateUpperThresholdWidget()"
  },
  {
    "label": "CreateLowerThresholdWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateLowerThresholdWidget()"
  },
  {
    "label": "SaveThresholds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveThresholds()"
  },
  {
    "label": "SetThresholdsFPS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThresholdsFPS(double InUpperThresholdFPS, double InLowerThresholdFPS)"
  },
  {
    "label": "CreateThresholdPresetsWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateThresholdPresetsWidget()"
  },
  {
    "label": "CreateSelectedFrameMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSelectedFrameMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "ContextMenu_ShowGameFrames_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowGameFrames_Execute()"
  },
  {
    "label": "ContextMenu_ShowGameFrames_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowGameFrames_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowGameFrames_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowGameFrames_IsChecked()"
  },
  {
    "label": "ContextMenu_ShowRenderingFrames_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowRenderingFrames_Execute()"
  },
  {
    "label": "ContextMenu_ShowRenderingFrames_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowRenderingFrames_CanExecute()"
  },
  {
    "label": "ContextMenu_ShowRenderingFrames_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowRenderingFrames_IsChecked()"
  },
  {
    "label": "ContextMenu_ShowFrameStats_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ShowFrameStats_Execute(ETraceFrameType FrameType, uint32 TimerId)"
  },
  {
    "label": "ContextMenu_ShowFrameStats_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowFrameStats_CanExecute(ETraceFrameType FrameType, uint32 TimerId)"
  },
  {
    "label": "ContextMenu_ShowFrameStats_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ShowFrameStats_IsChecked(ETraceFrameType FrameType, uint32 TimerId)"
  },
  {
    "label": "ContextMenu_AutoZoom_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_AutoZoom_Execute()"
  },
  {
    "label": "ContextMenu_AutoZoom_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_AutoZoom_CanExecute()"
  },
  {
    "label": "ContextMenu_AutoZoom_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_AutoZoom_IsChecked()"
  },
  {
    "label": "AutoZoom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoZoom()"
  },
  {
    "label": "ContextMenu_ZoomTimingViewOnFrameSelection_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ZoomTimingViewOnFrameSelection_Execute()"
  },
  {
    "label": "ContextMenu_ZoomTimingViewOnFrameSelection_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ZoomTimingViewOnFrameSelection_CanExecute()"
  },
  {
    "label": "ContextMenu_ZoomTimingViewOnFrameSelection_IsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ZoomTimingViewOnFrameSelection_IsChecked()"
  },
  {
    "label": "ContextMenu_ScrollLogView_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_ScrollLogView_Execute()"
  },
  {
    "label": "ContextMenu_ScrollLogView_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_ScrollLogView_CanExecute()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "HorizontalScrollBar_OnUserScrolled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HorizontalScrollBar_OnUserScrolled(float ScrollOffset)"
  },
  {
    "label": "UpdateHorizontalScrollBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHorizontalScrollBar()"
  },
  {
    "label": "ZoomHorizontally()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ZoomHorizontally(const float Delta, const float X)"
  }
]