[
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "Instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Instruction"
  },
  {
    "label": "DbgDeclareInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DbgDeclareInst"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "MDOperand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDOperand"
  },
  {
    "label": "Metadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Metadata"
  },
  {
    "label": "ConstantAsMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantAsMetadata"
  },
  {
    "label": "MDTuple",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDTuple"
  },
  {
    "label": "MDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNode"
  },
  {
    "label": "NamedMDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NamedMDNode"
  },
  {
    "label": "GlobalVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalVariable"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "ShaderModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderModel"
  },
  {
    "label": "DxilSignature",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilSignature"
  },
  {
    "label": "DxilEntrySignature",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilEntrySignature"
  },
  {
    "label": "DxilSignatureElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilSignatureElement"
  },
  {
    "label": "DxilModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilModule"
  },
  {
    "label": "DxilResourceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilResourceBase"
  },
  {
    "label": "DxilCBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilCBuffer"
  },
  {
    "label": "DxilResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilResource"
  },
  {
    "label": "DxilSampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilSampler"
  },
  {
    "label": "DxilTypeSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilTypeSystem"
  },
  {
    "label": "DxilStructAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilStructAnnotation"
  },
  {
    "label": "DxilFieldAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilFieldAnnotation"
  },
  {
    "label": "DxilPayloadAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilPayloadAnnotation"
  },
  {
    "label": "DxilPayloadFieldAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilPayloadFieldAnnotation"
  },
  {
    "label": "DxilTemplateArgAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilTemplateArgAnnotation"
  },
  {
    "label": "DxilFunctionAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilFunctionAnnotation"
  },
  {
    "label": "DxilParameterAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilParameterAnnotation"
  },
  {
    "label": "RootSignatureHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RootSignatureHandle"
  },
  {
    "label": "DxilFunctionProps",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilFunctionProps"
  },
  {
    "label": "DxilSubobjects",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilSubobjects"
  },
  {
    "label": "DxilSubobject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilSubobject"
  },
  {
    "label": "DxilCounters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilCounters"
  },
  {
    "label": "DxilDIArrayDim",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilDIArrayDim"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilMDHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilMDHelper"
  },
  {
    "label": "properties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "properties"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "ExtraPropertyHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExtraPropertyHelper"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilExtraPropertyHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilExtraPropertyHelper"
  },
  {
    "label": "ExtraPropertyHelper()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ExtraPropertyHelper(llvm::Module *pModule)"
  },
  {
    "label": "DxilMDHelper()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DxilMDHelper(llvm::Module *pModule, std::unique_ptr<ExtraPropertyHelper> EPH)"
  },
  {
    "label": "SetShaderModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderModel(const ShaderModel *pSM)"
  },
  {
    "label": "EmitDxilVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilVersion(unsigned Major, unsigned Minor)"
  },
  {
    "label": "LoadDxilVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilVersion(unsigned &Major, unsigned &Minor)"
  },
  {
    "label": "EmitValidatorVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitValidatorVersion(unsigned Major, unsigned Minor)"
  },
  {
    "label": "LoadValidatorVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadValidatorVersion(unsigned &Major, unsigned &Minor)"
  },
  {
    "label": "EmitDxilShaderModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilShaderModel(const ShaderModel *pSM)"
  },
  {
    "label": "LoadDxilShaderModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilShaderModel(const ShaderModel *&pSM)"
  },
  {
    "label": "EmitDxilIntermediateOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilIntermediateOptions(uint32_t flags)"
  },
  {
    "label": "LoadDxilIntermediateOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilIntermediateOptions(uint32_t &flags)"
  },
  {
    "label": "EmitDxilEntryPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilEntryPoints(std::vector<llvm::MDNode *> &MDEntries)"
  },
  {
    "label": "UpdateDxilEntryPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDxilEntryPoints(std::vector<llvm::MDNode *> &MDEntries)"
  },
  {
    "label": "GetDxilEntryPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDxilEntryPoint(const llvm::MDNode *MDO, llvm::Function *&pFunc,\n                         std::string &Name, const llvm::MDOperand *&pSignatures,\n                         const llvm::MDOperand *&pResources,\n                         const llvm::MDOperand *&pProperties)"
  },
  {
    "label": "LoadDxilSignatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilSignatures(const llvm::MDOperand &MDO,\n                          DxilEntrySignature &EntrySig)"
  },
  {
    "label": "EmitRootSignature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitRootSignature(std::vector<uint8_t> &SerializedRootSignature)"
  },
  {
    "label": "LoadSignatureMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSignatureMetadata(const llvm::MDOperand &MDO, DxilSignature &Sig)"
  },
  {
    "label": "LoadSignatureElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSignatureElement(const llvm::MDOperand &MDO,\n                            DxilSignatureElement &SE)"
  },
  {
    "label": "LoadRootSignature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadRootSignature(std::vector<uint8_t> &SerializedRootSignature)"
  },
  {
    "label": "EmitDxilResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilResources(llvm::MDTuple *pDxilResourceTuple)"
  },
  {
    "label": "UpdateDxilResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDxilResources(llvm::MDTuple *pDxilResourceTuple)"
  },
  {
    "label": "GetDxilResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDxilResources(const llvm::MDOperand &MDO, const llvm::MDTuple *&pSRVs,\n                        const llvm::MDTuple *&pUAVs,\n                        const llvm::MDTuple *&pCBuffers,\n                        const llvm::MDTuple *&pSamplers)"
  },
  {
    "label": "EmitDxilResourceBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilResourceBase(const DxilResourceBase &R,\n                            llvm::Metadata *ppMDVals[])"
  },
  {
    "label": "LoadDxilResourceBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilResourceBase(const llvm::MDOperand &MDO, DxilResourceBase &R)"
  },
  {
    "label": "LoadDxilSRV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilSRV(const llvm::MDOperand &MDO, DxilResource &SRV)"
  },
  {
    "label": "LoadDxilUAV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilUAV(const llvm::MDOperand &MDO, DxilResource &UAV)"
  },
  {
    "label": "LoadDxilCBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilCBuffer(const llvm::MDOperand &MDO, DxilCBuffer &CB)"
  },
  {
    "label": "LoadDxilSampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilSampler(const llvm::MDOperand &MDO, DxilSampler &S)"
  },
  {
    "label": "EmitDxilTypeSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilTypeSystem(DxilTypeSystem &TypeSystem,\n                          std::vector<llvm::GlobalVariable *> &LLVMUsed)"
  },
  {
    "label": "LoadDxilTypeSystemNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilTypeSystemNode(const llvm::MDTuple &MDT,\n                              DxilTypeSystem &TypeSystem)"
  },
  {
    "label": "LoadDxilTypeSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilTypeSystem(DxilTypeSystem &TypeSystem)"
  },
  {
    "label": "LoadDxilStructAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilStructAnnotation(const llvm::MDOperand &MDO,\n                                DxilStructAnnotation &SA)"
  },
  {
    "label": "LoadDxilFieldAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilFieldAnnotation(const llvm::MDOperand &MDO,\n                               DxilFieldAnnotation &FA)"
  },
  {
    "label": "LoadDxilFunctionAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilFunctionAnnotation(const llvm::MDOperand &MDO,\n                                  DxilFunctionAnnotation &FA)"
  },
  {
    "label": "LoadDxilParamAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilParamAnnotation(const llvm::MDOperand &MDO,\n                               DxilParameterAnnotation &PA)"
  },
  {
    "label": "LoadDxilParamAnnotations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilParamAnnotations(const llvm::MDOperand &MDO,\n                                DxilFunctionAnnotation &FA)"
  },
  {
    "label": "LoadDxilTemplateArgAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilTemplateArgAnnotation(const llvm::MDOperand &MDO,\n                                     DxilTemplateArgAnnotation &annotation)"
  },
  {
    "label": "EmitDxrPayloadAnnotations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxrPayloadAnnotations(DxilTypeSystem &TypeSystem)"
  },
  {
    "label": "LoadDxrPayloadAnnotationNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxrPayloadAnnotationNode(const llvm::MDTuple &MDT,\n                                    DxilTypeSystem &TypeSystem)"
  },
  {
    "label": "LoadDxrPayloadAnnotations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxrPayloadAnnotations(DxilTypeSystem &TypeSystem)"
  },
  {
    "label": "LoadDxrPayloadFieldAnnoations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxrPayloadFieldAnnoations(const llvm::MDOperand &MDO,\n                                     DxilPayloadAnnotation &SA)"
  },
  {
    "label": "LoadDxrPayloadFieldAnnoation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxrPayloadFieldAnnoation(const llvm::MDOperand &MDO,\n                                    DxilPayloadFieldAnnotation &FA)"
  },
  {
    "label": "LoadDxrPayloadAccessQualifiers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxrPayloadAccessQualifiers(const llvm::MDOperand &MDO,\n                                      DxilPayloadFieldAnnotation &FA)"
  },
  {
    "label": "SerializeNodeProps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeNodeProps(llvm::SmallVectorImpl<llvm::Metadata *> &MDVals,\n                          unsigned &valIdx,\n                          const hlsl::DxilFunctionProps *props)"
  },
  {
    "label": "DeserializeNodeProps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeserializeNodeProps(const llvm::MDTuple *pProps, unsigned &idx,\n                            hlsl::DxilFunctionProps *props)"
  },
  {
    "label": "LoadDxilEntryProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilEntryProperties(const llvm::MDOperand &MDO,\n                               uint64_t &rawShaderFlag,\n                               hlsl::DxilFunctionProps &props,\n                               uint32_t &autoBindingSpace)"
  },
  {
    "label": "EmitDxilViewIdState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilViewIdState(std::vector<unsigned> &SerializedState)"
  },
  {
    "label": "LoadDxilViewIdState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilViewIdState(std::vector<unsigned> &SerializedState)"
  },
  {
    "label": "GetControlFlowHintMask()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetControlFlowHintMask(const llvm::Instruction *I)"
  },
  {
    "label": "HasControlFlowHintToPreventFlatten()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasControlFlowHintToPreventFlatten(const llvm::Instruction *I)"
  },
  {
    "label": "EmitSubobjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitSubobjects(const DxilSubobjects &Subobjects)"
  },
  {
    "label": "LoadSubobjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSubobjects(DxilSubobjects &Subobjects)"
  },
  {
    "label": "LoadSubobject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSubobject(const llvm::MDNode &MDO, DxilSubobjects &Subobjects)"
  },
  {
    "label": "EmitDxilCounters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilCounters(const DxilCounters &counters)"
  },
  {
    "label": "LoadDxilGSState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilGSState(const llvm::MDOperand &MDO,\n                       DXIL::InputPrimitive &Primitive,\n                       unsigned &MaxVertexCount, unsigned &ActiveStreamMask,\n                       DXIL::PrimitiveTopology &StreamPrimitiveTopology,\n                       unsigned &GSInstanceCount)"
  },
  {
    "label": "LoadDxilDSState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilDSState(const llvm::MDOperand &MDO,\n                       DXIL::TessellatorDomain &Domain,\n                       unsigned &InputControlPointCount)"
  },
  {
    "label": "LoadDxilHSState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilHSState(const llvm::MDOperand &MDO,\n                       llvm::Function *&pPatchConstantFunction,\n                       unsigned &InputControlPointCount,\n                       unsigned &OutputControlPointCount,\n                       DXIL::TessellatorDomain &TessDomain,\n                       DXIL::TessellatorPartitioning &TessPartitioning,\n                       DXIL::TessellatorOutputPrimitive &TessOutputPrimitive,\n                       float &MaxTessFactor)"
  },
  {
    "label": "LoadDxilMSState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilMSState(const llvm::MDOperand &MDO, unsigned *NumThreads,\n                       unsigned &MaxVertexCount, unsigned &MaxPrimitiveCount,\n                       DXIL::MeshOutputTopology &OutputTopology,\n                       unsigned &payloadSizeInBytes)"
  },
  {
    "label": "LoadDxilASState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilASState(const llvm::MDOperand &MDO, unsigned *NumThreads,\n                       unsigned &payloadSizeInBytes)"
  },
  {
    "label": "LoadDxilNodeIOState()",
    "kind": "Method",
    "detail": "Function (hlsl::NodeIOProperties)",
    "insertText": "LoadDxilNodeIOState(const llvm::MDOperand &MDO)"
  },
  {
    "label": "LoadDxilNodeRecordType()",
    "kind": "Method",
    "detail": "Function (hlsl::NodeRecordType)",
    "insertText": "LoadDxilNodeRecordType(const llvm::MDOperand &MDO)"
  },
  {
    "label": "EmitDxilNodeState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilNodeState(std::vector<llvm::Metadata *> &MDVals,\n                         const DxilFunctionProps &props)"
  },
  {
    "label": "AddCounterIfNonZero()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCounterIfNonZero(uint32_t value, llvm::StringRef name,\n                           std::vector<llvm::Metadata *> &MDVals)"
  },
  {
    "label": "IsKnownNamedMetaData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsKnownNamedMetaData(const llvm::NamedMDNode &Node)"
  },
  {
    "label": "IsKnownMetadataID()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsKnownMetadataID(llvm::LLVMContext &Ctx, unsigned ID)"
  },
  {
    "label": "GetKnownMetadataIDs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKnownMetadataIDs(llvm::LLVMContext &Ctx,\n                                  llvm::SmallVectorImpl<unsigned> *pIDs)"
  },
  {
    "label": "combineDxilMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "combineDxilMetadata(llvm::Instruction *K,\n                                  const llvm::Instruction *J)"
  },
  {
    "label": "ConstMDToInt32()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "ConstMDToInt32(const llvm::MDOperand &MDO)"
  },
  {
    "label": "ConstMDToUint32()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "ConstMDToUint32(const llvm::MDOperand &MDO)"
  },
  {
    "label": "ConstMDToUint64()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "ConstMDToUint64(const llvm::MDOperand &MDO)"
  },
  {
    "label": "ConstMDToInt8()",
    "kind": "Method",
    "detail": "Function (int8_t)",
    "insertText": "ConstMDToInt8(const llvm::MDOperand &MDO)"
  },
  {
    "label": "ConstMDToUint8()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "ConstMDToUint8(const llvm::MDOperand &MDO)"
  },
  {
    "label": "ConstMDToBool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstMDToBool(const llvm::MDOperand &MDO)"
  },
  {
    "label": "ConstMDToFloat()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ConstMDToFloat(const llvm::MDOperand &MDO)"
  },
  {
    "label": "StringMDToString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "StringMDToString(const llvm::MDOperand &MDO)"
  },
  {
    "label": "StringMDToStringRef()",
    "kind": "Method",
    "detail": "Function (llvm::StringRef)",
    "insertText": "StringMDToStringRef(const llvm::MDOperand &MDO)"
  },
  {
    "label": "ConstMDTupleToUint32Vector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstMDTupleToUint32Vector(llvm::MDTuple *pTupleMD,\n                                  std::vector<unsigned> &Vec)"
  },
  {
    "label": "IsMarkedPrecise()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMarkedPrecise(const llvm::Instruction *inst)"
  },
  {
    "label": "MarkPrecise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkPrecise(llvm::Instruction *inst)"
  },
  {
    "label": "IsMarkedNonUniform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMarkedNonUniform(const llvm::Instruction *inst)"
  },
  {
    "label": "MarkNonUniform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkNonUniform(llvm::Instruction *inst)"
  },
  {
    "label": "GetVariableDebugLayout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVariableDebugLayout(llvm::DbgDeclareInst *inst,\n                                     unsigned &StartOffsetInBits,\n                                     std::vector<DxilDIArrayDim> &ArrayDims)"
  },
  {
    "label": "SetVariableDebugLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVariableDebugLayout(llvm::DbgDeclareInst *inst, unsigned StartOffsetInBits,\n                         const std::vector<DxilDIArrayDim> &ArrayDims)"
  },
  {
    "label": "DxilExtraPropertyHelper()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DxilExtraPropertyHelper(llvm::Module *pModule)"
  },
  {
    "label": "EmitSRVProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitSRVProperties(const DxilResource &SRV,\n                                 std::vector<llvm::Metadata *> &MDVals)"
  },
  {
    "label": "LoadSRVProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSRVProperties(const llvm::MDOperand &MDO, DxilResource &SRV)"
  },
  {
    "label": "EmitUAVProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitUAVProperties(const DxilResource &UAV,\n                                 std::vector<llvm::Metadata *> &MDVals)"
  },
  {
    "label": "LoadUAVProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadUAVProperties(const llvm::MDOperand &MDO, DxilResource &UAV)"
  },
  {
    "label": "EmitCBufferProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitCBufferProperties(const DxilCBuffer &CB,\n                                     std::vector<llvm::Metadata *> &MDVals)"
  },
  {
    "label": "LoadCBufferProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadCBufferProperties(const llvm::MDOperand &MDO,\n                                     DxilCBuffer &CB)"
  },
  {
    "label": "EmitSamplerProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitSamplerProperties(const DxilSampler &S,\n                                     std::vector<llvm::Metadata *> &MDVals)"
  },
  {
    "label": "LoadSamplerProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSamplerProperties(const llvm::MDOperand &MDO,\n                                     DxilSampler &S)"
  },
  {
    "label": "EmitSignatureElementProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitSignatureElementProperties(const DxilSignatureElement &SE,\n                                 std::vector<llvm::Metadata *> &MDVals)"
  },
  {
    "label": "LoadSignatureElementProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSignatureElementProperties(const llvm::MDOperand &MDO,\n                                              DxilSignatureElement &SE)"
  }
]