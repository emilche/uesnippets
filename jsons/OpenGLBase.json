[
  {
    "label": "FPlatformOpenGLContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformOpenGLContext"
  },
  {
    "label": "FPlatformOpenGLDevice",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformOpenGLDevice"
  },
  {
    "label": "FOpenGLShaderDeviceCapabilities",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenGLShaderDeviceCapabilities"
  },
  {
    "label": "FOpenGLTextureFormat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenGLTextureFormat"
  },
  {
    "label": "class",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EQueryMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EQueryMode"
  },
  {
    "label": "EFenceResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EFenceResult"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (OPENGLDRV_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogOpenGL, Log, VeryVerbose)"
  },
  {
    "label": "ProcessQueryGLInt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessQueryGLInt()"
  },
  {
    "label": "ProcessExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessExtensions(const FString& ExtensionsString)"
  },
  {
    "label": "glCreateShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "glCreateShader(Type)"
  },
  {
    "label": "glCreateProgram()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "glCreateProgram()"
  },
  {
    "label": "PE_GetCurrentOpenGLShaderDeviceCapabilities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PE_GetCurrentOpenGLShaderDeviceCapabilities(FOpenGLShaderDeviceCapabilities& Capabilities)"
  }
]