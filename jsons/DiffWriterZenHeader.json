[
  {
    "label": "FZenPackageExportsForDiff",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FZenPackageExportsForDiff"
  },
  {
    "label": "FZenHeaderIndexIntoExportMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FZenHeaderIndexIntoExportMap"
  },
  {
    "label": "FDiffWriterZenHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDiffWriterZenHeader"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DiffWriterArchive . h \" # include \" Serialization / ZenPackageHeader . h \" namespace UE::DiffWriter { class FZenPackageExportsForDiff { public : void)",
    "insertText": "Initialize(FAccumulatorGlobals& Globals, FName InPackageName, bool bUseZenStore)"
  },
  {
    "label": "GetExportPackageRelativePath()",
    "kind": "Method",
    "detail": "Function (FStringView)",
    "insertText": "GetExportPackageRelativePath(uint64 PublicExportHash)"
  },
  {
    "label": "InitializeFromZenStore()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InitializeFromZenStore(FAccumulatorGlobals& Globals)"
  },
  {
    "label": "InitializeFromMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromMemory(FAccumulatorGlobals& Globals)"
  },
  {
    "label": "FDiffWriterZenHeader()",
    "kind": "Method",
    "detail": "Function (private : FName PackageName = NAME_None ; TMap<uint64,FString> ExportPaths ; } ; struct FZenHeaderIndexIntoExportMap { int32 Index ; } ; class FDiffWriterZenHeader { public :)",
    "insertText": "FDiffWriterZenHeader(FAccumulatorGlobals& InGlobals, const FMessageCallback& InMessageCallback, bool bInUseZenStoreForImports, const FPackageData& Package, const FString& AssetFilename, const TCHAR* WhichComparisonPackage)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetPackageHeader()",
    "kind": "Method",
    "detail": "Function (const FZenPackageHeader&)",
    "insertText": "GetPackageHeader()"
  },
  {
    "label": "GetObjectIndexPathName()",
    "kind": "Method",
    "detail": "Function (FStringView)",
    "insertText": "GetObjectIndexPathName(FPackageObjectIndex PackageObjectIndex)"
  },
  {
    "label": "IsNameMapIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNameMapIdentical(FDiffWriterZenHeader& DestContext, const TArray<FString>& SourceNames, const TArray<FString>& DestNames)"
  },
  {
    "label": "GetTableKey()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTableKey(const FString& Id)"
  },
  {
    "label": "CompareTableItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompareTableItem(FDiffWriterZenHeader& DestContext, const FString& SourceText, const FString& DestText)"
  },
  {
    "label": "ConvertItemToText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertItemToText(const FString& Id)"
  },
  {
    "label": "IsImportMapIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImportMapIdentical(FDiffWriterZenHeader& DestContext)"
  },
  {
    "label": "GetTableKey()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTableKey(FPackageObjectIndex Id)"
  },
  {
    "label": "CompareTableItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompareTableItem(FDiffWriterZenHeader& DestContext, const FPackageObjectIndex& SourceIndex, const FPackageObjectIndex& DestIndex)"
  },
  {
    "label": "ConvertItemToText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertItemToText(FPackageObjectIndex Id)"
  },
  {
    "label": "IsExportMapIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExportMapIdentical(FDiffWriterZenHeader& DestContext)"
  },
  {
    "label": "GetTableKey()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTableKey(const FZenHeaderIndexIntoExportMap& Id)"
  },
  {
    "label": "CompareTableItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompareTableItem(FDiffWriterZenHeader& DestContext, const FZenHeaderIndexIntoExportMap& SourceExport, const FZenHeaderIndexIntoExportMap& DestExport)"
  },
  {
    "label": "ConvertItemToText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertItemToText(const FZenHeaderIndexIntoExportMap& Id)"
  },
  {
    "label": "IsExportBundlesIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExportBundlesIdentical(FDiffWriterZenHeader& DestContext)"
  },
  {
    "label": "IsExportBundleIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExportBundleIdentical(FDiffWriterZenHeader& DestContext, int32 Index)"
  },
  {
    "label": "ConvertExportBundleToText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertExportBundleToText(int32 Index)"
  },
  {
    "label": "IsDependencyBundlesIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDependencyBundlesIdentical(FDiffWriterZenHeader& DestContext)"
  },
  {
    "label": "IsDependencyBundleIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDependencyBundleIdentical(FDiffWriterZenHeader& DestContext, int32 Index)"
  },
  {
    "label": "ConvertDependencyBundleToText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertDependencyBundleToText(int32 Index)"
  },
  {
    "label": "LogMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogMessage(ELogVerbosity::Type Verbosity, FStringView Message)"
  }
]