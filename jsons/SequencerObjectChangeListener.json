[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "IPropertyChangeListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyChangeListener"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "FSequencerObjectChangeListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerObjectChangeListener"
  },
  {
    "label": "FSequencerObjectChangeListener()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" KeyPropertyParams . h \" # include \" UObject / ObjectKey . h \" # include \" ISequencer . h \" # include \" ISequencerObjectChangeListener . h \" # include \" AnimatedPropertyKey . h \" class AActor ; class IPropertyChangeListener ; class IPropertyHandle ; class FSequencerObjectChangeListener : public ISequencerObjectChangeListener { public :)",
    "insertText": "FSequencerObjectChangeListener(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "FSequencerObjectChangeListener()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSequencerObjectChangeListener()"
  },
  {
    "label": "GetOnAnimatablePropertyChanged()",
    "kind": "Method",
    "detail": "Function (FOnAnimatablePropertyChanged&)",
    "insertText": "GetOnAnimatablePropertyChanged(FAnimatedPropertyKey PropertyKey)"
  },
  {
    "label": "GetOnAnimatablePropertyChanged()",
    "kind": "Method",
    "detail": "Function (FOnAnimatablePropertyChanged&)",
    "insertText": "GetOnAnimatablePropertyChanged(const FProperty* Property)"
  },
  {
    "label": "GetOnPropagateObjectChanges()",
    "kind": "Method",
    "detail": "Function (FOnPropagateObjectChanges&)",
    "insertText": "GetOnPropagateObjectChanges()"
  },
  {
    "label": "GetOnAnyPropertyChanged()",
    "kind": "Method",
    "detail": "Function (FOnObjectPropertyChanged&)",
    "insertText": "GetOnAnyPropertyChanged(UObject& Object)"
  },
  {
    "label": "ReportObjectDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportObjectDestroyed(UObject& Object)"
  },
  {
    "label": "CanKeyProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanKeyProperty(FCanKeyPropertyParams KeyPropertyParams, FPropertyPath& OutPropertyPath)"
  },
  {
    "label": "KeyProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "KeyProperty(FKeyPropertyParams KeyPropertyParams)"
  },
  {
    "label": "TriggerAllPropertiesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerAllPropertiesChanged(UObject* Object)"
  },
  {
    "label": "OnObjectPreEditChange()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnObjectPreEditChange(UObject* Object, const FEditPropertyChain& PropertyChain)"
  },
  {
    "label": "OnObjectPostEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectPostEditChange(UObject* Object, FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OnActorPostEditMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorPostEditMove(AActor* Actor)"
  },
  {
    "label": "OnPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPropertyChanged(const TArray<UObject*>& ChangedObjects, const IPropertyHandle& PropertyHandle)"
  },
  {
    "label": "BroadcastPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPropertyChanged(FKeyPropertyParams KeyPropertyParams)"
  },
  {
    "label": "IsObjectValidForListening()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsObjectValidForListening(UObject* Object)"
  },
  {
    "label": "FindPropertySetter()",
    "kind": "Method",
    "detail": "Function (const FOnAnimatablePropertyChanged*)",
    "insertText": "FindPropertySetter(const UStruct& PropertyStructure, FAnimatedPropertyKey PropertyKey, const FProperty& Property)"
  },
  {
    "label": "CanKeyProperty_Internal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanKeyProperty_Internal(FCanKeyPropertyParams KeyPropertyParams, FOnAnimatablePropertyChanged& InOutDelegate, const FProperty*& InOutProperty, FPropertyPath& InOutPropertyPath)"
  }
]