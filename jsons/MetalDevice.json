[
  {
    "label": "EMetalDebugLevel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMetalDebugLevel"
  },
  {
    "label": "FMetalBindlessDescriptorManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalBindlessDescriptorManager"
  },
  {
    "label": "FMetalDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalDevice"
  },
  {
    "label": "EnumerateFeatureSupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateFeatureSupport()"
  },
  {
    "label": "EndDrawingViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndDrawingViewport(bool bPresent)"
  },
  {
    "label": "CreateTexture()",
    "kind": "Method",
    "detail": "Function (MTLTexturePtr)",
    "insertText": "CreateTexture(FMetalSurface* Surface, MTL::TextureDescriptor* Descriptor)"
  },
  {
    "label": "CreatePooledBuffer()",
    "kind": "Method",
    "detail": "Function (FMetalBufferPtr)",
    "insertText": "CreatePooledBuffer(FMetalPooledBufferArgs const& Args)"
  },
  {
    "label": "CreateEvent()",
    "kind": "Method",
    "detail": "Function (MTLEventPtr)",
    "insertText": "CreateEvent()"
  },
  {
    "label": "DrainHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrainHeap()"
  },
  {
    "label": "GarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GarbageCollect()"
  },
  {
    "label": "AddActiveBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActiveBuffer(MTL::Buffer* Buffer, const NS::Range& Range)"
  },
  {
    "label": "RemoveActiveBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActiveBuffer(MTL::Buffer* Buffer, const NS::Range& Range)"
  },
  {
    "label": "ValidateIsInactiveBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateIsInactiveBuffer(MTL::Buffer* Buffer, const NS::Range& Range)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&InflightCommandBufferCriticalSection)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&InflightCommandBufferCriticalSection)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&InflightCommandBufferCriticalSection)"
  },
  {
    "label": "FMetalDevice()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FMetalDevice(MTL::Device* MetalDevice, uint32 DeviceIndex)"
  },
  {
    "label": "FlushFreeList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushFreeList(bool const bFlushFences = true)"
  },
  {
    "label": "InitializeRayTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeRayTracing()"
  },
  {
    "label": "CleanUpRayTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpRayTracing()"
  },
  {
    "label": "UpdateRayTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRayTracing()"
  }
]