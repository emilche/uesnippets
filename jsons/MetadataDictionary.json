[
  {
    "label": "FMetadataDictionary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetadataDictionary"
  },
  {
    "label": "FMetadataDictionary()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Core / CADKernelArchive . h \" # include \" Core / Types . h \" # include \" Math / MathConst . h \" namespace UE::CADKernel { class FMetadataDictionary { private : FString Name ; int32 HostId = 0 ; int32 PatchId = 0 ; uint32 ColorId = 0 ; uint32 MaterialId = 0 ; int32 LayerId = - 1 ; public :)",
    "insertText": "FMetadataDictionary()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FCADKernelArchive& Ar)"
  },
  {
    "label": "CompleteDictionary()",
    "kind": "Method",
    "detail": "Function (Ar . Archive<<Name ; Ar . Archive<<HostId ; Ar . Archive<<PatchId ; Ar . Archive<<ColorId ; Ar . Archive<<MaterialId ; Ar . Archive<<LayerId ; } void)",
    "insertText": "CompleteDictionary(const FMetadataDictionary& MetaData)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Name = MetaData . Name ; })",
    "insertText": "if(HostId == 0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (HostId = MetaData . HostId ; })",
    "insertText": "if(PatchId == 0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (PatchId = MetaData . PatchId ; })",
    "insertText": "if(ColorId == 0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (ColorId = MetaData . ColorId ; })",
    "insertText": "if(MaterialId == 0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (MaterialId = MetaData . MaterialId ; })",
    "insertText": "if(LayerId == 0)"
  },
  {
    "label": "ExtractMetaData()",
    "kind": "Method",
    "detail": "Function (LayerId = MetaData . LayerId ; } } void)",
    "insertText": "ExtractMetaData(TMap<FString, FString>& OutMetaData)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutMetaData .)",
    "insertText": "Add(TEXT(\"Name\"), Name)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(HostId != 0)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutMetaData .)",
    "insertText": "Add(TEXT(\"HostId\"), FString::FromInt(HostId))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(PatchId != 0)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutMetaData .)",
    "insertText": "Add(TEXT(\"PatchId\"), FString::FromInt(PatchId))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(ColorId != 0)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutMetaData .)",
    "insertText": "Add(TEXT(\"ColorName\"), FString::Printf(TEXT(\"%u\"), ColorId))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(MaterialId != 0)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutMetaData .)",
    "insertText": "Add(TEXT(\"MaterialName\"), FString::Printf(TEXT(\"%u\"), MaterialId))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(LayerId != 0)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutMetaData .)",
    "insertText": "Add(TEXT(\"LayerId\"), FString::FromInt(LayerId))"
  },
  {
    "label": "SetHostId()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "SetHostId(const int32 InHostId)"
  },
  {
    "label": "GetHostId()",
    "kind": "Method",
    "detail": "Function (HostId = InHostId ; } const int32)",
    "insertText": "GetHostId()"
  },
  {
    "label": "GetLayer()",
    "kind": "Method",
    "detail": "Function (LayerId = InLayerId ; } int32)",
    "insertText": "GetLayer()"
  },
  {
    "label": "HasName()",
    "kind": "Method",
    "detail": "Function (Name = InName ; } bool)",
    "insertText": "HasName()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "GetName()"
  },
  {
    "label": "GetColorId()",
    "kind": "Method",
    "detail": "Function (ColorId = InColorId ; } uint32)",
    "insertText": "GetColorId()"
  },
  {
    "label": "GetMaterialId()",
    "kind": "Method",
    "detail": "Function (MaterialId = InMaterialId ; } uint32)",
    "insertText": "GetMaterialId()"
  },
  {
    "label": "GetPatchId()",
    "kind": "Method",
    "detail": "Function (PatchId = InPatchId ; } int32)",
    "insertText": "GetPatchId()"
  }
]