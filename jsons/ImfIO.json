[
  {
    "label": "IMF_EXPORT_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMF_EXPORT_TYPE"
  },
  {
    "label": "StreamIO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StreamIO"
  },
  {
    "label": "CharPtrIO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CharPtrIO"
  },
  {
    "label": "IStream()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMF_IO_H # define INCLUDED_IMF_IO_H # include \" ImfForward . h \" # include<cstdint> # include<string> OPENEXR_IMF_INTERNAL_NAMESPACE_HEADER_ENTER class IMF_EXPORT_TYPE IStream { public : IMF_EXPORT ~)",
    "insertText": "IStream()"
  },
  {
    "label": "isMemoryMapped()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT bool)",
    "insertText": "isMemoryMapped()"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "read(char c[ ], int n)"
  },
  {
    "label": "readMemoryMapped()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT char*)",
    "insertText": "readMemoryMapped(int n)"
  },
  {
    "label": "tellg()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "tellg()"
  },
  {
    "label": "seekg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "seekg(uint64_t pos)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "clear()"
  },
  {
    "label": "fileName()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT const char*)",
    "insertText": "fileName()"
  },
  {
    "label": "IStream()",
    "kind": "Method",
    "detail": "Function (protected : IMF_EXPORT)",
    "insertText": "IStream(const char fileName[])"
  },
  {
    "label": "IStream()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "IStream(const IStream&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IStream&)",
    "insertText": "operator(const IStream&)"
  },
  {
    "label": "IStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IStream(IStream&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IStream&)",
    "insertText": "operator(IStream&&)"
  },
  {
    "label": "OStream()",
    "kind": "Method",
    "detail": "Function (std::string _fileName ; } ; class IMF_EXPORT_TYPE OStream { public : IMF_EXPORT ~)",
    "insertText": "OStream()"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "write(const char c[ ], int n)"
  },
  {
    "label": "tellp()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "tellp()"
  },
  {
    "label": "seekp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "seekp(uint64_t pos)"
  },
  {
    "label": "OStream()",
    "kind": "Method",
    "detail": "Function (protected : IMF_EXPORT)",
    "insertText": "OStream(const char fileName[])"
  },
  {
    "label": "OStream()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "OStream(const OStream&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OStream&)",
    "insertText": "operator(const OStream&)"
  },
  {
    "label": "OStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OStream(OStream&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OStream&)",
    "insertText": "operator(OStream&&)"
  },
  {
    "label": "writeChars()",
    "kind": "Method",
    "detail": "Function (std::string _fileName ; } ; struct StreamIO { void)",
    "insertText": "writeChars(OStream& os, const char c[ ], int n)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "write(c, n)"
  },
  {
    "label": "readChars()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "readChars(IStream& is, char c[ ], int n)"
  },
  {
    "label": "writeChars()",
    "kind": "Method",
    "detail": "Function (} } ; struct CharPtrIO { void)",
    "insertText": "writeChars(char*& op, const char c[ ], int n)"
  },
  {
    "label": "readChars()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "readChars(const char*& ip, char c[ ], int n)"
  }
]