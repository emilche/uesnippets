[
  {
    "label": "UFormattedNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UFormattedNumber"
  },
  {
    "label": "UPluralType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UPluralType"
  },
  {
    "label": "UPluralRules",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UPluralRules"
  },
  {
    "label": "uplrules_open()",
    "kind": "Method",
    "detail": "Function (# ifndef UPLURALRULES_H # define UPLURALRULES_H # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / localpointer . h \" # include \" unicode / uenum . h \" # ifndef # include \" unicode / unum . h \" # endif struct UFormattedNumber ; enum UPluralType { UPLURAL_TYPE_CARDINAL,UPLURAL_TYPE_ORDINAL,# ifndef UPLURAL_TYPE_COUNT # endif } ; typedef enum UPluralType UPluralType ; struct UPluralRules ; typedef struct UPluralRules UPluralRules ; U_CAPI UPluralRules* U_EXPORT2)",
    "insertText": "uplrules_open(const char *locale, UErrorCode *status)"
  },
  {
    "label": "uplrules_openForType()",
    "kind": "Method",
    "detail": "Function (U_CAPI UPluralRules* U_EXPORT2)",
    "insertText": "uplrules_openForType(const char *locale, UPluralType type, UErrorCode *status)"
  },
  {
    "label": "uplrules_close()",
    "kind": "Method",
    "detail": "Function (U_CAPI void U_EXPORT2)",
    "insertText": "uplrules_close(UPluralRules *uplrules)"
  },
  {
    "label": "U_DEFINE_LOCAL_OPEN_POINTER()",
    "kind": "Method",
    "detail": "Function (# if U_NAMESPACE_BEGIN)",
    "insertText": "U_DEFINE_LOCAL_OPEN_POINTER(LocalUPluralRulesPointer, UPluralRules, uplrules_close)"
  },
  {
    "label": "uplrules_select()",
    "kind": "Method",
    "detail": "Function (U_NAMESPACE_END # endif U_CAPI int32_t U_EXPORT2)",
    "insertText": "uplrules_select(const UPluralRules *uplrules, double number, UChar *keyword, int32_t capacity, UErrorCode *status)"
  },
  {
    "label": "uplrules_selectFormatted()",
    "kind": "Method",
    "detail": "Function (# ifndef U_CAPI int32_t U_EXPORT2)",
    "insertText": "uplrules_selectFormatted(const UPluralRules *uplrules, const struct UFormattedNumber* number, UChar *keyword, int32_t capacity, UErrorCode *status)"
  },
  {
    "label": "uplrules_selectWithFormat()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef U_INTERNAL int32_t U_EXPORT2)",
    "insertText": "uplrules_selectWithFormat(const UPluralRules *uplrules, double number, const UNumberFormat *fmt, UChar *keyword, int32_t capacity, UErrorCode *status)"
  },
  {
    "label": "uplrules_getKeywords()",
    "kind": "Method",
    "detail": "Function (# endif U_STABLE UEnumeration* U_EXPORT2)",
    "insertText": "uplrules_getKeywords(const UPluralRules *uplrules, UErrorCode *status)"
  }
]