[
  {
    "label": "BITSTREAM_PROFILE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BITSTREAM_PROFILE"
  },
  {
    "label": "PARSE_RECON_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PARSE_RECON_FLAG"
  },
  {
    "label": "PARTITION_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PARTITION_TYPE"
  },
  {
    "label": "MI_BLOCK_SIZE_LOG2()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_COMMON_VP9_ENUMS_H_ # define VPX_VP9_COMMON_VP9_ENUMS_H_ # include \" . / vpx_config . h \" # include \" vpx / vpx_integer . h \" # ifdef __cplusplus \" C \" { # endif # define MI_SIZE_LOG2 3 # define)",
    "insertText": "MI_BLOCK_SIZE_LOG2(6 - MI_SIZE_LOG2) #define MI_SIZE (1 << MI_SIZE_LOG2) #define MI_BLOCK_SIZE (1 << MI_BLOCK_SIZE_LOG2) #define MI_MASK (MI_BLOCK_SIZE - 1)"
  },
  {
    "label": "PARTITION_CONTEXTS()",
    "kind": "Method",
    "detail": "Function (PROFILE_0,PROFILE_1,PROFILE_2,PROFILE_3,MAX_PROFILES } BITSTREAM_PROFILE ; typedef enum PARSE_RECON_FLAG { PARSE = 1,RECON = 2 } PARSE_RECON_FLAG ; # define BLOCK_4X4 0 # define BLOCK_4X8 1 # define BLOCK_8X4 2 # define BLOCK_8X8 3 # define BLOCK_8X16 4 # define BLOCK_16X8 5 # define BLOCK_16X16 6 # define BLOCK_16X32 7 # define BLOCK_32X16 8 # define BLOCK_32X32 9 # define BLOCK_32X64 1 0 # define BLOCK_64X32 1 1 # define BLOCK_64X64 1 2 # define BLOCK_SIZES 1 3 # define BLOCK_INVALID BLOCK_SIZES typedef uint8_t BLOCK_SIZE ; typedef enum PARTITION_TYPE { PARTITION_NONE,PARTITION_HORZ,PARTITION_VERT,PARTITION_SPLIT,PARTITION_TYPES,PARTITION_INVALID = PARTITION_TYPES } PARTITION_TYPE ; typedef char PARTITION_CONTEXT ; # define PARTITION_PLOFFSET 4 # define)",
    "insertText": "PARTITION_CONTEXTS(4 * PARTITION_PLOFFSET)"
  },
  {
    "label": "TX_4X4()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TX_4X4((TX_SIZE)0) #define TX_8X8 ((TX_SIZE)1) #define TX_16X16 ((TX_SIZE)2) #define TX_32X32 ((TX_SIZE)3) #define TX_SIZES ((TX_SIZE)4)"
  }
]