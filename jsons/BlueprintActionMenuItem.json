[
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "UBlueprintNodeSpawner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintNodeSpawner"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "FBlueprintActionContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintActionContext"
  },
  {
    "label": "FBlueprintActionUiSpec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintActionUiSpec"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "TypeId()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "TypeId(\"FBlueprintActionMenuItem\")"
  },
  {
    "label": "StaticGetTypeId()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "StaticGetTypeId()"
  },
  {
    "label": "AppendBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendBindings(const FBlueprintActionContext& Context, IBlueprintNodeBinder::FBindingSet const& BindingSet)"
  }
]