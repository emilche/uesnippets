[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "SyncSocket()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "SyncSocket(Handle handle)"
  },
  {
    "label": "SyncSocket()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "SyncSocket(ScopedHandle handle)"
  },
  {
    "label": "CreatePair()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreatePair(SyncSocket* socket_a, SyncSocket* socket_b)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "Send()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Send(const void* buffer, size_t length)"
  },
  {
    "label": "Receive()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Receive(void* buffer, size_t length)"
  },
  {
    "label": "ReceiveWithTimeout()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "ReceiveWithTimeout(void* buffer,\n                                    size_t length,\n                                    TimeDelta timeout)"
  },
  {
    "label": "Peek()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Peek()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (Handle)",
    "insertText": "Release()"
  },
  {
    "label": "Take()",
    "kind": "Method",
    "detail": "Function (ScopedHandle)",
    "insertText": "Take()"
  },
  {
    "label": "CancelableSyncSocket()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "CancelableSyncSocket()"
  },
  {
    "label": "CancelableSyncSocket()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "CancelableSyncSocket(Handle handle)"
  },
  {
    "label": "CancelableSyncSocket()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "CancelableSyncSocket(ScopedHandle handle)"
  },
  {
    "label": "CreatePair()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreatePair(CancelableSyncSocket* socket_a,\n                         CancelableSyncSocket* socket_b)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Shutdown()"
  }
]