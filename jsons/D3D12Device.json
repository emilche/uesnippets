[
  {
    "label": "FD3D12Device",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Device"
  },
  {
    "label": "FD3D12DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DynamicRHI"
  },
  {
    "label": "FD3D12Buffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Buffer"
  },
  {
    "label": "FD3D12Queue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Queue"
  },
  {
    "label": "FD3D12ExplicitDescriptorHeapCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ExplicitDescriptorHeapCache"
  },
  {
    "label": "FD3D12RayTracingPipelineCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RayTracingPipelineCache"
  },
  {
    "label": "FD3D12RayTracingCompactionRequestHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RayTracingCompactionRequestHandler"
  },
  {
    "label": "FD3D12RayTracingPipelineInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12RayTracingPipelineInfo"
  },
  {
    "label": "FD3D12DiagnosticBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DiagnosticBuffer"
  },
  {
    "label": "FD3D12Timing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Timing"
  },
  {
    "label": "FD3D12Queue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Queue"
  },
  {
    "label": "on",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "on"
  },
  {
    "label": "FD3D12Device",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Device"
  },
  {
    "label": "FResidencyManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResidencyManager"
  },
  {
    "label": "FD3D12DiagnosticBuffer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12DiagnosticBuffer(FD3D12Queue& Queue)"
  },
  {
    "label": "ToGPUAddress()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ToGPUAddress(Data)"
  },
  {
    "label": "ToGPUAddress()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ToGPUAddress(&Data->MarkerIn )"
  },
  {
    "label": "ToGPUAddress()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ToGPUAddress(&Data->MarkerOut)"
  },
  {
    "label": "FinalizePayload()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "FinalizePayload(bool bRequiresSignal, FPayloadArray& PayloadsToHandDown)"
  },
  {
    "label": "ExecuteCommandLists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteCommandLists(TArrayView<ID3D12CommandList*> D3DCommandLists\n#if ENABLE_RESIDENCY_MANAGEMENT\n\t\t, TArrayView<FD3D12ResidencySet*> ResidencySets\n#endif\n\t)"
  },
  {
    "label": "FD3D12Device()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12Device(FRHIGPUMask InGPUMask, FD3D12Adapter* InAdapter)"
  },
  {
    "label": "GetTimestampFrequency()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetTimestampFrequency(ED3D12QueueType QueueType)"
  },
  {
    "label": "GetCalibrationTimestamp()",
    "kind": "Method",
    "detail": "Function (FGPUTimingCalibrationTimestamp)",
    "insertText": "GetCalibrationTimestamp(ED3D12QueueType QueueType)"
  },
  {
    "label": "BlockUntilIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockUntilIdle()"
  },
  {
    "label": "GetResourceAllocationInfoUncached()",
    "kind": "Method",
    "detail": "Function (D3D12_RESOURCE_ALLOCATION_INFO)",
    "insertText": "GetResourceAllocationInfoUncached(const FD3D12ResourceDesc& InDesc)"
  },
  {
    "label": "GetResourceAllocationInfo()",
    "kind": "Method",
    "detail": "Function (D3D12_RESOURCE_ALLOCATION_INFO)",
    "insertText": "GetResourceAllocationInfo(const FD3D12ResourceDesc& InDesc)"
  },
  {
    "label": "InitExplicitDescriptorHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitExplicitDescriptorHeap()"
  },
  {
    "label": "InitRayTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRayTracing()"
  },
  {
    "label": "CleanupRayTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupRayTracing()"
  },
  {
    "label": "DeserializeRayTracingStateObject()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<ID3D12StateObject>)",
    "insertText": "DeserializeRayTracingStateObject(D3D12_SHADER_BYTECODE Bytecode, ID3D12RootSignature* RootSignature)"
  },
  {
    "label": "GetRaytracingAccelerationStructurePrebuildInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRaytracingAccelerationStructurePrebuildInfo(\n\t\tconst D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS* pDesc,\n\t\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO* pInfo)"
  },
  {
    "label": "GetRayTracingPipelineInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRayTracingPipelineInfo(ID3D12StateObject* Pipeline, FD3D12RayTracingPipelineInfo* OutInfo)"
  },
  {
    "label": "CreateSamplerInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSamplerInternal(const D3D12_SAMPLER_DESC& Desc, D3D12_CPU_DESCRIPTOR_HANDLE Descriptor)"
  },
  {
    "label": "ReleaseCommandAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseCommandAllocator(FD3D12CommandAllocator* Allocator)"
  },
  {
    "label": "ReleaseContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseContext(FD3D12ContextCommon* Context)"
  },
  {
    "label": "ObtainQueryHeap()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FD3D12QueryHeap>)",
    "insertText": "ObtainQueryHeap(ED3D12QueueType QueueType, D3D12_QUERY_TYPE QueryType)"
  },
  {
    "label": "ReleaseQueryHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseQueryHeap(FD3D12QueryHeap* QueryHeap)"
  },
  {
    "label": "ReleaseCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseCommandList(FD3D12CommandList* CommandList)"
  },
  {
    "label": "SetupAfterDeviceCreation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupAfterDeviceCreation()"
  },
  {
    "label": "CleanupResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupResources()"
  },
  {
    "label": "CreateCommandList()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CreateCommandList(\n\t\tUINT                    nodeMask,\n\t\tD3D12_COMMAND_LIST_TYPE type,\n\t\tID3D12CommandAllocator* pCommandAllocator,\n\t\tID3D12PipelineState*    pInitialState,\n\t\tREFIID                  riid,\n\t\tvoid**                  ppCommandList\n\t)"
  },
  {
    "label": "CreateDefaultViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDefaultViews()"
  },
  {
    "label": "UpdateMSAASettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMSAASettings()"
  },
  {
    "label": "UpdateConstantBufferPageProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateConstantBufferPageProperties()"
  },
  {
    "label": "DestroyExplicitDescriptorCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyExplicitDescriptorCache()"
  }
]