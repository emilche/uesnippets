[
  {
    "label": "FCompositeDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompositeDragDropOp"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / DragAndDrop . h \" # include \" DragAndDrop / DecoratedDragDropOp . h \" class FCompositeDragDropOp : public FDecoratedDragDropOp { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FCompositeDragDropOp, FDecoratedDragDropOp) FCompositeDragDropOp() : FDecoratedDragDropOp()"
  },
  {
    "label": "AddSubOp()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddSubOp(const TSharedPtr<FDragDropOperation>& SubOp)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (SubOps .)",
    "insertText": "Add(SubOp)"
  },
  {
    "label": "HasSubOp()",
    "kind": "Method",
    "detail": "Function (} template<T> TSharedPtr<T>)",
    "insertText": "HasSubOp()"
  },
  {
    "label": "GetSubOp()",
    "kind": "Method",
    "detail": "Function (} } return nullptr ; } template<T> const TSharedPtr<const T>)",
    "insertText": "GetSubOp()"
  },
  {
    "label": "ResetToDefaultToolTip()",
    "kind": "Method",
    "detail": "Function (} } return nullptr ; } void)",
    "insertText": "ResetToDefaultToolTip()"
  },
  {
    "label": "FDecoratedDragDropOp()",
    "kind": "Method",
    "detail": "Function (auto DecoratedSubOp = StaticCastSharedPtr<)",
    "insertText": "FDecoratedDragDropOp(SubOp)"
  },
  {
    "label": "GetSubOpPtr()",
    "kind": "Method",
    "detail": "Function (} } } } private : TSharedPtr<FDragDropOperation>)",
    "insertText": "GetSubOpPtr(const FString& TypeId)"
  }
]