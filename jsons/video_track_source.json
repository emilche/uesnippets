[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "VideoTrackSource()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_VIDEO_TRACK_SOURCE_H_ # define PC_VIDEO_TRACK_SOURCE_H_ # include \" absl / types / optional . h \" # include \" api / media_stream_interface . h \" # include \" api / notifier . h \" # include \" api / sequence_checker . h \" # include \" api / video / recordable_encoded_frame . h \" # include \" api / video / video_frame . h \" # include \" api / video / video_sink_interface . h \" # include \" api / video / video_source_interface . h \" # include \" media / base / media_channel . h \" # include \" rtc_base / checks . h \" # include \" rtc_base / system / no_unique_address . h \" # include \" rtc_base / system / rtc_export . h \" # include \" rtc_base / thread_annotations . h \" namespace webrtc { class RTC_EXPORT VideoTrackSource : public Notifier<VideoTrackSourceInterface> { public :)",
    "insertText": "VideoTrackSource(bool remote)"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState(SourceState new_state)"
  },
  {
    "label": "state()",
    "kind": "Method",
    "detail": "Function (SourceState)",
    "insertText": "state()"
  },
  {
    "label": "RTC_DCHECK_RUN_ON()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_RUN_ON(&signaling_thread_checker_)"
  },
  {
    "label": "RemoveSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSink(rtc::VideoSinkInterface<VideoFrame>* sink)"
  },
  {
    "label": "SupportsEncodedOutput()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsEncodedOutput()"
  },
  {
    "label": "AddEncodedSink()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddEncodedSink(rtc::VideoSinkInterface<RecordableEncodedFrame>* sink)"
  },
  {
    "label": "RemoveEncodedSink()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveEncodedSink(rtc::VideoSinkInterface<RecordableEncodedFrame>* sink)"
  },
  {
    "label": "source()",
    "kind": "Method",
    "detail": "Function (} protected : rtc::VideoSourceInterface<VideoFrame>*)",
    "insertText": "source()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : RTC_NO_UNIQUE_ADDRESS SequenceChecker worker_thread_checker_ ; RTC_NO_UNIQUE_ADDRESS SequenceChecker signaling_thread_checker_ ; SourceState state_)",
    "insertText": "RTC_GUARDED_BY(&signaling_thread_checker_)"
  }
]