[
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "COMMONMENUEXTENSIONS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COMMONMENUEXTENSIONS_API"
  },
  {
    "label": "FBufferVisualizationRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBufferVisualizationRecord"
  },
  {
    "label": "FBufferVisualizationRecord()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Framework / Commands / Commands . h \" # include \" Framework / Commands / UICommandInfo . h \" # include \" Framework / MultiBox / MultiBoxBuilder . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FEditorViewportClient ; class FMenuBuilder ; class FUICommandInfo ; class FUICommandList ; class FBufferVisualizationMenuCommands : public TCommands<FBufferVisualizationMenuCommands> { public : struct FBufferVisualizationRecord { FName Name ; TSharedPtr<FUICommandInfo> Command ;)",
    "insertText": "FBufferVisualizationRecord() : Name(), Command()"
  },
  {
    "label": "FBufferVisualizationMenuCommands()",
    "kind": "Method",
    "detail": "Function (} } ; typedef TMultiMap<FName,FBufferVisualizationRecord> TBufferVisualizationModeCommandMap ; typedef TBufferVisualizationModeCommandMap::TConstIterator TCommandConstIterator ;)",
    "insertText": "FBufferVisualizationMenuCommands()"
  },
  {
    "label": "CreateCommandConstIterator()",
    "kind": "Method",
    "detail": "Function (TCommandConstIterator)",
    "insertText": "CreateCommandConstIterator()"
  },
  {
    "label": "OverviewCommand()",
    "kind": "Method",
    "detail": "Function (const FBufferVisualizationRecord&)",
    "insertText": "OverviewCommand()"
  },
  {
    "label": "BuildVisualisationSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildVisualisationSubMenu(FMenuBuilder& Menu)"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCommands()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands(FUICommandList& CommandList, const TSharedPtr<FEditorViewportClient>& Client)"
  },
  {
    "label": "BuildCommandMap()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BuildCommandMap()"
  },
  {
    "label": "CreateOverviewCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateOverviewCommand()"
  },
  {
    "label": "CreateVisualizationCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateVisualizationCommands()"
  },
  {
    "label": "AddOverviewCommandToMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOverviewCommandToMenu(FMenuBuilder& Menu)"
  },
  {
    "label": "AddVisualizationCommandsToMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVisualizationCommandsToMenu(FMenuBuilder& menu)"
  },
  {
    "label": "ChangeBufferVisualizationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeBufferVisualizationMode(TWeakPtr<FEditorViewportClient> WeakClient, FName InName)"
  },
  {
    "label": "IsBufferVisualizationModeSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBufferVisualizationModeSelected(TWeakPtr<FEditorViewportClient> WeakClient, FName InName)"
  }
]