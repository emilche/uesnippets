[
  {
    "label": "TObjectID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TObjectID"
  },
  {
    "label": "TPersistentObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPersistentObjectPtr"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "TIsWeakPointerType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsWeakPointerType"
  },
  {
    "label": "TPersistentObjectPtr()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / Object . h \" # include \" UObject / WeakObjectPtr . h \" template<class TObjectID> struct TPersistentObjectPtr { using ElementType = TObjectID ;)",
    "insertText": "TPersistentObjectPtr()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ResetWeakPtr()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetWeakPtr()"
  },
  {
    "label": "TPersistentObjectPtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TPersistentObjectPtr(const TObjectID& InObjectID) : WeakPtr() , ObjectID(InObjectID)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "operator(const TObjectID& InObjectID)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ObjectID = InObjectID ; } void)",
    "insertText": "operator(const class UObject* Object)"
  },
  {
    "label": "GetOrCreateIDForObject()",
    "kind": "Method",
    "detail": "Function (ObjectID =)",
    "insertText": "GetOrCreateIDForObject(Object)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "operator(const FWeakObjectPtr& Other)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const UObject* Object = Other .)",
    "insertText": "Get()"
  },
  {
    "label": "GetUniqueID()",
    "kind": "Method",
    "detail": "Function (* this = Object ; } const TObjectID&)",
    "insertText": "GetUniqueID()"
  },
  {
    "label": "ResolveObject()",
    "kind": "Method",
    "detail": "Function (Object = ObjectID .)",
    "insertText": "ResolveObject()"
  },
  {
    "label": "GetValid()",
    "kind": "Method",
    "detail": "Function (WeakPtr = Object ; })",
    "insertText": "GetValid(Object)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} return Object ; } UObject*)",
    "insertText": "Get(bool bEvenIfPendingKill)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (UObject* Object = WeakPtr .)",
    "insertText": "Get(bEvenIfPendingKill)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FWeakObjectPtr LocalWeakPtr = Object ;)",
    "insertText": "if(CanCacheObjectPointer(Object))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} return Object ; } class UObject&)",
    "insertText": "operator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const TPersistentObjectPtr& Lhs, const TPersistentObjectPtr& Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(TYPE_OF_NULLPTR, const TPersistentObjectPtr& Rhs)"
  },
  {
    "label": "IsPending()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPending()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsStale()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsStale()"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNull()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const TPersistentObjectPtr& Ptr)"
  },
  {
    "label": "CanCacheObjectPointer()",
    "kind": "Method",
    "detail": "Function (} private : bool)",
    "insertText": "CanCacheObjectPointer(const UObject* Ptr)"
  }
]