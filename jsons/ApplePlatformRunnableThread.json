[
  {
    "label": "FRunnableThreadApple",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRunnableThreadApple"
  },
  {
    "label": "FRunnableThreadApple()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Runtime / Core / Private / HAL / PThreadRunnableThread . h \" class FRunnableThreadApple : public FRunnableThreadPThread { public :)",
    "insertText": "FRunnableThreadApple() : Pool(NULL)"
  },
  {
    "label": "FRunnableThreadApple()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FRunnableThreadApple()"
  },
  {
    "label": "FRunnableThreadPThread_DestructorBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRunnableThreadPThread_DestructorBody()"
  },
  {
    "label": "PreRun()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "PreRun()"
  },
  {
    "label": "CreateAutoreleasePool()",
    "kind": "Method",
    "detail": "Function (Pool =)",
    "insertText": "CreateAutoreleasePool()"
  },
  {
    "label": "pthread_setname_np()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pthread_setname_np(TCHAR_TO_ANSI(*ThreadName))"
  },
  {
    "label": "PostRun()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostRun()"
  },
  {
    "label": "ReleaseAutoreleasePool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseAutoreleasePool(Pool)"
  },
  {
    "label": "GetDefaultStackSize()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetDefaultStackSize()"
  },
  {
    "label": "AdjustStackSize()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "AdjustStackSize(uint32 InStackSize)"
  },
  {
    "label": "AdjustStackSize()",
    "kind": "Method",
    "detail": "Function (InStackSize =)",
    "insertText": "AdjustStackSize(InStackSize)"
  },
  {
    "label": "TranslateThreadPriority()",
    "kind": "Method",
    "detail": "Function (} return InStackSize ; } int32)",
    "insertText": "TranslateThreadPriority(EThreadPriority Priority)"
  }
]