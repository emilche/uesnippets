[
  {
    "label": "TS_msg_imprint_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TS_msg_imprint_st"
  },
  {
    "label": "TS_req_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TS_req_st"
  },
  {
    "label": "TS_accuracy_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TS_accuracy_st"
  },
  {
    "label": "TS_tst_info_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TS_tst_info_st"
  },
  {
    "label": "TS_status_info_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TS_status_info_st"
  },
  {
    "label": "ESS_issuer_serial",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ESS_issuer_serial"
  },
  {
    "label": "ESS_cert_id",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ESS_cert_id"
  },
  {
    "label": "ESS_signing_cert",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ESS_signing_cert"
  },
  {
    "label": "ESS_cert_id_v2_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ESS_cert_id_v2_st"
  },
  {
    "label": "ESS_signing_cert_v2_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ESS_signing_cert_v2_st"
  },
  {
    "label": "TS_resp_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TS_resp_st"
  },
  {
    "label": "TS_resp_ctx",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TS_resp_ctx"
  },
  {
    "label": "TS_verify_ctx",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TS_verify_ctx"
  },
  {
    "label": "DEFINE_STACK_OF()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_TS_H # define HEADER_TS_H # include<openssl / opensslconf . h> # ifndef OPENSSL_NO_TS # include<openssl / symhacks . h> # include<openssl / buffer . h> # include<openssl / evp . h> # include<openssl / bio . h> # include<openssl / asn1 . h> # include<openssl / safestack . h> # include<openssl / rsa . h> # include<openssl / dsa . h> # include<openssl / dh . h> # include<openssl / tserr . h> # ifdef __cplusplus \" C \" { # endif # include<openssl / x509 . h> # include<openssl / x509v3 . h> typedef struct TS_msg_imprint_st TS_MSG_IMPRINT ; typedef struct TS_req_st TS_REQ ; typedef struct TS_accuracy_st TS_ACCURACY ; typedef struct TS_tst_info_st TS_TST_INFO ; # define TS_STATUS_GRANTED 0 # define TS_STATUS_GRANTED_WITH_MODS 1 # define TS_STATUS_REJECTION 2 # define TS_STATUS_WAITING 3 # define TS_STATUS_REVOCATION_WARNING 4 # define TS_STATUS_REVOCATION_NOTIFICATION 5 # define TS_INFO_BAD_ALG 0 # define TS_INFO_BAD_REQUEST 2 # define TS_INFO_BAD_DATA_FORMAT 5 # define TS_INFO_TIME_NOT_AVAILABLE 1 4 # define TS_INFO_UNACCEPTED_POLICY 1 5 # define TS_INFO_UNACCEPTED_EXTENSION 1 6 # define TS_INFO_ADD_INFO_NOT_AVAILABLE 1 7 # define TS_INFO_SYSTEM_FAILURE 2 5 typedef struct TS_status_info_st TS_STATUS_INFO ; typedef struct ESS_issuer_serial ESS_ISSUER_SERIAL ; typedef struct ESS_cert_id ESS_CERT_ID ; typedef struct ESS_signing_cert ESS_SIGNING_CERT ;)",
    "insertText": "DEFINE_STACK_OF(ESS_CERT_ID)"
  },
  {
    "label": "DEFINE_STACK_OF()",
    "kind": "Method",
    "detail": "Function (typedef struct ESS_signing_cert_v2_st ESS_SIGNING_CERT_V2 ;)",
    "insertText": "DEFINE_STACK_OF(ESS_CERT_ID_V2)"
  },
  {
    "label": "TS_REQ_new()",
    "kind": "Method",
    "detail": "Function (TS_REQ*)",
    "insertText": "TS_REQ_new(void)"
  },
  {
    "label": "TS_REQ_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_REQ_free(TS_REQ *a)"
  },
  {
    "label": "i2d_TS_REQ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_REQ(const TS_REQ *a, unsigned char **pp)"
  },
  {
    "label": "d2i_TS_REQ()",
    "kind": "Method",
    "detail": "Function (TS_REQ*)",
    "insertText": "d2i_TS_REQ(TS_REQ **a, const unsigned char **pp, long length)"
  },
  {
    "label": "TS_REQ_dup()",
    "kind": "Method",
    "detail": "Function (TS_REQ*)",
    "insertText": "TS_REQ_dup(TS_REQ *a)"
  },
  {
    "label": "d2i_TS_REQ_fp()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_STDIO TS_REQ*)",
    "insertText": "d2i_TS_REQ_fp(FILE *fp, TS_REQ **a)"
  },
  {
    "label": "i2d_TS_REQ_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_REQ_fp(FILE *fp, TS_REQ *a)"
  },
  {
    "label": "d2i_TS_REQ_bio()",
    "kind": "Method",
    "detail": "Function (# endif TS_REQ*)",
    "insertText": "d2i_TS_REQ_bio(BIO *fp, TS_REQ **a)"
  },
  {
    "label": "i2d_TS_REQ_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_REQ_bio(BIO *fp, TS_REQ *a)"
  },
  {
    "label": "TS_MSG_IMPRINT_new()",
    "kind": "Method",
    "detail": "Function (TS_MSG_IMPRINT*)",
    "insertText": "TS_MSG_IMPRINT_new(void)"
  },
  {
    "label": "TS_MSG_IMPRINT_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_MSG_IMPRINT_free(TS_MSG_IMPRINT *a)"
  },
  {
    "label": "i2d_TS_MSG_IMPRINT()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_MSG_IMPRINT(const TS_MSG_IMPRINT *a, unsigned char **pp)"
  },
  {
    "label": "d2i_TS_MSG_IMPRINT()",
    "kind": "Method",
    "detail": "Function (TS_MSG_IMPRINT*)",
    "insertText": "d2i_TS_MSG_IMPRINT(TS_MSG_IMPRINT **a, const unsigned char **pp, long length)"
  },
  {
    "label": "TS_MSG_IMPRINT_dup()",
    "kind": "Method",
    "detail": "Function (TS_MSG_IMPRINT*)",
    "insertText": "TS_MSG_IMPRINT_dup(TS_MSG_IMPRINT *a)"
  },
  {
    "label": "d2i_TS_MSG_IMPRINT_fp()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_STDIO TS_MSG_IMPRINT*)",
    "insertText": "d2i_TS_MSG_IMPRINT_fp(FILE *fp, TS_MSG_IMPRINT **a)"
  },
  {
    "label": "i2d_TS_MSG_IMPRINT_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_MSG_IMPRINT_fp(FILE *fp, TS_MSG_IMPRINT *a)"
  },
  {
    "label": "d2i_TS_MSG_IMPRINT_bio()",
    "kind": "Method",
    "detail": "Function (# endif TS_MSG_IMPRINT*)",
    "insertText": "d2i_TS_MSG_IMPRINT_bio(BIO *bio, TS_MSG_IMPRINT **a)"
  },
  {
    "label": "i2d_TS_MSG_IMPRINT_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_MSG_IMPRINT_bio(BIO *bio, TS_MSG_IMPRINT *a)"
  },
  {
    "label": "TS_RESP_new()",
    "kind": "Method",
    "detail": "Function (TS_RESP*)",
    "insertText": "TS_RESP_new(void)"
  },
  {
    "label": "TS_RESP_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_RESP_free(TS_RESP *a)"
  },
  {
    "label": "i2d_TS_RESP()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_RESP(const TS_RESP *a, unsigned char **pp)"
  },
  {
    "label": "d2i_TS_RESP()",
    "kind": "Method",
    "detail": "Function (TS_RESP*)",
    "insertText": "d2i_TS_RESP(TS_RESP **a, const unsigned char **pp, long length)"
  },
  {
    "label": "PKCS7_to_TS_TST_INFO()",
    "kind": "Method",
    "detail": "Function (TS_TST_INFO*)",
    "insertText": "PKCS7_to_TS_TST_INFO(PKCS7 *token)"
  },
  {
    "label": "TS_RESP_dup()",
    "kind": "Method",
    "detail": "Function (TS_RESP*)",
    "insertText": "TS_RESP_dup(TS_RESP *a)"
  },
  {
    "label": "d2i_TS_RESP_fp()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_STDIO TS_RESP*)",
    "insertText": "d2i_TS_RESP_fp(FILE *fp, TS_RESP **a)"
  },
  {
    "label": "i2d_TS_RESP_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_RESP_fp(FILE *fp, TS_RESP *a)"
  },
  {
    "label": "d2i_TS_RESP_bio()",
    "kind": "Method",
    "detail": "Function (# endif TS_RESP*)",
    "insertText": "d2i_TS_RESP_bio(BIO *bio, TS_RESP **a)"
  },
  {
    "label": "i2d_TS_RESP_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_RESP_bio(BIO *bio, TS_RESP *a)"
  },
  {
    "label": "TS_STATUS_INFO_new()",
    "kind": "Method",
    "detail": "Function (TS_STATUS_INFO*)",
    "insertText": "TS_STATUS_INFO_new(void)"
  },
  {
    "label": "TS_STATUS_INFO_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_STATUS_INFO_free(TS_STATUS_INFO *a)"
  },
  {
    "label": "i2d_TS_STATUS_INFO()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_STATUS_INFO(const TS_STATUS_INFO *a, unsigned char **pp)"
  },
  {
    "label": "d2i_TS_STATUS_INFO()",
    "kind": "Method",
    "detail": "Function (TS_STATUS_INFO*)",
    "insertText": "d2i_TS_STATUS_INFO(TS_STATUS_INFO **a, const unsigned char **pp, long length)"
  },
  {
    "label": "TS_STATUS_INFO_dup()",
    "kind": "Method",
    "detail": "Function (TS_STATUS_INFO*)",
    "insertText": "TS_STATUS_INFO_dup(TS_STATUS_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_new()",
    "kind": "Method",
    "detail": "Function (TS_TST_INFO*)",
    "insertText": "TS_TST_INFO_new(void)"
  },
  {
    "label": "TS_TST_INFO_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_TST_INFO_free(TS_TST_INFO *a)"
  },
  {
    "label": "i2d_TS_TST_INFO()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_TST_INFO(const TS_TST_INFO *a, unsigned char **pp)"
  },
  {
    "label": "d2i_TS_TST_INFO()",
    "kind": "Method",
    "detail": "Function (TS_TST_INFO*)",
    "insertText": "d2i_TS_TST_INFO(TS_TST_INFO **a, const unsigned char **pp, long length)"
  },
  {
    "label": "TS_TST_INFO_dup()",
    "kind": "Method",
    "detail": "Function (TS_TST_INFO*)",
    "insertText": "TS_TST_INFO_dup(TS_TST_INFO *a)"
  },
  {
    "label": "d2i_TS_TST_INFO_fp()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_STDIO TS_TST_INFO*)",
    "insertText": "d2i_TS_TST_INFO_fp(FILE *fp, TS_TST_INFO **a)"
  },
  {
    "label": "i2d_TS_TST_INFO_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_TST_INFO_fp(FILE *fp, TS_TST_INFO *a)"
  },
  {
    "label": "d2i_TS_TST_INFO_bio()",
    "kind": "Method",
    "detail": "Function (# endif TS_TST_INFO*)",
    "insertText": "d2i_TS_TST_INFO_bio(BIO *bio, TS_TST_INFO **a)"
  },
  {
    "label": "i2d_TS_TST_INFO_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_TST_INFO_bio(BIO *bio, TS_TST_INFO *a)"
  },
  {
    "label": "TS_ACCURACY_new()",
    "kind": "Method",
    "detail": "Function (TS_ACCURACY*)",
    "insertText": "TS_ACCURACY_new(void)"
  },
  {
    "label": "TS_ACCURACY_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_ACCURACY_free(TS_ACCURACY *a)"
  },
  {
    "label": "i2d_TS_ACCURACY()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_TS_ACCURACY(const TS_ACCURACY *a, unsigned char **pp)"
  },
  {
    "label": "d2i_TS_ACCURACY()",
    "kind": "Method",
    "detail": "Function (TS_ACCURACY*)",
    "insertText": "d2i_TS_ACCURACY(TS_ACCURACY **a, const unsigned char **pp, long length)"
  },
  {
    "label": "TS_ACCURACY_dup()",
    "kind": "Method",
    "detail": "Function (TS_ACCURACY*)",
    "insertText": "TS_ACCURACY_dup(TS_ACCURACY *a)"
  },
  {
    "label": "ESS_ISSUER_SERIAL_new()",
    "kind": "Method",
    "detail": "Function (ESS_ISSUER_SERIAL*)",
    "insertText": "ESS_ISSUER_SERIAL_new(void)"
  },
  {
    "label": "ESS_ISSUER_SERIAL_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ESS_ISSUER_SERIAL_free(ESS_ISSUER_SERIAL *a)"
  },
  {
    "label": "i2d_ESS_ISSUER_SERIAL()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_ESS_ISSUER_SERIAL(const ESS_ISSUER_SERIAL *a, unsigned char **pp)"
  },
  {
    "label": "d2i_ESS_ISSUER_SERIAL()",
    "kind": "Method",
    "detail": "Function (ESS_ISSUER_SERIAL*)",
    "insertText": "d2i_ESS_ISSUER_SERIAL(ESS_ISSUER_SERIAL **a, const unsigned char **pp, long length)"
  },
  {
    "label": "ESS_ISSUER_SERIAL_dup()",
    "kind": "Method",
    "detail": "Function (ESS_ISSUER_SERIAL*)",
    "insertText": "ESS_ISSUER_SERIAL_dup(ESS_ISSUER_SERIAL *a)"
  },
  {
    "label": "ESS_CERT_ID_new()",
    "kind": "Method",
    "detail": "Function (ESS_CERT_ID*)",
    "insertText": "ESS_CERT_ID_new(void)"
  },
  {
    "label": "ESS_CERT_ID_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ESS_CERT_ID_free(ESS_CERT_ID *a)"
  },
  {
    "label": "i2d_ESS_CERT_ID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_ESS_CERT_ID(const ESS_CERT_ID *a, unsigned char **pp)"
  },
  {
    "label": "d2i_ESS_CERT_ID()",
    "kind": "Method",
    "detail": "Function (ESS_CERT_ID*)",
    "insertText": "d2i_ESS_CERT_ID(ESS_CERT_ID **a, const unsigned char **pp, long length)"
  },
  {
    "label": "ESS_CERT_ID_dup()",
    "kind": "Method",
    "detail": "Function (ESS_CERT_ID*)",
    "insertText": "ESS_CERT_ID_dup(ESS_CERT_ID *a)"
  },
  {
    "label": "ESS_SIGNING_CERT_new()",
    "kind": "Method",
    "detail": "Function (ESS_SIGNING_CERT*)",
    "insertText": "ESS_SIGNING_CERT_new(void)"
  },
  {
    "label": "ESS_SIGNING_CERT_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ESS_SIGNING_CERT_free(ESS_SIGNING_CERT *a)"
  },
  {
    "label": "i2d_ESS_SIGNING_CERT()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_ESS_SIGNING_CERT(const ESS_SIGNING_CERT *a, unsigned char **pp)"
  },
  {
    "label": "d2i_ESS_SIGNING_CERT()",
    "kind": "Method",
    "detail": "Function (ESS_SIGNING_CERT*)",
    "insertText": "d2i_ESS_SIGNING_CERT(ESS_SIGNING_CERT **a, const unsigned char **pp, long length)"
  },
  {
    "label": "ESS_SIGNING_CERT_dup()",
    "kind": "Method",
    "detail": "Function (ESS_SIGNING_CERT*)",
    "insertText": "ESS_SIGNING_CERT_dup(ESS_SIGNING_CERT *a)"
  },
  {
    "label": "ESS_CERT_ID_V2_new()",
    "kind": "Method",
    "detail": "Function (ESS_CERT_ID_V2*)",
    "insertText": "ESS_CERT_ID_V2_new(void)"
  },
  {
    "label": "ESS_CERT_ID_V2_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ESS_CERT_ID_V2_free(ESS_CERT_ID_V2 *a)"
  },
  {
    "label": "i2d_ESS_CERT_ID_V2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_ESS_CERT_ID_V2(const ESS_CERT_ID_V2 *a, unsigned char **pp)"
  },
  {
    "label": "d2i_ESS_CERT_ID_V2()",
    "kind": "Method",
    "detail": "Function (ESS_CERT_ID_V2*)",
    "insertText": "d2i_ESS_CERT_ID_V2(ESS_CERT_ID_V2 **a, const unsigned char **pp, long length)"
  },
  {
    "label": "ESS_CERT_ID_V2_dup()",
    "kind": "Method",
    "detail": "Function (ESS_CERT_ID_V2*)",
    "insertText": "ESS_CERT_ID_V2_dup(ESS_CERT_ID_V2 *a)"
  },
  {
    "label": "ESS_SIGNING_CERT_V2_new()",
    "kind": "Method",
    "detail": "Function (ESS_SIGNING_CERT_V2*)",
    "insertText": "ESS_SIGNING_CERT_V2_new(void)"
  },
  {
    "label": "ESS_SIGNING_CERT_V2_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ESS_SIGNING_CERT_V2_free(ESS_SIGNING_CERT_V2 *a)"
  },
  {
    "label": "i2d_ESS_SIGNING_CERT_V2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_ESS_SIGNING_CERT_V2(const ESS_SIGNING_CERT_V2 *a, unsigned char **pp)"
  },
  {
    "label": "d2i_ESS_SIGNING_CERT_V2()",
    "kind": "Method",
    "detail": "Function (ESS_SIGNING_CERT_V2*)",
    "insertText": "d2i_ESS_SIGNING_CERT_V2(ESS_SIGNING_CERT_V2 **a, const unsigned char **pp, long length)"
  },
  {
    "label": "ESS_SIGNING_CERT_V2_dup()",
    "kind": "Method",
    "detail": "Function (ESS_SIGNING_CERT_V2*)",
    "insertText": "ESS_SIGNING_CERT_V2_dup(ESS_SIGNING_CERT_V2 *a)"
  },
  {
    "label": "TS_REQ_set_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_set_version(TS_REQ *a, long version)"
  },
  {
    "label": "TS_REQ_get_version()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "TS_REQ_get_version(const TS_REQ *a)"
  },
  {
    "label": "TS_STATUS_INFO_set_status()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_STATUS_INFO_set_status(TS_STATUS_INFO *a, int i)"
  },
  {
    "label": "TS_STATUS_INFO_get0_status()",
    "kind": "Method",
    "detail": "Function (const ASN1_INTEGER*)",
    "insertText": "TS_STATUS_INFO_get0_status(const TS_STATUS_INFO *a)"
  },
  {
    "label": "STACK_OF()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "STACK_OF(ASN1_UTF8STRING) * TS_STATUS_INFO_get0_text(const TS_STATUS_INFO *a)"
  },
  {
    "label": "TS_STATUS_INFO_get0_failure_info()",
    "kind": "Method",
    "detail": "Function (const ASN1_BIT_STRING*)",
    "insertText": "TS_STATUS_INFO_get0_failure_info(const TS_STATUS_INFO *a)"
  },
  {
    "label": "TS_REQ_set_msg_imprint()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_set_msg_imprint(TS_REQ *a, TS_MSG_IMPRINT *msg_imprint)"
  },
  {
    "label": "TS_REQ_get_msg_imprint()",
    "kind": "Method",
    "detail": "Function (TS_MSG_IMPRINT*)",
    "insertText": "TS_REQ_get_msg_imprint(TS_REQ *a)"
  },
  {
    "label": "TS_MSG_IMPRINT_set_algo()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_MSG_IMPRINT_set_algo(TS_MSG_IMPRINT *a, X509_ALGOR *alg)"
  },
  {
    "label": "TS_MSG_IMPRINT_get_algo()",
    "kind": "Method",
    "detail": "Function (X509_ALGOR*)",
    "insertText": "TS_MSG_IMPRINT_get_algo(TS_MSG_IMPRINT *a)"
  },
  {
    "label": "TS_MSG_IMPRINT_set_msg()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_MSG_IMPRINT_set_msg(TS_MSG_IMPRINT *a, unsigned char *d, int len)"
  },
  {
    "label": "TS_MSG_IMPRINT_get_msg()",
    "kind": "Method",
    "detail": "Function (ASN1_OCTET_STRING*)",
    "insertText": "TS_MSG_IMPRINT_get_msg(TS_MSG_IMPRINT *a)"
  },
  {
    "label": "TS_REQ_set_policy_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_set_policy_id(TS_REQ *a, const ASN1_OBJECT *policy)"
  },
  {
    "label": "TS_REQ_get_policy_id()",
    "kind": "Method",
    "detail": "Function (ASN1_OBJECT*)",
    "insertText": "TS_REQ_get_policy_id(TS_REQ *a)"
  },
  {
    "label": "TS_REQ_set_nonce()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_set_nonce(TS_REQ *a, const ASN1_INTEGER *nonce)"
  },
  {
    "label": "TS_REQ_get_nonce()",
    "kind": "Method",
    "detail": "Function (const ASN1_INTEGER*)",
    "insertText": "TS_REQ_get_nonce(const TS_REQ *a)"
  },
  {
    "label": "TS_REQ_set_cert_req()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_set_cert_req(TS_REQ *a, int cert_req)"
  },
  {
    "label": "TS_REQ_get_cert_req()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_get_cert_req(const TS_REQ *a)"
  },
  {
    "label": "STACK_OF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STACK_OF(X509_EXTENSION) *TS_REQ_get_exts(TS_REQ *a)"
  },
  {
    "label": "TS_REQ_ext_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_REQ_ext_free(TS_REQ *a)"
  },
  {
    "label": "TS_REQ_get_ext_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_get_ext_count(TS_REQ *a)"
  },
  {
    "label": "TS_REQ_get_ext_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_get_ext_by_NID(TS_REQ *a, int nid, int lastpos)"
  },
  {
    "label": "TS_REQ_get_ext_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_get_ext_by_OBJ(TS_REQ *a, const ASN1_OBJECT *obj, int lastpos)"
  },
  {
    "label": "TS_REQ_get_ext_by_critical()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_get_ext_by_critical(TS_REQ *a, int crit, int lastpos)"
  },
  {
    "label": "TS_REQ_get_ext()",
    "kind": "Method",
    "detail": "Function (X509_EXTENSION*)",
    "insertText": "TS_REQ_get_ext(TS_REQ *a, int loc)"
  },
  {
    "label": "TS_REQ_delete_ext()",
    "kind": "Method",
    "detail": "Function (X509_EXTENSION*)",
    "insertText": "TS_REQ_delete_ext(TS_REQ *a, int loc)"
  },
  {
    "label": "TS_REQ_add_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_add_ext(TS_REQ *a, X509_EXTENSION *ex, int loc)"
  },
  {
    "label": "TS_REQ_get_ext_d2i()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "TS_REQ_get_ext_d2i(TS_REQ *a, int nid, int *crit, int *idx)"
  },
  {
    "label": "TS_REQ_print_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_REQ_print_bio(BIO *bio, TS_REQ *a)"
  },
  {
    "label": "TS_RESP_set_status_info()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_set_status_info(TS_RESP *a, TS_STATUS_INFO *info)"
  },
  {
    "label": "TS_RESP_get_status_info()",
    "kind": "Method",
    "detail": "Function (TS_STATUS_INFO*)",
    "insertText": "TS_RESP_get_status_info(TS_RESP *a)"
  },
  {
    "label": "TS_RESP_set_tst_info()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_RESP_set_tst_info(TS_RESP *a, PKCS7 *p7, TS_TST_INFO *tst_info)"
  },
  {
    "label": "TS_RESP_get_token()",
    "kind": "Method",
    "detail": "Function (PKCS7*)",
    "insertText": "TS_RESP_get_token(TS_RESP *a)"
  },
  {
    "label": "TS_RESP_get_tst_info()",
    "kind": "Method",
    "detail": "Function (TS_TST_INFO*)",
    "insertText": "TS_RESP_get_tst_info(TS_RESP *a)"
  },
  {
    "label": "TS_TST_INFO_set_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_set_version(TS_TST_INFO *a, long version)"
  },
  {
    "label": "TS_TST_INFO_get_version()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "TS_TST_INFO_get_version(const TS_TST_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_set_policy_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_set_policy_id(TS_TST_INFO *a, ASN1_OBJECT *policy_id)"
  },
  {
    "label": "TS_TST_INFO_get_policy_id()",
    "kind": "Method",
    "detail": "Function (ASN1_OBJECT*)",
    "insertText": "TS_TST_INFO_get_policy_id(TS_TST_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_set_msg_imprint()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_set_msg_imprint(TS_TST_INFO *a, TS_MSG_IMPRINT *msg_imprint)"
  },
  {
    "label": "TS_TST_INFO_get_msg_imprint()",
    "kind": "Method",
    "detail": "Function (TS_MSG_IMPRINT*)",
    "insertText": "TS_TST_INFO_get_msg_imprint(TS_TST_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_set_serial()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_set_serial(TS_TST_INFO *a, const ASN1_INTEGER *serial)"
  },
  {
    "label": "TS_TST_INFO_get_serial()",
    "kind": "Method",
    "detail": "Function (const ASN1_INTEGER*)",
    "insertText": "TS_TST_INFO_get_serial(const TS_TST_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_set_time()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_set_time(TS_TST_INFO *a, const ASN1_GENERALIZEDTIME *gtime)"
  },
  {
    "label": "TS_TST_INFO_get_time()",
    "kind": "Method",
    "detail": "Function (const ASN1_GENERALIZEDTIME*)",
    "insertText": "TS_TST_INFO_get_time(const TS_TST_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_set_accuracy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_set_accuracy(TS_TST_INFO *a, TS_ACCURACY *accuracy)"
  },
  {
    "label": "TS_TST_INFO_get_accuracy()",
    "kind": "Method",
    "detail": "Function (TS_ACCURACY*)",
    "insertText": "TS_TST_INFO_get_accuracy(TS_TST_INFO *a)"
  },
  {
    "label": "TS_ACCURACY_set_seconds()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_ACCURACY_set_seconds(TS_ACCURACY *a, const ASN1_INTEGER *seconds)"
  },
  {
    "label": "TS_ACCURACY_get_seconds()",
    "kind": "Method",
    "detail": "Function (const ASN1_INTEGER*)",
    "insertText": "TS_ACCURACY_get_seconds(const TS_ACCURACY *a)"
  },
  {
    "label": "TS_ACCURACY_set_millis()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_ACCURACY_set_millis(TS_ACCURACY *a, const ASN1_INTEGER *millis)"
  },
  {
    "label": "TS_ACCURACY_get_millis()",
    "kind": "Method",
    "detail": "Function (const ASN1_INTEGER*)",
    "insertText": "TS_ACCURACY_get_millis(const TS_ACCURACY *a)"
  },
  {
    "label": "TS_ACCURACY_set_micros()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_ACCURACY_set_micros(TS_ACCURACY *a, const ASN1_INTEGER *micros)"
  },
  {
    "label": "TS_ACCURACY_get_micros()",
    "kind": "Method",
    "detail": "Function (const ASN1_INTEGER*)",
    "insertText": "TS_ACCURACY_get_micros(const TS_ACCURACY *a)"
  },
  {
    "label": "TS_TST_INFO_set_ordering()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_set_ordering(TS_TST_INFO *a, int ordering)"
  },
  {
    "label": "TS_TST_INFO_get_ordering()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_get_ordering(const TS_TST_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_set_nonce()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_set_nonce(TS_TST_INFO *a, const ASN1_INTEGER *nonce)"
  },
  {
    "label": "TS_TST_INFO_get_nonce()",
    "kind": "Method",
    "detail": "Function (const ASN1_INTEGER*)",
    "insertText": "TS_TST_INFO_get_nonce(const TS_TST_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_set_tsa()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_set_tsa(TS_TST_INFO *a, GENERAL_NAME *tsa)"
  },
  {
    "label": "TS_TST_INFO_get_tsa()",
    "kind": "Method",
    "detail": "Function (GENERAL_NAME*)",
    "insertText": "TS_TST_INFO_get_tsa(TS_TST_INFO *a)"
  },
  {
    "label": "STACK_OF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STACK_OF(X509_EXTENSION) *TS_TST_INFO_get_exts(TS_TST_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_ext_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_TST_INFO_ext_free(TS_TST_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_get_ext_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_get_ext_count(TS_TST_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_get_ext_by_NID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_get_ext_by_NID(TS_TST_INFO *a, int nid, int lastpos)"
  },
  {
    "label": "TS_TST_INFO_get_ext_by_OBJ()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_get_ext_by_OBJ(TS_TST_INFO *a, const ASN1_OBJECT *obj, int lastpos)"
  },
  {
    "label": "TS_TST_INFO_get_ext_by_critical()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_get_ext_by_critical(TS_TST_INFO *a, int crit, int lastpos)"
  },
  {
    "label": "TS_TST_INFO_get_ext()",
    "kind": "Method",
    "detail": "Function (X509_EXTENSION*)",
    "insertText": "TS_TST_INFO_get_ext(TS_TST_INFO *a, int loc)"
  },
  {
    "label": "TS_TST_INFO_delete_ext()",
    "kind": "Method",
    "detail": "Function (X509_EXTENSION*)",
    "insertText": "TS_TST_INFO_delete_ext(TS_TST_INFO *a, int loc)"
  },
  {
    "label": "TS_TST_INFO_add_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_add_ext(TS_TST_INFO *a, X509_EXTENSION *ex, int loc)"
  },
  {
    "label": "TS_TST_INFO_get_ext_d2i()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "TS_TST_INFO_get_ext_d2i(TS_TST_INFO *a, int nid, int *crit, int *idx)"
  },
  {
    "label": "ASN1_INTEGER()",
    "kind": "Method",
    "detail": "Function (# define TS_TSA_NAME 0 x01 # define TS_ORDERING 0 x02 # define TS_ESS_CERT_ID_CHAIN 0 x04 struct TS_resp_ctx ; typedef)",
    "insertText": "ASN1_INTEGER(*TS_serial_cb) (struct TS_resp_ctx *, void *)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*TS_time_cb) (struct TS_resp_ctx *, void *, long *sec, long *usec)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*TS_extension_cb) (struct TS_resp_ctx *, X509_EXTENSION *, void *)"
  },
  {
    "label": "DEFINE_STACK_OF_CONST()",
    "kind": "Method",
    "detail": "Function (typedef struct TS_resp_ctx TS_RESP_CTX ;)",
    "insertText": "DEFINE_STACK_OF_CONST(EVP_MD) TS_RESP_CTX *TS_RESP_CTX_new(void)"
  },
  {
    "label": "TS_RESP_CTX_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_RESP_CTX_free(TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_RESP_CTX_set_signer_cert()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_set_signer_cert(TS_RESP_CTX *ctx, X509 *signer)"
  },
  {
    "label": "TS_RESP_CTX_set_signer_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_set_signer_key(TS_RESP_CTX *ctx, EVP_PKEY *key)"
  },
  {
    "label": "TS_RESP_CTX_set_signer_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_set_signer_digest(TS_RESP_CTX *ctx, const EVP_MD *signer_digest)"
  },
  {
    "label": "TS_RESP_CTX_set_ess_cert_id_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_set_ess_cert_id_digest(TS_RESP_CTX *ctx, const EVP_MD *md)"
  },
  {
    "label": "TS_RESP_CTX_set_def_policy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_set_def_policy(TS_RESP_CTX *ctx, const ASN1_OBJECT *def_policy)"
  },
  {
    "label": "TS_RESP_CTX_set_certs()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_set_certs(TS_RESP_CTX *ctx, STACK_OF(X509) *certs)"
  },
  {
    "label": "TS_RESP_CTX_add_policy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_add_policy(TS_RESP_CTX *ctx, const ASN1_OBJECT *policy)"
  },
  {
    "label": "TS_RESP_CTX_add_md()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_add_md(TS_RESP_CTX *ctx, const EVP_MD *md)"
  },
  {
    "label": "TS_RESP_CTX_set_accuracy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_set_accuracy(TS_RESP_CTX *ctx, int secs, int millis, int micros)"
  },
  {
    "label": "TS_RESP_CTX_set_clock_precision_digits()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_set_clock_precision_digits(TS_RESP_CTX *ctx, unsigned clock_precision_digits)"
  },
  {
    "label": "TS_MAX_STATUS_LENGTH()",
    "kind": "Method",
    "detail": "Function (# define TS_MAX_CLOCK_PRECISION_DIGITS 6 # define)",
    "insertText": "TS_MAX_STATUS_LENGTH(1024 * 1024) void TS_RESP_CTX_add_flags(TS_RESP_CTX *ctx, int flags)"
  },
  {
    "label": "TS_RESP_CTX_set_serial_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_RESP_CTX_set_serial_cb(TS_RESP_CTX *ctx, TS_serial_cb cb, void *data)"
  },
  {
    "label": "TS_RESP_CTX_set_time_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_RESP_CTX_set_time_cb(TS_RESP_CTX *ctx, TS_time_cb cb, void *data)"
  },
  {
    "label": "TS_RESP_CTX_set_extension_cb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_RESP_CTX_set_extension_cb(TS_RESP_CTX *ctx, TS_extension_cb cb, void *data)"
  },
  {
    "label": "TS_RESP_CTX_set_status_info()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_set_status_info(TS_RESP_CTX *ctx, int status, const char *text)"
  },
  {
    "label": "TS_RESP_CTX_set_status_info_cond()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_set_status_info_cond(TS_RESP_CTX *ctx, int status, const char *text)"
  },
  {
    "label": "TS_RESP_CTX_add_failure_info()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_CTX_add_failure_info(TS_RESP_CTX *ctx, int failure)"
  },
  {
    "label": "TS_RESP_CTX_get_request()",
    "kind": "Method",
    "detail": "Function (TS_REQ*)",
    "insertText": "TS_RESP_CTX_get_request(TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_RESP_CTX_get_tst_info()",
    "kind": "Method",
    "detail": "Function (TS_TST_INFO*)",
    "insertText": "TS_RESP_CTX_get_tst_info(TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_RESP_create_response()",
    "kind": "Method",
    "detail": "Function (TS_RESP*)",
    "insertText": "TS_RESP_create_response(TS_RESP_CTX *ctx, BIO *req_bio)"
  },
  {
    "label": "TS_RESP_verify_signature()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_verify_signature(PKCS7 *token, STACK_OF(X509) *certs, X509_STORE *store, X509 **signer_out)"
  },
  {
    "label": "TS_VFY_SIGNATURE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TS_VFY_SIGNATURE(1u << 0) # define TS_VFY_VERSION (1u << 1) # define TS_VFY_POLICY (1u << 2) # define TS_VFY_IMPRINT (1u << 3) # define TS_VFY_DATA (1u << 4) # define TS_VFY_NONCE (1u << 5) # define TS_VFY_SIGNER (1u << 6) # define TS_VFY_TSA_NAME (1u << 7) # define TS_VFY_ALL_IMPRINT (TS_VFY_SIGNATURE \\ | TS_VFY_VERSION \\ | TS_VFY_POLICY \\ | TS_VFY_IMPRINT \\ | TS_VFY_NONCE \\ | TS_VFY_SIGNER \\ | TS_VFY_TSA_NAME) # define TS_VFY_ALL_DATA (TS_VFY_SIGNATURE \\ | TS_VFY_VERSION \\ | TS_VFY_POLICY \\ | TS_VFY_DATA \\ | TS_VFY_NONCE \\ | TS_VFY_SIGNER \\ | TS_VFY_TSA_NAME)"
  },
  {
    "label": "TS_RESP_verify_response()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_verify_response(TS_VERIFY_CTX *ctx, TS_RESP *response)"
  },
  {
    "label": "TS_RESP_verify_token()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_verify_token(TS_VERIFY_CTX *ctx, PKCS7 *token)"
  },
  {
    "label": "TS_VERIFY_CTX_new()",
    "kind": "Method",
    "detail": "Function (TS_VERIFY_CTX*)",
    "insertText": "TS_VERIFY_CTX_new(void)"
  },
  {
    "label": "TS_VERIFY_CTX_init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_VERIFY_CTX_init(TS_VERIFY_CTX *ctx)"
  },
  {
    "label": "TS_VERIFY_CTX_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_VERIFY_CTX_free(TS_VERIFY_CTX *ctx)"
  },
  {
    "label": "TS_VERIFY_CTX_cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TS_VERIFY_CTX_cleanup(TS_VERIFY_CTX *ctx)"
  },
  {
    "label": "TS_VERIFY_CTX_set_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_VERIFY_CTX_set_flags(TS_VERIFY_CTX *ctx, int f)"
  },
  {
    "label": "TS_VERIFY_CTX_add_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_VERIFY_CTX_add_flags(TS_VERIFY_CTX *ctx, int f)"
  },
  {
    "label": "TS_VERIFY_CTX_set_data()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "TS_VERIFY_CTX_set_data(TS_VERIFY_CTX *ctx, BIO *b)"
  },
  {
    "label": "TS_VERIFY_CTX_set_imprint()",
    "kind": "Method",
    "detail": "Function (unsigned char*)",
    "insertText": "TS_VERIFY_CTX_set_imprint(TS_VERIFY_CTX *ctx, unsigned char *hexstr, long len)"
  },
  {
    "label": "TS_VERIFY_CTX_set_store()",
    "kind": "Method",
    "detail": "Function (X509_STORE*)",
    "insertText": "TS_VERIFY_CTX_set_store(TS_VERIFY_CTX *ctx, X509_STORE *s)"
  },
  {
    "label": "STACK_OF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STACK_OF(X509) *TS_VERIFY_CTS_set_certs(TS_VERIFY_CTX *ctx, STACK_OF(X509) *certs)"
  },
  {
    "label": "TS_REQ_to_TS_VERIFY_CTX()",
    "kind": "Method",
    "detail": "Function (TS_VERIFY_CTX*)",
    "insertText": "TS_REQ_to_TS_VERIFY_CTX(TS_REQ *req, TS_VERIFY_CTX *ctx)"
  },
  {
    "label": "TS_RESP_print_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_RESP_print_bio(BIO *bio, TS_RESP *a)"
  },
  {
    "label": "TS_STATUS_INFO_print_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_STATUS_INFO_print_bio(BIO *bio, TS_STATUS_INFO *a)"
  },
  {
    "label": "TS_TST_INFO_print_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_TST_INFO_print_bio(BIO *bio, TS_TST_INFO *a)"
  },
  {
    "label": "TS_ASN1_INTEGER_print_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_ASN1_INTEGER_print_bio(BIO *bio, const ASN1_INTEGER *num)"
  },
  {
    "label": "TS_OBJ_print_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_OBJ_print_bio(BIO *bio, const ASN1_OBJECT *obj)"
  },
  {
    "label": "TS_ext_print_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_ext_print_bio(BIO *bio, const STACK_OF(X509_EXTENSION) *extensions)"
  },
  {
    "label": "TS_X509_ALGOR_print_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_X509_ALGOR_print_bio(BIO *bio, const X509_ALGOR *alg)"
  },
  {
    "label": "TS_MSG_IMPRINT_print_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_MSG_IMPRINT_print_bio(BIO *bio, TS_MSG_IMPRINT *msg)"
  },
  {
    "label": "TS_CONF_load_cert()",
    "kind": "Method",
    "detail": "Function (X509*)",
    "insertText": "TS_CONF_load_cert(const char *file)"
  },
  {
    "label": "STACK_OF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STACK_OF(X509) *TS_CONF_load_certs(const char *file)"
  },
  {
    "label": "TS_CONF_load_key()",
    "kind": "Method",
    "detail": "Function (EVP_PKEY*)",
    "insertText": "TS_CONF_load_key(const char *file, const char *pass)"
  },
  {
    "label": "TS_CONF_get_tsa_section()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "TS_CONF_get_tsa_section(CONF *conf, const char *section)"
  },
  {
    "label": "TS_CONF_set_serial()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_serial(CONF *conf, const char *section, TS_serial_cb cb, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_crypto_device()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_ENGINE int)",
    "insertText": "TS_CONF_set_crypto_device(CONF *conf, const char *section, const char *device)"
  },
  {
    "label": "TS_CONF_set_default_engine()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_default_engine(const char *name)"
  },
  {
    "label": "TS_CONF_set_signer_cert()",
    "kind": "Method",
    "detail": "Function (# endif int)",
    "insertText": "TS_CONF_set_signer_cert(CONF *conf, const char *section, const char *cert, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_certs()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_certs(CONF *conf, const char *section, const char *certs, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_signer_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_signer_key(CONF *conf, const char *section, const char *key, const char *pass, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_signer_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_signer_digest(CONF *conf, const char *section, const char *md, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_def_policy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_def_policy(CONF *conf, const char *section, const char *policy, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_policies()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_policies(CONF *conf, const char *section, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_digests()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_digests(CONF *conf, const char *section, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_accuracy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_accuracy(CONF *conf, const char *section, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_clock_precision_digits()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_clock_precision_digits(CONF *conf, const char *section, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_ordering()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_ordering(CONF *conf, const char *section, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_tsa_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_tsa_name(CONF *conf, const char *section, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_ess_cert_id_chain()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_ess_cert_id_chain(CONF *conf, const char *section, TS_RESP_CTX *ctx)"
  },
  {
    "label": "TS_CONF_set_ess_cert_id_digest()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TS_CONF_set_ess_cert_id_digest(CONF *conf, const char *section, TS_RESP_CTX *ctx)"
  }
]