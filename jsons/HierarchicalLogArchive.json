[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FHierarchicalLogArchive",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHierarchicalLogArchive"
  },
  {
    "label": "FIndentScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIndentScope"
  },
  {
    "label": "FHierarchicalLogArchive()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Misc / AssertionMacros . h \" # include \" Serialization / ArchiveProxy . h \" class FArchive ; struct FHierarchicalLogArchive : private FArchiveProxy { public :)",
    "insertText": "FHierarchicalLogArchive(FArchive& InInnerArchive)"
  },
  {
    "label": "FIndentScope()",
    "kind": "Method",
    "detail": "Function (struct FIndentScope {)",
    "insertText": "FIndentScope(FHierarchicalLogArchive* InAr) : Ar(InAr)"
  },
  {
    "label": "FIndentScope()",
    "kind": "Method",
    "detail": "Function (Ar -> Indentation + + ; } ~)",
    "insertText": "FIndentScope()"
  },
  {
    "label": "Print()",
    "kind": "Method",
    "detail": "Function (Ar -> Indentation - - ; } FHierarchicalLogArchive* Ar ; } ; void)",
    "insertText": "Print(const TCHAR* InLine)"
  },
  {
    "label": "WriteLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteLine(InLine, false)"
  },
  {
    "label": "PrintIndent()",
    "kind": "Method",
    "detail": "Function (} [ [ nodiscard ] ] FIndentScope)",
    "insertText": "PrintIndent(const TCHAR* InLine)"
  },
  {
    "label": "WriteLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteLine(InLine, true)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (} template<FmtType,. . . Types> void)",
    "insertText": "Printf(const FmtType& Fmt, Types... Args)"
  },
  {
    "label": "WriteLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteLine(FString::Printf(Fmt, Args...), false)"
  },
  {
    "label": "PrintfIndent()",
    "kind": "Method",
    "detail": "Function (} template<FmtType,. . . Types> [ [ nodiscard ] ] FIndentScope)",
    "insertText": "PrintfIndent(const FmtType& Fmt, Types... Args)"
  },
  {
    "label": "WriteLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteLine(FString::Printf(Fmt, Args...), true)"
  },
  {
    "label": "WriteLine()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "WriteLine(const FString& InLine, bool bIndent = false)"
  }
]