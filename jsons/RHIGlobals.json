[
  {
    "label": "FVertexElementTypeSupportInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexElementTypeSupportInfo"
  },
  {
    "label": "TRHIGlobal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRHIGlobal"
  },
  {
    "label": "FRHIGlobals",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHIGlobals"
  },
  {
    "label": "FGpuInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGpuInfo"
  },
  {
    "label": "FRayTracing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracing"
  },
  {
    "label": "FVariableRateShading",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVariableRateShading"
  },
  {
    "label": "FShaderBundles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderBundles"
  },
  {
    "label": "FReservedResources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReservedResources"
  },
  {
    "label": "FVertexElementTypeSupportInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" Math / IntVector . h \" # include \" Math / Vector2D . h \" # include \" PixelFormat . h \" # include \" RHIDefinitions . h \" # include \" RHIFeatureLevel . h \" # include \" RHIShaderPlatform . h \" # if WITH_EDITOR # include \" Misc / Optional . h \" # endif float GMinClipZ = 0 . 0 f ; float GProjectionSignY = 1 . 0 f ; class FVertexElementTypeSupportInfo { public :)",
    "insertText": "FVertexElementTypeSupportInfo()"
  },
  {
    "label": "IsSupported()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSupported(EVertexElementType ElementType)"
  },
  {
    "label": "TRHIGlobal()",
    "kind": "Method",
    "detail": "Function (ElementCaps [ ElementType ] = bIsSupported ; } private : bool ElementCaps [ VET_MAX ] ; } ; template<TValueType> class TRHIGlobal { public :)",
    "insertText": "TRHIGlobal()"
  },
  {
    "label": "TRHIGlobal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRHIGlobal(const TValueType& InValue) : Value(InValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} TRHIGlobal&)",
    "insertText": "operator(const TValueType& InValue)"
  },
  {
    "label": "SetPreviewOverride()",
    "kind": "Method",
    "detail": "Function (Value = InValue ; return* this ; } # if WITH_EDITOR void)",
    "insertText": "SetPreviewOverride(const TValueType& InValue)"
  },
  {
    "label": "TValueType()",
    "kind": "Method",
    "detail": "Function (PreviewValue = InValue ; } operator)",
    "insertText": "TValueType()"
  },
  {
    "label": "GetPreviewValue()",
    "kind": "Method",
    "detail": "Function (} # endif } ; # if WITH_EDITOR template<> int32 TRHIGlobal<int32)",
    "insertText": "GetPreviewValue()"
  },
  {
    "label": "FRHIGlobals()",
    "kind": "Method",
    "detail": "Function (} # endif struct FRHIGlobals {)",
    "insertText": "FRHIGlobals()"
  },
  {
    "label": "MaxComputeDispatchDimension()",
    "kind": "Method",
    "detail": "Function (bool IsRHIInitialized = false ; int32 PersistentThreadGroupCount = 0 ; int32 MaxTextureMipCount = MAX_TEXTURE_MIP_COUNT ; bool SupportsQuadBufferStereo = false ; bool SupportsRenderDepthTargetableShaderResources = true ; bool SupportsDrawIndirect = true ; bool SupportsMultiDrawIndirect = false ; bool SupportsMultithreading = false ; bool SupportsAsyncGetRenderQueryResult = false ; struct FGpuInfo { FString AdapterName ; FString AdapterInternalDriverVersion ; FString AdapterUserDriverVersion ; FString AdapterDriverDate ; bool AdapterDriverOnDenyList = false ; uint32 DeviceId = 0 ; uint32 DeviceRevision = 0 ; bool IsAMDPreGCNArchitecture = false ; uint32 VendorId = 0 ; } GpuInfo ; bool SupportsPixelShaderUAVs = true ; bool SupportsVertexShaderUAVs = false ; TRHIGlobal<bool> SupportsRenderTargetFormat_PF_G8 = true ; TRHIGlobal<bool> SupportsRenderTargetFormat_PF_FloatRGBA = true ; bool SupportsShaderFramebufferFetch = false ; bool SupportsShaderMRTFramebufferFetch = false ; bool SupportsShaderFramebufferFetchProgrammableBlending = true ; bool SupportsPixelLocalStorage = false ; bool SupportsShaderDepthStencilFetch = false ; bool SupportsTimestampRenderQueries = false ; bool SupportsGPUTimestampBubblesRemoval = false ; bool SupportsFrameCyclesBubblesRemoval = false ; bool SupportsGPUUsage = false ; bool HardwareHiddenSurfaceRemoval = false ; bool SupportsAsyncTextureCreation = false ; bool SupportsQuadTopology = false ; bool SupportsRectTopology = false ; bool SupportsPrimitiveShaders = false ; bool SupportsAtomicUInt64 = false ; bool SupportsDX12AtomicUInt64 = false ; bool SupportsPipelineStateSortKey = false ; bool SupportsParallelRenderingTasksWithSeparateRHIThread = true ; bool RHIThreadNeedsKicking = false ; int32 MaximumInFlightQueries = MAX_int32 ; bool SupportsExactOcclusionQueries = true ; bool SupportsVolumeTextureRendering = true ; bool SupportsSeparateRenderTargetBlendState = false ; bool SupportsDualSrcBlending = true ; bool NeedsUnatlasedCSMDepthsWorkaround = false ; bool SupportsTexture3D = true ; bool UseTexture3DBulkData = false ; bool SupportsMobileMultiView = false ; bool SupportsImageExternal = false ; bool SupportsWideMRT = true ; bool SupportsDepthBoundsTest = false ; bool SupportsExplicitHTile = false ; bool SupportsExplicitFMask = false ; bool SupportsResummarizeHTile = false ; bool SupportsDepthUAV = false ; bool SupportsEfficientAsyncCompute = false ; bool SupportsAsyncComputeTransientAliasing = false ; bool SupportsParallelOcclusionQueries = false ; bool RequiresRenderTargetForPixelShaderUAVs = false ; bool SupportsUAVFormatAliasing = false ; bool SupportsTextureViews = true ; bool SupportsDirectGPUMemoryLock = false ; bool SupportsMultithreadedShaderCreation = true ; bool SupportsMultithreadedResources = false ; bool NeedsExtraDeletionLatency = false ; bool ForceNoDeletionLatencyForStreamingTextures = false ; TRHIGlobal<int32>)",
    "insertText": "MaxComputeDispatchDimension((1 << 16) - 1)"
  },
  {
    "label": "MaxBufferDimensions()",
    "kind": "Method",
    "detail": "Function (bool LazyShaderCodeLoading = false ; bool SupportsLazyShaderCodeLoading = false ; bool SupportsUpdateFromBufferTexture = false ; TRHIGlobal<int32> MaxShadowDepthBufferSizeX = 2 0 4 8 ; TRHIGlobal<int32> MaxShadowDepthBufferSizeY = 2 0 4 8 ; TRHIGlobal<int32> MaxTextureDimensions = 2 0 4 8 ; TRHIGlobal<int64>)",
    "insertText": "MaxBufferDimensions(1 << 27)"
  },
  {
    "label": "MaxConstantBufferByteSize()",
    "kind": "Method",
    "detail": "Function (TRHIGlobal<int64>)",
    "insertText": "MaxConstantBufferByteSize(1 << 27)"
  },
  {
    "label": "MaxComputeSharedMemory()",
    "kind": "Method",
    "detail": "Function (TRHIGlobal<int64>)",
    "insertText": "MaxComputeSharedMemory(1 << 15)"
  },
  {
    "label": "UE_DEPRECATED_MACRO()",
    "kind": "Method",
    "detail": "Function (bool SupportsMSAAShaderResolve = false ; bool SupportsDepthStencilResolve = false ; bool SupportLinearTextureVolumeFormat = true ; } ; FRHIGlobals GRHIGlobals ; uint32 GGPUFrameTime ; # define GIsRHIInitialized GRHIGlobals . IsRHIInitialized # define GRHIPersistentThreadGroupCount GRHIGlobals . PersistentThreadGroupCount # define GMaxTextureMipCount GRHIGlobals . MaxTextureMipCount # define GSupportsQuadBufferStereo GRHIGlobals . SupportsQuadBufferStereo # define GSupportsRenderDepthTargetableShaderResources GRHIGlobals . SupportsRenderDepthTargetableShaderResources # define GRHISupportsDrawIndirect GRHIGlobals . SupportsDrawIndirect # define GRHISupportsMultiDrawIndirect GRHIGlobals . SupportsMultiDrawIndirect # define GRHISupportsMultithreading GRHIGlobals . SupportsMultithreading # define GRHISupportsAsyncGetRenderQueryResult GRHIGlobals . SupportsAsyncGetRenderQueryResult # define GRHIAdapterName GRHIGlobals . GpuInfo . AdapterName # define GRHIAdapterInternalDriverVersion GRHIGlobals . GpuInfo . AdapterInternalDriverVersion # define GRHIAdapterUserDriverVersion GRHIGlobals . GpuInfo . AdapterUserDriverVersion # define GRHIAdapterDriverDate GRHIGlobals . GpuInfo . AdapterDriverDate # define GRHIAdapterDriverOnDenyList GRHIGlobals . GpuInfo . AdapterDriverOnDenyList # define GRHIDeviceId GRHIGlobals . GpuInfo . DeviceId # define GRHIDeviceRevision GRHIGlobals . GpuInfo . DeviceRevision # define GRHIVendorId GRHIGlobals . GpuInfo . VendorId # define GRHISupportsPixelShaderUAVs GRHIGlobals . SupportsPixelShaderUAVs # define GRHIDeviceIsAMDPreGCNArchitecture GRHIGlobals . GpuInfo . IsAMDPreGCNArchitecture # define GSupportsRenderTargetFormat_PF_G8 GRHIGlobals . SupportsRenderTargetFormat_PF_G8 # define GSupportsRenderTargetFormat_PF_FloatRGBA GRHIGlobals . SupportsRenderTargetFormat_PF_FloatRGBA # define GSupportsShaderFramebufferFetch GRHIGlobals . SupportsShaderFramebufferFetch # define GSupportsShaderFramebufferFetchProgrammableBlending GRHIGlobals . SupportsShaderFramebufferFetchProgrammableBlending # define GSupportsShaderMRTFramebufferFetch GRHIGlobals . SupportsShaderMRTFramebufferFetch # define GSupportsPixelLocalStorage GRHIGlobals . SupportsPixelLocalStorage # define GSupportsShaderDepthStencilFetch GRHIGlobals . SupportsShaderDepthStencilFetch # define GSupportsTimestampRenderQueries GRHIGlobals . SupportsTimestampRenderQueries # define GRHISupportsGPUTimestampBubblesRemoval GRHIGlobals . SupportsGPUTimestampBubblesRemoval # define GRHISupportsFrameCyclesBubblesRemoval GRHIGlobals . SupportsFrameCyclesBubblesRemoval # define GRHISupportsGPUUsage GRHIGlobals . SupportsGPUUsage # define GHardwareHiddenSurfaceRemoval GRHIGlobals . HardwareHiddenSurfaceRemoval # define GRHISupportsAsyncTextureCreation GRHIGlobals . SupportsAsyncTextureCreation # define GRHISupportsQuadTopology GRHIGlobals . SupportsQuadTopology # define GRHISupportsRectTopology GRHIGlobals . SupportsRectTopology # define GRHISupportsPrimitiveShaders GRHIGlobals . SupportsPrimitiveShaders # define GRHISupportsAtomicUInt64 GRHIGlobals . SupportsAtomicUInt64 # define GRHISupportsDX12AtomicUInt64 GRHIGlobals . SupportsDX12AtomicUInt64 # define GRHISupportsPipelineStateSortKey GRHIGlobals . SupportsPipelineStateSortKey # define GSupportsParallelRenderingTasksWithSeparateRHIThread GRHIGlobals . SupportsParallelRenderingTasksWithSeparateRHIThread # define GRHIThreadNeedsKicking GRHIGlobals . RHIThreadNeedsKicking # define GRHIMaximumInFlightQueries GRHIGlobals . MaximumInFlightQueries # define GRHISupportsExactOcclusionQueries GRHIGlobals . SupportsExactOcclusionQueries # define GSupportsVolumeTextureRendering GRHIGlobals . SupportsVolumeTextureRendering # define GSupportsSeparateRenderTargetBlendState GRHIGlobals . SupportsSeparateRenderTargetBlendState # define GSupportsDualSrcBlending GRHIGlobals . SupportsDualSrcBlending # define GRHINeedsUnatlasedCSMDepthsWorkaround GRHIGlobals . NeedsUnatlasedCSMDepthsWorkaround # define GSupportsTexture3D GRHIGlobals . SupportsTexture3D # define GUseTexture3DBulkDataRHI GRHIGlobals . UseTexture3DBulkData # define GSupportsMobileMultiView GRHIGlobals . SupportsMobileMultiView # define GSupportsImageExternal GRHIGlobals . SupportsImageExternal # define GSupportsWideMRT GRHIGlobals . SupportsWideMRT # define GSupportsDepthBoundsTest GRHIGlobals . SupportsDepthBoundsTest # define GRHISupportsExplicitHTile GRHIGlobals . SupportsExplicitHTile # define GRHISupportsExplicitFMask GRHIGlobals . SupportsExplicitFMask # define GRHISupportsResummarizeHTile GRHIGlobals . SupportsResummarizeHTile # define GRHISupportsDepthUAV GRHIGlobals . SupportsDepthUAV # define GSupportsEfficientAsyncCompute GRHIGlobals . SupportsEfficientAsyncCompute # define GSupportsParallelOcclusionQueries GRHIGlobals . SupportsParallelOcclusionQueries # define GRHIRequiresRenderTargetForPixelShaderUAVs GRHIGlobals . RequiresRenderTargetForPixelShaderUAVs # define GRHISupportsUAVFormatAliasing GRHIGlobals . SupportsUAVFormatAliasing # define GRHISupportsTextureViews GRHIGlobals . SupportsTextureViews # define GRHISupportsDirectGPUMemoryLock GRHIGlobals . SupportsDirectGPUMemoryLock # define GRHISupportsMultithreadedShaderCreation GRHIGlobals . SupportsMultithreadedShaderCreation # define GRHISupportsMultithreadedResources GRHIGlobals . SupportsMultithreadedResources # define GRHINeedsExtraDeletionLatency GRHIGlobals . NeedsExtraDeletionLatency # define GRHIForceNoDeletionLatencyForStreamingTextures GRHIGlobals . ForceNoDeletionLatencyForStreamingTextures # define GMaxComputeDispatchDimension GRHIGlobals . MaxComputeDispatchDimension # define GRHILazyShaderCodeLoading GRHIGlobals . LazyShaderCodeLoading # define GRHISupportsLazyShaderCodeLoading GRHIGlobals . SupportsLazyShaderCodeLoading # define GRHISupportsUpdateFromBufferTexture GRHIGlobals . SupportsUpdateFromBufferTexture # define GMaxShadowDepthBufferSizeX GRHIGlobals . MaxShadowDepthBufferSizeX # define GMaxShadowDepthBufferSizeY GRHIGlobals . MaxShadowDepthBufferSizeY # define GMaxTextureDimensions GRHIGlobals . MaxTextureDimensions # define GMaxBufferDimensions GRHIGlobals . MaxBufferDimensions # define GRHIMaxConstantBufferByteSize GRHIGlobals . MaxConstantBufferByteSize # define GMaxComputeSharedMemory GRHIGlobals . MaxComputeSharedMemory # define GMaxVolumeTextureDimensions GRHIGlobals . MaxVolumeTextureDimensions # define GRHISupportsRWTextureBuffers GRHIGlobals . SupportsRWTextureBuffers # define GRHISupportsRawViewsForAnyBuffer GRHIGlobals . SupportsRawViewsForAnyBuffer # define GRHISupportsSeparateDepthStencilCopyAccess GRHIGlobals . SupportsSeparateDepthStencilCopyAccess # define GRHISupportAsyncTextureStreamOut GRHIGlobals . SupportsAsyncTextureStreamOut # define GMaxCubeTextureDimensions GRHIGlobals . MaxCubeTextureDimensions # define GMaxTextureArrayLayers GRHIGlobals . MaxTextureArrayLayers # define GMaxTextureSamplers GRHIGlobals . MaxTextureSamplers # define GMaxWorkGroupInvocations GRHIGlobals . MaxWorkGroupInvocations # define GUsingNullRHI GRHIGlobals . UsingNullRHI # define GDrawUPVertexCheckCount GRHIGlobals . DrawUPVertexCheckCount # define GDrawUPIndexCheckCount GRHIGlobals . DrawUPIndexCheckCount # define GVertexElementTypeSupport GRHIGlobals . VertexElementTypeSupport # define GTriggerGPUProfile GRHIGlobals . TriggerGPUProfile # define GTriggerGPUHitchProfile GRHIGlobals . TriggerGPUHitchProfile # define GTriggerGPUCrash GRHIGlobals . TriggerGPUCrash # define GGPUTraceFileName GRHIGlobals . GPUTraceFileName # define GRHISupportsTextureStreaming GRHIGlobals . SupportsTextureStreaming # define GTexturePoolSize GRHIGlobals . TexturePoolSize # define GPoolSizeVRAMPercentage GRHIGlobals . PoolSizeVRAMPercentage # define GDemotedLocalMemorySize GRHIGlobals . DemotedLocalMemorySize # define GRHISupportsBaseVertexIndex GRHIGlobals . SupportsBaseVertexIndex # define GRHISupportsFirstInstance GRHIGlobals . SupportsFirstInstance # define GRHISupportsDynamicResolution GRHIGlobals . SupportsDynamicResolution # define GRHISupportsRayTracing GRHIGlobals . RayTracing . Supported # define GRHISupportsRayTracingShaders GRHIGlobals . RayTracing . SupportsShaders # define GRHISupportsRayTracingPSOAdditions GRHIGlobals . RayTracing . SupportsPSOAdditions # define GRHISupportsRayTracingDispatchIndirect GRHIGlobals . RayTracing . SupportsDispatchIndirect # define GRHISupportsRayTracingAsyncBuildAccelerationStructure GRHIGlobals . RayTracing . SupportsAsyncBuildAccelerationStructure # define GRHISupportsRayTracingAMDHitToken GRHIGlobals . RayTracing . SupportsAMDHitToken # define GRHISupportsInlineRayTracing GRHIGlobals . RayTracing . SupportsInlineRayTracing # define GRHIRayTracingAccelerationStructureAlignment GRHIGlobals . RayTracing . AccelerationStructureAlignment # define GRHIRayTracingScratchBufferAlignment GRHIGlobals . RayTracing . ScratchBufferAlignment # define GRHIRayTracingShaderTableAlignment GRHIGlobals . RayTracing . ShaderTableAlignment # define GRHIRayTracingInstanceDescriptorSize GRHIGlobals . RayTracing . InstanceDescriptorSize # define GRHISupportsWaveOperations GRHIGlobals . SupportsWaveOperations # define GRHIDeviceIsIntegrated GRHIGlobals . DeviceIsIntegrated # define GRHIMinimumWaveSize GRHIGlobals . MinimumWaveSize # define GRHIMaximumWaveSize GRHIGlobals . MaximumWaveSize # define GRHISupportsRHIThread GRHIGlobals . SupportsRHIThread # define GRHISupportsRHIOnTaskThread GRHIGlobals . SupportsRHIOnTaskThread # define GRHISupportsParallelRHIExecute GRHIGlobals . SupportsParallelRHIExecute # define GRHISupportsMSAADepthSampleAccess GRHIGlobals . SupportsMSAADepthSampleAccess # define GRHISupportsBackBufferWithCustomDepthStencil GRHIGlobals . SupportsBackBufferWithCustomDepthStencil # define GRHIIsHDREnabled GRHIGlobals . IsHDREnabled # define GRHISupportsHDROutput GRHIGlobals . SupportsHDROutput # define GRHIMaxDispatchThreadGroupsPerDimension GRHIGlobals . MaxDispatchThreadGroupsPerDimension # define GRHIVariableRateShadingEnabled GRHIGlobals . VariableRateShading . Enabled)",
    "insertText": "UE_DEPRECATED_MACRO(5.5, \"GRHIVariableRateShadingEnabled has been deprecated - please use GRHISupportsPipelineVariableRateShading or GVRSImageManager.IsPipelineVRSEnabled() instead.\") #define GRHIAttachmentVariableRateShadingEnabled GRHIGlobals.VariableRateShading.AttachmentEnabled UE_DEPRECATED_MACRO(5.5, \"GRHIAttachmentVariableRateShadingEnabled has been deprecated - please use GRHISupportsAttachmentVariableRateShading or GVRSImageManager.IsAttachmentVRSEnabled() instead.\") #define GRHISupportsPipelineVariableRateShading GRHIGlobals.VariableRateShading.SupportsPipeline #define GRHISupportsLargerVariableRateShadingSizes GRHIGlobals.VariableRateShading.SupportsLargerSizes #define GRHISupportsAttachmentVariableRateShading GRHIGlobals.VariableRateShading.SupportsAttachment #define GRHISupportsComplexVariableRateShadingCombinerOps GRHIGlobals.VariableRateShading.SupportsComplexCombinerOps #define GRHISupportsVariableRateShadingAttachmentArrayTextures GRHIGlobals.VariableRateShading.SupportsAttachmentArrayTextures #define GRHIVariableRateShadingImageTileMaxWidth GRHIGlobals.VariableRateShading.ImageTileMaxWidth #define GRHIVariableRateShadingImageTileMaxHeight GRHIGlobals.VariableRateShading.ImageTileMaxHeight #define GRHIVariableRateShadingImageTileMinWidth GRHIGlobals.VariableRateShading.ImageTileMinWidth #define GRHIVariableRateShadingImageTileMinHeight GRHIGlobals.VariableRateShading.ImageTileMinHeight #define GRHIVariableRateShadingImageDataType GRHIGlobals.VariableRateShading.ImageDataType #define GRHIVariableRateShadingImageFormat GRHIGlobals.VariableRateShading.ImageFormat #define GRHISupportsLateVariableRateShadingUpdate GRHIGlobals.VariableRateShading.SupportsLateUpdate #define GRHIHDRDisplayOutputFormat GRHIGlobals.HDRDisplayOutputFormat #define GRHIPresentCounter GRHIGlobals.PresentCounter #define GRHISupportsArrayIndexFromAnyShader GRHIGlobals.SupportsArrayIndexFromAnyShader #define GRHISupportsPipelineFileCache GRHIGlobals.SupportsPipelineFileCache #define GRHISupportsPSOPrecaching GRHIGlobals.SupportsPSOPrecaching #define GRHISupportsStencilRefFromPixelShader GRHIGlobals.SupportsStencilRefFromPixelShader #define GRHISupportsRasterOrderViews GRHIGlobals.SupportsRasterOrderViews #define GRHISupportsConservativeRasterization GRHIGlobals.SupportsConservativeRasterization #define GRHISupportsShaderRootConstants GRHIGlobals.SupportsShaderRootConstants #define GRHISupportsShaderBundleDispatch GRHIGlobals.ShaderBundles.SupportsDispatch #define GRHISupportsShaderBundleWorkGraphDispatch GRHIGlobals.ShaderBundles.SupportsWorkGraphDispatch #define GRHISupportsShaderBundleParallel GRHIGlobals.ShaderBundles.SupportsParallel #define GRHISupportsMeshShadersTier0 GRHIGlobals.SupportsMeshShadersTier0 #define GRHISupportsMeshShadersTier1 GRHIGlobals.SupportsMeshShadersTier1 #define GRHISupportsShaderWorkGraphsTier1 GRHIGlobals.SupportsShaderWorkGraphsTier1 #define GRHISupportsShaderTimestamp GRHIGlobals.SupportsShaderTimestamp #define GRHISupportsEfficientUploadOnResourceCreation GRHIGlobals.SupportsEfficientUploadOnResourceCreation #define GRHISupportsMapWriteNoOverwrite GRHIGlobals.SupportsMapWriteNoOverwrite #define GRHIDefaultMSAASampleOffsets GRHIGlobals.DefaultMSAASampleOffsets #define GRHISupportsAsyncPipelinePrecompile GRHIGlobals.SupportsAsyncPipelinePrecompile #define GRHIBindlessSupport GRHIGlobals.BindlessSupport #define GRHISupportsReservedResources GRHIGlobals.ReservedResources.Supported UE_DEPRECATED_MACRO(5.4, \"GRHISupportsReservedResources has been deprecated - please use GRHIGlobals.ReservedResources.Supported instead.\") #define GShaderPlatformForFeatureLevel GRHIGlobals.ShaderPlatformForFeatureLevel #define GRHIIsDebugLayerEnabled GRHIGlobals.IsDebugLayerEnabled #define GRHIHDRNeedsVendorExtensions GRHIGlobals.HDRNeedsVendorExtensions #define GRHISupportsMSAAShaderResolve GRHIGlobals.SupportsMSAAShaderResolve #define GRHISupportsDepthStencilResolve GRHIGlobals.SupportsDepthStencilResolve inline uint64 GetMaxBufferDimension()"
  }
]