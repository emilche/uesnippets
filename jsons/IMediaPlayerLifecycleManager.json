[
  {
    "label": "FMediaPlayerFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMediaPlayerFacade"
  },
  {
    "label": "IMediaOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaOptions"
  },
  {
    "label": "IMediaPlayerFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaPlayerFactory"
  },
  {
    "label": "FMediaPlayerOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMediaPlayerOptions"
  },
  {
    "label": "IMediaPlayerLifecycleManagerDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaPlayerLifecycleManagerDelegate"
  },
  {
    "label": "IOpenRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOpenRequest"
  },
  {
    "label": "IControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IControl"
  },
  {
    "label": "ResourceFlags_All()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / UnrealString . h \" # include \" Templates / SharedPointer . h \" class FMediaPlayerFacade ; class IMediaOptions ; class IMediaPlayerFactory ; struct FMediaPlayerOptions ; class IMediaPlayerLifecycleManagerDelegate { public : enum { ResourceFlags_Decoder = 1<<0,ResourceFlags_OutputBuffers = 1<<1,)",
    "insertText": "ResourceFlags_All(1 << 2)"
  },
  {
    "label": "IOpenRequest()",
    "kind": "Method",
    "detail": "Function (class IOpenRequest { public : ~)",
    "insertText": "IOpenRequest()"
  },
  {
    "label": "GetUrl()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetUrl()"
  },
  {
    "label": "GetOptions()",
    "kind": "Method",
    "detail": "Function (const IMediaOptions*)",
    "insertText": "GetOptions()"
  },
  {
    "label": "GetPlayerOptions()",
    "kind": "Method",
    "detail": "Function (const FMediaPlayerOptions*)",
    "insertText": "GetPlayerOptions()"
  },
  {
    "label": "GetPlayerFactory()",
    "kind": "Method",
    "detail": "Function (IMediaPlayerFactory*)",
    "insertText": "GetPlayerFactory()"
  },
  {
    "label": "WillCreateNewPlayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillCreateNewPlayer()"
  },
  {
    "label": "WillUseNewResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillUseNewResources(uint32 ResourceFlags)"
  },
  {
    "label": "IControl()",
    "kind": "Method",
    "detail": "Function (} ; typedef TSharedPtr<IOpenRequest,ESPMode::ThreadSafe> IOpenRequestRef ; class IControl { public : ~)",
    "insertText": "IControl()"
  },
  {
    "label": "SubmitOpenRequest()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SubmitOpenRequest(IOpenRequestRef && OpenRequest)"
  },
  {
    "label": "GetFacade()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMediaPlayerFacade,ESPMode::ThreadSafe>)",
    "insertText": "GetFacade()"
  },
  {
    "label": "GetMediaPlayerInstanceID()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetMediaPlayerInstanceID()"
  },
  {
    "label": "IMediaPlayerLifecycleManagerDelegate()",
    "kind": "Method",
    "detail": "Function (} ; typedef TSharedPtr<IControl,ESPMode::ThreadSafe> IControlRef ; ~)",
    "insertText": "IMediaPlayerLifecycleManagerDelegate()"
  },
  {
    "label": "OnMediaPlayerOpen()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "OnMediaPlayerOpen(IControlRef Control, IOpenRequestRef OpenRequest)"
  },
  {
    "label": "OnMediaPlayerCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMediaPlayerCreated(IControlRef Control)"
  },
  {
    "label": "OnMediaPlayerCreateFailed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMediaPlayerCreateFailed(IControlRef Control)"
  },
  {
    "label": "OnMediaPlayerClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMediaPlayerClosed(IControlRef Control)"
  },
  {
    "label": "OnMediaPlayerDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMediaPlayerDestroyed(IControlRef Control)"
  },
  {
    "label": "OnMediaPlayerResourcesReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMediaPlayerResourcesReleased(IControlRef Control, uint32 ResourceFlags)"
  }
]