[
  {
    "label": "NetworkTesterPacket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkTesterPacket"
  },
  {
    "label": "PacketLogger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PacketLogger"
  },
  {
    "label": "RTC_PUSH_IGNORING_WUNDEF()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_TOOLS_NETWORK_TESTER_PACKET_LOGGER_H_ # define RTC_TOOLS_NETWORK_TESTER_PACKET_LOGGER_H_ # include<fstream> # include<string> # include \" rtc_base / ignore_wundef . h \" # ifdef WEBRTC_NETWORK_TESTER_PROTO)",
    "insertText": "RTC_PUSH_IGNORING_WUNDEF() #include \"rtc_tools/network_tester/network_tester_packet.pb.h\" RTC_POP_IGNORING_WUNDEF()"
  },
  {
    "label": "PacketLogger()",
    "kind": "Method",
    "detail": "Function (# else class NetworkTesterPacket ; # endif namespace webrtc { class PacketLogger { public :)",
    "insertText": "PacketLogger(const std::string& log_file_path)"
  },
  {
    "label": "PacketLogger()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "PacketLogger()"
  },
  {
    "label": "PacketLogger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PacketLogger(const PacketLogger&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (PacketLogger&)",
    "insertText": "operator(const PacketLogger&)"
  },
  {
    "label": "LogPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogPacket(const NetworkTesterPacket& packet)"
  }
]