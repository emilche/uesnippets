[
  {
    "label": "ISessionInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISessionInfo"
  },
  {
    "label": "FSessionLogMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSessionLogMessage"
  },
  {
    "label": "ISessionInstanceInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISessionInstanceInfo"
  },
  {
    "label": "ExecuteCommand()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class ISessionInfo ; struct FSessionLogMessage ; class ISessionInstanceInfo { public : void)",
    "insertText": "ExecuteCommand(const FString& CommandString)"
  },
  {
    "label": "GetBuildDate()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetBuildDate()"
  },
  {
    "label": "GetCurrentLevel()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetCurrentLevel()"
  },
  {
    "label": "GetDeviceName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetDeviceName()"
  },
  {
    "label": "GetEngineVersion()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetEngineVersion()"
  },
  {
    "label": "GetInstanceId()",
    "kind": "Method",
    "detail": "Function (const FGuid&)",
    "insertText": "GetInstanceId()"
  },
  {
    "label": "GetInstanceName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetInstanceName()"
  },
  {
    "label": "GetInstanceType()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetInstanceType()"
  },
  {
    "label": "GetLastUpdateTime()",
    "kind": "Method",
    "detail": "Function (const FDateTime&)",
    "insertText": "GetLastUpdateTime()"
  },
  {
    "label": "GetLog()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FSessionLogMessage>>&)",
    "insertText": "GetLog()"
  },
  {
    "label": "GetOwnerSession()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISessionInfo>)",
    "insertText": "GetOwnerSession()"
  },
  {
    "label": "GetPlatformName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetPlatformName()"
  },
  {
    "label": "GetWorldTimeSeconds()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetWorldTimeSeconds()"
  },
  {
    "label": "IsAuthorized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAuthorized()"
  },
  {
    "label": "PlayHasBegun()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PlayHasBegun()"
  },
  {
    "label": "Terminate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Terminate()"
  },
  {
    "label": "DECLARE_EVENT_TwoParams()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "DECLARE_EVENT_TwoParams(ISessionInstanceInfo, FLogReceivedEvent, const TSharedRef<ISessionInstanceInfo>&, const TSharedRef<FSessionLogMessage>&)"
  },
  {
    "label": "OnLogReceived()",
    "kind": "Method",
    "detail": "Function (FLogReceivedEvent&)",
    "insertText": "OnLogReceived()"
  },
  {
    "label": "ISessionInstanceInfo()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "ISessionInstanceInfo()"
  }
]