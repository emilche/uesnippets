[
  {
    "label": "MTLLegacyGregoryPatchTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MTLLegacyGregoryPatchTable"
  },
  {
    "label": "MTLLegacyGregoryPatchTable()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSUBDIV3_OSD_MTL_LEGACY_GREGORY_PATCH_TABLE_H # define OPENSUBDIV3_OSD_MTL_LEGACY_GREGORY_PATCH_TABLE_H # include \" . . / version . h \" # include \" . . / far / patchTable . h \" # include \" . . / osd / nonCopyable . h \" # include \" . . / osd / mtlCommon . h \" @ protocol MTLDevice ; @ protocol MTLBuffer ; namespace OpenSubdiv { namespace OPENSUBDIV_VERSION { namespace Osd { class MTLLegacyGregoryPatchTable : private NonCopyable<MTLLegacyGregoryPatchTable> { public : ~)",
    "insertText": "MTLLegacyGregoryPatchTable()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (template<DEVICE_CONTEXT> MTLLegacyGregoryPatchTable*)",
    "insertText": "Create(Far::PatchTable const* farPatchTable, DEVICE_CONTEXT context)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} MTLLegacyGregoryPatchTable*)",
    "insertText": "Create(Far::PatchTable const* farPatchTable, MTLContext* context)"
  },
  {
    "label": "UpdateVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVertexBuffer(id<MTLBuffer> vbo, int numVertices, int numVertexElements, MTLContext* context)"
  },
  {
    "label": "GetVertexBuffer()",
    "kind": "Method",
    "detail": "Function (id<MTLBuffer>)",
    "insertText": "GetVertexBuffer()"
  }
]