[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ThreadControllerPowerMonitor()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TASK_SEQUENCE_MANAGER_THREAD_CONTROLLER_POWER_MONITOR_H_ # define BASE_TASK_SEQUENCE_MANAGER_THREAD_CONTROLLER_POWER_MONITOR_H_ # include \" base / base_export . h \" # include \" base / power_monitor / power_observer . h \" namespace base { namespace sequence_manager { namespace internal { class BASE_EXPORT ThreadControllerPowerMonitor : public PowerSuspendObserver { public :)",
    "insertText": "ThreadControllerPowerMonitor()"
  },
  {
    "label": "ThreadControllerPowerMonitor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThreadControllerPowerMonitor(const ThreadControllerPowerMonitor&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ThreadControllerPowerMonitor&)",
    "insertText": "operator(const ThreadControllerPowerMonitor&)"
  },
  {
    "label": "BindToCurrentThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindToCurrentThread()"
  },
  {
    "label": "IsProcessInPowerSuspendState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsProcessInPowerSuspendState()"
  },
  {
    "label": "InitializeOnMainThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeOnMainThread()"
  },
  {
    "label": "OverrideUsePowerMonitorForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideUsePowerMonitorForTesting(bool use_power_monitor)"
  },
  {
    "label": "ResetForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetForTesting()"
  },
  {
    "label": "OnSuspend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSuspend()"
  },
  {
    "label": "OnResume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResume()"
  }
]