[
  {
    "label": "VideoStreamEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoStreamEncoder"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CadenceCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CadenceCallback"
  },
  {
    "label": "VideoFrameInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoFrameInfo"
  },
  {
    "label": "EncoderRateSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EncoderRateSettings"
  },
  {
    "label": "DegradationPreferenceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DegradationPreferenceManager"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AutomaticAnimationDetectionExperiment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AutomaticAnimationDetectionExperiment"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "UpdateTargetBitrate()",
    "kind": "Method",
    "detail": "Function (DataRate)",
    "insertText": "UpdateTargetBitrate(DataRate target_bitrate,\n                               double cwnd_reduce_ratio)"
  },
  {
    "label": "InjectAdaptationResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InjectAdaptationResource(rtc::scoped_refptr<Resource> resource,\n                                VideoAdaptationReason reason)"
  },
  {
    "label": "InjectAdaptationConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InjectAdaptationConstraint(AdaptationConstraint* adaptation_constraint)"
  },
  {
    "label": "AddRestrictionsListenerForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRestrictionsListenerForTesting(\n      VideoSourceRestrictionsListener* restrictions_listener)"
  },
  {
    "label": "RemoveRestrictionsListenerForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRestrictionsListenerForTesting(\n      VideoSourceRestrictionsListener* restrictions_listener)"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrame(Timestamp post_time,\n               int frames_scheduled_for_processing,\n               const VideoFrame& video_frame)"
  },
  {
    "label": "OnDiscardedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDiscardedFrame()"
  },
  {
    "label": "RequestRefreshFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRefreshFrame()"
  },
  {
    "label": "MaybeEncodeVideoFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeEncodeVideoFrame(const VideoFrame& frame,\n                             int64_t time_when_posted_in_ms)"
  },
  {
    "label": "EncodeVideoFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeVideoFrame(const VideoFrame& frame,\n                        int64_t time_when_posted_in_ms)"
  },
  {
    "label": "RTC_RUN_ON()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_RUN_ON(&encoder_queue_)"
  },
  {
    "label": "TraceFrameDropStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceFrameDropStart()"
  },
  {
    "label": "TraceFrameDropEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceFrameDropEnd()"
  },
  {
    "label": "RunPostEncode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunPostEncode(const EncodedImage& encoded_image,\n                     int64_t time_sent_us,\n                     int temporal_index,\n                     DataSize frame_size)"
  },
  {
    "label": "ShutdownResourceAdaptationQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownResourceAdaptationQueue()"
  },
  {
    "label": "AugmentEncodedImage()",
    "kind": "Method",
    "detail": "Function (EncodedImage)",
    "insertText": "AugmentEncodedImage(\n      const EncodedImage& encoded_image,\n      const CodecSpecificInfo* codec_specific_info)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (encoder_config_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (max_framerate_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (pending_encoder_reconfiguration_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (pending_encoder_creation_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_frame_info_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (crop_width_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (crop_height_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (encoder_target_bitrate_bps_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (max_data_payload_length_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_encoder_rate_settings_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (encoder_paused_and_dropped_frame_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (was_encode_called_since_last_initialization_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (encoder_failed_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_captured_timestamp_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (delta_ntp_internal_ms_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_frame_log_ms_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (captured_frame_count_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (dropped_frame_cwnd_pushback_count_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (dropped_frame_encoder_block_count_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (pending_frame_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (pending_frame_post_time_us_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (accumulated_update_rect_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (accumulated_update_rect_is_valid_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_update_rect_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (animation_start_time_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (cap_resolution_due_to_video_content_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (expect_resize_state_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (fec_controller_override_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_parameters_update_ms_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_encode_info_ms_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (encoder_info_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (send_codec_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (frame_dropper_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (force_disable_frame_dropper_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (cwnd_frame_drop_interval_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (cwnd_frame_counter_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (bitrate_adjuster_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (next_frame_types_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (automatic_animation_detection_experiment_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (video_stream_adapter_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (resource_adaptation_processor_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (degradation_preference_manager_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (adaptation_constraints_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (stream_resource_manager_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (additional_resources_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (video_source_sink_controller_)",
    "insertText": "RTC_GUARDED_BY(worker_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (latest_restrictions_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (animate_restrictions_)",
    "insertText": "RTC_GUARDED_BY(&encoder_queue_)"
  }
]