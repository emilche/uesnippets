[
  {
    "label": "UDateTimeScale",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UDateTimeScale"
  },
  {
    "label": "UTimeScaleValue",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UTimeScaleValue"
  },
  {
    "label": "utmscale_getTimeScaleValue()",
    "kind": "Method",
    "detail": "Function (# ifndef UTMSCALE_H # define UTMSCALE_H # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING typedef enum UDateTimeScale { UDTS_JAVA_TIME = 0,UDTS_UNIX_TIME,UDTS_ICU4C_TIME,UDTS_WINDOWS_FILE_TIME,UDTS_DOTNET_DATE_TIME,UDTS_MAC_OLD_TIME,UDTS_MAC_TIME,UDTS_EXCEL_TIME,UDTS_DB2_TIME,UDTS_UNIX_MICROSECONDS_TIME,# ifndef UDTS_MAX_SCALE # endif } UDateTimeScale ; typedef enum UTimeScaleValue { UTSV_UNITS_VALUE = 0,UTSV_EPOCH_OFFSET_VALUE = 1,UTSV_FROM_MIN_VALUE = 2,UTSV_FROM_MAX_VALUE = 3,UTSV_TO_MIN_VALUE = 4,UTSV_TO_MAX_VALUE = 5,# ifndef UTSV_EPOCH_OFFSET_PLUS_1_VALUE = 6,UTSV_EPOCH_OFFSET_MINUS_1_VALUE = 7,UTSV_UNITS_ROUND_VALUE = 8,UTSV_MIN_ROUND_VALUE = 9,UTSV_MAX_ROUND_VALUE = 1 0,# endif # ifndef UTSV_MAX_SCALE_VALUE = 1 1 # endif } UTimeScaleValue ; U_STABLE int64_t U_EXPORT2)",
    "insertText": "utmscale_getTimeScaleValue(UDateTimeScale timeScale, UTimeScaleValue value, UErrorCode *status)"
  },
  {
    "label": "utmscale_fromInt64()",
    "kind": "Method",
    "detail": "Function (U_STABLE int64_t U_EXPORT2)",
    "insertText": "utmscale_fromInt64(int64_t otherTime, UDateTimeScale timeScale, UErrorCode *status)"
  },
  {
    "label": "utmscale_toInt64()",
    "kind": "Method",
    "detail": "Function (U_STABLE int64_t U_EXPORT2)",
    "insertText": "utmscale_toInt64(int64_t universalTime, UDateTimeScale timeScale, UErrorCode *status)"
  }
]