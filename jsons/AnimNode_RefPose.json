[
  {
    "label": "ERefPoseType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERefPoseType"
  },
  {
    "label": "FAnimNode_RefPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_RefPose"
  },
  {
    "label": "FAnimNode_MeshSpaceRefPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_MeshSpaceRefPose"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimNodeBase . h \" # include \" AnimNode_RefPose . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (EIT_LocalSpace,EIT_Additive } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() private: #if WITH_EDITORONLY_DATA UPROPERTY(meta=(FoldProperty))"
  },
  {
    "label": "FAnimNode_RefPose()",
    "kind": "Method",
    "detail": "Function (# endif public :)",
    "insertText": "FAnimNode_RefPose()"
  },
  {
    "label": "SetRefPoseType()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "SetRefPoseType(ERefPoseType InType)"
  },
  {
    "label": "GetRefPoseType()",
    "kind": "Method",
    "detail": "Function (RefPoseType = InType ; } # endif ERefPoseType)",
    "insertText": "GetRefPoseType()"
  },
  {
    "label": "Evaluate_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate_AnyThread(FPoseContext& Output)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: FAnimNode_MeshSpaceRefPose()"
  },
  {
    "label": "EvaluateComponentSpace_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluateComponentSpace_AnyThread(FComponentSpacePoseContext& Output)"
  }
]