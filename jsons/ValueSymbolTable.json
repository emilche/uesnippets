[
  {
    "label": "SymbolTableListTraits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SymbolTableListTraits"
  },
  {
    "label": "BasicBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BasicBlock"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "NamedMDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NamedMDNode"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "ValueSymbolTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueSymbolTable"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "ValueSymbolTable()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_VALUESYMBOLTABLE_H # define LLVM_IR_VALUESYMBOLTABLE_H # include \" llvm / ADT / StringMap . h \" # include \" llvm / IR / Value . h \" # include \" llvm / Support / DataTypes . h \" namespace llvm { template<ValueSubClass,ItemParentClass> class SymbolTableListTraits ; class BasicBlock ; class Function ; class NamedMDNode ; class Module ; class StringRef ; class ValueSymbolTable { class Value ; class SymbolTableListTraits<Argument,Function> ; class SymbolTableListTraits<BasicBlock,Function> ; class SymbolTableListTraits<Instruction,BasicBlock> ; class SymbolTableListTraits<Function,Module> ; class SymbolTableListTraits<GlobalVariable,Module> ; class SymbolTableListTraits<GlobalAlias,Module> ; public : typedef StringMap<Value*> ValueMap ; typedef ValueMap::iterator iterator ; typedef ValueMap::const_iterator const_iterator ; public :)",
    "insertText": "ValueSymbolTable() : vmap(0), LastUnique(0)"
  },
  {
    "label": "ValueSymbolTable()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "ValueSymbolTable()"
  },
  {
    "label": "lookup()",
    "kind": "Method",
    "detail": "Function (public : Value*)",
    "insertText": "lookup(StringRef Name)"
  },
  {
    "label": "empty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "empty()"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "size()"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "dump()"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (public : iterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (} iterator)",
    "insertText": "end()"
  },
  {
    "label": "reinsertValue()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "reinsertValue(Value *V)"
  },
  {
    "label": "createValueName()",
    "kind": "Method",
    "detail": "Function (ValueName*)",
    "insertText": "createValueName(StringRef Name, Value *V)"
  },
  {
    "label": "removeValueName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeValueName(ValueName *V)"
  }
]