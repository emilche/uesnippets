[
  {
    "label": "LoggingSeverity",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LoggingSeverity"
  },
  {
    "label": "LogErrorContext",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LogErrorContext"
  },
  {
    "label": "LogMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogMessage"
  },
  {
    "label": "LogLineRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogLineRef"
  },
  {
    "label": "LogMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogMessage"
  },
  {
    "label": "LogSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogSink"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "LogMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogMetadata"
  },
  {
    "label": "LogMetadataErr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LogMetadataErr"
  },
  {
    "label": "LogMetadataTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LogMetadataTag"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Val",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Val"
  },
  {
    "label": "ToStringVal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ToStringVal"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "has_to_log_string",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_to_log_string"
  },
  {
    "label": "has_to_log_string",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_to_log_string"
  },
  {
    "label": "LogStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogStreamer"
  },
  {
    "label": "LogStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogStreamer"
  },
  {
    "label": "LogStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogStreamer"
  },
  {
    "label": "LogCall",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogCall"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "LogMessageVoidify",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogMessageVoidify"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "LogMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogMessage"
  },
  {
    "label": "LogMessageForTesting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogMessageForTesting"
  },
  {
    "label": "OnLogMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLogMessage(const std::string& msg,\n                            LoggingSeverity severity,\n                            const char* tag)"
  },
  {
    "label": "OnLogMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLogMessage(const std::string& message,\n                            LoggingSeverity severity)"
  },
  {
    "label": "OnLogMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLogMessage(absl::string_view msg,\n                            LoggingSeverity severity,\n                            const char* tag)"
  },
  {
    "label": "OnLogMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLogMessage(absl::string_view message,\n                            LoggingSeverity severity)"
  },
  {
    "label": "OnLogMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLogMessage(absl::string_view message)"
  },
  {
    "label": "OnLogMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLogMessage(const LogLineRef& line)"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log(const LogArgType* fmt, ...)"
  },
  {
    "label": "AddTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTag(const char* tag)"
  },
  {
    "label": "LogStartTime()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "LogStartTime()"
  },
  {
    "label": "WallClockStartTime()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "WallClockStartTime()"
  },
  {
    "label": "LogThreads()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogThreads(bool on = true)"
  },
  {
    "label": "LogTimestamps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogTimestamps(bool on = true)"
  },
  {
    "label": "LogToDebug()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogToDebug(LoggingSeverity min_sev)"
  },
  {
    "label": "GetLogToDebug()",
    "kind": "Method",
    "detail": "Function (LoggingSeverity)",
    "insertText": "GetLogToDebug()"
  },
  {
    "label": "SetLogToStderr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLogToStderr(bool log_to_stderr)"
  },
  {
    "label": "AddLogToStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLogToStream(LogSink* stream, LoggingSeverity min_sev)"
  },
  {
    "label": "RemoveLogToStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLogToStream(LogSink* stream)"
  },
  {
    "label": "GetLogToStream()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetLogToStream(LogSink* stream = nullptr)"
  },
  {
    "label": "GetMinLogSeverity()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetMinLogSeverity()"
  },
  {
    "label": "ConfigureLogging()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigureLogging(absl::string_view params)"
  },
  {
    "label": "IsNoop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNoop(LoggingSeverity severity)"
  },
  {
    "label": "IsNoop()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsNoop(S)"
  },
  {
    "label": "IsNoop()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsNoop(S)"
  },
  {
    "label": "UpdateMinLogSeverity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMinLogSeverity()"
  },
  {
    "label": "OutputToDebug()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputToDebug(const LogLineRef& log_line_ref)"
  },
  {
    "label": "FinishPrintStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishPrintStream()"
  }
]