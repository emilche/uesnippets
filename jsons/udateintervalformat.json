[
  {
    "label": "UDateIntervalFormat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UDateIntervalFormat"
  },
  {
    "label": "UFormattedDateInterval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UFormattedDateInterval"
  },
  {
    "label": "udtitvfmt_open()",
    "kind": "Method",
    "detail": "Function (# ifndef UDATEINTERVALFORMAT_H # define UDATEINTERVALFORMAT_H # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / umisc . h \" # include \" unicode / localpointer . h \" # include \" unicode / uformattedvalue . h \" struct UDateIntervalFormat ; typedef struct UDateIntervalFormat UDateIntervalFormat ; # ifndef struct UFormattedDateInterval ; typedef struct UFormattedDateInterval UFormattedDateInterval ; # endif U_STABLE UDateIntervalFormat* U_EXPORT2)",
    "insertText": "udtitvfmt_open(const char* locale, const UChar* skeleton, int32_t skeletonLength, const UChar* tzID, int32_t tzIDLength, UErrorCode* status)"
  },
  {
    "label": "udtitvfmt_close()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "udtitvfmt_close(UDateIntervalFormat *formatter)"
  },
  {
    "label": "udtitvfmt_openResult()",
    "kind": "Method",
    "detail": "Function (# ifndef U_CAPI UFormattedDateInterval* U_EXPORT2)",
    "insertText": "udtitvfmt_openResult(UErrorCode* ec)"
  },
  {
    "label": "udtitvfmt_resultAsValue()",
    "kind": "Method",
    "detail": "Function (U_CAPI const UFormattedValue* U_EXPORT2)",
    "insertText": "udtitvfmt_resultAsValue(const UFormattedDateInterval* uresult, UErrorCode* ec)"
  },
  {
    "label": "udtitvfmt_closeResult()",
    "kind": "Method",
    "detail": "Function (U_CAPI void U_EXPORT2)",
    "insertText": "udtitvfmt_closeResult(UFormattedDateInterval* uresult)"
  },
  {
    "label": "U_DEFINE_LOCAL_OPEN_POINTER()",
    "kind": "Method",
    "detail": "Function (# endif # if U_NAMESPACE_BEGIN)",
    "insertText": "U_DEFINE_LOCAL_OPEN_POINTER(LocalUDateIntervalFormatPointer, UDateIntervalFormat, udtitvfmt_close)"
  },
  {
    "label": "U_DEFINE_LOCAL_OPEN_POINTER()",
    "kind": "Method",
    "detail": "Function (# ifndef)",
    "insertText": "U_DEFINE_LOCAL_OPEN_POINTER(LocalUFormattedDateIntervalPointer, UFormattedDateInterval, udtitvfmt_closeResult)"
  },
  {
    "label": "udtitvfmt_format()",
    "kind": "Method",
    "detail": "Function (# endif U_NAMESPACE_END # endif U_STABLE int32_t U_EXPORT2)",
    "insertText": "udtitvfmt_format(const UDateIntervalFormat* formatter, UDate fromDate, UDate toDate, UChar* result, int32_t resultCapacity, UFieldPosition* position, UErrorCode* status)"
  },
  {
    "label": "udtitvfmt_formatToResult()",
    "kind": "Method",
    "detail": "Function (# ifndef U_DRAFT void U_EXPORT2)",
    "insertText": "udtitvfmt_formatToResult(const UDateIntervalFormat* formatter, UFormattedDateInterval* result, UDate fromDate, UDate toDate, UErrorCode* status)"
  }
]