[
  {
    "label": "USoundWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWave"
  },
  {
    "label": "USoundCue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundCue"
  },
  {
    "label": "AStaticMeshActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AStaticMeshActor"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UParticleSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystem"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UModel"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "AnimationCompressionFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AnimationCompressionFormat"
  },
  {
    "label": "FAnalyzeReferencedContentStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnalyzeReferencedContentStat"
  },
  {
    "label": "EIgnoreObjectFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EIgnoreObjectFlags"
  },
  {
    "label": "FAssetStatsBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetStatsBase"
  },
  {
    "label": "FStaticMeshStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshStats"
  },
  {
    "label": "FSkeletalMeshStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshStats"
  },
  {
    "label": "FPrimitiveStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveStats"
  },
  {
    "label": "FTextureStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureStats"
  },
  {
    "label": "FParticleStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleStats"
  },
  {
    "label": "FTextureToParticleSystemStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureToParticleSystemStats"
  },
  {
    "label": "FAnimSequenceStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimSequenceStats"
  },
  {
    "label": "EAnimReferenceType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAnimReferenceType"
  },
  {
    "label": "FLightingOptimizationStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightingOptimizationStats"
  },
  {
    "label": "FSoundCueStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundCueStats"
  },
  {
    "label": "FSoundWaveStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundWaveStats"
  },
  {
    "label": "ShouldLogStat()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SceneTypes . h \" class USoundWave ; class USoundCue ; class AStaticMeshActor ; class UAnimSequence ; class UParticleSystem ; class UTexture ; class UModel ; class USkeletalMesh ; class UStaticMesh ; enum AnimationCompressionFormat : int ; class FAnalyzeReferencedContentStat { public : enum EIgnoreObjectFlags { IGNORE_StaticMesh = 0 x00000001,IGNORE_StaticMeshComponent = 0 x00000002,IGNORE_StaticMeshActor = 0 x00000004,IGNORE_Texture = 0 x00000008,IGNORE_Particle = 0 x00000020,IGNORE_Anim = 0 x00000040,IGNORE_LightingOptimization = 0 x00000080,IGNORE_SoundCue = 0 x00000100,IGNORE_Brush = 0 x00000200,IGNORE_Level = 0 x00000400,IGNORE_SkeletalMesh = 0 x00000800,IGNORE_SkeletalMeshComponent = 0 x00001000,IGNORE_Primitive = 0 x00002000,IGNORE_SoundWave = 0 x00004000,} ; int32 IgnoreObjects ; typedef TMap<FString,uint32> PerLevelDataMap ; struct FAssetStatsBase { PerLevelDataMap LevelNameToInstanceCount ; TArray<FString> MapsUsedIn ; bool)",
    "insertText": "ShouldLogStat()"
  },
  {
    "label": "FStaticMeshStats()",
    "kind": "Method",
    "detail": "Function (} ; struct FStaticMeshStats : public FAssetStatsBase {)",
    "insertText": "FStaticMeshStats(UStaticMesh* StaticMesh)"
  },
  {
    "label": "ToCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToCSV()"
  },
  {
    "label": "ToCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToCSV(const FString& LevelName)"
  },
  {
    "label": "GetSummaryCSVHeaderRow()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSummaryCSVHeaderRow()"
  },
  {
    "label": "ToSummaryCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToSummaryCSV(const FString& LevelName, const TMap<FString,FStaticMeshStats>& StatsData)"
  },
  {
    "label": "FSkeletalMeshStats()",
    "kind": "Method",
    "detail": "Function (FString ResourceType ; FString ResourceName ; int32 NumInstances ; int32 NumTriangles ; int32 NumSections ; int32 NumConvexPrimitives ; int32 bUsesSimpleRigidBodyCollision ; int32 NumElementsWithCollision ; bool bIsReferencedByScript ; bool bIsReferencedByParticles ; int32 ResourceSize ; bool bIsMeshNonUniformlyScaled ; bool bShouldConvertBoxColl ; TArray<FVector> UsedAtScales ; } ; struct FSkeletalMeshStats : public FAssetStatsBase {)",
    "insertText": "FSkeletalMeshStats(USkeletalMesh* SkeletalMesh)"
  },
  {
    "label": "ToSummaryCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToSummaryCSV(const FString& LevelName, const TMap<FString,FSkeletalMeshStats>& StatsData)"
  },
  {
    "label": "FPrimitiveStats()",
    "kind": "Method",
    "detail": "Function (FString ResourceType ; FString ResourceName ; int32 NumInstances ; int32 NumTriangles ; int32 NumVertices ; int32 VertexMemorySize ; int32 IndexMemorySize ; int32 NumRigidVertices ; int32 NumSoftVertices ; int32 NumSections ; int32 NumChunks ; int32 MaxBoneInfluences ; int32 NumActiveBoneIndices ; int32 NumRequiredBones ; int32 NumMaterials ; bool bIsReferencedByScript ; bool bIsReferencedByParticles ; int32 ResourceSize ; } ; struct FPrimitiveStats : public FAssetStatsBase {)",
    "insertText": "FPrimitiveStats(UModel* Model)"
  },
  {
    "label": "FPrimitiveStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPrimitiveStats(USkeletalMesh * SkeletalMesh, FAnalyzeReferencedContentStat::FSkeletalMeshStats * SkeletalMeshStats)"
  },
  {
    "label": "FPrimitiveStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPrimitiveStats(UStaticMesh* SkeletalMesh, FAnalyzeReferencedContentStat::FStaticMeshStats * StaticMeshStats)"
  },
  {
    "label": "ToSummaryCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToSummaryCSV(const FString& LevelName, const TMap<FString,FPrimitiveStats>& StatsData)"
  },
  {
    "label": "FTextureStats()",
    "kind": "Method",
    "detail": "Function (FString ResourceType ; FString ResourceName ; int32 NumInstances ; int32 NumTriangles ; int32 NumSections ; int32 ResourceSize ; } ; struct FTextureStats : public FAssetStatsBase {)",
    "insertText": "FTextureStats(UTexture* Texture)"
  },
  {
    "label": "ToSummaryCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToSummaryCSV(const FString& LevelName, const TMap<FString,FTextureStats>& StatsData)"
  },
  {
    "label": "FParticleStats()",
    "kind": "Method",
    "detail": "Function (FString ResourceType ; FString ResourceName ; TMap<FString,int32> MaterialsUsedBy ; bool bIsReferencedByScript ; int32 ResourceSize ; int32 LODBias ; int32 LODGroup ; FString Format ; } ; struct FParticleStats : public FAssetStatsBase {)",
    "insertText": "FParticleStats(UParticleSystem* ParticleSystem)"
  },
  {
    "label": "GetCSVHeaderRow()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCSVHeaderRow()"
  },
  {
    "label": "ToSummaryCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToSummaryCSV(const FString& LevelName, const TMap<FString,FParticleStats>& StatsData)"
  },
  {
    "label": "FTextureToParticleSystemStats()",
    "kind": "Method",
    "detail": "Function (FString ResourceType ; FString ResourceName ; bool bIsReferencedByScript ; int32 NumEmitters ; int32 NumModules ; int32 NumPeakActiveParticles ; int32 NumEmittersUsingCollision ; int32 NumEmittersUsingPhysics ; int32 MaxNumDrawnPerFrame ; float PeakActiveToMaxDrawnRatio ; int32 NumBytesUsed ; bool bMeshEmitterHasDoCollisions ; bool bMeshEmitterHasCastShadows ; float WarmUpTime ; } ; struct FTextureToParticleSystemStats : public FAssetStatsBase {)",
    "insertText": "FTextureToParticleSystemStats(UTexture* InTexture)"
  },
  {
    "label": "AddParticleSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParticleSystem(UParticleSystem* InParticleSystem)"
  },
  {
    "label": "GetParticleSystemsContainedInCount()",
    "kind": "Method",
    "detail": "Function (const int32)",
    "insertText": "GetParticleSystemsContainedInCount()"
  },
  {
    "label": "GetParticleSystemContainedIn()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetParticleSystemContainedIn(int32 Index)"
  },
  {
    "label": "FAnimSequenceStats()",
    "kind": "Method",
    "detail": "Function (} protected : FString TextureName ; FString TextureSize ; FString Format ; TArray<FString> ParticleSystemsContainedIn ; } ; struct FAnimSequenceStats : public FAssetStatsBase {)",
    "insertText": "FAnimSequenceStats(UAnimSequence* Sequence)"
  },
  {
    "label": "ToSummaryCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToSummaryCSV(const FString& LevelName, const TMap<FString,FAnimSequenceStats>& StatsData)"
  },
  {
    "label": "FLightingOptimizationStats()",
    "kind": "Method",
    "detail": "Function (FString ResourceType ; FString ResourceName ; FString AnimSetName ; FString AnimTag ; bool bIsReferencedByScript ; bool bMarkedAsDoNotOverrideCompression ; AnimationCompressionFormat TranslationFormat ; AnimationCompressionFormat RotationFormat ; AnimationCompressionFormat ScaleFormat ; FString CompressionScheme ; int32 AnimationResourceSize ; int32 CompressionRatio ; int32 TotalTracks ; int32 NumTransTracksWithOneKey ; int32 NumRotTracksWithOneKey ; int32 NumScaleTracksWithOneKey ; int32 TrackTableSize ; int32 TotalNumTransKeys ; int32 TotalNumRotKeys ; int32 TotalNumScaleKeys ; float TranslationKeySize ; float RotationKeySize ; float ScaleKeySize ; int32 OverheadSize ; int32 TotalFrames ; enum EAnimReferenceType { ART_SkeletalMeshComponent,ART_Crowd,} ; EAnimReferenceType ReferenceType ; } ; struct FLightingOptimizationStats : public FAssetStatsBase {)",
    "insertText": "FLightingOptimizationStats(AStaticMeshActor* StaticMeshActor)"
  },
  {
    "label": "CalculateLightmapLightingBytesUsed()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CalculateLightmapLightingBytesUsed(int32 Width, int32 Height, int32 NumVertices, int32 UVChannelIndex)"
  },
  {
    "label": "CalculateLightingOptimizationInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateLightingOptimizationInfo(ELightMapInteractionType LMType, int32 NumVertices, int32 Width, int32 Height, int32 TexCoordIndex, FLightingOptimizationStats& LOStats)"
  },
  {
    "label": "FSoundCueStats()",
    "kind": "Method",
    "detail": "Function (const int32 NumLightmapTextureSizes = 4 ; const int32 LightMapSizes [ NumLightmapTextureSizes ] ; FString LevelName ; FString ActorName ; FString SMName ; ELightMapInteractionType IsType ; int32 TextureSize ; int32 CurrentBytesUsed ; int32 BytesSaved [ NumLightmapTextureSizes + 1 ] ; } ; struct FSoundCueStats : public FAssetStatsBase {)",
    "insertText": "FSoundCueStats(USoundCue* SoundCue)"
  },
  {
    "label": "ToSummaryCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToSummaryCSV(const FString& LevelName, const TMap<FString,FSoundCueStats>& StatsData)"
  },
  {
    "label": "FSoundWaveStats()",
    "kind": "Method",
    "detail": "Function (FString ResourceType ; FString ResourceName ; bool bIsReferencedByScript ; int32 ResourceSize ; } ; struct FSoundWaveStats : public FAssetStatsBase {)",
    "insertText": "FSoundWaveStats(USoundWave* SoundWave)"
  },
  {
    "label": "ToSummaryCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToSummaryCSV(const FString& LevelName, const TMap<FString,FSoundWaveStats>& StatsData)"
  },
  {
    "label": "GetTextureStats()",
    "kind": "Method",
    "detail": "Function (FString ResourceType ; FString ResourceName ; bool bIsReferencedByScript ; int32 ResourceSize ; } ; FTextureStats*)",
    "insertText": "GetTextureStats(UTexture* Texture)"
  },
  {
    "label": "GetStaticMeshStats()",
    "kind": "Method",
    "detail": "Function (FStaticMeshStats*)",
    "insertText": "GetStaticMeshStats(UStaticMesh* StaticMesh, UPackage* LevelPackage)"
  },
  {
    "label": "GetPrimitiveStats()",
    "kind": "Method",
    "detail": "Function (FPrimitiveStats*)",
    "insertText": "GetPrimitiveStats(UObject* Object, UPackage* LevelPackage)"
  },
  {
    "label": "GetSkeletalMeshStats()",
    "kind": "Method",
    "detail": "Function (FSkeletalMeshStats*)",
    "insertText": "GetSkeletalMeshStats(USkeletalMesh* SkeletalMesh, UPackage* LevelPackage)"
  },
  {
    "label": "GetParticleStats()",
    "kind": "Method",
    "detail": "Function (FParticleStats*)",
    "insertText": "GetParticleStats(UParticleSystem* ParticleSystem)"
  },
  {
    "label": "GetTextureToParticleSystemStats()",
    "kind": "Method",
    "detail": "Function (FTextureToParticleSystemStats*)",
    "insertText": "GetTextureToParticleSystemStats(UTexture* InTexture)"
  },
  {
    "label": "GetAnimSequenceStats()",
    "kind": "Method",
    "detail": "Function (FAnimSequenceStats*)",
    "insertText": "GetAnimSequenceStats(UAnimSequence* AnimSequence)"
  },
  {
    "label": "GetLightingOptimizationStats()",
    "kind": "Method",
    "detail": "Function (FLightingOptimizationStats*)",
    "insertText": "GetLightingOptimizationStats(AStaticMeshActor* ActorComponent)"
  },
  {
    "label": "GetSoundCueStats()",
    "kind": "Method",
    "detail": "Function (FSoundCueStats*)",
    "insertText": "GetSoundCueStats(USoundCue* SoundCue, UPackage* LevelPackage)"
  },
  {
    "label": "GetSoundWaveStats()",
    "kind": "Method",
    "detail": "Function (FSoundWaveStats*)",
    "insertText": "GetSoundWaveStats(USoundWave* SoundWave, UPackage* LevelPackage)"
  },
  {
    "label": "SetIgnoreObjectFlag()",
    "kind": "Method",
    "detail": "Function (TMap<FString,FStaticMeshStats> ResourceNameToStaticMeshStats ; TMap<FString,FPrimitiveStats> ResourceNameToPrimitiveStats ; TMap<FString,FSkeletalMeshStats> ResourceNameToSkeletalMeshStats ; TMap<FString,FTextureStats> ResourceNameToTextureStats ; TMap<FString,FParticleStats> ResourceNameToParticleStats ; TMap<FString,FTextureToParticleSystemStats> ResourceNameToTextureToParticleSystemStats ; TMap<FString,FAnimSequenceStats> ResourceNameToAnimStats ; TMap<FString,FLightingOptimizationStats> ResourceNameToLightingStats ; TMap<FString,FSoundCueStats> ResourceNameToSoundCueStats ; TMap<FString,FSoundWaveStats> ResourceNameToSoundWaveStats ; void)",
    "insertText": "SetIgnoreObjectFlag(int32 IgnoreObjectFlag)"
  },
  {
    "label": "GetIgnoreObjectFlag()",
    "kind": "Method",
    "detail": "Function (IgnoreObjects = IgnoreObjectFlag ; } int32)",
    "insertText": "GetIgnoreObjectFlag()"
  },
  {
    "label": "WriteOutAllAvailableStatData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteOutAllAvailableStatData(const FString& CSVDirectory)"
  },
  {
    "label": "WriteOutCSVs()",
    "kind": "Method",
    "detail": "Function (template<STAT_TYPE> void)",
    "insertText": "WriteOutCSVs(const TMap<FString,STAT_TYPE>& StatsData, const FString& CSVDirectory, const FString& StatsName)"
  },
  {
    "label": "WriteOutSummaryCSVs()",
    "kind": "Method",
    "detail": "Function (template<STAT_TYPE> void)",
    "insertText": "WriteOutSummaryCSVs(const TMap<FString,STAT_TYPE>& StatsData, const FString& CSVDirectory, const FString& StatsName)"
  },
  {
    "label": "WriteOutCSVsPerLevel()",
    "kind": "Method",
    "detail": "Function (template<STAT_TYPE> void)",
    "insertText": "WriteOutCSVsPerLevel(const TMap<FString,STAT_TYPE>& StatsData, const FString& CSVDirectory, const FString& StatsName)"
  },
  {
    "label": "GetTotalCountPerLevel()",
    "kind": "Method",
    "detail": "Function (template<STAT_TYPE> int32)",
    "insertText": "GetTotalCountPerLevel(const TMap<FString,STAT_TYPE>& StatsData, const FString& LevelName)"
  },
  {
    "label": "WriteOutSummary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteOutSummary(const FString& CSVDirectory)"
  }
]