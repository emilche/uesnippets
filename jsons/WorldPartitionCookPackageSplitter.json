[
  {
    "label": "FWorldPartitionCookPackageSplitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionCookPackageSplitter"
  },
  {
    "label": "ShouldSplit()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CookPackageSplitter . h \" # include \" Engine / World . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" WorldPartition / Cook / WorldPartitionCookPackageContext . h \" class FWorldPartitionCookPackageSplitter : public FGCObject,public ICookPackageSplitter { public : bool)",
    "insertText": "ShouldSplit(UObject* SplitData)"
  },
  {
    "label": "GetSplitterDebugName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSplitterDebugName()"
  },
  {
    "label": "FWorldPartitionCookPackageSplitter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FWorldPartitionCookPackageSplitter()"
  },
  {
    "label": "Teardown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Teardown(ETeardown Status)"
  },
  {
    "label": "UseInternalReferenceToAvoidGarbageCollect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseInternalReferenceToAvoidGarbageCollect()"
  },
  {
    "label": "PopulateGeneratedPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopulateGeneratedPackage(UPackage* OwnerPackage, UObject* OwnerObject, const FGeneratedPackageForPopulate& GeneratedPackage, TArray<UObject*>& OutObjectsToMove, TArray<UPackage*>& OutModifiedPackages)"
  },
  {
    "label": "PopulateGeneratorPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopulateGeneratorPackage(UPackage* OwnerPackage, UObject* OwnerObject, const TArray<ICookPackageSplitter::FGeneratedPackageForPreSave>& GeneratedPackages, TArray<UObject*>& OutObjectsToMove, TArray<UPackage*>& OutModifiedPackages)"
  },
  {
    "label": "OnOwnerReloaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOwnerReloaded(UPackage* OwnerPackage, UObject* OwnerObject)"
  },
  {
    "label": "OnWorldCleanup()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnWorldCleanup(UWorld* InWorld, bool bSessionEnded, bool bCleanupResources)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "BuildPackagesToGenerateList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildPackagesToGenerateList(TArray<ICookPackageSplitter::FGeneratedPackage>& PackagesToGenerate)"
  },
  {
    "label": "MapGeneratePackageToCookPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MapGeneratePackageToCookPackage(const TArray<ICookPackageSplitter::FGeneratedPackageForPreSave>& GeneratedPackages)"
  }
]