[
  {
    "label": "TKeyFrameManipulator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TKeyFrameManipulator"
  },
  {
    "label": "TKeyTimeIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TKeyTimeIterator"
  },
  {
    "label": "IKeyFrameManipulator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IKeyFrameManipulator"
  },
  {
    "label": "AddKey()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Curves / KeyHandle . h \" template<TimeType> class TKeyFrameManipulator ; template<TimeType> struct TKeyTimeIterator ; template<TimeType = float> class IKeyFrameManipulator { public : typedef TCallTraits<TimeType>::ParamType TimeTypeRef ; FKeyHandle)",
    "insertText": "AddKey(TimeTypeRef InTime)"
  },
  {
    "label": "SetKeyTime()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetKeyTime(FKeyHandle KeyHandle, TimeTypeRef NewTime)"
  },
  {
    "label": "SetKeyTimeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyTimeImpl(KeyHandle, NewTime)"
  },
  {
    "label": "RemoveKey()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveKey(FKeyHandle KeyHandle)"
  },
  {
    "label": "RemoveKeyImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveKeyImpl(KeyHandle)"
  },
  {
    "label": "GetKeyTime()",
    "kind": "Method",
    "detail": "Function (} TOptional<TimeType>)",
    "insertText": "GetKeyTime(FKeyHandle KeyHandle)"
  },
  {
    "label": "FindKey()",
    "kind": "Method",
    "detail": "Function (} TOptional<FKeyHandle>)",
    "insertText": "FindKey(TimeTypeRef KeyTime, TimeTypeRef KeyTimeTolerance)"
  },
  {
    "label": "Predicate()",
    "kind": "Method",
    "detail": "Function (auto)",
    "insertText": "Predicate(TimeTypeRef InTime)"
  },
  {
    "label": "FindKeyImpl()",
    "kind": "Method",
    "detail": "Function (} ; return)",
    "insertText": "FindKeyImpl(Predicate)"
  },
  {
    "label": "AddKeyImpl()",
    "kind": "Method",
    "detail": "Function (} private : FKeyHandle)",
    "insertText": "AddKeyImpl(TimeTypeRef InTime)"
  },
  {
    "label": "SetKeyTimeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyTimeImpl(FKeyHandle KeyHandle, TimeTypeRef NewTime)"
  },
  {
    "label": "RemoveKeyImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveKeyImpl(FKeyHandle KeyHandle)"
  },
  {
    "label": "GetKeyTimeImpl()",
    "kind": "Method",
    "detail": "Function (TOptional<TimeType>)",
    "insertText": "GetKeyTimeImpl(FKeyHandle KeyHandle)"
  },
  {
    "label": "FindKeyImpl()",
    "kind": "Method",
    "detail": "Function (TOptional<FKeyHandle>)",
    "insertText": "FindKeyImpl(const TFunctionRef<bool(TimeTypeRef)>& InPredicate)"
  },
  {
    "label": "IterateKeysImpl()",
    "kind": "Method",
    "detail": "Function (TKeyTimeIterator<TimeType>)",
    "insertText": "IterateKeysImpl()"
  },
  {
    "label": "TKeyTimeIterator()",
    "kind": "Method",
    "detail": "Function (} ; template<> class TKeyFrameManipulator ; template<TimeType> struct TKeyTimeIterator {)",
    "insertText": "TKeyTimeIterator(const TKeyFrameManipulator<TimeType>& InManipulator) : Manipulator(InManipulator) , Index(0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} TKeyTimeIterator&)",
    "insertText": "operator()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (+ + Index ; return* this ; } operator)",
    "insertText": "bool()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const TKeyTimeIterator& RHS)"
  },
  {
    "label": "GetKeyHandle()",
    "kind": "Method",
    "detail": "Function (} FKeyHandle)",
    "insertText": "GetKeyHandle()"
  },
  {
    "label": "GetStartIndex()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetStartIndex()"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (} TKeyTimeIterator<TimeType>)",
    "insertText": "begin(const TKeyTimeIterator<TimeType>& Iter)"
  },
  {
    "label": "GetEndIndex()",
    "kind": "Method",
    "detail": "Function (TKeyTimeIterator<TimeType> NewIter = Iter ; NewIter . Index = NewIter .)",
    "insertText": "GetEndIndex()"
  }
]