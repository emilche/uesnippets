[
  {
    "label": "FWorldPartitionActorDescInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDescInstance"
  },
  {
    "label": "UBaseIteratePackagesCommandlet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBaseIteratePackagesCommandlet"
  },
  {
    "label": "EBrevity",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBrevity"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "FQueuedSourceControlOperations",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueuedSourceControlOperations"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogIteratePackagesCommandlet, Log, All)"
  },
  {
    "label": "InitializeParameters()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "InitializeParameters( const TArray<FString>& Tokens, TArray<FString>& MapPathNames )"
  },
  {
    "label": "ParseSourceControlOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseSourceControlOptions(const TArray<FString>& Tokens)"
  },
  {
    "label": "OnAddResaveOnDemandPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddResaveOnDemandPackage(FName SystemName, FName PackageName)"
  },
  {
    "label": "LoadAndSaveOnePackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadAndSaveOnePackage(const FString& Filename)"
  },
  {
    "label": "ShouldSkipPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldSkipPackage(const FString& Filename)"
  },
  {
    "label": "DeleteOnePackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteOnePackage(const FString& Filename)"
  },
  {
    "label": "PerformPreloadOperations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformPreloadOperations( FLinkerLoad* PackageLinker, bool& bSavePackage )"
  },
  {
    "label": "CleanClassesFromContentPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CleanClassesFromContentPackages( class UPackage* Package )"
  },
  {
    "label": "CheckoutFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckoutFile(const FString& Filename, bool bAddFile = false, bool bIgnoreAlreadyCheckedOut = false)"
  },
  {
    "label": "RevertFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RevertFile(const FString& Filename)"
  },
  {
    "label": "CanCheckoutFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCheckoutFile(const FString& Filename, FString& CheckedOutUser)"
  },
  {
    "label": "CheckoutAndSavePackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckoutAndSavePackage(UPackage* Package, TArray<FString>& SublevelFilenames, bool bIgnoreAlreadyCheckedOut = false)"
  },
  {
    "label": "CreateTempFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "CreateTempFilename()"
  },
  {
    "label": "GetTempFilesDirectory()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTempFilesDirectory()"
  },
  {
    "label": "CleanTempFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanTempFiles()"
  },
  {
    "label": "VerboseMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerboseMessage(const FString& Message)"
  },
  {
    "label": "ParseResaveOnDemandSystems()",
    "kind": "Method",
    "detail": "Function (TSet<FName>)",
    "insertText": "ParseResaveOnDemandSystems()"
  },
  {
    "label": "SavePackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePackages(const TArray<UPackage*>& PackagesToSave)"
  }
]