[
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "DILineInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DILineInfo"
  },
  {
    "label": "DIInliningInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DIInliningInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DILineInfoSpecifier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DILineInfoSpecifier"
  },
  {
    "label": "DIDumpType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DIDumpType"
  },
  {
    "label": "DIContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DIContext"
  },
  {
    "label": "DIContextKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DIContextKind"
  },
  {
    "label": "LoadedObjectInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LoadedObjectInfo"
  },
  {
    "label": "DILineInfo()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_DEBUGINFO_DICONTEXT_H # define LLVM_DEBUGINFO_DICONTEXT_H # include \" llvm / ADT / DenseMap . h \" # include \" llvm / ADT / SmallVector . h \" # include \" llvm / Object / ObjectFile . h \" # include \" llvm / Object / RelocVisitor . h \" # include \" llvm / Support / Casting . h \" # include \" llvm / Support / DataTypes . h \" # include<string> namespace llvm { class raw_ostream ; struct DILineInfo { std::string FileName ; std::string FunctionName ; uint32_t Line ; uint32_t Column ;)",
    "insertText": "DILineInfo() : FileName(\"<invalid>\"), FunctionName(\"<invalid>\"), Line(0), Column(0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const DILineInfo &RHS)"
  },
  {
    "label": "DIInliningInfo()",
    "kind": "Method",
    "detail": "Function (} } ; typedef SmallVector<std::pair<uint64_t,DILineInfo>,1 6> DILineInfoTable ; class DIInliningInfo { SmallVector<DILineInfo,4> Frames ; public :)",
    "insertText": "DIInliningInfo()"
  },
  {
    "label": "getFrame()",
    "kind": "Method",
    "detail": "Function (} DILineInfo)",
    "insertText": "getFrame(unsigned Index)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(Index < Frames.size())"
  },
  {
    "label": "addFrame()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "addFrame(const DILineInfo &Frame)"
  },
  {
    "label": "push_back()",
    "kind": "Method",
    "detail": "Function (Frames .)",
    "insertText": "push_back(Frame)"
  },
  {
    "label": "DILineInfoSpecifier()",
    "kind": "Method",
    "detail": "Function (} } ; enum class DINameKind { None,ShortName,LinkageName } ; struct DILineInfoSpecifier { enum class FileLineInfoKind { None,Default,AbsoluteFilePath } ; typedef DINameKind FunctionNameKind ; FileLineInfoKind FLIKind ; FunctionNameKind FNKind ;)",
    "insertText": "DILineInfoSpecifier(FileLineInfoKind FLIKind = FileLineInfoKind::Default, FunctionNameKind FNKind = FunctionNameKind::None) : FLIKind(FLIKind), FNKind(FNKind)"
  },
  {
    "label": "getKind()",
    "kind": "Method",
    "detail": "Function (} } ; enum DIDumpType { DIDT_Null,DIDT_All,DIDT_Abbrev,DIDT_AbbrevDwo,DIDT_Aranges,DIDT_Frames,DIDT_Info,DIDT_InfoDwo,DIDT_Types,DIDT_TypesDwo,DIDT_Line,DIDT_LineDwo,DIDT_Loc,DIDT_LocDwo,DIDT_Ranges,DIDT_Pubnames,DIDT_Pubtypes,DIDT_GnuPubnames,DIDT_GnuPubtypes,DIDT_Str,DIDT_StrDwo,DIDT_StrOffsetsDwo,DIDT_AppleNames,DIDT_AppleTypes,DIDT_AppleNamespaces,DIDT_AppleObjC } ; class DIContext { public : enum DIContextKind { CK_DWARF,CK_PDB } ; DIContextKind)",
    "insertText": "getKind()"
  },
  {
    "label": "DIContext()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "DIContext()"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "dump(raw_ostream &OS, DIDumpType DumpType = DIDT_All)"
  },
  {
    "label": "getLineInfoForAddress()",
    "kind": "Method",
    "detail": "Function (DILineInfo)",
    "insertText": "getLineInfoForAddress(uint64_t Address, DILineInfoSpecifier Specifier = DILineInfoSpecifier())"
  },
  {
    "label": "getLineInfoForAddressRange()",
    "kind": "Method",
    "detail": "Function (DILineInfoTable)",
    "insertText": "getLineInfoForAddressRange(uint64_t Address, uint64_t Size, DILineInfoSpecifier Specifier = DILineInfoSpecifier())"
  },
  {
    "label": "getInliningInfoForAddress()",
    "kind": "Method",
    "detail": "Function (DIInliningInfo)",
    "insertText": "getInliningInfoForAddress(uint64_t Address, DILineInfoSpecifier Specifier = DILineInfoSpecifier())"
  },
  {
    "label": "LoadedObjectInfo()",
    "kind": "Method",
    "detail": "Function (private : const DIContextKind Kind ; } ; class LoadedObjectInfo { public : ~)",
    "insertText": "LoadedObjectInfo()"
  },
  {
    "label": "getSectionLoadAddress()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getSectionLoadAddress(StringRef Name)"
  },
  {
    "label": "getLoadedSectionContents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getLoadedSectionContents(StringRef Name, StringRef &Data)"
  }
]