[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FOptionalMovieSceneBlendType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionalMovieSceneBlendType"
  },
  {
    "label": "FMovieSceneBlendTypeField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBlendTypeField"
  },
  {
    "label": "FMovieSceneBlendTypeFieldIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBlendTypeFieldIterator"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Misc / AssertionMacros . h \" # include \" Stats / Stats . h \" # include \" UObject / Class . h \" # include \" UObject / ObjectMacros . h \" # include \" MovieSceneBlendType . generated . h \")",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Invalid)",
    "insertText": "UMETA(Hidden)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FOptionalMovieSceneBlendType() : BlendType(EMovieSceneBlendType::Absolute) , bIsValid(false)"
  },
  {
    "label": "FOptionalMovieSceneBlendType()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FOptionalMovieSceneBlendType(EMovieSceneBlendType InBlendType) : BlendType(InBlendType) , bIsValid(true)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FOptionalMovieSceneBlendType&)",
    "insertText": "operator(EMovieSceneBlendType InBlendType)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bIsValid = true ; BlendType = InBlendType ; return* this ; } bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FMovieSceneBlendTypeField()",
    "kind": "Method",
    "detail": "Function (} ; struct FMovieSceneBlendTypeField {)",
    "insertText": "FMovieSceneBlendTypeField()"
  },
  {
    "label": "All()",
    "kind": "Method",
    "detail": "Function (FMovieSceneBlendTypeField)",
    "insertText": "All()"
  },
  {
    "label": "None()",
    "kind": "Method",
    "detail": "Function (FMovieSceneBlendTypeField)",
    "insertText": "None()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (template<. . . E> void)",
    "insertText": "Add(E... Types)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(BlendType)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} } template<. . . E> void)",
    "insertText": "Remove(E... Types)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(BlendType)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Add(EMovieSceneBlendType Type)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FMovieSceneBlendTypeField Field)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(EMovieSceneBlendType Type)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FMovieSceneBlendTypeField Field)"
  },
  {
    "label": "Invert()",
    "kind": "Method",
    "detail": "Function (FMovieSceneBlendTypeField)",
    "insertText": "Invert()"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Contains(EMovieSceneBlendType InBlendType)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Num()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FMovieSceneBlendTypeField& A, const FMovieSceneBlendTypeField& B)"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (} EMovieSceneBlendType BlendTypeField ; } ; struct FMovieSceneBlendTypeFieldIterator { public : FMovieSceneBlendTypeFieldIterator)",
    "insertText": "Begin(FMovieSceneBlendTypeField InField)"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (FMovieSceneBlendTypeFieldIterator)",
    "insertText": "End(FMovieSceneBlendTypeField InField)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator()"
  },
  {
    "label": "IterateToNext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateToNext()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FMovieSceneBlendTypeFieldIterator& RHS)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (private : FMovieSceneBlendTypeFieldIterator)",
    "insertText": "begin(const FMovieSceneBlendTypeField&)"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (FMovieSceneBlendTypeFieldIterator)",
    "insertText": "end(const FMovieSceneBlendTypeField&)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (} FMovieSceneBlendTypeField Field ; int8 Offset ; } ; FMovieSceneBlendTypeFieldIterator)",
    "insertText": "begin(const FMovieSceneBlendTypeField& Field)"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (FMovieSceneBlendTypeFieldIterator)",
    "insertText": "end(const FMovieSceneBlendTypeField& Field)"
  }
]