[
  {
    "label": "FDecimalNumberFormattingRules",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDecimalNumberFormattingRules"
  },
  {
    "label": "EXPORTAPI",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EXPORTAPI"
  },
  {
    "label": "FBasicMathExpressionEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBasicMathExpressionEvaluator"
  },
  {
    "label": "ParseNumberWithFallback()",
    "kind": "Method",
    "detail": "Function (TOptional<FStringToken>)",
    "insertText": "ParseNumberWithFallback(const FTokenStream& InStream, const FDecimalNumberFormattingRules& InPrimaryFormattingRules, const FDecimalNumberFormattingRules& InFallbackFormattingRules, FStringToken* Accumulate = nullptr, double* OutValue = nullptr)"
  },
  {
    "label": "ParseNumberWithRules()",
    "kind": "Method",
    "detail": "Function (TOptional<FStringToken>)",
    "insertText": "ParseNumberWithRules(const FTokenStream& InStream, const FDecimalNumberFormattingRules& InFormattingRules, FStringToken* Accumulate = nullptr, double* OutValue = nullptr)"
  },
  {
    "label": "ParseLocalizedNumberWithAgnosticFallback()",
    "kind": "Method",
    "detail": "Function (TOptional<FStringToken>)",
    "insertText": "ParseLocalizedNumberWithAgnosticFallback(const FTokenStream& InStream, FStringToken* Accumulate = nullptr, double* OutValue = nullptr)"
  },
  {
    "label": "ParseLocalizedNumber()",
    "kind": "Method",
    "detail": "Function (TOptional<FStringToken>)",
    "insertText": "ParseLocalizedNumber(const FTokenStream& InStream, FStringToken* Accumulate = nullptr, double* OutValue = nullptr)"
  },
  {
    "label": "ParseNumber()",
    "kind": "Method",
    "detail": "Function (TOptional<FStringToken>)",
    "insertText": "ParseNumber(const FTokenStream& InStream, FStringToken* Accumulate = nullptr, double* OutValue = nullptr)"
  },
  {
    "label": "ConsumeNumberWithRules()",
    "kind": "Method",
    "detail": "Function (TOptional<FExpressionError>)",
    "insertText": "ConsumeNumberWithRules(FExpressionTokenConsumer& Consumer, const FDecimalNumberFormattingRules& InFormattingRules)"
  },
  {
    "label": "ConsumeLocalizedNumberWithAgnosticFallback()",
    "kind": "Method",
    "detail": "Function (TOptional<FExpressionError>)",
    "insertText": "ConsumeLocalizedNumberWithAgnosticFallback(FExpressionTokenConsumer& Consumer)"
  },
  {
    "label": "ConsumeLocalizedNumber()",
    "kind": "Method",
    "detail": "Function (TOptional<FExpressionError>)",
    "insertText": "ConsumeLocalizedNumber(FExpressionTokenConsumer& Consumer)"
  },
  {
    "label": "ConsumeNumber()",
    "kind": "Method",
    "detail": "Function (TOptional<FExpressionError>)",
    "insertText": "ConsumeNumber(FExpressionTokenConsumer& Consumer)"
  },
  {
    "label": "FBasicMathExpressionEvaluator()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FBasicMathExpressionEvaluator()"
  }
]