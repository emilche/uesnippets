[
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FJsonValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonValue"
  },
  {
    "label": "FJsonPointer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonPointer"
  },
  {
    "label": "FJsonPointer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / StringFwd . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Dom / JsonValue . h \" # include \" HAL / Platform . h \" # include \" Templates / SharedPointer . h \" class FJsonObject ; class FJsonValue ; namespace UE::Json { class FJsonPointer { public :)",
    "insertText": "FJsonPointer()"
  },
  {
    "label": "FJsonPointer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FJsonPointer(FStringView Path)"
  },
  {
    "label": "FJsonPointer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FJsonPointer(const FJsonPointer& Other)"
  },
  {
    "label": "FJsonPointer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FJsonPointer(FJsonPointer&& Other)"
  },
  {
    "label": "TryGet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGet(const TSharedPtr<FJsonObject>& RootObject, TSharedPtr<FJsonValue>& OutValue)"
  },
  {
    "label": "TryGet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGet(const TSharedPtr<FJsonValue>& RootValue, TSharedPtr<FJsonValue>& OutValue)"
  },
  {
    "label": "TryGet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGet(const TArray<TSharedPtr<FJsonValue>>& RootValues, TSharedPtr<FJsonValue>& OutValue)"
  },
  {
    "label": "Length()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Length()"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Append(FStringView Part)"
  },
  {
    "label": "SetArrayIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetArrayIndex(int32 Index)"
  },
  {
    "label": "GetSubPath()",
    "kind": "Method",
    "detail": "Function (FJsonPointer)",
    "insertText": "GetSubPath(int32 NumParts)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString()"
  },
  {
    "label": "UnescapePart()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "UnescapePart(const FString& Part)"
  },
  {
    "label": "ParsePath()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ParsePath(const FString& InPath)"
  }
]