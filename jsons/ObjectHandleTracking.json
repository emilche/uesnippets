[
  {
    "label": "FObjectRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectRef"
  },
  {
    "label": "FObjectHandleTrackingCallbackId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectHandleTrackingCallbackId"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Delegates / Delegate . h \" # include \" UObject / ObjectHandleDefines . h \" # include \" Templates / Function . h \" # include<atomic> struct FObjectRef ; namespace UE::CoreUObject { # if UE_WITH_OBJECT_HANDLE_TRACKING using FObjectHandleReadFunc = TFunction<)",
    "insertText": "void(const TArrayView<const UObject* const>& Objects)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (using FObjectHandleClassResolvedFunc = TFunction<)",
    "insertText": "void(const FObjectRef& SourceRef, UPackage* ClassPackage, UClass* Class)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (using FObjectHandleReferenceResolvedFunc = TFunction<)",
    "insertText": "void(const FObjectRef& SourceRef, UPackage* ObjectPackage, UObject* Object)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (struct FObjectHandleTrackingCallbackId { int32 Id = - 1 ; bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "RemoveObjectHandleReadCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObjectHandleReadCallback(FObjectHandleTrackingCallbackId DelegateHandle)"
  },
  {
    "label": "AddObjectHandleClassResolvedCallback()",
    "kind": "Method",
    "detail": "Function (FObjectHandleTrackingCallbackId)",
    "insertText": "AddObjectHandleClassResolvedCallback(FObjectHandleClassResolvedFunc Callback)"
  },
  {
    "label": "RemoveObjectHandleClassResolvedCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObjectHandleClassResolvedCallback(FObjectHandleTrackingCallbackId DelegateHandle)"
  },
  {
    "label": "AddObjectHandleReferenceResolvedCallback()",
    "kind": "Method",
    "detail": "Function (FObjectHandleTrackingCallbackId)",
    "insertText": "AddObjectHandleReferenceResolvedCallback(FObjectHandleReferenceResolvedFunc Callback)"
  },
  {
    "label": "RemoveObjectHandleReferenceResolvedCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObjectHandleReferenceResolvedCallback(FObjectHandleTrackingCallbackId DelegateHandle)"
  },
  {
    "label": "AddObjectHandleReferenceLoadedCallback()",
    "kind": "Method",
    "detail": "Function (FObjectHandleTrackingCallbackId)",
    "insertText": "AddObjectHandleReferenceLoadedCallback(FObjectHandleReferenceLoadedFunc Callback)"
  },
  {
    "label": "RemoveObjectHandleReferenceLoadedCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObjectHandleReferenceLoadedCallback(FObjectHandleTrackingCallbackId DelegateHandle)"
  },
  {
    "label": "OnHandleReadInternal()",
    "kind": "Method",
    "detail": "Function (# endif } # if UE_WITH_OBJECT_HANDLE_TRACKING namespace UE::CoreUObject::Private { std::atomic<int32> HandleReadCallbackQuantity ; void)",
    "insertText": "OnHandleReadInternal(TArrayView<const UObject* const> Objects)"
  },
  {
    "label": "OnHandleReadInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHandleReadInternal(const UObject* Object)"
  },
  {
    "label": "OnHandleRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHandleRead(TArrayView<const UObject* const> Objects)"
  },
  {
    "label": "OnHandleReadInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHandleReadInternal(Objects)"
  },
  {
    "label": "OnHandleRead()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "OnHandleRead(const UObject* Object)"
  },
  {
    "label": "OnHandleReadInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHandleReadInternal(Object)"
  },
  {
    "label": "OnClassReferenceResolved()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "OnClassReferenceResolved(const FObjectRef& ObjectRef, UPackage* ClassPackage, UClass* Class)"
  },
  {
    "label": "OnReferenceResolved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReferenceResolved(const FObjectRef& ObjectRef, UPackage* ObjectPackage, UObject* Object)"
  },
  {
    "label": "OnReferenceLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReferenceLoaded(const FObjectRef& ObjectRef, UPackage* ObjectPackage, UObject* Object)"
  },
  {
    "label": "OnHandleRead()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnHandleRead(TArrayView<const UObject*> Objects)"
  },
  {
    "label": "OnClassReferenceResolved()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnClassReferenceResolved(const FObjectRef& ObjectRef, UPackage* Package, UClass* Class)"
  },
  {
    "label": "OnReferenceResolved()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnReferenceResolved(const FObjectRef& ObjectRef, UPackage* Package, UClass* Class)"
  },
  {
    "label": "OnReferenceLoaded()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnReferenceLoaded(const FObjectRef& ObjectRef, UPackage* Package, UObject* Object)"
  }
]