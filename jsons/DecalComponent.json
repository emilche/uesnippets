[
  {
    "label": "FDeferredDecalProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeferredDecalProxy"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UDecalComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDecalComponent"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / EngineTypes . h \" # include \" Components / SceneComponent . h \" # include \" PSOPrecache . h \" # include \" DecalComponent . generated . h \" class FDeferredDecalProxy ; class UMaterialInterface ;)",
    "insertText": "UCLASS(Blueprintable, editinlinenew, hidecategories=(Collision, Object, Physics, SceneComponent, Activation, \"Components|Activation\", Mobility), ClassGroup=Rendering, meta=(BlueprintSpawnableComponent), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() protected: UPROPERTY(EditAnywhere, BlueprintReadOnly, Category=Decal)"
  },
  {
    "label": "LifeSpanCallback()",
    "kind": "Method",
    "detail": "Function (protected : FTimerHandle TimerHandle_DestroyDecalComponent ; void)",
    "insertText": "LifeSpanCallback()"
  },
  {
    "label": "SetLifeSpan()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetLifeSpan(const float LifeSpan)"
  },
  {
    "label": "GetUsedMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetUsedMaterials(TArray<UMaterialInterface*>& OutMaterials, bool bGetDebugMaterials = false)"
  },
  {
    "label": "CreateSceneProxy()",
    "kind": "Method",
    "detail": "Function (FDeferredDecalProxy*)",
    "insertText": "CreateSceneProxy()"
  },
  {
    "label": "GetNumMaterials()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumMaterials()"
  },
  {
    "label": "SetMaterial()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetMaterial(int32 ElementIndex, UMaterialInterface* InMaterial)"
  },
  {
    "label": "SetDecalMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDecalMaterial(InMaterial)"
  },
  {
    "label": "OnRegister()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "OnRegister()"
  },
  {
    "label": "BeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPlay()"
  },
  {
    "label": "CreateRenderState_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRenderState_Concurrent(FRegisterComponentContext* Context)"
  },
  {
    "label": "DestroyRenderState_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRenderState_Concurrent()"
  },
  {
    "label": "SendRenderTransform_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderTransform_Concurrent()"
  },
  {
    "label": "AdditionalStatObject()",
    "kind": "Method",
    "detail": "Function (const UObject*)",
    "insertText": "AdditionalStatObject()"
  },
  {
    "label": "PrecachePSOs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrecachePSOs()"
  },
  {
    "label": "CheckForErrors()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "CheckForErrors()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "IsPostLoadThreadSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPostLoadThreadSafe()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "GetMaterialPropertyPath()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "GetMaterialPropertyPath(int32 ElementIndex, UObject*& OutOwner, FString& OutPropertyPath, FProperty*& OutProperty)"
  },
  {
    "label": "CalcBounds()",
    "kind": "Method",
    "detail": "Function (# endif FBoxSphereBounds)",
    "insertText": "CalcBounds(const FTransform& LocalToWorld)"
  },
  {
    "label": "GetTransformIncludingDecalSize()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetTransformIncludingDecalSize()"
  },
  {
    "label": "GetComponentToWorld()",
    "kind": "Method",
    "detail": "Function (FTransform Ret =)",
    "insertText": "GetComponentToWorld()"
  },
  {
    "label": "SetScale3D()",
    "kind": "Method",
    "detail": "Function (Ret .)",
    "insertText": "SetScale3D(Ret.GetScale3D() * DecalSize)"
  }
]