[
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "YYLTYPE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "YYLTYPE"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "ast_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_node"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "YYLTYPE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "YYLTYPE"
  },
  {
    "label": "YYLTYPE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "YYLTYPE"
  },
  {
    "label": "YYLTYPE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "YYLTYPE"
  },
  {
    "label": "objects",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "objects"
  },
  {
    "label": "ast_operators",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ast_operators"
  },
  {
    "label": "ast_expression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_expression"
  },
  {
    "label": "ast_operators",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ast_operators"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_operators",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ast_operators"
  },
  {
    "label": "ast_type_specifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_type_specifier"
  },
  {
    "label": "ast_expression_bin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_expression_bin"
  },
  {
    "label": "ast_function_expression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_function_expression"
  },
  {
    "label": "ast_type_specifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_type_specifier"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_initializer_list_expression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_initializer_list_expression"
  },
  {
    "label": "so",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "so"
  },
  {
    "label": "ast_compound_statement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_compound_statement"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_declaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_declaration"
  },
  {
    "label": "ast_type_qualifier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ast_type_qualifier"
  },
  {
    "label": "ast_struct_specifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_struct_specifier"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_cbuffer_declaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_cbuffer_declaration"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_type_specifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_type_specifier"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_fully_specified_type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_fully_specified_type"
  },
  {
    "label": "ast_declarator_list",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_declarator_list"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_parameter_declarator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_parameter_declarator"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_function"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ir_function_signature",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_function_signature"
  },
  {
    "label": "ast_function_definition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_function_definition"
  },
  {
    "label": "ast_expression_statement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_expression_statement"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_case_label",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_case_label"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_case_label_list",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_case_label_list"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_case_statement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_case_statement"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_case_statement_list",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_case_statement_list"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_switch_body",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_switch_body"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_selection_statement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_selection_statement"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_switch_statement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_switch_statement"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_iteration_statement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_iteration_statement"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_iteration_modes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ast_iteration_modes"
  },
  {
    "label": "ir_loop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_loop"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_jump_statement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_jump_statement"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_jump_modes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ast_jump_modes"
  },
  {
    "label": "ast_attribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_attribute"
  },
  {
    "label": "ast_attribute_arg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_attribute_arg"
  },
  {
    "label": "ast_function_definition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_function_definition"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "holding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "holding"
  },
  {
    "label": "ast_attribute_arg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_attribute_arg"
  },
  {
    "label": "holding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "holding"
  },
  {
    "label": "ast_attribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_attribute"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_expression()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_expression(int oper, ast_expression *,\n\t\tast_expression *, ast_expression *)"
  },
  {
    "label": "ast_expression_bin()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_expression_bin(int oper, ast_expression *, ast_expression *)"
  },
  {
    "label": "ast_compound_statement()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_compound_statement(int new_scope, ast_node *statements)"
  },
  {
    "label": "ast_declaration()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_declaration(const char *identifier, int is_array, ast_expression *array_size,\n\t\tast_expression *initializer)"
  },
  {
    "label": "ast_struct_specifier()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_struct_specifier(const char *identifier, ast_node *declarator_list)"
  },
  {
    "label": "ast_cbuffer_declaration()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_cbuffer_declaration(const char *identifier, ast_node *declarator_list)"
  },
  {
    "label": "ast_declarator_list()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_declarator_list(ast_fully_specified_type *)"
  },
  {
    "label": "parameters_to_hir()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "parameters_to_hir(exec_list *ast_parameters,\n\t\tbool formal, exec_list *ir_parameters, unsigned *num_params,\n\t\texec_list *ir_defaults, unsigned *num_defaults,\n\tstruct _mesa_glsl_parse_state *state)"
  },
  {
    "label": "ast_function()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_function(void)"
  },
  {
    "label": "ast_expression_statement()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_expression_statement(ast_expression *)"
  },
  {
    "label": "ast_case_label()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_case_label(ast_expression *test_value)"
  },
  {
    "label": "ast_case_label_list()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_case_label_list(void)"
  },
  {
    "label": "ast_case_statement()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_case_statement(ast_case_label_list *labels)"
  },
  {
    "label": "ast_case_statement_list()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_case_statement_list(void)"
  },
  {
    "label": "sortlabels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sortlabels()"
  },
  {
    "label": "ast_switch_body()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_switch_body(ast_case_statement_list *stmts)"
  },
  {
    "label": "ast_selection_statement()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_selection_statement(ast_expression *condition,\n\t\tast_node *then_statement,\n\t\tast_node *else_statement)"
  },
  {
    "label": "ast_switch_statement()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_switch_statement(ast_expression *test_expression,\n\t\tast_node *body)"
  },
  {
    "label": "test_to_hir()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "test_to_hir(exec_list *, struct _mesa_glsl_parse_state *)"
  },
  {
    "label": "ast_iteration_statement()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_iteration_statement(int mode, ast_node *init, ast_node *condition,\n\t\tast_expression *rest_expression, ast_node *body)"
  },
  {
    "label": "condition_to_hir()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "condition_to_hir(class ir_loop *, struct _mesa_glsl_parse_state *)"
  },
  {
    "label": "ast_jump_statement()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ast_jump_statement(int mode, ast_expression *return_value)"
  },
  {
    "label": "_mesa_ast_to_hir()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mesa_ast_to_hir(exec_list *instructions, struct _mesa_glsl_parse_state *state)"
  },
  {
    "label": "_mesa_ast_print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mesa_ast_print(struct _mesa_glsl_parse_state *state)"
  },
  {
    "label": "emit_function()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emit_function(_mesa_glsl_parse_state *state, ir_function *f)"
  }
]