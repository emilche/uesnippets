[
  {
    "label": "FD3D12VertexShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12VertexShader"
  },
  {
    "label": "FD3D12MeshShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12MeshShader"
  },
  {
    "label": "FD3D12AmplificationShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12AmplificationShader"
  },
  {
    "label": "FD3D12PixelShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12PixelShader"
  },
  {
    "label": "FD3D12GeometryShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12GeometryShader"
  },
  {
    "label": "FD3D12ComputeShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ComputeShader"
  },
  {
    "label": "FD3D12_GRAPHICS_PIPELINE_STATE_STREAM",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12_GRAPHICS_PIPELINE_STATE_STREAM"
  },
  {
    "label": "FD3D12_MESH_PIPELINE_STATE_STREAM",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12_MESH_PIPELINE_STATE_STREAM"
  },
  {
    "label": "FD3D12_COMPUTE_PIPELINE_STATE_STREAM",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12_COMPUTE_PIPELINE_STATE_STREAM"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FD3D12_GRAPHICS_PIPELINE_STATE_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12_GRAPHICS_PIPELINE_STATE_DESC"
  },
  {
    "label": "FD3D12LowLevelGraphicsPipelineStateDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12LowLevelGraphicsPipelineStateDesc"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FD3D12_COMPUTE_PIPELINE_STATE_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12_COMPUTE_PIPELINE_STATE_DESC"
  },
  {
    "label": "FD3D12ComputePipelineStateDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ComputePipelineStateDesc"
  },
  {
    "label": "equality_pipeline_state_desc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "equality_pipeline_state_desc"
  },
  {
    "label": "equality_pipeline_state_desc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "equality_pipeline_state_desc"
  },
  {
    "label": "equality_pipeline_state_desc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "equality_pipeline_state_desc"
  },
  {
    "label": "ComputePipelineCreationArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ComputePipelineCreationArgs"
  },
  {
    "label": "GraphicsPipelineCreationArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GraphicsPipelineCreationArgs"
  },
  {
    "label": "ComputePipelineCreationArgs_POD",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ComputePipelineCreationArgs_POD"
  },
  {
    "label": "GraphicsPipelineCreationArgs_POD",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GraphicsPipelineCreationArgs_POD"
  },
  {
    "label": "FD3D12PipelineStateWorker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12PipelineStateWorker"
  },
  {
    "label": "FD3D12PipelineState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12PipelineState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FD3D12PipelineStateCommonData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12PipelineStateCommonData"
  },
  {
    "label": "FD3D12GraphicsPipelineState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12GraphicsPipelineState"
  },
  {
    "label": "FD3D12ComputePipelineState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ComputePipelineState"
  },
  {
    "label": "FInitializerToGPSOMapKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitializerToGPSOMapKey"
  },
  {
    "label": "FD3D12PipelineStateCacheBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12PipelineStateCacheBase"
  },
  {
    "label": "PSO_CACHE_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PSO_CACHE_TYPE"
  },
  {
    "label": "TStateCacheKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStateCacheKeyFuncs"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "PSO_IF_NOT_EQUAL_RETURN_FALSE()",
    "kind": "Method",
    "detail": "Function (PLATFORM_WINDOWS)",
    "insertText": "PSO_IF_NOT_EQUAL_RETURN_FALSE(VSExtensions)"
  },
  {
    "label": "DoWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoWork()"
  },
  {
    "label": "FD3D12PipelineState()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FD3D12PipelineState(FD3D12Adapter* Parent)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Create(const ComputePipelineCreationArgs& InCreationArgs)"
  },
  {
    "label": "CreateAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAsync(const ComputePipelineCreationArgs& InCreationArgs)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Create(const FGraphicsPipelineStateInitializer& Initializer, FD3D12PipelineState* BasePSO)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Create(const GraphicsPipelineCreationArgs& InCreationArgs)"
  },
  {
    "label": "CreateAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAsync(const GraphicsPipelineCreationArgs& InCreationArgs)"
  },
  {
    "label": "InternalGetPipelineState()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "InternalGetPipelineState()"
  },
  {
    "label": "UsePSORefCounting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsePSORefCounting()"
  },
  {
    "label": "equal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "equal(A, B)"
  },
  {
    "label": "CleanupPipelineStateCaches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupPipelineStateCaches()"
  },
  {
    "label": "AddToLowLevelCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToLowLevelCache(const FD3D12LowLevelGraphicsPipelineStateDesc& Desc, FD3D12PipelineState** OutPipelineState, const FPostCreateGraphicCallback& PostCreateCallback)"
  },
  {
    "label": "AddToLowLevelCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToLowLevelCache(const FD3D12ComputePipelineStateDesc& Desc, FD3D12PipelineState** OutPipelineState, const FPostCreateComputeCallback& PostCreateCallback)"
  },
  {
    "label": "RemoveFromLowLevelCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromLowLevelCache(FD3D12PipelineState* PipelineState, const FGraphicsPipelineStateInitializer& PipelineStateInitializer, const FD3D12RootSignature* RootSignature)"
  },
  {
    "label": "HashPSODesc()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "HashPSODesc(const FD3D12LowLevelGraphicsPipelineStateDesc& Desc)"
  },
  {
    "label": "HashPSODesc()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "HashPSODesc(const FD3D12ComputePipelineStateDesc& Desc)"
  },
  {
    "label": "HashData()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "HashData(const void* Data, int32 NumBytes)"
  }
]