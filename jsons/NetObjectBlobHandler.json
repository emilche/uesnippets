[
  {
    "label": "FNetObjectBlob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectBlob"
  },
  {
    "label": "FHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeader"
  },
  {
    "label": "UNetObjectBlobHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetObjectBlobHandler"
  },
  {
    "label": "FNetObjectBlob()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Iris / ReplicationSystem / NetBlob / NetBlobHandler . h \" # include \" Iris / ReplicationSystem / NetBlob / RawDataNetBlob . h \" # include \" NetObjectBlobHandler . generated . h \" namespace UE::Net::Private { class FNetObjectBlob : public FRawDataNetBlob { public : struct FHeader { uint32 ObjectCount ; } ;)",
    "insertText": "FNetObjectBlob(const UE::Net::FNetBlobCreationInfo&)"
  },
  {
    "label": "SerializeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeHeader(FNetSerializationContext& Context, const FHeader& Header)"
  },
  {
    "label": "DeserializeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeserializeHeader(FNetSerializationContext& Context, FHeader& OutHeader)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ; })",
    "insertText": "UCLASS(transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UNetObjectBlobHandler()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UNetObjectBlobHandler()"
  },
  {
    "label": "CreateNetObjectBlob()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FNetObjectBlob>)",
    "insertText": "CreateNetObjectBlob(const TArrayView<const uint32> RawData, uint32 RawDataBitCount)"
  },
  {
    "label": "CreateNetBlob()",
    "kind": "Method",
    "detail": "Function (private : TRefCountPtr<FNetBlob>)",
    "insertText": "CreateNetBlob(const FNetBlobCreationInfo&)"
  },
  {
    "label": "OnNetBlobReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNetBlobReceived(UE::Net::FNetSerializationContext& Context, const TRefCountPtr<FNetBlob>&)"
  }
]