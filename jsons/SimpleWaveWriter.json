[
  {
    "label": "FSimpleWaveWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleWaveWriter"
  },
  {
    "label": "EFormatType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EFormatType"
  },
  {
    "label": "FWaveFormatEx",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWaveFormatEx"
  },
  {
    "label": "FSimpleWaveWriter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" namespace Audio { class FSimpleWaveWriter { enum EFormatType { IEEE_FLOAT = 0 x3 } ; struct FWaveFormatEx { uint16 FormatTag ; uint16 NumChannels ; uint32 NumSamplesPerSec ; uint32 AverageBytesPerSec ; uint16 BlockAlign ; uint16 NumBitsPerSample ; uint16 Size ; } ; public :)",
    "insertText": "FSimpleWaveWriter(TUniquePtr<FArchive>&& InOutputStream, int32 InSampleRate, int32 InNumChannels, bool bInUpdateHeaderAfterEveryWrite)"
  },
  {
    "label": "FSimpleWaveWriter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSimpleWaveWriter()"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write(TArrayView<const float> InBuffer)"
  },
  {
    "label": "WriteHeader()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "WriteHeader(int32 InSampleRate, int32 InNumChannels)"
  },
  {
    "label": "UpdateHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHeader()"
  }
]