[
  {
    "label": "EncodedImageDataInjector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EncodedImageDataInjector"
  },
  {
    "label": "EncodedImageExtractionResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EncodedImageExtractionResult"
  },
  {
    "label": "EncodedImageDataExtractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EncodedImageDataExtractor"
  },
  {
    "label": "EncodedImageDataPropagator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EncodedImageDataPropagator"
  },
  {
    "label": "EncodedImageDataInjector()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_PC_E2E_ANALYZER_VIDEO_ENCODED_IMAGE_DATA_INJECTOR_H_ # define TEST_PC_E2E_ANALYZER_VIDEO_ENCODED_IMAGE_DATA_INJECTOR_H_ # include<cstdint> # include<utility> # include \" absl / types / optional . h \" # include \" api / video / encoded_image . h \" namespace webrtc { namespace webrtc_pc_e2e { class EncodedImageDataInjector { public : ~)",
    "insertText": "EncodedImageDataInjector()"
  },
  {
    "label": "InjectData()",
    "kind": "Method",
    "detail": "Function (EncodedImage)",
    "insertText": "InjectData(uint16_t id, bool discard, const EncodedImage& source)"
  },
  {
    "label": "EncodedImageDataExtractor()",
    "kind": "Method",
    "detail": "Function (} ; struct EncodedImageExtractionResult { absl::optional<uint16_t> id ; EncodedImage image ; bool discard ; } ; class EncodedImageDataExtractor { public : ~)",
    "insertText": "EncodedImageDataExtractor()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(int expected_receivers_count)"
  },
  {
    "label": "AddParticipantInCall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParticipantInCall()"
  },
  {
    "label": "RemoveParticipantInCall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveParticipantInCall()"
  },
  {
    "label": "ExtractData()",
    "kind": "Method",
    "detail": "Function (EncodedImageExtractionResult)",
    "insertText": "ExtractData(const EncodedImage& source)"
  },
  {
    "label": "EncodedImageDataPropagator()",
    "kind": "Method",
    "detail": "Function (} ; class EncodedImageDataPropagator : public EncodedImageDataInjector,public EncodedImageDataExtractor { public : ~)",
    "insertText": "EncodedImageDataPropagator()"
  }
]