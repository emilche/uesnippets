[
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "UMovieSceneSubSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSubSection"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMovieSceneSegmentCompilerRules",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSegmentCompilerRules"
  },
  {
    "label": "UMovieSceneSubTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSubTrack"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Internationalization / Text . h \" # include \" Misc / FrameNumber . h \" # include \" Misc / InlineValue . h \" # include \" MovieSceneNameableTrack . h \" # include \" MovieSceneSection . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneSubTrack . generated . h \" class UMovieSceneSequence ; class UMovieSceneSubSection ; class UObject ; struct FMovieSceneSegmentCompilerRules ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: MOVIESCENE_API UMovieSceneSubTrack( const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "AddSequence()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSubSection*)",
    "insertText": "AddSequence(UMovieSceneSequence* Sequence, FFrameNumber StartTime, int32 Duration)"
  },
  {
    "label": "AddSequenceOnRow()",
    "kind": "Method",
    "detail": "Function (} UMovieSceneSubSection*)",
    "insertText": "AddSequenceOnRow(UMovieSceneSequence* Sequence, FFrameNumber StartTime, int32 Duration, int32 RowIndex)"
  },
  {
    "label": "ContainsSequence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsSequence(const UMovieSceneSequence& Sequence, bool Recursively = false, const UMovieSceneSection* SectionToSkip = nullptr)"
  },
  {
    "label": "FindAllSections()",
    "kind": "Method",
    "detail": "Function (TArray<UMovieSceneSection*,TInlineAllocator<4>>)",
    "insertText": "FindAllSections(FFrameNumber Time)"
  },
  {
    "label": "FindSection()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "FindSection(FFrameNumber Time)"
  },
  {
    "label": "FindOrExtendSection()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "FindOrExtendSection(FFrameNumber Time, float& OutWeight)"
  },
  {
    "label": "FindOrAddSection()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "FindOrAddSection(FFrameNumber Time, bool& bSectionAdded)"
  },
  {
    "label": "AddSection()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AddSection(UMovieSceneSection& Section)"
  },
  {
    "label": "SupportsType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsType(TSubclassOf<UMovieSceneSection> SectionClass)"
  },
  {
    "label": "CreateNewSection()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "CreateNewSection()"
  },
  {
    "label": "GetAllSections()",
    "kind": "Method",
    "detail": "Function (const TArray<UMovieSceneSection*>&)",
    "insertText": "GetAllSections()"
  },
  {
    "label": "HasSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSection(const UMovieSceneSection& Section)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "RemoveAllAnimationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllAnimationData()"
  },
  {
    "label": "RemoveSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSection(UMovieSceneSection& Section)"
  },
  {
    "label": "RemoveSectionAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSectionAt(int32 SectionIndex)"
  },
  {
    "label": "SupportsMultipleRows()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsMultipleRows()"
  },
  {
    "label": "GetDefaultDisplayName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA FText)",
    "insertText": "GetDefaultDisplayName()"
  },
  {
    "label": "GetSectionToKey()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "GetSectionToKey()"
  },
  {
    "label": "GetRowHeight()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA public : int32)",
    "insertText": "GetRowHeight()"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (RowHeight =)",
    "insertText": "Max(16, NewRowHeight)"
  }
]