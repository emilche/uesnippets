[
  {
    "label": "XAUDIO2FX_VOLUMEMETER_LEVELS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "XAUDIO2FX_VOLUMEMETER_LEVELS"
  },
  {
    "label": "XAUDIO2FX_REVERB_PARAMETERS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "XAUDIO2FX_REVERB_PARAMETERS"
  },
  {
    "label": "XAUDIO2FX_REVERB_I3DL2_PARAMETERS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "XAUDIO2FX_REVERB_I3DL2_PARAMETERS"
  },
  {
    "label": "DEFINE_CLSID()",
    "kind": "Method",
    "detail": "Function (# ifndef __XAUDIO2FX_INCLUDED__ # define __XAUDIO2FX_INCLUDED__ # include \" comdecl . h \")",
    "insertText": "DEFINE_CLSID(AudioVolumeMeter,cac1105f,619b,4d04,83,1a,44,e1,cb,f1,2d,57)"
  },
  {
    "label": "DEFINE_CLSID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_CLSID(AudioVolumeMeter_Debug,2d9a0f9c,e67b,4b24,ab,44,92,b3,e7,70,c0,20)"
  },
  {
    "label": "DEFINE_CLSID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_CLSID(AudioReverb,6a93130e,1d53,41d1,a9,cf,e7,58,80,0b,b1,79)"
  },
  {
    "label": "DEFINE_CLSID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_CLSID(AudioReverb_Debug,c4f82dd4,cb4e,4ce1,8b,db,ee,32,d4,19,82,69)"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# ifndef GUID_DEFS_ONLY # ifdef _XBOX # include<xobjbase . h> # else # include<objbase . h> # endif # include<math . h> # pragma)",
    "insertText": "pack(push, 1) #ifdef __cplusplus #define DEFAULT(x) =x #else #define DEFAULT(x) #endif #define XAUDIO2FX_DEBUG 1 #ifdef _XBOX STDAPI CreateAudioVolumeMeter(__deref_out IUnknown** ppApo)"
  },
  {
    "label": "CreateAudioReverb()",
    "kind": "Method",
    "detail": "Function (STDAPI)",
    "insertText": "CreateAudioReverb(__deref_out IUnknown** ppApo)"
  },
  {
    "label": "XAudio2CreateVolumeMeter()",
    "kind": "Method",
    "detail": "Function (__inline HRESULT)",
    "insertText": "XAudio2CreateVolumeMeter(__deref_out IUnknown** ppApo, UINT32 DEFAULT(0))"
  },
  {
    "label": "XAudio2CreateReverb()",
    "kind": "Method",
    "detail": "Function (} __inline HRESULT)",
    "insertText": "XAudio2CreateReverb(__deref_out IUnknown** ppApo, UINT32 DEFAULT(0))"
  },
  {
    "label": "XAudio2CreateVolumeMeter()",
    "kind": "Method",
    "detail": "Function (} # else __inline HRESULT)",
    "insertText": "XAudio2CreateVolumeMeter(__deref_out IUnknown** ppApo, UINT32 Flags DEFAULT(0))"
  },
  {
    "label": "CoCreateInstance()",
    "kind": "Method",
    "detail": "Function (# ifdef __cplusplus return)",
    "insertText": "CoCreateInstance((Flags & XAUDIO2FX_DEBUG) ? __uuidof(AudioVolumeMeter_Debug) : __uuidof(AudioVolumeMeter), NULL, CLSCTX_INPROC_SERVER, __uuidof(IUnknown), (void**)ppApo)"
  },
  {
    "label": "CoCreateInstance()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "CoCreateInstance((Flags & XAUDIO2FX_DEBUG) ? &CLSID_AudioVolumeMeter_Debug : &CLSID_AudioVolumeMeter, NULL, CLSCTX_INPROC_SERVER, &IID_IUnknown, (void**)ppApo)"
  },
  {
    "label": "XAudio2CreateReverb()",
    "kind": "Method",
    "detail": "Function (# endif } __inline HRESULT)",
    "insertText": "XAudio2CreateReverb(__deref_out IUnknown** ppApo, UINT32 Flags DEFAULT(0))"
  },
  {
    "label": "CoCreateInstance()",
    "kind": "Method",
    "detail": "Function (# ifdef __cplusplus return)",
    "insertText": "CoCreateInstance((Flags & XAUDIO2FX_DEBUG) ? __uuidof(AudioReverb_Debug) : __uuidof(AudioReverb), NULL, CLSCTX_INPROC_SERVER, __uuidof(IUnknown), (void**)ppApo)"
  },
  {
    "label": "CoCreateInstance()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "CoCreateInstance((Flags & XAUDIO2FX_DEBUG) ? &CLSID_AudioReverb_Debug : &CLSID_AudioReverb, NULL, CLSCTX_INPROC_SERVER, &IID_IUnknown, (void**)ppApo)"
  },
  {
    "label": "ReverbConvertI3DL2ToNative()",
    "kind": "Method",
    "detail": "Function (# endif } # endif typedef struct XAUDIO2FX_VOLUMEMETER_LEVELS { float* pPeakLevels ; float* pRMSLevels ; UINT32 ChannelCount ; } XAUDIO2FX_VOLUMEMETER_LEVELS ; # define XAUDIO2FX_REVERB_MIN_FRAMERATE 2 0 0 0 0 # define XAUDIO2FX_REVERB_MAX_FRAMERATE 4 8 0 0 0 typedef struct XAUDIO2FX_REVERB_PARAMETERS { float WetDryMix ; UINT32 ReflectionsDelay ; BYTE ReverbDelay ; BYTE RearDelay ; BYTE PositionLeft ; BYTE PositionRight ; BYTE PositionMatrixLeft ; BYTE PositionMatrixRight ; BYTE EarlyDiffusion ; BYTE LateDiffusion ; BYTE LowEQGain ; BYTE LowEQCutoff ; BYTE HighEQGain ; BYTE HighEQCutoff ; float RoomFilterFreq ; float RoomFilterMain ; float RoomFilterHF ; float ReflectionsGain ; float ReverbGain ; float DecayTime ; float Density ; float RoomSize ; } XAUDIO2FX_REVERB_PARAMETERS ; # define XAUDIO2FX_REVERB_MIN_WET_DRY_MIX 0 . 0 f # define XAUDIO2FX_REVERB_MIN_REFLECTIONS_DELAY 0 # define XAUDIO2FX_REVERB_MIN_REVERB_DELAY 0 # define XAUDIO2FX_REVERB_MIN_REAR_DELAY 0 # define XAUDIO2FX_REVERB_MIN_POSITION 0 # define XAUDIO2FX_REVERB_MIN_DIFFUSION 0 # define XAUDIO2FX_REVERB_MIN_LOW_EQ_GAIN 0 # define XAUDIO2FX_REVERB_MIN_LOW_EQ_CUTOFF 0 # define XAUDIO2FX_REVERB_MIN_HIGH_EQ_GAIN 0 # define XAUDIO2FX_REVERB_MIN_HIGH_EQ_CUTOFF 0 # define XAUDIO2FX_REVERB_MIN_ROOM_FILTER_FREQ 2 0 . 0 f # define XAUDIO2FX_REVERB_MIN_ROOM_FILTER_MAIN - 1 0 0 . 0 f # define XAUDIO2FX_REVERB_MIN_ROOM_FILTER_HF - 1 0 0 . 0 f # define XAUDIO2FX_REVERB_MIN_REFLECTIONS_GAIN - 1 0 0 . 0 f # define XAUDIO2FX_REVERB_MIN_REVERB_GAIN - 1 0 0 . 0 f # define XAUDIO2FX_REVERB_MIN_DECAY_TIME 0 . 1 f # define XAUDIO2FX_REVERB_MIN_DENSITY 0 . 0 f # define XAUDIO2FX_REVERB_MIN_ROOM_SIZE 0 . 0 f # define XAUDIO2FX_REVERB_MAX_WET_DRY_MIX 1 0 0 . 0 f # define XAUDIO2FX_REVERB_MAX_REFLECTIONS_DELAY 3 0 0 # define XAUDIO2FX_REVERB_MAX_REVERB_DELAY 8 5 # define XAUDIO2FX_REVERB_MAX_REAR_DELAY 5 # define XAUDIO2FX_REVERB_MAX_POSITION 3 0 # define XAUDIO2FX_REVERB_MAX_DIFFUSION 1 5 # define XAUDIO2FX_REVERB_MAX_LOW_EQ_GAIN 1 2 # define XAUDIO2FX_REVERB_MAX_LOW_EQ_CUTOFF 9 # define XAUDIO2FX_REVERB_MAX_HIGH_EQ_GAIN 8 # define XAUDIO2FX_REVERB_MAX_HIGH_EQ_CUTOFF 1 4 # define XAUDIO2FX_REVERB_MAX_ROOM_FILTER_FREQ 2 0 0 0 0 . 0 f # define XAUDIO2FX_REVERB_MAX_ROOM_FILTER_MAIN 0 . 0 f # define XAUDIO2FX_REVERB_MAX_ROOM_FILTER_HF 0 . 0 f # define XAUDIO2FX_REVERB_MAX_REFLECTIONS_GAIN 2 0 . 0 f # define XAUDIO2FX_REVERB_MAX_REVERB_GAIN 2 0 . 0 f # define XAUDIO2FX_REVERB_MAX_DENSITY 1 0 0 . 0 f # define XAUDIO2FX_REVERB_MAX_ROOM_SIZE 1 0 0 . 0 f # define XAUDIO2FX_REVERB_DEFAULT_WET_DRY_MIX 1 0 0 . 0 f # define XAUDIO2FX_REVERB_DEFAULT_REFLECTIONS_DELAY 5 # define XAUDIO2FX_REVERB_DEFAULT_REVERB_DELAY 5 # define XAUDIO2FX_REVERB_DEFAULT_REAR_DELAY 5 # define XAUDIO2FX_REVERB_DEFAULT_POSITION 6 # define XAUDIO2FX_REVERB_DEFAULT_POSITION_MATRIX 2 7 # define XAUDIO2FX_REVERB_DEFAULT_EARLY_DIFFUSION 8 # define XAUDIO2FX_REVERB_DEFAULT_LATE_DIFFUSION 8 # define XAUDIO2FX_REVERB_DEFAULT_LOW_EQ_GAIN 8 # define XAUDIO2FX_REVERB_DEFAULT_LOW_EQ_CUTOFF 4 # define XAUDIO2FX_REVERB_DEFAULT_HIGH_EQ_GAIN 8 # define XAUDIO2FX_REVERB_DEFAULT_HIGH_EQ_CUTOFF 4 # define XAUDIO2FX_REVERB_DEFAULT_ROOM_FILTER_FREQ 5 0 0 0 . 0 f # define XAUDIO2FX_REVERB_DEFAULT_ROOM_FILTER_MAIN 0 . 0 f # define XAUDIO2FX_REVERB_DEFAULT_ROOM_FILTER_HF 0 . 0 f # define XAUDIO2FX_REVERB_DEFAULT_REFLECTIONS_GAIN 0 . 0 f # define XAUDIO2FX_REVERB_DEFAULT_REVERB_GAIN 0 . 0 f # define XAUDIO2FX_REVERB_DEFAULT_DECAY_TIME 1 . 0 f # define XAUDIO2FX_REVERB_DEFAULT_DENSITY 1 0 0 . 0 f # define XAUDIO2FX_REVERB_DEFAULT_ROOM_SIZE 1 0 0 . 0 f typedef struct XAUDIO2FX_REVERB_I3DL2_PARAMETERS { float WetDryMix ; INT32 Room ; INT32 RoomHF ; float RoomRolloffFactor ; float DecayTime ; float DecayHFRatio ; INT32 Reflections ; float ReflectionsDelay ; INT32 Reverb ; float ReverbDelay ; float Diffusion ; float Density ; float HFReference ; } XAUDIO2FX_REVERB_I3DL2_PARAMETERS ; __inline void)",
    "insertText": "ReverbConvertI3DL2ToNative(__in const XAUDIO2FX_REVERB_I3DL2_PARAMETERS* pI3DL2, __out XAUDIO2FX_REVERB_PARAMETERS* pNative)"
  },
  {
    "label": "RoomFilterMain()",
    "kind": "Method",
    "detail": "Function (Room / 100.0f)",
    "insertText": "RoomFilterMain(float)"
  },
  {
    "label": "RoomFilterHF()",
    "kind": "Method",
    "detail": "Function (RoomHF / 100.0f)",
    "insertText": "RoomFilterHF(float)"
  },
  {
    "label": "index()",
    "kind": "Method",
    "detail": "Function (INT32)",
    "insertText": "index(INT32)(-4.0 * log10(pI3DL2->DecayHFRatio))"
  },
  {
    "label": "LowEQGain()",
    "kind": "Method",
    "detail": "Function (pNative ->)",
    "insertText": "LowEQGain(BYTE)((index < 0) ? index + 8 : 8)"
  },
  {
    "label": "index()",
    "kind": "Method",
    "detail": "Function (pNative -> HighEQGain = 8 ; pNative -> DecayTime = pI3DL2 -> DecayTime* pI3DL2 -> DecayHFRatio ; } else { INT32)",
    "insertText": "index(INT32)(4.0 * log10(pI3DL2->DecayHFRatio))"
  },
  {
    "label": "HighEQGain()",
    "kind": "Method",
    "detail": "Function (pNative -> LowEQGain = 8 ; pNative ->)",
    "insertText": "HighEQGain(BYTE)((index < 0) ? index + 8 : 8)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (pNative -> DecayTime = pI3DL2 -> DecayTime ; } reflectionsDelay = pI3DL2 -> ReflectionsDelay* 1 0 0 0 . 0 f ;)",
    "insertText": "if(reflectionsDelay >= XAUDIO2FX_REVERB_MAX_REFLECTIONS_DELAY)"
  },
  {
    "label": "reflectionsDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reflectionsDelay(float)(XAUDIO2FX_REVERB_MAX_REFLECTIONS_DELAY - 1)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(reflectionsDelay <= 1)"
  },
  {
    "label": "ReflectionsDelay()",
    "kind": "Method",
    "detail": "Function (reflectionsDelay = 1 ; } pNative ->)",
    "insertText": "ReflectionsDelay(UINT32)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (reverbDelay = pI3DL2 -> ReverbDelay* 1 0 0 0 . 0 f ;)",
    "insertText": "if(reverbDelay >= XAUDIO2FX_REVERB_MAX_REVERB_DELAY)"
  },
  {
    "label": "reverbDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reverbDelay(float)(XAUDIO2FX_REVERB_MAX_REVERB_DELAY - 1)"
  },
  {
    "label": "ReverbDelay()",
    "kind": "Method",
    "detail": "Function (} pNative ->)",
    "insertText": "ReverbDelay(BYTE)"
  },
  {
    "label": "EarlyDiffusion()",
    "kind": "Method",
    "detail": "Function (pNative -> ReflectionsGain = pI3DL2 -> Reflections / 1 0 0 . 0 f ; pNative -> ReverbGain = pI3DL2 -> Reverb / 1 0 0 . 0 f ; pNative ->)",
    "insertText": "EarlyDiffusion(BYTE)(15.0f * pI3DL2->Diffusion / 100.0f)"
  }
]