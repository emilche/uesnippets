[
  {
    "label": "FInstancePropertyBagStructureDataProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstancePropertyBagStructureDataProvider"
  },
  {
    "label": "TInstancedPropertyBagStructureDataProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TInstancedPropertyBagStructureDataProvider"
  },
  {
    "label": "FInstancePropertyBagStructureDataProvider()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IStructureDataProvider . h \" # include \" StructUtils / PropertyBag . h \" class FInstancePropertyBagStructureDataProvider : public IStructureDataProvider { public :)",
    "insertText": "FInstancePropertyBagStructureDataProvider(FInstancedPropertyBag& InPropertyBag) : PropertyBag(InPropertyBag)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetBaseStructure()",
    "kind": "Method",
    "detail": "Function (} ; const UStruct*)",
    "insertText": "GetBaseStructure()"
  },
  {
    "label": "GetInstances()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetInstances(TArray<TSharedPtr<FStructOnScope>>& OutInstances, const UStruct* ExpectedBaseStructure)"
  },
  {
    "label": "GetPropertyBagStruct()",
    "kind": "Method",
    "detail": "Function (const UStruct* Struct = PropertyBag .)",
    "insertText": "GetPropertyBagStruct()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutInstances .)",
    "insertText": "Add(MakeShared<FStructOnScope>(Struct, PropertyBag.GetMutableValue().GetMemory()))"
  },
  {
    "label": "TInstancedPropertyBagStructureDataProvider()",
    "kind": "Method",
    "detail": "Function (} } } protected : FInstancedPropertyBag& PropertyBag ; } ; template<BagInstanceType> class TInstancedPropertyBagStructureDataProvider : public IStructureDataProvider { public :)",
    "insertText": "TInstancedPropertyBagStructureDataProvider(const TSharedPtr<BagInstanceType>& InPropertyBag) : PropertyBagInstances( {InPropertyBag})"
  },
  {
    "label": "TInstancedPropertyBagStructureDataProvider()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TInstancedPropertyBagStructureDataProvider(const TArray<TSharedPtr<BagInstanceType>>& InPropertyBagInstances) : PropertyBagInstances(InPropertyBagInstances)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutInstances .)",
    "insertText": "Add(MakeShared<FStructOnScope>(Struct, BagInstance->GetMutableValue().GetMemory()))"
  }
]