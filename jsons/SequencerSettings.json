[
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ESequencerSpawnPosition",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESequencerSpawnPosition"
  },
  {
    "label": "ESequencerZoomPosition",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESequencerZoomPosition"
  },
  {
    "label": "ESequencerLoopMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESequencerLoopMode"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FColumnVisibilitySetting",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColumnVisibilitySetting"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Filters / SequencerFilterBarConfig . h \" # include \" Misc / SequencerThumbnailCaptureSettings . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / Package . h \" # include \" FrameNumberDisplayFormat . h \" # include \" Sidebar / SidebarState . h \" # include \" SequencerSettings . generated . h \" struct FPropertyChangedEvent ; enum class EAutoChangeMode : uint8 ; enum class EAllowEditsMode : uint8 ; enum class EKeyGroupMode : uint8 ; enum class EMovieSceneKeyInterpolation : uint8 ; namespace UE::Sequencer { enum class EViewDensity ; })",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (SSP_Origin)",
    "insertText": "UMETA(DisplayName=\"Origin\"), SSP_PlaceInFrontOfCamera UMETA(DisplayName=\"Place in Front of Camera\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (SZP_CurrentTime)",
    "insertText": "UMETA(DisplayName=\"Playhead\"), SZP_MousePosition UMETA(DisplayName=\"Mouse Position\")"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (SLM_NoLoop)",
    "insertText": "UMETA(DisplayName=\"No Looping\"), SLM_Loop UMETA(DisplayName=\"Loop\"), SLM_LoopSelectionRange UMETA(DisplayName=\"Loop Selection Range\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (UnwarpedTime = 1)",
    "insertText": "UMETA(DisplayName=\"Unwarped Time\"), WarpedTime = 2 UMETA(DisplayName=\"Warped Time\"), Both = UnwarpedTime | WarpedTime UMETA(DisplayName=\"Both\")"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(ESequencerTimeWarpDisplay) UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() template<class T> static T* GetOrCreate(const TCHAR* InName)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* SettingsContainerName =)",
    "insertText": "TEXT(\"SequencerSettingsContainer\")"
  },
  {
    "label": "USequencerSettingsContainer()",
    "kind": "Method",
    "detail": "Function (auto* Outer = FindObject<)",
    "insertText": "USequencerSettingsContainer(GetTransientPackage(), SettingsContainerName)"
  },
  {
    "label": "USequencerSettingsContainer()",
    "kind": "Method",
    "detail": "Function (Outer = NewObject<)",
    "insertText": "USequencerSettingsContainer(GetTransientPackage(), USequencerSettingsContainer::StaticClass(), SettingsContainerName)"
  },
  {
    "label": "AddToRoot()",
    "kind": "Method",
    "detail": "Function (Outer ->)",
    "insertText": "AddToRoot()"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (} T* Inst = FindObject<)",
    "insertText": "T(Outer, InName)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (Inst = NewObject<)",
    "insertText": "T(Outer, T::StaticClass(), InName)"
  },
  {
    "label": "LoadConfig()",
    "kind": "Method",
    "detail": "Function (Inst ->)",
    "insertText": "LoadConfig()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} return Inst ; } } ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(VisibleAnywhere, Category=General)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FColumnVisibilitySetting& Other)"
  },
  {
    "label": "FColumnVisibilitySetting()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FColumnVisibilitySetting() : ColumnName(NAME_None) , bIsVisible(false)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(config=EditorPerProjectUserSettings, PerObjectConfig)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_UCLASS_BODY() DECLARE_MULTICAST_DELEGATE( FOnEvaluateSubSequencesInIsolationChanged)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnShowSelectedNodesOnlyChanged)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnAllowEditsModeChanged, EAllowEditsMode)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnLoopStateChanged)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnTimeDisplayFormatChanged)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "GetAutoChangeMode()",
    "kind": "Method",
    "detail": "Function (EAutoChangeMode)",
    "insertText": "GetAutoChangeMode()"
  },
  {
    "label": "SetAutoChangeMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoChangeMode(EAutoChangeMode AutoChangeMode)"
  },
  {
    "label": "GetAllowEditsMode()",
    "kind": "Method",
    "detail": "Function (EAllowEditsMode)",
    "insertText": "GetAllowEditsMode()"
  },
  {
    "label": "SetAllowEditsMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowEditsMode(EAllowEditsMode AllowEditsMode)"
  },
  {
    "label": "GetOnAllowEditsModeChanged()",
    "kind": "Method",
    "detail": "Function (FOnAllowEditsModeChanged&)",
    "insertText": "GetOnAllowEditsModeChanged()"
  },
  {
    "label": "SetKeyGroupMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyGroupMode(EKeyGroupMode)"
  },
  {
    "label": "GetKeyInterpolation()",
    "kind": "Method",
    "detail": "Function (EMovieSceneKeyInterpolation)",
    "insertText": "GetKeyInterpolation()"
  },
  {
    "label": "SetKeyInterpolation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyInterpolation(EMovieSceneKeyInterpolation InKeyInterpolation)"
  },
  {
    "label": "GetSpawnPosition()",
    "kind": "Method",
    "detail": "Function (ESequencerSpawnPosition)",
    "insertText": "GetSpawnPosition()"
  },
  {
    "label": "SetSpawnPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSpawnPosition(ESequencerSpawnPosition InSpawnPosition)"
  },
  {
    "label": "GetCreateSpawnableCameras()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCreateSpawnableCameras()"
  },
  {
    "label": "SetCreateSpawnableCameras()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCreateSpawnableCameras(bool bInCreateSpawnableCameras)"
  },
  {
    "label": "GetShowRangeSlider()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowRangeSlider()"
  },
  {
    "label": "SetShowRangeSlider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowRangeSlider(bool InbShowRangeSlider)"
  },
  {
    "label": "GetIsSnapEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsSnapEnabled()"
  },
  {
    "label": "SetIsSnapEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsSnapEnabled(bool InbIsSnapEnabled)"
  },
  {
    "label": "GetSnapKeyTimesToInterval()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapKeyTimesToInterval()"
  },
  {
    "label": "SetSnapKeyTimesToInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapKeyTimesToInterval(bool InbSnapKeyTimesToInterval)"
  },
  {
    "label": "GetSnapKeyTimesToKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapKeyTimesToKeys()"
  },
  {
    "label": "SetSnapKeyTimesToKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapKeyTimesToKeys(bool InbSnapKeyTimesToKeys)"
  },
  {
    "label": "GetSnapSectionTimesToInterval()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapSectionTimesToInterval()"
  },
  {
    "label": "SetSnapSectionTimesToInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapSectionTimesToInterval(bool InbSnapSectionTimesToInterval)"
  },
  {
    "label": "GetSnapSectionTimesToSections()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapSectionTimesToSections()"
  },
  {
    "label": "SetSnapSectionTimesToSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapSectionTimesToSections(bool InbSnapSectionTimesToSections)"
  },
  {
    "label": "GetSnapKeysAndSectionsToPlayRange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapKeysAndSectionsToPlayRange()"
  },
  {
    "label": "SetSnapKeysAndSectionsToPlayRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapKeysAndSectionsToPlayRange(bool bInSnapKeysAndSectionsToPlayRange)"
  },
  {
    "label": "GetSnapPlayTimeToKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapPlayTimeToKeys()"
  },
  {
    "label": "SetSnapPlayTimeToKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToKeys(bool InbSnapPlayTimeToKeys)"
  },
  {
    "label": "GetSnapPlayTimeToSections()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapPlayTimeToSections()"
  },
  {
    "label": "SetSnapPlayTimeToSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToSections(bool InbSnapPlayTimeToSections)"
  },
  {
    "label": "GetSnapPlayTimeToMarkers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapPlayTimeToMarkers()"
  },
  {
    "label": "SetSnapPlayTimeToMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToMarkers(bool InbSnapPlayTimeToMarkers)"
  },
  {
    "label": "GetSnapPlayTimeToInterval()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapPlayTimeToInterval()"
  },
  {
    "label": "SetSnapPlayTimeToInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToInterval(bool InbSnapPlayTimeToInterval)"
  },
  {
    "label": "GetSnapPlayTimeToPressedKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapPlayTimeToPressedKey()"
  },
  {
    "label": "SetSnapPlayTimeToPressedKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToPressedKey(bool InbSnapPlayTimeToPressedKey)"
  },
  {
    "label": "GetSnapPlayTimeToDraggedKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapPlayTimeToDraggedKey()"
  },
  {
    "label": "SetSnapPlayTimeToDraggedKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToDraggedKey(bool InbSnapPlayTimeToDraggedKey)"
  },
  {
    "label": "GetCurveValueSnapInterval()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCurveValueSnapInterval()"
  },
  {
    "label": "SetCurveValueSnapInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurveValueSnapInterval(float InCurveValueSnapInterval)"
  },
  {
    "label": "GetGridSpacing()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetGridSpacing()"
  },
  {
    "label": "SetGridSpacing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGridSpacing(TOptional<float> InGridSpacing)"
  },
  {
    "label": "GetSnapCurveValueToInterval()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapCurveValueToInterval()"
  },
  {
    "label": "SetSnapCurveValueToInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapCurveValueToInterval(bool InbSnapCurveValueToInterval)"
  },
  {
    "label": "GetShowSelectedNodesOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowSelectedNodesOnly()"
  },
  {
    "label": "SetShowSelectedNodesOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowSelectedNodesOnly(bool Visible)"
  },
  {
    "label": "GetOnShowSelectedNodesOnlyChanged()",
    "kind": "Method",
    "detail": "Function (FOnShowSelectedNodesOnlyChanged&)",
    "insertText": "GetOnShowSelectedNodesOnlyChanged()"
  },
  {
    "label": "SetLeftMouseDragDoesMarque()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLeftMouseDragDoesMarque(bool bDoMarque)"
  },
  {
    "label": "GetZoomPosition()",
    "kind": "Method",
    "detail": "Function (ESequencerZoomPosition)",
    "insertText": "GetZoomPosition()"
  },
  {
    "label": "SetZoomPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZoomPosition(ESequencerZoomPosition InZoomPosition)"
  },
  {
    "label": "GetAutoScrollEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAutoScrollEnabled()"
  },
  {
    "label": "SetAutoScrollEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoScrollEnabled(bool bInAutoScrollEnabled)"
  },
  {
    "label": "GetLinkCurveEditorTimeRange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLinkCurveEditorTimeRange()"
  },
  {
    "label": "SetLinkCurveEditorTimeRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinkCurveEditorTimeRange(bool InbLinkCurveEditorTimeRange)"
  },
  {
    "label": "ShouldSyncCurveEditorSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldSyncCurveEditorSelection()"
  },
  {
    "label": "ShouldIsolateToCurveEditorSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldIsolateToCurveEditorSelection()"
  },
  {
    "label": "GetCurveEditorVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCurveEditorVisible()"
  },
  {
    "label": "GetLoopMode()",
    "kind": "Method",
    "detail": "Function (ESequencerLoopMode)",
    "insertText": "GetLoopMode()"
  },
  {
    "label": "SetLoopMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLoopMode(ESequencerLoopMode InLoopMode)"
  },
  {
    "label": "ShouldResetPlayheadWhenNavigating()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldResetPlayheadWhenNavigating()"
  },
  {
    "label": "SetResetPlayheadWhenNavigating()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResetPlayheadWhenNavigating(bool bInResetPlayheadWhenNavigating)"
  },
  {
    "label": "ShouldKeepCursorInPlayRangeWhileScrubbing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldKeepCursorInPlayRangeWhileScrubbing()"
  },
  {
    "label": "SetKeepCursorInPlayRangeWhileScrubbing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepCursorInPlayRangeWhileScrubbing(bool bInKeepCursorInPlayRangeWhileScrubbing)"
  },
  {
    "label": "ShouldKeepPlayRangeInSectionBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldKeepPlayRangeInSectionBounds()"
  },
  {
    "label": "SetKeepPlayRangeInSectionBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepPlayRangeInSectionBounds(bool bInKeepPlayRangeInSectionBounds)"
  },
  {
    "label": "GetZeroPadFrames()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "GetZeroPadFrames()"
  },
  {
    "label": "SetZeroPadFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZeroPadFrames(uint8 InZeroPadFrames)"
  },
  {
    "label": "GetJumpFrameIncrement()",
    "kind": "Method",
    "detail": "Function (FFrameNumber)",
    "insertText": "GetJumpFrameIncrement()"
  },
  {
    "label": "SetJumpFrameIncrement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetJumpFrameIncrement(FFrameNumber InJumpFrameIncrement)"
  },
  {
    "label": "GetTimeWarpDisplayMode()",
    "kind": "Method",
    "detail": "Function (ESequencerTimeWarpDisplay)",
    "insertText": "GetTimeWarpDisplayMode()"
  },
  {
    "label": "SetTimeWarpDisplayMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeWarpDisplayMode(ESequencerTimeWarpDisplay InTimeWarpDisplay)"
  },
  {
    "label": "GetShowLayerBars()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowLayerBars()"
  },
  {
    "label": "SetShowLayerBars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowLayerBars(bool bInShowLayerBars)"
  },
  {
    "label": "GetShowKeyBars()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowKeyBars()"
  },
  {
    "label": "SetShowKeyBars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowKeyBars(bool bInShowKeyBars)"
  },
  {
    "label": "GetInfiniteKeyAreas()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInfiniteKeyAreas()"
  },
  {
    "label": "SetInfiniteKeyAreas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInfiniteKeyAreas(bool bInInfiniteKeyAreas)"
  },
  {
    "label": "GetShowChannelColors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowChannelColors()"
  },
  {
    "label": "SetShowChannelColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowChannelColors(bool bInShowChannelColors)"
  },
  {
    "label": "GetShowInfoButton()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowInfoButton()"
  },
  {
    "label": "SetShowInfoButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowInfoButton(bool bInShowInfoButton)"
  },
  {
    "label": "GetShowTickLines()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowTickLines()"
  },
  {
    "label": "SetShowTickLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowTickLines(bool bInDrawTickLines)"
  },
  {
    "label": "GetShowSequencerToolbar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowSequencerToolbar()"
  },
  {
    "label": "SetShowSequencerToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowSequencerToolbar(bool bInDrawTickLines)"
  },
  {
    "label": "GetShowMarkedFrames()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowMarkedFrames()"
  },
  {
    "label": "SetShowMarkedFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowMarkedFrames(bool bShowMarkedFrames)"
  },
  {
    "label": "HasKeyAreaCurveExtents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasKeyAreaCurveExtents(const FString& ChannelName)"
  },
  {
    "label": "RemoveKeyAreaCurveExtents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveKeyAreaCurveExtents(const FString& ChannelName)"
  },
  {
    "label": "GetKeyAreaCurveExtents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKeyAreaCurveExtents(const FString& ChannelName, double& InMin, double& InMax)"
  },
  {
    "label": "SetKeyAreaCurveExtents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyAreaCurveExtents(const FString& ChannelName, double InMin, double InMax)"
  },
  {
    "label": "GetKeyAreaHeightWithCurves()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetKeyAreaHeightWithCurves()"
  },
  {
    "label": "SetKeyAreaHeightWithCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyAreaHeightWithCurves(float InKeyAreaHeightWithCurves)"
  },
  {
    "label": "GetReduceKeysTolerance()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetReduceKeysTolerance()"
  },
  {
    "label": "SetReduceKeysTolerance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReduceKeysTolerance(float InReduceKeysTolerance)"
  },
  {
    "label": "GetDeleteKeysWhenTrimming()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDeleteKeysWhenTrimming()"
  },
  {
    "label": "SetDeleteKeysWhenTrimming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDeleteKeysWhenTrimming(bool bInDeleteKeysWhenTrimming)"
  },
  {
    "label": "GetDisableSectionsAfterBaking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDisableSectionsAfterBaking()"
  },
  {
    "label": "SetDisableSectionsAfterBaking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisableSectionsAfterBaking(bool bInDisableSectionsAfterBaking)"
  },
  {
    "label": "GetMarkedFrameColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetMarkedFrameColor()"
  },
  {
    "label": "SetMarkedFrameColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMarkedFrameColor(const FLinearColor& InColor)"
  },
  {
    "label": "GetSectionColorTints()",
    "kind": "Method",
    "detail": "Function (TArray<FColor>)",
    "insertText": "GetSectionColorTints()"
  },
  {
    "label": "SetSectionColorTints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSectionColorTints(const TArray<FColor>& InSectionColorTints)"
  },
  {
    "label": "GetCleanPlaybackMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCleanPlaybackMode()"
  },
  {
    "label": "SetCleanPlaybackMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCleanPlaybackMode(bool bInCleanPlaybackMode)"
  },
  {
    "label": "ShouldActivateRealtimeViewports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldActivateRealtimeViewports()"
  },
  {
    "label": "SetActivateRealtimeViewports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActivateRealtimeViewports(bool bInActivateRealtimeViewports)"
  },
  {
    "label": "GetAutoSetTrackDefaults()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAutoSetTrackDefaults()"
  },
  {
    "label": "SetAutoSetTrackDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoSetTrackDefaults(bool bInAutoSetTrackDefaults)"
  },
  {
    "label": "ShouldShowDebugVisualization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowDebugVisualization()"
  },
  {
    "label": "SetShowDebugVisualization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowDebugVisualization(bool bInShowDebugVisualization)"
  },
  {
    "label": "ShouldEvaluateSubSequencesInIsolation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldEvaluateSubSequencesInIsolation()"
  },
  {
    "label": "SetEvaluateSubSequencesInIsolation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEvaluateSubSequencesInIsolation(bool bInEvaluateSubSequencesInIsolation)"
  },
  {
    "label": "GetOnEvaluateSubSequencesInIsolationChanged()",
    "kind": "Method",
    "detail": "Function (FOnEvaluateSubSequencesInIsolationChanged&)",
    "insertText": "GetOnEvaluateSubSequencesInIsolationChanged()"
  },
  {
    "label": "SetRerunConstructionScripts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRerunConstructionScripts(bool bInRerunConstructionScripts)"
  },
  {
    "label": "SnapTimeToInterval()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "SnapTimeToInterval(float InTimeValue)"
  },
  {
    "label": "ShouldShowPrePostRoll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowPrePostRoll()"
  },
  {
    "label": "SetShouldShowPrePostRoll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldShowPrePostRoll(bool bInVisualizePreAndPostRoll)"
  },
  {
    "label": "ShouldCompileDirectorOnEvaluate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompileDirectorOnEvaluate()"
  },
  {
    "label": "SetCompileDirectorOnEvaluate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompileDirectorOnEvaluate(bool bInCompileDirectorOnEvaluate)"
  },
  {
    "label": "GetTrajectoryPathCap()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTrajectoryPathCap()"
  },
  {
    "label": "GetOnTimeDisplayFormatChanged()",
    "kind": "Method",
    "detail": "Function (FOnTimeDisplayFormatChanged&)",
    "insertText": "GetOnTimeDisplayFormatChanged()"
  },
  {
    "label": "GetTimeDisplayFormat()",
    "kind": "Method",
    "detail": "Function (EFrameNumberDisplayFormats)",
    "insertText": "GetTimeDisplayFormat()"
  },
  {
    "label": "GetMovieRendererName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetMovieRendererName()"
  },
  {
    "label": "GetAutoExpandNodesOnSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAutoExpandNodesOnSelection()"
  },
  {
    "label": "GetRestoreOriginalViewportOnCameraCutUnlock()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRestoreOriginalViewportOnCameraCutUnlock()"
  },
  {
    "label": "GetTreeViewWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTreeViewWidth()"
  },
  {
    "label": "GetViewDensity()",
    "kind": "Method",
    "detail": "Function (UE::Sequencer::EViewDensity)",
    "insertText": "GetViewDensity()"
  },
  {
    "label": "SetViewDensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewDensity(FName InViewDensity)"
  },
  {
    "label": "GetAssetBrowserWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAssetBrowserWidth()"
  },
  {
    "label": "GetAssetBrowserHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAssetBrowserHeight()"
  },
  {
    "label": "IsTrackFilterEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTrackFilterEnabled(const FString& TrackFilter)"
  },
  {
    "label": "SetTrackFilterEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTrackFilterEnabled(const FString& TrackFilter, bool bEnabled)"
  },
  {
    "label": "GetOutlinerColumnSettings()",
    "kind": "Method",
    "detail": "Function (TArray<FColumnVisibilitySetting>)",
    "insertText": "GetOutlinerColumnSettings()"
  },
  {
    "label": "GetSidebarState()",
    "kind": "Method",
    "detail": "Function (FSidebarState&)",
    "insertText": "GetSidebarState()"
  },
  {
    "label": "SetSidebarState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSidebarState(const FSidebarState& InSidebarState)"
  },
  {
    "label": "FindOrAddTrackFilterBar()",
    "kind": "Method",
    "detail": "Function (FSequencerFilterBarConfig&)",
    "insertText": "FindOrAddTrackFilterBar(const FName InIdentifier, const bool bInSaveConfig)"
  },
  {
    "label": "FindTrackFilterBar()",
    "kind": "Method",
    "detail": "Function (FSequencerFilterBarConfig*)",
    "insertText": "FindTrackFilterBar(const FName InIdentifier)"
  },
  {
    "label": "RemoveTrackFilterBar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveTrackFilterBar(const FName InIdentifier)"
  },
  {
    "label": "GetIncludePinnedInFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIncludePinnedInFilter()"
  },
  {
    "label": "SetIncludePinnedInFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIncludePinnedInFilter(const bool bInIncludePinned)"
  },
  {
    "label": "GetAutoExpandNodesOnFilterPass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAutoExpandNodesOnFilterPass()"
  },
  {
    "label": "SetAutoExpandNodesOnFilterPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoExpandNodesOnFilterPass(const bool bInIncludePinned)"
  },
  {
    "label": "GetUseFilterSubmenusForCategories()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseFilterSubmenusForCategories()"
  },
  {
    "label": "SetUseFilterSubmenusForCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseFilterSubmenusForCategories(const bool bInUseFilterSubmenusForCategories)"
  },
  {
    "label": "IsFilterBarVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFilterBarVisible()"
  },
  {
    "label": "SetFilterBarVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterBarVisible(const bool bInVisible)"
  },
  {
    "label": "GetFilterBarLayout()",
    "kind": "Method",
    "detail": "Function (EFilterBarLayout)",
    "insertText": "GetFilterBarLayout()"
  },
  {
    "label": "SetFilterBarLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterBarLayout(const EFilterBarLayout InLayout)"
  },
  {
    "label": "GetLastFilterBarSizeCoefficient()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetLastFilterBarSizeCoefficient()"
  },
  {
    "label": "SetLastFilterBarSizeCoefficient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastFilterBarSizeCoefficient(const float bInSizeCoefficient)"
  },
  {
    "label": "GetThumbnailCaptureSettings()",
    "kind": "Method",
    "detail": "Function (const FSequencerThumbnailCaptureSettings&)",
    "insertText": "GetThumbnailCaptureSettings()"
  }
]