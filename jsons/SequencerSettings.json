[
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ESequencerSpawnPosition",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESequencerSpawnPosition"
  },
  {
    "label": "ESequencerZoomPosition",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESequencerZoomPosition"
  },
  {
    "label": "ESequencerLoopMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESequencerLoopMode"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FColumnVisibilitySetting",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColumnVisibilitySetting"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "SetAutoChangeMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoChangeMode(EAutoChangeMode AutoChangeMode)"
  },
  {
    "label": "SetAllowEditsMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowEditsMode(EAllowEditsMode AllowEditsMode)"
  },
  {
    "label": "SetKeyGroupMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyGroupMode(EKeyGroupMode)"
  },
  {
    "label": "SetKeyInterpolation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyInterpolation(EMovieSceneKeyInterpolation InKeyInterpolation)"
  },
  {
    "label": "SetSpawnPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSpawnPosition(ESequencerSpawnPosition InSpawnPosition)"
  },
  {
    "label": "SetCreateSpawnableCameras()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCreateSpawnableCameras(bool bInCreateSpawnableCameras)"
  },
  {
    "label": "SetShowRangeSlider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowRangeSlider(bool InbShowRangeSlider)"
  },
  {
    "label": "SetIsSnapEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsSnapEnabled(bool InbIsSnapEnabled)"
  },
  {
    "label": "SetSnapKeyTimesToInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapKeyTimesToInterval(bool InbSnapKeyTimesToInterval)"
  },
  {
    "label": "SetSnapKeyTimesToKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapKeyTimesToKeys(bool InbSnapKeyTimesToKeys)"
  },
  {
    "label": "SetSnapSectionTimesToInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapSectionTimesToInterval(bool InbSnapSectionTimesToInterval)"
  },
  {
    "label": "SetSnapSectionTimesToSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapSectionTimesToSections( bool InbSnapSectionTimesToSections )"
  },
  {
    "label": "SetSnapKeysAndSectionsToPlayRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapKeysAndSectionsToPlayRange(bool bInSnapKeysAndSectionsToPlayRange)"
  },
  {
    "label": "SetSnapPlayTimeToKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToKeys(bool InbSnapPlayTimeToKeys)"
  },
  {
    "label": "SetSnapPlayTimeToSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToSections(bool InbSnapPlayTimeToSections)"
  },
  {
    "label": "SetSnapPlayTimeToMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToMarkers(bool InbSnapPlayTimeToMarkers)"
  },
  {
    "label": "SetSnapPlayTimeToInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToInterval(bool InbSnapPlayTimeToInterval)"
  },
  {
    "label": "SetSnapPlayTimeToPressedKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToPressedKey(bool InbSnapPlayTimeToPressedKey)"
  },
  {
    "label": "SetSnapPlayTimeToDraggedKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapPlayTimeToDraggedKey(bool InbSnapPlayTimeToDraggedKey)"
  },
  {
    "label": "SetCurveValueSnapInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurveValueSnapInterval(float InCurveValueSnapInterval)"
  },
  {
    "label": "SetGridSpacing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGridSpacing(TOptional<float> InGridSpacing)"
  },
  {
    "label": "SetSnapCurveValueToInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapCurveValueToInterval(bool InbSnapCurveValueToInterval)"
  },
  {
    "label": "SetShowSelectedNodesOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowSelectedNodesOnly(bool Visible)"
  },
  {
    "label": "SetLeftMouseDragDoesMarque()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLeftMouseDragDoesMarque(bool bDoMarque)"
  },
  {
    "label": "SetZoomPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZoomPosition(ESequencerZoomPosition InZoomPosition)"
  },
  {
    "label": "SetAutoScrollEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoScrollEnabled(bool bInAutoScrollEnabled)"
  },
  {
    "label": "SetLinkCurveEditorTimeRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinkCurveEditorTimeRange(bool InbLinkCurveEditorTimeRange)"
  },
  {
    "label": "SyncCurveEditorSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncCurveEditorSelection(bool bInSynchronizeCurveEditorSelection)"
  },
  {
    "label": "IsolateCurveEditorToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IsolateCurveEditorToSelection(bool bInIsolateCurveEditorToSelection)"
  },
  {
    "label": "SetCurveEditorVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurveEditorVisible(bool bCurveEditorVisible)"
  },
  {
    "label": "SetLoopMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLoopMode(ESequencerLoopMode InLoopMode)"
  },
  {
    "label": "SetResetPlayheadWhenNavigating()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResetPlayheadWhenNavigating(bool bInResetPlayheadWhenNavigating)"
  },
  {
    "label": "SetKeepCursorInPlayRangeWhileScrubbing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepCursorInPlayRangeWhileScrubbing(bool bInKeepCursorInPlayRangeWhileScrubbing)"
  },
  {
    "label": "SetKeepPlayRangeInSectionBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepPlayRangeInSectionBounds(bool bInKeepPlayRangeInSectionBounds)"
  },
  {
    "label": "SetZeroPadFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZeroPadFrames(uint8 InZeroPadFrames)"
  },
  {
    "label": "SetJumpFrameIncrement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetJumpFrameIncrement(FFrameNumber InJumpFrameIncrement)"
  },
  {
    "label": "SetTimeWarpDisplayMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeWarpDisplayMode(ESequencerTimeWarpDisplay InTimeWarpDisplay)"
  },
  {
    "label": "SetShowLayerBars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowLayerBars(bool bInShowLayerBars)"
  },
  {
    "label": "SetShowKeyBars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowKeyBars(bool bInShowKeyBars)"
  },
  {
    "label": "SetInfiniteKeyAreas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInfiniteKeyAreas(bool bInInfiniteKeyAreas)"
  },
  {
    "label": "SetShowChannelColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowChannelColors(bool bInShowChannelColors)"
  },
  {
    "label": "SetShowInfoButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowInfoButton(bool bInShowInfoButton)"
  },
  {
    "label": "SetShowTickLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowTickLines(bool bInDrawTickLines)"
  },
  {
    "label": "SetShowSequencerToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowSequencerToolbar(bool bInDrawTickLines)"
  },
  {
    "label": "SetShowMarkedFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowMarkedFrames(bool bShowMarkedFrames)"
  },
  {
    "label": "RemoveKeyAreaCurveExtents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveKeyAreaCurveExtents(const FString& ChannelName)"
  },
  {
    "label": "SetKeyAreaCurveExtents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyAreaCurveExtents(const FString& ChannelName, double InMin, double InMax)"
  },
  {
    "label": "SetKeyAreaHeightWithCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyAreaHeightWithCurves(float InKeyAreaHeightWithCurves)"
  },
  {
    "label": "SetReduceKeysTolerance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReduceKeysTolerance(float InReduceKeysTolerance)"
  },
  {
    "label": "SetDeleteKeysWhenTrimming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDeleteKeysWhenTrimming(bool bInDeleteKeysWhenTrimming)"
  },
  {
    "label": "SetDisableSectionsAfterBaking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisableSectionsAfterBaking(bool bInDisableSectionsAfterBaking)"
  },
  {
    "label": "SetMarkedFrameColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMarkedFrameColor(const FLinearColor& InColor)"
  },
  {
    "label": "SetSectionColorTints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSectionColorTints(const TArray<FColor>& InSectionColorTints)"
  },
  {
    "label": "SetCleanPlaybackMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCleanPlaybackMode(bool bInCleanPlaybackMode)"
  },
  {
    "label": "SetActivateRealtimeViewports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActivateRealtimeViewports(bool bInActivateRealtimeViewports)"
  },
  {
    "label": "SetAutoSetTrackDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoSetTrackDefaults(bool bInAutoSetTrackDefaults)"
  },
  {
    "label": "SetShowDebugVisualization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowDebugVisualization(bool bInShowDebugVisualization)"
  },
  {
    "label": "SetEvaluateSubSequencesInIsolation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEvaluateSubSequencesInIsolation(bool bInEvaluateSubSequencesInIsolation)"
  },
  {
    "label": "SetRerunConstructionScripts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRerunConstructionScripts(bool bInRerunConstructionScripts)"
  },
  {
    "label": "SetShouldShowPrePostRoll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldShowPrePostRoll(bool bInVisualizePreAndPostRoll)"
  },
  {
    "label": "SetCompileDirectorOnEvaluate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompileDirectorOnEvaluate(bool bInCompileDirectorOnEvaluate)"
  },
  {
    "label": "SetTimeDisplayFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeDisplayFormat(EFrameNumberDisplayFormats InFormat)"
  },
  {
    "label": "SetMovieRendererName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMovieRendererName(const FString& InMovieRendererName)"
  },
  {
    "label": "SetAutoExpandNodesOnSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoExpandNodesOnSelection(bool bInAutoExpandNodesOnSelection)"
  },
  {
    "label": "SetRestoreOriginalViewportOnCameraCutUnlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRestoreOriginalViewportOnCameraCutUnlock(bool bInRestoreOriginalViewportOnCameraCutUnlock)"
  },
  {
    "label": "SetTreeViewWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTreeViewWidth(float InTreeViewWidth)"
  },
  {
    "label": "SetViewDensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewDensity(FName InViewDensity)"
  },
  {
    "label": "SetAssetBrowserWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAssetBrowserWidth(float InAssetBrowserWidth)"
  },
  {
    "label": "SetAssetBrowserHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAssetBrowserHeight(float InAssetBrowserHeight)"
  },
  {
    "label": "SetTrackFilterEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTrackFilterEnabled(const FString& TrackFilter, bool bEnabled)"
  },
  {
    "label": "SetOutlinerColumnVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOutlinerColumnVisibility(const TArray<FColumnVisibilitySetting>& InColumnVisibilitySettings)"
  },
  {
    "label": "SetSidebarState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSidebarState(const FSidebarState& InSidebarState)"
  },
  {
    "label": "RemoveTrackFilterBar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveTrackFilterBar(const FName InIdentifier)"
  },
  {
    "label": "SetIncludePinnedInFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIncludePinnedInFilter(const bool bInIncludePinned)"
  },
  {
    "label": "SetAutoExpandNodesOnFilterPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoExpandNodesOnFilterPass(const bool bInIncludePinned)"
  },
  {
    "label": "SetUseFilterSubmenusForCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseFilterSubmenusForCategories(const bool bInUseFilterSubmenusForCategories)"
  },
  {
    "label": "SetFilterBarVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterBarVisible(const bool bInVisible)"
  },
  {
    "label": "SetFilterBarLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterBarLayout(const EFilterBarLayout InLayout)"
  },
  {
    "label": "SetLastFilterBarSizeCoefficient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastFilterBarSizeCoefficient(const float bInSizeCoefficient)"
  },
  {
    "label": "SetThumbnailCaptureSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThumbnailCaptureSettings(const FSequencerThumbnailCaptureSettings& InNewValue)"
  },
  {
    "label": "ShouldShowThumbnailCaptureSettings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowThumbnailCaptureSettings()"
  }
]