[
  {
    "label": "FSidebarDrawer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSidebarDrawer"
  },
  {
    "label": "ISidebarDrawerContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISidebarDrawerContent"
  },
  {
    "label": "SSidebarDrawer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSidebarDrawer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSplitterStyle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSplitterStyle"
  },
  {
    "label": "SSidebarDrawer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSidebarDrawer"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<FSidebarDrawer>& InDrawer, const ESidebarTabLocation InTabLocation)"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Open(const bool bInAnimateOpen = true)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close(const bool bInAnimateOpen = true)"
  },
  {
    "label": "SetCurrentSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentSize(const float InSize)"
  },
  {
    "label": "UpdateAnimation()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "UpdateAnimation(const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "OnGlobalFocusChanging()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGlobalFocusChanging(const FFocusEvent& InFocusEvent\n\t\t, const FWeakWidgetPath& InOldFocusedWidgetPath, const TSharedPtr<SWidget>& InOldFocusedWidget\n\t\t, const FWidgetPath& InNewFocusedWidgetPath, const TSharedPtr<SWidget>& InNewFocusedWidget)"
  }
]