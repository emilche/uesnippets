[
  {
    "label": "FWaveTableOsc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWaveTableOsc"
  },
  {
    "label": "FSineWaveTableOsc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSineWaveTableOsc"
  },
  {
    "label": "FSineWaveTableOsc()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" namespace Audio { class FWaveTableOsc ; class FSineWaveTableOsc { public :)",
    "insertText": "FSineWaveTableOsc()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const float InSampleRate, const float InFrequencyHz, const float InPhase)"
  },
  {
    "label": "SetSampleRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSampleRate(const float InSampleRate)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetFrequencyHz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrequencyHz(const float InFrequencyHz)"
  },
  {
    "label": "GetFrequencyHz()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetFrequencyHz()"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Generate(float* OutBuffer, const int32 NumSamples)"
  },
  {
    "label": "GetWaveTable()",
    "kind": "Method",
    "detail": "Function (const TArray<float>&)",
    "insertText": "GetWaveTable()"
  },
  {
    "label": "UpdatePhaseIncrement()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdatePhaseIncrement()"
  }
]