[
  {
    "label": "FPointerTableBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPointerTableBase"
  },
  {
    "label": "FRHICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandList"
  },
  {
    "label": "FResolveRect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResolveRect"
  },
  {
    "label": "FDummyResolveParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDummyResolveParameter"
  },
  {
    "label": "FResolveDepthPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepthPS"
  },
  {
    "label": "FResolveDepth2XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepth2XPS"
  },
  {
    "label": "FResolveDepth4XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepth4XPS"
  },
  {
    "label": "FResolveDepth8XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepth8XPS"
  },
  {
    "label": "FResolveDepthArray2XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepthArray2XPS"
  },
  {
    "label": "FResolveDepthArray4XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepthArray4XPS"
  },
  {
    "label": "FResolveDepthArray8XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepthArray8XPS"
  },
  {
    "label": "FResolveSingleSamplePS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveSingleSamplePS"
  },
  {
    "label": "FResolveVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveVS"
  },
  {
    "label": "FResolveArrayVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveArrayVS"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(FRHIBatchedShaderParameters& BatchedParameters, FParameter)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCache(EShaderPlatform Platform)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(FRHIBatchedShaderParameters& BatchedParameters, uint32 SingleSampleIndexValue)"
  },
  {
    "label": "FResolveVS()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FResolveVS()"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(FRHIBatchedShaderParameters& BatchedParameters, const FResolveRect& SrcBounds, const FResolveRect& DstBounds, uint32 DstSurfaceWidth, uint32 DstSurfaceHeight)"
  },
  {
    "label": "FResolveArrayVS()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FResolveArrayVS()"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  }
]