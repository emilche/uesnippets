[
  {
    "label": "FPointerTableBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPointerTableBase"
  },
  {
    "label": "FRHICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandList"
  },
  {
    "label": "FResolveRect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResolveRect"
  },
  {
    "label": "FDummyResolveParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDummyResolveParameter"
  },
  {
    "label": "FResolveDepthPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepthPS"
  },
  {
    "label": "FResolveDepth2XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepth2XPS"
  },
  {
    "label": "FResolveDepth4XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepth4XPS"
  },
  {
    "label": "FResolveDepth8XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepth8XPS"
  },
  {
    "label": "FResolveDepthArray2XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepthArray2XPS"
  },
  {
    "label": "FResolveDepthArray4XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepthArray4XPS"
  },
  {
    "label": "FResolveDepthArray8XPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveDepthArray8XPS"
  },
  {
    "label": "FResolveSingleSamplePS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveSingleSamplePS"
  },
  {
    "label": "FResolveVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveVS"
  },
  {
    "label": "FResolveArrayVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveArrayVS"
  },
  {
    "label": "DECLARE_EXPORTED_GLOBAL_SHADER()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GlobalShader . h \" # include \" HAL / Platform . h \" # include \" RHIDefinitions . h \" # include \" Serialization / MemoryLayout . h \" # include \" Shader . h \" # include \" ShaderCore . h \" # include \" ShaderParameters . h \" class FPointerTableBase ; class FRHICommandList ; struct FResolveRect ; struct FDummyResolveParameter { } ; class FResolveDepthPS : public FGlobalShader {)",
    "insertText": "DECLARE_EXPORTED_GLOBAL_SHADER(FResolveDepthPS, RENDERCORE_API)"
  },
  {
    "label": "FResolveDepthPS()",
    "kind": "Method",
    "detail": "Function (public : typedef FDummyResolveParameter FParameter ;)",
    "insertText": "FResolveDepthPS()"
  },
  {
    "label": "FResolveDepthPS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveDepthPS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(FRHIBatchedShaderParameters& BatchedParameters, FParameter)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(FShaderResourceParameter, UnresolvedSurface)"
  },
  {
    "label": "DECLARE_EXPORTED_GLOBAL_SHADER()",
    "kind": "Method",
    "detail": "Function (} ; class FResolveDepth2XPS : public FResolveDepthPS {)",
    "insertText": "DECLARE_EXPORTED_GLOBAL_SHADER(FResolveDepth2XPS, RENDERCORE_API)"
  },
  {
    "label": "FResolveDepth2XPS()",
    "kind": "Method",
    "detail": "Function (public : typedef FDummyResolveParameter FParameter ;)",
    "insertText": "FResolveDepth2XPS()"
  },
  {
    "label": "FResolveDepth2XPS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveDepth2XPS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  },
  {
    "label": "FResolveDepth4XPS()",
    "kind": "Method",
    "detail": "Function (public : typedef FDummyResolveParameter FParameter ;)",
    "insertText": "FResolveDepth4XPS()"
  },
  {
    "label": "FResolveDepth4XPS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveDepth4XPS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  },
  {
    "label": "FResolveDepth8XPS()",
    "kind": "Method",
    "detail": "Function (public : typedef FDummyResolveParameter FParameter ;)",
    "insertText": "FResolveDepth8XPS()"
  },
  {
    "label": "FResolveDepth8XPS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveDepth8XPS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  },
  {
    "label": "ShouldCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCache(EShaderPlatform Platform)"
  },
  {
    "label": "FResolveDepthArray2XPS()",
    "kind": "Method",
    "detail": "Function (public : typedef FDummyResolveParameter FParameter ;)",
    "insertText": "FResolveDepthArray2XPS()"
  },
  {
    "label": "FResolveDepthArray2XPS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveDepthArray2XPS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  },
  {
    "label": "DECLARE_EXPORTED_GLOBAL_SHADER()",
    "kind": "Method",
    "detail": "Function (} ; class FResolveDepthArray4XPS : public FResolveDepthPS {)",
    "insertText": "DECLARE_EXPORTED_GLOBAL_SHADER(FResolveDepthArray4XPS, RENDERCORE_API)"
  },
  {
    "label": "FResolveDepthArray4XPS()",
    "kind": "Method",
    "detail": "Function (public : typedef FDummyResolveParameter FParameter ;)",
    "insertText": "FResolveDepthArray4XPS()"
  },
  {
    "label": "FResolveDepthArray4XPS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveDepthArray4XPS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  },
  {
    "label": "DECLARE_EXPORTED_GLOBAL_SHADER()",
    "kind": "Method",
    "detail": "Function (} ; class FResolveDepthArray8XPS : public FResolveDepthPS {)",
    "insertText": "DECLARE_EXPORTED_GLOBAL_SHADER(FResolveDepthArray8XPS, RENDERCORE_API)"
  },
  {
    "label": "FResolveDepthArray8XPS()",
    "kind": "Method",
    "detail": "Function (public : typedef FDummyResolveParameter FParameter ;)",
    "insertText": "FResolveDepthArray8XPS()"
  },
  {
    "label": "FResolveDepthArray8XPS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveDepthArray8XPS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  },
  {
    "label": "DECLARE_EXPORTED_GLOBAL_SHADER()",
    "kind": "Method",
    "detail": "Function (} ; class FResolveSingleSamplePS : public FGlobalShader {)",
    "insertText": "DECLARE_EXPORTED_GLOBAL_SHADER(FResolveSingleSamplePS, RENDERCORE_API)"
  },
  {
    "label": "FResolveSingleSamplePS()",
    "kind": "Method",
    "detail": "Function (public : typedef uint32 FParameter ;)",
    "insertText": "FResolveSingleSamplePS()"
  },
  {
    "label": "FResolveSingleSamplePS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveSingleSamplePS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(FRHIBatchedShaderParameters& BatchedParameters, uint32 SingleSampleIndexValue)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(FShaderParameter, SingleSampleIndex)"
  },
  {
    "label": "DECLARE_EXPORTED_GLOBAL_SHADER()",
    "kind": "Method",
    "detail": "Function (} ; class FResolveVS : public FGlobalShader {)",
    "insertText": "DECLARE_EXPORTED_GLOBAL_SHADER(FResolveVS, RENDERCORE_API)"
  },
  {
    "label": "FResolveVS()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FResolveVS()"
  },
  {
    "label": "FResolveVS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveVS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(FRHIBatchedShaderParameters& BatchedParameters, const FResolveRect& SrcBounds, const FResolveRect& DstBounds, uint32 DstSurfaceWidth, uint32 DstSurfaceHeight)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(FShaderParameter, PositionMinMax)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(FShaderParameter, UVMinMax)"
  },
  {
    "label": "DECLARE_EXPORTED_GLOBAL_SHADER()",
    "kind": "Method",
    "detail": "Function (} ; class FResolveArrayVS : public FResolveVS {)",
    "insertText": "DECLARE_EXPORTED_GLOBAL_SHADER(FResolveArrayVS, RENDERCORE_API)"
  },
  {
    "label": "FResolveArrayVS()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FResolveArrayVS()"
  },
  {
    "label": "FResolveArrayVS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveArrayVS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  }
]