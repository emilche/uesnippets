[
  {
    "label": "CandidatePitchPeriods",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CandidatePitchPeriods"
  },
  {
    "label": "PitchInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PitchInfo"
  },
  {
    "label": "Decimate2x()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_PITCH_SEARCH_INTERNAL_H_ # define MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_PITCH_SEARCH_INTERNAL_H_ # include<stddef . h> # include<array> # include<utility> # include \" api / array_view . h \" # include \" modules / audio_processing / agc2 / cpu_features . h \" # include \" modules / audio_processing / agc2 / rnn_vad / common . h \" namespace webrtc { namespace rnn_vad { void)",
    "insertText": "Decimate2x(rtc::ArrayView<const float, kBufSize24kHz> src, rtc::ArrayView<float, kBufSize12kHz> dst)"
  },
  {
    "label": "ComputeSlidingFrameSquareEnergies24kHz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeSlidingFrameSquareEnergies24kHz(rtc::ArrayView<const float, kBufSize24kHz> pitch_buffer, rtc::ArrayView<float, kRefineNumLags24kHz> y_energy, AvailableCpuFeatures cpu_features)"
  },
  {
    "label": "ComputePitchPeriod12kHz()",
    "kind": "Method",
    "detail": "Function (struct CandidatePitchPeriods { int best ; int second_best ; } ; CandidatePitchPeriods)",
    "insertText": "ComputePitchPeriod12kHz(rtc::ArrayView<const float, kBufSize12kHz> pitch_buffer, rtc::ArrayView<const float, kNumLags12kHz> auto_correlation, AvailableCpuFeatures cpu_features)"
  },
  {
    "label": "ComputePitchPeriod48kHz()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ComputePitchPeriod48kHz(rtc::ArrayView<const float, kBufSize24kHz> pitch_buffer, rtc::ArrayView<const float, kRefineNumLags24kHz> y_energy, CandidatePitchPeriods pitch_candidates_24kHz, AvailableCpuFeatures cpu_features)"
  },
  {
    "label": "ComputeExtendedPitchPeriod48kHz()",
    "kind": "Method",
    "detail": "Function (struct PitchInfo { int period ; float strength ; } ; PitchInfo)",
    "insertText": "ComputeExtendedPitchPeriod48kHz(rtc::ArrayView<const float, kBufSize24kHz> pitch_buffer, rtc::ArrayView<const float, kRefineNumLags24kHz> y_energy, int initial_pitch_period_48kHz, PitchInfo last_pitch_48kHz, AvailableCpuFeatures cpu_features)"
  }
]