[
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FArchiveCookContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FArchiveCookContext"
  },
  {
    "label": "FArchiveCookData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FArchiveCookData"
  },
  {
    "label": "FArchiveCookData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" class ITargetPlatform ; struct FArchiveCookContext ; struct FArchiveCookData { const ITargetPlatform& TargetPlatform ; FArchiveCookContext& CookContext ;)",
    "insertText": "FArchiveCookData(const ITargetPlatform& InTargetPlatform, FArchiveCookContext& InCookContext) : TargetPlatform(InTargetPlatform), CookContext(InCookContext)"
  }
]