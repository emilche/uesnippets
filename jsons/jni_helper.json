[
  {
    "label": "String",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "String"
  },
  {
    "label": "takes",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "takes"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "LocalObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LocalObject"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "with"
  },
  {
    "label": "from",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "from"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(JNIEnv* env, jobject ctx)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "DetachThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachThread()"
  },
  {
    "label": "AppContextGlobalRef()",
    "kind": "Method",
    "detail": "Function (jobject)",
    "insertText": "AppContextGlobalRef()"
  },
  {
    "label": "FindClass()",
    "kind": "Method",
    "detail": "Function (jclass)",
    "insertText": "FindClass(const char* class_name)"
  },
  {
    "label": "NewObjectV()",
    "kind": "Method",
    "detail": "Function (LocalObject)",
    "insertText": "NewObjectV(const char* cclz, const char* ctorSig, va_list argptr)"
  },
  {
    "label": "NewObject()",
    "kind": "Method",
    "detail": "Function (LocalObject)",
    "insertText": "NewObject(const char* cclz, const char* ctorSig, ...)"
  },
  {
    "label": "GetExceptionMessage()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetExceptionMessage()"
  },
  {
    "label": "RemoveSensitiveInfoFromExceptionMessage()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "RemoveSensitiveInfoFromExceptionMessage(\n    const std::string& exception_message)"
  },
  {
    "label": "CheckForException()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForException(std::string& msg)"
  },
  {
    "label": "GetByteArrayBytesAndDeleteRef()",
    "kind": "Method",
    "detail": "Function (char>)",
    "insertText": "GetByteArrayBytesAndDeleteRef(jbyteArray jbs)"
  },
  {
    "label": "GetStaticStringField()",
    "kind": "Method",
    "detail": "Function (jni::String)",
    "insertText": "GetStaticStringField(const char* class_name,\n                                 const char* field_name)"
  },
  {
    "label": "DumpLocalRefTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpLocalRefTable()"
  }
]