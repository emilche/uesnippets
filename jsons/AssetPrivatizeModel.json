[
  {
    "label": "FPendingPrivateAsset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingPrivateAsset"
  },
  {
    "label": "FAssetPrivatizeModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetPrivatizeModel"
  },
  {
    "label": "EState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EState"
  },
  {
    "label": "FPendingPrivateAsset()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPendingPrivateAsset(UObject* InObject, UPackage* InOwningPackage = nullptr)"
  },
  {
    "label": "IsReferenceIllegal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReferenceIllegal(const FName& InReference)"
  },
  {
    "label": "CheckForIllegalReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForIllegalReferences()"
  },
  {
    "label": "FAssetPrivatizeModel()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "FAssetPrivatizeModel(const TArray<UObject*>& InObjectsToPrivatize)"
  },
  {
    "label": "AddObjectToPrivatize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectToPrivatize(UObject* InObject, UPackage* InOwningPackage)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const float InDeltaTime)"
  },
  {
    "label": "CanPrivatize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPrivatize()"
  },
  {
    "label": "DoPrivatize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoPrivatize()"
  },
  {
    "label": "CanForcePrivatize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanForcePrivatize()"
  },
  {
    "label": "DoForcePrivatize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoForcePrivatize()"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState(EState NewState)"
  },
  {
    "label": "ScanForReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScanForReferences()"
  }
]