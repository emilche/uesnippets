[
  {
    "label": "FPendingPrivateAsset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingPrivateAsset"
  },
  {
    "label": "FAssetPrivatizeModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetPrivatizeModel"
  },
  {
    "label": "EState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EState"
  },
  {
    "label": "FPendingPrivateAsset()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" struct FPendingPrivateAsset : TSharedFromThis<FPendingPrivateAsset> { public :)",
    "insertText": "FPendingPrivateAsset(UObject* InObject, UPackage* InOwningPackage = nullptr)"
  },
  {
    "label": "IsReferenceIllegal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReferenceIllegal(const FName& InReference)"
  },
  {
    "label": "CheckForIllegalReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForIllegalReferences()"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObject()"
  },
  {
    "label": "AddObjectToPrivatize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectToPrivatize(UObject* InObject, UPackage* InOwningPackage)"
  },
  {
    "label": "GetPendingPrivateAssets()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FPendingPrivateAsset>>*)",
    "insertText": "GetPendingPrivateAssets()"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (EState)",
    "insertText": "GetState()"
  },
  {
    "label": "GetProgressText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetProgressText()"
  },
  {
    "label": "IsAnythingReferencedInMemoryByNonUndo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnythingReferencedInMemoryByNonUndo()"
  },
  {
    "label": "DoPrivatize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoPrivatize()"
  },
  {
    "label": "CanForcePrivatize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanForcePrivatize()"
  },
  {
    "label": "DoForcePrivatize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoForcePrivatize()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(FAssetPrivatizeModel, FOnStateChanged, EState)"
  },
  {
    "label": "OnStateChanged()",
    "kind": "Method",
    "detail": "Function (FOnStateChanged&)",
    "insertText": "OnStateChanged()"
  },
  {
    "label": "ScanForReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScanForReferences()"
  }
]