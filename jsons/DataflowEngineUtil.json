[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FindObjectPtrProperty()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Dataflow / DataflowEngineTypes . h \" # include \" Math / Transform . h \" # include \" ReferenceSkeleton . h \" # include \" Templates / Casts . h \" # include \" UObject / Class . h \" # include \" UObject / Field . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / UnrealType . h \" # include \" UObject / UnrealTypePrivate . h \" namespace UE::Dataflow { namespace Reflection { template<class T> const T*)",
    "insertText": "FindObjectPtrProperty(const UObject* Owner, FName Name)"
  },
  {
    "label": "FindOverrideProperty()",
    "kind": "Method",
    "detail": "Function (} } } } } return nullptr ; } template<class T> const T)",
    "insertText": "FindOverrideProperty(const UObject* Owner, FName PropertyName, FName ArrayKey, const T& Default = T())"
  }
]