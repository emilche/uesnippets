[
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "IPersonaViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaViewport"
  },
  {
    "label": "ISkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTree"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "FToolMenuContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuContext"
  },
  {
    "label": "FSkeletonEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonEditor"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "IAnimationSequenceBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimationSequenceBrowser"
  },
  {
    "label": "FSkeletonEditor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" Toolkits / IToolkitHost . h \" # include \" TickableEditorObject . h \" # include \" EditorUndoClient . h \" # include \" IDetailsView . h \" # include \" ISkeletonEditor . h \" # include \" Containers / ArrayView . h \" # include \" IAnimationSequenceBrowser . h \" class IDetailLayoutBuilder ; class IPersonaToolkit ; class IPersonaViewport ; class ISkeletonTree ; class USkeleton ; class ISkeletonTreeItem ; struct FToolMenuContext ; namespace SkeletonEditorModes { const FName SkeletonEditorMode ; } namespace SkeletonEditorTabs { const FName DetailsTab ; const FName SkeletonTreeTab ; const FName ViewportTab ; const FName AssetBrowserTab ; const FName AnimNotifiesTab ; const FName CurveMetadataTab ; const FName CurveDebuggerTab ; const FName AdvancedPreviewTab ; const FName RetargetManagerTab ; const FName SlotNamesTab ; const FName FindReplaceTab ; } class FSkeletonEditor : public ISkeletonEditor,public FEditorUndoClient,public FTickableEditorObject { public :)",
    "insertText": "FSkeletonEditor()"
  },
  {
    "label": "InitSkeletonEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSkeletonEditor(const EToolkitMode::Type Mode, const TSharedPtr<class IToolkitHost>& InitToolkitHost, class USkeleton* InSkeleton)"
  },
  {
    "label": "GetPersonaToolkit()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IPersonaToolkit>)",
    "insertText": "GetPersonaToolkit()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "InitToolMenuContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitToolMenuContext(FToolMenuContext& MenuContext)"
  },
  {
    "label": "GetAssetBrowser()",
    "kind": "Method",
    "detail": "Function (IAnimationSequenceBrowser*)",
    "insertText": "GetAssetBrowser()"
  },
  {
    "label": "HandleOpenNewAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOpenNewAsset(UObject* InNewAsset)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "GetTickableTickType()",
    "kind": "Method",
    "detail": "Function (ETickableTickType)",
    "insertText": "GetTickableTickType()"
  },
  {
    "label": "GetSkeletonTree()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<class ISkeletonTree>)",
    "insertText": "GetSkeletonTree()"
  },
  {
    "label": "HandleGetAsset()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "HandleGetAsset()"
  },
  {
    "label": "HandleObjectsSelected()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "HandleObjectsSelected(const TArray<UObject*>& InObjects)"
  },
  {
    "label": "HandleObjectSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleObjectSelected(UObject* InObject)"
  },
  {
    "label": "HandleSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSelectionChanged(const TArrayView<TSharedPtr<ISkeletonTreeItem>>& InSelectedItems, ESelectInfo::Type InSelectInfo)"
  },
  {
    "label": "HandleDetailsCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDetailsCreated(const TSharedRef<class IDetailsView>& InDetailsView)"
  },
  {
    "label": "HandleAnimationSequenceBrowserCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAnimationSequenceBrowserCreated(const TSharedRef<class IAnimationSequenceBrowser>& InSequenceBrowser)"
  },
  {
    "label": "ExtendMenu()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ExtendMenu()"
  },
  {
    "label": "ExtendToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendToolbar()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "CanRemoveBones()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRemoveBones()"
  },
  {
    "label": "RemoveUnusedBones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUnusedBones()"
  },
  {
    "label": "TestSkeletonCurveMetaDataForUse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestSkeletonCurveMetaDataForUse()"
  },
  {
    "label": "UpdateSkeletonRefPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSkeletonRefPose()"
  },
  {
    "label": "OnAnimNotifyWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnimNotifyWindow()"
  },
  {
    "label": "OnRetargetManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRetargetManager()"
  },
  {
    "label": "OnImportAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnImportAsset()"
  },
  {
    "label": "HandleOnPreviewSceneSettingsCustomized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnPreviewSceneSettingsCustomized(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "GetSkeletonEditor()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSkeletonEditor>)",
    "insertText": "GetSkeletonEditor(const FToolMenuContext& InMenuContext)"
  }
]