[
  {
    "label": "HalfLut",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HalfLut"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "RgbaLut",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RgbaLut"
  },
  {
    "label": "roundNBit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "roundNBit"
  },
  {
    "label": "HalfLut()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMF_LUT_H # define INCLUDED_IMF_LUT_H # include \" ImfExport . h \" # include \" ImfNamespace . h \" # include \" ImfRgbaFile . h \" # include<ImathBox . h> # include<halfFunction . h> OPENEXR_IMF_INTERNAL_NAMESPACE_HEADER_ENTER class HalfLut { public : template<class Function>)",
    "insertText": "HalfLut(Function f)"
  },
  {
    "label": "apply()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "apply(half* data, int nData, int stride = 1)"
  },
  {
    "label": "apply()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "apply(const Slice& data, const IMATH_NAMESPACE::Box2i& dataWindow)"
  },
  {
    "label": "RgbaLut()",
    "kind": "Method",
    "detail": "Function (private : halfFunction<half> _lut ; } ; class RgbaLut { public : template<class Function>)",
    "insertText": "RgbaLut(Function f, RgbaChannels chn = WRITE_RGB)"
  },
  {
    "label": "apply()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "apply(Rgba* data, int nData, int stride = 1)"
  },
  {
    "label": "apply()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "apply(Rgba* base, int xStride, int yStride, const IMATH_NAMESPACE::Box2i& dataWindow)"
  },
  {
    "label": "round12log()",
    "kind": "Method",
    "detail": "Function (private : halfFunction<half> _lut ; RgbaChannels _chn ; } ; IMF_EXPORT half)",
    "insertText": "round12log(half x)"
  },
  {
    "label": "roundNBit()",
    "kind": "Method",
    "detail": "Function (struct roundNBit {)",
    "insertText": "roundNBit(int n) : n (n)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} half)",
    "insertText": "operator() (half x)"
  },
  {
    "label": "HalfLut()",
    "kind": "Method",
    "detail": "Function (} int n ; } ; template<class Function>)",
    "insertText": "HalfLut(Function f) : _lut ( f, -HALF_MAX, HALF_MAX, half (0), half::posInf (), half::negInf (), half::qNan ())"
  },
  {
    "label": "RgbaLut()",
    "kind": "Method",
    "detail": "Function (} template<class Function>)",
    "insertText": "RgbaLut(Function f, RgbaChannels chn) : _lut ( f, -HALF_MAX, HALF_MAX, half (0), half::posInf (), half::negInf (), half::qNan ()) , _chn (chn)"
  }
]