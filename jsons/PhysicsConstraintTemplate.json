[
  {
    "label": "FPhysicsConstraintProfileHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPhysicsConstraintProfileHandle"
  },
  {
    "label": "UPhysicsConstraintTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsConstraintTemplate"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "ELinearConstraintMotion",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELinearConstraintMotion"
  },
  {
    "label": "EAngularConstraintMotion",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAngularConstraintMotion"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" PhysicsEngine / ConstraintInstance . h \" # include \" PhysicsConstraintTemplate . generated . h \")",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(hidecategories=Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=Joint, meta=(ShowOnlyInnerProperties))"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "ContainsConstraintProfile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsConstraintProfile(FName ProfileName)"
  },
  {
    "label": "FindByPredicate()",
    "kind": "Method",
    "detail": "Function (const FPhysicsConstraintProfileHandle* FoundHandle = ProfileHandles .)",
    "insertText": "FindByPredicate([ProfileName](const FPhysicsConstraintProfileHandle& ProfileHandle) { return ProfileHandle.ProfileName == ProfileName; })"
  },
  {
    "label": "AddDefaulted_GetRef()",
    "kind": "Method",
    "detail": "Function (FPhysicsConstraintProfileHandle& NewHandle = ProfileHandles .)",
    "insertText": "AddDefaulted_GetRef()"
  },
  {
    "label": "RemoveConstraintProfile()",
    "kind": "Method",
    "detail": "Function (NewHandle . ProfileName = ProfileName ; NewHandle . ProfileProperties = DefaultInstance . ProfileInstance ; } void)",
    "insertText": "RemoveConstraintProfile(FName ProfileName)"
  },
  {
    "label": "RemoveAtSwap()",
    "kind": "Method",
    "detail": "Function (ProfileHandles .)",
    "insertText": "RemoveAtSwap(HandleIdx)"
  },
  {
    "label": "ApplyConstraintProfile()",
    "kind": "Method",
    "detail": "Function (} } } # endif void)",
    "insertText": "ApplyConstraintProfile(FName ProfileName, FConstraintInstance& CI, bool bDefaultIfNotFound)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bool bFound = false ;)",
    "insertText": "if(ProfileName == NAME_None)"
  },
  {
    "label": "CopyProfilePropertiesFrom()",
    "kind": "Method",
    "detail": "Function (CI .)",
    "insertText": "CopyProfilePropertiesFrom(DefaultProfile)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (bFound = true ; } else {)",
    "insertText": "for(const FPhysicsConstraintProfileHandle& Handle : ProfileHandles)"
  },
  {
    "label": "CopyProfilePropertiesFrom()",
    "kind": "Method",
    "detail": "Function (CI .)",
    "insertText": "CopyProfilePropertiesFrom(Handle.ProfileProperties)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bFound = true ; break ; } } })",
    "insertText": "if(!bFound && bDefaultIfNotFound)"
  },
  {
    "label": "GetConstraintProfilePropertiesOrDefault()",
    "kind": "Method",
    "detail": "Function (} } const FConstraintProfileProperties&)",
    "insertText": "GetConstraintProfilePropertiesOrDefault(FName ProfileName)"
  },
  {
    "label": "PostEditChangeChainProperty()",
    "kind": "Method",
    "detail": "Function (DefaultProfile = CI . ProfileInstance ; } void)",
    "insertText": "PostEditChangeChainProperty(FPropertyChangedChainEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "UpdateProfileInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateProfileInstance()"
  },
  {
    "label": "GetCurrentConstraintProfileName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetCurrentConstraintProfileName()"
  },
  {
    "label": "UpdateConstraintProfiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateConstraintProfiles(const TArray<FName>& Profiles)"
  },
  {
    "label": "DuplicateConstraintProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateConstraintProfile(FName DuplicateFromName, FName DuplicateToName)"
  },
  {
    "label": "RenameConstraintProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameConstraintProfile(FName CurrentName, FName NewName)"
  },
  {
    "label": "CopySetupPropsToInstance()",
    "kind": "Method",
    "detail": "Function (# endif private : void)",
    "insertText": "CopySetupPropsToInstance(FConstraintInstance* Instance)"
  }
]