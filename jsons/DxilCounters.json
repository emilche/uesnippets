[
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "DxilCounters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilCounters"
  },
  {
    "label": "AllArrayBytes()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<stdint . h> namespace llvm { class Module ; class StringRef ; } namespace hlsl { struct DxilCounters { uint32_t array_local_bytes = 0 ; uint32_t array_local_ldst = 0 ; uint32_t array_static_bytes = 0 ; uint32_t array_static_ldst = 0 ; uint32_t array_tgsm_bytes = 0 ; uint32_t array_tgsm_ldst = 0 ; uint32_t atomic = 0 ; uint32_t barrier = 0 ; uint32_t branches = 0 ; uint32_t fence = 0 ; uint32_t floats = 0 ; uint32_t gs_cut = 0 ; uint32_t gs_emit = 0 ; uint32_t insts = 0 ; uint32_t ints = 0 ; uint32_t sig_ld = 0 ; uint32_t sig_st = 0 ; uint32_t tex_bias = 0 ; uint32_t tex_cmp = 0 ; uint32_t tex_grad = 0 ; uint32_t tex_load = 0 ; uint32_t tex_norm = 0 ; uint32_t tex_store = 0 ; uint32_t uints = 0 ; uint32_t)",
    "insertText": "AllArrayBytes()"
  },
  {
    "label": "LookupByName()",
    "kind": "Method",
    "detail": "Function (uint32_t*)",
    "insertText": "LookupByName(llvm::StringRef name, DxilCounters &counters)"
  }
]