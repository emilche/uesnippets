[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FGenericDataDrivenShaderPlatformInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericDataDrivenShaderPlatformInfo"
  },
  {
    "label": "SetDefaultValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultValues()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "GetShaderPlatformFromName()",
    "kind": "Method",
    "detail": "Function (EShaderPlatform)",
    "insertText": "GetShaderPlatformFromName(const FName ShaderPlatformName)"
  },
  {
    "label": "ERHIFeatureSupport()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ERHIFeatureSupport(Infos[Platform].SupportsMultiViewport)"
  },
  {
    "label": "ERHIFeatureSupport()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ERHIFeatureSupport(Infos[Platform].bSupportsWaveOperations)"
  },
  {
    "label": "ERHIFeatureSupport()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ERHIFeatureSupport(Infos[Platform].bSupportsVertexShaderUAVs)"
  },
  {
    "label": "ERHIFeatureSupport()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ERHIFeatureSupport(Infos[Platform].bSupportsRealTypes)"
  },
  {
    "label": "ERHIFeatureSupport()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ERHIFeatureSupport(Infos[Platform].SupportsBarycentricsSemantic)"
  },
  {
    "label": "UpdatePreviewPlatforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePreviewPlatforms()"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFriendlyName(const FStaticShaderPlatform Platform)"
  },
  {
    "label": "GetPreviewShaderPlatformParent()",
    "kind": "Method",
    "detail": "Function (EShaderPlatform)",
    "insertText": "GetPreviewShaderPlatformParent(const FStaticShaderPlatform Platform)"
  },
  {
    "label": "ParseDataDrivenShaderInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseDataDrivenShaderInfo(const FConfigSection& Section, uint32 Index)"
  },
  {
    "label": "IsMetalPlatform()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsMetalPlatform(Platform)"
  }
]