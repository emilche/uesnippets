[
  {
    "label": "FDelayedDrag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDelayedDrag"
  },
  {
    "label": "FDelayedDrag()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" InputCoreTypes . h \" # include \" Framework / Application / SlateApplication . h \" class FDelayedDrag { public :)",
    "insertText": "FDelayedDrag(FVector2D InInitialPosition, FKey InEffectiveKey) : InitialPosition(InInitialPosition), bHasInitiatedDrag(false), DistanceDragged(0), EffectiveKey(InEffectiveKey)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TriggerDistance =)",
    "insertText": "Get().GetDragTriggerDistance()"
  },
  {
    "label": "GetInitialPosition()",
    "kind": "Method",
    "detail": "Function (} const FVector2D&)",
    "insertText": "GetInitialPosition()"
  },
  {
    "label": "AttemptDragStart()",
    "kind": "Method",
    "detail": "Function (bHasInitiatedDrag = true ; } bool)",
    "insertText": "AttemptDragStart(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetCursorDelta()",
    "kind": "Method",
    "detail": "Function (DistanceDragged + = MouseEvent .)",
    "insertText": "GetCursorDelta().Size()"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (TriggerDistance =)",
    "insertText": "Max(FSlateApplication::Get().GetDragTriggerDistance() * InTriggerScaleFactor, 1.f)"
  }
]