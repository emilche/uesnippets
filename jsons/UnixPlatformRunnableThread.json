[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FRunnableThreadUnix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRunnableThreadUnix"
  },
  {
    "label": "EConstants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EConstants"
  },
  {
    "label": "AllocCrashHandlerStack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" HAL / PThreadRunnableThread . h \" # include<signal . h> class Error ; class FRunnableThreadUnix : public FRunnableThreadPThread { struct EConstants { enum { UnixThreadNameLimit = 1 5,CrashHandlerStackSize = SIGSTKSZ + 1 9 2* 1 0 2 4,CrashHandlerStackSizeMin = SIGSTKSZ + 8* 1 0 2 4 } ; } ; void* ThreadCrashHandlingStack ; void* StackGuardPageAddress ; int BaselineNiceValue ; bool bGotBaselineNiceValue ; public : void* MainThreadSignalHandlerStack ; void*)",
    "insertText": "AllocCrashHandlerStack()"
  },
  {
    "label": "FreeCrashHandlerStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeCrashHandlerStack(void *StackBuffer)"
  },
  {
    "label": "GetCrashHandlerStackSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetCrashHandlerStackSize()"
  },
  {
    "label": "FRunnableThreadUnix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRunnableThreadUnix() : FRunnableThreadPThread() , ThreadCrashHandlingStack(nullptr) , StackGuardPageAddress(nullptr) , BaselineNiceValue(0) , bGotBaselineNiceValue(false)"
  },
  {
    "label": "FRunnableThreadUnix()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FRunnableThreadUnix()"
  },
  {
    "label": "FRunnableThreadPThread_DestructorBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRunnableThreadPThread_DestructorBody()"
  },
  {
    "label": "SetupSignalHandlerStack()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetupSignalHandlerStack(void* StackBuffer, const size_t StackBufferSize, void** OutStackGuardPageAddress)"
  },
  {
    "label": "TranslateThreadPriority()",
    "kind": "Method",
    "detail": "Function (protected : int32)",
    "insertText": "TranslateThreadPriority(EThreadPriority Priority)"
  },
  {
    "label": "SetThreadPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThreadPriority(EThreadPriority NewPriority)"
  },
  {
    "label": "SetThreadPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThreadPriority(pthread_t InThread, EThreadPriority NewPriority)"
  },
  {
    "label": "PreRun()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "PreRun()"
  },
  {
    "label": "PostRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRun()"
  },
  {
    "label": "AdjustStackSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AdjustStackSize(uint32 InStackSize)"
  }
]