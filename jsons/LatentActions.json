[
  {
    "label": "FLatentResponse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLatentResponse"
  },
  {
    "label": "FExecutionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExecutionInfo"
  },
  {
    "label": "FLatentActionManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLatentActionManager"
  },
  {
    "label": "FPendingLatentAction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPendingLatentAction"
  },
  {
    "label": "FExecutionInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / WeakObjectPtr . h \" struct FLatentResponse { private : struct FExecutionInfo { public : FName ExecutionFunction ; int32 LinkID ; FWeakObjectPtr CallbackTarget ;)",
    "insertText": "FExecutionInfo(FName InExecutionFunction, int32 InLinkID, FWeakObjectPtr InCallbackTarget) : ExecutionFunction(InExecutionFunction) , LinkID(InLinkID) , CallbackTarget(InCallbackTarget)"
  },
  {
    "label": "FExecutionInfo()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "FExecutionInfo()"
  },
  {
    "label": "FLatentResponse()",
    "kind": "Method",
    "detail": "Function (} } ; protected : TArray<FExecutionInfo,TInlineAllocator<4>> LinksToExecute ; bool bRemoveAction ; float DeltaTime ; struct FLatentActionManager ; public :)",
    "insertText": "FLatentResponse(float InDeltaTime) : bRemoveAction(false) , DeltaTime(InDeltaTime)"
  },
  {
    "label": "DoneIf()",
    "kind": "Method",
    "detail": "Function (} FLatentResponse&)",
    "insertText": "DoneIf(bool Condition)"
  },
  {
    "label": "TriggerLink()",
    "kind": "Method",
    "detail": "Function (bRemoveAction = Condition ; return* this ; } FLatentResponse&)",
    "insertText": "TriggerLink(FName ExecutionFunction, int32 LinkID, FWeakObjectPtr InCallbackTarget)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LinksToExecute .)",
    "insertText": "Add(FExecutionInfo(ExecutionFunction, LinkID, InCallbackTarget))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bRemoveAction = Condition ;)",
    "insertText": "if(bRemoveAction)"
  },
  {
    "label": "ElapsedTime()",
    "kind": "Method",
    "detail": "Function (} return* this ; } float)",
    "insertText": "ElapsedTime()"
  },
  {
    "label": "FPendingLatentAction()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FPendingLatentAction()"
  },
  {
    "label": "UpdateOperation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateOperation(FLatentResponse& Response)"
  },
  {
    "label": "DoneIf()",
    "kind": "Method",
    "detail": "Function (Response .)",
    "insertText": "DoneIf(true)"
  },
  {
    "label": "NotifyObjectDestroyed()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyObjectDestroyed()"
  },
  {
    "label": "NotifyActionAborted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyActionAborted()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR FString)",
    "insertText": "GetDescription()"
  }
]