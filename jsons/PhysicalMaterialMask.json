[
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UPhysicalMaterialMask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterialMask"
  },
  {
    "label": "UAssetImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetImportData"
  },
  {
    "label": "TextureAddress",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureAddress"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Engine / EngineTypes . h \" # include \" Engine / Texture . h \" # include \" EngineDefines . h \" # include \" PhysicsSettingsEnums . h \" # include \" Physics / PhysicsInterfaceCore . h \" # include \" PhysicalMaterialMask . generated . h \" struct FPropertyChangedEvent ;)",
    "insertText": "UCLASS(BlueprintType, Blueprintable, CollapseCategories, HideCategories = Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() #if WITH_EDITORONLY_DATA UPROPERTY(VisibleAnywhere, Instanced, Category = ImportSettings)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (uint32 INVALID_MASK_INDEX ; public : # if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "FinishDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishDestroy()"
  },
  {
    "label": "UPhysicalMaterialMask()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UPhysicalMaterialMask()"
  },
  {
    "label": "UPhysicalMaterialMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UPhysicalMaterialMask(FVTableHelper& Helper)"
  },
  {
    "label": "SetMaskTexture()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetMaskTexture(UTexture* InMaskTexture, const FString& InTextureFilename)"
  },
  {
    "label": "DumpMaskData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMaskData()"
  },
  {
    "label": "GetPhysicsMaterialMask()",
    "kind": "Method",
    "detail": "Function (# endif TUniquePtr<FPhysicsMaterialMaskHandle> MaterialMaskHandle ; FPhysicsMaterialMaskHandle&)",
    "insertText": "GetPhysicsMaterialMask()"
  },
  {
    "label": "GenerateMaskData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateMaskData(TArray<uint32>& OutMaskData, int32& OutSizeX, int32& OutSizeY)"
  },
  {
    "label": "GetPhysMatIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPhysMatIndex(const TArray<uint32>& MaskData, int32 SizeX, int32 SizeY, int32 AddressX, int32 AddressY, float U, float V)"
  }
]