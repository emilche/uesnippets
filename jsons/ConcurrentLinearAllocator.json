[
  {
    "label": "FOsAllocator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOsAllocator"
  },
  {
    "label": "FAlignedAllocatorInternal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAlignedAllocatorInternal"
  },
  {
    "label": "TBlockAllocationCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBlockAllocationCache"
  },
  {
    "label": "FTLSCleanup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTLSCleanup"
  },
  {
    "label": "TBlockAllocationLockFreeCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBlockAllocationLockFreeCache"
  },
  {
    "label": "FDefaultBlockAllocationTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDefaultBlockAllocationTag"
  },
  {
    "label": "TConcurrentLinearAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TConcurrentLinearAllocator"
  },
  {
    "label": "FBlockHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlockHeader"
  },
  {
    "label": "FAllocationHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAllocationHeader"
  },
  {
    "label": "FBlockHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlockHeader"
  },
  {
    "label": "FTLSCleanup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTLSCleanup"
  },
  {
    "label": "TConcurrentLinearObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TConcurrentLinearObject"
  },
  {
    "label": "TConcurrentLinearArrayAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TConcurrentLinearArrayAllocator"
  },
  {
    "label": "ForElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForElementType"
  },
  {
    "label": "TAllocatorTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAllocatorTraits"
  },
  {
    "label": "TConcurrentLinearBulkObjectAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TConcurrentLinearBulkObjectAllocator"
  },
  {
    "label": "FAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocation"
  },
  {
    "label": "TObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TObject"
  },
  {
    "label": "TObjectArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TObjectArray"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(void* Pointer, SIZE_T Size)"
  },
  {
    "label": "AnsiFree()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AnsiFree(Pointer)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "static_assert(BlockSize == FPageAllocator::PageSize, \"Only 64k pages are supported with this cache.\")"
  },
  {
    "label": "SIZE_T()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SIZE_T(AllocationSize)"
  },
  {
    "label": "Malloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Malloc(Size, Alignment)"
  },
  {
    "label": "OnInvalidConcurrentLinearArrayAllocatorNum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInvalidConcurrentLinearArrayAllocatorNum(int32 NewNum, SIZE_T NumBytesPerElement)"
  },
  {
    "label": "DefaultCalculateSlackReserve()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackReserve(NewMax, NumBytesPerElement, false)"
  },
  {
    "label": "DefaultCalculateSlackShrink()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackShrink(NewMax, CurrentMax, NumBytesPerElement, false)"
  },
  {
    "label": "DefaultCalculateSlackGrow()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackGrow(NewMax, CurrentMax, NumBytesPerElement, false)"
  }
]