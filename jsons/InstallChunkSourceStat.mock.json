[
  {
    "label": "FMockInstallChunkSourceStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMockInstallChunkSourceStat"
  },
  {
    "label": "OnBatchStarted()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Installer / InstallChunkSource . h \" # include \" Common / StatsCollector . h \" # if WITH_DEV_AUTOMATION_TESTS namespace BuildPatchServices { class FMockInstallChunkSourceStat : public IInstallChunkSourceStat { public : typedef TTuple<double,TArray<FGuid>> FBatchStarted ; typedef TTuple<double,FGuid> FLoadStarted ; typedef TTuple<double,FGuid,ELoadResult,ISpeedRecorder::FRecord> FLoadComplete ; public : void)",
    "insertText": "OnBatchStarted(const TArray<FGuid>& ChunkIds)"
  },
  {
    "label": "OnBatchStartedFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBatchStartedFunc(ChunkIds)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (} RxBatchStarted .)",
    "insertText": "Emplace(FStatsCollector::GetSeconds(), ChunkIds)"
  },
  {
    "label": "OnLoadStarted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnLoadStarted(const FGuid& ChunkId)"
  },
  {
    "label": "OnLoadStartedFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadStartedFunc(ChunkId)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (} RxLoadStarted .)",
    "insertText": "Emplace(FStatsCollector::GetSeconds(), ChunkId)"
  },
  {
    "label": "OnLoadComplete()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnLoadComplete(const FGuid& ChunkId, const ELoadResult& Result, const ISpeedRecorder::FRecord& Record)"
  },
  {
    "label": "OnLoadCompleteFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadCompleteFunc(ChunkId, Result, Record)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (} RxLoadComplete .)",
    "insertText": "Emplace(FStatsCollector::GetSeconds(), ChunkId, Result, Record)"
  },
  {
    "label": "OnAcceptedNewRequirements()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnAcceptedNewRequirements(const TSet<FGuid>& ChunkIds)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} public : TArray<FBatchStarted> RxBatchStarted ; TArray<FLoadStarted> RxLoadStarted ; TArray<FLoadComplete> RxLoadComplete ; TFunction<)",
    "insertText": "void(const TArray<FGuid>&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TFunction<)",
    "insertText": "void(const FGuid&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TFunction<)",
    "insertText": "void(const FGuid&, const ELoadResult&, const ISpeedRecorder::FRecord&)"
  }
]