[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CurveEditorTreeTraits . h \" # include \" CurveEditorTypes . h \" # include \" Input / Reply . h \" # include \" Layout / Visibility . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FCurveEditor ; class ITableRow ; struct FSlateBrush ; class SCurveEditorTreePin : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SCurveEditorTreePin)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TWeakPtr<FCurveEditor> InCurveEditor, FCurveEditorTreeItemID InTreeItemID, const TSharedRef<ITableRow>& InTableRow)"
  },
  {
    "label": "TogglePinned()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "TogglePinned()"
  },
  {
    "label": "GetPinBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetPinBrush()"
  },
  {
    "label": "IsPinnedRecursive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPinnedRecursive(FCurveEditorTreeItemID InTreeItem, FCurveEditor* CurveEditor)"
  },
  {
    "label": "PinRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PinRecursive(FCurveEditorTreeItemID InTreeItem, FCurveEditor* CurveEditor)"
  },
  {
    "label": "UnpinRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnpinRecursive(FCurveEditorTreeItemID InTreeItem, FCurveEditor* CurveEditor, TArray<FCurveEditorTreeItemID>& OutUnpinnedItems)"
  },
  {
    "label": "GetPinVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetPinVisibility()"
  }
]