[
  {
    "label": "FGameTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameTime"
  },
  {
    "label": "FGameTime()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / AssertionMacros . h \" # include \" Misc / CoreMiscDefines . h \" struct FGameTime {)",
    "insertText": "FGameTime() : RealTimeSeconds(0.0) , WorldTimeSeconds(0.0) , DeltaRealTimeSeconds(0.0f) , DeltaWorldTimeSeconds(0.0f)"
  },
  {
    "label": "FGameTime()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FGameTime(const FGameTime&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FGameTime&)",
    "insertText": "operator(const FGameTime&)"
  },
  {
    "label": "GetTimeSinceAppStart()",
    "kind": "Method",
    "detail": "Function (FGameTime)",
    "insertText": "GetTimeSinceAppStart()"
  },
  {
    "label": "CreateUndilated()",
    "kind": "Method",
    "detail": "Function (FGameTime)",
    "insertText": "CreateUndilated(double InRealTimeSeconds, float InDeltaRealTimeSeconds)"
  },
  {
    "label": "CreateDilated()",
    "kind": "Method",
    "detail": "Function (} FGameTime)",
    "insertText": "CreateDilated(double InRealTimeSeconds, float InDeltaRealTimeSeconds, double InWorldTimeSeconds, float InDeltaWorldTimeSeconds)"
  },
  {
    "label": "GetRealTimeSeconds()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "GetRealTimeSeconds()"
  }
]