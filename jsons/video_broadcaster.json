[
  {
    "label": "VideoBroadcaster",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoBroadcaster"
  },
  {
    "label": "VideoBroadcaster()",
    "kind": "Method",
    "detail": "Function (# ifndef MEDIA_BASE_VIDEO_BROADCASTER_H_ # define MEDIA_BASE_VIDEO_BROADCASTER_H_ # include \" api / media_stream_interface . h \" # include \" api / scoped_refptr . h \" # include \" api / sequence_checker . h \" # include \" api / video / video_frame_buffer . h \" # include \" api / video / video_source_interface . h \" # include \" media / base / video_source_base . h \" # include \" rtc_base / synchronization / mutex . h \" # include \" rtc_base / thread_annotations . h \" namespace rtc { class VideoBroadcaster : public VideoSourceBase,public VideoSinkInterface<webrtc::VideoFrame> { public :)",
    "insertText": "VideoBroadcaster()"
  },
  {
    "label": "AddOrUpdateSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrUpdateSink(VideoSinkInterface<webrtc::VideoFrame>* sink, const VideoSinkWants& wants)"
  },
  {
    "label": "RemoveSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSink(VideoSinkInterface<webrtc::VideoFrame>* sink)"
  },
  {
    "label": "frame_wanted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "frame_wanted()"
  },
  {
    "label": "wants()",
    "kind": "Method",
    "detail": "Function (VideoSinkWants)",
    "insertText": "wants()"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrame(const webrtc::VideoFrame& frame)"
  },
  {
    "label": "OnDiscardedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDiscardedFrame()"
  },
  {
    "label": "ProcessConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessConstraints(const webrtc::VideoTrackSourceConstraints& constraints)"
  },
  {
    "label": "UpdateWants()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdateWants() RTC_EXCLUSIVE_LOCKS_REQUIRED(sinks_and_wants_lock_)"
  },
  {
    "label": "GetBlackFrameBuffer()",
    "kind": "Method",
    "detail": "Function (const rtc::scoped_refptr<webrtc::VideoFrameBuffer>&)",
    "insertText": "GetBlackFrameBuffer(int width, int height) RTC_EXCLUSIVE_LOCKS_REQUIRED(sinks_and_wants_lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (webrtc::Mutex sinks_and_wants_lock_ ; VideoSinkWants current_wants_)",
    "insertText": "RTC_GUARDED_BY(sinks_and_wants_lock_)"
  }
]