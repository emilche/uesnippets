[
  {
    "label": "Uint128_64",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Uint128_64"
  },
  {
    "label": "Uint128_64()",
    "kind": "Method",
    "detail": "Function (# ifndef CITY_HASH_H_ # define CITY_HASH_H_ # include \" CoreTypes . h \" struct Uint128_64 {)",
    "insertText": "Uint128_64(uint64 InLo, uint64 InHi) : lo(InLo), hi(InHi)"
  },
  {
    "label": "CityHash64()",
    "kind": "Method",
    "detail": "Function (} uint64 lo ; uint64 hi ; } ; uint64)",
    "insertText": "CityHash64(const char *buf, uint32 len)"
  },
  {
    "label": "CityHash64WithSeed()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CityHash64WithSeed(const char *buf, uint32 len, uint64 seed)"
  },
  {
    "label": "CityHash64WithSeeds()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CityHash64WithSeeds(const char *buf, uint32 len, uint64 seed0, uint64 seed1)"
  },
  {
    "label": "CityHash32()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "CityHash32(const char *buf, uint32 len)"
  },
  {
    "label": "CityHash128to64()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CityHash128to64(const Uint128_64& x)"
  },
  {
    "label": "a()",
    "kind": "Method",
    "detail": "Function (const uint64 kMul = 0 x9ddfea08eb382d69ULL ; uint64)",
    "insertText": "a(x.lo ^ x.hi)"
  },
  {
    "label": "a()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "a(a >> 47)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "b(x.hi ^ a)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(b >> 47)"
  }
]