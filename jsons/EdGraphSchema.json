[
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "FBPVariableDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPVariableDescription"
  },
  {
    "label": "EGraphType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EGraphType"
  },
  {
    "label": "ECanCreateConnectionResponse",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECanCreateConnectionResponse"
  },
  {
    "label": "FEdGraphSchemaActionDefiningObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphSchemaActionDefiningObject"
  },
  {
    "label": "FEdGraphSchemaAction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphSchemaAction"
  },
  {
    "label": "FEdGraphSchemaAction_NewNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphSchemaAction_NewNode"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "FEdGraphSchemaAction_Dummy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphSchemaAction_Dummy"
  },
  {
    "label": "FPinConnectionResponse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPinConnectionResponse"
  },
  {
    "label": "FGraphActionListBuilderBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphActionListBuilderBase"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "FCategorizedGraphActionListBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCategorizedGraphActionListBuilder"
  },
  {
    "label": "FGraphActionMenuBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphActionMenuBuilder"
  },
  {
    "label": "FGraphContextMenuBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphContextMenuBuilder"
  },
  {
    "label": "FGraphDisplayInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphDisplayInfo"
  },
  {
    "label": "FGraphSchemaSearchWeightModifiers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphSchemaSearchWeightModifiers"
  },
  {
    "label": "FGraphSchemaSearchTextWeightInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphSchemaSearchTextWeightInfo"
  },
  {
    "label": "FGraphSchemaSearchTextDebugInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphSchemaSearchTextDebugInfo"
  },
  {
    "label": "UEdGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphSchema"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "UGraphNodeContextMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGraphNodeContextMenuContext"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FConnectionDrawingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConnectionDrawingPolicy"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" EdGraph / EdGraphNode . h \" # include \" EdGraph / EdGraphPin . h \" # include \" AssetRegistry / AssetData . h \" # include \" UObject / ObjectKey . h \" # include \" Input / Reply . h \" # if WITH_EDITOR # include \" Kismet2 / Kismet2NameValidators . h \" # endif # include \" EdGraphSchema . generated . h \" class FSlateRect ; struct FSlateBrush ; class UEdGraph ; struct FBPVariableDescription ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "FEdGraphSchemaActionDefiningObject()",
    "kind": "Method",
    "detail": "Function (CONNECT_RESPONSE_MAKE,CONNECT_RESPONSE_DISALLOW,CONNECT_RESPONSE_BREAK_OTHERS_A,CONNECT_RESPONSE_BREAK_OTHERS_B,CONNECT_RESPONSE_BREAK_OTHERS_AB,CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE,CONNECT_RESPONSE_MAKE_WITH_PROMOTION,CONNECT_RESPONSE_MAX,} ; struct FEdGraphSchemaActionDefiningObject {)",
    "insertText": "FEdGraphSchemaActionDefiningObject(UObject* InObject, void* AdditionalPointer = nullptr, FName AdditionalName = NAME_None) : DefiningObject(InObject) , DefiningPointer(AdditionalPointer) , DefiningName(AdditionalName) , bIsEditable((InObject != nullptr) ? !InObject->IsNative() : false)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FEdGraphSchemaActionDefiningObject& A, const FEdGraphSchemaActionDefiningObject& B)"
  },
  {
    "label": "IsPotentiallyEditable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPotentiallyEditable()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() static FName StaticGetTypeId()"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "Type(\"FEdGraphSchemaAction\")"
  },
  {
    "label": "FEdGraphSchemaAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEdGraphSchemaAction() : Grouping(0) , SectionID(0)"
  },
  {
    "label": "FEdGraphSchemaAction()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FEdGraphSchemaAction()"
  },
  {
    "label": "FEdGraphSchemaAction()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEdGraphSchemaAction(FText InNodeCategory, FText InMenuDesc, FText InToolTip, const int32 InGrouping, FText InKeywords = FText(), int32 InSectionID = 0) : Grouping(InGrouping) , SectionID(InSectionID)"
  },
  {
    "label": "UpdateSearchData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSearchData(MoveTemp(InMenuDesc), MoveTemp(InToolTip), MoveTemp(InNodeCategory), MoveTemp(InKeywords))"
  },
  {
    "label": "IsParentable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsParentable()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (UEdGraphNode* NewNode = nullptr ;)",
    "insertText": "if(FromPins.Num() > 0)"
  },
  {
    "label": "PerformAction()",
    "kind": "Method",
    "detail": "Function (NewNode =)",
    "insertText": "PerformAction(ParentGraph, FromPins[0], Location, bSelectNewNode)"
  },
  {
    "label": "PerformAction()",
    "kind": "Method",
    "detail": "Function (} else { NewNode =)",
    "insertText": "PerformAction(ParentGraph, nullptr, Location, bSelectNewNode)"
  },
  {
    "label": "OnDoubleClick()",
    "kind": "Method",
    "detail": "Function (} return NewNode ; } FReply)",
    "insertText": "OnDoubleClick(UBlueprint* InBlueprint)"
  },
  {
    "label": "CosmeticUpdateCategory()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CosmeticUpdateCategory(FText NewCategory)"
  },
  {
    "label": "CosmeticUpdateRootCategory()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "CosmeticUpdateRootCategory(FText NewRootCategory)"
  },
  {
    "label": "UpdateSearchData()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "UpdateSearchData(FText NewMenuDescription, FText NewToolTipDescription, FText NewCategory, FText NewKeywords)"
  },
  {
    "label": "GetSectionID()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSectionID()"
  },
  {
    "label": "MovePersistentItemToCategory()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MovePersistentItemToCategory(const FText& NewCategoryName)"
  },
  {
    "label": "GetReorderIndexInContainer()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetReorderIndexInContainer()"
  },
  {
    "label": "IsA()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsA(const FName& InType)"
  },
  {
    "label": "IsAVariable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAVariable()"
  },
  {
    "label": "GetCategoryChain()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR const TArray<FString>&)",
    "insertText": "GetCategoryChain()"
  },
  {
    "label": "UpdateSearchText()",
    "kind": "Method",
    "detail": "Function (# endif private : void)",
    "insertText": "UpdateSearchText()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "Type(\"FEdGraphSchemaAction_NewNode\")"
  },
  {
    "label": "FEdGraphSchemaAction_NewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEdGraphSchemaAction_NewNode() : FEdGraphSchemaAction() , NodeTemplate(nullptr)"
  },
  {
    "label": "FEdGraphSchemaAction_NewNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEdGraphSchemaAction_NewNode(FText InNodeCategory, FText InMenuDesc, FText InToolTip, const int32 InGrouping) : FEdGraphSchemaAction(MoveTemp(InNodeCategory), MoveTemp(InMenuDesc), MoveTemp(InToolTip), InGrouping) , NodeTemplate(nullptr)"
  },
  {
    "label": "PerformAction()",
    "kind": "Method",
    "detail": "Function (} UEdGraphNode*)",
    "insertText": "PerformAction(class UEdGraph* ParentGraph, UEdGraphPin* FromPin, const FVector2D Location, bool bSelectNewNode = true)"
  },
  {
    "label": "PerformAction()",
    "kind": "Method",
    "detail": "Function (UEdGraphNode*)",
    "insertText": "PerformAction(class UEdGraph* ParentGraph, TArray<UEdGraphPin*>& FromPins, const FVector2D Location, bool bSelectNewNode = true)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "SpawnNodeFromTemplate()",
    "kind": "Method",
    "detail": "Function (template<NodeType> NodeType*)",
    "insertText": "SpawnNodeFromTemplate(class UEdGraph* ParentGraph, NodeType* InTemplateNode, const FVector2D Location, bool bSelectNewNode = true)"
  },
  {
    "label": "NodeType()",
    "kind": "Method",
    "detail": "Function (FEdGraphSchemaAction_NewNode Action ; Action . NodeTemplate = InTemplateNode ; return Cast<)",
    "insertText": "NodeType(Action.PerformAction(ParentGraph, nullptr, Location, bSelectNewNode))"
  },
  {
    "label": "CreateNode()",
    "kind": "Method",
    "detail": "Function (} UEdGraphNode*)",
    "insertText": "CreateNode(class UEdGraph* ParentGraph, UEdGraphPin* FromPin, const FVector2D Location, class UEdGraphNode* InNodeTemplate)"
  },
  {
    "label": "StaticGetTypeId()",
    "kind": "Method",
    "detail": "Function (} ; struct FEdGraphSchemaAction_Dummy : public FEdGraphSchemaAction { FName)",
    "insertText": "StaticGetTypeId()"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "Type(\"FEdGraphSchemaAction_Dummy\")"
  },
  {
    "label": "FEdGraphSchemaAction_Dummy()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEdGraphSchemaAction_Dummy() : FEdGraphSchemaAction()"
  },
  {
    "label": "FEdGraphSchemaAction_Dummy()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEdGraphSchemaAction_Dummy(FText InNodeCategory, FText InMenuDesc, FText InToolTip, const int32 InGrouping) : FEdGraphSchemaAction(MoveTemp(InNodeCategory), MoveTemp(InMenuDesc), MoveTemp(InToolTip), InGrouping)"
  },
  {
    "label": "FPinConnectionResponse()",
    "kind": "Method",
    "detail": "Function (} } ; struct FPinConnectionResponse { public : FText Message ; TEnumAsByte<enum ECanCreateConnectionResponse> Response ; public :)",
    "insertText": "FPinConnectionResponse() : Message(FText::GetEmpty()) , Response(CONNECT_RESPONSE_MAKE) , bIsFatal(false)"
  },
  {
    "label": "FPinConnectionResponse()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPinConnectionResponse(const ECanCreateConnectionResponse InResponse, FString InMessage) : Message(FText::FromString(MoveTemp(InMessage))) , Response(InResponse) , bIsFatal(false)"
  },
  {
    "label": "FPinConnectionResponse()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPinConnectionResponse(const ECanCreateConnectionResponse InResponse, const ANSICHAR* InMessage) : Message(FText::FromString(InMessage)) , Response(InResponse) , bIsFatal(false)"
  },
  {
    "label": "FPinConnectionResponse()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPinConnectionResponse(const ECanCreateConnectionResponse InResponse, const WIDECHAR* InMessage) : Message(FText::FromString(InMessage)) , Response(InResponse) , bIsFatal(false)"
  },
  {
    "label": "FPinConnectionResponse()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPinConnectionResponse(const ECanCreateConnectionResponse InResponse, FText InMessage) : Message(MoveTemp(InMessage)) , Response(InResponse) , bIsFatal(false)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FPinConnectionResponse& A, const FPinConnectionResponse& B)"
  },
  {
    "label": "CanSafeConnect()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanSafeConnect()"
  },
  {
    "label": "IsFatal()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsFatal()"
  },
  {
    "label": "SetFatal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetFatal()"
  },
  {
    "label": "ActionGroup()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "ActionGroup(TSharedPtr<FEdGraphSchemaAction> InAction, FString RootCategory = FString())"
  },
  {
    "label": "ActionGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActionGroup(const TArray< TSharedPtr<FEdGraphSchemaAction> >& InActions, FString RootCategory = FString())"
  },
  {
    "label": "ActionGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActionGroup(ActionGroup && Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ActionGroup&)",
    "insertText": "operator(ActionGroup && Other)"
  },
  {
    "label": "ActionGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActionGroup(const ActionGroup&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ActionGroup&)",
    "insertText": "operator(const ActionGroup&)"
  },
  {
    "label": "ActionGroup()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ActionGroup()"
  },
  {
    "label": "PerformAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformAction(class UEdGraph* ParentGraph, TArray<UEdGraphPin*>& FromPins, const FVector2D Location)"
  },
  {
    "label": "GetSearchTextForFirstAction()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetSearchTextForFirstAction()"
  },
  {
    "label": "GetSearchKeywordsArrayForFirstAction()",
    "kind": "Method",
    "detail": "Function (} const TArray<FString>&)",
    "insertText": "GetSearchKeywordsArrayForFirstAction()"
  },
  {
    "label": "GetMenuDescriptionArrayForFirstAction()",
    "kind": "Method",
    "detail": "Function (} const TArray<FString>&)",
    "insertText": "GetMenuDescriptionArrayForFirstAction()"
  },
  {
    "label": "GetSearchTitleArrayForFirstAction()",
    "kind": "Method",
    "detail": "Function (} const TArray<FString>&)",
    "insertText": "GetSearchTitleArrayForFirstAction()"
  },
  {
    "label": "GetSearchCategoryArrayForFirstAction()",
    "kind": "Method",
    "detail": "Function (} const TArray<FString>&)",
    "insertText": "GetSearchCategoryArrayForFirstAction()"
  },
  {
    "label": "GetLocalizedSearchKeywordsArrayForFirstAction()",
    "kind": "Method",
    "detail": "Function (} const TArray<FString>&)",
    "insertText": "GetLocalizedSearchKeywordsArrayForFirstAction()"
  },
  {
    "label": "GetLocalizedMenuDescriptionArrayForFirstAction()",
    "kind": "Method",
    "detail": "Function (} const TArray<FString>&)",
    "insertText": "GetLocalizedMenuDescriptionArrayForFirstAction()"
  },
  {
    "label": "GetLocalizedSearchTitleArrayForFirstAction()",
    "kind": "Method",
    "detail": "Function (} const TArray<FString>&)",
    "insertText": "GetLocalizedSearchTitleArrayForFirstAction()"
  },
  {
    "label": "GetLocalizedSearchCategoryArrayForFirstAction()",
    "kind": "Method",
    "detail": "Function (} const TArray<FString>&)",
    "insertText": "GetLocalizedSearchCategoryArrayForFirstAction()"
  },
  {
    "label": "Move()",
    "kind": "Method",
    "detail": "Function (} TArray<TSharedPtr<FEdGraphSchemaAction>> Actions ; private : void)",
    "insertText": "Move(ActionGroup& Other)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Copy(const ActionGroup& Other)"
  },
  {
    "label": "InitCategoryChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitCategoryChain()"
  },
  {
    "label": "InitSearchText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSearchText()"
  },
  {
    "label": "FGraphActionListBuilderBase()",
    "kind": "Method",
    "detail": "Function (FString RootCategory ; TArray<FString> CategoryChain ; } ; private : TArray<TSharedPtr<FEdGraphSchemaAction>> Entries ; public : ~)",
    "insertText": "FGraphActionListBuilderBase()"
  },
  {
    "label": "AddAction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddAction(const TSharedPtr<FEdGraphSchemaAction>& NewAction)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(FGraphActionListBuilderBase& Other)"
  },
  {
    "label": "GetNumActions()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumActions()"
  },
  {
    "label": "GetSchemaAction()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FEdGraphSchemaAction>&)",
    "insertText": "GetSchemaAction(int32 Index)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "Empty()"
  },
  {
    "label": "CreateTemplateNode()",
    "kind": "Method",
    "detail": "Function (UEdGraph* OwnerOfTemporaries ; public : template<NodeType> NodeType*)",
    "insertText": "CreateTemplateNode(UClass* Class=NodeType::StaticClass())"
  },
  {
    "label": "FGraphActionListBuilderBase()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FGraphActionListBuilderBase() : OwnerOfTemporaries(nullptr)"
  },
  {
    "label": "FCategorizedGraphActionListBuilder()",
    "kind": "Method",
    "detail": "Function (} } ; struct FCategorizedGraphActionListBuilder : public FGraphActionListBuilderBase { public :)",
    "insertText": "FCategorizedGraphActionListBuilder(FString Category = FString())"
  },
  {
    "label": "FGraphActionMenuBuilder()",
    "kind": "Method",
    "detail": "Function (private : FString Category ; } ; struct FGraphActionMenuBuilder : public FGraphActionListBuilderBase { public : const UEdGraphPin* FromPin ; public :)",
    "insertText": "FGraphActionMenuBuilder() : FromPin(nullptr)"
  },
  {
    "label": "FGraphContextMenuBuilder()",
    "kind": "Method",
    "detail": "Function (} } ; struct FGraphContextMenuBuilder : public FGraphActionMenuBuilder { public : const UEdGraph* CurrentGraph ; TArray<UObject*> SelectedObjects ; public :)",
    "insertText": "FGraphContextMenuBuilder(const UEdGraph* InGraph)"
  },
  {
    "label": "FGraphDisplayInfo()",
    "kind": "Method",
    "detail": "Function (} ; struct FGraphDisplayInfo { public : FText PlainName ; FText DisplayName ; FText Tooltip ; FString DocLink ; FString DocExcerptName ; TArray<FString> Notes ; public :)",
    "insertText": "FGraphDisplayInfo()"
  },
  {
    "label": "GetNotesAsString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetNotesAsString()"
  },
  {
    "label": "FGraphSchemaSearchTextWeightInfo()",
    "kind": "Method",
    "detail": "Function (} ; # if WITH_EDITORONLY_DATA struct FGraphSchemaSearchWeightModifiers { float NodeTitleWeight = 0 . 0 f ; float KeywordWeight = 0 . 0 f ; float DescriptionWeight = 0 . 0 f ; float CategoryWeight = 0 . 0 f ; float WholeMatchLocalizedWeightMultiplier = 0 . 0 f ; float WholeMatchWeightMultiplier = 0 . 0 f ; float StartsWithBonusWeightMultiplier = 0 . 0 f ; float PercentageMatchWeightMultiplier = 0 . 0 f ; float ShorterMatchWeight = 0 . 0 f ; } ; struct FGraphSchemaSearchTextWeightInfo {)",
    "insertText": "FGraphSchemaSearchTextWeightInfo(const TArray< FString >* InArray, float InWeightModifier, float* OutDebugWeight) : Array(InArray), WeightModifier(InWeightModifier), DebugWeight(OutDebugWeight)"
  },
  {
    "label": "Print()",
    "kind": "Method",
    "detail": "Function (} const TArray<FString>* Array = nullptr ; float WeightModifier = 0 . 0 f ; float* DebugWeight = nullptr ; } ; struct FGraphSchemaSearchTextDebugInfo { float TotalWeight = 0 . 0 f ; float NodeTitleWeight = 0 . 0 f ; float KeywordWeight = 0 . 0 f ; float DescriptionWeight = 0 . 0 f ; float CategoryWeight = 0 . 0 f ; float PercentMatch = 0 . 0 f ; float PercentMatchWeight = 0 . 0 f ; float ShorterMatchWeight = 0 . 0 f ; void)",
    "insertText": "Print(const TArray<FString>& SearchForKeywords, const FEdGraphSchemaAction& Action)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } ; # endif)",
    "insertText": "UCLASS(abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() ENGINE_API virtual void GetGraphContextActions(FGraphContextMenuBuilder& ContextMenuBuilder)"
  },
  {
    "label": "GetContextMenuName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetContextMenuName()"
  },
  {
    "label": "GetParentContextMenuName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetParentContextMenuName()"
  },
  {
    "label": "GetContextMenuName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetContextMenuName(UClass* InClass)"
  },
  {
    "label": "GetContextMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetContextMenuActions(class UToolMenu* Menu, class UGraphNodeContextMenuContext* Context)"
  },
  {
    "label": "CanCreateConnection()",
    "kind": "Method",
    "detail": "Function (const FPinConnectionResponse)",
    "insertText": "CanCreateConnection(const UEdGraphPin* A, const UEdGraphPin* B)"
  },
  {
    "label": "CanMergeNodes()",
    "kind": "Method",
    "detail": "Function (} const FPinConnectionResponse)",
    "insertText": "CanMergeNodes(const UEdGraphNode* A, const UEdGraphNode* B)"
  },
  {
    "label": "CategorizePinsByDirection()",
    "kind": "Method",
    "detail": "Function (} template<PinType> bool)",
    "insertText": "CategorizePinsByDirection(PinType* PinA, PinType* PinB, PinType*& InputPin, PinType*& OutputPin)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (InputPin = nullptr ; OutputPin = nullptr ; bool bResult = false ;)",
    "insertText": "if(ensure(PinA && PinB))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (InputPin = PinA ; OutputPin = PinB ; bResult = true ; } else)",
    "insertText": "if((PinB->Direction == EGPD_Input) && (PinA->Direction == EGPD_Output))"
  },
  {
    "label": "TryCreateConnection()",
    "kind": "Method",
    "detail": "Function (InputPin = PinB ; OutputPin = PinA ; bResult = true ; } } return bResult ; } bool)",
    "insertText": "TryCreateConnection(UEdGraphPin* A, UEdGraphPin* B)"
  },
  {
    "label": "IsConnectionRelinkingAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectionRelinkingAllowed(UEdGraphPin* InPin)"
  },
  {
    "label": "CanRelinkConnectionToPin()",
    "kind": "Method",
    "detail": "Function (const FPinConnectionResponse)",
    "insertText": "CanRelinkConnectionToPin(const UEdGraphPin* OldSourcePin, const UEdGraphPin* TargetPinCandidate)"
  },
  {
    "label": "TryRelinkConnectionTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRelinkConnectionTarget(UEdGraphPin* SourcePin, UEdGraphPin* OldTargetPin, UEdGraphPin* NewTargetPin, const TArray<UEdGraphNode*>& InSelectedGraphNodes)"
  },
  {
    "label": "CreateAutomaticConversionNodeAndConnections()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateAutomaticConversionNodeAndConnections(UEdGraphPin* A, UEdGraphPin* B)"
  },
  {
    "label": "CreatePromotedConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreatePromotedConnection(UEdGraphPin* A, UEdGraphPin* B)"
  },
  {
    "label": "IsPinDefaultValid()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "IsPinDefaultValid(const UEdGraphPin* Pin, const FString& NewDefaultValue, TObjectPtr<UObject> NewDefaultObject, const FText& InNewDefaultText)"
  },
  {
    "label": "IsCurrentPinDefaultValid()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "IsCurrentPinDefaultValid(const UEdGraphPin* Pin)"
  },
  {
    "label": "DoesSupportPinWatching()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesSupportPinWatching()"
  },
  {
    "label": "CanShowDataTooltipForPin()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanShowDataTooltipForPin(const UEdGraphPin& Pin)"
  },
  {
    "label": "TrySetDefaultObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrySetDefaultObject(UEdGraphPin& Pin, UObject* NewDefaultObject, bool bMarkAsModified = true)"
  },
  {
    "label": "TrySetDefaultText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrySetDefaultText(UEdGraphPin& InPin, const FText& InNewDefaultText, bool bMarkAsModified = true)"
  },
  {
    "label": "DoesDefaultValueMatch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesDefaultValueMatch(const UEdGraphPin& InPin, const FString& InValue)"
  },
  {
    "label": "DoesDefaultValueMatchAutogenerated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesDefaultValueMatchAutogenerated(const UEdGraphPin& InPin)"
  },
  {
    "label": "ResetPinToAutogeneratedDefaultValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPinToAutogeneratedDefaultValue(UEdGraphPin* Pin, bool bCallModifyCallbacks = true)"
  },
  {
    "label": "ShouldHidePinDefaultValue()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldHidePinDefaultValue(UEdGraphPin* Pin)"
  },
  {
    "label": "GetActionFilteredWeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetActionFilteredWeight(const FEdGraphSchemaAction& InCurrentAction, const TArray<FString>& InFilterTerms, const TArray<FString>& InSanitizedFilterTerms, const TArray<UEdGraphPin*>& DraggedFromPins)"
  },
  {
    "label": "GetSearchWeightModifiers()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS FGraphSchemaSearchWeightModifiers)",
    "insertText": "GetSearchWeightModifiers()"
  },
  {
    "label": "ConstructBasicPinTooltip()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "ConstructBasicPinTooltip(UEdGraphPin const& Pin, FText const& PinDescription, FString& TooltipOut)"
  },
  {
    "label": "GetGraphType()",
    "kind": "Method",
    "detail": "Function (EGraphType)",
    "insertText": "GetGraphType(const UEdGraph* TestEdGraph)"
  },
  {
    "label": "SetNodeMetaData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetNodeMetaData(UEdGraphNode* Node, FName const& KeyValue)"
  },
  {
    "label": "BreakPinLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakPinLinks(UEdGraphPin& TargetPin, bool bSendsNodeNotifcation)"
  },
  {
    "label": "BreakSinglePinLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakSinglePinLink(UEdGraphPin* SourcePin, UEdGraphPin* TargetPin)"
  },
  {
    "label": "SplitPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitPin(UEdGraphPin* Pin, bool bNotify = true)"
  },
  {
    "label": "RecombinePin()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "RecombinePin(UEdGraphPin* Pin)"
  },
  {
    "label": "OnPinConnectionDoubleCicked()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnPinConnectionDoubleCicked(UEdGraphPin* PinA, UEdGraphPin* PinB, const FVector2D& GraphPosition)"
  },
  {
    "label": "MovePinLinks()",
    "kind": "Method",
    "detail": "Function (} FPinConnectionResponse)",
    "insertText": "MovePinLinks(UEdGraphPin& MoveFromPin, UEdGraphPin& MoveToPin, bool bIsIntermediateMove = false, bool bNotifyLinkedNodes = false)"
  },
  {
    "label": "CopyPinLinks()",
    "kind": "Method",
    "detail": "Function (FPinConnectionResponse)",
    "insertText": "CopyPinLinks(UEdGraphPin& CopyFromPin, UEdGraphPin& CopyToPin, bool bIsIntermediateCopy = false)"
  },
  {
    "label": "IsSelfPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSelfPin(const UEdGraphPin& Pin)"
  },
  {
    "label": "ReconstructNode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReconstructNode(UEdGraphNode& TargetNode, bool bIsBatchRequest=false)"
  },
  {
    "label": "CreateSubstituteNode()",
    "kind": "Method",
    "detail": "Function (UEdGraphNode*)",
    "insertText": "CreateSubstituteNode(UEdGraphNode* Node, const UEdGraph* Graph, FObjectInstancingGraph* InstanceGraph, TSet<FName>& InOutExtraNames)"
  },
  {
    "label": "GetNodeSelectionCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNodeSelectionCount(const UEdGraph* Graph)"
  },
  {
    "label": "TryDeleteGraph()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "TryDeleteGraph(UEdGraph* GraphToDelete)"
  },
  {
    "label": "BeginGraphDragAction()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "BeginGraphDragAction(TSharedPtr<FEdGraphSchemaAction> InAction, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetGraphDisplayInformation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetGraphDisplayInformation(const UEdGraph& Graph, FGraphDisplayInfo& DisplayInfo)"
  },
  {
    "label": "GetGraphCategory()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetGraphCategory(const UEdGraph* InGraph)"
  },
  {
    "label": "TrySetGraphCategory()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "TrySetGraphCategory(const UEdGraph* InGraph, const FText& InCategory)"
  },
  {
    "label": "DroppedAssetsOnGraph()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DroppedAssetsOnGraph(const TArray<struct FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraph* Graph)"
  },
  {
    "label": "DroppedAssetsOnNode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DroppedAssetsOnNode(const TArray<struct FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraphNode* Node)"
  },
  {
    "label": "DroppedAssetsOnPin()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DroppedAssetsOnPin(const TArray<struct FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraphPin* Pin)"
  },
  {
    "label": "GetAssetsNodeHoverMessage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetAssetsNodeHoverMessage(const TArray<struct FAssetData>& Assets, const UEdGraphNode* HoverNode, FString& OutTooltipText, bool& OutOkIcon)"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (OutTooltipText =)",
    "insertText": "FString()"
  },
  {
    "label": "GetAssetsPinHoverMessage()",
    "kind": "Method",
    "detail": "Function (OutOkIcon = false ; } void)",
    "insertText": "GetAssetsPinHoverMessage(const TArray<struct FAssetData>& Assets, const UEdGraphPin* HoverPin, FString& OutTooltipText, bool& OutOkIcon)"
  },
  {
    "label": "GetAssetsGraphHoverMessage()",
    "kind": "Method",
    "detail": "Function (OutOkIcon = false ; } void)",
    "insertText": "GetAssetsGraphHoverMessage(const TArray<FAssetData>& Assets, const UEdGraph* HoverGraph, FString& OutTooltipText, bool& OutOkIcon)"
  },
  {
    "label": "CanDuplicateGraph()",
    "kind": "Method",
    "detail": "Function (OutOkIcon = false ; } bool)",
    "insertText": "CanDuplicateGraph(UEdGraph* InSourceGraph)"
  },
  {
    "label": "ShouldAlwaysPurgeOnModification()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldAlwaysPurgeOnModification()"
  },
  {
    "label": "IsCacheVisualizationOutOfDate()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCacheVisualizationOutOfDate(int32 InVisualizationCacheID)"
  },
  {
    "label": "CanCreateNewNodes()",
    "kind": "Method",
    "detail": "Function (} ; FPinConnectionResponse)",
    "insertText": "CanCreateNewNodes(UEdGraphPin* InSourcePin)"
  },
  {
    "label": "CanVariableBeDropped()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanVariableBeDropped(UEdGraph* InGraph, FProperty* InVariableToDrop)"
  },
  {
    "label": "GetNameValidator()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR TSharedPtr<INameValidatorInterface>)",
    "insertText": "GetNameValidator(const UBlueprint* InBlueprintObj, const FName& InOriginalName, const UStruct* InValidationScope, const FName& InActionTypeId)"
  },
  {
    "label": "CollectSearchTextWeightInfo()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITORONLY_DATA protected : int32)",
    "insertText": "CollectSearchTextWeightInfo(const FEdGraphSchemaAction& InCurrentAction, const FGraphSchemaSearchWeightModifiers& InWeightModifiers, TArray<FGraphSchemaSearchTextWeightInfo>& OutWeightedArrayList, FGraphSchemaSearchTextDebugInfo* InDebugInfo)"
  },
  {
    "label": "PrintSearchTextDebugInfo()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "PrintSearchTextDebugInfo(const TArray<FString>& InFilterTerms, const FEdGraphSchemaAction& InCurrentAction, const FGraphSchemaSearchTextDebugInfo* InDebugInfo)"
  }
]