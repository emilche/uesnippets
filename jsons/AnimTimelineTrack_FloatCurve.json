[
  {
    "label": "FFloatCurve",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFloatCurve"
  },
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FAnimTimelineTrack_FloatCurve",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimTimelineTrack_FloatCurve"
  },
  {
    "label": "ANIMTIMELINE_DECLARE_TRACK()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AnimTimeline / AnimTimelineTrack_Curve . h \" struct FFloatCurve ; class SBorder ; class FCurveEditor ; class FAnimTimelineTrack_FloatCurve : public FAnimTimelineTrack_Curve {)",
    "insertText": "ANIMTIMELINE_DECLARE_TRACK(FAnimTimelineTrack_FloatCurve, FAnimTimelineTrack_Curve)"
  },
  {
    "label": "FAnimTimelineTrack_FloatCurve()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FAnimTimelineTrack_FloatCurve(const FFloatCurve* InCurve, const TSharedRef<FAnimModel>& InModel)"
  },
  {
    "label": "MakeTimelineWidgetContainer()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeTimelineWidgetContainer()"
  },
  {
    "label": "GenerateContainerWidgetForOutliner()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateContainerWidgetForOutliner(const TSharedRef<SAnimOutlinerItem>& InRow)"
  },
  {
    "label": "BuildCurveTrackMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildCurveTrackMenu()"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLabel()"
  },
  {
    "label": "CanEditCurve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditCurve(int32 InCurveIndex)"
  },
  {
    "label": "CanRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRename()"
  },
  {
    "label": "AddCurveTrackButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCurveTrackButton(TSharedPtr<SHorizontalBox> InnerHorizontalBox)"
  },
  {
    "label": "GetCurveColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetCurveColor(int32 InCurveIndex)"
  },
  {
    "label": "GetCurveEditInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCurveEditInfo(int32 InCurveIndex, FName& OutName, ERawCurveTrackTypes& OutType, int32& OutCurveIndex)"
  },
  {
    "label": "SupportsCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsCopy()"
  },
  {
    "label": "GetHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetHeight()"
  },
  {
    "label": "GetFloatCurve()",
    "kind": "Method",
    "detail": "Function (const FFloatCurve*)",
    "insertText": "GetFloatCurve()"
  },
  {
    "label": "GetFName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetFName()"
  },
  {
    "label": "FSmartName()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "FSmartName(CurveName, 0)"
  },
  {
    "label": "ConvertCurveToMetaData()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } private : void)",
    "insertText": "ConvertCurveToMetaData()"
  },
  {
    "label": "ConvertMetaDataToCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertMetaDataToCurve()"
  },
  {
    "label": "RemoveCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCurve()"
  },
  {
    "label": "OnCommitCurveName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommitCurveName(const FText& InText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "GetCommentHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCommentHeight()"
  },
  {
    "label": "GetCommentSize()",
    "kind": "Method",
    "detail": "Function (FOptionalSize)",
    "insertText": "GetCommentSize()"
  },
  {
    "label": "HandleAddComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAddComment()"
  },
  {
    "label": "OnCommitCurveComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommitCurveComment(const FText& InText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "GetCommentText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCommentText()"
  },
  {
    "label": "GetCommentVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetCommentVisibility()"
  },
  {
    "label": "IsSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSelected()"
  },
  {
    "label": "GetTrackColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetTrackColor(bool bForComment)"
  }
]