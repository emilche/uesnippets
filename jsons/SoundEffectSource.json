[
  {
    "label": "FSoundEffectSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundEffectSource"
  },
  {
    "label": "FSoundEffectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundEffectBase"
  },
  {
    "label": "USoundEffectSourcePreset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundEffectSourcePreset"
  },
  {
    "label": "FSourceEffectChainEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSourceEffectChainEntry"
  },
  {
    "label": "USoundEffectSourcePresetChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundEffectSourcePresetChain"
  },
  {
    "label": "FSoundEffectSourceInitData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundEffectSourceInitData"
  },
  {
    "label": "FSoundEffectSourceInputData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundEffectSourceInputData"
  },
  {
    "label": "USoundEffectPreset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundEffectPreset"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IAudioExtensionPlugin . h \" # include \" IAudioModulation . h \" # include \" Sound / SoundEffectPreset . h \" # include \" Sound / SoundEffectBase . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / ObjectMacros . h \" # include \" SoundEffectSource . generated . h \" class FSoundEffectSource ; class FSoundEffectBase ;)",
    "insertText": "UCLASS(config = Engine, abstract, editinlinenew, BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GetMaxSupportedChannels()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxSupportedChannels()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"SourceEffect\")"
  },
  {
    "label": "FSourceEffectChainEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSourceEffectChainEntry() : Preset(nullptr) , bBypass(false)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY(EditAnywhere, Category = \"SourceEffect\")"
  },
  {
    "label": "AddReferencedEffects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedEffects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetSupportedChannelCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSupportedChannelCount()"
  },
  {
    "label": "SupportsChannelCount()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsChannelCount(const int32 InNumChannels)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (protected : # if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "FSoundEffectSourceInputData()",
    "kind": "Method",
    "detail": "Function (# endif } ; struct FSoundEffectSourceInitData { float SampleRate = 0 . 0 f ; int32 NumSourceChannels = 0 ; double AudioClock = 0 . 0 ; uint32 ParentPresetUniqueId = INDEX_NONE ; uint32 AudioDeviceId = INDEX_NONE ; } ; struct FSoundEffectSourceInputData { float CurrentVolume ; float CurrentPitch ; double AudioClock ; float CurrentPlayFraction ; FSpatializationParams SpatParams ; float* InputSourceEffectBufferPtr ; int32 NumSamples ;)",
    "insertText": "FSoundEffectSourceInputData() : CurrentVolume(0.0f) , CurrentPitch(0.0f) , AudioClock(0.0) , SpatParams(FSpatializationParams()) , InputSourceEffectBufferPtr(nullptr) , NumSamples(0)"
  },
  {
    "label": "FSoundEffectSource()",
    "kind": "Method",
    "detail": "Function (} } ; class FSoundEffectSource : public FSoundEffectBase { public : ~)",
    "insertText": "FSoundEffectSource()"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(const FSoundEffectSourceInitData& InInitData)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (InitData_Internal = InInitData ;)",
    "insertText": "if(ParentPresetUniqueId != INDEX_NONE)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (InitData_Internal . ParentPresetUniqueId = ParentPresetUniqueId ; })",
    "insertText": "Init(InitData_Internal)"
  },
  {
    "label": "GetInitializedData()",
    "kind": "Method",
    "detail": "Function (} const FSoundEffectSourceInitData&)",
    "insertText": "GetInitializedData()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (class USoundEffectPreset ; private : void)",
    "insertText": "Init(const FSoundEffectSourceInitData& InInitData)"
  }
]