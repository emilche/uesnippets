[
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_CharT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_CharT"
  },
  {
    "label": "_Traits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Traits"
  },
  {
    "label": "_Distance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Distance"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_CharU",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_CharU"
  },
  {
    "label": "_TraitsU",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_TraitsU"
  },
  {
    "label": "_DistanceU",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_DistanceU"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ITERATOR_ISTREAM_ITERATOR_H # define _LIBCPP___ITERATOR_ISTREAM_ITERATOR_H # include<__config> # include<__iterator / default_sentinel . h> # include<__iterator / iterator . h> # include<__iterator / iterator_traits . h> # include<__memory / addressof . h> # include<cstddef> # include<iosfwd> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD _LIBCPP_SUPPRESS_DEPRECATED_PUSH template <class _Tp, class _CharT = char, class _Traits = char_traits<_CharT>, class _Distance = ptrdiff_t> class _LIBCPP_TEMPLATE_VIS istream_iterator #if _LIBCPP_STD_VER <= 14 || !defined(_LIBCPP_ABI_NO_ITERATOR_BASES)"
  },
  {
    "label": "istream_iterator()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_SUPPRESS_DEPRECATED_POP public : typedef input_iterator_tag iterator_category ; typedef _Tp value_type ; typedef _Distance difference_type ; typedef const _Tp* pointer ; typedef const _Tp& reference ; typedef _CharT char_type ; typedef _Traits traits_type ; typedef basic_istream<_CharT,_Traits> istream_type ; private : istream_type* __in_stream_ ; _Tp __value_ ; public : _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR)",
    "insertText": "istream_iterator() : __in_stream_(nullptr), __value_()"
  },
  {
    "label": "istream_iterator()",
    "kind": "Method",
    "detail": "Function (} # if _LIBCPP_STD_VER> 1 7 _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "istream_iterator(default_sentinel_t) : istream_iterator()"
  },
  {
    "label": "istream_iterator()",
    "kind": "Method",
    "detail": "Function (} # endif _LIBCPP_INLINE_VISIBILITY)",
    "insertText": "istream_iterator(istream_type& __s) : __in_stream_(_VSTD::addressof(__s))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_INLINE_VISIBILITY const _Tp&)",
    "insertText": "operator()"
  },
  {
    "label": "__t()",
    "kind": "Method",
    "detail": "Function (istream_iterator)",
    "insertText": "__t(*this)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# if _LIBCPP_STD_VER> 1 7 _LIBCPP_HIDE_FROM_ABI bool)",
    "insertText": "operator(const istream_iterator& __i, default_sentinel_t)"
  }
]