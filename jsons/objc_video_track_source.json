[
  {
    "label": "ObjCVideoTrackSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ObjCVideoTrackSource"
  },
  {
    "label": "RTC_FWD_DECL_OBJC_CLASS()",
    "kind": "Method",
    "detail": "Function (# ifndef SDK_OBJC_CLASSES_VIDEO_OBJC_VIDEO_TRACK_SOURCE_H_ # define SDK_OBJC_CLASSES_VIDEO_OBJC_VIDEO_TRACK_SOURCE_H_ # import \" base / RTCVideoCapturer . h \" # include \" base / RTCMacros . h \" # include \" media / base / adapted_video_track_source . h \" # include \" rtc_base / timestamp_aligner . h \")",
    "insertText": "RTC_FWD_DECL_OBJC_CLASS(RTC_OBJC_TYPE(RTCVideoFrame))"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (@ interface RTCObjCVideoSourceAdapter : NSObject<)",
    "insertText": "RTC_OBJC_TYPE(RTCVideoCapturerDelegate)"
  },
  {
    "label": "ObjCVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (class ObjCVideoTrackSource : public rtc::AdaptedVideoTrackSource { public :)",
    "insertText": "ObjCVideoTrackSource()"
  },
  {
    "label": "ObjCVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ObjCVideoTrackSource(bool is_screencast)"
  },
  {
    "label": "ObjCVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ObjCVideoTrackSource(RTCObjCVideoSourceAdapter* adapter)"
  },
  {
    "label": "is_screencast()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "is_screencast()"
  },
  {
    "label": "needs_denoising()",
    "kind": "Method",
    "detail": "Function (absl::optional<bool>)",
    "insertText": "needs_denoising()"
  },
  {
    "label": "state()",
    "kind": "Method",
    "detail": "Function (SourceState)",
    "insertText": "state()"
  },
  {
    "label": "remote()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "remote()"
  },
  {
    "label": "OnCapturedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCapturedFrame(RTC_OBJC_TYPE(RTCVideoFrame) * frame)"
  },
  {
    "label": "OnOutputFormatRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOutputFormatRequest(int width, int height, int fps)"
  }
]