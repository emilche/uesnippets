[
  {
    "label": "FViewMatrices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewMatrices"
  },
  {
    "label": "FVirtualShadowMapProjectionShaderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualShadowMapProjectionShaderData"
  },
  {
    "label": "FPrimitiveSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneInfo"
  },
  {
    "label": "FVirtualShadowMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMap"
  },
  {
    "label": "FVirtualShadowMapArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapArray"
  },
  {
    "label": "FVirtualShadowMapArrayCacheManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapArrayCacheManager"
  },
  {
    "label": "FVirtualShadowMapPerLightCacheEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapPerLightCacheEntry"
  },
  {
    "label": "FVirtualShadowMapClipmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapClipmap"
  },
  {
    "label": "FLevelData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelData"
  },
  {
    "label": "FVirtualShadowMapClipmap()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ConvexVolume . h \" # include \" Templates / RefCounting . h \" # include \" VirtualShadowMapProjection . h \" struct FViewMatrices ; struct FVirtualShadowMapProjectionShaderData ; class FPrimitiveSceneInfo ; class FVirtualShadowMap ; class FVirtualShadowMapArray ; class FVirtualShadowMapArrayCacheManager ; class FVirtualShadowMapPerLightCacheEntry ; class FVirtualShadowMapClipmap : FRefCountedObject { public :)",
    "insertText": "FVirtualShadowMapClipmap(FVirtualShadowMapArray& VirtualShadowMapArray, const FLightSceneInfo& InLightSceneInfo, const FViewMatrices& CameraViewMatrices, FIntPoint CameraViewRectSize, const FViewInfo* InDependentView, float LightMobilityFactor)"
  },
  {
    "label": "GetViewMatrices()",
    "kind": "Method",
    "detail": "Function (FViewMatrices)",
    "insertText": "GetViewMatrices(int32 ClipmapIndex)"
  },
  {
    "label": "GetVirtualShadowMapId()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVirtualShadowMapId(int32 ClipmapIndex = 0)"
  },
  {
    "label": "GetClipmapLevel()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetClipmapLevel(int32 ClipmapIndex)"
  },
  {
    "label": "GetWorldOrigin()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetWorldOrigin()"
  },
  {
    "label": "GetBoundingSphere()",
    "kind": "Method",
    "detail": "Function (FSphere)",
    "insertText": "GetBoundingSphere()"
  },
  {
    "label": "GetCoarsePageClipmapIndexMask()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCoarsePageClipmapIndexMask()"
  },
  {
    "label": "OnPrimitiveRendered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPrimitiveRendered(const FPrimitiveSceneInfo* PrimitiveSceneInfo)"
  },
  {
    "label": "UpdateCachedFrameData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedFrameData()"
  },
  {
    "label": "GetCacheEntry()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FVirtualShadowMapPerLightCacheEntry>&)",
    "insertText": "GetCacheEntry()"
  },
  {
    "label": "ComputeBoundingVolumes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeBoundingVolumes(const FVector CameraOrigin)"
  }
]