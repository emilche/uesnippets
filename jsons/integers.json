[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef INTEGERS_H # define INTEGERS_H # ifdef HAVE_STDLIB_H # include<stdlib . h> # endif # ifdef HAVE_STDINT_H # include<stdint . h> # endif # ifdef HAVE_INTTYPES_H # include<inttypes . h> # endif # ifdef HAVE_SYS_TYPES_H # include<sys / types . h> # endif # ifdef HAVE_SYS_INT_TYPES_H # include<sys / int_types . h> # endif # ifdef HAVE_MACHINE_TYPES_H # include<machine / types . h> # endif # ifdef __cplusplus \" C \" { # endif # if !)",
    "insertText": "defined(HAVE_UINT64_T)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# elif SIZEOF_UNSIGNED_LONG_LONG = = 8 typedef unsigned long long uint64_t ; # else # define NO_64BIT_MATH 1 # endif # endif # ifndef HAVE_UINT8_T typedef unsigned char uint8_t ; # endif # ifndef HAVE_UINT16_T typedef unsigned short int uint16_t ; # endif # ifndef HAVE_UINT32_T typedef unsigned int uint32_t ; # endif # ifndef HAVE_INT32_T typedef int int32_t ; # endif # if)",
    "insertText": "defined(NO_64BIT_MATH) && defined(HAVE_CONFIG_H)"
  },
  {
    "label": "make64()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "make64(uint32_t high, uint32_t low)"
  },
  {
    "label": "high32()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "high32(uint64_t value)"
  },
  {
    "label": "low32()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "low32(uint64_t value)"
  },
  {
    "label": "PUT_32()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef ALIGNMENT_32BIT_REQUIRED # ifdef WORDS_BIGENDIAN # define)",
    "insertText": "PUT_32(addr, value)"
  },
  {
    "label": "GET_32()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "GET_32(addr) \\ ((((unsigned char *)(addr))[0] << 24) | \\ (((unsigned char *)(addr))[1] << 16) | \\ (((unsigned char *)(addr))[2] << 8) | (((unsigned char *)(addr))[3])) #else #define PUT_32(addr, value)"
  }
]