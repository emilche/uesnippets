[
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "SExpandableArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SExpandableArea"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "SetExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExpanded( bool bExpanded )"
  },
  {
    "label": "SetExpanded_Animated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExpanded_Animated( bool bExpanded )"
  },
  {
    "label": "SetMaxHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxHeight(float InMaxHeight)"
  },
  {
    "label": "SetBorderBackgroundColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBorderBackgroundColor(const FSlateColor& InBorderColor)"
  },
  {
    "label": "SetHeaderPadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeaderPadding(FMargin InHeaderPadding)"
  },
  {
    "label": "SetAreaPadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAreaPadding(FMargin InAreaPadding)"
  },
  {
    "label": "SetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStyle(const FExpandableAreaStyle* InStyle)"
  },
  {
    "label": "InvalidateStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateStyle()"
  },
  {
    "label": "InvalidateBorderBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateBorderBrush()"
  },
  {
    "label": "SetBorderBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBorderBrush(const FSlateBrush* InBorderBrush)"
  },
  {
    "label": "ConstructHeaderWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructHeaderWidget( const FArguments& InArgs, TSharedRef<SWidget> HeaderContent )"
  },
  {
    "label": "OnHeaderClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnHeaderClicked()"
  },
  {
    "label": "OnToggleContentVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleContentVisibility()"
  }
]