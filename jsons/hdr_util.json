[
  {
    "label": "Colour",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Colour"
  },
  {
    "label": "MasteringMetadata",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MasteringMetadata"
  },
  {
    "label": "PrimaryChromaticity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PrimaryChromaticity"
  },
  {
    "label": "Vp9CodecFeatures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Vp9CodecFeatures"
  },
  {
    "label": "Vp9CodecFeatures()",
    "kind": "Method",
    "detail": "Function (# ifndef LIBWEBM_COMMON_HDR_UTIL_H_ # define LIBWEBM_COMMON_HDR_UTIL_H_ # include<stdint . h> # include<memory> # include \" mkvmuxer / mkvmuxer . h \" namespace mkvparser { struct Colour ; struct MasteringMetadata ; struct PrimaryChromaticity ; } namespace libwebm { struct Vp9CodecFeatures { const int kValueNotPresent ;)",
    "insertText": "Vp9CodecFeatures() : profile(kValueNotPresent), level(kValueNotPresent), bit_depth(kValueNotPresent), chroma_subsampling(kValueNotPresent)"
  },
  {
    "label": "Vp9CodecFeatures()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "Vp9CodecFeatures()"
  },
  {
    "label": "CopyPrimaryChromaticity()",
    "kind": "Method",
    "detail": "Function (} int profile ; int level ; int bit_depth ; int chroma_subsampling ; } ; typedef std::unique_ptr<mkvmuxer::PrimaryChromaticity> PrimaryChromaticityPtr ; bool)",
    "insertText": "CopyPrimaryChromaticity(const mkvparser::PrimaryChromaticity& parser_pc, PrimaryChromaticityPtr* muxer_pc)"
  },
  {
    "label": "MasteringMetadataValuePresent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MasteringMetadataValuePresent(double value)"
  },
  {
    "label": "CopyMasteringMetadata()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyMasteringMetadata(const mkvparser::MasteringMetadata& parser_mm, mkvmuxer::MasteringMetadata* muxer_mm)"
  },
  {
    "label": "ColourValuePresent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ColourValuePresent(long long value)"
  },
  {
    "label": "CopyColour()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyColour(const mkvparser::Colour& parser_colour, mkvmuxer::Colour* muxer_colour)"
  },
  {
    "label": "ParseVpxCodecPrivate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseVpxCodecPrivate(const uint8_t* private_data, int32_t length, Vp9CodecFeatures* features)"
  }
]