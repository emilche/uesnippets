[
  {
    "label": "RetransmissionErrorCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RetransmissionErrorCounter"
  },
  {
    "label": "RetransmissionErrorCounter()",
    "kind": "Method",
    "detail": "Function (# ifndef NET_DCSCTP_TX_RETRANSMISSION_ERROR_COUNTER_H_ # define NET_DCSCTP_TX_RETRANSMISSION_ERROR_COUNTER_H_ # include<functional> # include<string> # include<utility> # include \" absl / strings / string_view . h \" # include \" net / dcsctp / public / dcsctp_options . h \" namespace dcsctp { class RetransmissionErrorCounter { public :)",
    "insertText": "RetransmissionErrorCounter(absl::string_view log_prefix, const DcSctpOptions& options) : log_prefix_(std::string(log_prefix) + \"rtx-errors: \"), limit_(options.max_retransmissions)"
  },
  {
    "label": "Increment()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Increment(absl::string_view reason)"
  },
  {
    "label": "IsExhausted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExhausted()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Clear()"
  },
  {
    "label": "value()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "value()"
  }
]