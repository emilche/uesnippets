[
  {
    "label": "FFreeTypeLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFreeTypeLibrary"
  },
  {
    "label": "FFreeTypeFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFreeTypeFace"
  },
  {
    "label": "FFTStreamHandler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFTStreamHandler"
  },
  {
    "label": "FFreeTypeGlyphCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFreeTypeGlyphCache"
  },
  {
    "label": "FCachedGlyphData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedGlyphData"
  },
  {
    "label": "FFreeTypeAdvanceCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFreeTypeAdvanceCache"
  },
  {
    "label": "FFreeTypeKerningCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFreeTypeKerningCache"
  },
  {
    "label": "FKerningPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKerningPair"
  },
  {
    "label": "FFreeTypeCacheDirectory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFreeTypeCacheDirectory"
  },
  {
    "label": "FFontKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFontKey"
  },
  {
    "label": "IsFaceEligibleForSdf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFaceEligibleForSdf(FT_Face InFace)"
  },
  {
    "label": "IsGlyphEligibleForSdf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGlyphEligibleForSdf(FT_GlyphSlot InGlyph)"
  },
  {
    "label": "Floor26Dot6()",
    "kind": "Method",
    "detail": "Function (FT_F26Dot6)",
    "insertText": "Floor26Dot6(const FT_F26Dot6 InValue)"
  },
  {
    "label": "Ceil26Dot6()",
    "kind": "Method",
    "detail": "Function (FT_F26Dot6)",
    "insertText": "Ceil26Dot6(const FT_F26Dot6 InValue)"
  },
  {
    "label": "Round26Dot6()",
    "kind": "Method",
    "detail": "Function (FT_F26Dot6)",
    "insertText": "Round26Dot6(const FT_F26Dot6 InValue)"
  },
  {
    "label": "Determine26Dot6Ppem()",
    "kind": "Method",
    "detail": "Function (FT_F26Dot6)",
    "insertText": "Determine26Dot6Ppem(const float InFontSize, const float InFontScale, const bool InRoundPpem)"
  },
  {
    "label": "DetermineEmScale()",
    "kind": "Method",
    "detail": "Function (FT_Fixed)",
    "insertText": "DetermineEmScale(const uint16 InEmSize, const FT_F26Dot6 InPpem)"
  },
  {
    "label": "DeterminePpemAndEmScale()",
    "kind": "Method",
    "detail": "Function (FT_Fixed)",
    "insertText": "DeterminePpemAndEmScale(const uint16 InEmSize, const float InFontSize, const float InFontScale, const bool InRoundPpem)"
  },
  {
    "label": "ComputeFontPixelSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ComputeFontPixelSize(float InFontSize, float InFontScale)"
  },
  {
    "label": "ApplySizeAndScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySizeAndScale(FT_Face InFace, const float InFontSize, const float InFontScale)"
  },
  {
    "label": "ApplySizeAndScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySizeAndScale(FT_Face InFace, const uint32 RequiredFontPixelSize)"
  },
  {
    "label": "LoadGlyph()",
    "kind": "Method",
    "detail": "Function (FT_Error)",
    "insertText": "LoadGlyph(FT_Face InFace, const uint32 InGlyphIndex, const int32 InLoadFlags, const float InFontSize, const float InFontScale)"
  },
  {
    "label": "LoadGlyph()",
    "kind": "Method",
    "detail": "Function (FT_Error)",
    "insertText": "LoadGlyph(FT_Face InFace, const uint32 InGlyphIndex, const int32 InLoadFlags, const uint32 RequiredFontPixelSize)"
  },
  {
    "label": "GetHeight()",
    "kind": "Method",
    "detail": "Function (FT_Pos)",
    "insertText": "GetHeight(FT_Face InFace, const EFontLayoutMethod InLayoutMethod)"
  },
  {
    "label": "GetScaledHeight()",
    "kind": "Method",
    "detail": "Function (FT_Pos)",
    "insertText": "GetScaledHeight(FT_Face InFace, const EFontLayoutMethod InLayoutMethod)"
  },
  {
    "label": "GetAscender()",
    "kind": "Method",
    "detail": "Function (FT_Pos)",
    "insertText": "GetAscender(FT_Face InFace, const EFontLayoutMethod InLayoutMethod)"
  },
  {
    "label": "GetDescender()",
    "kind": "Method",
    "detail": "Function (FT_Pos)",
    "insertText": "GetDescender(FT_Face InFace, const EFontLayoutMethod InLayoutMethod)"
  },
  {
    "label": "GetBitmapAtlasScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetBitmapAtlasScale(FT_Face InFace)"
  },
  {
    "label": "GetBitmapRenderScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetBitmapRenderScale(FT_Face InFace)"
  },
  {
    "label": "FFreeTypeLibrary()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FFreeTypeLibrary()"
  },
  {
    "label": "FFreeTypeLibrary()",
    "kind": "Method",
    "detail": "Function (copyable)",
    "insertText": "FFreeTypeLibrary(const FFreeTypeLibrary&)"
  },
  {
    "label": "FFreeTypeFace()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FFreeTypeFace(const FFreeTypeLibrary* InFTLibrary, FFontFaceDataConstRef InMemory, const int32 InFaceIndex, const EFontLayoutMethod InLayoutMethod)"
  },
  {
    "label": "FailAsyncLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FailAsyncLoad()"
  },
  {
    "label": "CompleteAsyncLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteAsyncLoad(const FFreeTypeLibrary* InFTLibrary, FFontFaceDataConstRef InMemory, const int32 InFaceIndex)"
  },
  {
    "label": "GetAvailableSubFaces()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetAvailableSubFaces(const FFreeTypeLibrary* InFTLibrary, FFontFaceDataConstRef InMemory)"
  },
  {
    "label": "GetAvailableSubFaces()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetAvailableSubFaces(const FFreeTypeLibrary* InFTLibrary, const FString& InFilename)"
  },
  {
    "label": "ParseAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseAttributes()"
  },
  {
    "label": "FFreeTypeFace()",
    "kind": "Method",
    "detail": "Function (copyable)",
    "insertText": "FFreeTypeFace(const FFreeTypeFace&)"
  },
  {
    "label": "CloseFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseFile(FT_Stream InStream)"
  },
  {
    "label": "ReadData()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "ReadData(FT_Stream InStream, unsigned long InOffset, unsigned char* InBuffer, unsigned long InCount)"
  },
  {
    "label": "FFreeTypeGlyphCache()",
    "kind": "Method",
    "detail": "Function (WITH_FREETYPE)",
    "insertText": "FFreeTypeGlyphCache(FT_Face InFace, const int32 InLoadFlags, const float InFontSize, const float InFontScale)"
  },
  {
    "label": "FindOrCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindOrCache(const uint32 InGlyphIndex, FCachedGlyphData& OutCachedGlyphData)"
  },
  {
    "label": "FFreeTypeAdvanceCache()",
    "kind": "Method",
    "detail": "Function (WITH_FREETYPE)",
    "insertText": "FFreeTypeAdvanceCache()"
  },
  {
    "label": "FindOrCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindOrCache(const uint32 InGlyphIndex, FT_Fixed& OutCachedAdvance)"
  },
  {
    "label": "FlushCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCache()"
  },
  {
    "label": "FFreeTypeKerningCache()",
    "kind": "Method",
    "detail": "Function (WITH_FREETYPE)",
    "insertText": "FFreeTypeKerningCache(FT_Face InFace, const int32 InKerningFlags, const float InFontSize, const float InFontScale)"
  },
  {
    "label": "FindOrCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindOrCache(const uint32 InFirstGlyphIndex, const uint32 InSecondGlyphIndex, FT_Vector& OutKerning)"
  },
  {
    "label": "FFreeTypeCacheDirectory()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FFreeTypeCacheDirectory()"
  },
  {
    "label": "GetGlyphCache()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FFreeTypeGlyphCache>)",
    "insertText": "GetGlyphCache(FT_Face InFace, const int32 InLoadFlags, const float InFontSize, const float InFontScale)"
  },
  {
    "label": "GetAdvanceCache()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FFreeTypeAdvanceCache>)",
    "insertText": "GetAdvanceCache(FT_Face InFace, const int32 InLoadFlags, const float InFontSize, const float InFontScale)"
  },
  {
    "label": "GetKerningCache()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFreeTypeKerningCache>)",
    "insertText": "GetKerningCache(FT_Face InFace, const int32 InKerningFlags, const float InFontSize, const float InFontScale)"
  },
  {
    "label": "FlushCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCache()"
  }
]