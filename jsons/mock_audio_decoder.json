[
  {
    "label": "MockAudioDecoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockAudioDecoder"
  },
  {
    "label": "MockAudioDecoder()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_MOCK_AUDIO_DECODER_H_ # define TEST_MOCK_AUDIO_DECODER_H_ # include \" api / audio_codecs / audio_decoder . h \" # include \" test / gmock . h \" namespace webrtc { class MockAudioDecoder : public AudioDecoder { public :)",
    "insertText": "MockAudioDecoder()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Die, ())"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, DecodeInternal, (const uint8_t*, size_t, int, int16_t*, SpeechType*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, HasDecodePlc, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, DecodePlc, (size_t, int16_t*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Reset, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, ErrorCode, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, PacketDuration, (const uint8_t*, size_t), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, Channels, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, SampleRateHz, (), (const, override))"
  }
]