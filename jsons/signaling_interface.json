[
  {
    "label": "SignalingInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SignalingInterface"
  },
  {
    "label": "SignalingInterface()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_TOOLS_DATA_CHANNEL_BENCHMARK_SIGNALING_INTERFACE_H_ # define RTC_TOOLS_DATA_CHANNEL_BENCHMARK_SIGNALING_INTERFACE_H_ # include<memory> # include \" api / jsep . h \" namespace webrtc { class SignalingInterface { public : ~)",
    "insertText": "SignalingInterface()"
  },
  {
    "label": "SendIceCandidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendIceCandidate(const webrtc::IceCandidateInterface* candidate)"
  },
  {
    "label": "SendDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendDescription(const webrtc::SessionDescriptionInterface* sdp)"
  },
  {
    "label": "OnRemoteDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoteDescription(std::function<void(std::unique_ptr<webrtc::SessionDescriptionInterface> sdp)> callback)"
  },
  {
    "label": "OnIceCandidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnIceCandidate(std::function<void(std::unique_ptr<webrtc::IceCandidateInterface> candidate)> callback)"
  }
]