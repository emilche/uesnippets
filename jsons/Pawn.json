[
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "APhysicsVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APhysicsVolume"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerState"
  },
  {
    "label": "FDebugDisplayInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugDisplayInfo"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "UDamageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDamageType"
  },
  {
    "label": "UInputComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputComponent"
  },
  {
    "label": "UPawnMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPawnMovementComponent"
  },
  {
    "label": "UPawnNoiseEmitterComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPawnNoiseEmitterComponent"
  },
  {
    "label": "UPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlayer"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "FDamageEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDamageEvent"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogDamage, Warning, All)"
  },
  {
    "label": "PawnMakeNoise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PawnMakeNoise(float Loudness, FVector NoiseLocation, bool bUseNoiseMakerLocation = true, AActor* NoiseMaker = nullptr)"
  },
  {
    "label": "SetPlayerState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlayerState(APlayerState* NewPlayerState)"
  },
  {
    "label": "TurnOff()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TurnOff()"
  },
  {
    "label": "PawnStartFire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PawnStartFire(uint8 FireModeNum = 0)"
  },
  {
    "label": "SetRemoteViewPitch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRemoteViewPitch(float NewRemoteViewPitch)"
  },
  {
    "label": "ReachedDesiredRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReachedDesiredRotation()"
  },
  {
    "label": "OnRep_Controller()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_Controller()"
  },
  {
    "label": "OnRep_PlayerState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_PlayerState()"
  },
  {
    "label": "SetCanAffectNavigationGeneration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCanAffectNavigationGeneration(bool bNewValue, bool bForceUpdate = false)"
  },
  {
    "label": "UpdateNavAgent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNavAgent()"
  },
  {
    "label": "SetPlayerDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlayerDefaults()"
  },
  {
    "label": "RecalculateBaseEyeHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecalculateBaseEyeHeight()"
  },
  {
    "label": "PossessedBy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PossessedBy(AController* NewController)"
  },
  {
    "label": "ReceivePossessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivePossessed(AController* NewController)"
  },
  {
    "label": "UnPossessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnPossessed()"
  },
  {
    "label": "ReceiveUnpossessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveUnpossessed(AController* OldController)"
  },
  {
    "label": "ReceiveControllerChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveControllerChanged(AController* OldController, AController* NewController)"
  },
  {
    "label": "NotifyControllerChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyControllerChanged()"
  },
  {
    "label": "ReceiveRestarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveRestarted()"
  },
  {
    "label": "NotifyRestarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyRestarted()"
  },
  {
    "label": "Restart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Restart()"
  },
  {
    "label": "PawnClientRestart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PawnClientRestart()"
  },
  {
    "label": "DispatchRestart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchRestart(bool bCallClientRestart)"
  },
  {
    "label": "FaceRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FaceRotation(FRotator NewControlRotation, float DeltaTime = 0.f)"
  },
  {
    "label": "DetachFromControllerPendingDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachFromControllerPendingDestroy()"
  },
  {
    "label": "SpawnDefaultController()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnDefaultController()"
  },
  {
    "label": "DestroyPlayerInputComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPlayerInputComponent()"
  },
  {
    "label": "AddMovementInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMovementInput(FVector WorldDirection, float ScaleValue = 1.0f, bool bForce = false)"
  },
  {
    "label": "ConsumeMovementInputVector()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConsumeMovementInputVector()"
  },
  {
    "label": "AddControllerPitchInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddControllerPitchInput(float Val)"
  },
  {
    "label": "AddControllerYawInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddControllerYawInput(float Val)"
  },
  {
    "label": "AddControllerRollInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddControllerRollInput(float Val)"
  },
  {
    "label": "Internal_AddMovementInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Internal_AddMovementInput(FVector WorldAccel, bool bForce = false)"
  },
  {
    "label": "Internal_ConsumeMovementInputVector()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "Internal_ConsumeMovementInputVector()"
  },
  {
    "label": "MoveIgnoreActorAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveIgnoreActorAdd(AActor* ActorToIgnore)"
  },
  {
    "label": "MoveIgnoreActorRemove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveIgnoreActorRemove(AActor* ActorToIgnore)"
  }
]