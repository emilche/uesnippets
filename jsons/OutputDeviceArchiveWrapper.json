[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FOutputDeviceArchiveWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDeviceArchiveWrapper"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FOutputDeviceArchiveWrapper()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Logging / LogVerbosity . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / OutputDevice . h \" class FArchive ; class FOutputDeviceArchiveWrapper : public FOutputDevice { public :)",
    "insertText": "FOutputDeviceArchiveWrapper(FArchive* InArchive) : LogAr(InArchive)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Flush()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* Data, ELogVerbosity::Type Verbosity, const class FName& Category)"
  }
]