[
  {
    "label": "DATASMITHCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHCORE_API"
  },
  {
    "label": "FDatasmithMeshImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithMeshImpl"
  },
  {
    "label": "FDatasmithMesh()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Math / Box . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" Misc / SecureHash . h \" class FDatasmithMesh { public :)",
    "insertText": "FDatasmithMesh()"
  },
  {
    "label": "FDatasmithMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDatasmithMesh(const FDatasmithMesh& Other)"
  },
  {
    "label": "FDatasmithMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDatasmithMesh(FDatasmithMesh&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FDatasmithMesh&)",
    "insertText": "operator(const FDatasmithMesh& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FDatasmithMesh&)",
    "insertText": "operator(FDatasmithMesh&& Other)"
  },
  {
    "label": "CalculateHash()",
    "kind": "Method",
    "detail": "Function (FMD5Hash)",
    "insertText": "CalculateHash()"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(const TCHAR* InName)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetName()"
  },
  {
    "label": "SetFacesCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFacesCount(int32 NumFaces)"
  },
  {
    "label": "GetFacesCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetFacesCount()"
  },
  {
    "label": "SetFace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFace(int32 Index, int32 Vertex1, int32 Vertex2, int32 Vertex3, int32 MaterialId = 0)"
  },
  {
    "label": "GetFace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFace(int32 Index, int32& Vertex1, int32& Vertex2, int32& Vertex3, int32& MaterialId)"
  },
  {
    "label": "SetFaceSmoothingMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFaceSmoothingMask(int32 Index, uint32 SmoothingMask)"
  },
  {
    "label": "GetFaceSmoothingMask()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetFaceSmoothingMask(int32 Index)"
  },
  {
    "label": "GetMaterialsCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaterialsCount()"
  },
  {
    "label": "IsMaterialIdUsed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaterialIdUsed(int32 MaterialId)"
  },
  {
    "label": "SetVerticesCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVerticesCount(int32 NumVerts)"
  },
  {
    "label": "GetVerticesCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVerticesCount()"
  },
  {
    "label": "SetVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVertex(int32 Index, float X, float Y, float Z)"
  },
  {
    "label": "GetVertex()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "GetVertex(int32 Index)"
  },
  {
    "label": "SetNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNormal(int32 Index, float X, float Y, float Z)"
  },
  {
    "label": "GetNormal()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "GetNormal(int32 Index)"
  },
  {
    "label": "SetUVChannelsCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUVChannelsCount(int32 ChannelCount)"
  },
  {
    "label": "AddUVChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUVChannel()"
  },
  {
    "label": "RemoveUVChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUVChannel()"
  },
  {
    "label": "GetUVChannelsCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetUVChannelsCount()"
  },
  {
    "label": "SetUVCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUVCount(int32 Channel, int32 NumVerts)"
  },
  {
    "label": "GetUVCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetUVCount(int32 Channel)"
  },
  {
    "label": "SetUV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUV(int32 Channel, int32 Index, double U, double V)"
  },
  {
    "label": "GetHashForUVChannel()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetHashForUVChannel(int32 Channel)"
  },
  {
    "label": "GetUV()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetUV(int32 Channel, int32 Index)"
  },
  {
    "label": "SetFaceUV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFaceUV(int32 Index, int32 Channel, int32 Vertex1, int32 Vertex2, int32 Vertex3)"
  },
  {
    "label": "GetFaceUV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFaceUV(int32 Index, int32 Channel, int32& Vertex1, int32& Vertex2, int32& Vertex3)"
  },
  {
    "label": "GetVertexColorCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVertexColorCount()"
  },
  {
    "label": "SetVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVertexColor(int32 Index, const FColor& Color)"
  },
  {
    "label": "GetVertexColor()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "GetVertexColor(int32 Index)"
  },
  {
    "label": "SetLightmapSourceUVChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightmapSourceUVChannel(int32 Channel)"
  },
  {
    "label": "GetLightmapSourceUVChannel()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLightmapSourceUVChannel()"
  },
  {
    "label": "AddLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLOD(const FDatasmithMesh& InLODMesh)"
  },
  {
    "label": "AddLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLOD(FDatasmithMesh&& InLODMesh)"
  },
  {
    "label": "GetLODsCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLODsCount()"
  },
  {
    "label": "GetLOD()",
    "kind": "Method",
    "detail": "Function (FDatasmithMesh*)",
    "insertText": "GetLOD(int32 Index)"
  },
  {
    "label": "ComputeArea()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ComputeArea()"
  },
  {
    "label": "GetExtents()",
    "kind": "Method",
    "detail": "Function (FBox3f)",
    "insertText": "GetExtents()"
  }
]