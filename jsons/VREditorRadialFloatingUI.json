[
  {
    "label": "UVREditorBaseUserWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorBaseUserWidget"
  },
  {
    "label": "UVREditorUISystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorUISystem"
  },
  {
    "label": "AVREditorRadialFloatingUI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AVREditorRadialFloatingUI"
  },
  {
    "label": "UVREditorWidgetComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorWidgetComponent"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "SMultiBoxWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiBoxWidget"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Widgets / SWidget . h \" # include \" VREditorBaseActor . h \" # include \" Widgets / Input / SButton . h \" # include \" VREditorRadialFloatingUI . generated . h \" class UVREditorBaseUserWidget ; class UVREditorUISystem ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: AVREditorRadialFloatingUI()"
  },
  {
    "label": "PostActorCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostActorCreated()"
  },
  {
    "label": "SetSlateWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSlateWidget(class UVREditorUISystem& InitOwner, const TSharedRef<SWidget>& InitSlateWidget, const FIntPoint InitResolution, const float InitScale, const EDockedTo InitDockedTo)"
  },
  {
    "label": "IsUIVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUIVisible()"
  },
  {
    "label": "ShowUI()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ShowUI(const bool bShow, const bool bAllowFading = true, const float InitFadeDelay = 0.0f, const bool bPlaySound = true)"
  },
  {
    "label": "GetWidgetComponents()",
    "kind": "Method",
    "detail": "Function (const TArray<class UVREditorWidgetComponent*>&)",
    "insertText": "GetWidgetComponents()"
  },
  {
    "label": "GetScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScale()"
  },
  {
    "label": "SetScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScale(const float NewSize)"
  },
  {
    "label": "SetTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransform(const FTransform& Transform)"
  },
  {
    "label": "Destroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroyed()"
  },
  {
    "label": "IsEditorOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditorOnly()"
  },
  {
    "label": "SetupWidgetComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupWidgetComponent(TSharedPtr<SWidget> SlateWidget)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetNumberOfEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumberOfEntries(const float InNumberOfEntries)"
  },
  {
    "label": "SetButtonTypeOverride()",
    "kind": "Method",
    "detail": "Function (NumberOfEntries = InNumberOfEntries ; } ; void)",
    "insertText": "SetButtonTypeOverride(const FName InButtonTypeOverride)"
  },
  {
    "label": "SetCurrentMenuWidget()",
    "kind": "Method",
    "detail": "Function (ButtonTypeOverride = InButtonTypeOverride ; } void)",
    "insertText": "SetCurrentMenuWidget(const TSharedPtr<class SMultiBoxWidget> InWidget)"
  },
  {
    "label": "GetCurrentMenuWidget()",
    "kind": "Method",
    "detail": "Function (MenuMultiBoxWidget = InWidget ; } const TSharedPtr<class SMultiBoxWidget>)",
    "insertText": "GetCurrentMenuWidget()"
  },
  {
    "label": "SimulateLeftClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SimulateLeftClick()"
  },
  {
    "label": "GetCurrentlyHoveredButton()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<SButton>&)",
    "insertText": "GetCurrentlyHoveredButton()"
  },
  {
    "label": "UpdateCentralWidgetComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCentralWidgetComponent(const TSharedPtr<SWidget>& NewCentralSlateWidget)"
  },
  {
    "label": "CalculateAnimatedScale()",
    "kind": "Method",
    "detail": "Function (protected : FVector)",
    "insertText": "CalculateAnimatedScale()"
  },
  {
    "label": "SetCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollision(const ECollisionEnabled::Type InCollisionType, const ECollisionResponse InCollisionResponse, const ECollisionChannel InCollisionChannel)"
  },
  {
    "label": "UpdateFadingState()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateFadingState(const float DeltaTime)"
  }
]