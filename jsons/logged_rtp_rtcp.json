[
  {
    "label": "LoggedRtpPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtpPacket"
  },
  {
    "label": "LoggedRtpPacketIncoming",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtpPacketIncoming"
  },
  {
    "label": "LoggedRtpPacketOutgoing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtpPacketOutgoing"
  },
  {
    "label": "LoggedRtcpPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacket"
  },
  {
    "label": "LoggedRtcpPacketIncoming",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketIncoming"
  },
  {
    "label": "LoggedRtcpPacketOutgoing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketOutgoing"
  },
  {
    "label": "LoggedRtcpPacketReceiverReport",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketReceiverReport"
  },
  {
    "label": "LoggedRtcpPacketSenderReport",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketSenderReport"
  },
  {
    "label": "LoggedRtcpPacketExtendedReports",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketExtendedReports"
  },
  {
    "label": "LoggedRtcpPacketRemb",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketRemb"
  },
  {
    "label": "LoggedRtcpPacketNack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketNack"
  },
  {
    "label": "LoggedRtcpPacketFir",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketFir"
  },
  {
    "label": "LoggedRtcpPacketPli",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketPli"
  },
  {
    "label": "LoggedRtcpPacketTransportFeedback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketTransportFeedback"
  },
  {
    "label": "LoggedRtcpPacketLossNotification",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketLossNotification"
  },
  {
    "label": "LoggedRtcpPacketBye",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedRtcpPacketBye"
  },
  {
    "label": "LoggedRtpPacket()",
    "kind": "Method",
    "detail": "Function (# ifndef LOGGING_RTC_EVENT_LOG_EVENTS_LOGGED_RTP_RTCP_H_ # define LOGGING_RTC_EVENT_LOG_EVENTS_LOGGED_RTP_RTCP_H_ # include<string> # include<vector> # include \" absl / strings / string_view . h \" # include \" api / rtp_headers . h \" # include \" api / units / timestamp . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / bye . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / extended_reports . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / fir . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / loss_notification . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / nack . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / pli . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / receiver_report . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / remb . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / sender_report . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / transport_feedback . h \" namespace webrtc { struct LoggedRtpPacket {)",
    "insertText": "LoggedRtpPacket(Timestamp timestamp, RTPHeader header, size_t header_length, size_t total_length) : timestamp(timestamp), header(header), header_length(header_length), total_length(total_length)"
  },
  {
    "label": "log_time_us()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "log_time_us()"
  },
  {
    "label": "log_time_ms()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "log_time_ms()"
  },
  {
    "label": "log_time()",
    "kind": "Method",
    "detail": "Function (} Timestamp)",
    "insertText": "log_time()"
  },
  {
    "label": "LoggedRtcpPacket()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "LoggedRtcpPacket(Timestamp timestamp, absl::string_view packet) : timestamp(timestamp), raw_data(packet.size())"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memcpy(raw_data.data(), packet.data(), packet.size())"
  },
  {
    "label": "LoggedRtcpPacket()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "LoggedRtcpPacket(const LoggedRtcpPacket& rhs)"
  },
  {
    "label": "LoggedRtcpPacket()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "LoggedRtcpPacket()"
  },
  {
    "label": "LoggedRtcpPacketIncoming()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "LoggedRtcpPacketIncoming(Timestamp timestamp, absl::string_view packet) : rtcp(timestamp, packet)"
  },
  {
    "label": "LoggedRtcpPacketOutgoing()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "LoggedRtcpPacketOutgoing(Timestamp timestamp, absl::string_view packet) : rtcp(timestamp, packet)"
  },
  {
    "label": "LoggedRtcpPacketReceiverReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoggedRtcpPacketReceiverReport(Timestamp timestamp, const rtcp::ReceiverReport& rr) : timestamp(timestamp), rr(rr)"
  },
  {
    "label": "LoggedRtcpPacketSenderReport()",
    "kind": "Method",
    "detail": "Function (rtcp::ReceiverReport rr ; } ; struct LoggedRtcpPacketSenderReport {)",
    "insertText": "LoggedRtcpPacketSenderReport()"
  },
  {
    "label": "LoggedRtcpPacketSenderReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoggedRtcpPacketSenderReport(Timestamp timestamp, const rtcp::SenderReport& sr) : timestamp(timestamp), sr(sr)"
  },
  {
    "label": "LoggedRtcpPacketExtendedReports()",
    "kind": "Method",
    "detail": "Function (rtcp::SenderReport sr ; } ; struct LoggedRtcpPacketExtendedReports {)",
    "insertText": "LoggedRtcpPacketExtendedReports()"
  },
  {
    "label": "LoggedRtcpPacketRemb()",
    "kind": "Method",
    "detail": "Function (rtcp::ExtendedReports xr ; } ; struct LoggedRtcpPacketRemb {)",
    "insertText": "LoggedRtcpPacketRemb()"
  },
  {
    "label": "LoggedRtcpPacketRemb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoggedRtcpPacketRemb(Timestamp timestamp, const rtcp::Remb& remb) : timestamp(timestamp), remb(remb)"
  },
  {
    "label": "LoggedRtcpPacketNack()",
    "kind": "Method",
    "detail": "Function (rtcp::Remb remb ; } ; struct LoggedRtcpPacketNack {)",
    "insertText": "LoggedRtcpPacketNack()"
  },
  {
    "label": "LoggedRtcpPacketNack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoggedRtcpPacketNack(Timestamp timestamp, const rtcp::Nack& nack) : timestamp(timestamp), nack(nack)"
  },
  {
    "label": "LoggedRtcpPacketFir()",
    "kind": "Method",
    "detail": "Function (rtcp::Nack nack ; } ; struct LoggedRtcpPacketFir {)",
    "insertText": "LoggedRtcpPacketFir()"
  },
  {
    "label": "LoggedRtcpPacketPli()",
    "kind": "Method",
    "detail": "Function (rtcp::Fir fir ; } ; struct LoggedRtcpPacketPli {)",
    "insertText": "LoggedRtcpPacketPli()"
  },
  {
    "label": "LoggedRtcpPacketTransportFeedback()",
    "kind": "Method",
    "detail": "Function (rtcp::Pli pli ; } ; struct LoggedRtcpPacketTransportFeedback {)",
    "insertText": "LoggedRtcpPacketTransportFeedback() : transport_feedback( true, true)"
  },
  {
    "label": "LoggedRtcpPacketTransportFeedback()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "LoggedRtcpPacketTransportFeedback(Timestamp timestamp, const rtcp::TransportFeedback& transport_feedback) : timestamp(timestamp), transport_feedback(transport_feedback)"
  },
  {
    "label": "LoggedRtcpPacketLossNotification()",
    "kind": "Method",
    "detail": "Function (rtcp::TransportFeedback transport_feedback ; } ; struct LoggedRtcpPacketLossNotification {)",
    "insertText": "LoggedRtcpPacketLossNotification()"
  },
  {
    "label": "LoggedRtcpPacketLossNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoggedRtcpPacketLossNotification(Timestamp timestamp, const rtcp::LossNotification& loss_notification) : timestamp(timestamp), loss_notification(loss_notification)"
  },
  {
    "label": "LoggedRtcpPacketBye()",
    "kind": "Method",
    "detail": "Function (rtcp::LossNotification loss_notification ; } ; struct LoggedRtcpPacketBye {)",
    "insertText": "LoggedRtcpPacketBye()"
  }
]