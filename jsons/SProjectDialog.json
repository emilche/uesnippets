[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SProjectBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectBrowser"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWidgetSwitcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidgetSwitcher"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FTemplateCategory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTemplateCategory"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SProjectDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectDialog"
  },
  {
    "label": "templates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "templates"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "types"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "types"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, EProjectDialogModeMode Mode)"
  },
  {
    "label": "FindTemplateProjects()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FTemplateItem>>>)",
    "insertText": "FindTemplateProjects()"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "T()"
  },
  {
    "label": "OnMajorTemplateCategorySelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMajorTemplateCategorySelectionChanged(TSharedPtr<FTemplateCategory> Item, ESelectInfo::Type SelectType)"
  },
  {
    "label": "ConstructMajorCategoryTableRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "ConstructMajorCategoryTableRow(TSharedPtr<FTemplateCategory> Item, const TSharedRef<STableViewBase>& TableView)"
  },
  {
    "label": "PopulateTemplateCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateTemplateCategories()"
  },
  {
    "label": "OnCurrentProjectFilePathChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCurrentProjectFilePathChanged(const FText& InValue)"
  },
  {
    "label": "OnCurrentProjectFileNameChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCurrentProjectFileNameChanged(const FText& InValue)"
  },
  {
    "label": "HandlePathBrowseButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandlePathBrowseButtonClicked()"
  },
  {
    "label": "UpdateProjectFileValidity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateProjectFileValidity()"
  },
  {
    "label": "MakeNewProjectDialogButtons()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeNewProjectDialogButtons()"
  },
  {
    "label": "MakeOpenProjectDialogButtons()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeOpenProjectDialogButtons()"
  },
  {
    "label": "MakeTemplateProjectView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeTemplateProjectView()"
  },
  {
    "label": "MakeRecentProjectsView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeRecentProjectsView()"
  },
  {
    "label": "MakeHybridView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeHybridView(EProjectDialogModeMode Mode)"
  },
  {
    "label": "MakeProjectOptionsWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeProjectOptionsWidget()"
  },
  {
    "label": "MakeRecentProjectsTile()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeRecentProjectsTile()"
  },
  {
    "label": "MakeNewProjectPathArea()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeNewProjectPathArea()"
  },
  {
    "label": "MakeOpenProjectPathArea()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeOpenProjectPathArea()"
  },
  {
    "label": "OnSetCopyStarterContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetCopyStarterContent(ECheckBoxState NewState)"
  },
  {
    "label": "OnSetBlueprintOrCppIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetBlueprintOrCppIndex(int32 Index)"
  },
  {
    "label": "SetHardwareClassTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHardwareClassTarget(EHardwareClass InHardwareClass)"
  },
  {
    "label": "SetGraphicsPreset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGraphicsPreset(EGraphicsPreset InGraphicsPreset)"
  },
  {
    "label": "HandleTemplateListViewSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTemplateListViewSelectionChanged(TSharedPtr<FTemplateItem> TemplateItem, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "SetDefaultProjectLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultProjectLocation()"
  },
  {
    "label": "SetCurrentMajorCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentMajorCategory(FName Category)"
  },
  {
    "label": "OnRecentProjectsClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnRecentProjectsClicked()"
  },
  {
    "label": "CreateProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateProject(const FString& ProjectFile)"
  },
  {
    "label": "CreateAndOpenProject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAndOpenProject()"
  },
  {
    "label": "OpenProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenProject(const FString& ProjectFile)"
  },
  {
    "label": "OpenCodeIDE()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenCodeIDE(const FString& ProjectFile)"
  },
  {
    "label": "CloseWindowIfAppropriate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseWindowIfAppropriate(bool ForceClose = false)"
  },
  {
    "label": "DisplayError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayError(const FText& ErrorText)"
  },
  {
    "label": "GetAllTemplateCategories()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FTemplateCategory>>)",
    "insertText": "GetAllTemplateCategories()"
  }
]