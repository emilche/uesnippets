[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMarketplaceKitModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMarketplaceKitModule"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleManager . h \" enum class EMarketplaceType : int32 { AppStore = 0,TestFlight = 1,Marketplace = 2,Web = 3,Other = 4,NotAvailable = 5,} ; class FMarketplaceKitModule : public IModuleInterface { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "SupportsDynamicReloading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsDynamicReloading()"
  },
  {
    "label": "GetCurrentTypeAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCurrentTypeAsync(TFunction<void(EMarketplaceType Type, const FString& Name)> Callback)"
  },
  {
    "label": "GetCurrentType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCurrentType(EMarketplaceType& OutType, FString& OutName)"
  },
  {
    "label": "GetCurrentTypeAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCurrentTypeAsString()"
  },
  {
    "label": "CacheValue()",
    "kind": "Method",
    "detail": "Function (private : bool bCachedTypeValid = false ; EMarketplaceType CachedType = EMarketplaceType::NotAvailable ; FString CachedName ; void)",
    "insertText": "CacheValue()"
  }
]