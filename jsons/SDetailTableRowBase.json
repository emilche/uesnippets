[
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "UDetailRowMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDetailRowMenuContext"
  },
  {
    "label": "SDetailTableRowBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDetailTableRowBase"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DetailTreeNode . h \" # include \" IDetailsViewPrivate . h \" # include \" InputCoreTypes . h \" # include \" Framework / Application / MenuStack . h \" # include \" Framework / Application / SlateApplication . h \" # include \" Framework / Commands / UIAction . h \" # include \" Framework / MultiBox / MultiBoxBuilder . h \" # include \" Input / Reply . h \" # include \" Layout / WidgetPath . h \" # include \" Textures / SlateIcon . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" class UToolMenu ; class UDetailRowMenuContext ; class SDetailTableRowBase : public STableRow<TSharedPtr<FDetailTreeNode>> { public : FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetIndentLevelForBackgroundColor()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetIndentLevelForBackgroundColor()"
  },
  {
    "label": "IsScrollBarVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsScrollBarVisible(TWeakPtr<STableViewBase> OwnerTableViewWeak)"
  },
  {
    "label": "PopulateContextMenu()",
    "kind": "Method",
    "detail": "Function (const float ScrollBarPadding ; void)",
    "insertText": "PopulateContextMenu(UToolMenu* ToolMenu)"
  },
  {
    "label": "GetPropertyNodes()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<FPropertyUpdatedWidgetBuilder> PropertyUpdatedWidgetBuilder ; TArray<TSharedPtr<FPropertyNode>>)",
    "insertText": "GetPropertyNodes(const bool bRecursive = false)"
  },
  {
    "label": "GetPropertyNodesFromHandles()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FPropertyNode>>)",
    "insertText": "GetPropertyNodesFromHandles(const TConstArrayView<TSharedPtr<IPropertyHandle>>& InPropertyHandles)"
  },
  {
    "label": "GetPropertyHandles()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IPropertyHandle>>)",
    "insertText": "GetPropertyHandles(const bool bRecursive = false)"
  },
  {
    "label": "ForceRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRefresh()"
  },
  {
    "label": "OnExpandAllClicked()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnExpandAllClicked()"
  },
  {
    "label": "Pin()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FDetailTreeNode> OwnerTreeNodePin = OwnerTreeNode .)",
    "insertText": "Pin()"
  },
  {
    "label": "GetDetailsView()",
    "kind": "Method",
    "detail": "Function (const bool bRecursive = true ; const bool bIsExpanded = true ; OwnerTreeNodePin ->)",
    "insertText": "GetDetailsView()->SetNodeExpansionState( OwnerTreeNodePin.ToSharedRef(), bIsExpanded, bRecursive)"
  },
  {
    "label": "OnCollapseAllClicked()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "OnCollapseAllClicked()"
  }
]