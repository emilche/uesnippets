[
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMultiBoxSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMultiBoxSettings"
  },
  {
    "label": "FMultiBoxCustomization",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMultiBoxCustomization"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FMenuEntryStyleParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMenuEntryStyleParams"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Styling / ISlateStyle . h \" # include \" Framework / Commands / UICommandInfo . h \" # include \" Types / SlateStructs . h \" # include \" MultiBoxDefs . generated . h \" class SToolTip ; class SWidget ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_FourParams()",
    "kind": "Method",
    "detail": "Function (None = 0,ButtonRow,EditableText,Heading,MenuEntry,Separator,ToolBarButton,ToolBarComboButton,Widget,} ; class FMultiBoxSettings { public :)",
    "insertText": "DECLARE_DELEGATE_RetVal_FourParams(TSharedRef< SToolTip >, FConstructToolTip, const TAttribute<FText>& , const TSharedPtr<SWidget>& , const TSharedPtr<const FUICommandInfo>& , bool)"
  },
  {
    "label": "FMultiBoxSettings()",
    "kind": "Method",
    "detail": "Function (TAttribute<bool> UseSmallToolBarIcons ; TAttribute<bool> DisplayMultiboxHooks ; FConstructToolTip ToolTipConstructor ; TAttribute<int> MenuSearchFieldVisibilityThreshold ;)",
    "insertText": "FMultiBoxSettings()"
  },
  {
    "label": "ConstructDefaultToolTip()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SToolTip>)",
    "insertText": "ConstructDefaultToolTip(const TAttribute<FText>& ToolTipText, const TSharedPtr<SWidget>& OverrideContent, const TSharedPtr<const FUICommandInfo>& Action, bool ShowActionShortcut = true)"
  },
  {
    "label": "ResetToolTipConstructor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetToolTipConstructor()"
  },
  {
    "label": "AllowCustomization()",
    "kind": "Method",
    "detail": "Function (} ; struct FMultiBoxCustomization { const FMultiBoxCustomization None ; FMultiBoxCustomization)",
    "insertText": "AllowCustomization(FName InCustomizationName)"
  },
  {
    "label": "GetCustomizationName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetCustomizationName()"
  },
  {
    "label": "ToName()",
    "kind": "Method",
    "detail": "Function (} private : FName CustomizationName ; } ; namespace EMultiBlockLocation { enum Type { None = - 1,Start,Middle,End,} ; FName)",
    "insertText": "ToName(FName StyleName, Type InLocation)"
  },
  {
    "label": "FMenuEntryStyleParams()",
    "kind": "Method",
    "detail": "Function (} return StyleName ; } } struct FMenuEntryStyleParams {)",
    "insertText": "FMenuEntryStyleParams()"
  }
]