[
  {
    "label": "FShaderStatsAggregator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderStatsAggregator"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FShaderStatsFunctions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderStatsFunctions"
  },
  {
    "label": "FShaderStatsReporter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderStatsReporter"
  },
  {
    "label": "FShaderStatsAggregator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Cooker / MPCollector . h \" # include \" ShaderCompiler . h \" # include \" TickableEditorObject . h \" class FShaderStatsAggregator : public UE::Cook::IMPCollector { public : enum class EMode { Worker,Director,} ;)",
    "insertText": "FShaderStatsAggregator(EMode Mode)"
  },
  {
    "label": "GetMessageType()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GetMessageType()"
  },
  {
    "label": "ClientTick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClientTick(UE::Cook::FMPCollectorClientTickContext& Context)"
  },
  {
    "label": "ServerReceiveMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerReceiveMessage(UE::Cook::FMPCollectorServerMessageContext& Context, FCbObjectView Message)"
  }
]