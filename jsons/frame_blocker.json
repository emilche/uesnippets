[
  {
    "label": "FrameBlocker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameBlocker"
  },
  {
    "label": "FrameBlocker()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_FRAME_BLOCKER_H_ # define MODULES_AUDIO_PROCESSING_AEC3_FRAME_BLOCKER_H_ # include<stddef . h> # include<vector> # include \" api / array_view . h \" # include \" modules / audio_processing / aec3 / aec3_common . h \" # include \" modules / audio_processing / aec3 / block . h \" namespace webrtc { class FrameBlocker { public :)",
    "insertText": "FrameBlocker(size_t num_bands, size_t num_channels)"
  },
  {
    "label": "FrameBlocker()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FrameBlocker()"
  },
  {
    "label": "FrameBlocker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameBlocker(const FrameBlocker&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FrameBlocker&)",
    "insertText": "operator(const FrameBlocker&)"
  },
  {
    "label": "InsertSubFrameAndExtractBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertSubFrameAndExtractBlock(const std::vector<std::vector<rtc::ArrayView<float>>>& sub_frame, Block* block)"
  },
  {
    "label": "IsBlockAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBlockAvailable()"
  },
  {
    "label": "ExtractBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractBlock(Block* block)"
  }
]