[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SProjectLauncherBuildPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectLauncherBuildPage"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(\tconst FArguments& InArgs, const TSharedRef<FProjectLauncherModel>& InModel )"
  },
  {
    "label": "GenerateDSYMForProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateDSYMForProject( const FString& ProjectName, const FString& Configuration )"
  },
  {
    "label": "HandleBuildModeMenuEntryClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBuildModeMenuEntryClicked(ELauncherProfileBuildModes::Type BuildMode)"
  },
  {
    "label": "HandleProfileManagerProfileSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProfileManagerProfileSelected( const ILauncherProfilePtr& SelectedProfile, const ILauncherProfilePtr& PreviousProfile )"
  },
  {
    "label": "HandleGenDSYMClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleGenDSYMClicked()"
  },
  {
    "label": "HandleBuildConfigurationSelectorConfigurationSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBuildConfigurationSelectorConfigurationSelected(EBuildConfiguration Configuration)"
  },
  {
    "label": "HandleUATCheckedStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleUATCheckedStateChanged( ECheckBoxState CheckState )"
  },
  {
    "label": "HandleCommandLineTextBoxChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCommandLineTextBoxChanged(const FText& InText)"
  }
]