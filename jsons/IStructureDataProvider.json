[
  {
    "label": "data",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "data"
  },
  {
    "label": "provider",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "provider"
  },
  {
    "label": "provider",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "provider"
  },
  {
    "label": "FMyStructProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMyStructProvider"
  },
  {
    "label": "provider",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "provider"
  },
  {
    "label": "IStructureDataProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructureDataProvider"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "of"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "should"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "based",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "based"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FStructOnScopeStructureDataProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructOnScopeStructureDataProvider"
  },
  {
    "label": "while",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "while"
  },
  {
    "label": "GetInstances()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetInstances(OutInstances, nullptr)"
  },
  {
    "label": "FindBaseStructure()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindBaseStructure(StructDataInstances)"
  }
]