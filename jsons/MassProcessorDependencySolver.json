[
  {
    "label": "UMassProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMassProcessor"
  },
  {
    "label": "TMassExecutionAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMassExecutionAccess"
  },
  {
    "label": "TMassExecutionAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMassExecutionAccess"
  },
  {
    "label": "MASSENTITY_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MASSENTITY_API"
  },
  {
    "label": "FMassProcessorDependencySolver",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassProcessorDependencySolver"
  },
  {
    "label": "FNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNode"
  },
  {
    "label": "FResourceUsage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceUsage"
  },
  {
    "label": "FResourceUsers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceUsers"
  },
  {
    "label": "FResourceAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceAccess"
  },
  {
    "label": "FResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResult"
  },
  {
    "label": "FDumpGraphDependencyUtils",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDumpGraphDependencyUtils"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(&Read, 2)"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(&Read, 1)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(const FMassExecutionRequirements& Other)"
  },
  {
    "label": "CountResourcesUsed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountResourcesUsed()"
  },
  {
    "label": "GetTotalBitsUsedCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetTotalBitsUsedCount()"
  },
  {
    "label": "IncreaseWaitingNodesCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncreaseWaitingNodesCount(TArrayView<FNode> InAllNodes)"
  },
  {
    "label": "SubmitNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitNode(const int32 NodeIndex, FNode& InOutNode)"
  },
  {
    "label": "HandleElementType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleElementType(TMassExecutionAccess<FResourceAccess>& ElementAccess\n\t\t\t, const TMassExecutionAccess<TBitSet>& TestedRequirements, FMassProcessorDependencySolver::FNode& InOutNode, const int32 NodeIndex)"
  },
  {
    "label": "CanAccess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAccess(const TMassExecutionAccess<TBitSet>& StoredElements, const TMassExecutionAccess<TBitSet>& TestedElements)"
  },
  {
    "label": "FMassProcessorDependencySolver()",
    "kind": "Method",
    "detail": "Function (MASSENTITY_API)",
    "insertText": "FMassProcessorDependencySolver(TArrayView<UMassProcessor* const> InProcessors, const bool bIsGameRuntime = true)"
  },
  {
    "label": "ResolveDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveDependencies(TArray<FMassProcessorOrderInfo>& OutResult, TSharedPtr<FMassEntityManager> EntityManager = nullptr, FResult* InOutOptionalResult = nullptr)"
  },
  {
    "label": "CreateSubGroupNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSubGroupNames(FName InGroupName, TArray<FString>& SubGroupNames)"
  },
  {
    "label": "IsResultUpToDate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsResultUpToDate(const FResult& InResult, TSharedPtr<FMassEntityManager> EntityManager)"
  },
  {
    "label": "PerformSolverStep()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PerformSolverStep(FResourceUsage& ResourceUsage, TArray<int32>& InOutIndicesRemaining, TArray<int32>& OutNodeIndices)"
  },
  {
    "label": "CreateNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CreateNodes(UMassProcessor& Processor)"
  },
  {
    "label": "BuildDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildDependencies()"
  },
  {
    "label": "Solve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Solve(TArray<FMassProcessorOrderInfo>& OutResult)"
  },
  {
    "label": "LogNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogNode(const FNode& Node, int Indent = 0)"
  }
]