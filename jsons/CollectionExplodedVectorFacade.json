[
  {
    "label": "FCollectionExplodedVectorFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionExplodedVectorFacade"
  },
  {
    "label": "FCollectionExplodedVectorFacade()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GeometryCollection / ManagedArrayAccessor . h \" # include \" GeometryCollection / ManagedArrayCollection . h \" namespace GeometryCollection::Facades { class FCollectionExplodedVectorFacade { public :)",
    "insertText": "FCollectionExplodedVectorFacade(FManagedArrayCollection& InCollection)"
  },
  {
    "label": "FCollectionExplodedVectorFacade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCollectionExplodedVectorFacade(const FManagedArrayCollection& InCollection)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "DefineSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefineSchema()"
  },
  {
    "label": "UpdateGlobalMatricesWithExplodedVectors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGlobalMatricesWithExplodedVectors(TArray<FMatrix>& InOutGlobalMatrices)"
  },
  {
    "label": "UpdateGlobalMatricesWithExplodedVectors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGlobalMatricesWithExplodedVectors(TArray<FTransform>& InOutGlobalTransforms)"
  }
]