[
  {
    "label": "MockTaskQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockTaskQueue"
  },
  {
    "label": "MockTaskQueueFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockTaskQueueFactory"
  },
  {
    "label": "MockTaskQueue()",
    "kind": "Method",
    "detail": "Function (# ifndef AUDIO_VOIP_TEST_MOCK_TASK_QUEUE_H_ # define AUDIO_VOIP_TEST_MOCK_TASK_QUEUE_H_ # include<memory> # include \" api / task_queue / task_queue_factory . h \" # include \" api / task_queue / test / mock_task_queue_base . h \" # include \" test / gmock . h \" namespace webrtc { class MockTaskQueue : public MockTaskQueueBase { public :)",
    "insertText": "MockTaskQueue() : current_(this)"
  },
  {
    "label": "Delete()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Delete()"
  },
  {
    "label": "MockTaskQueueFactory()",
    "kind": "Method",
    "detail": "Function (} private : CurrentTaskQueueSetter current_ ; } ; class MockTaskQueueFactory : public TaskQueueFactory { public :)",
    "insertText": "MockTaskQueueFactory(MockTaskQueue* task_queue) : task_queue_(task_queue)"
  },
  {
    "label": "CreateTaskQueue()",
    "kind": "Method",
    "detail": "Function (} std::unique_ptr<TaskQueueBase,TaskQueueDeleter>)",
    "insertText": "CreateTaskQueue(absl::string_view name, Priority priority)"
  }
]