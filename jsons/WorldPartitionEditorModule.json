[
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FLayoutExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayoutExtender"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "SContentBundleBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SContentBundleBrowser"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FWorldPartitionEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionEditorModule"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" WorldPartition / IWorldPartitionEditorModule . h \" class FTabManager ; class FLayoutExtender ; class SDockTab ; class FSpawnTabArgs ; class SContentBundleBrowser ; struct FAssetData ; class FWorldPartitionEditorModule : public IWorldPartitionEditorModule { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "CreateWorldPartitionEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SWidget>)",
    "insertText": "CreateWorldPartitionEditor()"
  },
  {
    "label": "GetPlacementGridSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPlacementGridSize()"
  },
  {
    "label": "GetInstancedFoliageGridSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetInstancedFoliageGridSize()"
  },
  {
    "label": "GetMinimapLowQualityWorldUnitsPerPixelThreshold()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMinimapLowQualityWorldUnitsPerPixelThreshold()"
  },
  {
    "label": "GetEnableLoadingInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnableLoadingInEditor()"
  },
  {
    "label": "SetEnableLoadingInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableLoadingInEditor(bool bInEnableLoadingInEditor)"
  },
  {
    "label": "GetEnableStreamingGenerationLogOnPIE()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnableStreamingGenerationLogOnPIE()"
  },
  {
    "label": "SetEnableStreamingGenerationLogOnPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableStreamingGenerationLogOnPIE(bool bInEnableLoadingInEditor)"
  },
  {
    "label": "GetDisablePIE()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDisablePIE()"
  },
  {
    "label": "SetDisablePIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisablePIE(bool bInDisablePIE)"
  },
  {
    "label": "GetDisableBugIt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDisableBugIt()"
  },
  {
    "label": "SetDisableBugIt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisableBugIt(bool bInDisableBugIt)"
  },
  {
    "label": "GetAdvancedMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAdvancedMode()"
  },
  {
    "label": "SetAdvancedMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAdvancedMode(bool bInAdvancedMode)"
  },
  {
    "label": "GetShowHLODsInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowHLODsInEditor()"
  },
  {
    "label": "SetShowHLODsInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowHLODsInEditor(bool bInShowHLODsInEditor)"
  },
  {
    "label": "GetShowHLODsOverLoadedRegions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowHLODsOverLoadedRegions()"
  },
  {
    "label": "SetShowHLODsOverLoadedRegions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowHLODsOverLoadedRegions(bool bInShowHLODsOverLoadedRegions)"
  },
  {
    "label": "GetHLODInEditorMinDrawDistance()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetHLODInEditorMinDrawDistance()"
  },
  {
    "label": "SetHLODInEditorMinDrawDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHLODInEditorMinDrawDistance(double InMinDrawDistance)"
  },
  {
    "label": "GetHLODInEditorMaxDrawDistance()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetHLODInEditorMaxDrawDistance()"
  },
  {
    "label": "SetHLODInEditorMaxDrawDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHLODInEditorMaxDrawDistance(double InMaxDrawDistance)"
  },
  {
    "label": "IsHLODInEditorAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHLODInEditorAllowed(UWorld* InWorld, FText* OutDisallowedReason)"
  },
  {
    "label": "WriteHLODStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteHLODStats(const FWriteHLODStatsParams& Params)"
  },
  {
    "label": "ConvertMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertMap(const FString& InLongPackageName)"
  },
  {
    "label": "RunBuilder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunBuilder(const FRunBuilderParams& InParams)"
  },
  {
    "label": "OnWorldPartitionCreated()",
    "kind": "Method",
    "detail": "Function (FWorldPartitionCreated&)",
    "insertText": "OnWorldPartitionCreated()"
  },
  {
    "label": "IsEditingContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditingContentBundle()"
  },
  {
    "label": "IsEditingContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditingContentBundle(const FGuid& ContentBundleGuid)"
  },
  {
    "label": "GetActiveLevelViewportCameraInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetActiveLevelViewportCameraInfo(FVector& CameraLocation, FRotator& CameraRotation)"
  },
  {
    "label": "RegisterMenus()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RegisterMenus()"
  },
  {
    "label": "RegisterWorldPartitionTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterWorldPartitionTabs(TSharedPtr<FTabManager> InTabManager)"
  },
  {
    "label": "RegisterWorldPartitionLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterWorldPartitionLayout(FLayoutExtender& Extender)"
  },
  {
    "label": "SpawnWorldPartitionTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnWorldPartitionTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnContentBundleTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnContentBundleTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Build(const FRunBuilderParams& InParams)"
  },
  {
    "label": "BuildMinimap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildMinimap(const FRunBuilderParams& InParams)"
  },
  {
    "label": "BuildHLODs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildHLODs(const FRunBuilderParams& InParams)"
  },
  {
    "label": "BuildLandscapeSplineMeshes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildLandscapeSplineMeshes(UWorld* InWorld)"
  },
  {
    "label": "RunCommandletAsExternalProcess()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RunCommandletAsExternalProcess(const FString& InCommandletArgs, const FText& InOperationDescription, int32& OutResult, bool& bOutCancelled)"
  },
  {
    "label": "OnConvertMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConvertMap()"
  },
  {
    "label": "OnIsCrossPluginReferenceAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnIsCrossPluginReferenceAllowed(const FAssetData& ReferencingAssetData, const FAssetData& ReferencedAssetData)"
  }
]