[
  {
    "label": "IAttributeBlendOperator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAttributeBlendOperator"
  },
  {
    "label": "Attributes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Attributes"
  },
  {
    "label": "FDecompressionTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDecompressionTools"
  },
  {
    "label": "FAttributeKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAttributeKey"
  },
  {
    "label": "FAttributeCurve",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAttributeCurve"
  },
  {
    "label": "FAttributeCurve",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAttributeCurve"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FAttributeCurve()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FAttributeCurve(const FAttributeCurve& OtherCurve)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "FAttributeCurve()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "FAttributeCurve(*this)"
  },
  {
    "label": "SetScriptStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScriptStruct(UScriptStruct* InScriptStruct)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "AddKey()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AddKey(InTime, &InValue, InKeyHandle)"
  },
  {
    "label": "DeleteKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteKey(FKeyHandle KeyHandle)"
  },
  {
    "label": "UpdateOrAddKey()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UpdateOrAddKey(InTime, &InValue, KeyTimeTolerance)"
  },
  {
    "label": "UpdateOrAddKey()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UpdateOrAddKey(InTime, InValue, KeyTimeTolerance)"
  },
  {
    "label": "RemoveRedundantKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRedundantKeys()"
  },
  {
    "label": "SetKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeys(TArrayView<const float> InTimes, TArrayView<const void*> InValues)"
  },
  {
    "label": "ReadjustTimeRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadjustTimeRange(float NewMinTimeRange, float NewMaxTimeRange, bool bInsert/* whether insert or remove*/, float OldStartTime, float OldEndTime)"
  },
  {
    "label": "UpdateOrAddKey()",
    "kind": "Method",
    "detail": "Function (FKeyHandle)",
    "insertText": "UpdateOrAddKey(float InTime, const void* InValue, float KeyTimeTolerance = UE_KINDA_SMALL_NUMBER)"
  }
]