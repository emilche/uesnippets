[
  {
    "label": "AddressSpaceStatsDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AddressSpaceStatsDumper"
  },
  {
    "label": "AddressSpaceStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AddressSpaceStats"
  },
  {
    "label": "PoolStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PoolStats"
  },
  {
    "label": "PA_COMPONENT_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PA_COMPONENT_EXPORT"
  },
  {
    "label": "AddressPoolManagerForTesting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AddressPoolManagerForTesting"
  },
  {
    "label": "Pool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Pool"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(pool_handle handle, uintptr_t address, size_t length)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(pool_handle handle)"
  },
  {
    "label": "GetPoolUsedSuperPages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPoolUsedSuperPages(pool_handle handle,\n                             std::bitset<kMaxSuperPagesInPool>& used)"
  },
  {
    "label": "GetPoolBaseAddress()",
    "kind": "Method",
    "detail": "Function (uintptr_t)",
    "insertText": "GetPoolBaseAddress(pool_handle handle)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (uintptr_t)",
    "insertText": "Reserve(pool_handle handle,\n                    uintptr_t requested_address,\n                    size_t length)"
  },
  {
    "label": "UnreserveAndDecommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnreserveAndDecommit(pool_handle handle,\n                            uintptr_t address,\n                            size_t length)"
  },
  {
    "label": "ResetForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetForTesting()"
  },
  {
    "label": "MarkUsed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkUsed(pool_handle handle, uintptr_t address, size_t size)"
  },
  {
    "label": "MarkUnused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkUnused(pool_handle handle, uintptr_t address, size_t size)"
  },
  {
    "label": "DumpStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpStats(AddressSpaceStatsDumper* dumper)"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetStats(AddressSpaceStats* stats)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(uintptr_t ptr, size_t length)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FindChunk()",
    "kind": "Method",
    "detail": "Function (uintptr_t)",
    "insertText": "FindChunk(size_t size)"
  },
  {
    "label": "FreeChunk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeChunk(uintptr_t address, size_t size)"
  },
  {
    "label": "TryReserveChunk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryReserveChunk(uintptr_t address, size_t size)"
  },
  {
    "label": "GetUsedSuperPages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetUsedSuperPages(std::bitset<kMaxSuperPagesInPool>& used)"
  },
  {
    "label": "GetBaseAddress()",
    "kind": "Method",
    "detail": "Function (uintptr_t)",
    "insertText": "GetBaseAddress()"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStats(PoolStats* stats)"
  },
  {
    "label": "PA_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (alloc_bitset_)",
    "insertText": "PA_GUARDED_BY(lock_)"
  },
  {
    "label": "GetPoolStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPoolStats(pool_handle handle, PoolStats* stats)"
  }
]