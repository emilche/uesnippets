[
  {
    "label": "UInteractiveToolManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveToolManager"
  },
  {
    "label": "UInteractiveGizmoManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveGizmoManager"
  },
  {
    "label": "FToolCommandChange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolCommandChange"
  },
  {
    "label": "UToolContextTransactionProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolContextTransactionProvider"
  },
  {
    "label": "IToolContextTransactionProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolContextTransactionProvider"
  },
  {
    "label": "IToolCommandChangeSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolCommandChangeSource"
  },
  {
    "label": "TWrappedToolCommandChange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TWrappedToolCommandChange"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Interface . h \" # include \" Misc / Change . h \" # include \" InteractiveToolChange . generated . h \" class UInteractiveToolManager ; class UInteractiveGizmoManager ; class FToolCommandChange : public FCommandChange { public : FString)",
    "insertText": "ToString()"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UINTERFACE(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class IToolContextTransactionProvider {)",
    "insertText": "GENERATED_BODY() public: virtual void BeginUndoTransaction(const FText& Description)"
  },
  {
    "label": "EndUndoTransaction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndUndoTransaction()"
  },
  {
    "label": "EmitObjectChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitObjectChange(UObject* TargetObject, TUniquePtr<FToolCommandChange> Change, const FText& Description)"
  },
  {
    "label": "IToolCommandChangeSource()",
    "kind": "Method",
    "detail": "Function (} ; class IToolCommandChangeSource { public : ~)",
    "insertText": "IToolCommandChangeSource()"
  },
  {
    "label": "BeginChange()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BeginChange()"
  },
  {
    "label": "EndChange()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FToolCommandChange>)",
    "insertText": "EndChange()"
  },
  {
    "label": "GetChangeTarget()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetChangeTarget()"
  },
  {
    "label": "GetChangeDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetChangeDescription()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; template<ChangeType> class TWrappedToolCommandChange : public FToolCommandChange { public : TUniquePtr<ChangeType> WrappedChange ; TUniqueFunction<)",
    "insertText": "void(bool bRevert)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply(UObject* Object)"
  },
  {
    "label": "BeforeModify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeforeModify(false)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (} WrappedChange ->)",
    "insertText": "Apply(Object)"
  },
  {
    "label": "AfterModify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AfterModify(false)"
  },
  {
    "label": "Revert()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Revert(UObject* Object)"
  },
  {
    "label": "BeforeModify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeforeModify(true)"
  },
  {
    "label": "Revert()",
    "kind": "Method",
    "detail": "Function (} WrappedChange ->)",
    "insertText": "Revert(Object)"
  },
  {
    "label": "AfterModify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AfterModify(true)"
  }
]