[
  {
    "label": "FD3D12TransientHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12TransientHeap"
  },
  {
    "label": "FD3D12TransientHeapCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12TransientHeapCache"
  },
  {
    "label": "FD3D12TransientResourceHeapAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12TransientResourceHeapAllocator"
  },
  {
    "label": "FResourceAllocatorAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResourceAllocatorAdapter"
  },
  {
    "label": "GetInitialResourceState()",
    "kind": "Method",
    "detail": "Function (D3D12_RESOURCE_STATES)",
    "insertText": "GetInitialResourceState(const D3D12_RESOURCE_DESC& InDesc, ED3D12QueueType QueueType)"
  },
  {
    "label": "FD3D12TransientHeap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12TransientHeap(const FInitializer& Initializer, FD3D12Adapter* Adapter, FD3D12Device* Device, FRHIGPUMask VisibleNodeMask)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FD3D12TransientHeapCache>)",
    "insertText": "Create(FD3D12Adapter* ParentAdapter)"
  },
  {
    "label": "FD3D12TransientHeapCache()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FD3D12TransientHeapCache(const FInitializer& Initializer, FD3D12Adapter* ParentAdapter)"
  },
  {
    "label": "FD3D12TransientResourceHeapAllocator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12TransientResourceHeapAllocator(FD3D12TransientHeapCache& InHeapCache)"
  },
  {
    "label": "checkNoEntry()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "checkNoEntry()"
  }
]