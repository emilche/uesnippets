[
  {
    "label": "FAnimNode_SequencePlayerBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SequencePlayerBase"
  },
  {
    "label": "FAnimNode_SequencePlayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SequencePlayer"
  },
  {
    "label": "UAnimGraphNode_SequencePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_SequencePlayer"
  },
  {
    "label": "FAnimNode_SequencePlayer_Standalone",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SequencePlayer_Standalone"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimNode_AssetPlayerBase . h \" # include \" Animation / InputScaleBias . h \" # include \" Animation / AnimSequenceBase . h \" # include \" AnimNode_SequencePlayer . generated . h \")",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: UPROPERTY()"
  },
  {
    "label": "GetCurrentAssetTime()",
    "kind": "Method",
    "detail": "Function (public : float)",
    "insertText": "GetCurrentAssetTime()"
  },
  {
    "label": "GetCurrentAssetTimePlayRateAdjusted()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCurrentAssetTimePlayRateAdjusted()"
  },
  {
    "label": "GetCurrentAssetLength()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCurrentAssetLength()"
  },
  {
    "label": "GetAnimAsset()",
    "kind": "Method",
    "detail": "Function (UAnimationAsset*)",
    "insertText": "GetAnimAsset()"
  },
  {
    "label": "Initialize_AnyThread()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Initialize_AnyThread(const FAnimationInitializeContext& Context)"
  },
  {
    "label": "CacheBones_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBones_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "UpdateAssetPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAssetPlayer(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "Evaluate_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate_AnyThread(FPoseContext& Output)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "GetTimeFromEnd()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTimeFromEnd(float CurrentNodeTime)"
  },
  {
    "label": "GetEffectiveStartPosition()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetEffectiveStartPosition(const FAnimationBaseContext& Context)"
  },
  {
    "label": "GetSequence()",
    "kind": "Method",
    "detail": "Function (UAnimSequenceBase*)",
    "insertText": "GetSequence()"
  },
  {
    "label": "SetSequence()",
    "kind": "Method",
    "detail": "Function (} protected : bool)",
    "insertText": "SetSequence(UAnimSequenceBase* InSequence)"
  },
  {
    "label": "GetStartPosition()",
    "kind": "Method",
    "detail": "Function (FInputScaleBiasClampConstants Dummy ; return Dummy ; } float)",
    "insertText": "GetStartPosition()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "SetLoopAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLoopAnimation(bool bInLoopAnimation)"
  },
  {
    "label": "GetPlayRateBasis()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPlayRateBasis()"
  },
  {
    "label": "GetPlayRate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPlayRate()"
  },
  {
    "label": "GetPlayRateScaleBiasClampConstants()",
    "kind": "Method",
    "detail": "Function (const FInputScaleBiasClampConstants&)",
    "insertText": "GetPlayRateScaleBiasClampConstants()"
  },
  {
    "label": "GetStartFromMatchingPose()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetStartFromMatchingPose()"
  },
  {
    "label": "SetStartPosition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetStartPosition(float InStartPosition)"
  },
  {
    "label": "SetPlayRate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPlayRate(float InPlayRate)"
  },
  {
    "label": "GetGroupName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetGroupName()"
  },
  {
    "label": "GetGroupRole()",
    "kind": "Method",
    "detail": "Function (EAnimGroupRole::Type)",
    "insertText": "GetGroupRole()"
  },
  {
    "label": "GetGroupMethod()",
    "kind": "Method",
    "detail": "Function (EAnimSyncMethod)",
    "insertText": "GetGroupMethod()"
  },
  {
    "label": "IsLooping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLooping()"
  },
  {
    "label": "GetIgnoreForRelevancyTest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIgnoreForRelevancyTest()"
  },
  {
    "label": "SetGroupName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetGroupName(FName InGroupName)"
  },
  {
    "label": "SetGroupRole()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetGroupRole(EAnimGroupRole::Type InRole)"
  },
  {
    "label": "SetGroupMethod()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetGroupMethod(EAnimSyncMethod InMethod)"
  },
  {
    "label": "SetIgnoreForRelevancyTest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetIgnoreForRelevancyTest(bool bInIgnoreForRelevancyTest)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: UPROPERTY(EditAnywhere, Category=Sync)"
  },
  {
    "label": "SetOverridePositionWhenJoiningSyncGroupAsLeader()",
    "kind": "Method",
    "detail": "Function (Method = InMethod ; return true ; } bool)",
    "insertText": "SetOverridePositionWhenJoiningSyncGroupAsLeader(bool InOverridePositionWhenJoiningSyncGroupAsLeader)"
  }
]