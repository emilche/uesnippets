[
  {
    "label": "FCompactHeapPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactHeapPose"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "UBlendProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendProfile"
  },
  {
    "label": "FSlateIcon",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateIcon"
  },
  {
    "label": "UPoseWatchFolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatchFolder"
  },
  {
    "label": "UPoseWatchElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatchElement"
  },
  {
    "label": "UPoseWatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatch"
  },
  {
    "label": "UPoseWatchPoseElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatchPoseElement"
  },
  {
    "label": "FObjectInitializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectInitializer"
  },
  {
    "label": "UPoseWatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatch"
  },
  {
    "label": "TElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TElementType"
  },
  {
    "label": "TElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TElementType"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "TElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TElementType"
  },
  {
    "label": "ChoosePoseWatchColor()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "ChoosePoseWatchColor()"
  },
  {
    "label": "FindUniqueNameInParent()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "FindUniqueNameInParent(TParent* InParent, const TItem* InItem)"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParent(UPoseWatchFolder* Parent, bool bForce = false)"
  },
  {
    "label": "MoveTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveTo(UPoseWatchFolder* InFolder)"
  },
  {
    "label": "SetLabel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLabel(const FText& InLabel)"
  },
  {
    "label": "SetIsVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsVisible(bool bInIsVisible, bool bUpdateChildren=true)"
  },
  {
    "label": "OnRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoved()"
  },
  {
    "label": "ValidateLabelRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateLabelRename(const FText& InLabel, FText& OutErrorMessage)"
  },
  {
    "label": "SetUniqueDefaultLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUniqueDefaultLabel()"
  },
  {
    "label": "UpdateVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisibility()"
  },
  {
    "label": "SetIsExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsExpanded(bool bInIsExpanded)"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParent(UPoseWatch* InParent)"
  },
  {
    "label": "SetLabel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLabel(const FText& InLabel)"
  },
  {
    "label": "SetIsVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsVisible(bool bInIsVisible)"
  },
  {
    "label": "ValidateLabelRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateLabelRename(const FText& InLabel, FText& OutErrorMessage)"
  },
  {
    "label": "SetUniqueDefaultLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUniqueDefaultLabel()"
  },
  {
    "label": "SetUniqueLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUniqueLabel(const FText& InLabel)"
  },
  {
    "label": "SetColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColor(const FColor& InColor)"
  },
  {
    "label": "SetHasColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasColor(const bool bInHasColor)"
  },
  {
    "label": "SetIconName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIconName(const FName InIconName)"
  },
  {
    "label": "ToggleIsVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleIsVisible()"
  },
  {
    "label": "UPoseWatchPoseElement()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "UPoseWatchPoseElement(const class FObjectInitializer& PCIP)"
  },
  {
    "label": "StaticGetIcon()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "StaticGetIcon()"
  },
  {
    "label": "SetIsExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsExpanded(bool bInIsExpanded)"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParent(UPoseWatchFolder* InParent, bool bForce=false)"
  },
  {
    "label": "SetIsNodeEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsNodeEnabled(const bool bInIsEnabled)"
  },
  {
    "label": "MoveTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveTo(UPoseWatchFolder* InFolder)"
  },
  {
    "label": "SetLabel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLabel(const FText& InLabel)"
  },
  {
    "label": "SetIsVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsVisible(bool bInIsVisible)"
  },
  {
    "label": "SetColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColor(const FColor& InColor)"
  },
  {
    "label": "SetShouldDeleteOnDeselect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldDeleteOnDeselect(const bool bInDeleteOnDeselection)"
  },
  {
    "label": "OnRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoved()"
  },
  {
    "label": "ToggleIsVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleIsVisible()"
  },
  {
    "label": "ValidateLabelRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateLabelRename(const FText& InLabel, FText& OutErrorMessage)"
  },
  {
    "label": "SetUniqueDefaultLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUniqueDefaultLabel()"
  },
  {
    "label": "UpdateVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisibility()"
  },
  {
    "label": "AddElement()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<UPoseWatchElement>)",
    "insertText": "AddElement(const FText InLabel, const FName IconName)"
  },
  {
    "label": "AddElement()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<TElementType>)",
    "insertText": "AddElement(const FText InLabel, const FName IconName)"
  },
  {
    "label": "FindElement()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<UPoseWatchElement>)",
    "insertText": "FindElement(const FText InLabel)"
  },
  {
    "label": "FindOrAddElement()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<UPoseWatchElement>)",
    "insertText": "FindOrAddElement(const FText InLabel, const FName InIconName)"
  }
]