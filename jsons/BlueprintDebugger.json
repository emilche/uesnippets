[
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "FBlueprintDebugger",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintDebugger"
  },
  {
    "label": "FBlueprintDebuggerImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintDebuggerImpl"
  },
  {
    "label": "FBlueprintDebugger()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / UniquePtr . h \" class UBlueprint ; struct FBlueprintDebugger {)",
    "insertText": "FBlueprintDebugger()"
  },
  {
    "label": "SetDebuggedBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDebuggedBlueprint(UBlueprint* InBlueprint)"
  },
  {
    "label": "FBlueprintDebugger()",
    "kind": "Method",
    "detail": "Function (private : TUniquePtr<struct FBlueprintDebuggerImpl> Impl ;)",
    "insertText": "FBlueprintDebugger(const FBlueprintDebugger&)"
  },
  {
    "label": "FBlueprintDebugger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBlueprintDebugger(FBlueprintDebugger&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBlueprintDebugger&)",
    "insertText": "operator(FBlueprintDebugger const&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FBlueprintDebugger&)",
    "insertText": "operator(FBlueprintDebugger&&)"
  }
]