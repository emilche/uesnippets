[
  {
    "label": "CommandLine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CommandLine"
  },
  {
    "label": "FilePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FilePath"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "TestResultsTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestResultsTracker"
  },
  {
    "label": "AggregateTestResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AggregateTestResult"
  },
  {
    "label": "PerIterationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PerIterationData"
  },
  {
    "label": "CodeLocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CodeLocation"
  },
  {
    "label": "TestResultsTracker()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "TestResultsTracker()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init(const CommandLine& command_line)"
  },
  {
    "label": "OnTestIterationStarting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTestIterationStarting()"
  },
  {
    "label": "AddTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTest(const std::string& test_name)"
  },
  {
    "label": "AddDisabledTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDisabledTest(const std::string& test_name)"
  },
  {
    "label": "AddTestLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTestLocation(const std::string& test_name,\n                       const std::string& file,\n                       int line)"
  },
  {
    "label": "AddTestPlaceholder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTestPlaceholder(const std::string& test_name)"
  },
  {
    "label": "AddTestResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTestResult(const TestResult& result)"
  },
  {
    "label": "AddLeakedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLeakedItems(int count, const std::vector<std::string>& test_names)"
  },
  {
    "label": "GeneratePlaceholderIteration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GeneratePlaceholderIteration()"
  },
  {
    "label": "AddGlobalTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGlobalTag(const std::string& tag)"
  },
  {
    "label": "FRIEND_TEST_ALL_PREFIXES()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FRIEND_TEST_ALL_PREFIXES(TestResultsTrackerTest,\n                           SaveSummaryAsJSONWithLinkInResult)"
  }
]