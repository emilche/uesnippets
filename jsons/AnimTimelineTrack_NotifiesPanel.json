[
  {
    "label": "SAnimNotifyPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimNotifyPanel"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SInlineEditableTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInlineEditableTextBlock"
  },
  {
    "label": "FAnimTimelineTrack_NotifiesPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimTimelineTrack_NotifiesPanel"
  },
  {
    "label": "ANIMTIMELINE_DECLARE_TRACK()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AnimTimeline / AnimTimelineTrack . h \" # include \" SAnimTimingPanel . h \" # include \" StatusBarSubsystem . h \" class SAnimNotifyPanel ; class SVerticalBox ; class SInlineEditableTextBlock ; class FAnimTimelineTrack_NotifiesPanel : public FAnimTimelineTrack {)",
    "insertText": "ANIMTIMELINE_DECLARE_TRACK(FAnimTimelineTrack_NotifiesPanel, FAnimTimelineTrack)"
  },
  {
    "label": "FAnimTimelineTrack_NotifiesPanel()",
    "kind": "Method",
    "detail": "Function (public : const float NotificationTrackHeight ; const FName AnimationEditorStatusBarName ;)",
    "insertText": "FAnimTimelineTrack_NotifiesPanel(const TSharedRef<FAnimModel>& InModel)"
  },
  {
    "label": "GenerateContainerWidgetForTimeline()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateContainerWidgetForTimeline()"
  },
  {
    "label": "GenerateContainerWidgetForOutliner()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateContainerWidgetForOutliner(const TSharedRef<SAnimOutlinerItem>& InRow)"
  },
  {
    "label": "SupportsFiltering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsFiltering()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update()"
  },
  {
    "label": "RequestTrackRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestTrackRename(int32 InTrackIndex)"
  },
  {
    "label": "BuildNotifiesPanelSubMenu()",
    "kind": "Method",
    "detail": "Function (PendingRenameTrackIndex = InTrackIndex ; } private : TSharedRef<SWidget>)",
    "insertText": "BuildNotifiesPanelSubMenu(int32 InTrackIndex)"
  },
  {
    "label": "InsertTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertTrack(int32 InTrackIndexToInsert)"
  },
  {
    "label": "RemoveTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTrack(int32 InTrackIndexToRemove)"
  },
  {
    "label": "RefreshOutlinerWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshOutlinerWidget()"
  },
  {
    "label": "OnCommitTrackName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommitTrackName(const FText& InText, ETextCommit::Type CommitInfo, int32 TrackIndexToName)"
  },
  {
    "label": "OnGetTimingNodeVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "OnGetTimingNodeVisibility(ETimingElementType::Type ElementType)"
  },
  {
    "label": "HandlePendingRenameTimer()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "HandlePendingRenameTimer(double InCurrentTime, float InDeltaTime, TWeakPtr<SInlineEditableTextBlock> InInlineEditableTextBlock)"
  },
  {
    "label": "HandleNotifyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNotifyChanged()"
  }
]