[
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "UAIPerceptionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIPerceptionComponent"
  },
  {
    "label": "UAISenseEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISenseEvent"
  },
  {
    "label": "UUserDefinedStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedStruct"
  },
  {
    "label": "UAISense_Blueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISense_Blueprint"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" Templates / SubclassOf . h \" # include \" Perception / AISense . h \" # include \" AISense_Blueprint . generated . h \" class APawn ; class UAIPerceptionComponent ; class UAISenseEvent ; class UUserDefinedStruct ;)",
    "insertText": "UCLASS(ClassGroup = AI, Abstract, Blueprintable, hidedropdown, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: UPROPERTY(BlueprintReadWrite, EditAnywhere, Category = \"Sense\")"
  },
  {
    "label": "UAISense_Blueprint()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UAISense_Blueprint(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "UpdateSenseID()",
    "kind": "Method",
    "detail": "Function (FAISenseID)",
    "insertText": "UpdateSenseID()"
  },
  {
    "label": "RegisterWrappedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterWrappedEvent(UAISenseEvent& PerceptionEvent)"
  },
  {
    "label": "OnNewPawn()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnNewPawn(APawn& NewPawn)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Update()"
  },
  {
    "label": "OnNewListenerImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewListenerImpl(const FPerceptionListener& NewListener)"
  },
  {
    "label": "OnListenerUpdateImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnListenerUpdateImpl(const FPerceptionListener& UpdatedListener)"
  },
  {
    "label": "OnListenerRemovedImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnListenerRemovedImpl(const FPerceptionListener& UpdatedListener)"
  }
]