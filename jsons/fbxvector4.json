[
  {
    "label": "FbxQuaternion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxQuaternion"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FbxVector4()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_MATH_VECTOR_4_H_ # define _FBXSDK_CORE_MATH_VECTOR_4_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxQuaternion ; class FBXSDK_DLL FbxVector4 : public FbxDouble4 { public :)",
    "insertText": "FbxVector4()"
  },
  {
    "label": "FbxVector4()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxVector4(const FbxVector4& pVector4)"
  },
  {
    "label": "FbxVector4()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxVector4(double pX, double pY, double pZ, double pW=1.0)"
  },
  {
    "label": "FbxVector4()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxVector4(const double pValue[4])"
  },
  {
    "label": "FbxVector4()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxVector4(const FbxDouble3& pValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxVector4&)",
    "insertText": "operator(const FbxVector4& pVector4)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxVector4&)",
    "insertText": "operator(const double* pValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxVector4&)",
    "insertText": "operator(const FbxDouble3& pValue)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(double pX, double pY, double pZ, double pW=1.0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "operator(double pValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "operator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "operator(const FbxVector4& pVector)"
  },
  {
    "label": "CrossProduct()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "CrossProduct(const FbxVector4& pVector)"
  },
  {
    "label": "AxisAlignmentInEulerAngle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AxisAlignmentInEulerAngle(const FbxVector4& pAB, const FbxVector4& pA, const FbxVector4& pB, FbxVector4& pAngles)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FbxVector4 & pVector)"
  },
  {
    "label": "Normalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Normalize()"
  },
  {
    "label": "SetXYZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetXYZ(const FbxQuaternion pQuat)"
  },
  {
    "label": "double()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "double()"
  },
  {
    "label": "IsZero()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsZero(int pSize=4)"
  },
  {
    "label": "FixIncorrectValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixIncorrectValue()"
  },
  {
    "label": "Compare()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS int)",
    "insertText": "Compare(const FbxVector4& pV, const double pThreshold=FBXSDK_TOLERANCE)"
  }
]