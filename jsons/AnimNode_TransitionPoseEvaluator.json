[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Mode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Mode"
  },
  {
    "label": "FAnimNode_TransitionPoseEvaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_TransitionPoseEvaluator"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimCurveTypes . h \" # include \" BonePose . h \" # include \" Animation / AnimNodeBase . h \" # include \" AnimNode_TransitionPoseEvaluator . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (enum Type : int { EDS_SourcePose)",
    "insertText": "UMETA(DisplayName=\"Source Pose\"), EDS_DestinationPose UMETA(DisplayName=\"Destination Pose\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (enum Mode : int { EM_Standard)",
    "insertText": "UMETA(DisplayName=\"Standard\"), EM_Freeze UMETA(DisplayName=\"Freeze\"), EM_DelayedFreeze UMETA(DisplayName=\"Delayed Freeze\")"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "FAnimNode_TransitionPoseEvaluator()",
    "kind": "Method",
    "detail": "Function (FGraphTraversalCounter CachedBonesCounter ; public :)",
    "insertText": "FAnimNode_TransitionPoseEvaluator()"
  },
  {
    "label": "SetupCacheFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupCacheFrames()"
  },
  {
    "label": "Initialize_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize_AnyThread(const FAnimationInitializeContext& Context)"
  },
  {
    "label": "CacheBones_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBones_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "Update_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update_AnyThread(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "Evaluate_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate_AnyThread(FPoseContext& Output)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "InputNodeNeedsUpdate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputNodeNeedsUpdate(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "InputNodeNeedsEvaluate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputNodeNeedsEvaluate()"
  },
  {
    "label": "CachePose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CachePose(const FPoseContext& PoseToCache)"
  }
]