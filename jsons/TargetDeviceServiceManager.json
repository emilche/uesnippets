[
  {
    "label": "IMessageBus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageBus"
  },
  {
    "label": "ITargetDeviceService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetDeviceService"
  },
  {
    "label": "FTargetDeviceServiceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTargetDeviceServiceManager"
  },
  {
    "label": "FTargetDeviceServiceManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" Delegates / Delegate . h \" # include \" HAL / CriticalSection . h \" # include \" ITargetDeviceServiceManager . h \" class IMessageBus ; class ITargetDeviceService ; class FTargetDeviceServiceManager : public ITargetDeviceServiceManager { public :)",
    "insertText": "FTargetDeviceServiceManager()"
  },
  {
    "label": "AddStartupService()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "AddStartupService(const FString& DeviceName)"
  },
  {
    "label": "GetServices()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetServices(TArray<TSharedPtr<ITargetDeviceService, ESPMode::ThreadSafe>>& OutServices)"
  },
  {
    "label": "RemoveStartupService()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveStartupService(const FString& DeviceName)"
  },
  {
    "label": "DECLARE_DERIVED_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DERIVED_EVENT(FTargetDeviceServiceManager, ITargetDeviceServiceManager::FOnTargetDeviceServiceAdded, FOnTargetDeviceServiceAdded)"
  },
  {
    "label": "OnServiceAdded()",
    "kind": "Method",
    "detail": "Function (FOnTargetDeviceServiceAdded&)",
    "insertText": "OnServiceAdded()"
  },
  {
    "label": "OnServiceRemoved()",
    "kind": "Method",
    "detail": "Function (FOnTargetDeviceServiceRemoved&)",
    "insertText": "OnServiceRemoved()"
  },
  {
    "label": "AddTargetDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddTargetDevice(ITargetDevicePtr InDevice)"
  },
  {
    "label": "InitializeTargetPlatforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTargetPlatforms()"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings()"
  },
  {
    "label": "RemoveService()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveService(const FString& DeviceName)"
  },
  {
    "label": "RemoveTargetDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTargetDevice(ITargetDevicePtr InDevice)"
  },
  {
    "label": "SaveSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettings()"
  },
  {
    "label": "ShutdownTargetPlatforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownTargetPlatforms()"
  },
  {
    "label": "HandleMessageBusShutdown()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleMessageBusShutdown()"
  },
  {
    "label": "HandleTargetPlatformDeviceDiscovered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTargetPlatformDeviceDiscovered(ITargetDeviceRef DiscoveredDevice)"
  },
  {
    "label": "HandleTargetPlatformDeviceLost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTargetPlatformDeviceLost(ITargetDeviceRef LostDevice)"
  }
]