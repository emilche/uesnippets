[
  {
    "label": "FPathTracingSkylight",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPathTracingSkylight"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UniformBuffer . h \" # include \" RenderGraph . h \" # include \" SceneRendering . h \")",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FSkyLightData, RENDERER_API) SHADER_PARAMETER(uint32, SamplesPerPixel) SHADER_PARAMETER(float, MaxRayDistance) SHADER_PARAMETER(float, MaxNormalBias) SHADER_PARAMETER(float, MaxShadowThickness) SHADER_PARAMETER(int, bTransmission) END_GLOBAL_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FWritableSkyLightVisibilityRaysData, ) SHADER_PARAMETER_RDG_BUFFER_UAV(RWStructuredBuffer<SkyLightVisibilityRays>, OutSkyLightVisibilityRays) SHADER_PARAMETER(FIntVector, SkyLightVisibilityRaysDimensions) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FSkyLightVisibilityRaysData, ) SHADER_PARAMETER_RDG_BUFFER_SRV(StructuredBuffer<SkyLightVisibilityRays>, SkyLightVisibilityRays) SHADER_PARAMETER(FIntVector, SkyLightVisibilityRaysDimensions) END_SHADER_PARAMETER_STRUCT() #if RHI_RAYTRACING int32 GetRayTracingSkyLightDecoupleSampleGenerationCVarValue()"
  },
  {
    "label": "SetupSkyLightParameters()",
    "kind": "Method",
    "detail": "Function (class FPathTracingSkylight ; bool)",
    "insertText": "SetupSkyLightParameters(FRDGBuilder& GraphBuilder, FScene* Scene, const FViewInfo& View, bool bEnableSkylight, FPathTracingSkylight* SkylightParameters, FSkyLightData* SkyLight)"
  },
  {
    "label": "SetupSkyLightVisibilityRaysParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupSkyLightVisibilityRaysParameters(FRDGBuilder& GraphBuilder, const FViewInfo& View, FSkyLightVisibilityRaysData* OutSkyLightVisibilityRaysData)"
  }
]