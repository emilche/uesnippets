[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "PmuEventInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PmuEventInfo"
  },
  {
    "label": "PmuCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PmuCounter"
  },
  {
    "label": "PmuEventInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<cstdint> # include<cstring> # include<errno . h> # include<linux / perf_event . h> # include<stdexcept> # include<string> # include<sys / syscall . h> # include<unistd . h> # include \" hwcpipe_log . h \" enum class PmuImplDefined : uint64_t { L1_ACCESSES = 0 x4,INSTR_RETIRED = 0 x8,L2_ACCESSES = 0 x16,L3_ACCESSES = 0 x2b,BUS_READS = 0 x60,BUS_WRITES = 0 x61,MEM_READS = 0 x66,MEM_WRITES = 0 x67,ASE_SPEC = 0 x74,VFP_SPEC = 0 x75,CRYPTO_SPEC = 0 x77,} ; struct PmuEventInfo { uint64_t type ; uint64_t event ;)",
    "insertText": "PmuEventInfo(uint64_t type, uint64_t event) : type(type), event(event)"
  },
  {
    "label": "PmuEventInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "PmuEventInfo(uint64_t type, PmuImplDefined event) : PmuEventInfo(type, static_cast<uint64_t>(event))"
  },
  {
    "label": "PmuCounter()",
    "kind": "Method",
    "detail": "Function (} } ; class PmuCounter { public :)",
    "insertText": "PmuCounter()"
  },
  {
    "label": "PmuCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PmuCounter(PmuEventInfo config)"
  },
  {
    "label": "get_value()",
    "kind": "Method",
    "detail": "Function (template<T> T)",
    "insertText": "get_value()"
  },
  {
    "label": "open()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "open(PmuEventInfo config)"
  },
  {
    "label": "open()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "open(const perf_event_attr &perf_config)"
  },
  {
    "label": "close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "close()"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "reset()"
  },
  {
    "label": "config_to_str()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "config_to_str(const perf_event_attr &perf_config)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (long long value { } ; const ssize_t result =)",
    "insertText": "read(_fd, &value, sizeof(long long))"
  }
]