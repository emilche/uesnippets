[
  {
    "label": "ssl_ctx_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_ctx_st"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSslContextCreateOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSslContextCreateOptions"
  },
  {
    "label": "ISslManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISslManager"
  },
  {
    "label": "ISslManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" CoreTypes . h \" struct ssl_ctx_st ; typedef struct ssl_ctx_st SSL_CTX ; enum class ESslTlsProtocol : uint8 { Minimum = 0,SSLv2 = Minimum,SSLv3,TLSv1,TLSv1_1,TLSv1_2,Maximum = TLSv1_2 } ; struct FSslContextCreateOptions { ESslTlsProtocol MinimumProtocol = ESslTlsProtocol::Minimum ; ESslTlsProtocol MaximumProtocol = ESslTlsProtocol::Maximum ; bool bAllowCompression = true ; bool bAddCertificates = true ; } ; class ISslManager { public : ~)",
    "insertText": "ISslManager()"
  },
  {
    "label": "InitializeSsl()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "InitializeSsl()"
  },
  {
    "label": "ShutdownSsl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownSsl()"
  },
  {
    "label": "CreateSslContext()",
    "kind": "Method",
    "detail": "Function (SSL_CTX*)",
    "insertText": "CreateSslContext(const FSslContextCreateOptions& CreateOptions)"
  },
  {
    "label": "DestroySslContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySslContext(SSL_CTX* SslContext)"
  }
]