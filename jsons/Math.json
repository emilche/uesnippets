[
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A3"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A2"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "_A1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_A1"
  },
  {
    "label": "abs()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "abs(floating_point x)"
  },
  {
    "label": "acos()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "acos(arithmetic x)"
  },
  {
    "label": "acosf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "acosf(float x)"
  },
  {
    "label": "acosl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "acosl(long double x)"
  },
  {
    "label": "asin()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "asin(arithmetic x)"
  },
  {
    "label": "asinf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "asinf(float x)"
  },
  {
    "label": "asinl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "asinl(long double x)"
  },
  {
    "label": "atan()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "atan(arithmetic x)"
  },
  {
    "label": "atanf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "atanf(float x)"
  },
  {
    "label": "atanl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "atanl(long double x)"
  },
  {
    "label": "atan2()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "atan2(arithmetic y, arithmetic x)"
  },
  {
    "label": "atan2f()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "atan2f(float y, float x)"
  },
  {
    "label": "atan2l()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "atan2l(long double y, long double x)"
  },
  {
    "label": "ceil()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "ceil(arithmetic x)"
  },
  {
    "label": "ceilf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ceilf(float x)"
  },
  {
    "label": "ceill()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "ceill(long double x)"
  },
  {
    "label": "cos()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "cos(arithmetic x)"
  },
  {
    "label": "cosf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "cosf(float x)"
  },
  {
    "label": "cosl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "cosl(long double x)"
  },
  {
    "label": "cosh()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "cosh(arithmetic x)"
  },
  {
    "label": "coshf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "coshf(float x)"
  },
  {
    "label": "coshl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "coshl(long double x)"
  },
  {
    "label": "exp()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "exp(arithmetic x)"
  },
  {
    "label": "expf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "expf(float x)"
  },
  {
    "label": "expl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "expl(long double x)"
  },
  {
    "label": "fabs()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "fabs(arithmetic x)"
  },
  {
    "label": "fabsf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "fabsf(float x)"
  },
  {
    "label": "fabsl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "fabsl(long double x)"
  },
  {
    "label": "floor()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "floor(arithmetic x)"
  },
  {
    "label": "floorf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "floorf(float x)"
  },
  {
    "label": "floorl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "floorl(long double x)"
  },
  {
    "label": "fmod()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "fmod(arithmetic x, arithmetic y)"
  },
  {
    "label": "fmodf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "fmodf(float x, float y)"
  },
  {
    "label": "fmodl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "fmodl(long double x, long double y)"
  },
  {
    "label": "frexp()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "frexp(arithmetic value, int* exp)"
  },
  {
    "label": "frexpf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "frexpf(float value, int* exp)"
  },
  {
    "label": "frexpl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "frexpl(long double value, int* exp)"
  },
  {
    "label": "ldexp()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "ldexp(arithmetic value, int exp)"
  },
  {
    "label": "ldexpf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ldexpf(float value, int exp)"
  },
  {
    "label": "ldexpl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "ldexpl(long double value, int exp)"
  },
  {
    "label": "log()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "log(arithmetic x)"
  },
  {
    "label": "logf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "logf(float x)"
  },
  {
    "label": "logl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "logl(long double x)"
  },
  {
    "label": "log10()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "log10(arithmetic x)"
  },
  {
    "label": "log10f()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "log10f(float x)"
  },
  {
    "label": "log10l()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "log10l(long double x)"
  },
  {
    "label": "modf()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "modf(floating_point value, floating_point* iptr)"
  },
  {
    "label": "modff()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "modff(float value, float* iptr)"
  },
  {
    "label": "modfl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "modfl(long double value, long double* iptr)"
  },
  {
    "label": "pow()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "pow(arithmetic x, arithmetic y)"
  },
  {
    "label": "powf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "powf(float x, float y)"
  },
  {
    "label": "powl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "powl(long double x, long double y)"
  },
  {
    "label": "sin()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "sin(arithmetic x)"
  },
  {
    "label": "sinf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "sinf(float x)"
  },
  {
    "label": "sinl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "sinl(long double x)"
  },
  {
    "label": "sinh()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "sinh(arithmetic x)"
  },
  {
    "label": "sinhf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "sinhf(float x)"
  },
  {
    "label": "sinhl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "sinhl(long double x)"
  },
  {
    "label": "sqrt()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "sqrt(arithmetic x)"
  },
  {
    "label": "sqrtf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "sqrtf(float x)"
  },
  {
    "label": "sqrtl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "sqrtl(long double x)"
  },
  {
    "label": "tan()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "tan(arithmetic x)"
  },
  {
    "label": "tanf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "tanf(float x)"
  },
  {
    "label": "tanl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "tanl(long double x)"
  },
  {
    "label": "tanh()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "tanh(arithmetic x)"
  },
  {
    "label": "tanhf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "tanhf(float x)"
  },
  {
    "label": "tanhl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "tanhl(long double x)"
  },
  {
    "label": "signbit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "signbit(arithmetic x)"
  },
  {
    "label": "fpclassify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fpclassify(arithmetic x)"
  },
  {
    "label": "isfinite()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isfinite(arithmetic x)"
  },
  {
    "label": "isinf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isinf(arithmetic x)"
  },
  {
    "label": "isnan()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isnan(arithmetic x)"
  },
  {
    "label": "isnormal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isnormal(arithmetic x)"
  },
  {
    "label": "isgreater()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isgreater(arithmetic x, arithmetic y)"
  },
  {
    "label": "isgreaterequal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isgreaterequal(arithmetic x, arithmetic y)"
  },
  {
    "label": "isless()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isless(arithmetic x, arithmetic y)"
  },
  {
    "label": "islessequal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "islessequal(arithmetic x, arithmetic y)"
  },
  {
    "label": "islessgreater()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "islessgreater(arithmetic x, arithmetic y)"
  },
  {
    "label": "isunordered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isunordered(arithmetic x, arithmetic y)"
  },
  {
    "label": "acosh()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "acosh(arithmetic x)"
  },
  {
    "label": "acoshf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "acoshf(float x)"
  },
  {
    "label": "acoshl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "acoshl(long double x)"
  },
  {
    "label": "asinh()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "asinh(arithmetic x)"
  },
  {
    "label": "asinhf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "asinhf(float x)"
  },
  {
    "label": "asinhl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "asinhl(long double x)"
  },
  {
    "label": "atanh()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "atanh(arithmetic x)"
  },
  {
    "label": "atanhf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "atanhf(float x)"
  },
  {
    "label": "atanhl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "atanhl(long double x)"
  },
  {
    "label": "cbrt()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "cbrt(arithmetic x)"
  },
  {
    "label": "cbrtf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "cbrtf(float x)"
  },
  {
    "label": "cbrtl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "cbrtl(long double x)"
  },
  {
    "label": "copysign()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "copysign(arithmetic x, arithmetic y)"
  },
  {
    "label": "copysignf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "copysignf(float x, float y)"
  },
  {
    "label": "copysignl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "copysignl(long double x, long double y)"
  },
  {
    "label": "erf()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "erf(arithmetic x)"
  },
  {
    "label": "erff()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "erff(float x)"
  },
  {
    "label": "erfl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "erfl(long double x)"
  },
  {
    "label": "erfc()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "erfc(arithmetic x)"
  },
  {
    "label": "erfcf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "erfcf(float x)"
  },
  {
    "label": "erfcl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "erfcl(long double x)"
  },
  {
    "label": "exp2()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "exp2(arithmetic x)"
  },
  {
    "label": "exp2f()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "exp2f(float x)"
  },
  {
    "label": "exp2l()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "exp2l(long double x)"
  },
  {
    "label": "expm1()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "expm1(arithmetic x)"
  },
  {
    "label": "expm1f()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "expm1f(float x)"
  },
  {
    "label": "expm1l()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "expm1l(long double x)"
  },
  {
    "label": "fdim()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "fdim(arithmetic x, arithmetic y)"
  },
  {
    "label": "fdimf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "fdimf(float x, float y)"
  },
  {
    "label": "fdiml()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "fdiml(long double x, long double y)"
  },
  {
    "label": "fma()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "fma(arithmetic x, arithmetic y, arithmetic z)"
  },
  {
    "label": "fmaf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "fmaf(float x, float y, float z)"
  },
  {
    "label": "fmal()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "fmal(long double x, long double y, long double z)"
  },
  {
    "label": "fmax()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "fmax(arithmetic x, arithmetic y)"
  },
  {
    "label": "fmaxf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "fmaxf(float x, float y)"
  },
  {
    "label": "fmaxl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "fmaxl(long double x, long double y)"
  },
  {
    "label": "fmin()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "fmin(arithmetic x, arithmetic y)"
  },
  {
    "label": "fminf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "fminf(float x, float y)"
  },
  {
    "label": "fminl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "fminl(long double x, long double y)"
  },
  {
    "label": "hypot()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "hypot(arithmetic x, arithmetic y)"
  },
  {
    "label": "hypotf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "hypotf(float x, float y)"
  },
  {
    "label": "hypotl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "hypotl(long double x, long double y)"
  },
  {
    "label": "ilogb()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ilogb(arithmetic x)"
  },
  {
    "label": "ilogbf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ilogbf(float x)"
  },
  {
    "label": "ilogbl()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ilogbl(long double x)"
  },
  {
    "label": "lgamma()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "lgamma(arithmetic x)"
  },
  {
    "label": "lgammaf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "lgammaf(float x)"
  },
  {
    "label": "lgammal()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "lgammal(long double x)"
  },
  {
    "label": "llrint()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "llrint(arithmetic x)"
  },
  {
    "label": "llrintf()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "llrintf(float x)"
  },
  {
    "label": "llrintl()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "llrintl(long double x)"
  },
  {
    "label": "llround()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "llround(arithmetic x)"
  },
  {
    "label": "llroundf()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "llroundf(float x)"
  },
  {
    "label": "llroundl()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "llroundl(long double x)"
  },
  {
    "label": "log1p()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "log1p(arithmetic x)"
  },
  {
    "label": "log1pf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "log1pf(float x)"
  },
  {
    "label": "log1pl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "log1pl(long double x)"
  },
  {
    "label": "log2()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "log2(arithmetic x)"
  },
  {
    "label": "log2f()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "log2f(float x)"
  },
  {
    "label": "log2l()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "log2l(long double x)"
  },
  {
    "label": "logb()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "logb(arithmetic x)"
  },
  {
    "label": "logbf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "logbf(float x)"
  },
  {
    "label": "logbl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "logbl(long double x)"
  },
  {
    "label": "lrint()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "lrint(arithmetic x)"
  },
  {
    "label": "lrintf()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "lrintf(float x)"
  },
  {
    "label": "lrintl()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "lrintl(long double x)"
  },
  {
    "label": "lround()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "lround(arithmetic x)"
  },
  {
    "label": "lroundf()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "lroundf(float x)"
  },
  {
    "label": "lroundl()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "lroundl(long double x)"
  },
  {
    "label": "nan()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "nan(const char* str)"
  },
  {
    "label": "nanf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "nanf(const char* str)"
  },
  {
    "label": "nanl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "nanl(const char* str)"
  },
  {
    "label": "nearbyint()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "nearbyint(arithmetic x)"
  },
  {
    "label": "nearbyintf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "nearbyintf(float x)"
  },
  {
    "label": "nearbyintl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "nearbyintl(long double x)"
  },
  {
    "label": "nextafter()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "nextafter(arithmetic x, arithmetic y)"
  },
  {
    "label": "nextafterf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "nextafterf(float x, float y)"
  },
  {
    "label": "nextafterl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "nextafterl(long double x, long double y)"
  },
  {
    "label": "nexttoward()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "nexttoward(arithmetic x, long double y)"
  },
  {
    "label": "nexttowardf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "nexttowardf(float x, long double y)"
  },
  {
    "label": "nexttowardl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "nexttowardl(long double x, long double y)"
  },
  {
    "label": "remainder()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "remainder(arithmetic x, arithmetic y)"
  },
  {
    "label": "remainderf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "remainderf(float x, float y)"
  },
  {
    "label": "remainderl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "remainderl(long double x, long double y)"
  },
  {
    "label": "remquo()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "remquo(arithmetic x, arithmetic y, int* pquo)"
  },
  {
    "label": "remquof()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "remquof(float x, float y, int* pquo)"
  },
  {
    "label": "remquol()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "remquol(long double x, long double y, int* pquo)"
  },
  {
    "label": "rint()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "rint(arithmetic x)"
  },
  {
    "label": "rintf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "rintf(float x)"
  },
  {
    "label": "rintl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "rintl(long double x)"
  },
  {
    "label": "round()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "round(arithmetic x)"
  },
  {
    "label": "roundf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "roundf(float x)"
  },
  {
    "label": "roundl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "roundl(long double x)"
  },
  {
    "label": "scalbln()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "scalbln(arithmetic x, long ex)"
  },
  {
    "label": "scalblnf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "scalblnf(float x, long ex)"
  },
  {
    "label": "scalblnl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "scalblnl(long double x, long ex)"
  },
  {
    "label": "scalbn()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "scalbn(arithmetic x, int ex)"
  },
  {
    "label": "scalbnf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "scalbnf(float x, int ex)"
  },
  {
    "label": "scalbnl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "scalbnl(long double x, int ex)"
  },
  {
    "label": "tgamma()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "tgamma(arithmetic x)"
  },
  {
    "label": "tgammaf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "tgammaf(float x)"
  },
  {
    "label": "tgammal()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "tgammal(long double x)"
  },
  {
    "label": "trunc()",
    "kind": "Method",
    "detail": "Function (floating_point)",
    "insertText": "trunc(arithmetic x)"
  },
  {
    "label": "truncf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "truncf(float x)"
  },
  {
    "label": "truncl()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "truncl(long double x)"
  },
  {
    "label": "__builtin_signbit()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_signbit(__lcpp_x)"
  },
  {
    "label": "signbit()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "signbit(__lcpp_x)"
  },
  {
    "label": "__builtin_fpclassify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL, FP_SUBNORMAL,\n                                FP_ZERO, __lcpp_x)"
  },
  {
    "label": "fpclassify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "fpclassify(__lcpp_x)"
  },
  {
    "label": "__builtin_isfinite()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_isfinite(__lcpp_x)"
  },
  {
    "label": "isfinite()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isfinite(__lcpp_x)"
  },
  {
    "label": "__builtin_isinf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_isinf(__lcpp_x)"
  },
  {
    "label": "isinf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isinf(__lcpp_x)"
  },
  {
    "label": "__libcpp_isinf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__libcpp_isinf(__lcpp_x)"
  },
  {
    "label": "__libcpp_isinf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__libcpp_isinf(__lcpp_x)"
  },
  {
    "label": "__libcpp_isinf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__libcpp_isinf(__lcpp_x)"
  },
  {
    "label": "__builtin_isnan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_isnan(__lcpp_x)"
  },
  {
    "label": "isnan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isnan(__lcpp_x)"
  },
  {
    "label": "__libcpp_isnan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__libcpp_isnan(__lcpp_x)"
  },
  {
    "label": "__libcpp_isnan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__libcpp_isnan(__lcpp_x)"
  },
  {
    "label": "__libcpp_isnan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__libcpp_isnan(__lcpp_x)"
  },
  {
    "label": "__builtin_isnormal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_isnormal(__lcpp_x)"
  },
  {
    "label": "isnormal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isnormal(__lcpp_x)"
  },
  {
    "label": "isgreater()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isgreater(__lcpp_x, __lcpp_y)"
  },
  {
    "label": "isgreaterequal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isgreaterequal(__lcpp_x, __lcpp_y)"
  },
  {
    "label": "isless()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isless(__lcpp_x, __lcpp_y)"
  },
  {
    "label": "islessequal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "islessequal(__lcpp_x, __lcpp_y)"
  },
  {
    "label": "islessgreater()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "islessgreater(__lcpp_x, __lcpp_y)"
  },
  {
    "label": "isunordered()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isunordered(__lcpp_x, __lcpp_y)"
  },
  {
    "label": "__builtin_copysignf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_copysignf(__lcpp_x, __lcpp_y)"
  },
  {
    "label": "__builtin_copysign()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_copysign(__lcpp_x, __lcpp_y)"
  },
  {
    "label": "__builtin_copysignl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_copysignl(__lcpp_x, __lcpp_y)"
  },
  {
    "label": "__builtin_fmaf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_fmaf(__lcpp_x, __lcpp_y, __lcpp_z)"
  },
  {
    "label": "__builtin_fmal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_fmal(__lcpp_x, __lcpp_y, __lcpp_z)"
  },
  {
    "label": "__builtin_llrintf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_llrintf(__lcpp_x)"
  },
  {
    "label": "__builtin_llrintl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_llrintl(__lcpp_x)"
  },
  {
    "label": "__builtin_llroundf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_llroundf(__lcpp_x)"
  },
  {
    "label": "__builtin_llroundl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_llroundl(__lcpp_x)"
  },
  {
    "label": "__builtin_lrintf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_lrintf(__lcpp_x)"
  },
  {
    "label": "__builtin_lrintl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_lrintl(__lcpp_x)"
  },
  {
    "label": "__builtin_lroundf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_lroundf(__lcpp_x)"
  },
  {
    "label": "__builtin_lroundl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_lroundl(__lcpp_x)"
  },
  {
    "label": "__builtin_rintf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_rintf(__lcpp_x)"
  },
  {
    "label": "__builtin_rintl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_rintl(__lcpp_x)"
  },
  {
    "label": "__builtin_round()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_round(__lcpp_x)"
  },
  {
    "label": "__builtin_roundl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_roundl(__lcpp_x)"
  },
  {
    "label": "__builtin_trunc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_trunc(__lcpp_x)"
  },
  {
    "label": "__builtin_truncl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_truncl(__lcpp_x)"
  }
]