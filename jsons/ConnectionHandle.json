[
  {
    "label": "FConnectionHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConnectionHandle"
  },
  {
    "label": "FConnectionHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Templates / TypeHash . h \" namespace UE::Net { class FConnectionHandle { public :)",
    "insertText": "FConnectionHandle()"
  },
  {
    "label": "FConnectionHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConnectionHandle(uint32 InParentConnectionId)"
  },
  {
    "label": "FConnectionHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConnectionHandle(uint32 InParentConnectionId, uint32 InChildConnectionId)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FConnectionHandle& Other)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsParentConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsParentConnection()"
  },
  {
    "label": "IsChildConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildConnection()"
  },
  {
    "label": "GetParentConnectionId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetParentConnectionId()"
  },
  {
    "label": "GetChildConnectionId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetChildConnectionId()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (private : uint32)",
    "insertText": "GetTypeHash(const FConnectionHandle& Handle)"
  },
  {
    "label": "FConnectionHandle()",
    "kind": "Method",
    "detail": "Function (uint32 ParentConnectionId = 0 ; uint32 ChildConnectionId = 0 ; } ;)",
    "insertText": "FConnectionHandle(uint32 InParentConnectionId) : ParentConnectionId(InParentConnectionId) , ChildConnectionId(0)"
  },
  {
    "label": "FConnectionHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FConnectionHandle(uint32 InParentConnectionId, uint32 InChildConnectionId) : ParentConnectionId(InParentConnectionId) , ChildConnectionId(InChildConnectionId)"
  }
]