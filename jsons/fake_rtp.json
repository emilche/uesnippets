[
  {
    "label": "CompareHeaderExtensions()",
    "kind": "Method",
    "detail": "Function (# ifndef MEDIA_BASE_FAKE_RTP_H_ # define MEDIA_BASE_FAKE_RTP_H_ # include<cstddef> # include<vector> const unsigned char kPcmuFrame [ ] = { 0 x80,0 x00,0 x00,0 x01,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x01,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,} ; const int kHeaderExtensionIDs [ ] = { 1,4 } ; const unsigned char kPcmuFrameWithExtensions [ ] = { 0 x90,0 x00,0 x00,0 x01,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x01,0 xBE,0 xDE,0 x00,0 x06,0 x17,0 x41,0 x42,0 x73,0 xA4,0 x75,0 x26,0 x27,0 x48,0 x22,0 x00,0 x00,0 xC8,0 x30,0 x8E,0 x46,0 x55,0 x99,0 x63,0 x86,0 xB3,0 x95,0 xFB,0 x00,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,} ; const unsigned char kRtcpReport [ ] = { 0 x80,0 xc9,0 x00,0 x01,0 x00,0 x00,0 x00,0 x01,0 x00,0 x00,0 x00,0 x02,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00 } ; const unsigned char kH264Packet [ ] = { 0 x80,0 x61,0 x00,0 x01,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x00,0 x02,0 x21,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,0 xFF,} ; const unsigned char kDataPacket [ ] = { 0 x80,0 x65,0 x00,0 x02,0 x00,0 x00,0 x00,0 x03,0 x00,0 x00,0 x00,0 x04,0 x00,0 x00,0 x00,0 x00,0 x01,0 x02,0 x03,0 x04,0 x05,0 x06,0 x07,0 x08,} ; void)",
    "insertText": "CompareHeaderExtensions(const char* packet1, size_t packet1_size, const char* packet2, size_t packet2_size, const std::vector<int>& encrypted_headers, bool expect_equal)"
  }
]