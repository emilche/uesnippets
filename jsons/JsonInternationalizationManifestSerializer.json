[
  {
    "label": "FInternationalizationManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInternationalizationManifest"
  },
  {
    "label": "FStructuredEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructuredEntry"
  },
  {
    "label": "FManifestEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FManifestEntry"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "LOCALIZATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LOCALIZATION_API"
  },
  {
    "label": "FStructuredEntry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Dom / JsonObject . h \" # include \" Internationalization / InternationalizationManifest . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FInternationalizationManifest ; struct FStructuredEntry { public :)",
    "insertText": "FStructuredEntry(const FString& InNamespace ) : Namespace( InNamespace ) , SubNamespaces()"
  },
  {
    "label": "DeserializeManifest()",
    "kind": "Method",
    "detail": "Function (} const FString Namespace ; TArray<TSharedPtr<FStructuredEntry>> SubNamespaces ; TArray<TSharedPtr<class FManifestEntry>> ManifestEntries ; } ; class FJsonObject ; class FJsonInternationalizationManifestSerializer { public : bool)",
    "insertText": "DeserializeManifest(const FString& InStr, TSharedRef< FInternationalizationManifest > Manifest, const FName PlatformName = FName())"
  },
  {
    "label": "DeserializeManifest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeserializeManifest(TSharedRef< FJsonObject > InJsonObj, TSharedRef< FInternationalizationManifest > Manifest, const FName PlatformName = FName())"
  },
  {
    "label": "DeserializeManifestFromFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeserializeManifestFromFile(const FString& InJsonFile, TSharedRef< FInternationalizationManifest > Manifest, const FName PlatformName = FName())"
  },
  {
    "label": "SerializeManifest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeManifest(TSharedRef< const FInternationalizationManifest > Manifest, FString& Str)"
  },
  {
    "label": "SerializeManifest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeManifest(TSharedRef< const FInternationalizationManifest > Manifest, TSharedRef< FJsonObject > JsonObj)"
  },
  {
    "label": "SerializeManifestToFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeManifestToFile(TSharedRef< const FInternationalizationManifest > Manifest, const FString& InJsonFile)"
  },
  {
    "label": "DeserializeInternal()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "DeserializeInternal(const TSharedRef< FJsonObject > InJsonObj, TSharedRef< FInternationalizationManifest > Manifest, const FName PlatformName)"
  },
  {
    "label": "SerializeInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeInternal(TSharedRef< const FInternationalizationManifest > InManifest, TSharedRef< FJsonObject > JsonObj)"
  },
  {
    "label": "JsonObjToManifest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "JsonObjToManifest(TSharedRef< FJsonObject > InJsonObj, FString InNamespace, TSharedRef< FInternationalizationManifest > Manifest, const FName PlatformName)"
  },
  {
    "label": "GenerateStructuredData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateStructuredData(TSharedRef< const FInternationalizationManifest > InManifest, TSharedPtr< FStructuredEntry > RootElement)"
  },
  {
    "label": "SortStructuredData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortStructuredData(TSharedPtr< FStructuredEntry > InElement)"
  },
  {
    "label": "StructuredDataToJsonObj()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StructuredDataToJsonObj(TSharedPtr< const FStructuredEntry> InElement, TSharedRef< FJsonObject > JsonObj)"
  }
]