[
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "CwiseUnaryOpImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CwiseUnaryOpImpl"
  },
  {
    "label": "CwiseUnaryOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CwiseUnaryOp"
  },
  {
    "label": "UnaryOp()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_CWISE_UNARY_OP_H # define EIGEN_CWISE_UNARY_OP_H namespace Eigen { namespace internal { template<UnaryOp,XprType> struct traits<CwiseUnaryOp<UnaryOp,XprType>> : traits<XprType> { typedef result_of<)",
    "insertText": "UnaryOp(const typename XprType::Scalar&)"
  },
  {
    "label": "EIGEN_GENERIC_PUBLIC_INTERFACE()",
    "kind": "Method",
    "detail": "Function (typedef XprType::Nested XprTypeNested ; typedef remove_reference<XprTypeNested>::type _XprTypeNested ; enum { Flags = _XprTypeNested::Flags& RowMajorBit } ; } ; } template<UnaryOp,XprType,StorageKind> class CwiseUnaryOpImpl ; template<UnaryOp,XprType> class CwiseUnaryOp : public CwiseUnaryOpImpl<UnaryOp,XprType,internal::traits<XprType>::StorageKind>,internal::no_assignment_operator { public : typedef CwiseUnaryOpImpl<UnaryOp,XprType,internal::traits<XprType>::StorageKind>::Base Base ;)",
    "insertText": "EIGEN_GENERIC_PUBLIC_INTERFACE(CwiseUnaryOp)"
  },
  {
    "label": "CwiseUnaryOp()",
    "kind": "Method",
    "detail": "Function (typedef internal::remove_all<XprType>::type NestedExpression ; EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE)",
    "insertText": "CwiseUnaryOp(const XprType& xpr, const UnaryOp& func = UnaryOp()) : m_xpr(xpr), m_functor(func)"
  },
  {
    "label": "rows()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE EIGEN_CONSTEXPR Index)",
    "insertText": "rows()"
  },
  {
    "label": "cols()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE EIGEN_CONSTEXPR Index)",
    "insertText": "cols()"
  },
  {
    "label": "functor()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const UnaryOp&)",
    "insertText": "functor()"
  }
]