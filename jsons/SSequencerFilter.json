[
  {
    "label": "FSequencerTrackFilterContextMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerTrackFilterContextMenu"
  },
  {
    "label": "SSequencerFilterCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerFilterCheckBox"
  },
  {
    "label": "SSequencerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerFilter"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Filters / SequencerTrackFilterBase . h \" # include \" SSequencerFilterBar . h \" class FSequencerTrackFilterContextMenu ; class SSequencerFilterCheckBox ; class SSequencerFilter : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSequencerFilterRequest, const TSharedRef<SSequencerFilter>&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SSequencerFilter)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(EFilterPillStyle, FilterPillStyle) SLATE_END_ARGS() void Construct(const FArguments& InArgs , const TSharedRef<FSequencerFilterBar>& InFilterBar , const TSharedRef<FSequencerTrackFilter>& InFilter)"
  },
  {
    "label": "GetFilter()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FSequencerTrackFilter>)",
    "insertText": "GetFilter()"
  },
  {
    "label": "ConstructBasicFilterWidget()",
    "kind": "Method",
    "detail": "Function (protected : TSharedRef<SWidget>)",
    "insertText": "ConstructBasicFilterWidget()"
  },
  {
    "label": "ConstructDefaultFilterWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructDefaultFilterWidget()"
  },
  {
    "label": "IsActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActive()"
  },
  {
    "label": "OnFilterToggled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterToggled(const ECheckBoxState NewState)"
  },
  {
    "label": "OnFilterCtrlClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnFilterCtrlClick()"
  },
  {
    "label": "OnFilterAltClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnFilterAltClick()"
  },
  {
    "label": "OnFilterMiddleButtonClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnFilterMiddleButtonClick()"
  },
  {
    "label": "OnFilterDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnFilterDoubleClick()"
  },
  {
    "label": "GetRightClickMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetRightClickMenuContent()"
  },
  {
    "label": "IsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsChecked()"
  },
  {
    "label": "GetFilterImageColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetFilterImageColorAndOpacity()"
  },
  {
    "label": "GetFilterOverlayVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFilterOverlayVisibility()"
  },
  {
    "label": "GetFilterNamePadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetFilterNamePadding()"
  },
  {
    "label": "GetFilterDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFilterDisplayName()"
  },
  {
    "label": "IsButtonEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsButtonEnabled()"
  },
  {
    "label": "ActivateAllButThis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateAllButThis(const bool bInActive)"
  }
]