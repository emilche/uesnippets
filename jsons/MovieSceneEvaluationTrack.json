[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMovieSceneEvaluationOperand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationOperand"
  },
  {
    "label": "FMovieSceneExecutionTokens",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExecutionTokens"
  },
  {
    "label": "FMovieSceneFieldEntry_ChildTemplate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneFieldEntry_ChildTemplate"
  },
  {
    "label": "FMovieSceneInterrogationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneInterrogationData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMovieSceneEvaluationTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationTrack"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FScopedOverrideTrackSegmentBlender",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedOverrideTrackSegmentBlender"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Compilation / MovieSceneSegmentCompiler . h \" # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" CoreMinimal . h \" # include \" Evaluation / MovieSceneEvalTemplate . h \" # include \" Evaluation / MovieSceneEvaluationField . h \" # include \" Evaluation / MovieScenePlayback . h \" # include \" Evaluation / MovieSceneSegment . h \" # include \" Evaluation / MovieSceneTrackImplementation . h \" # include \" Evaluation / PersistentEvaluationData . h \" # include \" HAL / Platform . h \" # include \" Misc / Guid . h \" # include \" Misc / InlineValue . h \" # include \" MovieSceneTrack . h \" # include \" Templates / EnableIf . h \" # include \" Templates / PointerIsConvertibleFromTo . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / Class . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" MovieSceneEvaluationTrack . generated . h \" class FArchive ; class IMovieScenePlayer ; class UObject ; struct FMovieSceneEvaluationOperand ; struct FMovieSceneExecutionTokens ; struct FMovieSceneFieldEntry_ChildTemplate ; struct FMovieSceneInterrogationData ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (,Swept,} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneEvaluationTrack()"
  },
  {
    "label": "FMovieSceneEvaluationTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneEvaluationTrack(const FGuid& InObjectBindingID)"
  },
  {
    "label": "FMovieSceneEvaluationTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneEvaluationTrack(const FMovieSceneEvaluationTrack&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FMovieSceneEvaluationTrack&)",
    "insertText": "operator(const FMovieSceneEvaluationTrack&)"
  },
  {
    "label": "FMovieSceneEvaluationTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneEvaluationTrack(FMovieSceneEvaluationTrack&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FMovieSceneEvaluationTrack&)",
    "insertText": "operator(FMovieSceneEvaluationTrack&&)"
  },
  {
    "label": "GetObjectBindingID()",
    "kind": "Method",
    "detail": "Function (public : const FGuid&)",
    "insertText": "GetObjectBindingID()"
  },
  {
    "label": "GetChildTemplates()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const FMovieSceneEvalTemplatePtr>)",
    "insertText": "GetChildTemplates()"
  },
  {
    "label": "GetChildTemplate()",
    "kind": "Method",
    "detail": "Function (} const FMovieSceneEvalTemplate&)",
    "insertText": "GetChildTemplate(int32 TemplateIndex)"
  },
  {
    "label": "GetEvaluationGroup()",
    "kind": "Method",
    "detail": "Function (} public : FName)",
    "insertText": "GetEvaluationGroup()"
  },
  {
    "label": "GetEvaluationPriority()",
    "kind": "Method",
    "detail": "Function (EvaluationGroup = InEvaluationGroup ; } public : uint16)",
    "insertText": "GetEvaluationPriority()"
  },
  {
    "label": "GetEvaluationMethod()",
    "kind": "Method",
    "detail": "Function (EvaluationPriority = InEvaluationPriority ; } EEvaluationMethod)",
    "insertText": "GetEvaluationMethod()"
  },
  {
    "label": "SetPreAndPostrollConditions()",
    "kind": "Method",
    "detail": "Function (EvaluationMethod = InMethod ; } void)",
    "insertText": "SetPreAndPostrollConditions(bool bInEvaluateInPreroll, bool bInEvaluateInPostroll)"
  },
  {
    "label": "ShouldEvaluateInPreroll()",
    "kind": "Method",
    "detail": "Function (bEvaluateInPreroll = bInEvaluateInPreroll ; bEvaluateInPostroll = bInEvaluateInPostroll ; } bool)",
    "insertText": "ShouldEvaluateInPreroll()"
  },
  {
    "label": "HasTearDownPriority()",
    "kind": "Method",
    "detail": "Function (bTearDownPriority = true ; } bool)",
    "insertText": "HasTearDownPriority()"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate(TArrayView<const FMovieSceneFieldEntry_ChildTemplate> Children, const FMovieSceneEvaluationOperand& Operand, const FMovieSceneContext& Context, const FPersistentEvaluationData& PersistentData, FMovieSceneExecutionTokens& ExecutionTokens)"
  },
  {
    "label": "DefaultInitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefaultInitialize(TArrayView<const FMovieSceneFieldEntry_ChildTemplate> Children, const FMovieSceneEvaluationOperand& Operand, FMovieSceneContext Context, FPersistentEvaluationData& PersistentData, IMovieScenePlayer& Player)"
  },
  {
    "label": "DefaultEvaluate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefaultEvaluate(TArrayView<const FMovieSceneFieldEntry_ChildTemplate> Children, const FMovieSceneEvaluationOperand& Operand, const FMovieSceneContext& Context, const FPersistentEvaluationData& PersistentData, FMovieSceneExecutionTokens& ExecutionTokens)"
  },
  {
    "label": "Interrogate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Interrogate(const FMovieSceneContext& Context, FMovieSceneInterrogationData& Container, UObject* BindingOverride = nullptr)"
  },
  {
    "label": "EvaluateStatic()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "EvaluateStatic(TArrayView<const FMovieSceneFieldEntry_ChildTemplate> Children, const FMovieSceneEvaluationOperand& Operand, FMovieSceneContext Context, const FPersistentEvaluationData& PersistentData, FMovieSceneExecutionTokens& ExecutionTokens)"
  },
  {
    "label": "EvaluateSwept()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluateSwept(TArrayView<const FMovieSceneFieldEntry_ChildTemplate> Children, const FMovieSceneEvaluationOperand& Operand, const FMovieSceneContext& Context, const FPersistentEvaluationData& PersistentData, FMovieSceneExecutionTokens& ExecutionTokens)"
  },
  {
    "label": "DefineAsSingleTemplate()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "DefineAsSingleTemplate(FMovieSceneEvalTemplatePtr&& InTemplate)"
  },
  {
    "label": "AddChildTemplate()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddChildTemplate(FMovieSceneEvalTemplatePtr&& InTemplate)"
  },
  {
    "label": "SetSourceTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceTrack(UMovieSceneTrack* InSourceTrack)"
  },
  {
    "label": "GetSourceTrack()",
    "kind": "Method",
    "detail": "Function (SourceTrack = InSourceTrack ; } UMovieSceneTrack*)",
    "insertText": "GetSourceTrack()"
  },
  {
    "label": "SetTrackImplementation()",
    "kind": "Method",
    "detail": "Function (} template<T> TEnableIf<TPointerIsConvertibleFromTo<T,FMovieSceneTrackImplementation>::Value>::Type)",
    "insertText": "SetTrackImplementation(T&& InImpl)"
  },
  {
    "label": "FMovieSceneTrackImplementationPtr()",
    "kind": "Method",
    "detail": "Function (TrackTemplate =)",
    "insertText": "FMovieSceneTrackImplementationPtr(MoveTemp(InImpl))"
  },
  {
    "label": "SetupOverrides()",
    "kind": "Method",
    "detail": "Function (TrackTemplate ->)",
    "insertText": "SetupOverrides()"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "HasCustomInitialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCustomInitialize()"
  },
  {
    "label": "OnBeginEvaluation()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "OnBeginEvaluation(FPersistentEvaluationData& PersistentData, IMovieScenePlayer& Player)"
  },
  {
    "label": "OnEndEvaluation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnEndEvaluation(FPersistentEvaluationData& PersistentData, IMovieScenePlayer& Player)"
  },
  {
    "label": "FScopedOverrideTrackSegmentBlender()",
    "kind": "Method",
    "detail": "Function (} ; template<> struct TStructOpsTypeTraits<FMovieSceneEvaluationTrack> : public TStructOpsTypeTraitsBase2<FMovieSceneEvaluationTrack> { enum { WithPostSerialize = true,WithCopy = false } ; } ; # if WITH_DEV_AUTOMATION_TESTS struct FScopedOverrideTrackSegmentBlender {)",
    "insertText": "FScopedOverrideTrackSegmentBlender(FMovieSceneTrackSegmentBlenderPtr&& InTrackSegmentBlender)"
  },
  {
    "label": "FScopedOverrideTrackSegmentBlender()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FScopedOverrideTrackSegmentBlender()"
  },
  {
    "label": "FScopedOverrideTrackSegmentBlender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedOverrideTrackSegmentBlender(const FScopedOverrideTrackSegmentBlender&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FScopedOverrideTrackSegmentBlender&)",
    "insertText": "operator(const FScopedOverrideTrackSegmentBlender&)"
  }
]