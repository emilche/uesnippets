[
  {
    "label": "FChaosPhysicsMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosPhysicsMaterial"
  },
  {
    "label": "GetPhysicsMaterial()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / ArrayCollectionArray . h \" # include \" Chaos / Framework / Handles . h \" # include \" Chaos / ParticleHandleFwd . h \" # include \" Chaos / Serializable . h \" # include \" Chaos / ShapeInstanceFwd . h \" # include \" Templates / UniquePtr . h \" namespace Chaos { class FChaosPhysicsMaterial ; namespace Private { const FChaosPhysicsMaterial*)",
    "insertText": "GetPhysicsMaterial(const FGeometryParticleHandle* Particle, const FShapeInstance* Shape, const int32 FaceIndex, const TArrayCollectionArray<TSerializablePtr<FChaosPhysicsMaterial>>* PhysicsMaterials, const TArrayCollectionArray<TUniquePtr<FChaosPhysicsMaterial>>* PerParticlePhysicsMaterials, const THandleArray<FChaosPhysicsMaterial>* const SimMaterials)"
  },
  {
    "label": "GetFirstPhysicsMaterial()",
    "kind": "Method",
    "detail": "Function (const FChaosPhysicsMaterial*)",
    "insertText": "GetFirstPhysicsMaterial(const FGeometryParticleHandle* Particle, const TArrayCollectionArray<TSerializablePtr<FChaosPhysicsMaterial>>* PhysicsMaterials, const TArrayCollectionArray<TUniquePtr<FChaosPhysicsMaterial>>* PerParticlePhysicsMaterials, const THandleArray<FChaosPhysicsMaterial>* const SimMaterials)"
  }
]