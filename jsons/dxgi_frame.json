[
  {
    "label": "DxgiDuplicatorController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxgiDuplicatorController"
  },
  {
    "label": "DxgiFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxgiFrame"
  },
  {
    "label": "DxgiFrame()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_WIN_DXGI_FRAME_H_ # define MODULES_DESKTOP_CAPTURE_WIN_DXGI_FRAME_H_ # include<memory> # include<vector> # include \" modules / desktop_capture / desktop_capture_types . h \" # include \" modules / desktop_capture / desktop_capturer . h \" # include \" modules / desktop_capture / desktop_geometry . h \" # include \" modules / desktop_capture / resolution_tracker . h \" # include \" modules / desktop_capture / shared_desktop_frame . h \" # include \" modules / desktop_capture / shared_memory . h \" # include \" modules / desktop_capture / win / dxgi_context . h \" namespace webrtc { class DxgiDuplicatorController ; class DxgiFrame final { public : using Context = DxgiFrameContext ;)",
    "insertText": "DxgiFrame(SharedMemoryFactory* factory)"
  },
  {
    "label": "DxgiFrame()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DxgiFrame()"
  },
  {
    "label": "frame()",
    "kind": "Method",
    "detail": "Function (SharedDesktopFrame*)",
    "insertText": "frame()"
  },
  {
    "label": "Prepare()",
    "kind": "Method",
    "detail": "Function (private : class DxgiDuplicatorController ; bool)",
    "insertText": "Prepare(DesktopSize size, DesktopCapturer::SourceId source_id)"
  },
  {
    "label": "context()",
    "kind": "Method",
    "detail": "Function (Context*)",
    "insertText": "context()"
  }
]