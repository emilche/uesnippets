[
  {
    "label": "FBuildPatchProgress",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildPatchProgress"
  },
  {
    "label": "FBuildPatchProgress()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / ThreadSafeBool . h \" # include \" Installer / Controllable . h \" # include \" BuildPatchState . h \" namespace BuildPatchServices { struct FBuildPatchProgress : public IControllable { public :)",
    "insertText": "FBuildPatchProgress()"
  },
  {
    "label": "SetPaused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPaused(bool bIsPaused)"
  },
  {
    "label": "Abort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Abort()"
  },
  {
    "label": "SetStateProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStateProgress(const EBuildPatchState& State, const float& Value)"
  },
  {
    "label": "SetStateWeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStateWeight(const EBuildPatchState& State, const float& Value)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (EBuildPatchState)",
    "insertText": "GetState()"
  },
  {
    "label": "GetProgress()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetProgress()"
  },
  {
    "label": "GetProgressNoMarquee()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetProgressNoMarquee()"
  },
  {
    "label": "GetStateProgress()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetStateProgress(const EBuildPatchState& State)"
  },
  {
    "label": "GetStateWeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetStateWeight(const EBuildPatchState& State)"
  },
  {
    "label": "TogglePauseState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TogglePauseState()"
  },
  {
    "label": "WaitWhilePaused()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "WaitWhilePaused()"
  },
  {
    "label": "GetPauseState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPauseState()"
  },
  {
    "label": "SetIsDownloading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsDownloading(bool bIsDownloading)"
  },
  {
    "label": "CancelAbort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAbort()"
  },
  {
    "label": "UpdateProgressInfo()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateProgressInfo()"
  },
  {
    "label": "UpdateCachedValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedValues()"
  },
  {
    "label": "int32()",
    "kind": "Method",
    "detail": "Function (private : const bool bHasProgressValue [ static_cast<)",
    "insertText": "int32(EBuildPatchState::NUM_PROGRESS_STATES)"
  }
]