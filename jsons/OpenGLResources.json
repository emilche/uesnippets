[
  {
    "label": "FOpenGLDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLDynamicRHI"
  },
  {
    "label": "FOpenGLLinkedProgram",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLLinkedProgram"
  },
  {
    "label": "FOpenGLTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLTexture"
  },
  {
    "label": "FOpenGLViewableResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLViewableResource"
  },
  {
    "label": "FOpenGLShaderResourceView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLShaderResourceView"
  },
  {
    "label": "FOpenGLUnorderedAccessView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLUnorderedAccessView"
  },
  {
    "label": "FOpenGLView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLView"
  },
  {
    "label": "TOpenGLBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TOpenGLBuffer"
  },
  {
    "label": "FOpenGLBasePixelBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLBasePixelBuffer"
  },
  {
    "label": "FOpenGLBaseBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLBaseBuffer"
  },
  {
    "label": "FOpenGLEUniformBufferData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenGLEUniformBufferData"
  },
  {
    "label": "FOpenGLUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLUniformBuffer"
  },
  {
    "label": "TOpenGLStreamedBufferArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TOpenGLStreamedBufferArray"
  },
  {
    "label": "FOpenGLVertexElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenGLVertexElement"
  },
  {
    "label": "FOpenGLVertexDeclaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLVertexDeclaration"
  },
  {
    "label": "FOpenGLBoundShaderState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLBoundShaderState"
  },
  {
    "label": "FTextureEvictionLRU",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureEvictionLRU"
  },
  {
    "label": "FTextureEvictionParams",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureEvictionParams"
  },
  {
    "label": "FOpenGLTextureDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLTextureDesc"
  },
  {
    "label": "FOpenGLTextureCreateDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLTextureCreateDesc"
  },
  {
    "label": "OPENGLDRV_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENGLDRV_API"
  },
  {
    "label": "EAliasConstructorParam",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAliasConstructorParam"
  },
  {
    "label": "FOpenGLSamplerState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLSamplerState"
  },
  {
    "label": "FOpenGLRenderQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLRenderQuery"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FActiveQueries",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveQueries"
  },
  {
    "label": "FQueryPool",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQueryPool"
  },
  {
    "label": "FOpenGLRenderQuery_RHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLRenderQuery_RHI"
  },
  {
    "label": "FOpenGLView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLView"
  },
  {
    "label": "FOpenGLUnorderedAccessView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLUnorderedAccessView"
  },
  {
    "label": "FOpenGLShaderResourceView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLShaderResourceView"
  },
  {
    "label": "FOpenGLEventQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLEventQuery"
  },
  {
    "label": "FOpenGLViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLViewport"
  },
  {
    "label": "FOpenGLDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLDynamicRHI"
  },
  {
    "label": "FPlatformOpenGLContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformOpenGLContext"
  },
  {
    "label": "FOpenGLDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLDynamicRHI"
  },
  {
    "label": "FPlatformOpenGLContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformOpenGLContext"
  },
  {
    "label": "FOpenGLGPUFence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLGPUFence"
  },
  {
    "label": "FOpenGLGPUFenceProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenGLGPUFenceProxy"
  },
  {
    "label": "FOpenGLStagingBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLStagingBuffer"
  },
  {
    "label": "FOpenGLDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLDynamicRHI"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "TOpenGLResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOpenGLResourceTraits"
  },
  {
    "label": "OnBufferDeletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBufferDeletion( GLuint BufferResource )"
  },
  {
    "label": "OnPixelBufferDeletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPixelBufferDeletion( GLuint PixelBufferResource )"
  },
  {
    "label": "OnUniformBufferDeletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUniformBufferDeletion( GLuint UniformBufferResource, uint32 AllocatedSize, bool bStreamDraw, uint32 Offset, uint8* Pointer )"
  },
  {
    "label": "OnProgramDeletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProgramDeletion( GLint ProgramResource )"
  },
  {
    "label": "CachedBindBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CachedBindBuffer( GLenum Type, GLuint Buffer )"
  },
  {
    "label": "CachedBindPixelUnpackBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CachedBindPixelUnpackBuffer( GLenum Type, GLuint Buffer )"
  },
  {
    "label": "CachedBindUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CachedBindUniformBuffer( GLuint Buffer )"
  },
  {
    "label": "IsUniformBufferBound()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUniformBufferBound( GLuint Buffer )"
  },
  {
    "label": "UpdateUniformBufferStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateUniformBufferStats(int64 BufferSize, bool bAllocating)"
  },
  {
    "label": "UpdateBufferStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBufferStats(const FRHIBufferDesc& BufferDesc, bool bAllocating)"
  },
  {
    "label": "UpdateLinkedViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLinkedViews()"
  },
  {
    "label": "LoadData()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "LoadData(LockOffset, LockSize, LockBuffer)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "check(bLockBufferWasAllocated)"
  },
  {
    "label": "LoadData()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "LoadData(InOffset, InSize, InData)"
  },
  {
    "label": "SetGLUniformBufferParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGLUniformBufferParams(GLuint InResource, uint32 InOffset, uint8* InPersistentlyMappedBuffer, uint32 InAllocatedSize, FOpenGLEUniformBufferDataRef InEmulatedBuffer, bool bInStreamDraw)"
  },
  {
    "label": "SetLayoutTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayoutTable(const void* Contents, EUniformBufferValidation Validation)"
  },
  {
    "label": "BaseType()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "BaseType(Stride, InitialBufferSize, BUF_Volatile, NULL, true)"
  },
  {
    "label": "BaseType()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "BaseType(Stride, MinNeededBufferSize, BUF_Volatile)"
  },
  {
    "label": "GetNumUniformBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNumUniformBuffers(int32 NumVertexUniformBuffers[SF_NumGraphicsFrequencies])"
  },
  {
    "label": "NeedsTextureStage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsTextureStage(int32 TextureStageIndex)"
  },
  {
    "label": "MaxTextureStageUsed()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MaxTextureStageUsed()"
  },
  {
    "label": "RequiresDriverInstantiation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresDriverInstantiation()"
  },
  {
    "label": "TextureLRU()",
    "kind": "Method",
    "detail": "Function (FOpenGLTextureLRUContainer)",
    "insertText": "TextureLRU(MaxNumLRUs)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FOpenGLTexture* TextureBase)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Add(FOpenGLTexture* TextureBase)"
  },
  {
    "label": "Touch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Touch(FOpenGLTexture* TextureBase)"
  },
  {
    "label": "TickEviction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickEviction()"
  },
  {
    "label": "FTextureEvictionParams()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FTextureEvictionParams(uint32 NumMips)"
  },
  {
    "label": "SetMipData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMipData(uint32 MipIndex, const void* Data, uint32 Bytes)"
  },
  {
    "label": "ReleaseMipData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseMipData(uint32 RetainMips)"
  },
  {
    "label": "CloneMipData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloneMipData(const FTextureEvictionParams& Src, uint32 NumMips, int32 SrcOffset, int DstOffset)"
  },
  {
    "label": "FOpenGLTextureDesc()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FOpenGLTextureDesc(FRHITextureDesc const& InDesc)"
  },
  {
    "label": "CanDeferTextureCreation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeferTextureCreation()"
  },
  {
    "label": "FOpenGLTexture()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FOpenGLTexture(FRHICommandListBase& RHICmdList, FOpenGLTextureCreateDesc const& CreateDesc)"
  },
  {
    "label": "FOpenGLTexture()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FOpenGLTexture(FOpenGLTextureCreateDesc const& CreateDesc, GLuint Resource)"
  },
  {
    "label": "FOpenGLTexture()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FOpenGLTexture(FOpenGLTexture& Texture, const FString& Name, EAliasConstructorParam)"
  },
  {
    "label": "AliasResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AliasResources(FOpenGLTexture& Texture)"
  },
  {
    "label": "GetLockSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetLockSize(uint32 MipIndex, uint32 ArrayIndex, EResourceLockMode LockMode, uint32& DestStride)"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlock(uint32 MipIndex, uint32 ArrayIndex)"
  },
  {
    "label": "CloneViaCopyImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloneViaCopyImage(FOpenGLTexture* Src, uint32 InNumMips, int32 SrcOffset, int32 DstOffset)"
  },
  {
    "label": "Resolve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resolve(uint32 MipIndex, uint32 ArrayIndex)"
  },
  {
    "label": "RestoreEvictedGLResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreEvictedGLResource(bool bAttemptToRetainMips)"
  },
  {
    "label": "CanBeEvicted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeEvicted()"
  },
  {
    "label": "TryEvictGLResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryEvictGLResource()"
  },
  {
    "label": "UpdateTextureStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTextureStats(FOpenGLTexture* Texture, bool bAllocating)"
  },
  {
    "label": "DeleteGLResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteGLResource()"
  },
  {
    "label": "Fill2DGLTextureImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Fill2DGLTextureImage(const FOpenGLTextureFormat& GLFormat, const bool bSRGB, uint32 MipIndex, const void* LockedBuffer, uint32 LockedSize, uint32 ArrayIndex)"
  },
  {
    "label": "AcquireGlQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquireGlQuery()"
  },
  {
    "label": "ReleaseGlQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseGlQuery()"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Begin()"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "End()"
  },
  {
    "label": "CacheResult()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CacheResult(bool bWait)"
  },
  {
    "label": "PollQueryResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PollQueryResults()"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "Link()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Link()"
  },
  {
    "label": "Unlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlink()"
  },
  {
    "label": "SetResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResult(uint64 Value)"
  },
  {
    "label": "CheckContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckContext()"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetResult(bool bWait, uint64& OutResult)"
  },
  {
    "label": "FOpenGLUnorderedAccessView()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FOpenGLUnorderedAccessView(FRHICommandListBase& RHICmdList, FRHIViewableResource* Resource, FRHIViewDesc const& ViewDesc)"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate()"
  },
  {
    "label": "FOpenGLShaderResourceView()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FOpenGLShaderResourceView(FRHICommandListBase& RHICmdList, FRHIViewableResource* Resource, FRHIViewDesc const& ViewDesc)"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate()"
  },
  {
    "label": "ReleaseOpenGLFramebuffers()",
    "kind": "Method",
    "detail": "Function (OPENGLDRV_API)",
    "insertText": "ReleaseOpenGLFramebuffers(FRHITexture* TextureRHI)"
  },
  {
    "label": "IssueEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IssueEvent()"
  },
  {
    "label": "WaitForCompletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForCompletion()"
  },
  {
    "label": "FOpenGLViewport()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FOpenGLViewport(class FOpenGLDynamicRHI* InOpenGLRHI,void* InWindowHandle,uint32 InSizeX,uint32 InSizeY,bool bInIsFullscreen,EPixelFormat PreferredPixelFormat)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resize(uint32 InSizeX,uint32 InSizeY,bool bInIsFullscreen)"
  },
  {
    "label": "FIntPoint()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FIntPoint(SizeX, SizeY)"
  },
  {
    "label": "FOpenGLGPUFence()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FOpenGLGPUFence(FName InName)"
  },
  {
    "label": "WriteInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteInternal()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  }
]