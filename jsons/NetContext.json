[
  {
    "label": "FNetRPC",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetRPC"
  },
  {
    "label": "FObjectReplicator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectReplicator"
  },
  {
    "label": "FNetContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetContext"
  },
  {
    "label": "FScopedNetContextRPC",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedNetContextRPC"
  },
  {
    "label": "IsInsideNetRPC()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / PlatformMisc . h \" namespace UE::Net::Private { class FNetRPC ; } class FObjectReplicator ; namespace UE::Net { class FNetContext { public : bool)",
    "insertText": "IsInsideNetRPC()"
  },
  {
    "label": "FNetContext()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FNetContext()"
  },
  {
    "label": "FScopedNetContextRPC()",
    "kind": "Method",
    "detail": "Function (bool bIsInRPCStack ; } ; class FScopedNetContextRPC { private : UE::Net::Private::FNetRPC ; FObjectReplicator ;)",
    "insertText": "FScopedNetContextRPC()"
  }
]