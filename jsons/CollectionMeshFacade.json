[
  {
    "label": "FCollectionMeshFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionMeshFacade"
  },
  {
    "label": "FCollectionMeshFacade()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GeometryCollection / ManagedArrayAccessor . h \" # include \" GeometryCollection / ManagedArrayCollection . h \" # include \" GeometryCollection / GeometryCollection . h \" # include \" GeometryCollection / Facades / CollectionUVFacade . h \" namespace GeometryCollection::Facades { class FCollectionMeshFacade : public FCollectionUVFacade { public :)",
    "insertText": "FCollectionMeshFacade(FManagedArrayCollection& InCollection)"
  },
  {
    "label": "FCollectionMeshFacade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCollectionMeshFacade(const FManagedArrayCollection& InCollection)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "DefineSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefineSchema()"
  },
  {
    "label": "GetVertexIndices()",
    "kind": "Method",
    "detail": "Function (const TArray<int32>)",
    "insertText": "GetVertexIndices(int32 BoneIdx)"
  },
  {
    "label": "GetVertexPositions()",
    "kind": "Method",
    "detail": "Function (const TArrayView<const FVector3f>)",
    "insertText": "GetVertexPositions(int32 BoneIdx)"
  },
  {
    "label": "GetFaceIndices()",
    "kind": "Method",
    "detail": "Function (const TArray<int32>)",
    "insertText": "GetFaceIndices(int32 BoneIdx)"
  },
  {
    "label": "BakeTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BakeTransform(int32 TransformIdx, const FTransform& InTransform)"
  },
  {
    "label": "GetGeometryGroupIndexArray()",
    "kind": "Method",
    "detail": "Function (const TArray<int32>)",
    "insertText": "GetGeometryGroupIndexArray()"
  }
]