[
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "FMovieSceneCameraCutParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneCameraCutParams"
  },
  {
    "label": "FCameraCutPlaybackCapability",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraCutPlaybackCapability"
  },
  {
    "label": "FPreAnimatedCameraCutStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedCameraCutStorage"
  },
  {
    "label": "FSequenceInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequenceInstance"
  },
  {
    "label": "FPreAnimatedCameraCutState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedCameraCutState"
  },
  {
    "label": "FPreAnimatedCameraCutTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedCameraCutTraits"
  },
  {
    "label": "FCameraCutGameHandler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraCutGameHandler"
  },
  {
    "label": "ShouldHandleWorldCameraCuts()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStateStorage . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStateTypes . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStorageID . inl \" class UMovieSceneEntitySystemLinker ; struct FMovieSceneCameraCutParams ; namespace UE::MovieScene { struct FCameraCutPlaybackCapability ; struct FPreAnimatedCameraCutStorage ; struct FSequenceInstance ; struct FPreAnimatedCameraCutState { FObjectKey LastWorld ; FObjectKey LastLocalPlayer ; FObjectKey LastViewTarget ; TOptional<EAspectRatioAxisConstraint> LastAspectRatioAxisConstraint ; } ; struct FPreAnimatedCameraCutTraits : FPreAnimatedStateTraits { using KeyType = uint8 ; using StorageType = FPreAnimatedCameraCutState ; bool)",
    "insertText": "ShouldHandleWorldCameraCuts(UWorld* World)"
  },
  {
    "label": "CachePreAnimatedValue()",
    "kind": "Method",
    "detail": "Function (StorageType)",
    "insertText": "CachePreAnimatedValue(UObject* PlaybackContext, uint8 InKey)"
  },
  {
    "label": "RestorePreAnimatedValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestorePreAnimatedValue(uint8 InKey, const StorageType& CachedValue, const FRestoreStateParams& Params)"
  },
  {
    "label": "FCameraCutGameHandler()",
    "kind": "Method",
    "detail": "Function (} ; struct FPreAnimatedCameraCutStorage : TPreAnimatedStateStorage<FPreAnimatedCameraCutTraits> { TAutoRegisterPreAnimatedStorageID<FPreAnimatedCameraCutStorage> StorageID ; } ; struct FCameraCutGameHandler {)",
    "insertText": "FCameraCutGameHandler(UMovieSceneEntitySystemLinker* InLinker, const FSequenceInstance& InSequenceInstance)"
  },
  {
    "label": "SetCameraCut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraCut(UObject* CameraObject, const FMovieSceneCameraCutParams& CameraCutParams)"
  },
  {
    "label": "CachePreAnimatedValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CachePreAnimatedValue(UMovieSceneEntitySystemLinker* Linker, const FSequenceInstance& SequenceInstance)"
  },
  {
    "label": "ForcePreAnimatedValueRestore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForcePreAnimatedValueRestore(UMovieSceneEntitySystemLinker* Linker, const FSequenceInstance& SequenceInstance)"
  },
  {
    "label": "GetPlaybackController()",
    "kind": "Method",
    "detail": "Function (private : UMovieSceneEntitySystemLinker* Linker ; const FSequenceInstance& SequenceInstance ; } ; const APlayerController*)",
    "insertText": "GetPlaybackController(const UObject* PlaybackContext)"
  }
]