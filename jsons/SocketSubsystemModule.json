[
  {
    "label": "FSocketSubsystemModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketSubsystemModule"
  },
  {
    "label": "ISocketSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISocketSubsystem"
  },
  {
    "label": "ShutdownSocketSubsystem()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" class FSocketSubsystemModule : public IModuleInterface { private : FName DefaultSocketSubsystem ; TMap<FName,class ISocketSubsystem*> SocketSubsystems ; void)",
    "insertText": "ShutdownSocketSubsystem()"
  },
  {
    "label": "FSocketSubsystemModule()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FSocketSubsystemModule()"
  },
  {
    "label": "GetSocketSubsystem()",
    "kind": "Method",
    "detail": "Function (} class ISocketSubsystem*)",
    "insertText": "GetSocketSubsystem(const FName InSubsystemName = NAME_None)"
  },
  {
    "label": "RegisterSocketSubsystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterSocketSubsystem(const FName FactoryName, class ISocketSubsystem* Factory, bool bMakeDefault=false)"
  },
  {
    "label": "UnregisterSocketSubsystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSocketSubsystem(const FName FactoryName)"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "SupportsDynamicReloading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsDynamicReloading()"
  }
]