[
  {
    "label": "UActorDescContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorDescContainer"
  },
  {
    "label": "AWorldDataLayers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldDataLayers"
  },
  {
    "label": "FActorSpawnParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorSpawnParameters"
  },
  {
    "label": "FWorldDataLayersReference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldDataLayersReference"
  },
  {
    "label": "FWorldDataLayersReference()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" WorldPartition / WorldPartitionHandle . h \" # include \" Misc / TVariant . h \" class UActorDescContainer ; class AWorldDataLayers ; struct FActorSpawnParameters ; class FWorldDataLayersReference { public :)",
    "insertText": "FWorldDataLayersReference()"
  },
  {
    "label": "FWorldDataLayersReference()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FWorldDataLayersReference(UActorDescContainerInstance* ContainerInstance, FName WorldDataLayerName)"
  },
  {
    "label": "FWorldDataLayersReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWorldDataLayersReference(const FActorSpawnParameters& SpawnParameters)"
  },
  {
    "label": "FWorldDataLayersReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWorldDataLayersReference(FWorldDataLayersReference&& Other)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} AWorldDataLayers*)",
    "insertText": "operator()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} const AWorldDataLayers*)",
    "insertText": "Get()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWorldDataLayersReference&)",
    "insertText": "operator(FWorldDataLayersReference&& Other)"
  },
  {
    "label": "TrySetReference()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "TrySetReference(UActorDescContainerInstance* ContainerInstance, FName WorldDataLayerName)"
  }
]