[
  {
    "label": "MatrixBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixBase"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "MatrixBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixBase"
  },
  {
    "label": "DiagonalIndexReturnType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DiagonalIndexReturnType"
  },
  {
    "label": "ConstDiagonalIndexReturnType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConstDiagonalIndexReturnType"
  },
  {
    "label": "TriangularViewReturnType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TriangularViewReturnType"
  },
  {
    "label": "ConstTriangularViewReturnType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConstTriangularViewReturnType"
  },
  {
    "label": "SelfAdjointViewReturnType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SelfAdjointViewReturnType"
  },
  {
    "label": "ConstSelfAdjointViewReturnType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConstSelfAdjointViewReturnType"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "cross_product_return_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "cross_product_return_type"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "applyOnTheLeft()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyOnTheLeft(const EigenBase<OtherDerived>& other)"
  },
  {
    "label": "applyOnTheRight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyOnTheRight(const EigenBase<OtherDerived>& other)"
  },
  {
    "label": "normalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "normalize()"
  },
  {
    "label": "stableNormalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "stableNormalize()"
  },
  {
    "label": "adjointInPlace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adjointInPlace()"
  },
  {
    "label": "diagonal()",
    "kind": "Method",
    "detail": "Function (DiagonalReturnType)",
    "insertText": "diagonal()"
  },
  {
    "label": "diagonal()",
    "kind": "Method",
    "detail": "Function (DiagonalIndexReturnType<Index>::Type)",
    "insertText": "diagonal()"
  },
  {
    "label": "diagonal()",
    "kind": "Method",
    "detail": "Function (DiagonalDynamicIndexReturnType)",
    "insertText": "diagonal(Index index)"
  },
  {
    "label": "triangularView()",
    "kind": "Method",
    "detail": "Function (TriangularViewReturnType<Mode>::Type)",
    "insertText": "triangularView()"
  },
  {
    "label": "selfadjointView()",
    "kind": "Method",
    "detail": "Function (SelfAdjointViewReturnType<UpLo>::Type)",
    "insertText": "selfadjointView()"
  },
  {
    "label": "Identity()",
    "kind": "Method",
    "detail": "Function (IdentityReturnType)",
    "insertText": "Identity()"
  },
  {
    "label": "Identity()",
    "kind": "Method",
    "detail": "Function (IdentityReturnType)",
    "insertText": "Identity(Index rows, Index cols)"
  },
  {
    "label": "Unit()",
    "kind": "Method",
    "detail": "Function (BasisReturnType)",
    "insertText": "Unit(Index size, Index i)"
  },
  {
    "label": "Unit()",
    "kind": "Method",
    "detail": "Function (BasisReturnType)",
    "insertText": "Unit(Index i)"
  },
  {
    "label": "UnitX()",
    "kind": "Method",
    "detail": "Function (BasisReturnType)",
    "insertText": "UnitX()"
  },
  {
    "label": "UnitY()",
    "kind": "Method",
    "detail": "Function (BasisReturnType)",
    "insertText": "UnitY()"
  },
  {
    "label": "UnitZ()",
    "kind": "Method",
    "detail": "Function (BasisReturnType)",
    "insertText": "UnitZ()"
  },
  {
    "label": "UnitW()",
    "kind": "Method",
    "detail": "Function (BasisReturnType)",
    "insertText": "UnitW()"
  },
  {
    "label": "noalias()",
    "kind": "Method",
    "detail": "Function (EIGEN_DEVICE_FUNC)",
    "insertText": "noalias()"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "derived()"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "derived()"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "derived()"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "derived()"
  },
  {
    "label": "makeHouseholderInPlace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "makeHouseholderInPlace(Scalar& tau, RealScalar& beta)"
  },
  {
    "label": "applyHouseholderOnTheLeft()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyHouseholderOnTheLeft(const EssentialPart& essential,\n                                   const Scalar& tau,\n                                   Scalar* workspace)"
  },
  {
    "label": "applyHouseholderOnTheRight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyHouseholderOnTheRight(const EssentialPart& essential,\n                                    const Scalar& tau,\n                                    Scalar* workspace)"
  },
  {
    "label": "applyOnTheLeft()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyOnTheLeft(Index p, Index q, const JacobiRotation<OtherScalar>& j)"
  },
  {
    "label": "applyOnTheRight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyOnTheRight(Index p, Index q, const JacobiRotation<OtherScalar>& j)"
  },
  {
    "label": "MatrixBase()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "MatrixBase(int)"
  },
  {
    "label": "MatrixBase()",
    "kind": "Method",
    "detail": "Function (EIGEN_DEVICE_FUNC)",
    "insertText": "MatrixBase(int,int)"
  },
  {
    "label": "MatrixBase()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "MatrixBase(const MatrixBase<OtherDerived>&)"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "derived()"
  }
]