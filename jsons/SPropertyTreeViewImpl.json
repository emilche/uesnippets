[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FNotifyHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNotifyHook"
  },
  {
    "label": "FObjectPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPropertyNode"
  },
  {
    "label": "FPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNode"
  },
  {
    "label": "SPropertyTreeViewImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyTreeViewImpl"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "IPropertyUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyUtilities"
  },
  {
    "label": "FPropertyPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyPath"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "RequestRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRefresh()"
  },
  {
    "label": "SetObjectArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectArray( const TArray<UObject*>& InObjects )"
  },
  {
    "label": "SetRootPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootPath( const TSharedPtr< FPropertyPath >& Path )"
  },
  {
    "label": "ReplaceObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceObjects( const TMap<UObject*, UObject*>& OldToNewObjectMap )"
  },
  {
    "label": "RemoveDeletedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDeletedObjects( const TArray<UObject*>& DeletedObjects )"
  },
  {
    "label": "RemoveInvalidActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInvalidActors( const TSet<AActor*>& ValidActors )"
  },
  {
    "label": "ToggleFavorite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleFavorite( const TSharedRef< class FPropertyEditor >& PropertyEditor )"
  },
  {
    "label": "CreateColorPickerWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateColorPickerWindow( const TSharedRef< class FPropertyEditor >& PropertyEditor, bool bUseAlpha )"
  },
  {
    "label": "SetIsPropertyVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsPropertyVisible( FIsPropertyVisible IsPropertyVisibleDelegate )"
  },
  {
    "label": "SetOnObjectArrayChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnObjectArrayChanged(FOnObjectArrayChanged OnObjectArrayChangedDelegate)"
  },
  {
    "label": "SaveExpandedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveExpandedItems()"
  },
  {
    "label": "SaveColumnWidths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveColumnWidths()"
  },
  {
    "label": "ExpandAllNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandAllNodes()"
  },
  {
    "label": "EnqueueDeferredAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueDeferredAction( FSimpleDelegate& DeferredAction )"
  },
  {
    "label": "SetFromExistingTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFromExistingTree( TSharedPtr<FObjectPropertyNode> RootNode, TSharedPtr<FPropertyNode> PropertyToView )"
  },
  {
    "label": "SetFilterText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterText( const FText& InFilterText )"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged( const FText& InFilterText )"
  },
  {
    "label": "IsPropertySelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertySelected( const FString& InName, const int32 InArrayIndex = INDEX_NONE)"
  },
  {
    "label": "IsPropertyOrChildrenSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyOrChildrenSelected( const FString& InName, const int32 InArrayIndex = INDEX_NONE, const bool CheckChildren = true )"
  },
  {
    "label": "OnPermissionListUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPermissionListUpdated(TSoftObjectPtr<const UStruct>, FName)"
  },
  {
    "label": "RestoreExpandedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreExpandedItems()"
  },
  {
    "label": "RestoreColumnWidths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreColumnWidths()"
  },
  {
    "label": "UpdateTopLevelPropertyNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTopLevelPropertyNodes( TSharedPtr<FPropertyNode> FirstVisibleNode )"
  },
  {
    "label": "PreSetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreSetObject()"
  },
  {
    "label": "PostSetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSetObject()"
  },
  {
    "label": "OnGetChildrenForPropertyNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForPropertyNode( TSharedPtr<FPropertyNode> InPropertyNode, TArray< TSharedPtr<FPropertyNode> >& OutChildren )"
  },
  {
    "label": "IsPropertyNodeVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyNodeVisible(TSharedPtr<FPropertyNode> InPropertyNode)"
  },
  {
    "label": "OnGetChildFavoritesForPropertyNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildFavoritesForPropertyNode( TSharedPtr<FPropertyNode> InPropertyNode, TArray< TSharedPtr<FPropertyNode> >& OutChildren )"
  },
  {
    "label": "OnToggleFavoritesClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleFavoritesClicked()"
  },
  {
    "label": "OnLockButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnLockButtonClicked()"
  },
  {
    "label": "FilterView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterView( const FString& InFilterText )"
  },
  {
    "label": "ConstructPropertyTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructPropertyTree()"
  },
  {
    "label": "MarkFavorites()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkFavorites()"
  },
  {
    "label": "MarkFavoritesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkFavoritesInternal( TSharedPtr<FPropertyNode> InPropertyNode, bool bAnyParentIsFavorite )"
  },
  {
    "label": "CreatePropertyEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "CreatePropertyEditor( TSharedPtr<FPropertyNode> InPropertyNode, const TSharedPtr<STableViewBase>& OwnerTable )"
  },
  {
    "label": "OnGenerateRowForPropertyTree()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRowForPropertyTree( TSharedPtr<FPropertyNode> InPropertyNode, const TSharedRef<STableViewBase>& OwnerTable )"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged( TSharedPtr<FPropertyNode> InPropertyNode, ESelectInfo::Type SelectInfo )"
  },
  {
    "label": "LoadFavorites()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadFavorites()"
  },
  {
    "label": "SaveFavorites()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveFavorites()"
  },
  {
    "label": "RequestItemExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestItemExpanded( TSharedPtr<FPropertyNode> PropertyNode, bool bExpand, bool bRecursiveExpansion = false )"
  }
]