[
  {
    "label": "FTabSpawnerEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTabSpawnerEntry"
  },
  {
    "label": "FWorkspaceItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkspaceItem"
  },
  {
    "label": "FWorkspaceItemSort",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorkspaceItemSort"
  },
  {
    "label": "SharedPointerInternals",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SharedPointerInternals"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Textures / SlateIcon . h \" # include \" Misc / Attribute . h \" struct FTabSpawnerEntry ; class FWorkspaceItem : public TSharedFromThis<FWorkspaceItem> { protected : struct FWorkspaceItemSort { bool)",
    "insertText": "operator()( const TSharedRef<FWorkspaceItem> A, const TSharedRef<FWorkspaceItem> B)"
  },
  {
    "label": "NewGroup()",
    "kind": "Method",
    "detail": "Function (} } ; public : TSharedRef<FWorkspaceItem>)",
    "insertText": "NewGroup(const FText& DisplayName, const FSlateIcon& Icon = FSlateIcon(), const bool bSortChildren = false)"
  },
  {
    "label": "NewGroup()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FWorkspaceItem>)",
    "insertText": "NewGroup(const FName& Name, const FText& DisplayName, const FSlateIcon& Icon = FSlateIcon(), const bool bSortChildren = false)"
  },
  {
    "label": "NewGroup()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FWorkspaceItem>)",
    "insertText": "NewGroup(const FText& DisplayName, const FText& TooltipText, const FSlateIcon& Icon = FSlateIcon(), const bool bSortChildren = false)"
  },
  {
    "label": "NewGroup()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FWorkspaceItem>)",
    "insertText": "NewGroup(const FName& Name, const FText& DisplayName, const FText& TooltipText, const FSlateIcon& Icon = FSlateIcon(), const bool bSortChildren = false)"
  },
  {
    "label": "AddGroup()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FWorkspaceItem>)",
    "insertText": "AddGroup(const FText& InDisplayName, const FSlateIcon& InIcon = FSlateIcon(), const bool InSortChildren = false)"
  },
  {
    "label": "NewGroup()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorkspaceItem> NewItem =)",
    "insertText": "NewGroup(NAME_None, InDisplayName, InIcon, InSortChildren)"
  },
  {
    "label": "AddItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddItem(NewItem)"
  },
  {
    "label": "NewGroup()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorkspaceItem> NewItem =)",
    "insertText": "NewGroup(InName, InDisplayName, InIcon, InSortChildren)"
  },
  {
    "label": "NewGroup()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorkspaceItem> NewItem =)",
    "insertText": "NewGroup(NAME_None, InDisplayName, InTooltipText, InIcon, InSortChildren)"
  },
  {
    "label": "NewGroup()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorkspaceItem> NewItem =)",
    "insertText": "NewGroup(InName, InDisplayName,InTooltipText, InIcon, InSortChildren)"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (} const FText&)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (} const FText&)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetIcon()",
    "kind": "Method",
    "detail": "Function (} const FSlateIcon&)",
    "insertText": "GetIcon()"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (ItemToAdd -> ParentItem =)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ChildItems .)",
    "insertText": "Add(ItemToAdd)"
  },
  {
    "label": "SortChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortChildren()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(ChildItems.Num() == 1 && ParentItem.IsValid() && ParentItem.Pin()->bSortChildren)"
  },
  {
    "label": "Pin()",
    "kind": "Method",
    "detail": "Function (ParentItem .)",
    "insertText": "Pin()->SortChildren()"
  },
  {
    "label": "RemoveItem()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "RemoveItem(const TSharedRef<FWorkspaceItem>& ItemToRemove)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (ChildItems .)",
    "insertText": "Remove(ItemToRemove)"
  },
  {
    "label": "ClearItems()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClearItems()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (ChildItems .)",
    "insertText": "Reset()"
  },
  {
    "label": "Sort()",
    "kind": "Method",
    "detail": "Function (ChildItems .)",
    "insertText": "Sort(FWorkspaceItemSort())"
  },
  {
    "label": "AsSpawnerEntry()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FTabSpawnerEntry>)",
    "insertText": "AsSpawnerEntry()"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FWorkspaceItem>)",
    "insertText": "GetParent()"
  },
  {
    "label": "HasChildrenIn()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasChildrenIn(const TArray< TWeakPtr<FTabSpawnerEntry> >& AllowedSpawners)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool bIsGroupPopulated = ThisAsSpawnerEntry .)",
    "insertText": "IsValid() && AllowedSpawners.Contains(ThisAsSpawnerEntry.ToSharedRef())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<FWorkspaceItem>& ChildItem = ChildItems [ ChildIndex ] ;)",
    "insertText": "if(ChildItem->HasChildrenIn(AllowedSpawners))"
  },
  {
    "label": "FWorkspaceItem()",
    "kind": "Method",
    "detail": "Function (bIsGroupPopulated = true ; } } return bIsGroupPopulated ; } PRAGMA_DISABLE_DEPRECATION_WARNINGS ~)",
    "insertText": "FWorkspaceItem()"
  },
  {
    "label": "FWorkspaceItem()",
    "kind": "Method",
    "detail": "Function (} PRAGMA_ENABLE_DEPRECATION_WARNINGS protected :)",
    "insertText": "FWorkspaceItem(const FText& InDisplayName, const FSlateIcon& InIcon, const bool bInSortChildren ) : Icon(InIcon) , NameAttribute(NAME_None) , DisplayNameAttribute(InDisplayName) , bSortChildren(bInSortChildren)"
  },
  {
    "label": "FWorkspaceItem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FWorkspaceItem(const FName& InName, const FText& InDisplayName, const FSlateIcon& InIcon, const bool bInSortChildren ) : Icon(InIcon) , NameAttribute(InName) , DisplayNameAttribute(InDisplayName) , bSortChildren(bInSortChildren)"
  },
  {
    "label": "FWorkspaceItem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FWorkspaceItem(const FText& InDisplayName, const FText& InTooltipText, const FSlateIcon& InIcon, const bool bInSortChildren ) : Icon(InIcon) , NameAttribute(NAME_None) , DisplayNameAttribute(InDisplayName) , TooltipTextAttribute(InTooltipText) , bSortChildren(bInSortChildren)"
  },
  {
    "label": "FWorkspaceItem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FWorkspaceItem(const FName& InName, const FText& InDisplayName, const FText& InTooltipText, const FSlateIcon& InIcon, const bool bInSortChildren ) : Icon(InIcon) , NameAttribute(InName) , DisplayNameAttribute(InDisplayName) , TooltipTextAttribute(InTooltipText) , bSortChildren(bInSortChildren)"
  }
]