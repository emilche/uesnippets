[
  {
    "label": "FUnixRecvMulti",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnixRecvMulti"
  },
  {
    "label": "FSocketUnix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketUnix"
  },
  {
    "label": "FUnixRecvMulti()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BSDSockets / SocketsBSD . h \" # if PLATFORM_HAS_BSD_SOCKET_FEATURE_RECVMMSG struct FUnixRecvMulti : public FRecvMulti { class FSocketUnix ; protected : TUniquePtr<mmsghdr [ ]> Headers ; TUniquePtr<uint8 [ ]> RawTimestampData ; private : TUniquePtr<iovec [ ]> BufferMaps ; TUniquePtr<uint8 [ ]> DataBuffer ; public :)",
    "insertText": "FUnixRecvMulti(ISocketSubsystem* SocketSubsystem, int32 InMaxNumPackets, int32 InMaxPacketSize, ERecvMultiFlags InitFlags)"
  },
  {
    "label": "GetPacketTimestamp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPacketTimestamp(int32 PacketIdx, FPacketTimestamp& OutTimestamp)"
  },
  {
    "label": "CountBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountBytes(FArchive& Ar)"
  },
  {
    "label": "FSocketUnix()",
    "kind": "Method",
    "detail": "Function (} ; # endif class FSocketUnix : public FSocketBSD { public :)",
    "insertText": "FSocketUnix(SOCKET InSocket, ESocketType InSocketType, const FString& InSocketDescription, const FName& InSocketProtocol, ISocketSubsystem* InSubsystem) : FSocketBSD(InSocket, InSocketType, InSocketDescription, InSocketProtocol, InSubsystem)"
  },
  {
    "label": "RecvMulti()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RecvMulti(FRecvMulti& MultiData, ESocketReceiveFlags::Type Flags)"
  },
  {
    "label": "SetRetrieveTimestamp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRetrieveTimestamp(bool bRetrieveTimestamp)"
  }
]