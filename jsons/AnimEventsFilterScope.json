[
  {
    "label": "IAnimEventsFilterContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimEventsFilterContext"
  },
  {
    "label": "DECLARE_NOTIFY_CONTEXT_INTERFACE_API()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AnimNodeMessages . h \" # include \" AnimNotifyQueue . h \" namespace UE { namespace Anim { class IAnimEventsFilterContext : public IAnimNotifyEventContextDataInterface {)",
    "insertText": "DECLARE_NOTIFY_CONTEXT_INTERFACE_API(IAnimEventsFilterContext, ENGINE_API) public: virtual bool ShouldFilterNotify(const FAnimNotifyEventReference & InNotifyEventRef)"
  }
]