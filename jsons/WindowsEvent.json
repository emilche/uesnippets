[
  {
    "label": "FEventWin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventWin"
  },
  {
    "label": "FEventWin()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" HAL / Event . h \" # include \" Windows / AllowWindowsPlatformTypes . h \" class FEventWin : public FEvent { public :)",
    "insertText": "FEventWin() : Event(nullptr)"
  },
  {
    "label": "FEventWin()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FEventWin()"
  },
  {
    "label": "CloseHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseHandle(Event)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "Create(bool bIsManualReset = false)"
  },
  {
    "label": "CreateEvent()",
    "kind": "Method",
    "detail": "Function (Event =)",
    "insertText": "CreateEvent(nullptr, bIsManualReset, 0, nullptr)"
  },
  {
    "label": "IsManualReset()",
    "kind": "Method",
    "detail": "Function (ManualReset = bIsManualReset ; return Event ! = nullptr ; } bool)",
    "insertText": "IsManualReset()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Wait(uint32 WaitTime, const bool bIgnoreThreadIdleStats = false)"
  }
]