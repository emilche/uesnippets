[
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "FNotificationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNotificationInfo"
  },
  {
    "label": "FSkeletonAnimNotifiesSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletonAnimNotifiesSummoner"
  },
  {
    "label": "FAssetEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorToolkit"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDisplayedAnimNotifyInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDisplayedAnimNotifyInfo"
  },
  {
    "label": "SSkeletonAnimNotifies",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSkeletonAnimNotifies"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" UObject / GCObject . h \" # include \" Toolkits / AssetEditorToolkit . h \" # include \" WorkflowOrientedApp / WorkflowTabFactory . h \" # include \" PersonaDelegates . h \" # include \" IDocumentation . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / SListView . h \" # include \" EditorObjectsTracker . h \" # include \" EditorUndoClient . h \" # include \" Filters / FilterBase . h \" # define LOCTEXT_NAMESPACE \" SkeletonAnimnotifies \" class IEditableSkeleton ; class SToolTip ; struct FNotificationInfo ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnItemSelected, const FName&)"
  },
  {
    "label": "FSkeletonAnimNotifiesSummoner()",
    "kind": "Method",
    "detail": "Function (struct FSkeletonAnimNotifiesSummoner : public FWorkflowTabFactory { public :)",
    "insertText": "FSkeletonAnimNotifiesSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, const TSharedRef<class IEditableSkeleton>& InEditableSkeleton, FOnObjectsSelected InOnObjectsSelected)"
  },
  {
    "label": "CreateTabBody()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateTabBody(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "CreateTabToolTipWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SToolTip>)",
    "insertText": "CreateTabToolTipWidget(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} private : TWeakPtr<class IEditableSkeleton> EditableSkeleton ; FOnObjectsSelected OnObjectsSelected ; } ; enum class EAnimNotifyFilterFlags : uint8 { None = 0,Notifies = 0 x01,SyncMarkers = 0 x02,CurrentSkeleton = 0 x04,CompatibleAssets = 0 x08,OtherAssets = 0 x10,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EAnimNotifyFilterFlags)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (class FDisplayedAnimNotifyInfo { public : FName Name ; TSharedPtr<SInlineEditableTextBlock> InlineEditableText ; bool bIsNew ; bool bIsSyncMarker ; EAnimNotifyFilterFlags ItemFlags ; TSharedRef<FDisplayedAnimNotifyInfo>)",
    "insertText": "Make(const FName& NotifyName, bool bInIsSyncMarker, EAnimNotifyFilterFlags InItemFlags)"
  },
  {
    "label": "FDisplayedAnimNotifyInfo()",
    "kind": "Method",
    "detail": "Function (} protected :)",
    "insertText": "FDisplayedAnimNotifyInfo(const FName& InNotifyName, bool bInIsSyncMarker, EAnimNotifyFilterFlags InItemFlags) : Name( InNotifyName ) , bIsNew(false) , bIsSyncMarker(bInIsSyncMarker) , ItemFlags(InItemFlags)"
  },
  {
    "label": "FDisplayedAnimNotifyInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDisplayedAnimNotifyInfo()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} } ; typedef SListView<TSharedPtr<FDisplayedAnimNotifyInfo>> SAnimNotifyListType ; class SSkeletonAnimNotifies : public SCompoundWidget,public FGCObject,public FEditorUndoClient { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSkeletonAnimNotifies ) : _IsPicker(false) , _ShowSyncMarkers(true) , _ShowNotifies(true) , _ShowCompatibleSkeletonAssets(false) , _ShowOtherAssets(false)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnObjectsSelected, OnObjectsSelected) SLATE_EVENT(FOnItemSelected, OnItemSelected) SLATE_ARGUMENT(bool, IsPicker) SLATE_ARGUMENT_DEPRECATED(bool, IsSyncMarker, 5.3, \"Please use ShowSyncMarkers or ShowNotifies instead\") SLATE_ARGUMENT(bool, ShowSyncMarkers) SLATE_ARGUMENT(bool, ShowNotifies) SLATE_ARGUMENT(bool, ShowCompatibleSkeletonAssets) SLATE_ARGUMENT(bool, ShowOtherAssets) SLATE_ARGUMENT(TSharedPtr<IEditableSkeleton>, EditableSkeleton) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs, const TSharedPtr<class FAssetEditorToolkit>& InHostingApp = nullptr)"
  },
  {
    "label": "SSkeletonAnimNotifies()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SSkeletonAnimNotifies()"
  },
  {
    "label": "GetFilterText()",
    "kind": "Method",
    "detail": "Function (FText&)",
    "insertText": "GetFilterText()"
  },
  {
    "label": "ClearDetailsView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDetailsView()"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "OnVerifyNotifyNameCommit()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "OnVerifyNotifyNameCommit(const FText& NewName, FText& OutErrorMessage, TSharedPtr<FDisplayedAnimNotifyInfo> Item)"
  },
  {
    "label": "OnNotifyNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNotifyNameCommitted(const FText& NewName, ETextCommit::Type, TSharedPtr<FDisplayedAnimNotifyInfo> Item)"
  },
  {
    "label": "IsSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSelected()"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted(const FText& SearchText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "GenerateNotifyRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "GenerateNotifyRow(TSharedPtr<FDisplayedAnimNotifyInfo> InInfo, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnGetContextMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnGetContextMenuContent()"
  },
  {
    "label": "OnNotifySelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNotifySelectionChanged(TSharedPtr<FDisplayedAnimNotifyInfo> Selection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "CanPerformDelete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPerformDelete()"
  },
  {
    "label": "CanPerformFindReferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPerformFindReferences()"
  },
  {
    "label": "OnDeleteItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteItems()"
  },
  {
    "label": "CanPerformRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPerformRename()"
  },
  {
    "label": "OnAddItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddItem(bool bIsSyncMarker)"
  },
  {
    "label": "OnRenameItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameItem()"
  },
  {
    "label": "RefreshNotifiesListWithFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshNotifiesListWithFilter()"
  },
  {
    "label": "CreateNotifiesList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNotifiesList()"
  },
  {
    "label": "FilterNotifiesList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterNotifiesList(const FString& InSearchText)"
  },
  {
    "label": "ShowNotifyInDetailsView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowNotifyInDetailsView(FName NotifyName)"
  },
  {
    "label": "NotifyUser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyUser(FNotificationInfo& NotificationInfo)"
  },
  {
    "label": "OnNotifiesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNotifiesChanged()"
  },
  {
    "label": "OnItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemScrolledIntoView(TSharedPtr<FDisplayedAnimNotifyInfo> InItem, const TSharedPtr<ITableRow>& InTableRow)"
  },
  {
    "label": "OnFindReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFindReferences()"
  }
]