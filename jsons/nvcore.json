[
  {
    "label": "NV_STRING_JOIN2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_STRING_JOIN2"
  },
  {
    "label": "NV_FORBID_COPY()",
    "kind": "Method",
    "detail": "Function (# ifndef NV_CORE_H # define NV_CORE_H # include<nvconfig . h> # if NVCORE_SHARED # ifdef NVCORE_EXPORTS # define DLL_EXPORT # define NVCORE_CLASS DLL_EXPORT_CLASS # else # define DLL_IMPORT # define NVCORE_CLASS DLL_IMPORT # endif # else # define # define NVCORE_CLASS # endif # include \" poshlib / posh . h \" # define NV_OS_STRING POSH_OS_STRING # if defined POSH_OS_LINUX # define NV_OS_LINUX 1 # define NV_OS_UNIX 1 # elif defined POSH_OS_CYGWIN32 # define NV_OS_CYGWIN 1 # elif defined POSH_OS_MINGW # define NV_OS_MINGW 1 # define NV_OS_WIN32 1 # elif defined POSH_OS_OSX # define NV_OS_DARWIN 1 # define NV_OS_UNIX 1 # elif defined POSH_OS_UNIX # define NV_OS_UNIX 1 # elif defined POSH_OS_WIN32 # define NV_OS_WIN32 1 # elif defined POSH_OS_WIN64 # define NV_OS_WIN64 1 # else # error \" Unsupported OS \" # endif # define NV_CPU_STRING POSH_CPU_STRING # if defined POSH_CPU_X86_64 # define NV_CPU_X86_64 1 # elif defined POSH_CPU_X86 # define NV_CPU_X86 1 # elif defined POSH_CPU_PPC # define NV_CPU_PPC 1 # elif defined POSH_CPU_STRONGARM # define NV_CPU_ARM 1 # else # error \" Unsupported CPU \" # endif # if defined POSH_COMPILER_GCC # define NV_CC_GNUC 1 # define NV_CC_STRING \" gcc \" # elif defined POSH_COMPILER_MSVC # define NV_CC_MSVC 1 # define NV_CC_STRING \" msvc \" # else # error \" Unsupported compiler \" # endif # define NV_LITTLE_ENDIAN POSH_LITTLE_ENDIAN # define NV_BIG_ENDIAN POSH_BIG_ENDIAN # define NV_ENDIAN_STRING POSH_ENDIAN_STRING # define NV_VERSION_STRING \\ NV_OS_STRING \" / \" NV_CC_STRING \" / \" NV_CPU_STRING \" / \" \\ NV_ENDIAN_STRING \" - endian - \" __DATE__ \" - \" __TIME__ # define)",
    "insertText": "NV_FORBID_COPY(C) \\ private: \\ C( const C &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (\\ C&)",
    "insertText": "operator(const C &)"
  },
  {
    "label": "NV_FORBID_HEAPALLOC()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "NV_FORBID_HEAPALLOC() \\ private: \\ static void *operator new(size_t size)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (\\ void* operator)",
    "insertText": "new(size_t size)"
  },
  {
    "label": "NV_STRING_JOIN2()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "NV_STRING_JOIN2(arg1, arg2) NV_DO_STRING_JOIN2(arg1, arg2) #define NV_DO_STRING_JOIN2(arg1, arg2) arg1 ## arg2 #define NV_STRING_JOIN3(arg1, arg2, arg3) NV_DO_STRING_JOIN3(arg1, arg2, arg3) #define NV_DO_STRING_JOIN3(arg1, arg2, arg3) arg1 ## arg2 ## arg3 #define NV_AT_STARTUP(some_code)"
  },
  {
    "label": "NV_STRING_JOIN2()",
    "kind": "Method",
    "detail": "Function (\\ struct)",
    "insertText": "NV_STRING_JOIN2(AtStartup_, __LINE__)"
  },
  {
    "label": "NV_STRING_JOIN2()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "NV_STRING_JOIN2(AtStartup_, __LINE__)()"
  },
  {
    "label": "NV_STRING_JOIN3()",
    "kind": "Method",
    "detail": "Function (some_code ; } \\ } \\)",
    "insertText": "NV_STRING_JOIN3(AtStartup_, __LINE__, Instance)"
  }
]