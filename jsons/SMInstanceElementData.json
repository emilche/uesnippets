[
  {
    "label": "FTypedElementHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementHandle"
  },
  {
    "label": "FSMInstanceElementData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSMInstanceElementData"
  },
  {
    "label": "UE_DECLARE_TYPED_ELEMENT_DATA_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Elements / Framework / TypedElementData . h \" # include \" Elements / SMInstance / SMInstanceManager . h \" # include \" UObject / Object . h \" struct FTypedElementHandle ; struct FSMInstanceElementData {)",
    "insertText": "UE_DECLARE_TYPED_ELEMENT_DATA_RTTI(FSMInstanceElementData)"
  },
  {
    "label": "FSMInstanceElementData()",
    "kind": "Method",
    "detail": "Function (FSMInstanceElementId InstanceElementId ; } ; template<> FString GetTypedElementDebugId<)",
    "insertText": "FSMInstanceElementData(const FSMInstanceElementData& InElementData)"
  },
  {
    "label": "Object()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "Object(UObject*)"
  },
  {
    "label": "SMInstanceElementsEnabled()",
    "kind": "Method",
    "detail": "Function (} namespace SMInstanceElementDataUtil { bool)",
    "insertText": "SMInstanceElementsEnabled()"
  },
  {
    "label": "OnSMInstanceElementsEnabledChanged()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "OnSMInstanceElementsEnabledChanged()"
  },
  {
    "label": "GetSMInstanceManager()",
    "kind": "Method",
    "detail": "Function (ISMInstanceManager*)",
    "insertText": "GetSMInstanceManager(const FSMInstanceId& InstanceId)"
  },
  {
    "label": "GetSMInstanceFromHandle()",
    "kind": "Method",
    "detail": "Function (FSMInstanceManager)",
    "insertText": "GetSMInstanceFromHandle(const FTypedElementHandle& InHandle, const bool bSilent = false)"
  },
  {
    "label": "GetSMInstanceFromHandleChecked()",
    "kind": "Method",
    "detail": "Function (FSMInstanceManager)",
    "insertText": "GetSMInstanceFromHandleChecked(const FTypedElementHandle& InHandle)"
  },
  {
    "label": "GetSMInstancesFromHandles()",
    "kind": "Method",
    "detail": "Function (template<ElementHandleType> TArray<FSMInstanceManager>)",
    "insertText": "GetSMInstancesFromHandles(TArrayView<const ElementHandleType> InHandles, const bool bSilent = false)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (TArray<FSMInstanceManager> SMInstanceIds ; SMInstanceIds .)",
    "insertText": "Reserve(InHandles.Num())"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (SMInstanceIds .)",
    "insertText": "Add(MoveTemp(SMInstanceId))"
  },
  {
    "label": "GetSMInstancesFromHandlesChecked()",
    "kind": "Method",
    "detail": "Function (} } return SMInstanceIds ; } template<ElementHandleType> TArray<FSMInstanceManager>)",
    "insertText": "GetSMInstancesFromHandlesChecked(TArrayView<const ElementHandleType> InHandles)"
  }
]