[
  {
    "label": "TScaleMatrix",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TScaleMatrix"
  },
  {
    "label": "TIsUECoreVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsUECoreVariant"
  },
  {
    "label": "TScaleMatrix()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Math / Plane . h \" # include \" Math / Matrix . h \" namespace UE { namespace Math { template<T> struct TScaleMatrix : public TMatrix<T> { public :)",
    "insertText": "TScaleMatrix(T Scale)"
  },
  {
    "label": "TScaleMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TScaleMatrix(const TVector<T>& Scale)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (template<FArg)",
    "insertText": "UE_REQUIRES(!std::is_same_v<T, FArg>)> explicit TScaleMatrix(const TScaleMatrix<FArg>& From) : TMatrix<T>(From)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (} TMatrix<T>)",
    "insertText": "Make(T Scale)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (} TMatrix<T>)",
    "insertText": "Make(const TVector<T>& Scale)"
  },
  {
    "label": "TScaleMatrix()",
    "kind": "Method",
    "detail": "Function (} } ; template<T> TScaleMatrix<T)",
    "insertText": "TScaleMatrix(T Scale ) : TMatrix<T>( TPlane<T>(Scale, 0.0f, 0.0f, 0.0f), TPlane<T>(0.0f, Scale, 0.0f, 0.0f), TPlane<T>(0.0f, 0.0f, Scale, 0.0f), TPlane<T>(0.0f, 0.0f, 0.0f, 1.0f))"
  },
  {
    "label": "TScaleMatrix()",
    "kind": "Method",
    "detail": "Function (} template<T> TScaleMatrix<T)",
    "insertText": "TScaleMatrix(const TVector<T>& Scale ) : TMatrix<T>( TPlane<T>(Scale.X, 0.0f, 0.0f, 0.0f), TPlane<T>(0.0f, Scale.Y, 0.0f, 0.0f), TPlane<T>(0.0f, 0.0f, Scale.Z, 0.0f), TPlane<T>(0.0f, 0.0f, 0.0f, 1.0f))"
  },
  {
    "label": "UE_DECLARE_LWC_TYPE()",
    "kind": "Method",
    "detail": "Function (} } })",
    "insertText": "UE_DECLARE_LWC_TYPE(ScaleMatrix, 44)"
  }
]