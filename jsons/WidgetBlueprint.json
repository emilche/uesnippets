[
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "UUserWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserWidget"
  },
  {
    "label": "UWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidget"
  },
  {
    "label": "UWidgetAnimation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetAnimation"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "UWidgetBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetBlueprint"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UWidgetEditingProjectSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetEditingProjectSettings"
  },
  {
    "label": "UMGEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMGEDITOR_API"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FDataValidationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataValidationContext"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Guid . h \" # include \" UObject / Class . h \" # include \" BaseWidgetBlueprint . h \" # include \" Binding / DynamicPropertyPath . h \" # include \" Blueprint / WidgetBlueprintGeneratedClass . h \" # include \" Animation / WidgetAnimationBinding . h \" # include \" Templates / ValueOrError . h \" # include \" WidgetBlueprint . generated . h \" class FCompilerResultsLog ; class UEdGraph ; class UMovieScene ; class UTexture2D ; class UUserWidget ; class UWidget ; class UWidgetAnimation ; class FKismetCompilerContext ; class UWidgetBlueprint ; enum class EWidgetTickFrequency : uint8 ; enum class EWidgetCompileTimeTickPrediction : uint8 ; class UWidgetEditingProjectSettings ; class FWidgetBlueprintDelegates { public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FGetAssetTagsWithContext, const UWidgetBlueprint*, FAssetRegistryTagsContext)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FGetAssetTags, const UWidgetBlueprint*, TArray<UObject::FAssetRegistryTag>&)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FEditorPropertyPathSegment()"
  },
  {
    "label": "FEditorPropertyPathSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEditorPropertyPathSegment(const FProperty* InProperty)"
  },
  {
    "label": "FEditorPropertyPathSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEditorPropertyPathSegment(const UFunction* InFunction)"
  },
  {
    "label": "FEditorPropertyPathSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEditorPropertyPathSegment(const UEdGraph* InFunctionGraph)"
  },
  {
    "label": "GetStruct()",
    "kind": "Method",
    "detail": "Function (UStruct*)",
    "insertText": "GetStruct()"
  },
  {
    "label": "Rebase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rebase(UBlueprint* SegmentBase)"
  },
  {
    "label": "ValidateMember()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMember(FDelegateProperty* DelegateProperty, FText& OutError)"
  },
  {
    "label": "GetMemberName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetMemberName()"
  },
  {
    "label": "GetMemberDisplayText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMemberDisplayText()"
  },
  {
    "label": "GetMemberGuid()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GetMemberGuid()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FEditorPropertyPath()"
  },
  {
    "label": "FEditorPropertyPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEditorPropertyPath(const TArray<FFieldVariant>& BindingChain)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Validate(FDelegateProperty* Destination, FText& OutError)"
  },
  {
    "label": "GetDisplayText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayText()"
  },
  {
    "label": "ToPropertyPath()",
    "kind": "Method",
    "detail": "Function (FDynamicPropertyPath)",
    "insertText": "ToPropertyPath()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FDelegateEditorBinding& Other)"
  },
  {
    "label": "DoesBindingTargetExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesBindingTargetExist(UWidgetBlueprint* Blueprint)"
  },
  {
    "label": "IsBindingValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBindingValid(UClass* Class, class UWidgetBlueprint* Blueprint, FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "ToRuntimeBinding()",
    "kind": "Method",
    "detail": "Function (FDelegateRuntimeBinding)",
    "insertText": "ToRuntimeBinding(class UWidgetBlueprint* Blueprint)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (WontTick,OnDemand,WillTick,} ;)",
    "insertText": "UCLASS(BlueprintType)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: #if WITH_EDITORONLY_DATA UPROPERTY()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# endif public : void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PostDuplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDuplicate(bool bDuplicateForPIE)"
  },
  {
    "label": "PreSave()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "PreSave(FObjectPreSaveContext ObjectSaveContext)"
  },
  {
    "label": "GetAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "GetAssetRegistryTags(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "NotifyGraphRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyGraphRenamed(class UEdGraph* Graph, FName OldName, FName NewName)"
  },
  {
    "label": "IsDataValid()",
    "kind": "Method",
    "detail": "Function (EDataValidationResult)",
    "insertText": "IsDataValid(class FDataValidationContext& Context)"
  },
  {
    "label": "DetectSlateWidgetLeaks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DetectSlateWidgetLeaks(class FDataValidationContext& Context)"
  },
  {
    "label": "FindDiffs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindDiffs(const UBlueprint* OtherBlueprint, FDiffResults& Results)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetWidgetTemplatePackage()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "GetWidgetTemplatePackage()"
  },
  {
    "label": "ReplaceDeprecatedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceDeprecatedNodes()"
  },
  {
    "label": "GetBlueprintClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetBlueprintClass()"
  },
  {
    "label": "AllowsDynamicBinding()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowsDynamicBinding()"
  },
  {
    "label": "SupportsInputEvents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsInputEvents()"
  },
  {
    "label": "SupportedByDefaultBlueprintFactory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportedByDefaultBlueprintFactory()"
  },
  {
    "label": "AlwaysCompileOnLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AlwaysCompileOnLoad()"
  },
  {
    "label": "IsWidgetFreeFromCircularReferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWidgetFreeFromCircularReferences(UUserWidget* UserWidget)"
  },
  {
    "label": "HasCircularReferences()",
    "kind": "Method",
    "detail": "Function (TValueOrError<void,UWidget*>)",
    "insertText": "HasCircularReferences()"
  },
  {
    "label": "HasConflictingWidgetNamesFromInheritance()",
    "kind": "Method",
    "detail": "Function (TValueOrError<void,TSet<UWidget*>>)",
    "insertText": "HasConflictingWidgetNamesFromInheritance()"
  },
  {
    "label": "ValidateGeneratedClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateGeneratedClass(const UClass* InClass)"
  },
  {
    "label": "GetCompilerForWidgetBP()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FKismetCompilerContext>)",
    "insertText": "GetCompilerForWidgetBP(UBlueprint* BP, FCompilerResultsLog& InMessageLog, const FKismetCompilerOptions& InCompileOptions)"
  },
  {
    "label": "UpdateTickabilityStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTickabilityStats(bool& OutHasLatentActions, bool& OutHasAnimations, bool& OutClassRequiresNativeTick)"
  },
  {
    "label": "ArePropertyBindingsAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ArePropertyBindingsAllowed()"
  },
  {
    "label": "GetInheritedAvailableNamedSlots()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetInheritedAvailableNamedSlots()"
  },
  {
    "label": "GetInheritedNamedSlotsWithContentInSameTree()",
    "kind": "Method",
    "detail": "Function (TSet<FName>)",
    "insertText": "GetInheritedNamedSlotsWithContentInSameTree()"
  },
  {
    "label": "GetRelevantSettings()",
    "kind": "Method",
    "detail": "Function (UWidgetEditingProjectSettings*)",
    "insertText": "GetRelevantSettings()"
  },
  {
    "label": "LoadModulesRequiredForCompilation()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "LoadModulesRequiredForCompilation()"
  }
]