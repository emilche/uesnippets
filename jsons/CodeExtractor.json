[
  {
    "label": "BasicBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BasicBlock"
  },
  {
    "label": "DominatorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DominatorTree"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "Loop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Loop"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "RegionNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RegionNode"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "CodeExtractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CodeExtractor"
  },
  {
    "label": "severSplitPHINodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "severSplitPHINodes(BasicBlock *&Header)"
  },
  {
    "label": "splitReturnBlocks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "splitReturnBlocks()"
  },
  {
    "label": "moveCodeToFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "moveCodeToFunction(Function *newFunction)"
  },
  {
    "label": "emitCallAndSwitchStatement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitCallAndSwitchStatement(Function *newFunction,\n                                    BasicBlock *newHeader,\n                                    ValueSet &inputs,\n                                    ValueSet &outputs)"
  }
]