[
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Arg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Arg"
  },
  {
    "label": "is_trivially_assignable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_trivially_assignable"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___TYPE_TRAITS_IS_TRIVIALLY_ASSIGNABLE_H # define _LIBCPP___TYPE_TRAITS_IS_TRIVIALLY_ASSIGNABLE_H # include<__config> # include<__type_traits / integral_constant . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _Tp, class _Arg> struct is_trivially_assignable : integral_constant<bool, __is_trivially_assignable(_Tp, _Arg)"
  }
]