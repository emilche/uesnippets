[
  {
    "label": "idct8x8_12_transpose_16bit_4x8()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_DSP_X86_INV_TXFM_SSE2_H_ # define VPX_VPX_DSP_X86_INV_TXFM_SSE2_H_ # include<emmintrin . h> # include \" . / vpx_config . h \" # include \" vpx / vpx_integer . h \" # include \" vpx_dsp / inv_txfm . h \" # include \" vpx_dsp / x86 / transpose_sse2 . h \" # include \" vpx_dsp / x86 / txfm_common_sse2 . h \" void)",
    "insertText": "idct8x8_12_transpose_16bit_4x8(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_0 =)",
    "insertText": "_mm_unpackhi_epi16(in[0], in[1])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_1 =)",
    "insertText": "_mm_unpacklo_epi16(in[1], in[0])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_2 =)",
    "insertText": "_mm_unpacklo_epi16(in[2], in[3])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_3 =)",
    "insertText": "_mm_unpackhi_epi16(in[3], in[2])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_0 =)",
    "insertText": "_mm_unpacklo_epi32(tr0_0, tr0_1)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_1 =)",
    "insertText": "_mm_unpacklo_epi32(tr0_2, tr0_3)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_2 =)",
    "insertText": "_mm_unpackhi_epi32(tr0_0, tr0_1)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_3 =)",
    "insertText": "_mm_unpackhi_epi32(tr0_2, tr0_3)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi64(tr1_0, tr1_1)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi64(tr1_0, tr1_1)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi64(tr1_2, tr1_3)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi64(tr1_2, tr1_3)"
  },
  {
    "label": "dct_const_round_shift_sse2()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "dct_const_round_shift_sse2(const __m128i in)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i t =)",
    "insertText": "_mm_add_epi32(in, _mm_set1_epi32(DCT_CONST_ROUNDING))"
  },
  {
    "label": "idct_madd_round_shift_sse2()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "idct_madd_round_shift_sse2(const __m128i in, const __m128i cospi)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i t =)",
    "insertText": "_mm_madd_epi16(in, cospi)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "idct_calc_wraplow_sse2(const __m128i in0, const __m128i in1, const __m128i x)"
  },
  {
    "label": "idct_madd_round_shift_sse2()",
    "kind": "Method",
    "detail": "Function (const __m128i t0 =)",
    "insertText": "idct_madd_round_shift_sse2(in0, x)"
  },
  {
    "label": "idct_madd_round_shift_sse2()",
    "kind": "Method",
    "detail": "Function (const __m128i t1 =)",
    "insertText": "idct_madd_round_shift_sse2(in1, x)"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "butterfly(const __m128i in0, const __m128i in1, const int c0, const int c1, __m128i *const out0, __m128i *const out1)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i cst0 =)",
    "insertText": "pair_set_epi16(c0, -c1)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i cst1 =)",
    "insertText": "pair_set_epi16(c1, c0)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo =)",
    "insertText": "_mm_unpacklo_epi16(in0, in1)"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i hi =)",
    "insertText": "_mm_unpackhi_epi16(in0, in1)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (* out0 =)",
    "insertText": "idct_calc_wraplow_sse2(lo, hi, cst0)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (* out1 =)",
    "insertText": "idct_calc_wraplow_sse2(lo, hi, cst1)"
  },
  {
    "label": "butterfly_cospi16()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "butterfly_cospi16(const __m128i in)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i cst =)",
    "insertText": "pair_set_epi16(cospi_16_64, cospi_16_64)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo =)",
    "insertText": "_mm_unpacklo_epi16(in, _mm_setzero_si128())"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i hi =)",
    "insertText": "_mm_unpackhi_epi16(in, _mm_setzero_si128())"
  },
  {
    "label": "load_input_data4()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "load_input_data4(const tran_low_t *data)"
  },
  {
    "label": "_mm_setzero_si128()",
    "kind": "Method",
    "detail": "Function (# if CONFIG_VP9_HIGHBITDEPTH const __m128i zero =)",
    "insertText": "_mm_setzero_si128()"
  },
  {
    "label": "_mm_load_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i in =)",
    "insertText": "_mm_load_si128((const __m128i *)data)"
  },
  {
    "label": "_mm_loadl_epi64()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "_mm_loadl_epi64((const __m128i *)data)"
  },
  {
    "label": "load_input_data8()",
    "kind": "Method",
    "detail": "Function (# endif } __m128i)",
    "insertText": "load_input_data8(const tran_low_t *data)"
  },
  {
    "label": "_mm_load_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i in1 =)",
    "insertText": "_mm_load_si128((const __m128i *)(data + 4))"
  },
  {
    "label": "load_transpose_16bit_8x8()",
    "kind": "Method",
    "detail": "Function (# endif } void)",
    "insertText": "load_transpose_16bit_8x8(const tran_low_t *input, const int stride, __m128i *const in)"
  },
  {
    "label": "load_input_data8()",
    "kind": "Method",
    "detail": "Function (in [ 0 ] =)",
    "insertText": "load_input_data8(input + 0 * stride)"
  },
  {
    "label": "load_input_data8()",
    "kind": "Method",
    "detail": "Function (in [ 1 ] =)",
    "insertText": "load_input_data8(input + 1 * stride)"
  },
  {
    "label": "load_input_data8()",
    "kind": "Method",
    "detail": "Function (in [ 2 ] =)",
    "insertText": "load_input_data8(input + 2 * stride)"
  },
  {
    "label": "load_input_data8()",
    "kind": "Method",
    "detail": "Function (in [ 3 ] =)",
    "insertText": "load_input_data8(input + 3 * stride)"
  },
  {
    "label": "load_input_data8()",
    "kind": "Method",
    "detail": "Function (in [ 4 ] =)",
    "insertText": "load_input_data8(input + 4 * stride)"
  },
  {
    "label": "load_input_data8()",
    "kind": "Method",
    "detail": "Function (in [ 5 ] =)",
    "insertText": "load_input_data8(input + 5 * stride)"
  },
  {
    "label": "load_input_data8()",
    "kind": "Method",
    "detail": "Function (in [ 6 ] =)",
    "insertText": "load_input_data8(input + 6 * stride)"
  },
  {
    "label": "load_input_data8()",
    "kind": "Method",
    "detail": "Function (in [ 7 ] =)",
    "insertText": "load_input_data8(input + 7 * stride)"
  },
  {
    "label": "transpose_16bit_8x8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "transpose_16bit_8x8(in, in)"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "recon_and_store(uint8_t *const dest, const __m128i in_x)"
  },
  {
    "label": "_mm_loadl_epi64()",
    "kind": "Method",
    "detail": "Function (__m128i d0 =)",
    "insertText": "_mm_loadl_epi64((__m128i *)(dest))"
  },
  {
    "label": "_mm_unpacklo_epi8()",
    "kind": "Method",
    "detail": "Function (d0 =)",
    "insertText": "_mm_unpacklo_epi8(d0, zero)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (d0 =)",
    "insertText": "_mm_add_epi16(in_x, d0)"
  },
  {
    "label": "_mm_packus_epi16()",
    "kind": "Method",
    "detail": "Function (d0 =)",
    "insertText": "_mm_packus_epi16(d0, d0)"
  },
  {
    "label": "_mm_storel_epi64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm_storel_epi64((__m128i *)(dest), d0)"
  },
  {
    "label": "round_shift_8x8()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "round_shift_8x8(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "_mm_set1_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i final_rounding =)",
    "insertText": "_mm_set1_epi16(1 << 4)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_add_epi16(in[0], final_rounding)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 ] =)",
    "insertText": "_mm_add_epi16(in[1], final_rounding)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 2 ] =)",
    "insertText": "_mm_add_epi16(in[2], final_rounding)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 3 ] =)",
    "insertText": "_mm_add_epi16(in[3], final_rounding)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 4 ] =)",
    "insertText": "_mm_add_epi16(in[4], final_rounding)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 5 ] =)",
    "insertText": "_mm_add_epi16(in[5], final_rounding)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 6 ] =)",
    "insertText": "_mm_add_epi16(in[6], final_rounding)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 7 ] =)",
    "insertText": "_mm_add_epi16(in[7], final_rounding)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_srai_epi16(out[0], 5)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 ] =)",
    "insertText": "_mm_srai_epi16(out[1], 5)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 2 ] =)",
    "insertText": "_mm_srai_epi16(out[2], 5)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 3 ] =)",
    "insertText": "_mm_srai_epi16(out[3], 5)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 4 ] =)",
    "insertText": "_mm_srai_epi16(out[4], 5)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 5 ] =)",
    "insertText": "_mm_srai_epi16(out[5], 5)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 6 ] =)",
    "insertText": "_mm_srai_epi16(out[6], 5)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 7 ] =)",
    "insertText": "_mm_srai_epi16(out[7], 5)"
  },
  {
    "label": "write_buffer_8x8()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "write_buffer_8x8(const __m128i *const in, uint8_t *const dest, const int stride)"
  },
  {
    "label": "round_shift_8x8()",
    "kind": "Method",
    "detail": "Function (__m128i t [ 8 ] ;)",
    "insertText": "round_shift_8x8(in, t)"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recon_and_store(dest + 0 * stride, t[0])"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recon_and_store(dest + 1 * stride, t[1])"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recon_and_store(dest + 2 * stride, t[2])"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recon_and_store(dest + 3 * stride, t[3])"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recon_and_store(dest + 4 * stride, t[4])"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recon_and_store(dest + 5 * stride, t[5])"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recon_and_store(dest + 6 * stride, t[6])"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recon_and_store(dest + 7 * stride, t[7])"
  },
  {
    "label": "recon_and_store4x4_sse2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "recon_and_store4x4_sse2(const __m128i *const in, uint8_t *const dest, const int stride)"
  },
  {
    "label": "_mm_cvtsi32_si128()",
    "kind": "Method",
    "detail": "Function (__m128i d [ 2 ] ; d [ 0 ] =)",
    "insertText": "_mm_cvtsi32_si128(*(const int *)(dest))"
  },
  {
    "label": "_mm_cvtsi32_si128()",
    "kind": "Method",
    "detail": "Function (d [ 1 ] =)",
    "insertText": "_mm_cvtsi32_si128(*(const int *)(dest + stride * 3))"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (d [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(d[0], _mm_cvtsi32_si128(*(const int *)(dest + stride)))"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (d [ 1 ] =)",
    "insertText": "_mm_unpacklo_epi32(_mm_cvtsi32_si128(*(const int *)(dest + stride * 2)), d[1])"
  },
  {
    "label": "_mm_unpacklo_epi8()",
    "kind": "Method",
    "detail": "Function (d [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi8(d[0], zero)"
  },
  {
    "label": "_mm_unpacklo_epi8()",
    "kind": "Method",
    "detail": "Function (d [ 1 ] =)",
    "insertText": "_mm_unpacklo_epi8(d[1], zero)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (d [ 0 ] =)",
    "insertText": "_mm_add_epi16(d[0], in[0])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (d [ 1 ] =)",
    "insertText": "_mm_add_epi16(d[1], in[1])"
  },
  {
    "label": "_mm_packus_epi16()",
    "kind": "Method",
    "detail": "Function (d [ 0 ] =)",
    "insertText": "_mm_packus_epi16(d[0], d[1])"
  },
  {
    "label": "_mm_srli_si128()",
    "kind": "Method",
    "detail": "Function (d [ 0 ] =)",
    "insertText": "_mm_srli_si128(d[0], 4)"
  },
  {
    "label": "store_buffer_8x32()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "store_buffer_8x32(__m128i *in, uint8_t *dst, int stride)"
  },
  {
    "label": "_mm_set1_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i final_rounding =)",
    "insertText": "_mm_set1_epi16(1 << 5)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (int j = 0 ;)",
    "insertText": "while(j < 32)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (in [ j ] =)",
    "insertText": "_mm_adds_epi16(in[j], final_rounding)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (in [ j + 1 ] =)",
    "insertText": "_mm_adds_epi16(in[j + 1], final_rounding)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (in [ j ] =)",
    "insertText": "_mm_srai_epi16(in[j], 6)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (in [ j + 1 ] =)",
    "insertText": "_mm_srai_epi16(in[j + 1], 6)"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recon_and_store(dst, in[j])"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (dst + = stride ;)",
    "insertText": "recon_and_store(dst, in[j + 1])"
  },
  {
    "label": "write_buffer_8x1()",
    "kind": "Method",
    "detail": "Function (dst + = stride ; j + = 2 ; } } void)",
    "insertText": "write_buffer_8x1(uint8_t *const dest, const __m128i in)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i out ; out =)",
    "insertText": "_mm_adds_epi16(in, final_rounding)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (out =)",
    "insertText": "_mm_srai_epi16(out, 6)"
  },
  {
    "label": "recon_and_store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recon_and_store(dest, out)"
  },
  {
    "label": "add_sub_butterfly()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "add_sub_butterfly(const __m128i *in, __m128i *out, int size)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (int i = 0 ; const int num = size>> 1 ; const int bound = size - 1 ;)",
    "insertText": "while(i < num)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ i ] =)",
    "insertText": "_mm_add_epi16(in[i], in[bound - i])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ bound - i ] =)",
    "insertText": "_mm_sub_epi16(in[i], in[bound - i])"
  },
  {
    "label": "idct8()",
    "kind": "Method",
    "detail": "Function (i + + ; } } void)",
    "insertText": "idct8(const __m128i *const in , __m128i *const out)"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (__m128i step1 [ 8 ],step2 [ 8 ] ;)",
    "insertText": "butterfly(in[1], in[7], cospi_28_64, cospi_4_64, &step1[4], &step1[7])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(in[5], in[3], cospi_12_64, cospi_20_64, &step1[5], &step1[6])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(in[0], in[4], cospi_16_64, cospi_16_64, &step2[1], &step2[0])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(in[2], in[6], cospi_24_64, cospi_8_64, &step2[2], &step2[3])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 4 ] =)",
    "insertText": "_mm_add_epi16(step1[4], step1[5])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 5 ] =)",
    "insertText": "_mm_sub_epi16(step1[4], step1[5])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 6 ] =)",
    "insertText": "_mm_sub_epi16(step1[7], step1[6])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 7 ] =)",
    "insertText": "_mm_add_epi16(step1[7], step1[6])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 0 ] =)",
    "insertText": "_mm_add_epi16(step2[0], step2[3])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 ] =)",
    "insertText": "_mm_add_epi16(step2[1], step2[2])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 ] =)",
    "insertText": "_mm_sub_epi16(step2[1], step2[2])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 ] =)",
    "insertText": "_mm_sub_epi16(step2[0], step2[3])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step2[6], step2[5], cospi_16_64, cospi_16_64, &step1[5], &step1[6])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_add_epi16(step1[0], step2[7])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 ] =)",
    "insertText": "_mm_add_epi16(step1[1], step1[6])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 2 ] =)",
    "insertText": "_mm_add_epi16(step1[2], step1[5])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 3 ] =)",
    "insertText": "_mm_add_epi16(step1[3], step2[4])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 4 ] =)",
    "insertText": "_mm_sub_epi16(step1[3], step2[4])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 5 ] =)",
    "insertText": "_mm_sub_epi16(step1[2], step1[5])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 6 ] =)",
    "insertText": "_mm_sub_epi16(step1[1], step1[6])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 7 ] =)",
    "insertText": "_mm_sub_epi16(step1[0], step2[7])"
  },
  {
    "label": "idct8x8_12_add_kernel_sse2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "idct8x8_12_add_kernel_sse2(__m128i *const io)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i cp_16_n16 =)",
    "insertText": "pair_set_epi16(cospi_16_64, -cospi_16_64)"
  },
  {
    "label": "transpose_16bit_4x4()",
    "kind": "Method",
    "detail": "Function (__m128i step1 [ 8 ],step2 [ 8 ],tmp [ 4 ] ;)",
    "insertText": "transpose_16bit_4x4(io, io)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function ({ const __m128i cp_28_n4 =)",
    "insertText": "pair_set_epi16(cospi_28_64, -cospi_4_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i cp_4_28 =)",
    "insertText": "pair_set_epi16(cospi_4_64, cospi_28_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i cp_n20_12 =)",
    "insertText": "pair_set_epi16(-cospi_20_64, cospi_12_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i cp_12_20 =)",
    "insertText": "pair_set_epi16(cospi_12_64, cospi_20_64)"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_1 =)",
    "insertText": "_mm_unpackhi_epi16(io[0], zero)"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_3 =)",
    "insertText": "_mm_unpackhi_epi16(io[1], zero)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step1 [ 4 ] =)",
    "insertText": "idct_calc_wraplow_sse2(cp_28_n4, cp_4_28, lo_1)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step1 [ 5 ] =)",
    "insertText": "idct_calc_wraplow_sse2(cp_n20_12, cp_12_20, lo_3)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (} { const __m128i cp_24_n8 =)",
    "insertText": "pair_set_epi16(cospi_24_64, -cospi_8_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i cp_8_24 =)",
    "insertText": "pair_set_epi16(cospi_8_64, cospi_24_64)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_0 =)",
    "insertText": "_mm_unpacklo_epi16(io[0], zero)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_2 =)",
    "insertText": "_mm_unpacklo_epi16(io[1], zero)"
  },
  {
    "label": "idct_madd_round_shift_sse2()",
    "kind": "Method",
    "detail": "Function (const __m128i t =)",
    "insertText": "idct_madd_round_shift_sse2(cp_16_16, lo_0)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 0 ] =)",
    "insertText": "_mm_packs_epi32(t, t)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 ] =)",
    "insertText": "idct_calc_wraplow_sse2(cp_8_24, cp_24_n8, lo_2)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step2 [ 6 ] =)",
    "insertText": "_mm_unpackhi_epi64(step2[5], zero)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (} { const __m128i lo_65 =)",
    "insertText": "_mm_unpacklo_epi16(step2[6], step2[5])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (tmp [ 0 ] =)",
    "insertText": "_mm_add_epi16(step2[0], step2[2])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (tmp [ 1 ] =)",
    "insertText": "_mm_sub_epi16(step2[0], step2[2])"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 ] =)",
    "insertText": "_mm_unpackhi_epi64(tmp[1], tmp[0])"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 ] =)",
    "insertText": "_mm_unpacklo_epi64(tmp[1], tmp[0])"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step1 [ 5 ] =)",
    "insertText": "idct_calc_wraplow_sse2(cp_16_n16, cp_16_16, lo_65)"
  },
  {
    "label": "idct8x8_12_transpose_16bit_4x8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct8x8_12_transpose_16bit_4x8(tmp, io)"
  },
  {
    "label": "idct8()",
    "kind": "Method",
    "detail": "Function (io [ 4 ] = io [ 5 ] = io [ 6 ] = io [ 7 ] = zero ;)",
    "insertText": "idct8(io, io)"
  },
  {
    "label": "idct16_8col()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "idct16_8col(const __m128i *const in , __m128i *const out)"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (__m128i step1 [ 1 6 ],step2 [ 1 6 ] ;)",
    "insertText": "butterfly(in[1], in[15], cospi_30_64, cospi_2_64, &step2[8], &step2[15])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(in[9], in[7], cospi_14_64, cospi_18_64, &step2[9], &step2[14])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(in[5], in[11], cospi_22_64, cospi_10_64, &step2[10], &step2[13])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(in[13], in[3], cospi_6_64, cospi_26_64, &step2[11], &step2[12])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(in[2], in[14], cospi_28_64, cospi_4_64, &step1[4], &step1[7])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(in[10], in[6], cospi_12_64, cospi_20_64, &step1[5], &step1[6])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 8 ] =)",
    "insertText": "_mm_add_epi16(step2[8], step2[9])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 9 ] =)",
    "insertText": "_mm_sub_epi16(step2[8], step2[9])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 0 ] =)",
    "insertText": "_mm_sub_epi16(step2[11], step2[10])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 1 ] =)",
    "insertText": "_mm_add_epi16(step2[10], step2[11])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 2 ] =)",
    "insertText": "_mm_add_epi16(step2[12], step2[13])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 3 ] =)",
    "insertText": "_mm_sub_epi16(step2[12], step2[13])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 4 ] =)",
    "insertText": "_mm_sub_epi16(step2[15], step2[14])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 5 ] =)",
    "insertText": "_mm_add_epi16(step2[14], step2[15])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(in[0], in[8], cospi_16_64, cospi_16_64, &step2[1], &step2[0])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(in[4], in[12], cospi_24_64, cospi_8_64, &step2[2], &step2[3])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step1[14], step1[9], cospi_24_64, cospi_8_64, &step2[9], &step2[14])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step1[10], step1[13], -cospi_8_64, -cospi_24_64, &step2[13], &step2[10])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 7 ] =)",
    "insertText": "_mm_add_epi16(step1[6], step1[7])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 8 ] =)",
    "insertText": "_mm_add_epi16(step2[8], step2[11])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 9 ] =)",
    "insertText": "_mm_add_epi16(step2[9], step2[10])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 0 ] =)",
    "insertText": "_mm_sub_epi16(step2[9], step2[10])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 1 ] =)",
    "insertText": "_mm_sub_epi16(step2[8], step2[11])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 2 ] =)",
    "insertText": "_mm_sub_epi16(step2[15], step2[12])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 3 ] =)",
    "insertText": "_mm_sub_epi16(step2[14], step2[13])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 4 ] =)",
    "insertText": "_mm_add_epi16(step2[14], step2[13])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 5 ] =)",
    "insertText": "_mm_add_epi16(step2[15], step2[12])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 0 ] =)",
    "insertText": "_mm_add_epi16(step1[0], step1[7])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 3 ] =)",
    "insertText": "_mm_add_epi16(step1[3], step1[4])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 4 ] =)",
    "insertText": "_mm_sub_epi16(step1[3], step1[4])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 7 ] =)",
    "insertText": "_mm_sub_epi16(step1[0], step1[7])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step1[13], step1[10], cospi_16_64, cospi_16_64, &step2[10], &step2[13])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step1[12], step1[11], cospi_16_64, cospi_16_64, &step2[11], &step2[12])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_add_epi16(step2[0], step1[15])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 ] =)",
    "insertText": "_mm_add_epi16(step2[1], step1[14])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 2 ] =)",
    "insertText": "_mm_add_epi16(step2[2], step2[13])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 3 ] =)",
    "insertText": "_mm_add_epi16(step2[3], step2[12])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 4 ] =)",
    "insertText": "_mm_add_epi16(step2[4], step2[11])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 5 ] =)",
    "insertText": "_mm_add_epi16(step2[5], step2[10])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 6 ] =)",
    "insertText": "_mm_add_epi16(step2[6], step1[9])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 7 ] =)",
    "insertText": "_mm_add_epi16(step2[7], step1[8])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 8 ] =)",
    "insertText": "_mm_sub_epi16(step2[7], step1[8])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 9 ] =)",
    "insertText": "_mm_sub_epi16(step2[6], step1[9])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 0 ] =)",
    "insertText": "_mm_sub_epi16(step2[5], step2[10])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 1 ] =)",
    "insertText": "_mm_sub_epi16(step2[4], step2[11])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 2 ] =)",
    "insertText": "_mm_sub_epi16(step2[3], step2[12])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 3 ] =)",
    "insertText": "_mm_sub_epi16(step2[2], step2[13])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 4 ] =)",
    "insertText": "_mm_sub_epi16(step2[1], step1[14])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 5 ] =)",
    "insertText": "_mm_sub_epi16(step2[0], step1[15])"
  },
  {
    "label": "idct16x16_10_pass1()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "idct16x16_10_pass1(const __m128i *const input , __m128i *const output)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m16_p16 =)",
    "insertText": "pair_set_epi16(-cospi_16_64, cospi_16_64)"
  },
  {
    "label": "transpose_16bit_4x4()",
    "kind": "Method",
    "detail": "Function (__m128i step1 [ 1 6 ],step2 [ 1 6 ] ;)",
    "insertText": "transpose_16bit_4x4(input, output)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function ({ const __m128i k__cospi_p30_m02 =)",
    "insertText": "pair_set_epi16(cospi_30_64, -cospi_2_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p02_p30 =)",
    "insertText": "pair_set_epi16(cospi_2_64, cospi_30_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p06_m26 =)",
    "insertText": "pair_set_epi16(cospi_6_64, -cospi_26_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p26_p06 =)",
    "insertText": "pair_set_epi16(cospi_26_64, cospi_6_64)"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_1_15 =)",
    "insertText": "_mm_unpackhi_epi16(output[0], zero)"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_13_3 =)",
    "insertText": "_mm_unpackhi_epi16(zero, output[1])"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step2 [ 8 ] =)",
    "insertText": "idct_calc_wraplow_sse2(k__cospi_p30_m02, k__cospi_p02_p30, lo_1_15)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 1 ] =)",
    "insertText": "idct_calc_wraplow_sse2(k__cospi_p06_m26, k__cospi_p26_p06, lo_13_3)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_2_14 =)",
    "insertText": "_mm_unpacklo_epi16(output[1], zero)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step1 [ 4 ] =)",
    "insertText": "idct_calc_wraplow_sse2(k__cospi_p28_m04, k__cospi_p04_p28, lo_2_14)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 3 ] =)",
    "insertText": "_mm_unpackhi_epi64(step2[11], zero)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 4 ] =)",
    "insertText": "_mm_unpackhi_epi64(step2[8], zero)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (} { const __m128i k__cospi_m08_p24 =)",
    "insertText": "pair_set_epi16(-cospi_8_64, cospi_24_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p24_p08 =)",
    "insertText": "pair_set_epi16(cospi_24_64, cospi_8_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m24_m08 =)",
    "insertText": "pair_set_epi16(-cospi_24_64, -cospi_8_64)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_0_8 =)",
    "insertText": "_mm_unpacklo_epi16(output[0], zero)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_9_14 =)",
    "insertText": "_mm_unpacklo_epi16(step2[8], step1[14])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_10_13 =)",
    "insertText": "_mm_unpacklo_epi16(step2[11], step1[13])"
  },
  {
    "label": "idct_madd_round_shift_sse2()",
    "kind": "Method",
    "detail": "Function (const __m128i t =)",
    "insertText": "idct_madd_round_shift_sse2(lo_0_8, k__cospi_p16_p16)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step2 [ 9 ] =)",
    "insertText": "idct_calc_wraplow_sse2(k__cospi_m08_p24, k__cospi_p24_p08, lo_9_14)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 0 ] =)",
    "insertText": "idct_calc_wraplow_sse2(k__cospi_m24_m08, k__cospi_m08_p24, lo_10_13)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step2 [ 6 ] =)",
    "insertText": "_mm_unpackhi_epi64(step1[4], zero)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (} { const __m128i lo_5_6 =)",
    "insertText": "_mm_unpacklo_epi16(step1[4], step2[6])"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step1 [ 6 ] =)",
    "insertText": "idct_calc_wraplow_sse2(k__cospi_p16_p16, k__cospi_m16_p16, lo_5_6)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 2 ] =)",
    "insertText": "_mm_unpackhi_epi64(step1[11], zero)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 3 ] =)",
    "insertText": "_mm_unpackhi_epi64(step1[10], zero)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 4 ] =)",
    "insertText": "_mm_unpackhi_epi64(step1[9], zero)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 5 ] =)",
    "insertText": "_mm_unpackhi_epi64(step1[8], zero)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (} { const __m128i lo_10_13 =)",
    "insertText": "_mm_unpacklo_epi16(step1[10], step1[13])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i lo_11_12 =)",
    "insertText": "_mm_unpacklo_epi16(step1[11], step1[12])"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 0 ] =)",
    "insertText": "idct_calc_wraplow_sse2(k__cospi_m16_p16, k__cospi_p16_p16, lo_10_13)"
  },
  {
    "label": "idct_calc_wraplow_sse2()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 1 ] =)",
    "insertText": "idct_calc_wraplow_sse2(k__cospi_m16_p16, k__cospi_p16_p16, lo_11_12)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 3 ] =)",
    "insertText": "_mm_unpackhi_epi64(step2[10], zero)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 3 ] =)",
    "insertText": "_mm_add_epi16(step1[0], step1[4])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 ] =)",
    "insertText": "_mm_add_epi16(step1[0], step1[6])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 6 ] =)",
    "insertText": "_mm_sub_epi16(step1[0], step1[6])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 4 ] =)",
    "insertText": "_mm_sub_epi16(step1[0], step1[4])"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step2 [ 0 ] =)",
    "insertText": "_mm_unpackhi_epi64(step2[3], zero)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 ] =)",
    "insertText": "_mm_unpackhi_epi64(step2[1], zero)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step2 [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi64(step2[6], zero)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (step2 [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi64(step2[4], zero)"
  },
  {
    "label": "idct16x16_10_pass2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "idct16x16_10_pass2(__m128i *const l , __m128i *const io)"
  },
  {
    "label": "transpose_16bit_4x8()",
    "kind": "Method",
    "detail": "Function (__m128i step1 [ 1 6 ],step2 [ 1 6 ] ;)",
    "insertText": "transpose_16bit_4x8(l, io)"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(io[1], zero, cospi_30_64, cospi_2_64, &step2[8], &step2[15])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(zero, io[3], cospi_6_64, cospi_26_64, &step2[11], &step2[12])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(io[2], zero, cospi_28_64, cospi_4_64, &step1[4], &step1[7])"
  },
  {
    "label": "butterfly_cospi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 0 ] =)",
    "insertText": "butterfly_cospi16(io[0])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step2[15], step2[8], cospi_24_64, cospi_8_64, &step2[9], &step2[14])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step2[11], step2[12], -cospi_8_64, -cospi_24_64, &step2[13], &step2[10])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step1[7], step1[4], cospi_16_64, cospi_16_64, &step1[5], &step1[6])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 ] =)",
    "insertText": "_mm_add_epi16(step1[0], step1[5])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 5 ] =)",
    "insertText": "_mm_sub_epi16(step1[0], step1[5])"
  },
  {
    "label": "idct32_8x32_quarter_2_stage_4_to_6()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "idct32_8x32_quarter_2_stage_4_to_6(__m128i *const step1 , __m128i *const out)"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step1[13], step1[10], -cospi_8_64, cospi_24_64, &step2[10], &step2[13])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (out [ 8 ] = step1 [ 8 ] ; out [ 9 ] = step1 [ 9 ] ;)",
    "insertText": "butterfly(step1[13], step1[10], cospi_16_64, cospi_16_64, &out[10], &out[13])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step1[12], step1[11], cospi_16_64, cospi_16_64, &out[11], &out[12])"
  },
  {
    "label": "idct32_8x32_quarter_3_4_stage_4_to_7()",
    "kind": "Method",
    "detail": "Function (out [ 1 4 ] = step1 [ 1 4 ] ; out [ 1 5 ] = step1 [ 1 5 ] ; } void)",
    "insertText": "idct32_8x32_quarter_3_4_stage_4_to_7(__m128i *const step1 , __m128i *const out)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i step2 [ 3 2 ] ; step2 [ 1 6 ] =)",
    "insertText": "_mm_add_epi16(step1[16], step1[19])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 7 ] =)",
    "insertText": "_mm_add_epi16(step1[17], step1[18])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 8 ] =)",
    "insertText": "_mm_sub_epi16(step1[17], step1[18])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 9 ] =)",
    "insertText": "_mm_sub_epi16(step1[16], step1[19])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 0 ] =)",
    "insertText": "_mm_sub_epi16(step1[23], step1[20])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 1 ] =)",
    "insertText": "_mm_sub_epi16(step1[22], step1[21])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 2 ] =)",
    "insertText": "_mm_add_epi16(step1[22], step1[21])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 3 ] =)",
    "insertText": "_mm_add_epi16(step1[23], step1[20])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 4 ] =)",
    "insertText": "_mm_add_epi16(step1[24], step1[27])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 5 ] =)",
    "insertText": "_mm_add_epi16(step1[25], step1[26])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 6 ] =)",
    "insertText": "_mm_sub_epi16(step1[25], step1[26])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 7 ] =)",
    "insertText": "_mm_sub_epi16(step1[24], step1[27])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 8 ] =)",
    "insertText": "_mm_sub_epi16(step1[31], step1[28])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 9 ] =)",
    "insertText": "_mm_sub_epi16(step1[30], step1[29])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 3 0 ] =)",
    "insertText": "_mm_add_epi16(step1[29], step1[30])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 3 1 ] =)",
    "insertText": "_mm_add_epi16(step1[28], step1[31])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 6 ] = step2 [ 1 6 ] ; step1 [ 1 7 ] = step2 [ 1 7 ] ;)",
    "insertText": "butterfly(step2[29], step2[18], cospi_24_64, cospi_8_64, &step1[18], &step1[29])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step2[28], step2[19], cospi_24_64, cospi_8_64, &step1[19], &step1[28])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step2[27], step2[20], -cospi_8_64, cospi_24_64, &step1[20], &step1[27])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step2[26], step2[21], -cospi_8_64, cospi_24_64, &step1[21], &step1[26])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 2 ] = step2 [ 2 2 ] ; step1 [ 2 3 ] = step2 [ 2 3 ] ; step1 [ 2 4 ] = step2 [ 2 4 ] ; step1 [ 2 5 ] = step2 [ 2 5 ] ; step1 [ 3 0 ] = step2 [ 3 0 ] ; step1 [ 3 1 ] = step2 [ 3 1 ] ; out [ 1 6 ] =)",
    "insertText": "_mm_add_epi16(step1[16], step1[23])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 7 ] =)",
    "insertText": "_mm_add_epi16(step1[17], step1[22])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 8 ] =)",
    "insertText": "_mm_add_epi16(step1[18], step1[21])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 1 9 ] =)",
    "insertText": "_mm_add_epi16(step1[19], step1[20])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 0 ] =)",
    "insertText": "_mm_sub_epi16(step1[19], step1[20])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 1 ] =)",
    "insertText": "_mm_sub_epi16(step1[18], step1[21])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 2 ] =)",
    "insertText": "_mm_sub_epi16(step1[17], step1[22])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 3 ] =)",
    "insertText": "_mm_sub_epi16(step1[16], step1[23])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 4 ] =)",
    "insertText": "_mm_sub_epi16(step1[31], step1[24])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 5 ] =)",
    "insertText": "_mm_sub_epi16(step1[30], step1[25])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 6 ] =)",
    "insertText": "_mm_sub_epi16(step1[29], step1[26])"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 7 ] =)",
    "insertText": "_mm_sub_epi16(step1[28], step1[27])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 2 8 ] =)",
    "insertText": "_mm_add_epi16(step1[27], step1[28])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 2 9 ] =)",
    "insertText": "_mm_add_epi16(step1[26], step1[29])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 3 0 ] =)",
    "insertText": "_mm_add_epi16(step1[25], step1[30])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (out [ 3 1 ] =)",
    "insertText": "_mm_add_epi16(step1[24], step1[31])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step2[27], step2[20], cospi_16_64, cospi_16_64, &out[20], &out[27])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step2[26], step2[21], cospi_16_64, cospi_16_64, &out[21], &out[26])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step2[25], step2[22], cospi_16_64, cospi_16_64, &out[22], &out[25])"
  },
  {
    "label": "butterfly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "butterfly(step2[24], step2[23], cospi_16_64, cospi_16_64, &out[23], &out[24])"
  },
  {
    "label": "idct4_sse2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "idct4_sse2(__m128i *const in)"
  },
  {
    "label": "vpx_idct8_sse2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_idct8_sse2(__m128i *const in)"
  },
  {
    "label": "idct16_sse2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct16_sse2(__m128i *const in0, __m128i *const in1)"
  },
  {
    "label": "iadst4_sse2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst4_sse2(__m128i *const in)"
  },
  {
    "label": "iadst8_sse2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst8_sse2(__m128i *const in)"
  },
  {
    "label": "vpx_iadst16_8col_sse2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_iadst16_8col_sse2(__m128i *const in)"
  },
  {
    "label": "iadst16_sse2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst16_sse2(__m128i *const in0, __m128i *const in1)"
  },
  {
    "label": "idct32_1024_8x32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct32_1024_8x32(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "idct32_34_8x32_sse2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct32_34_8x32_sse2(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "idct32_34_8x32_ssse3()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct32_34_8x32_ssse3(const __m128i *const in, __m128i *const out)"
  }
]