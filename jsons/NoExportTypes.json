[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EInterpCurveMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInterpCurveMode"
  },
  {
    "label": "EPixelFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPixelFormat"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFallbackStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFallbackStruct"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FVector3f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVector3f"
  },
  {
    "label": "FVector3d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVector3d"
  },
  {
    "label": "FVector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVector"
  },
  {
    "label": "FVector4f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVector4f"
  },
  {
    "label": "FVector4d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVector4d"
  },
  {
    "label": "FVector4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVector4"
  },
  {
    "label": "FVector2f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVector2f"
  },
  {
    "label": "FVector2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVector2D"
  },
  {
    "label": "FTwoVectors",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTwoVectors"
  },
  {
    "label": "FPlane4f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlane4f"
  },
  {
    "label": "FPlane4d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlane4d"
  },
  {
    "label": "FPlane",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlane"
  },
  {
    "label": "FRay3f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRay3f"
  },
  {
    "label": "FRay3d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRay3d"
  },
  {
    "label": "FRay",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRay"
  },
  {
    "label": "FRotator3f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRotator3f"
  },
  {
    "label": "FRotator3d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRotator3d"
  },
  {
    "label": "FRotator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRotator"
  },
  {
    "label": "FSphere3f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSphere3f"
  },
  {
    "label": "FSphere3d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSphere3d"
  },
  {
    "label": "FSphere",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSphere"
  },
  {
    "label": "FQuat4f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuat4f"
  },
  {
    "label": "FQuat4d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuat4d"
  },
  {
    "label": "FQuat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuat"
  },
  {
    "label": "FPackedNormal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackedNormal"
  },
  {
    "label": "FPackedRGB10A2N",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackedRGB10A2N"
  },
  {
    "label": "FPackedRGBA16N",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackedRGBA16N"
  },
  {
    "label": "FIntPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIntPoint"
  },
  {
    "label": "FInt32Point",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32Point"
  },
  {
    "label": "FInt64Point",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt64Point"
  },
  {
    "label": "FUintPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUintPoint"
  },
  {
    "label": "FUint32Point",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUint32Point"
  },
  {
    "label": "FUint64Point",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUint64Point"
  },
  {
    "label": "FIntRect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIntRect"
  },
  {
    "label": "FInt32Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32Rect"
  },
  {
    "label": "FInt64Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt64Rect"
  },
  {
    "label": "FUintRect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUintRect"
  },
  {
    "label": "FUint32Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUint32Rect"
  },
  {
    "label": "FUint64Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUint64Rect"
  },
  {
    "label": "FInt32Vector2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32Vector2"
  },
  {
    "label": "FInt64Vector2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt64Vector2"
  },
  {
    "label": "FIntVector2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIntVector2"
  },
  {
    "label": "FUint32Vector2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUint32Vector2"
  },
  {
    "label": "FUint64Vector2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUint64Vector2"
  },
  {
    "label": "FUintVector2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUintVector2"
  },
  {
    "label": "FInt32Vector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32Vector"
  },
  {
    "label": "FInt64Vector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt64Vector"
  },
  {
    "label": "FIntVector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIntVector"
  },
  {
    "label": "FUint32Vector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUint32Vector"
  },
  {
    "label": "FUint64Vector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUint64Vector"
  },
  {
    "label": "FUintVector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUintVector"
  },
  {
    "label": "FInt32Vector4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32Vector4"
  },
  {
    "label": "FInt64Vector4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt64Vector4"
  },
  {
    "label": "FIntVector4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIntVector4"
  },
  {
    "label": "FUint32Vector4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUint32Vector4"
  },
  {
    "label": "FUint64Vector4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUint64Vector4"
  },
  {
    "label": "FUintVector4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUintVector4"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearColor"
  },
  {
    "label": "FBox3f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBox3f"
  },
  {
    "label": "FBox3d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBox3d"
  },
  {
    "label": "FBox",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBox"
  },
  {
    "label": "FBox2f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBox2f"
  },
  {
    "label": "FBox2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBox2D"
  },
  {
    "label": "FBoxSphereBounds3f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoxSphereBounds3f"
  },
  {
    "label": "FBoxSphereBounds3d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoxSphereBounds3d"
  },
  {
    "label": "FBoxSphereBounds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoxSphereBounds"
  },
  {
    "label": "FOrientedBox",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOrientedBox"
  },
  {
    "label": "FMatrix44f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMatrix44f"
  },
  {
    "label": "FMatrix44d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMatrix44d"
  },
  {
    "label": "FMatrix",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMatrix"
  },
  {
    "label": "FInterpCurvePointFloat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurvePointFloat"
  },
  {
    "label": "FInterpCurveFloat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurveFloat"
  },
  {
    "label": "FInterpCurvePointVector2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurvePointVector2D"
  },
  {
    "label": "FInterpCurveVector2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurveVector2D"
  },
  {
    "label": "FInterpCurvePointVector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurvePointVector"
  },
  {
    "label": "FInterpCurveVector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurveVector"
  },
  {
    "label": "FInterpCurvePointQuat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurvePointQuat"
  },
  {
    "label": "FInterpCurveQuat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurveQuat"
  },
  {
    "label": "FInterpCurvePointTwoVectors",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurvePointTwoVectors"
  },
  {
    "label": "FInterpCurveTwoVectors",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurveTwoVectors"
  },
  {
    "label": "FInterpCurvePointLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurvePointLinearColor"
  },
  {
    "label": "FInterpCurveLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurveLinearColor"
  },
  {
    "label": "FTransform3f",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransform3f"
  },
  {
    "label": "FTransform3d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransform3d"
  },
  {
    "label": "FTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransform"
  },
  {
    "label": "FRandomStream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRandomStream"
  },
  {
    "label": "FDateTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDateTime"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "FFrameRate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameRate"
  },
  {
    "label": "FFrameTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameTime"
  },
  {
    "label": "FQualifiedFrameTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQualifiedFrameTime"
  },
  {
    "label": "FTimecode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimecode"
  },
  {
    "label": "FTimespan",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimespan"
  },
  {
    "label": "FTopLevelAssetPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTopLevelAssetPath"
  },
  {
    "label": "FSoftObjectPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftObjectPath"
  },
  {
    "label": "FSoftClassPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftClassPath"
  },
  {
    "label": "FPrimaryAssetType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimaryAssetType"
  },
  {
    "label": "FPrimaryAssetId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimaryAssetId"
  },
  {
    "label": "FFloatRangeBound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFloatRangeBound"
  },
  {
    "label": "FFloatRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFloatRange"
  },
  {
    "label": "FDoubleRangeBound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDoubleRangeBound"
  },
  {
    "label": "FDoubleRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDoubleRange"
  },
  {
    "label": "FInt32RangeBound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32RangeBound"
  },
  {
    "label": "FInt32Range",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32Range"
  },
  {
    "label": "FFrameNumberRangeBound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumberRangeBound"
  },
  {
    "label": "FFrameNumberRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumberRange"
  },
  {
    "label": "FFloatInterval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFloatInterval"
  },
  {
    "label": "FInt32Interval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32Interval"
  },
  {
    "label": "FPolyglotTextData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPolyglotTextData"
  },
  {
    "label": "FAutomationEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAutomationEvent"
  },
  {
    "label": "FAutomationExecutionEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAutomationExecutionEntry"
  },
  {
    "label": "FInputDeviceId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputDeviceId"
  },
  {
    "label": "FPlatformUserId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformUserId"
  },
  {
    "label": "FPlatformInputDeviceState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformInputDeviceState"
  },
  {
    "label": "FARFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARFilter"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "FAssetBundleEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetBundleEntry"
  },
  {
    "label": "FAssetBundleData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetBundleData"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "FTestUninitializedScriptStructMembersTest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTestUninitializedScriptStructMembersTest"
  },
  {
    "label": "FTestUndeclaredScriptStructObjectReferencesTest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTestUndeclaredScriptStructObjectReferencesTest"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UField"
  },
  {
    "label": "UEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnum"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "UScriptStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScriptStruct"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterface"
  },
  {
    "label": "IInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInterface"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "UMetaData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMetaData"
  },
  {
    "label": "UProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UProperty"
  },
  {
    "label": "UStructProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStructProperty"
  },
  {
    "label": "UEnumProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnumProperty"
  },
  {
    "label": "UBoolProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBoolProperty"
  },
  {
    "label": "UNumericProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNumericProperty"
  },
  {
    "label": "UIntProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UIntProperty"
  },
  {
    "label": "UInt8Property",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInt8Property"
  },
  {
    "label": "UInt16Property",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInt16Property"
  },
  {
    "label": "UInt64Property",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInt64Property"
  },
  {
    "label": "UByteProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UByteProperty"
  },
  {
    "label": "UUint16Property",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUint16Property"
  },
  {
    "label": "UUint32Property",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUint32Property"
  },
  {
    "label": "UUint64Property",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUint64Property"
  },
  {
    "label": "UFloatProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFloatProperty"
  },
  {
    "label": "UDoubleProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDoubleProperty"
  },
  {
    "label": "UObjectPropertyBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectPropertyBase"
  },
  {
    "label": "UObjectProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectProperty"
  },
  {
    "label": "UClassProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClassProperty"
  },
  {
    "label": "USoftObjectProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoftObjectProperty"
  },
  {
    "label": "USoftClassProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoftClassProperty"
  },
  {
    "label": "UWeakObjectProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWeakObjectProperty"
  },
  {
    "label": "ULazyObjectProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULazyObjectProperty"
  },
  {
    "label": "UInterfaceProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterfaceProperty"
  },
  {
    "label": "UDelegateProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDelegateProperty"
  },
  {
    "label": "UMulticastDelegateProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMulticastDelegateProperty"
  },
  {
    "label": "UMulticastInlineDelegateProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMulticastInlineDelegateProperty"
  },
  {
    "label": "UMulticastSparseDelegateProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMulticastSparseDelegateProperty"
  },
  {
    "label": "UNameProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNameProperty"
  },
  {
    "label": "UStrProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStrProperty"
  },
  {
    "label": "UTextProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextProperty"
  },
  {
    "label": "UArrayProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UArrayProperty"
  },
  {
    "label": "USetProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USetProperty"
  },
  {
    "label": "UMapProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMapProperty"
  },
  {
    "label": "FFilePath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFilePath"
  },
  {
    "label": "FDirectoryPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirectoryPath"
  },
  {
    "label": "FTemplateString",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTemplateString"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # ifndef CPP # define CPP 1 # endif # if CPP # include \" PixelFormat . h \" # include \" Misc / FallbackStruct . h \" # include \" Misc / Guid . h \" # include \" Misc / DateTime . h \" # include \" Misc / Timespan . h \" # include \" Misc / FrameRate . h \" # include \" Misc / FrameTime . h \" # include \" Misc / QualifiedFrameTime . h \" # include \" Misc / FrameNumber . h \" # include \" Misc / Timecode . h \" # include \" UObject / TopLevelAssetPath . h \" # include \" UObject / SoftObjectPath . h \" # include \" UObject / PropertyAccessUtil . h \" # include \" Serialization / TestUndeclaredScriptStructObjectReferences . h \" # include \" Math / InterpCurvePoint . h \" # include \" Math / UnitConversion . h \" # include \" Math / Vector . h \" # include \" Math / Vector4 . h \" # include \" Math / Vector2D . h \" # include \" Math / TwoVectors . h \" # include \" Math / Plane . h \" # include \" Math / Rotator . h \" # include \" Math / Quat . h \" # include \" Math / IntPoint . h \" # include \" Math / IntVector . h \" # include \" Math / Color . h \" # include \" Math / Box . h \" # include \" Math / Box2D . h \" # include \" Math / BoxSphereBounds . h \" # include \" Math / OrientedBox . h \" # include \" Math / Matrix . h \" # include \" Math / ScalarRegister . h \" # include \" Math / RandomStream . h \" # include \" Math / RangeBound . h \" # include \" Math / Interval . h \" # include \" Math / Sphere . h \" # include \" Internationalization / PolyglotTextData . h \" # include \" AssetRegistry / ARFilter . h \" # include \" AssetRegistry / AssetBundleData . h \" # include \" AssetRegistry / AssetData . h \" # include \" . . / . . / . . / ApplicationCore / Public / GenericPlatform / ICursor . h \" # include \" . . / . . / . . / ApplicationCore / Public / GenericPlatform / IInputInterface . h \" # endif # if ! CPP)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (enum Type : int { None)",
    "insertText": "UMETA(DisplayName = \"None\"), UTC UMETA(DisplayName = \"UTC\"), SinceGStartTime UMETA(DisplayName = \"Time since application start\"), Local UMETA(DisplayName = \"Local time\")"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UENUM(BlueprintType, meta=(ScriptName=\"AxisType\"))"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (CIM_Linear)",
    "insertText": "UMETA(DisplayName=\"Linear\"), CIM_CurveAuto UMETA(DisplayName=\"Curve Auto\"), CIM_Constant UMETA(DisplayName=\"Constant\"), CIM_CurveUser UMETA(DisplayName=\"Curve User\"), CIM_CurveBreak UMETA(DisplayName=\"Curve Break\"), CIM_CurveAutoClamped UMETA(DisplayName=\"Curve Auto Clamped\")"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (enum Type : int { None,Default,TextEditBeam,ResizeLeftRight,ResizeUpDown,ResizeSouthEast,ResizeSouthWest,CardinalCross,Crosshairs,Hand,GrabHand,GrabHandClosed,SlashedCircle,EyeDropper,Custom,} ; })",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Ok,YesNo,OkCancel,YesNoCancel,CancelRetryContinue,YesNoYesAllNoAll,YesNoYesAllNoAllCancel,YesNoYesAll,} ; })",
    "insertText": "USTRUCT(noexport, IsAlwaysAccessible, HasDefaults)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, BlueprintInternalUseOnly, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta = (ScriptDefaultMake, ScriptDefaultBreak, HasNativeMake = \"/Script/Engine.KismetMathLibrary.MakeVector\", HasNativeBreak = \"/Script/Engine.KismetMathLibrary.BreakVector\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta = (HasNativeMake = \"/Script/Engine.KismetMathLibrary.MakeVector\", HasNativeBreak = \"/Script/Engine.KismetMathLibrary.BreakVector\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, BlueprintInternalUseOnly, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta = (ScriptDefaultMake, ScriptDefaultBreak, HasNativeMake = \"/Script/Engine.KismetMathLibrary.MakeVector4\", HasNativeBreak = \"/Script/Engine.KismetMathLibrary.BreakVector4\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta = (ScriptDefaultMake, ScriptDefaultBreak, HasNativeMake = \"/Script/Engine.KismetMathLibrary.MakeVector4\", HasNativeBreak = \"/Script/Engine.KismetMathLibrary.BreakVector4\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, BlueprintInternalUseOnly, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta = (ScriptDefaultMake, ScriptDefaultBreak, HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeVector2D\", HasNativeMake = \"/Script/Engine.KismetMathLibrary.MakeVector2D\", HasNativeBreak = \"/Script/Engine.KismetMathLibrary.BreakVector2D\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta=(HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeVector2D\", HasNativeBreak=\"/Script/Engine.KismetMathLibrary.BreakVector2D\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, BlueprintType, noexport, IsAlwaysAccessible, HasDefaults)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, BlueprintInternalUseOnly, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, BlueprintInternalUseOnly, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta = (ScriptDefaultMake, ScriptDefaultBreak, HasNativeMake = \"/Script/Engine.KismetMathLibrary.MakeRotator\", HasNativeBreak = \"/Script/Engine.KismetMathLibrary.BreakRotator\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta=(HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeRotator\", HasNativeBreak=\"/Script/Engine.KismetMathLibrary.BreakRotator\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, BlueprintInternalUseOnly, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta = (ScriptDefaultMake, ScriptDefaultBreak, HasNativeMake = \"/Script/Engine.KismetMathLibrary.MakeQuat\", HasNativeBreak = \"/Script/Engine.KismetMathLibrary.BreakQuat\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta=(HasNativeMake =\"/Script/Engine.KismetMathLibrary.MakeQuat\", HasNativeBreak=\"/Script/Engine.KismetMathLibrary.BreakQuat\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta=(HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeBox\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta=(HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeBox2D\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, IsCoreType, meta = (HasNativeMake = \"/Script/Engine.KismetMathLibrary.MakeBoxSphereBounds\", HasNativeBreak = \"/Script/Engine.KismetMathLibrary.BreakBoxSphereBounds\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, IsAlwaysAccessible, HasDefaults)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, BlueprintInternalUseOnly, HasDefaults, HasNoOpConstructor, IsCoreType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, HasDefaults, HasNoOpConstructor, IsCoreType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, HasDefaults, HasNoOpConstructor, IsCoreType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, BlueprintInternalUseOnly, IsAlwaysAccessible, HasDefaults, IsCoreType, meta = (ScriptDefaultMake, ScriptDefaultBreak, HasNativeMake = \"/Script/Engine.KismetMathLibrary.MakeTransform\", HasNativeBreak = \"/Script/Engine.KismetMathLibrary.BreakTransform\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, IsAlwaysAccessible, HasDefaults, IsCoreType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, IsCoreType, meta=(HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeTransform\", HasNativeBreak=\"/Script/Engine.KismetMathLibrary.BreakTransform\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, HasNoOpConstructor, meta = (HasNativeMake = \"/Script/Engine.KismetMathLibrary.MakeRandomStream\", HasNativeBreak = \"/Script/Engine.KismetMathLibrary.BreakRandomStream\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, meta=(HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeDateTime\", HasNativeBreak=\"/Script/Engine.KismetMathLibrary.BreakDateTime\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, IsAlwaysAccessible, HasDefaults)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, meta=(HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeFrameRate\", HasNativeBreak=\"/Script/Engine.KismetMathLibrary.BreakFrameRate\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, meta=(ScriptName=\"QualifiedTime\", HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeQualifiedFrameTime\", HasNativeBreak=\"/Script/Engine.KismetMathLibrary.BreakQualifiedFrameTime\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(immutable, noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, meta=(HasNativeMake=\"/Script/Engine.KismetMathLibrary.MakeTimespan\", HasNativeBreak=\"/Script/Engine.KismetMathLibrary.BreakTimespan\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, meta = (HasNativeMake = \"/Script/Engine.KismetSystemLibrary.MakeTopLevelAssetPath\", HasNativeBreak = \"/Script/Engine.KismetSystemLibrary.BreakTopLevelAssetPath\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, meta=(HasNativeMake=\"/Script/Engine.KismetSystemLibrary.MakeSoftObjectPath\", HasNativeBreak=\"/Script/Engine.KismetSystemLibrary.BreakSoftObjectPath\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, meta=(HasNativeMake=\"/Script/Engine.KismetSystemLibrary.MakeSoftClassPath\", HasNativeBreak=\"/Script/Engine.KismetSystemLibrary.BreakSoftClassPath\"))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Info,Warning,Error } ;)",
    "insertText": "USTRUCT(noexport)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() private: UPROPERTY(VisibleAnywhere, Category = \"PlatformInputDevice\")"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(BlueprintReadOnly, VisibleAnywhere, Category = \"PlatformInputDevice\")"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Invalid,Valid,NotValidated } ;)",
    "insertText": "USTRUCT(noexport, BlueprintType, IsAlwaysAccessible, HasDefaults, meta = (HasNativeMake = \"/Script/Engine.KismetSystemLibrary.MakeARFilter\", HasNativeBreak = \"/Script/Engine.KismetSystemLibrary.BreakARFilter\"))"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(abstract, noexport, MatchedSerializers)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UObject(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "UObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UObject(FVTableHelper& Helper)"
  },
  {
    "label": "UObject()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UObject()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(abstract, noexport, intrinsic, Config = Engine)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UField(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(noexport, intrinsic, Config = Engine)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UEnum(const FObjectInitializer& ObjectInitialzer)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(noexport, intrinsic, MatchedSerializers, Config = Engine)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UStruct(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UScriptStruct(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFunction(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(noexport, intrinsic, within=Package, Config = Engine)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UClass(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(abstract, noexport, intrinsic, interface, Config = Engine)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UInterface(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (} ; class IInterface {)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(noexport, intrinsic, abstract, transient, Config = Engine)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPackageMap(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UMetaData(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(noexport, intrinsic, abstract, Config = Engine)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UStructProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UEnumProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UBoolProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UNumericProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UIntProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UInt8Property(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UInt16Property(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UInt64Property(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UByteProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UUint16Property(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UUint32Property(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UUint64Property(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFloatProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UDoubleProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UObjectPropertyBase(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UObjectProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UClassProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: USoftObjectProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: USoftClassProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UWeakObjectProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ULazyObjectProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UInterfaceProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UDelegateProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UMulticastDelegateProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UMulticastInlineDelegateProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UMulticastSparseDelegateProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UNameProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UStrProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UTextProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UArrayProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: USetProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UMapProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = FilePath)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Path)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Template)"
  }
]