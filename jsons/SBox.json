[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBox"
  },
  {
    "label": "FBoxOneChildSlot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoxOneChildSlot"
  },
  {
    "label": "SLATE_DECLARE_WIDGET_API()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Layout / Margin . h \" # include \" Layout / Children . h \" # include \" Types / SlateStructs . h \" # include \" Widgets / SPanel . h \" class FArrangedChildren ; class FPaintArgs ; class FSlateWindowElementList ; class SBox : public SPanel {)",
    "insertText": "SLATE_DECLARE_WIDGET_API(SBox, SPanel, SLATE_API) public: SLATE_BEGIN_ARGS(SBox) : _HAlign(HAlign_Fill) , _VAlign(VAlign_Fill) , _Padding(0.0f) , _Content() , _WidthOverride(FOptionalSize()) , _HeightOverride(FOptionalSize()) , _MinDesiredWidth(FOptionalSize()) , _MinDesiredHeight(FOptionalSize()) , _MaxDesiredWidth(FOptionalSize()) , _MaxDesiredHeight(FOptionalSize())"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (_Visibility = EVisibility::SelfHitTestInvisible ; })",
    "insertText": "SLATE_ARGUMENT(EHorizontalAlignment, HAlign) SLATE_ARGUMENT(EVerticalAlignment, VAlign) SLATE_ATTRIBUTE(FMargin, Padding) SLATE_DEFAULT_SLOT(FArguments, Content) SLATE_ATTRIBUTE(FOptionalSize, WidthOverride) SLATE_ATTRIBUTE(FOptionalSize, HeightOverride) SLATE_ATTRIBUTE(FOptionalSize, MinDesiredWidth) SLATE_ATTRIBUTE(FOptionalSize, MinDesiredHeight) SLATE_ATTRIBUTE(FOptionalSize, MaxDesiredWidth) SLATE_ATTRIBUTE(FOptionalSize, MaxDesiredHeight) SLATE_ATTRIBUTE(FOptionalSize, MinAspectRatio) SLATE_ATTRIBUTE(FOptionalSize, MaxAspectRatio) FArguments& Padding(float Uniform)"
  },
  {
    "label": "FMargin()",
    "kind": "Method",
    "detail": "Function (_Padding =)",
    "insertText": "FMargin(Uniform)"
  },
  {
    "label": "FMargin()",
    "kind": "Method",
    "detail": "Function (_Padding =)",
    "insertText": "FMargin(Horizontal, Vertical)"
  },
  {
    "label": "FMargin()",
    "kind": "Method",
    "detail": "Function (_Padding =)",
    "insertText": "FMargin(Left, Top, Right, Bottom)"
  },
  {
    "label": "SBox()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SBox()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (FChildren*)",
    "insertText": "GetChildren()"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(const TSharedRef< SWidget >& InContent)"
  },
  {
    "label": "SetHAlign()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHAlign(EHorizontalAlignment HAlign)"
  },
  {
    "label": "SetVAlign()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVAlign(EVerticalAlignment VAlign)"
  },
  {
    "label": "SetPadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPadding(TAttribute<FMargin> InPadding)"
  },
  {
    "label": "SetWidthOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWidthOverride(TAttribute<FOptionalSize> InWidthOverride)"
  },
  {
    "label": "SetHeightOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeightOverride(TAttribute<FOptionalSize> InHeightOverride)"
  },
  {
    "label": "SetMinDesiredWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinDesiredWidth(TAttribute<FOptionalSize> InMinDesiredWidth)"
  },
  {
    "label": "SetMinDesiredHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinDesiredHeight(TAttribute<FOptionalSize> InMinDesiredHeight)"
  },
  {
    "label": "SetMaxDesiredWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxDesiredWidth(TAttribute<FOptionalSize> InMaxDesiredWidth)"
  },
  {
    "label": "SetMaxDesiredHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxDesiredHeight(TAttribute<FOptionalSize> InMaxDesiredHeight)"
  },
  {
    "label": "SetMinAspectRatio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinAspectRatio(TAttribute<FOptionalSize> InMinAspectRatio)"
  },
  {
    "label": "SetMaxAspectRatio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxAspectRatio(TAttribute<FOptionalSize> InMaxAspectRatio)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (protected : FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "ComputeDesiredWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ComputeDesiredWidth()"
  },
  {
    "label": "ComputeDesiredHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ComputeDesiredHeight()"
  }
]