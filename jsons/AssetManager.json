[
  {
    "label": "FPrimaryAssetTypeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimaryAssetTypeData"
  },
  {
    "label": "FPrimaryAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimaryAssetData"
  },
  {
    "label": "FPrimaryAssetRulesCustomOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimaryAssetRulesCustomOverride"
  },
  {
    "label": "ICookInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICookInfo"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "reference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "reference"
  },
  {
    "label": "UAssetManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetManager"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "it",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "it"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "AssetType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AssetType"
  },
  {
    "label": "AssetType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AssetType"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "IAssetRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetRegistry"
  },
  {
    "label": "UAssetManagerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetManagerSettings"
  },
  {
    "label": "FTimerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimerManager"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "or"
  },
  {
    "label": "UCurveTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveTable"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FAssetManagerEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetManagerEditorModule"
  },
  {
    "label": "IAssetRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetRegistry"
  },
  {
    "label": "FPendingChunkInstall",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingChunkInstall"
  },
  {
    "label": "IAssetRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetRegistry"
  },
  {
    "label": "UAssetManagerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetManagerSettings"
  },
  {
    "label": "FCompiledAssetManagerSearchRules",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompiledAssetManagerSearchRules"
  },
  {
    "label": "UAssetManager()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "UAssetManager()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "GetEncryptionKeyAssetTagName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetEncryptionKeyAssetTagName()"
  },
  {
    "label": "CreatePrimaryAssetIdFromChunkId()",
    "kind": "Method",
    "detail": "Function (FPrimaryAssetId)",
    "insertText": "CreatePrimaryAssetIdFromChunkId(int32 ChunkId)"
  },
  {
    "label": "ExtractChunkIdFromPrimaryAssetId()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ExtractChunkIdFromPrimaryAssetId(const FPrimaryAssetId& PrimaryAssetId)"
  },
  {
    "label": "ScanPathsForPrimaryAssets()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ScanPathsForPrimaryAssets(FPrimaryAssetType PrimaryAssetType, const TArray<FString>& Paths, UClass* BaseClass, bool bHasBlueprintClasses, bool bIsEditorOnly = false, bool bForceSynchronousScan = true)"
  },
  {
    "label": "ScanPathForPrimaryAssets()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ScanPathForPrimaryAssets(FPrimaryAssetType PrimaryAssetType, const FString& Path, UClass* BaseClass, bool bHasBlueprintClasses, bool bIsEditorOnly = false, bool bForceSynchronousScan = true)"
  },
  {
    "label": "PushBulkScanning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushBulkScanning()"
  },
  {
    "label": "PopBulkScanning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopBulkScanning()"
  },
  {
    "label": "RemoveScanPathsForPrimaryAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveScanPathsForPrimaryAssets(FPrimaryAssetType PrimaryAssetType, const TArray<FString>& Paths, UClass* BaseClass, bool bHasBlueprintClasses, bool bIsEditorOnly = false)"
  },
  {
    "label": "RemovePrimaryAssetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePrimaryAssetType(FPrimaryAssetType PrimaryAssetType)"
  },
  {
    "label": "StartBulkScanning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartBulkScanning()"
  },
  {
    "label": "StopBulkScanning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopBulkScanning()"
  },
  {
    "label": "AddDynamicAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDynamicAsset(const FPrimaryAssetId& PrimaryAssetId, const FSoftObjectPath& AssetPath, const FAssetBundleData& BundleData)"
  },
  {
    "label": "CallOrRegister_OnCompletedInitialScan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallOrRegister_OnCompletedInitialScan(FSimpleMulticastDelegate::FDelegate&& Delegate)"
  },
  {
    "label": "CallOrRegister_OnAssetManagerCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallOrRegister_OnAssetManagerCreated(FSimpleMulticastDelegate::FDelegate&& Delegate)"
  },
  {
    "label": "Register_OnAddedAssetSearchRoot()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "Register_OnAddedAssetSearchRoot(FOnAddedAssetSearchRoot::FDelegate&& Delegate)"
  },
  {
    "label": "Unregister_OnAddedAssetSearchRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unregister_OnAddedAssetSearchRoot(FDelegateHandle DelegateHandle)"
  },
  {
    "label": "AddAssetSearchRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAssetSearchRoot(const FString& NewRootPath)"
  },
  {
    "label": "UnloadPrimaryAssets()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "UnloadPrimaryAssets(const TArray<FPrimaryAssetId>& AssetsToUnload)"
  },
  {
    "label": "UnloadPrimaryAsset()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "UnloadPrimaryAsset(const FPrimaryAssetId& AssetToUnload)"
  },
  {
    "label": "UnloadPrimaryAssetsWithType()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "UnloadPrimaryAssetsWithType(FPrimaryAssetType PrimaryAssetType)"
  },
  {
    "label": "AcquireResourcesForAssetList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquireResourcesForAssetList(const TArray<FSoftObjectPath>& AssetList, FAssetManagerAcquireResourceDelegateEx CompleteDelegate, EChunkPriority::Type Priority = EChunkPriority::Immediate)"
  },
  {
    "label": "AcquireResourcesForAssetList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquireResourcesForAssetList(const TArray<FSoftObjectPath>& AssetList, FAssetManagerAcquireResourceDelegate CompleteDelegate, EChunkPriority::Type Priority = EChunkPriority::Immediate)"
  },
  {
    "label": "AcquireResourcesForPrimaryAssetList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquireResourcesForPrimaryAssetList(const TArray<FPrimaryAssetId>& PrimaryAssetList, FAssetManagerAcquireResourceDelegate CompleteDelegate, EChunkPriority::Type Priority = EChunkPriority::Immediate)"
  },
  {
    "label": "SetPrimaryAssetTypeRules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPrimaryAssetTypeRules(FPrimaryAssetType PrimaryAssetType, const FPrimaryAssetRules& Rules)"
  },
  {
    "label": "SetPrimaryAssetRules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPrimaryAssetRules(FPrimaryAssetId PrimaryAssetId, const FPrimaryAssetRules& Rules)"
  },
  {
    "label": "SetPrimaryAssetRulesExplicitly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPrimaryAssetRulesExplicitly(FPrimaryAssetId PrimaryAssetId, const FPrimaryAssetRulesExplicitOverride& ExplicitRules)"
  },
  {
    "label": "RegisterSpecificPrimaryAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterSpecificPrimaryAsset(const FPrimaryAssetId& PrimaryAssetId, const FAssetData& NewAssetData)"
  },
  {
    "label": "OnAssetRegistryAvailableAfterInitialization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnAssetRegistryAvailableAfterInitialization(FName InName, FAssetRegistryState& OutNewState)"
  },
  {
    "label": "GetContentRootPathFromPackageName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetContentRootPathFromPackageName(const FString& PackageName, FString& OutContentRootPath)"
  },
  {
    "label": "NormalizePackagePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NormalizePackagePath(FString& InOutPath, bool bIncludeFinalSlash)"
  },
  {
    "label": "GetNormalizedPackagePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNormalizedPackagePath(const FString& InPath, bool bIncludeFinalSlash)"
  },
  {
    "label": "DumpAssetTypeSummary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpAssetTypeSummary()"
  },
  {
    "label": "DumpLoadedAssetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpLoadedAssetState()"
  },
  {
    "label": "DumpBundlesForAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpBundlesForAsset(const TArray<FString>& Args)"
  },
  {
    "label": "DumpAssetRegistryInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpAssetRegistryInfo()"
  },
  {
    "label": "DumpReferencersForPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpReferencersForPackage(const TArray< FString >& PackageNames)"
  },
  {
    "label": "GetAllReferencersForPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllReferencersForPackage(TSet<FAssetData>& OutFoundAssets, const TArray<FName>& InPackageNames, int32 MaxDepth)"
  },
  {
    "label": "StartInitialLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartInitialLoading()"
  },
  {
    "label": "FinishInitialLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishInitialLoading()"
  },
  {
    "label": "GetCachedPrimaryAssetEncryptionKeyGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCachedPrimaryAssetEncryptionKeyGuid(FPrimaryAssetId InPrimaryAssetId, FGuid& OutGuid)"
  },
  {
    "label": "LoadRedirectorMaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadRedirectorMaps()"
  },
  {
    "label": "RefreshPrimaryAssetDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshPrimaryAssetDirectory(bool bForceRefresh = false)"
  },
  {
    "label": "InvalidatePrimaryAssetDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidatePrimaryAssetDirectory()"
  },
  {
    "label": "ApplyCustomPrimaryAssetRulesOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyCustomPrimaryAssetRulesOverride(const FPrimaryAssetRulesCustomOverride& CustomOverride)"
  },
  {
    "label": "ModifyCook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCook(TConstArrayView<const ITargetPlatform*> TargetPlatforms, TArray<FName>& PackagesToCook,\n\t\tTArray<FName>& PackagesToNeverCook)"
  },
  {
    "label": "ModifyDLCCook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyDLCCook(const FString& DLCName, TConstArrayView<const ITargetPlatform*> TargetPlatforms,\n\t\tTArray<FName>& PackagesToCook, TArray<FName>& PackagesToNeverCook)"
  },
  {
    "label": "ModifyCookReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCookReferences(FName PackageName, TArray<FName>& PackagesToCook)"
  },
  {
    "label": "ShouldCookForPlatform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCookForPlatform(const UPackage* Package, const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "FGuid()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGuid()"
  },
  {
    "label": "ReinitializeFromConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReinitializeFromConfig()"
  },
  {
    "label": "UpdateManagementDatabase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateManagementDatabase(bool bForceRefresh = false)"
  },
  {
    "label": "ApplyPrimaryAssetLabels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPrimaryAssetLabels()"
  },
  {
    "label": "RefreshAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshAssetData(UObject* ChangedObject)"
  },
  {
    "label": "TryUpdateCachedAssetData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryUpdateCachedAssetData(const FPrimaryAssetId& PrimaryAssetId, const FAssetData& NewAssetData, bool bAllowDuplicates)"
  },
  {
    "label": "RebuildObjectReferenceList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildObjectReferenceList()"
  },
  {
    "label": "OnObjectReferenceListInvalidated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectReferenceListInvalidated()"
  },
  {
    "label": "CallPreGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallPreGarbageCollect()"
  },
  {
    "label": "PreGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreGarbageCollect()"
  },
  {
    "label": "OnAssetStateChangeCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetStateChangeCompleted(FPrimaryAssetId PrimaryAssetId, TSharedPtr<FStreamableHandle> BoundHandle, FStreamableDelegate WrappedDelegate)"
  },
  {
    "label": "ScanPrimaryAssetTypesFromConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScanPrimaryAssetTypesFromConfig()"
  },
  {
    "label": "ScanPrimaryAssetRulesFromConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScanPrimaryAssetRulesFromConfig()"
  },
  {
    "label": "PostInitialAssetScan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitialAssetScan()"
  },
  {
    "label": "AcquireChunkList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquireChunkList(const TArray<int32>& ChunkList, FAssetManagerAcquireResourceDelegate CompleteDelegate, EChunkPriority::Type Priority, TSharedPtr<FStreamableHandle> StalledHandle)"
  },
  {
    "label": "OnChunkDownloaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChunkDownloaded(uint32 ChunkId, bool bSuccess)"
  },
  {
    "label": "LoadAssetListInternal()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FStreamableHandle>)",
    "insertText": "LoadAssetListInternal(TArray<FSoftObjectPath>&& AssetList, FStreamableDelegate&& DelegateToCall, TAsyncLoadPriority Priority, FString&& DebugName)"
  },
  {
    "label": "OnAssetRegistryFilesLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRegistryFilesLoaded()"
  },
  {
    "label": "OnInMemoryAssetCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInMemoryAssetCreated(UObject *Object)"
  },
  {
    "label": "OnInMemoryAssetDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInMemoryAssetDeleted(UObject *Object)"
  },
  {
    "label": "OnObjectPreSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectPreSave(UObject* Object, FObjectPreSaveContext SaveContext)"
  },
  {
    "label": "OnAssetRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRenamed(const FAssetData& NewData, const FString& OldPath)"
  },
  {
    "label": "OnAssetRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRemoved(const FAssetData& Data)"
  },
  {
    "label": "RemovePrimaryAssetId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePrimaryAssetId(const FPrimaryAssetId& PrimaryAssetId)"
  },
  {
    "label": "PreBeginPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreBeginPIE(bool bStartSimulate)"
  },
  {
    "label": "EndPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPIE(bool bStartSimulate)"
  },
  {
    "label": "InternalAddAssetScanPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalAddAssetScanPath(FPrimaryAssetTypeData& TypeData, const FString& AssetScanPath)"
  }
]