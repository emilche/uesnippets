[
  {
    "label": "FInstancedStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStruct"
  },
  {
    "label": "FMassEntityQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassEntityQuery"
  },
  {
    "label": "FMassExecutionContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassExecutionContext"
  },
  {
    "label": "FMassArchetypeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassArchetypeData"
  },
  {
    "label": "FMassCommandBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassCommandBuffer"
  },
  {
    "label": "FMassArchetypeEntityCollection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassArchetypeEntityCollection"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FMassDebugger",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassDebugger"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEntityStorageInitializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityStorageInitializer"
  },
  {
    "label": "MASSENTITY_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MASSENTITY_API"
  },
  {
    "label": "FScopedProcessing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedProcessing"
  },
  {
    "label": "doesn",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "doesn"
  },
  {
    "label": "FScopedCreationContextOperations",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedCreationContextOperations"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / GCObject . h \" # include \" MassEntityTypes . h \" # include \" MassProcessingTypes . h \" # include \" MassEntityQuery . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_5 # include \" StructUtils / InstancedStruct . h \" # include \" StructUtils / StructUtilsTypes . h \" # endif # include \" MassObserverManager . h \" # include \" Containers / MpscQueue . h \" # include \" MassRequirementAccessDetector . h \" # include \" Templates / FunctionFwd . h \" # include \" MassEntityManagerStorage . h \" struct FInstancedStruct ; struct FMassEntityQuery ; struct FMassExecutionContext ; struct FMassArchetypeData ; struct FMassCommandBuffer ; struct FMassArchetypeEntityCollection ; class FOutputDevice ; struct FMassDebugger ; enum class EMassFragmentAccess : uint8 ; enum class EForkProcessRole : uint8 ; namespace UE::Mass::Private { struct FEntityStorageInitializer ; } # define MASS_CONCURRENT_RESERVE 1 struct FMassEntityManager : public TSharedFromThis<FMassEntityManager>,public FGCObject { FMassEntityQuery ; FMassDebugger ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnNewArchetypeDelegate, const FMassArchetypeHandle&)"
  },
  {
    "label": "FScopedProcessing()",
    "kind": "Method",
    "detail": "Function (private : int32 NumReservedEntities = 1 ; public : struct FScopedProcessing {)",
    "insertText": "FScopedProcessing(std::atomic<int32>& InProcessingScopeCount) : ScopedProcessingCount(InProcessingScopeCount)"
  },
  {
    "label": "FScopedProcessing()",
    "kind": "Method",
    "detail": "Function (+ + ScopedProcessingCount ; } ~)",
    "insertText": "FScopedProcessing()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (- - ScopedProcessingCount ; } private : std::atomic<int32>& ScopedProcessingCount ; } ; using FStructInitializationCallback = TFunctionRef<)",
    "insertText": "void(void* Fragment, const UScriptStruct& FragmentType)"
  },
  {
    "label": "FMassEntityManager()",
    "kind": "Method",
    "detail": "Function (const FMassEntityHandle InvalidEntity ;)",
    "insertText": "FMassEntityManager(UObject* InOwner = nullptr)"
  },
  {
    "label": "FMassEntityManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMassEntityManager(const FMassEntityManager& Other)"
  },
  {
    "label": "FMassEntityManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMassEntityManager()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const FMassEntityManagerStorageInitParams& InitializationParams)"
  },
  {
    "label": "PostInitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitialize()"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "CreateArchetype()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "CreateArchetype(TConstArrayView<const UScriptStruct*> FragmentsAndTagsList, const FMassArchetypeCreationParams& CreationParams = FMassArchetypeCreationParams())"
  },
  {
    "label": "CreateArchetype()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "CreateArchetype(FMassArchetypeHandle SourceArchetype, TConstArrayView<const UScriptStruct*> FragmentsAndTagsList)"
  },
  {
    "label": "CreateArchetype()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "CreateArchetype(FMassArchetypeHandle SourceArchetype, TConstArrayView<const UScriptStruct*> FragmentsAndTagsList, const FMassArchetypeCreationParams& CreationParams)"
  },
  {
    "label": "CreateArchetype()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "CreateArchetype(const FMassArchetypeCompositionDescriptor& Composition, const FMassArchetypeCreationParams& CreationParams = FMassArchetypeCreationParams())"
  },
  {
    "label": "CreateArchetype()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "CreateArchetype(const TSharedPtr<FMassArchetypeData>& SourceArchetype, const FMassFragmentBitSet& InFragments)"
  },
  {
    "label": "CreateArchetype()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "CreateArchetype(const TSharedPtr<FMassArchetypeData>& SourceArchetype, const FMassFragmentBitSet& InFragments, const FMassArchetypeCreationParams& CreationParams)"
  },
  {
    "label": "GetOrCreateSuitableArchetype()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "GetOrCreateSuitableArchetype(const FMassArchetypeHandle& ArchetypeHandle , const FMassSharedFragmentBitSet& SharedFragmentBitSet , const FMassConstSharedFragmentBitSet& ConstSharedFragmentBitSet , const FMassArchetypeCreationParams& CreationParams = FMassArchetypeCreationParams())"
  },
  {
    "label": "GetArchetypeForEntity()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "GetArchetypeForEntity(FMassEntityHandle Entity)"
  },
  {
    "label": "GetArchetypeForEntityUnsafe()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "GetArchetypeForEntityUnsafe(FMassEntityHandle Entity)"
  },
  {
    "label": "ForEachArchetypeFragmentType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachArchetypeFragmentType(const FMassArchetypeHandle& ArchetypeHandle, TFunction< void(const UScriptStruct* )> Function)"
  },
  {
    "label": "DoEntityCompaction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoEntityCompaction(const double TimeAllowed)"
  },
  {
    "label": "CreateEntity()",
    "kind": "Method",
    "detail": "Function (FMassEntityHandle)",
    "insertText": "CreateEntity(const FMassArchetypeHandle& ArchetypeHandle, const FMassArchetypeSharedFragmentValues& SharedFragmentValues = {})"
  },
  {
    "label": "CreateEntity()",
    "kind": "Method",
    "detail": "Function (FMassEntityHandle)",
    "insertText": "CreateEntity(TConstArrayView<FInstancedStruct> FragmentInstanceList, const FMassArchetypeSharedFragmentValues& SharedFragmentValues = {}, const FMassArchetypeCreationParams& CreationParams = FMassArchetypeCreationParams())"
  },
  {
    "label": "FEntityCreationContext()",
    "kind": "Method",
    "detail": "Function (struct FEntityCreationContext { private :)",
    "insertText": "FEntityCreationContext()"
  },
  {
    "label": "FEntityCreationContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEntityCreationContext(FMassEntityManager& InManager, const TConstArrayView<FMassEntityHandle> InCreatedEntities = {})"
  },
  {
    "label": "FEntityCreationContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEntityCreationContext(FMassEntityManager& InManager, const TConstArrayView<FMassEntityHandle> InCreatedEntities, FMassArchetypeEntityCollection&& EntityCollection)"
  },
  {
    "label": "GetEntityCollections()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FMassArchetypeEntityCollection>)",
    "insertText": "GetEntityCollections()"
  },
  {
    "label": "GetSpawnedNum()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSpawnedNum()"
  },
  {
    "label": "MarkDirty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MarkDirty()"
  },
  {
    "label": "AppendEntities()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AppendEntities(const TConstArrayView<FMassEntityHandle> EntitiesToAppend)"
  },
  {
    "label": "AppendEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendEntities(const TConstArrayView<FMassEntityHandle> EntitiesToAppend, FMassArchetypeEntityCollection&& EntityCollection)"
  },
  {
    "label": "DebugAreEntityCollectionsUpToDate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DebugAreEntityCollectionsUpToDate()"
  },
  {
    "label": "ForceUpdateCurrentThreadID()",
    "kind": "Method",
    "detail": "Function (private : FMassEntityManager ; void)",
    "insertText": "ForceUpdateCurrentThreadID()"
  },
  {
    "label": "GetOrMakeCreationContext()",
    "kind": "Method",
    "detail": "Function (uint32 OwnerThreadId ; TArray<FMassArchetypeEntityCollection> EntityCollections ; TArray<FMassEntityHandle> CreatedEntities ; FMassArchetypeEntityCollection::EDuplicatesHandling CollectionCreationDuplicatesHandling = FMassArchetypeEntityCollection::EDuplicatesHandling::NoDuplicates ; TSharedPtr<FMassEntityManager> Manager ; } ; TSharedRef<FEntityCreationContext>)",
    "insertText": "GetOrMakeCreationContext()"
  },
  {
    "label": "BatchCreateReservedEntities()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FEntityCreationContext>)",
    "insertText": "BatchCreateReservedEntities(const FMassArchetypeHandle& ArchetypeHandle, const FMassArchetypeSharedFragmentValues& SharedFragmentValues, TConstArrayView<FMassEntityHandle> ReservedEntities)"
  },
  {
    "label": "BatchCreateEntities()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FEntityCreationContext>)",
    "insertText": "BatchCreateEntities(const FMassArchetypeHandle& ArchetypeHandle, const FMassArchetypeSharedFragmentValues& SharedFragmentValues, const int32 Count, TArray<FMassEntityHandle>& InOutEntities)"
  },
  {
    "label": "DestroyEntity()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DestroyEntity(FMassEntityHandle Entity)"
  },
  {
    "label": "ReserveEntity()",
    "kind": "Method",
    "detail": "Function (FMassEntityHandle)",
    "insertText": "ReserveEntity()"
  },
  {
    "label": "BuildEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildEntity(FMassEntityHandle Entity, const FMassArchetypeHandle& ArchetypeHandle, const FMassArchetypeSharedFragmentValues& SharedFragmentValues = {})"
  },
  {
    "label": "BuildEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildEntity(FMassEntityHandle Entity, TConstArrayView<FInstancedStruct> FragmentInstanceList, const FMassArchetypeSharedFragmentValues& SharedFragmentValues = {})"
  },
  {
    "label": "ReleaseReservedEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseReservedEntity(FMassEntityHandle Entity)"
  },
  {
    "label": "BatchDestroyEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchDestroyEntities(TConstArrayView<FMassEntityHandle> InEntities)"
  },
  {
    "label": "BatchDestroyEntityChunks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchDestroyEntityChunks(const FMassArchetypeEntityCollection& Collection)"
  },
  {
    "label": "BatchDestroyEntityChunks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchDestroyEntityChunks(TConstArrayView<FMassArchetypeEntityCollection> Collections)"
  },
  {
    "label": "AddFragmentToEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFragmentToEntity(FMassEntityHandle Entity, const UScriptStruct* FragmentType)"
  },
  {
    "label": "AddFragmentToEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFragmentToEntity(FMassEntityHandle Entity, const UScriptStruct* FragmentType, const FStructInitializationCallback& Initializer)"
  },
  {
    "label": "AddFragmentListToEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFragmentListToEntity(FMassEntityHandle Entity, TConstArrayView<const UScriptStruct*> FragmentList)"
  },
  {
    "label": "AddFragmentInstanceListToEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFragmentInstanceListToEntity(FMassEntityHandle Entity, TConstArrayView<FInstancedStruct> FragmentInstanceList)"
  },
  {
    "label": "RemoveFragmentFromEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFragmentFromEntity(FMassEntityHandle Entity, const UScriptStruct* FragmentType)"
  },
  {
    "label": "RemoveFragmentListFromEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFragmentListFromEntity(FMassEntityHandle Entity, TConstArrayView<const UScriptStruct*> FragmentList)"
  },
  {
    "label": "AddTagToEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTagToEntity(FMassEntityHandle Entity, const UScriptStruct* TagType)"
  },
  {
    "label": "RemoveTagFromEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTagFromEntity(FMassEntityHandle Entity, const UScriptStruct* TagType)"
  },
  {
    "label": "SwapTagsForEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapTagsForEntity(FMassEntityHandle Entity, const UScriptStruct* FromFragmentType, const UScriptStruct* ToFragmentType)"
  },
  {
    "label": "AddConstSharedFragmentToEntity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddConstSharedFragmentToEntity(const FMassEntityHandle Entity, const FConstSharedStruct& InConstSharedFragment)"
  },
  {
    "label": "RemoveConstSharedFragmentFromEntity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveConstSharedFragmentFromEntity(const FMassEntityHandle Entity, const UScriptStruct& ConstSharedFragmentType)"
  },
  {
    "label": "BatchReserveEntities()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FMassEntityHandle>)",
    "insertText": "BatchReserveEntities(const int32 Count, TArray<FMassEntityHandle>& InOutEntities)"
  },
  {
    "label": "BatchReserveEntities()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "BatchReserveEntities(TArrayView<FMassEntityHandle> InOutEntities)"
  },
  {
    "label": "BatchBuildEntities()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FEntityCreationContext>)",
    "insertText": "BatchBuildEntities(const FMassArchetypeEntityCollectionWithPayload& EncodedEntitiesWithPayload, const FMassFragmentBitSet& FragmentsAffected , const FMassArchetypeSharedFragmentValues& SharedFragmentValues = {}, const FMassArchetypeCreationParams& CreationParams = FMassArchetypeCreationParams())"
  },
  {
    "label": "BatchBuildEntities()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FEntityCreationContext>)",
    "insertText": "BatchBuildEntities(const FMassArchetypeEntityCollectionWithPayload& EncodedEntitiesWithPayload, FMassArchetypeCompositionDescriptor&& Composition , const FMassArchetypeSharedFragmentValues& SharedFragmentValues = {}, const FMassArchetypeCreationParams& CreationParams = FMassArchetypeCreationParams())"
  },
  {
    "label": "BatchChangeTagsForEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchChangeTagsForEntities(TConstArrayView<FMassArchetypeEntityCollection> EntityCollections, const FMassTagBitSet& TagsToAdd, const FMassTagBitSet& TagsToRemove)"
  },
  {
    "label": "BatchChangeFragmentCompositionForEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchChangeFragmentCompositionForEntities(TConstArrayView<FMassArchetypeEntityCollection> EntityCollections, const FMassFragmentBitSet& FragmentsToAdd, const FMassFragmentBitSet& FragmentsToRemove)"
  },
  {
    "label": "BatchAddFragmentInstancesForEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchAddFragmentInstancesForEntities(TConstArrayView<FMassArchetypeEntityCollectionWithPayload> EntityCollections, const FMassFragmentBitSet& FragmentsAffected)"
  },
  {
    "label": "BatchAddSharedFragmentsForEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchAddSharedFragmentsForEntities(TConstArrayView<FMassArchetypeEntityCollection> EntityCollections, const FMassArchetypeSharedFragmentValues& AddedFragmentValues)"
  },
  {
    "label": "AddCompositionToEntity_GetDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCompositionToEntity_GetDelta(FMassEntityHandle Entity, FMassArchetypeCompositionDescriptor& InOutDescriptor)"
  },
  {
    "label": "RemoveCompositionFromEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCompositionFromEntity(FMassEntityHandle Entity, const FMassArchetypeCompositionDescriptor& InDescriptor)"
  },
  {
    "label": "GetArchetypeComposition()",
    "kind": "Method",
    "detail": "Function (const FMassArchetypeCompositionDescriptor&)",
    "insertText": "GetArchetypeComposition(const FMassArchetypeHandle& ArchetypeHandle)"
  },
  {
    "label": "MoveEntityToAnotherArchetype()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveEntityToAnotherArchetype(FMassEntityHandle Entity, FMassArchetypeHandle NewArchetypeHandle)"
  },
  {
    "label": "SetEntityFragmentsValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEntityFragmentsValues(FMassEntityHandle Entity, TArrayView<const FInstancedStruct> FragmentInstanceList)"
  },
  {
    "label": "BatchSetEntityFragmentsValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchSetEntityFragmentsValues(const FMassArchetypeEntityCollection& SparseEntities, TArrayView<const FInstancedStruct> FragmentInstanceList)"
  },
  {
    "label": "BatchSetEntityFragmentsValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchSetEntityFragmentsValues(TConstArrayView<FMassArchetypeEntityCollection> EntityCollections, TArrayView<const FInstancedStruct> FragmentInstanceList)"
  },
  {
    "label": "IsEntityActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEntityActive(FMassEntityHandle Entity)"
  },
  {
    "label": "IsEntityValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEntityValid(FMassEntityHandle Entity)"
  },
  {
    "label": "IsEntityBuilt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEntityBuilt(FMassEntityHandle Entity)"
  },
  {
    "label": "CheckIfEntityIsValid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckIfEntityIsValid(FMassEntityHandle Entity)"
  },
  {
    "label": "CheckIfEntityIsActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckIfEntityIsActive(FMassEntityHandle Entity)"
  },
  {
    "label": "GetFragmentDataChecked()",
    "kind": "Method",
    "detail": "Function (template<FragmentType> FragmentType&)",
    "insertText": "GetFragmentDataChecked(FMassEntityHandle Entity)"
  },
  {
    "label": "GetFragmentDataPtr()",
    "kind": "Method",
    "detail": "Function (} template<FragmentType> FragmentType*)",
    "insertText": "GetFragmentDataPtr(FMassEntityHandle Entity)"
  },
  {
    "label": "GetFragmentDataStruct()",
    "kind": "Method",
    "detail": "Function (} FStructView)",
    "insertText": "GetFragmentDataStruct(FMassEntityHandle Entity, const UScriptStruct* FragmentType)"
  },
  {
    "label": "GetConstSharedFragmentDataPtr()",
    "kind": "Method",
    "detail": "Function (} template<ConstSharedFragmentType> ConstSharedFragmentType*)",
    "insertText": "GetConstSharedFragmentDataPtr(FMassEntityHandle Entity)"
  },
  {
    "label": "InternalGetConstSharedFragmentPtr()",
    "kind": "Method",
    "detail": "Function (const FConstSharedStruct* ConstSharedStruct =)",
    "insertText": "InternalGetConstSharedFragmentPtr(Entity, ConstSharedFragmentType::StaticStruct())"
  },
  {
    "label": "GetConstSharedFragmentDataChecked()",
    "kind": "Method",
    "detail": "Function (} template<ConstSharedFragmentType> ConstSharedFragmentType&)",
    "insertText": "GetConstSharedFragmentDataChecked(FMassEntityHandle Entity)"
  },
  {
    "label": "ConstSharedFragmentType()",
    "kind": "Method",
    "detail": "Function (ConstSharedFragmentType* TypePtr = GetConstSharedFragmentDataPtr<)",
    "insertText": "ConstSharedFragmentType(Entity)"
  },
  {
    "label": "InternalGetConstSharedFragmentPtr()",
    "kind": "Method",
    "detail": "Function (const FConstSharedStruct* ConstSharedStruct =)",
    "insertText": "InternalGetConstSharedFragmentPtr(Entity, ConstSharedFragmentType)"
  },
  {
    "label": "GetSharedFragmentsOfType()",
    "kind": "Method",
    "detail": "Function (} template<SharedFragmentType> TConstArrayView<FSharedStruct>)",
    "insertText": "GetSharedFragmentsOfType()"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (TArray<FSharedStruct>* InstancesOfType = SharedFragmentsTypeMap .)",
    "insertText": "Find(SharedFragmentType::StaticStruct())"
  },
  {
    "label": "GetSharedFragmentDataPtr()",
    "kind": "Method",
    "detail": "Function (} template<SharedFragmentType> SharedFragmentType*)",
    "insertText": "GetSharedFragmentDataPtr(FMassEntityHandle Entity)"
  },
  {
    "label": "InternalGetSharedFragmentPtr()",
    "kind": "Method",
    "detail": "Function (const FSharedStruct* FragmentPtr =)",
    "insertText": "InternalGetSharedFragmentPtr(Entity, SharedFragmentType::StaticStruct())"
  },
  {
    "label": "GetSharedFragmentDataChecked()",
    "kind": "Method",
    "detail": "Function (} template<SharedFragmentType> SharedFragmentType&)",
    "insertText": "GetSharedFragmentDataChecked(FMassEntityHandle Entity)"
  },
  {
    "label": "SharedFragmentType()",
    "kind": "Method",
    "detail": "Function (SharedFragmentType* TypePtr = GetSharedFragmentDataPtr<)",
    "insertText": "SharedFragmentType(Entity)"
  },
  {
    "label": "InternalGetSharedFragmentPtr()",
    "kind": "Method",
    "detail": "Function (const FSharedStruct* FragmentPtr =)",
    "insertText": "InternalGetSharedFragmentPtr(Entity, SharedFragmentType)"
  },
  {
    "label": "GetArchetypeDataVersion()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetArchetypeDataVersion()"
  },
  {
    "label": "NewProcessingScope()",
    "kind": "Method",
    "detail": "Function (FScopedProcessing)",
    "insertText": "NewProcessingScope()"
  },
  {
    "label": "IsProcessing()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsProcessing()"
  },
  {
    "label": "FlushCommands()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FlushCommands(TSharedPtr<FMassCommandBuffer>& InCommandBuffer)"
  },
  {
    "label": "FlushCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCommands()"
  },
  {
    "label": "AppendCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendCommands(TSharedPtr<FMassCommandBuffer>& InOutCommandBuffer)"
  },
  {
    "label": "FindOrAddByHash()",
    "kind": "Method",
    "detail": "Function (int32& Index = ConstSharedFragmentsMap .)",
    "insertText": "FindOrAddByHash(Hash, Hash, INDEX_NONE)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Index = ConstSharedFragments .)",
    "insertText": "Add(FConstSharedStruct::Make(Fragment))"
  },
  {
    "label": "GetOrCreateSharedFragmentByHash()",
    "kind": "Method",
    "detail": "Function (} return ConstSharedFragments [ Index ] ; } private : template<T> const FSharedStruct&)",
    "insertText": "GetOrCreateSharedFragmentByHash(const uint32 Hash, const T& Fragment)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Index = SharedFragments .)",
    "insertText": "Add(FSharedStruct::Make(Fragment))"
  },
  {
    "label": "FindOrAdd()",
    "kind": "Method",
    "detail": "Function (TArray<FSharedStruct>& InstancesOfType = SharedFragmentsTypeMap .)",
    "insertText": "FindOrAdd(T::StaticStruct(), {})"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (InstancesOfType .)",
    "insertText": "Add(SharedFragments[Index])"
  },
  {
    "label": "GetOrCreateConstSharedFragmentByHash()",
    "kind": "Method",
    "detail": "Function (} return SharedFragments [ Index ] ; } const FConstSharedStruct&)",
    "insertText": "GetOrCreateConstSharedFragmentByHash(const uint32 Hash, const UScriptStruct* InScriptStruct, const uint8* InStructMemory)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Index = ConstSharedFragments .)",
    "insertText": "Add(FConstSharedStruct::Make(InScriptStruct, InStructMemory))"
  },
  {
    "label": "GetOrCreateSharedFragmentByHash()",
    "kind": "Method",
    "detail": "Function (} return ConstSharedFragments [ Index ] ; } const FSharedStruct&)",
    "insertText": "GetOrCreateSharedFragmentByHash(const uint32 Hash, const UScriptStruct* InScriptStruct, const uint8* InStructMemory)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Index = SharedFragments .)",
    "insertText": "Add(FSharedStruct::Make(InScriptStruct, InStructMemory))"
  },
  {
    "label": "FindOrAdd()",
    "kind": "Method",
    "detail": "Function (TArray<FSharedStruct>& InstancesOfType = SharedFragmentsTypeMap .)",
    "insertText": "FindOrAdd(InScriptStruct, {})"
  },
  {
    "label": "GetOrCreateConstSharedFragmentByHash()",
    "kind": "Method",
    "detail": "Function (} return SharedFragments [ Index ] ; } template<T,. . . TArgs> const FConstSharedStruct&)",
    "insertText": "GetOrCreateConstSharedFragmentByHash(const uint32 Hash, TArgs&&... InArgs)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Index = ConstSharedFragments .)",
    "insertText": "Add(FConstSharedStruct::Make<T>(Forward<TArgs>(InArgs)...))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Index = SharedFragments .)",
    "insertText": "Add(FSharedStruct::Make<T>(Forward<TArgs>(InArgs)...))"
  },
  {
    "label": "GetOrCreateConstSharedFragment()",
    "kind": "Method",
    "detail": "Function (} return SharedFragments [ Index ] ; } template<T> const FConstSharedStruct&)",
    "insertText": "GetOrCreateConstSharedFragment(const T& Fragment)"
  },
  {
    "label": "GetStructCrc32()",
    "kind": "Method",
    "detail": "Function (const uint32 Hash = UE::)",
    "insertText": "GetStructCrc32(FConstStructView::Make(Fragment))"
  },
  {
    "label": "GetOrCreateConstSharedFragmentByHash()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GetOrCreateConstSharedFragmentByHash(Hash, Fragment)"
  },
  {
    "label": "GetOrCreateSharedFragment()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } template<T> const FSharedStruct&)",
    "insertText": "GetOrCreateSharedFragment(const T& Fragment)"
  },
  {
    "label": "GetOrCreateConstSharedFragment()",
    "kind": "Method",
    "detail": "Function (} template<T,. . . TArgs> const FConstSharedStruct&)",
    "insertText": "GetOrCreateConstSharedFragment(TArgs&&... InArgs)"
  },
  {
    "label": "Struct()",
    "kind": "Method",
    "detail": "Function (T)",
    "insertText": "Struct(Forward<TArgs>(InArgs)...)"
  },
  {
    "label": "GetStructCrc32()",
    "kind": "Method",
    "detail": "Function (const uint32 Hash = UE::)",
    "insertText": "GetStructCrc32(FConstStructView::Make(Struct))"
  },
  {
    "label": "GetOrCreateConstSharedFragmentByHash()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GetOrCreateConstSharedFragmentByHash(Hash, MoveTemp(Struct))"
  },
  {
    "label": "GetOrCreateSharedFragment()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } template<T,. . . TArgs> const FSharedStruct&)",
    "insertText": "GetOrCreateSharedFragment(TArgs&&... InArgs)"
  },
  {
    "label": "GetOrCreateConstSharedFragment()",
    "kind": "Method",
    "detail": "Function (} const FConstSharedStruct&)",
    "insertText": "GetOrCreateConstSharedFragment(const UScriptStruct& InScriptStruct, const uint8* InStructMemory)"
  },
  {
    "label": "GetStructCrc32()",
    "kind": "Method",
    "detail": "Function (const uint32 Hash = UE::)",
    "insertText": "GetStructCrc32(InScriptStruct, InStructMemory)"
  },
  {
    "label": "GetOrCreateSharedFragment()",
    "kind": "Method",
    "detail": "Function (} const FSharedStruct&)",
    "insertText": "GetOrCreateSharedFragment(const UScriptStruct& InScriptStruct, const uint8* InStructMemory)"
  },
  {
    "label": "GetOrCreateConstSharedFragment()",
    "kind": "Method",
    "detail": "Function (} template<T,. . . TArgs> const FConstSharedStruct&)",
    "insertText": "GetOrCreateConstSharedFragment(const FConstStructView HashingHelperStruct, TArgs&&... InArgs)"
  },
  {
    "label": "Fragment()",
    "kind": "Method",
    "detail": "Function (T)",
    "insertText": "Fragment(Forward<TArgs>(InArgs)...)"
  },
  {
    "label": "GetStructCrc32()",
    "kind": "Method",
    "detail": "Function (const uint32 Hash = UE::)",
    "insertText": "GetStructCrc32(HashingHelperStruct)"
  },
  {
    "label": "GetOrCreateConstSharedFragmentByHash()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GetOrCreateConstSharedFragmentByHash(Hash, MoveTemp(Fragment))"
  },
  {
    "label": "GetOrCreateSharedFragment()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } template<T,. . . TArgs> const FSharedStruct&)",
    "insertText": "GetOrCreateSharedFragment(const FConstStructView HashingHelperStruct, TArgs&&... InArgs)"
  },
  {
    "label": "ForEachSharedFragment()",
    "kind": "Method",
    "detail": "Function (} template<T> void)",
    "insertText": "ForEachSharedFragment(TFunctionRef< void(T& ) > ExecuteFunction)"
  },
  {
    "label": "ExecuteFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteFunction(SharedStruct.Get<T>())"
  },
  {
    "label": "ForEachSharedFragmentConditional()",
    "kind": "Method",
    "detail": "Function (} } } template<T> void)",
    "insertText": "ForEachSharedFragmentConditional(TFunctionRef< bool(T& ) > ConditionFunction, TFunctionRef< void(T& ) > ExecuteFunction)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T& StructInstanceRef = SharedStruct . Get<)",
    "insertText": "T()"
  },
  {
    "label": "ExecuteFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteFunction(StructInstanceRef)"
  },
  {
    "label": "GetObserverManager()",
    "kind": "Method",
    "detail": "Function (} } } } FMassObserverManager&)",
    "insertText": "GetObserverManager()"
  },
  {
    "label": "GetOwner()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetOwner()"
  },
  {
    "label": "SetDebugName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetDebugName(const FString& NewDebugGame)"
  },
  {
    "label": "DebugPrintArchetypes()",
    "kind": "Method",
    "detail": "Function (# if WITH_MASSENTITY_DEBUG void)",
    "insertText": "DebugPrintArchetypes(FOutputDevice& Ar, const bool bIncludeEmpty = true)"
  },
  {
    "label": "DebugGetArchetypesStringDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugGetArchetypesStringDetails(FOutputDevice& Ar, const bool bIncludeEmpty = true)"
  },
  {
    "label": "DebugGetArchetypeFragmentTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugGetArchetypeFragmentTypes(const FMassArchetypeHandle& Archetype, TArray<const UScriptStruct*>& InOutFragmentList)"
  },
  {
    "label": "DebugGetArchetypeEntitiesCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DebugGetArchetypeEntitiesCount(const FMassArchetypeHandle& Archetype)"
  },
  {
    "label": "DebugGetArchetypeEntitiesCountPerChunk()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DebugGetArchetypeEntitiesCountPerChunk(const FMassArchetypeHandle& Archetype)"
  },
  {
    "label": "DebugGetEntityCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DebugGetEntityCount()"
  },
  {
    "label": "DebugGetArchetypesCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DebugGetArchetypesCount()"
  },
  {
    "label": "DebugRemoveAllEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugRemoveAllEntities()"
  },
  {
    "label": "DebugForceArchetypeDataVersionBump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugForceArchetypeDataVersionBump()"
  },
  {
    "label": "DebugGetArchetypeStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugGetArchetypeStrings(const FMassArchetypeHandle& Archetype, TArray<FName>& OutFragmentNames, TArray<FName>& OutTagNames)"
  },
  {
    "label": "DebugGetEntityIndexHandle()",
    "kind": "Method",
    "detail": "Function (FMassEntityHandle)",
    "insertText": "DebugGetEntityIndexHandle(const int32 EntityIndex)"
  },
  {
    "label": "DebugGetName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "DebugGetName()"
  },
  {
    "label": "GetRequirementAccessDetector()",
    "kind": "Method",
    "detail": "Function (FMassRequirementAccessDetector&)",
    "insertText": "GetRequirementAccessDetector()"
  },
  {
    "label": "DebugGetEntityStorageInterface()",
    "kind": "Method",
    "detail": "Function (UE::Mass::IEntityStorageInterface&)",
    "insertText": "DebugGetEntityStorageInterface()"
  },
  {
    "label": "OnPostFork()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "OnPostFork(EForkProcessRole Role)"
  },
  {
    "label": "GetMatchingArchetypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMatchingArchetypes(const FMassFragmentRequirements& Requirements, TArray<FMassArchetypeHandle>& OutValidArchetypes, const uint32 FromArchetypeDataVersion)"
  },
  {
    "label": "InternalCreateSimilarArchetype()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "InternalCreateSimilarArchetype(const TSharedPtr<FMassArchetypeData>& SourceArchetype, const FMassTagBitSet& OverrideTags)"
  },
  {
    "label": "InternalCreateSimilarArchetype()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "InternalCreateSimilarArchetype(const TSharedPtr<FMassArchetypeData>& SourceArchetype, const FMassFragmentBitSet& OverrideFragments)"
  },
  {
    "label": "InternalCreateSimilarArchetype()",
    "kind": "Method",
    "detail": "Function (FMassArchetypeHandle)",
    "insertText": "InternalCreateSimilarArchetype(const FMassArchetypeData& SourceArchetypeRef, FMassArchetypeCompositionDescriptor&& NewComposition)"
  },
  {
    "label": "InternalAppendFragmentsAndTagsToArchetypeCompositionDescriptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalAppendFragmentsAndTagsToArchetypeCompositionDescriptor(FMassArchetypeCompositionDescriptor& InOutComposition, TConstArrayView<const UScriptStruct*> FragmentsAndTagsList)"
  },
  {
    "label": "InternalBuildEntity()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InternalBuildEntity(FMassEntityHandle Entity, const FMassArchetypeHandle& ArchetypeHandle, const FMassArchetypeSharedFragmentValues& SharedFragmentValues)"
  },
  {
    "label": "InternalReleaseEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalReleaseEntity(FMassEntityHandle Entity)"
  },
  {
    "label": "InternalAddFragmentListToEntityChecked()",
    "kind": "Method",
    "detail": "Function (FMassFragmentBitSet)",
    "insertText": "InternalAddFragmentListToEntityChecked(FMassEntityHandle Entity, const FMassFragmentBitSet& InFragments)"
  },
  {
    "label": "InternalAddFragmentListToEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalAddFragmentListToEntity(FMassEntityHandle Entity, const FMassFragmentBitSet& InFragments)"
  },
  {
    "label": "InternalGetFragmentDataChecked()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "InternalGetFragmentDataChecked(FMassEntityHandle Entity, const UScriptStruct* FragmentType)"
  },
  {
    "label": "InternalGetFragmentDataPtr()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "InternalGetFragmentDataPtr(FMassEntityHandle Entity, const UScriptStruct* FragmentType)"
  },
  {
    "label": "InternalGetConstSharedFragmentPtr()",
    "kind": "Method",
    "detail": "Function (const FConstSharedStruct*)",
    "insertText": "InternalGetConstSharedFragmentPtr(FMassEntityHandle Entity, const UScriptStruct* ConstSharedFragmentType)"
  },
  {
    "label": "InternalGetSharedFragmentPtr()",
    "kind": "Method",
    "detail": "Function (const FSharedStruct*)",
    "insertText": "InternalGetSharedFragmentPtr(FMassEntityHandle Entity, const UScriptStruct* SharedFragmentType)"
  },
  {
    "label": "InternalBatchCreateReservedEntities()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FEntityCreationContext>)",
    "insertText": "InternalBatchCreateReservedEntities(const FMassArchetypeHandle& ArchetypeHandle, const FMassArchetypeSharedFragmentValues& SharedFragmentValues, TConstArrayView<FMassEntityHandle> ReservedEntities)"
  },
  {
    "label": "GetEntityStorageInterface()",
    "kind": "Method",
    "detail": "Function (# if MASS_CONCURRENT_RESERVE UE::Mass::IEntityStorageInterface&)",
    "insertText": "GetEntityStorageInterface()"
  },
  {
    "label": "GetOrMakeCreationContext()",
    "kind": "Method",
    "detail": "Function (# endif TSharedRef<FEntityCreationContext>)",
    "insertText": "GetOrMakeCreationContext(TConstArrayView<FMassEntityHandle> ReservedEntities, FMassArchetypeEntityCollection&& EntityCollection)"
  },
  {
    "label": "IsDuringEntityCreation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDuringEntityCreation()"
  },
  {
    "label": "FScopedCreationContextOperations()",
    "kind": "Method",
    "detail": "Function (} struct FScopedCreationContextOperations {)",
    "insertText": "FScopedCreationContextOperations(FMassEntityManager& InManager) : bIsDuringEntityCreation(InManager.IsDuringEntityCreation()) , Manager(InManager)"
  },
  {
    "label": "FScopedCreationContextOperations()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FScopedCreationContextOperations()"
  },
  {
    "label": "DirtyCreationContext()",
    "kind": "Method",
    "detail": "Function (Manager .)",
    "insertText": "DirtyCreationContext()"
  },
  {
    "label": "IsAllowedToTriggerObservers()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "IsAllowedToTriggerObservers()"
  },
  {
    "label": "DebugDoCollectionsOverlapCreationContext()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "DebugDoCollectionsOverlapCreationContext(TConstArrayView<FMassArchetypeEntityCollection> EntityCollections)"
  }
]