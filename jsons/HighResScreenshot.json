[
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "IImageWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IImageWrapper"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "FImageWriteTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImageWriteTask"
  },
  {
    "label": "IImageWriteQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IImageWriteQueue"
  },
  {
    "label": "FHighResScreenshotConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHighResScreenshotConfig"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class FSceneViewport ; class IImageWrapper ; class UMaterial ; class FImageWriteTask ; class IImageWriteQueue ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogHighResScreenshot, Log, All)"
  },
  {
    "label": "FHighResScreenshotConfig()",
    "kind": "Method",
    "detail": "Function (struct FHighResScreenshotConfig { const float MinResolutionMultipler ; const float MaxResolutionMultipler ; FIntRect UnscaledCaptureRegion ; FIntRect CaptureRegion ; float ResolutionMultiplier ; float ResolutionMultiplierScale ; bool bMaskEnabled ; bool bDateTimeBasedNaming ; bool bDumpBufferVisualizationTargets ; TWeakPtr<FSceneViewport> TargetViewport ; bool bDisplayCaptureRegion ; bool bCaptureHDR ; bool bForce128BitRendering ; FString FilenameOverride ; UMaterial* HighResScreenshotMaterial ; UMaterial* HighResScreenshotMaskMaterial ; UMaterial* HighResScreenshotCaptureRegionMaterial ; IImageWriteQueue* ImageWriteQueue ;)",
    "insertText": "FHighResScreenshotConfig()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "PopulateImageTaskParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateImageTaskParams(FImageWriteTask& InOutTask)"
  },
  {
    "label": "ChangeViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeViewport(TWeakPtr<FSceneViewport> InViewport)"
  },
  {
    "label": "ParseConsoleCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseConsoleCommand(const FString& InCmd, FOutputDevice& Ar)"
  },
  {
    "label": "MergeMaskIntoAlpha()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MergeMaskIntoAlpha(TArray<FColor>& InBitmap, const FIntRect& ViewRect)"
  },
  {
    "label": "MergeMaskIntoAlpha()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MergeMaskIntoAlpha(TArray<FLinearColor>& InBitmap, const FIntRect& ViewRect)"
  },
  {
    "label": "SetHDRCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHDRCapture(bool bCaptureHDRIN)"
  },
  {
    "label": "SetForce128BitRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForce128BitRendering(bool bForce)"
  },
  {
    "label": "SetResolution()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetResolution(uint32 ResolutionX, uint32 ResolutionY, float ResolutionScale = 1.0f)"
  },
  {
    "label": "SetFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilename(FString Filename)"
  },
  {
    "label": "SetMaskEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaskEnabled(bool bShouldMaskBeEnabled)"
  },
  {
    "label": "GetHighResScreenshotConfig()",
    "kind": "Method",
    "detail": "Function (} ; FHighResScreenshotConfig&)",
    "insertText": "GetHighResScreenshotConfig()"
  }
]