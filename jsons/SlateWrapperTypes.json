[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "USlateAccessibleWidgetData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USlateAccessibleWidgetData"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FEventReply",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEventReply"
  },
  {
    "label": "FSlateChildSize",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateChildSize"
  },
  {
    "label": "BIND_UOBJECT_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Attribute . h \" # include \" Input / Reply . h \" # include \" Widgets / Input / IVirtualKeyboardEntry . h \" # include \" SlateWrapperTypes . generated . h \" # define)",
    "insertText": "BIND_UOBJECT_ATTRIBUTE(Type, Function) \\ TAttribute<Type>::Create( TAttribute<Type>::FGetter::CreateUObject( this, &ThisClass::Function ) ) #define BIND_UOBJECT_DELEGATE(Type, Function) \\ Type::CreateUObject( this, &ThisClass::Function ) UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Visible,Collapsed,Hidden,HitTestInvisible)",
    "insertText": "UMETA(DisplayName = \"Not Hit-Testable (Self & All Children)\"), SelfHitTestInvisible UMETA(DisplayName = \"Not Hit-Testable (Self Only)\")"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (NotAccessible,Auto,Summary,Custom,ToolTip } ;)",
    "insertText": "UCLASS(DefaultToInstanced)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: DECLARE_DYNAMIC_DELEGATE_RetVal(FText, FGetText)"
  },
  {
    "label": "USlateAccessibleWidgetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USlateAccessibleWidgetData()"
  },
  {
    "label": "CreateAccessibleTextAttribute()",
    "kind": "Method",
    "detail": "Function (AccessibleBehavior = ESlateAccessibleBehavior::NotAccessible ; AccessibleSummaryBehavior = ESlateAccessibleBehavior::Auto ; bCanChildrenBeAccessible = true ; } TAttribute<FText>)",
    "insertText": "CreateAccessibleTextAttribute()"
  },
  {
    "label": "CreateAccessibleSummaryTextAttribute()",
    "kind": "Method",
    "detail": "Function (} TAttribute<FText>)",
    "insertText": "CreateAccessibleSummaryTextAttribute()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Automatic,Fill } ; })",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FEventReply(bool IsHandled = false) : NativeReply(IsHandled ? FReply::Handled() : FReply::Unhandled())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Appearance, meta=( UIMin=\"0\", UIMax=\"1\" ))"
  },
  {
    "label": "FSlateChildSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSlateChildSize() : Value(1.0f) , SizeRule(ESlateSizeRule::Fill)"
  },
  {
    "label": "FSlateChildSize()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSlateChildSize(ESlateSizeRule::Type InSizeRule) : Value(1.0f) , SizeRule(InSizeRule)"
  },
  {
    "label": "AsKeyboardType()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Default,Number,Web,Email,Password,AlphaNumeric } ; } namespace EVirtualKeyboardType { EKeyboardType)",
    "insertText": "AsKeyboardType(Type InType)"
  }
]