[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FCbFieldView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbFieldView"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "FDeterminismManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeterminismManager"
  },
  {
    "label": "FExportDeterminismData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExportDeterminismData"
  },
  {
    "label": "FPackageDeterminismData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageDeterminismData"
  },
  {
    "label": "FDeterminismConstructDiagnosticsContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeterminismConstructDiagnosticsContext"
  },
  {
    "label": "FDeterminismConstructDiagnosticsContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" Cooker / CookDeterminismHelper . h \" # include \" Misc / Optional . h \" # include \" Serialization / PackageWriter . h \" # include \" UObject / NameTypes . h \" class UObject ; class FCbFieldView ; class FCbWriter ; namespace UE::Cook { class FDeterminismManager ; struct FExportDeterminismData ; struct FPackageDeterminismData ; struct FDeterminismConstructDiagnosticsContext : public IDeterminismConstructDiagnosticsContext { public :)",
    "insertText": "FDeterminismConstructDiagnosticsContext(FExportDeterminismData& InExportData)"
  },
  {
    "label": "GetTargetPlatform()",
    "kind": "Method",
    "detail": "Function (const ITargetPlatform*)",
    "insertText": "GetTargetPlatform()"
  },
  {
    "label": "AddDiagnostic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDiagnostic(FUtf8StringView DiagnosticName, const FCbField& Value)"
  },
  {
    "label": "FExportDeterminismData()",
    "kind": "Method",
    "detail": "Function (public : FExportDeterminismData& ExportData ; } ; struct FExportDeterminismData : public IDeterminismModifiedExportContext { public :)",
    "insertText": "FExportDeterminismData(FPackageDeterminismData& InPackageData, UObject* InExport)"
  },
  {
    "label": "IsModified()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsModified()"
  },
  {
    "label": "IsPrimaryAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPrimaryAsset()"
  },
  {
    "label": "GetOldDiagnostics()",
    "kind": "Method",
    "detail": "Function (const TMap<FUtf8String,FCbField>&)",
    "insertText": "GetOldDiagnostics()"
  },
  {
    "label": "GetNewDiagnostics()",
    "kind": "Method",
    "detail": "Function (const TMap<FUtf8String,FCbField>&)",
    "insertText": "GetNewDiagnostics()"
  },
  {
    "label": "GetPackageContext()",
    "kind": "Method",
    "detail": "Function (IDeterminismModifiedPackageContext&)",
    "insertText": "GetPackageContext()"
  },
  {
    "label": "GetCompareText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCompareText()"
  },
  {
    "label": "AppendLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendLog(FStringView LogText)"
  },
  {
    "label": "AppendDiagnostics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendDiagnostics()"
  },
  {
    "label": "AddOldDiagnostic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOldDiagnostic(FUtf8StringView DiagnosticName, const FCbField& Value)"
  },
  {
    "label": "AddNewDiagnostic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewDiagnostic(FUtf8StringView DiagnosticName, const FCbField& Value)"
  },
  {
    "label": "Sort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sort()"
  },
  {
    "label": "FPackageDeterminismData()",
    "kind": "Method",
    "detail": "Function (public : TMap<FUtf8String,FCbField> OldDiagnostics ; TMap<FUtf8String,FCbField> NewDiagnostics ; FStringBuilderBase* Logger = nullptr ; TArray<TRefCountPtr<IDeterminismHelper>> DeterminismHelpers ; FPackageDeterminismData& PackageData ; UObject* Export = nullptr ; bool bPrimaryAsset = false ; bool bModified = false ; bool bSortDirty = true ; bool bAppendedDiagnostics = false ; } ; struct FPackageDeterminismData : public IDeterminismModifiedPackageContext { public :)",
    "insertText": "FPackageDeterminismData(FDeterminismManager& InOwner)"
  },
  {
    "label": "GetModifiedExports()",
    "kind": "Method",
    "detail": "Function (const TSet<UObject*>&)",
    "insertText": "GetModifiedExports()"
  },
  {
    "label": "GetPrimaryAsset()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetPrimaryAsset()"
  },
  {
    "label": "GetExportContext()",
    "kind": "Method",
    "detail": "Function (const IDeterminismModifiedExportContext&)",
    "insertText": "GetExportContext(UObject* Export)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "FindOrAddExportData()",
    "kind": "Method",
    "detail": "Function (FExportDeterminismData&)",
    "insertText": "FindOrAddExportData(UObject* Object)"
  },
  {
    "label": "FDeterminismManager()",
    "kind": "Method",
    "detail": "Function (public : TMap<UObject*,TUniquePtr<FExportDeterminismData>> Exports ; TSet<UObject*> ModifiedExports ; FDeterminismManager* Owner = nullptr ; UObject* PrimaryAsset = nullptr ; const ITargetPlatform* TargetPlatform = nullptr ; bool bModified = false ; bool bSortDirty = true ; } ; class FDeterminismManager { public :)",
    "insertText": "FDeterminismManager()"
  },
  {
    "label": "BeginPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPackage(UPackage* InPackage, const ITargetPlatform* TargetPlatform, ICookedPackageWriter* InOplogProvider)"
  },
  {
    "label": "RegisterDeterminismHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDeterminismHelper(UObject* SourceObject, const TRefCountPtr<IDeterminismHelper>& DeterminismHelper)"
  },
  {
    "label": "RecordPackageModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordPackageModified(UObject* PrimaryAsset)"
  },
  {
    "label": "RecordExportModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordExportModified(const FString& ExportPathName)"
  },
  {
    "label": "GetCurrentPackageDiagnosticsAsText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCurrentPackageDiagnosticsAsText()"
  },
  {
    "label": "AppendCommitAttachments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendCommitAttachments(TArray<IPackageWriter::FCommitAttachmentInfo>& OutAttachments)"
  },
  {
    "label": "EndPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPackage()"
  },
  {
    "label": "FetchOldDiagnostics()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "FetchOldDiagnostics()"
  },
  {
    "label": "TrySave()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TrySave(FCbWriter& Writer)"
  },
  {
    "label": "TryLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLoad(FCbFieldView Field)"
  }
]