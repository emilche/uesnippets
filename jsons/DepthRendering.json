[
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FStaticMeshBatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshBatch"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "EDepthDrawingMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDepthDrawingMode"
  },
  {
    "label": "FDepthPassInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDepthPassInfo"
  },
  {
    "label": "TDepthOnlyVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDepthOnlyVS"
  },
  {
    "label": "FDepthOnlyPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDepthOnlyPS"
  },
  {
    "label": "FDepthPassMeshProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDepthPassMeshProcessor"
  },
  {
    "label": "FRayTracingDitheredLODMeshProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingDitheredLODMeshProcessor"
  },
  {
    "label": "GetDepthDrawingModeString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RHI . h \" # include \" HitProxies . h \" # include \" ShaderBaseClasses . h \" # include \" MeshPassProcessor . h \" class FPrimitiveSceneProxy ; class FScene ; class FStaticMeshBatch ; class FViewInfo ; enum EDepthDrawingMode { DDM_None = 0,DDM_NonMaskedOnly = 1,DDM_AllOccluders = 2,DDM_AllOpaque = 3,DDM_MaskedOnly = 4,DDM_AllOpaqueNoVelocity = 5,} ; const TCHAR*)",
    "insertText": "GetDepthDrawingModeString(EDepthDrawingMode Mode)"
  },
  {
    "label": "IsComputeStencilDitherEnabled()",
    "kind": "Method",
    "detail": "Function (struct FDepthPassInfo { bool)",
    "insertText": "IsComputeStencilDitherEnabled()"
  },
  {
    "label": "AddDitheredStencilFillPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDitheredStencilFillPass(FRDGBuilder& GraphBuilder, TConstArrayView<FViewInfo> Views, FRDGTextureRef DepthTexture, const FDepthPassInfo& DepthPass)"
  },
  {
    "label": "CalculateDepthPassMeshStaticSortKey()",
    "kind": "Method",
    "detail": "Function (FMeshDrawCommandSortKey)",
    "insertText": "CalculateDepthPassMeshStaticSortKey(const bool bIsMasked, const FMeshMaterialShader* VertexShader, const FMeshMaterialShader* PixelShader)"
  },
  {
    "label": "DECLARE_SHADER_TYPE()",
    "kind": "Method",
    "detail": "Function (template<bool bUsePositionOnlyStream> class TDepthOnlyVS : public FMeshMaterialShader {)",
    "insertText": "DECLARE_SHADER_TYPE(TDepthOnlyVS,MeshMaterial)"
  },
  {
    "label": "TDepthOnlyVS()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "TDepthOnlyVS()"
  },
  {
    "label": "TDepthOnlyVS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TDepthOnlyVS(const FMeshMaterialShaderType::CompiledShaderInitializerType& Initializer) : FMeshMaterialShader(Initializer)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(IsTranslucentBlendMode(Parameters.MaterialParameters))"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(Parameters, OutEnvironment)"
  },
  {
    "label": "GetShaderBindings()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetShaderBindings(const FScene* Scene, ERHIFeatureLevel::Type FeatureLevel, const FPrimitiveSceneProxy* PrimitiveSceneProxy, const FMaterialRenderProxy& MaterialRenderProxy, const FMaterial& Material, const FMeshMaterialShaderElementData& ShaderElementData, FMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "GetShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetShaderBindings(Scene, FeatureLevel, PrimitiveSceneProxy, MaterialRenderProxy, Material, ShaderElementData, ShaderBindings)"
  },
  {
    "label": "DECLARE_SHADER_TYPE()",
    "kind": "Method",
    "detail": "Function (} } ; class FDepthOnlyPS : public FMeshMaterialShader {)",
    "insertText": "DECLARE_SHADER_TYPE(FDepthOnlyPS,MeshMaterial)"
  },
  {
    "label": "FDepthOnlyPS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDepthOnlyPS(const ShaderMetaType::CompiledShaderInitializerType& Initializer): FMeshMaterialShader(Initializer)"
  },
  {
    "label": "SetDefine()",
    "kind": "Method",
    "detail": "Function (OutEnvironment .)",
    "insertText": "SetDefine(TEXT(\"ALLOW_DEBUG_VIEW_MODES\"), AllowDebugViewmodes(Parameters.Platform))"
  },
  {
    "label": "SetDefine()",
    "kind": "Method",
    "detail": "Function (OutEnvironment .)",
    "insertText": "SetDefine(TEXT(\"SCENE_TEXTURES_DISABLED\"), 1u)"
  },
  {
    "label": "FDepthOnlyPS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDepthOnlyPS()"
  },
  {
    "label": "GetDepthPassShaders()",
    "kind": "Method",
    "detail": "Function (} } ; template<bool bPositionOnly> bool)",
    "insertText": "GetDepthPassShaders(const FMaterial& Material, const FVertexFactoryType* VertexFactoryType, ERHIFeatureLevel::Type FeatureLevel, bool bMaterialUsesPixelDepthOffset, TShaderRef<TDepthOnlyVS<bPositionOnly>>& VertexShader, TShaderRef<FDepthOnlyPS>& PixelShader, FShaderPipelineRef& ShaderPipeline)"
  },
  {
    "label": "FDepthPassMeshProcessor()",
    "kind": "Method",
    "detail": "Function (class FDepthPassMeshProcessor : public FSceneRenderingAllocatorObject<FDepthPassMeshProcessor>,public FMeshPassProcessor { public :)",
    "insertText": "FDepthPassMeshProcessor(EMeshPass::Type InMeshPassType, const FScene* Scene, ERHIFeatureLevel::Type FeatureLevel, const FSceneView* InViewIfDynamicMeshCommand, const FMeshPassProcessorRenderState& InPassDrawRenderState, const bool InbRespectUseAsOccluderFlag, const EDepthDrawingMode InEarlyZPassMode, const bool InbEarlyZPassMovable, const bool bDitheredLODFadingOutMaskPass, FMeshPassDrawListContext* InDrawListContext, const bool bShadowProjection = false, const bool bSecondStageDepthPass = false)"
  },
  {
    "label": "AddMeshBatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMeshBatch(const FMeshBatch& RESTRICT MeshBatch, uint64 BatchElementMask, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, int32 StaticMeshId = -1)"
  },
  {
    "label": "CollectPSOInitializers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectPSOInitializers(const FSceneTexturesConfig& SceneTexturesConfig, const FMaterial& Material, const FPSOPrecacheVertexFactoryData& VertexFactoryData, const FPSOPrecacheParams& PreCacheParams, TArray<FPSOPrecacheData>& PSOInitializers)"
  },
  {
    "label": "TryAddMeshBatch()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "TryAddMeshBatch(const FMeshBatch& RESTRICT MeshBatch, uint64 BatchElementMask, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, int32 StaticMeshId, const FMaterialRenderProxy& MaterialRenderProxy, const FMaterial& Material)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (template<bool bPositionOnly> bool)",
    "insertText": "Process(const FMeshBatch& MeshBatch, uint64 BatchElementMask, int32 StaticMeshId, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, const FMaterialRenderProxy& RESTRICT MaterialRenderProxy, const FMaterial& RESTRICT MaterialResource, ERasterizerFillMode MeshFillMode, ERasterizerCullMode MeshCullMode)"
  },
  {
    "label": "ShouldRender()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRender(const FMaterial& Material, bool bMaterialModifiesMeshPosition, bool bSupportPositionOnlyStream, bool bVFTypeSupportsNullPixelShader, bool& bUseDefaultMaterial, bool& bPositionOnly)"
  },
  {
    "label": "CollectDefaultMaterialPSOInitializers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectDefaultMaterialPSOInitializers(const FSceneTexturesConfig& SceneTexturesConfig, const FMaterial& Material, const FPSOPrecacheVertexFactoryData& VertexFactoryData, TArray<FPSOPrecacheData>& PSOInitializers)"
  },
  {
    "label": "CollectPSOInitializersInternal()",
    "kind": "Method",
    "detail": "Function (template<bool bPositionOnly> void)",
    "insertText": "CollectPSOInitializersInternal(const FSceneTexturesConfig& SceneTexturesConfig, const FPSOPrecacheVertexFactoryData& VertexFactoryData, const FMaterial& RESTRICT MaterialResource, ERasterizerFillMode MeshFillMode, ERasterizerCullMode MeshCullMode, bool bDitheredLODTransition, EPrimitiveType PrimitiveType, TArray<FPSOPrecacheData>& PSOInitializers)"
  },
  {
    "label": "SetupDepthPassState()",
    "kind": "Method",
    "detail": "Function (FMeshPassProcessorRenderState PassDrawRenderState ; const bool bRespectUseAsOccluderFlag ; const EDepthDrawingMode EarlyZPassMode ; const bool bEarlyZPassMovable ; const bool bDitheredLODFadingOutMaskPass ; const bool bShadowProjection ; const bool bSecondStageDepthPass ; } ; void)",
    "insertText": "SetupDepthPassState(FMeshPassProcessorRenderState& DrawRenderState)"
  },
  {
    "label": "FRayTracingDitheredLODMeshProcessor()",
    "kind": "Method",
    "detail": "Function (class FRayTracingDitheredLODMeshProcessor : public FMeshPassProcessor { public :)",
    "insertText": "FRayTracingDitheredLODMeshProcessor(const FScene* Scene, const FSceneView* InViewIfDynamicMeshCommand, const FMeshPassProcessorRenderState& InPassDrawRenderState, const bool InbRespectUseAsOccluderFlag, const EDepthDrawingMode InEarlyZPassMode, const bool InbEarlyZPassMovable, FMeshPassDrawListContext* InDrawListContext)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (private : template<bool bPositionOnly> void)",
    "insertText": "Process(const FMeshBatch& MeshBatch, uint64 BatchElementMask, int32 StaticMeshId, EBlendMode BlendMode, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, const FMaterialRenderProxy& RESTRICT MaterialRenderProxy, const FMaterial& RESTRICT MaterialResource, ERasterizerFillMode MeshFillMode, ERasterizerCullMode MeshCullMode)"
  }
]