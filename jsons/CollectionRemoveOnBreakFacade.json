[
  {
    "label": "FManagedArrayCollection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManagedArrayCollection"
  },
  {
    "label": "helps",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "helps"
  },
  {
    "label": "FRemoveOnBreakData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRemoveOnBreakData"
  },
  {
    "label": "FCollectionRemoveOnBreakFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionRemoveOnBreakFacade"
  },
  {
    "label": "FRemoveOnBreakData()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FRemoveOnBreakData()"
  },
  {
    "label": "FRemoveOnBreakData()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FRemoveOnBreakData(const FVector4f& InPackedData)"
  },
  {
    "label": "FRemoveOnBreakData()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FRemoveOnBreakData(bool bEnable, const FVector2f& BreakTimer, bool bClusterCrumbling, const FVector2f& RemovalTimer)"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(bool bEnable)"
  },
  {
    "label": "SetClusterCrumbling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClusterCrumbling(bool bClusterCrumbling)"
  },
  {
    "label": "SetBreakTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBreakTimer(float MinTime, float MaxTime)"
  },
  {
    "label": "SetRemovalTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRemovalTimer(float MinTime, float MaxTime)"
  },
  {
    "label": "FCollectionRemoveOnBreakFacade()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FCollectionRemoveOnBreakFacade(FManagedArrayCollection& InCollection)"
  },
  {
    "label": "FCollectionRemoveOnBreakFacade()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FCollectionRemoveOnBreakFacade(const FManagedArrayCollection& InCollection)"
  },
  {
    "label": "DefineSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefineSchema()"
  },
  {
    "label": "RemoveSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSchema()"
  },
  {
    "label": "SetFromIndexArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFromIndexArray(const TArray<int32>& Indices, const FRemoveOnBreakData& Data)"
  },
  {
    "label": "SetToAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToAll(const FRemoveOnBreakData& Data)"
  }
]