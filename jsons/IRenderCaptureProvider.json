[
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "IRenderCaptureProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRenderCaptureProvider"
  },
  {
    "label": "ECaptureFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECaptureFlags"
  },
  {
    "label": "GetModularFeatureName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Features / IModularFeatures . h \" class FRHICommandListImmediate ; class FViewport ; class IRenderCaptureProvider : public IModularFeature { public : FName)",
    "insertText": "GetModularFeatureName()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (FName FeatureName =)",
    "insertText": "FName(TEXT(\"RenderCaptureProvider\"))"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (IModularFeatures::FScopedLockModularFeatureList ScopedLockModularFeatureList ; return)",
    "insertText": "Get().IsModularFeatureAvailable(GetModularFeatureName())"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} IRenderCaptureProvider&)",
    "insertText": "Get()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (IModularFeatures::FScopedLockModularFeatureList ScopedLockModularFeatureList ; return)",
    "insertText": "Get().GetModularFeature<IRenderCaptureProvider>(GetModularFeatureName())"
  },
  {
    "label": "CanSupportSubmissionThread()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanSupportSubmissionThread()"
  },
  {
    "label": "BeginCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCapture(FRHICommandListImmediate* InRHICommandList, uint32 InFlags = 0, FString const& InDestFileName = FString())"
  },
  {
    "label": "EndCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndCapture(FRHICommandListImmediate* InRHICommandList)"
  }
]