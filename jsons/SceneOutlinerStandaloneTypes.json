[
  {
    "label": "FFolderKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFolderKey"
  },
  {
    "label": "FSceneOutlinerTreeItemID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerTreeItemID"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "FSceneOutlinerHierarchyChangedData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerHierarchyChangedData"
  },
  {
    "label": "FFolderKey()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Paths . h \" # include \" UObject / ObjectKey . h \" # include \" Templates / MaxSizeof . h \" # include \" Folder . h \" # include \" SceneOutlinerFwd . h \" struct FFolderKey {)",
    "insertText": "FFolderKey(const FName& InPath, const FFolder::FRootObject& InRootObject) : Path(InPath) , RootObjectKey(InRootObject)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FFolderKey& InOther)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} FName Path ; FFolder::FRootObject RootObjectKey ; } ; uint32)",
    "insertText": "GetTypeHash(FFolderKey Key)"
  },
  {
    "label": "FSceneOutlinerTreeItemID()",
    "kind": "Method",
    "detail": "Function (} struct FSceneOutlinerTreeItemID { public : using FUniqueID = uint32 ; enum class EType : uint8 { Object,Folder,UniqueID,Guid,Null } ;)",
    "insertText": "FSceneOutlinerTreeItemID() : Type(EType::Null), CachedHash(0)"
  },
  {
    "label": "FSceneOutlinerTreeItemID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSceneOutlinerTreeItemID(const UObject* InObject) : Type(EType::Object)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(Data) FObjectKey(InObject)"
  },
  {
    "label": "CalculateTypeHash()",
    "kind": "Method",
    "detail": "Function (CachedHash =)",
    "insertText": "CalculateTypeHash()"
  },
  {
    "label": "FSceneOutlinerTreeItemID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSceneOutlinerTreeItemID(const FObjectKey& InKey) : Type(EType::Object)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(Data) FObjectKey(InKey)"
  },
  {
    "label": "FSceneOutlinerTreeItemID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSceneOutlinerTreeItemID(const FFolderKey& InKey) : Type(EType::Folder)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(Data) FFolderKey(InKey)"
  },
  {
    "label": "FSceneOutlinerTreeItemID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSceneOutlinerTreeItemID(const FFolder& InFolder) : FSceneOutlinerTreeItemID(FFolderKey(InFolder.GetPath(), InFolder.GetRootObject()))"
  },
  {
    "label": "FSceneOutlinerTreeItemID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSceneOutlinerTreeItemID(const FUniqueID& CustomID) : Type(EType::UniqueID)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(Data) FUniqueID(CustomID)"
  },
  {
    "label": "FSceneOutlinerTreeItemID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSceneOutlinerTreeItemID(const FGuid& InGuid) : Type(EType::Guid)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(Data) FGuid(InGuid)"
  },
  {
    "label": "FSceneOutlinerTreeItemID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSceneOutlinerTreeItemID(const FSceneOutlinerTreeItemID& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* this = Other ; } FSceneOutlinerTreeItemID&)",
    "insertText": "operator(const FSceneOutlinerTreeItemID& Other)"
  },
  {
    "label": "switch()",
    "kind": "Method",
    "detail": "Function (Type = Other . Type ;)",
    "insertText": "switch(Type)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (break ; case EType::Folder :)",
    "insertText": "new(Data) FFolderKey(Other.GetAsFolderRef())"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (break ; case EType::Guid :)",
    "insertText": "new(Data) FGuid(Other.GetAsGuid())"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (break ; case EType::UniqueID :)",
    "insertText": "new(Data) FUniqueID(Other.GetAsHash())"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "MoveTemp(Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FSceneOutlinerTreeItemID&)",
    "insertText": "operator(FSceneOutlinerTreeItemID&& Other)"
  },
  {
    "label": "Swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Swap(*this, Other)"
  },
  {
    "label": "GetAsFolderRef()",
    "kind": "Method",
    "detail": "Function (break ; case EType::Folder :)",
    "insertText": "GetAsFolderRef().~FFolderKey()"
  },
  {
    "label": "GetAsGuid()",
    "kind": "Method",
    "detail": "Function (break ; case EType::Guid :)",
    "insertText": "GetAsGuid().~FGuid()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (break ; case EType::Folder : Hash =)",
    "insertText": "GetTypeHash(GetAsFolderRef())"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (break ; case EType::Guid : Hash =)",
    "insertText": "GetTypeHash(GetAsGuid())"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (break ; case EType::UniqueID : Hash =)",
    "insertText": "GetTypeHash(GetAsHash())"
  },
  {
    "label": "HashCombineFast()",
    "kind": "Method",
    "detail": "Function (break ; default : break ; } return)",
    "insertText": "HashCombineFast((uint8)Type, Hash)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FSceneOutlinerTreeItemID& ItemID)"
  },
  {
    "label": "GetAsFolderRef()",
    "kind": "Method",
    "detail": "Function (} FFolderKey&)",
    "insertText": "GetAsFolderRef()"
  },
  {
    "label": "GetAsGuid()",
    "kind": "Method",
    "detail": "Function (} FGuid&)",
    "insertText": "GetAsGuid()"
  },
  {
    "label": "GetAsHash()",
    "kind": "Method",
    "detail": "Function (} FUniqueID&)",
    "insertText": "GetAsHash()"
  },
  {
    "label": "Compare()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Compare(const FSceneOutlinerTreeItemID& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FSceneOutlinerTreeItemType& Other)"
  },
  {
    "label": "IsA()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsA(const FSceneOutlinerTreeItemType& Other)"
  },
  {
    "label": "GetForegroundColor()",
    "kind": "Method",
    "detail": "Function (} private : uint32 NextUniqueID ; uint32 ID ; const FSceneOutlinerTreeItemType* ParentType ; } ; struct FSceneOutlinerCommonLabelData { TWeakPtr<ISceneOutliner> WeakSceneOutliner ; const FLinearColor DarkColor ; TOptional<FLinearColor>)",
    "insertText": "GetForegroundColor(const ISceneOutlinerTreeItem& TreeItem)"
  },
  {
    "label": "CanExecuteRenameRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteRenameRequest(const ISceneOutlinerTreeItem& Item)"
  }
]