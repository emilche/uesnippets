[
  {
    "label": "CefTextfield",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefTextfield"
  },
  {
    "label": "CreateTextfield()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_VIEWS_CEF_TEXTFIELD_H_ # define CEF_INCLUDE_VIEWS_CEF_TEXTFIELD_H_ # pragma once # include \" include / views / cef_textfield_delegate . h \" # include \" include / views / cef_view . h \" class CefTextfield : public CefView { public : CefRefPtr<CefTextfield>)",
    "insertText": "CreateTextfield(CefRefPtr<CefTextfieldDelegate> delegate)"
  },
  {
    "label": "SetPasswordInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPasswordInput(bool password_input)"
  },
  {
    "label": "IsPasswordInput()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPasswordInput()"
  },
  {
    "label": "SetReadOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReadOnly(bool read_only)"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetText()"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText(const CefString& text)"
  },
  {
    "label": "AppendText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendText(const CefString& text)"
  },
  {
    "label": "InsertOrReplaceText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertOrReplaceText(const CefString& text)"
  },
  {
    "label": "HasSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSelection()"
  },
  {
    "label": "GetSelectedText()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetSelectedText()"
  },
  {
    "label": "SelectAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAll(bool reversed)"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "GetSelectedRange()",
    "kind": "Method",
    "detail": "Function (CefRange)",
    "insertText": "GetSelectedRange()"
  },
  {
    "label": "SelectRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectRange(const CefRange& range)"
  },
  {
    "label": "GetCursorPosition()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetCursorPosition()"
  },
  {
    "label": "SetTextColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextColor(cef_color_t color)"
  },
  {
    "label": "GetTextColor()",
    "kind": "Method",
    "detail": "Function (cef_color_t)",
    "insertText": "GetTextColor()"
  },
  {
    "label": "SetSelectionTextColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionTextColor(cef_color_t color)"
  },
  {
    "label": "GetSelectionTextColor()",
    "kind": "Method",
    "detail": "Function (cef_color_t)",
    "insertText": "GetSelectionTextColor()"
  },
  {
    "label": "SetSelectionBackgroundColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionBackgroundColor(cef_color_t color)"
  },
  {
    "label": "GetSelectionBackgroundColor()",
    "kind": "Method",
    "detail": "Function (cef_color_t)",
    "insertText": "GetSelectionBackgroundColor()"
  },
  {
    "label": "SetFontList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFontList(const CefString& font_list)"
  },
  {
    "label": "ApplyTextColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyTextColor(cef_color_t color, const CefRange& range)"
  },
  {
    "label": "ApplyTextStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyTextStyle(cef_text_style_t style, bool add, const CefRange& range)"
  },
  {
    "label": "IsCommandEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCommandEnabled(cef_text_field_commands_t command_id)"
  },
  {
    "label": "ExecuteCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteCommand(cef_text_field_commands_t command_id)"
  },
  {
    "label": "ClearEditHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearEditHistory()"
  },
  {
    "label": "SetPlaceholderText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaceholderText(const CefString& text)"
  },
  {
    "label": "GetPlaceholderText()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetPlaceholderText()"
  },
  {
    "label": "SetPlaceholderTextColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaceholderTextColor(cef_color_t color)"
  },
  {
    "label": "SetAccessibleName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAccessibleName(const CefString& name)"
  }
]