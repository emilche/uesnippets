[
  {
    "label": "SymbolTableListTraits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SymbolTableListTraits"
  },
  {
    "label": "Argument",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Argument"
  },
  {
    "label": "anchor()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_ARGUMENT_H # define LLVM_IR_ARGUMENT_H # include \" llvm / ADT / Twine . h \" # include \" llvm / ADT / ilist_node . h \" # include \" llvm / IR / Attributes . h \" # include \" llvm / IR / Value . h \" namespace llvm { template<ValueSubClass,ItemParentClass> class SymbolTableListTraits ; class Argument : public Value,public ilist_node<Argument> { void)",
    "insertText": "anchor()"
  },
  {
    "label": "setParent()",
    "kind": "Method",
    "detail": "Function (Function* Parent ; class SymbolTableListTraits<Argument,Function> ; void)",
    "insertText": "setParent(Function *parent)"
  },
  {
    "label": "Argument()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "Argument(Type *Ty, const Twine &Name = \"\", Function *F = nullptr)"
  },
  {
    "label": "getParent()",
    "kind": "Method",
    "detail": "Function (const Function*)",
    "insertText": "getParent()"
  },
  {
    "label": "hasNonNullAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasNonNullAttr()"
  },
  {
    "label": "getDereferenceableBytes()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getDereferenceableBytes()"
  },
  {
    "label": "getDereferenceableOrNullBytes()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getDereferenceableOrNullBytes()"
  },
  {
    "label": "hasByValAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasByValAttr()"
  },
  {
    "label": "hasByValOrInAllocaAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasByValOrInAllocaAttr()"
  },
  {
    "label": "getParamAlignment()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getParamAlignment()"
  },
  {
    "label": "hasNestAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasNestAttr()"
  },
  {
    "label": "hasNoAliasAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasNoAliasAttr()"
  },
  {
    "label": "hasNoCaptureAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasNoCaptureAttr()"
  },
  {
    "label": "hasStructRetAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasStructRetAttr()"
  },
  {
    "label": "hasReturnedAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasReturnedAttr()"
  },
  {
    "label": "onlyReadsMemory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "onlyReadsMemory()"
  },
  {
    "label": "hasInAllocaAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasInAllocaAttr()"
  },
  {
    "label": "hasZExtAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasZExtAttr()"
  },
  {
    "label": "hasSExtAttr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasSExtAttr()"
  },
  {
    "label": "addAttr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addAttr(AttributeSet AS)"
  },
  {
    "label": "removeAttr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeAttr(AttributeSet AS)"
  },
  {
    "label": "classof()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "classof(const Value *V)"
  }
]