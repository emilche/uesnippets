[
  {
    "label": "UBTNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTNode"
  },
  {
    "label": "UBTCompositeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTCompositeNode"
  },
  {
    "label": "FBehaviorTreeNodeInitializationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeNodeInitializationData"
  },
  {
    "label": "FMemorySort",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMemorySort"
  },
  {
    "label": "FBehaviorTreeNodeInitializationData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BehaviorTree / BehaviorTreeManager . h \" class UBTNode ; class UBTCompositeNode ; struct FBehaviorTreeNodeInitializationData { UBTNode* Node ; UBTCompositeNode* ParentNode ; uint16 ExecutionIndex ; uint16 DataSize ; uint16 SpecialDataSize ; uint8 TreeDepth ;)",
    "insertText": "FBehaviorTreeNodeInitializationData()"
  },
  {
    "label": "FBehaviorTreeNodeInitializationData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBehaviorTreeNodeInitializationData(UBTNode* InNode, UBTCompositeNode* InParentNode, uint16 InExecutionIndex, uint8 InTreeDepth, uint16 NodeMemory, uint16 SpecialNodeMemory = 0) : Node(InNode), ParentNode(InParentNode), ExecutionIndex(InExecutionIndex), TreeDepth(InTreeDepth)"
  },
  {
    "label": "GetAlignedDataSize()",
    "kind": "Method",
    "detail": "Function (SpecialDataSize =)",
    "insertText": "GetAlignedDataSize(SpecialNodeMemory)"
  },
  {
    "label": "DataSize()",
    "kind": "Method",
    "detail": "Function (const uint16 NodeMemorySize = NodeMemory + SpecialDataSize ;)",
    "insertText": "DataSize(NodeMemorySize <= 2) ? NodeMemorySize : UBehaviorTreeManager::GetAlignedDataSize(NodeMemorySize)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} struct FMemorySort { bool)",
    "insertText": "operator()(const FBehaviorTreeNodeInitializationData& A, const FBehaviorTreeNodeInitializationData& B)"
  }
]