[
  {
    "label": "FOpResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpResult"
  },
  {
    "label": "VPackage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VPackage"
  },
  {
    "label": "VTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VTask"
  },
  {
    "label": "VNativeFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VNativeFunction"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (struct FOpResult ; struct VPackage ; struct VTask ; using FNativeCallResult = FOpResult ; struct VNativeFunction : VHeapValue {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VHeapValue)"
  },
  {
    "label": "FNativeCallResult()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; const uint32 NumParameters ; using Args = TArrayView<VValue> ; using FThunkFn =)",
    "insertText": "FNativeCallResult(*)(FRunningContext, VValue Scope, Args Arguments)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (FThunkFn Thunk ; TWriteBarrier<VValue> Self ; VNativeFunction&)",
    "insertText": "New(FAllocationContext Context, uint32 NumParameters, FThunkFn Thunk, VValue InSelf)"
  },
  {
    "label": "NewUnbound()",
    "kind": "Method",
    "detail": "Function (} VNativeFunction&)",
    "insertText": "NewUnbound(FAllocationContext Context, uint32 NumParameters, FThunkFn Thunk)"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (} VNativeFunction&)",
    "insertText": "Bind(FAllocationContext Context, VValue InSelf)"
  },
  {
    "label": "SetThunk()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetThunk(Verse::VPackage* Package, FUtf8StringView VerseScopePath, FUtf8StringView DecoratedName, FThunkFn NativeFuncPtr)"
  },
  {
    "label": "HasSelf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSelf()"
  },
  {
    "label": "VNativeFunction()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "VNativeFunction(FAllocationContext Context, uint32 InNumParameters, FThunkFn InThunk, VValue InSelf) : VHeapValue(Context, &GlobalTrivialEmergentType.Get(Context)) , NumParameters(InNumParameters) , Thunk(InThunk) , Self(Context, InSelf)"
  }
]