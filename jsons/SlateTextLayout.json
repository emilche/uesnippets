[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FSlateTextLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTextLayout"
  },
  {
    "label": "FSlateTextLayoutFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTextLayoutFactory"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Styling / SlateTypes . h \" # include \" Framework / Text / IRun . h \" # include \" Framework / Text / TextLayout . h \" # include \" Widgets / SWidget . h \" # include \" Layout / Children . h \" class FArrangedChildren ; class FPaintArgs ; class FSlateWindowElementList ; class FSlateTextLayout : public FTextLayout { public : TSharedRef<FSlateTextLayout>)",
    "insertText": "Create(SWidget* InOwner, FTextBlockStyle InDefaultTextStyle)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (FChildren*)",
    "insertText": "GetChildren()"
  },
  {
    "label": "ArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "EndLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndLayout()"
  },
  {
    "label": "SetDefaultTextStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultTextStyle(FTextBlockStyle InDefaultTextStyle)"
  },
  {
    "label": "GetDefaultTextStyle()",
    "kind": "Method",
    "detail": "Function (const FTextBlockStyle&)",
    "insertText": "GetDefaultTextStyle()"
  },
  {
    "label": "SetIsPassword()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsPassword(const TAttribute<bool>& InIsPassword)"
  },
  {
    "label": "FSlateTextLayout()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FSlateTextLayout(SWidget* InOwner, FTextBlockStyle InDefaultTextStyle)"
  },
  {
    "label": "OnPaintHighlights()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaintHighlights(const FPaintArgs& Args, const FTextLayout::FLineView& LineView, const TArray<FLineViewHighlight>& Highlights, const FTextBlockStyle& DefaultTextStyle, const FGeometry& AllottedGeometry, const FSlateRect& ClippingRect, FSlateWindowElementList& OutDrawElements, const int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "AggregateChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AggregateChildren()"
  },
  {
    "label": "CreateDefaultTextRun()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IRun>)",
    "insertText": "CreateDefaultTextRun(const TSharedRef<FString>& NewText, const FTextRange& NewRange)"
  }
]