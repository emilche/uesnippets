[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMemoryArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryArchive"
  },
  {
    "label": "FPropertyPathNameTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyPathNameTree"
  },
  {
    "label": "FUnknownEnumNames",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUnknownEnumNames"
  },
  {
    "label": "FPropertyBagRepository",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyBagRepository"
  },
  {
    "label": "FPropertyBagAssociationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyBagAssociationData"
  },
  {
    "label": "FScopedInstanceDataObjectLoad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedInstanceDataObjectLoad"
  },
  {
    "label": "FPropertyBagRepositoryLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyBagRepositoryLock"
  },
  {
    "label": "FInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInfo"
  },
  {
    "label": "FScopedIDOSerializationContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedIDOSerializationContext"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Map . h \" # include \" HAL / CriticalSection . h \" # include \" UObject / GCObject . h \" # include \" UObject / PropertyTypeName . h \" # include \" Templates / FunctionFwd . h \" class UObject ; class FMemoryArchive ; namespace UE { # if WITH_EDITORONLY_DATA class FPropertyPathNameTree ; class FUnknownEnumNames ; class FPropertyBagRepository : public FGCObject { struct FPropertyBagAssociationData { void)",
    "insertText": "Destroy()"
  },
  {
    "label": "FPropertyBagRepository()",
    "kind": "Method",
    "detail": "Function (FPropertyPathNameTree* Tree = nullptr ; FUnknownEnumNames* EnumNames = nullptr ; TObjectPtr<UObject> InstanceDataObject = nullptr ; bool bNeedsFixup = false ; } ; struct FScopedInstanceDataObjectLoad ; private : class FPropertyBagRepositoryLock ; FCriticalSection CriticalSection ; TMap<const UObject*,FPropertyBagAssociationData> AssociatedData ; TMap<const UObject*,const UObject*> InstanceDataObjectToOwner ; TMap<const UObject*,TObjectPtr<UObject>> Namespaces ;)",
    "insertText": "FPropertyBagRepository()"
  },
  {
    "label": "FPropertyBagRepository()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FPropertyBagRepository(const FPropertyBagRepository &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPropertyBagRepository&)",
    "insertText": "operator(const FPropertyBagRepository&)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FPropertyBagRepository&)",
    "insertText": "Get()"
  },
  {
    "label": "ShrinkMaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShrinkMaps()"
  },
  {
    "label": "FindOrCreateUnknownPropertyTree()",
    "kind": "Method",
    "detail": "Function (FPropertyPathNameTree*)",
    "insertText": "FindOrCreateUnknownPropertyTree(const UObject* Owner)"
  },
  {
    "label": "AddUnknownEnumName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUnknownEnumName(const UObject* Owner, const UEnum* Enum, FPropertyTypeName EnumTypeName, FName EnumValueName)"
  },
  {
    "label": "FindUnknownEnumNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindUnknownEnumNames(const UObject* Owner, FPropertyTypeName EnumTypeName, TArray<FName>& OutNames, bool& bOutHasFlags)"
  },
  {
    "label": "FindUnknownEnumNames()",
    "kind": "Method",
    "detail": "Function (const FUnknownEnumNames*)",
    "insertText": "FindUnknownEnumNames(const UObject* Owner)"
  },
  {
    "label": "ResetUnknownEnumNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetUnknownEnumNames(const UObject* Owner)"
  },
  {
    "label": "CreateInstanceDataObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "CreateInstanceDataObject(UObject* Owner, FArchive* Archive = nullptr)"
  },
  {
    "label": "DuplicateInstanceDataObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "DuplicateInstanceDataObject(UObject* SourceOwner, UObject* DestOwner)"
  },
  {
    "label": "PostLoadInstanceDataObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoadInstanceDataObject(const UObject* Owner)"
  },
  {
    "label": "DestroyOuterBag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyOuterBag(const UObject* Owner)"
  },
  {
    "label": "ReassociateObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReassociateObjects(const TMap<UObject*, UObject*>& ReplacedObjects)"
  },
  {
    "label": "PostEditChangeChainProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeChainProperty(const UObject* Object, FPropertyChangedChainEvent& PropertyChangedEvent)"
  },
  {
    "label": "RequiresFixup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresFixup(const UObject* Object, bool bIncludeOuter = false)"
  },
  {
    "label": "MarkAsFixedUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAsFixedUp(const UObject* Object = nullptr)"
  },
  {
    "label": "HasInstanceDataObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasInstanceDataObject(const UObject* Owner)"
  },
  {
    "label": "FindInstanceDataObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "FindInstanceDataObject(const UObject* Owner)"
  },
  {
    "label": "FindNestedInstanceDataObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindNestedInstanceDataObject(const UObject* Owner, bool bRequiresFixupOnly, TFunctionRef<void(UObject*)> Callback)"
  },
  {
    "label": "AddReferencedInstanceDataObject()",
    "kind": "Method",
    "detail": "Function (UE_INTERNAL void)",
    "insertText": "AddReferencedInstanceDataObject(const UObject* Owner, FReferenceCollector& Collector)"
  },
  {
    "label": "FindInstanceForDataObject()",
    "kind": "Method",
    "detail": "Function (const UObject*)",
    "insertText": "FindInstanceForDataObject(const UObject* InstanceDataObject)"
  },
  {
    "label": "WasPropertyValueSerialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WasPropertyValueSerialized(const UStruct* Struct, const void* StructData, const FProperty* Property, int32 ArrayIndex = 0)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "IsPropertyBagPlaceholderType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyBagPlaceholderType(const UStruct* Type)"
  },
  {
    "label": "IsPropertyBagPlaceholderObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyBagPlaceholderObject(const UObject* Object)"
  },
  {
    "label": "IsPropertyBagPlaceholderObjectSupportEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyBagPlaceholderObjectSupportEnabled()"
  },
  {
    "label": "CreatePropertyBagPlaceholderType()",
    "kind": "Method",
    "detail": "Function (UStruct*)",
    "insertText": "CreatePropertyBagPlaceholderType(UObject* Outer, UClass* Class, FName Name = NAME_None, EObjectFlags Flags = RF_NoFlags, UStruct* SuperStruct = nullptr)"
  },
  {
    "label": "CreatePropertyBagPlaceholderClass()",
    "kind": "Method",
    "detail": "Function (template<T = UObject> UClass*)",
    "insertText": "CreatePropertyBagPlaceholderClass(UObject* Outer, UClass* Class, FName Name = NAME_None, EObjectFlags Flags = RF_NoFlags)"
  },
  {
    "label": "RemovePropertyBagPlaceholderType()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemovePropertyBagPlaceholderType(UStruct* PlaceholderType)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Lock()"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Unlock()"
  },
  {
    "label": "RemoveAssociationUnsafe()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RemoveAssociationUnsafe(const UObject* Owner)"
  },
  {
    "label": "CreateInstanceDataObjectUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateInstanceDataObjectUnsafe(UObject* Owner, FPropertyBagAssociationData& BagData, FArchive* Archive = nullptr)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} ; class FUnknownEnumNames { public : void)",
    "insertText": "Add(const UEnum* Enum, FPropertyTypeName EnumTypeName, FName EnumValueName)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Find(FPropertyTypeName EnumTypeName, TArray<FName>& OutNames, bool& bOutHasFlags)"
  },
  {
    "label": "FScopedIDOSerializationContext()",
    "kind": "Method",
    "detail": "Function (private : struct FInfo { TSet<FName> Names ; bool bHasFlags = false ; } ; TMap<FPropertyTypeName,FInfo> Enums ; } ; # endif struct FScopedIDOSerializationContext { # if WITH_EDITORONLY_DATA)",
    "insertText": "FScopedIDOSerializationContext(UObject* InObject, FArchive& Archive)"
  },
  {
    "label": "FScopedIDOSerializationContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedIDOSerializationContext(UObject* InObject, bool bImpersonate)"
  },
  {
    "label": "FScopedIDOSerializationContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedIDOSerializationContext(bool bImpersonate)"
  },
  {
    "label": "FScopedIDOSerializationContext()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FScopedIDOSerializationContext()"
  },
  {
    "label": "SaveSerializeContext()",
    "kind": "Method",
    "detail": "Function (FArchive* Archive = nullptr ; UObject* const Object = nullptr ; const int64 PreSerializeOffset = 0 ; UObject* SavedSerializedObject ; bool bSavedTrackSerializedPropertyPath ; bool bSavedTrackInitializedProperties ; bool bSavedTrackSerializedProperties ; bool bSavedTrackUnknownProperties ; bool bSavedTrackUnknownEnumNames ; bool bSavedImpersonateProperties ; bool bCreateIDO = false ; private : void)",
    "insertText": "SaveSerializeContext(FUObjectSerializeContext* SerializeContext)"
  },
  {
    "label": "RestoreSerializeContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreSerializeContext(FUObjectSerializeContext* SerializeContext)"
  },
  {
    "label": "FinishCreatingInstanceDataObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCreatingInstanceDataObject()"
  },
  {
    "label": "FScopedIDOSerializationContext()",
    "kind": "Method",
    "detail": "Function (} # endif)",
    "insertText": "FScopedIDOSerializationContext(const FScopedIDOSerializationContext&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FScopedIDOSerializationContext&)",
    "insertText": "operator(const FScopedIDOSerializationContext&)"
  }
]