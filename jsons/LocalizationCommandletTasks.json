[
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "ULocalizationTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalizationTarget"
  },
  {
    "label": "GatherTextForTargets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GatherTextForTargets(const TSharedRef<SWindow>& ParentWindow, const TArray<ULocalizationTarget*>& Targets)"
  },
  {
    "label": "GatherTextForTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GatherTextForTarget(const TSharedRef<SWindow>& ParentWindow, ULocalizationTarget* const Target)"
  },
  {
    "label": "ImportDialogueForTargets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportDialogueForTargets(const TSharedRef<SWindow>& ParentWindow, const TArray<ULocalizationTarget*>& Targets)"
  },
  {
    "label": "ImportDialogueForTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportDialogueForTarget(const TSharedRef<SWindow>& ParentWindow, ULocalizationTarget* const Target)"
  },
  {
    "label": "ImportDialogueForCulture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportDialogueForCulture(const TSharedRef<SWindow>& ParentWindow, ULocalizationTarget* const Target, const FString& CultureName)"
  },
  {
    "label": "GenerateWordCountReportsForTargets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateWordCountReportsForTargets(const TSharedRef<SWindow>& ParentWindow, const TArray<ULocalizationTarget*>& Targets)"
  },
  {
    "label": "GenerateWordCountReportForTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateWordCountReportForTarget(const TSharedRef<SWindow>& ParentWindow, ULocalizationTarget* const Target)"
  },
  {
    "label": "CompileTextForTargets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileTextForTargets(const TSharedRef<SWindow>& ParentWindow, const TArray<ULocalizationTarget*>& Targets)"
  },
  {
    "label": "CompileTextForTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileTextForTarget(const TSharedRef<SWindow>& ParentWindow, ULocalizationTarget* const Target)"
  },
  {
    "label": "CompileTextForCulture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileTextForCulture(const TSharedRef<SWindow>& ParentWindow, ULocalizationTarget* const Target, const FString& CultureName)"
  }
]