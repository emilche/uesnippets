[
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FShowFlagData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShowFlagData"
  },
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "COMMONMENUEXTENSIONS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COMMONMENUEXTENSIONS_API"
  },
  {
    "label": "FShowFlagCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShowFlagCommand"
  },
  {
    "label": "FShowFlagCommand()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" EditorViewportClient . h \" # include \" Framework / Commands / Commands . h \" # include \" Framework / Commands / UICommandInfo . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" ShowFlagFilter . h \" # include \" ShowFlags . h \" # include \" Templates / Function . h \" # include \" Templates / SharedPointer . h \" # include \" Textures / SlateIcon . h \" # include \" UObject / NameTypes . h \" class FEditorViewportClient ; class FShowFlagData ; class FUICommandInfo ; class FUICommandList ; class UToolMenu ; struct FToolMenuSection ; class FShowFlagMenuCommands : public TCommands<FShowFlagMenuCommands> { public : struct FShowFlagCommand { FEngineShowFlags::EShowFlag FlagIndex ; TSharedPtr<FUICommandInfo> ShowMenuItem ; FText LabelOverride ;)",
    "insertText": "FShowFlagCommand(FEngineShowFlags::EShowFlag InFlagIndex, const TSharedPtr<FUICommandInfo>& InShowMenuItem, const FText& InLabelOverride) : FlagIndex(InFlagIndex), ShowMenuItem(InShowMenuItem), LabelOverride(InLabelOverride)"
  },
  {
    "label": "FShowFlagCommand()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FShowFlagCommand(FEngineShowFlags::EShowFlag InFlagIndex, const TSharedPtr<FUICommandInfo>& InShowMenuItem) : FlagIndex(InFlagIndex), ShowMenuItem(InShowMenuItem), LabelOverride()"
  },
  {
    "label": "FShowFlagMenuCommands()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "FShowFlagMenuCommands()"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCommands()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands(FUICommandList& CommandList, const TSharedPtr<FEditorViewportClient>& Client)"
  },
  {
    "label": "BuildShowFlagsMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildShowFlagsMenu(UToolMenu* Menu, const FShowFlagFilter& Filter = FShowFlagFilter(FShowFlagFilter::IncludeAllFlagsByDefault))"
  },
  {
    "label": "PopulateCommonShowFlagsSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateCommonShowFlagsSection(FToolMenuSection& Section, const FShowFlagFilter& Filter = FShowFlagFilter(FShowFlagFilter::IncludeAllFlagsByDefault))"
  },
  {
    "label": "PopulateAllShowFlagsSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateAllShowFlagsSection(FToolMenuSection& Section, const FShowFlagFilter& Filter = FShowFlagFilter(FShowFlagFilter::IncludeAllFlagsByDefault))"
  },
  {
    "label": "StaticCreateShowFlagsSubMenu()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "StaticCreateShowFlagsSubMenu(UToolMenu* Menu, TArray<uint32> FlagIndices, int32 EntryOffset)"
  },
  {
    "label": "ToggleShowFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowFlag(TWeakPtr<FEditorViewportClient> WeakClient, FEngineShowFlags::EShowFlag EngineShowFlagIndex)"
  },
  {
    "label": "IsShowFlagEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowFlagEnabled(TWeakPtr<FEditorViewportClient> WeakClient, FEngineShowFlags::EShowFlag EngineShowFlagIndex)"
  },
  {
    "label": "GetShowFlagIcon()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetShowFlagIcon(const FShowFlagData& Flag)"
  },
  {
    "label": "CreateShowFlagCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateShowFlagCommands()"
  },
  {
    "label": "UpdateCustomShowFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCustomShowFlags()"
  },
  {
    "label": "CreateSubMenuIfRequired()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSubMenuIfRequired(FToolMenuSection& Section, const FShowFlagFilter& Filter, EShowFlagGroup Group, const FName SubMenuName, const FText& MenuLabel, const FText& ToolTip, const FName IconName)"
  },
  {
    "label": "CreateShowFlagsSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateShowFlagsSubMenu(UToolMenu* Menu, TArray<uint32> MenuCommands, int32 EntryOffset)"
  }
]