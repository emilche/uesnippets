[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSwizzleMask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSwizzleMask"
  },
  {
    "label": "FEmitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitter"
  },
  {
    "label": "FPrivate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrivate"
  },
  {
    "label": "XYZ()",
    "kind": "Method",
    "detail": "Function (FSwizzleMask)",
    "insertText": "XYZ()"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(EVectorComponent Component)"
  },
  {
    "label": "FEmitter()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FEmitter(FMaterialIRModuleBuilderImpl* InBuilder, UMaterial* InMaterial, FMaterialIRModule* InModule)"
  },
  {
    "label": "CheckValueValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckValueValid(const FValue* Value)"
  },
  {
    "label": "CheckInputIsScalar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckInputIsScalar(const FExpressionInput* Input, FValue* InputValue)"
  },
  {
    "label": "CheckInputIsScalar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckInputIsScalar(const FExpressionInput* Input, FValue* InputValue, EScalarKind Kind)"
  },
  {
    "label": "CheckInputTypeIs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckInputTypeIs(const FExpressionInput* Input, FValue* InputValue, ETypeKind Kind)"
  },
  {
    "label": "GetCommonPrimitiveType()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "GetCommonPrimitiveType(FPrimitiveTypePtr A, FPrimitiveTypePtr B)"
  },
  {
    "label": "Error()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Error(FString Message)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  }
]