[
  {
    "label": "FAsyncTaskNotification",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncTaskNotification"
  },
  {
    "label": "UInterchangeBlueprintPipelineBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeBlueprintPipelineBase"
  },
  {
    "label": "UInterchangeFactoryBaseNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeFactoryBaseNode"
  },
  {
    "label": "UInterchangePipelineBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangePipelineBase"
  },
  {
    "label": "UInterchangePythonPipelineBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangePythonPipelineBase"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FScopedInterchangeImportEnableState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedInterchangeImportEnableState"
  },
  {
    "label": "FScopedSourceData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedSourceData"
  },
  {
    "label": "FScopedTranslator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedTranslator"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FImportAsyncHelperData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportAsyncHelperData"
  },
  {
    "label": "FImportResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImportResult"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FImportAsyncHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImportAsyncHelper"
  },
  {
    "label": "FImportAsyncHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImportAsyncHelper"
  },
  {
    "label": "FImportAsyncHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImportAsyncHelper"
  },
  {
    "label": "member",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "member"
  },
  {
    "label": "instanced",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "instanced"
  },
  {
    "label": "FImportedObjectInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportedObjectInfo"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "UInterchangePipelineStackOverride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangePipelineStackOverride"
  },
  {
    "label": "FImportAssetParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportAssetParameters"
  },
  {
    "label": "UInterchangeManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeManager"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "multiple",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "multiple"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "multiple",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "multiple"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "multiple",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "multiple"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "multiple",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "multiple"
  },
  {
    "label": "representing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "representing"
  },
  {
    "label": "whose",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "whose"
  },
  {
    "label": "if",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "if"
  },
  {
    "label": "FQueuedTaskData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQueuedTaskData"
  },
  {
    "label": "TStrongObjectPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TStrongObjectPtr"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "DECLARE_TS_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (thread)",
    "insertText": "DECLARE_TS_MULTICAST_DELEGATE_TwoParams(FOnSanitizeName, FString& /*NameToSanitize*/, const ESanitizeNameTypeFlags /*TypeName*/)"
  },
  {
    "label": "FScopedInterchangeImportEnableState()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FScopedInterchangeImportEnableState(const bool bScopeValue)"
  },
  {
    "label": "FScopedSourceData()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FScopedSourceData(const FString& Filename)"
  },
  {
    "label": "FScopedTranslator()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FScopedTranslator(const UInterchangeSourceData* SourceData)"
  },
  {
    "label": "FImportResult()",
    "kind": "Method",
    "detail": "Function (INTERCHANGEENGINE_API)",
    "insertText": "FImportResult()"
  },
  {
    "label": "SetInProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInProgress()"
  },
  {
    "label": "SetDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDone()"
  },
  {
    "label": "WaitUntilDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilDone(bool bSynchronous = false)"
  },
  {
    "label": "AddImportedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddImportedObject(UObject* ImportedObject)"
  },
  {
    "label": "SetAsyncHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsyncHelper(TWeakPtr<class FImportAsyncHelper> InAsyncHelper)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"UE::Interchange::FImportResult\")"
  },
  {
    "label": "FImportAsyncHelper()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FImportAsyncHelper()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"UE::Interchange::FImportAsyncHelper\")"
  },
  {
    "label": "IsClassImportAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassImportAllowed(UClass* Class)"
  },
  {
    "label": "AddCreatedPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCreatedPackage(const FString& PackageName, UPackage* Package)"
  },
  {
    "label": "AddCreatedFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCreatedFactory(const FString& FactoryNodeUniqueId, UInterchangeFactoryBase* Factory)"
  },
  {
    "label": "SendAnalyticImportEndData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendAnalyticImportEndData()"
  },
  {
    "label": "ReleaseTranslatorsSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseTranslatorsSource()"
  },
  {
    "label": "GetCompletionTaskGraphEvent()",
    "kind": "Method",
    "detail": "Function (TArray<uint64>)",
    "insertText": "GetCompletionTaskGraphEvent()"
  },
  {
    "label": "InitCancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitCancel()"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUp()"
  },
  {
    "label": "AddPythonPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPythonPipeline(UInterchangePythonPipelineBase* PipelineBase)"
  },
  {
    "label": "AddBlueprintPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBlueprintPipeline(UInterchangeBlueprintPipelineBase* PipelineBase)"
  },
  {
    "label": "AddPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPipeline(UInterchangePipelineBase* PipelineBase)"
  },
  {
    "label": "UInterchangeManager()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UInterchangeManager(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "IsInterchangeImportEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInterchangeImportEnabled()"
  },
  {
    "label": "SetInterchangeImportEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInterchangeImportEnabled(bool bEnabled)"
  },
  {
    "label": "IsImporting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImporting()"
  },
  {
    "label": "SanitizeNameInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SanitizeNameInline(FString& NameToSanitize, const ESanitizeNameTypeFlags NameType)"
  },
  {
    "label": "RegisterTranslator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterTranslator(const UClass* TranslatorClass)"
  },
  {
    "label": "RegisterFactory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterFactory(const UClass* Factory)"
  },
  {
    "label": "RegisterWriter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterWriter(const UClass* Writer)"
  },
  {
    "label": "RegisterImportDataConverter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterImportDataConverter(const UClass* Converter)"
  },
  {
    "label": "ImportAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportAsset(const FString& ContentPath, const UInterchangeSourceData* SourceData, const FImportAssetParameters& ImportAssetParameters, TArray<UObject*>& OutImportedObjects)"
  },
  {
    "label": "ImportAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportAsset(const FString& ContentPath, const UInterchangeSourceData* SourceData, const FImportAssetParameters& ImportAssetParameters)"
  },
  {
    "label": "ImportAssetWithResult()",
    "kind": "Method",
    "detail": "Function (UE::Interchange::FAssetImportResultRef)",
    "insertText": "ImportAssetWithResult(const FString& ContentPath, const UInterchangeSourceData* SourceData, const FImportAssetParameters& ImportAssetParameters)"
  },
  {
    "label": "ImportAssetAsync()",
    "kind": "Method",
    "detail": "Function (UE::Interchange::FAssetImportResultRef)",
    "insertText": "ImportAssetAsync(const FString& ContentPath, const UInterchangeSourceData* SourceData, const FImportAssetParameters& ImportAssetParameters)"
  },
  {
    "label": "ScriptedImportAssetAsync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ScriptedImportAssetAsync(const FString& ContentPath, const UInterchangeSourceData* SourceData, const FImportAssetParameters& ImportAssetParameters)"
  },
  {
    "label": "ImportScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportScene(const FString& ContentPath, const UInterchangeSourceData* SourceData, const FImportAssetParameters& ImportAssetParameters)"
  },
  {
    "label": "ScriptedImportSceneAsync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ScriptedImportSceneAsync(const FString& ContentPath, const UInterchangeSourceData* SourceData, const FImportAssetParameters& ImportAssetParameters)"
  },
  {
    "label": "ImportSceneAsync()",
    "kind": "Method",
    "detail": "Function (UE::Interchange::FSceneImportResultRef>)",
    "insertText": "ImportSceneAsync(const FString& ContentPath, const UInterchangeSourceData* SourceData, const FImportAssetParameters& ImportAssetParameters)"
  },
  {
    "label": "ExportAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportAsset(const UObject* Asset, bool bIsAutomated = false)"
  },
  {
    "label": "ExportScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportScene(const UObject* World, bool bIsAutomated = false)"
  },
  {
    "label": "CreateAsyncHelper()",
    "kind": "Method",
    "detail": "Function (ESPMode::ThreadSafe>)",
    "insertText": "CreateAsyncHelper(const UE::Interchange::FImportAsyncHelperData& Data, const FImportAssetParameters& ImportAssetParameters)"
  },
  {
    "label": "ReleaseAsyncHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseAsyncHelper(TWeakPtr<UE::Interchange::FImportAsyncHelper, ESPMode::ThreadSafe> AsyncHelper)"
  },
  {
    "label": "IsInterchangeActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInterchangeActive()"
  },
  {
    "label": "WarnIfInterchangeIsActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WarnIfInterchangeIsActive()"
  },
  {
    "label": "EnqueuePostImportTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnqueuePostImportTask(TSharedPtr<FInterchangePostImportTask> PostImportTask)"
  },
  {
    "label": "SetReplaceExistingAlldialogAnswer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReplaceExistingAlldialogAnswer(bool bReplaceExistingAllDialogAnswer)"
  },
  {
    "label": "ResetReplaceExistingAlldialogAnswerSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetReplaceExistingAlldialogAnswerSet()"
  },
  {
    "label": "GetReplaceExistingAlldialogAnswer()",
    "kind": "Method",
    "detail": "Function (TOptional<bool>)",
    "insertText": "GetReplaceExistingAlldialogAnswer()"
  },
  {
    "label": "SetEditorUtilities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditorUtilities(UClass* EditorUtilitiesClass)"
  },
  {
    "label": "IsAttended()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAttended()"
  },
  {
    "label": "FindPipelineCandidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindPipelineCandidate(TArray<UClass*>& PipelineCandidates)"
  },
  {
    "label": "CancelAllTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAllTasks()"
  },
  {
    "label": "WaitUntilAllTasksDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAllTasksDone(bool bCancel)"
  },
  {
    "label": "SetActiveMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveMode(bool IsActive)"
  },
  {
    "label": "StartQueuedTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartQueuedTasks(bool bCancelAllTasks = false)"
  },
  {
    "label": "ImportInternal()",
    "kind": "Method",
    "detail": "Function (UE::Interchange::FSceneImportResultRef>)",
    "insertText": "ImportInternal(const FString& ContentPath, const UInterchangeSourceData* SourceData, const FImportAssetParameters& ImportAssetParameters, const UE::Interchange::EImportType ImportType)"
  }
]