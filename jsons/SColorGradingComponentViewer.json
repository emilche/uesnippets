[
  {
    "label": "SColorGradingComponentSpinBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorGradingComponentSpinBox"
  },
  {
    "label": "ADVANCEDWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ADVANCEDWIDGETS_API"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Input / NumericTypeInterface . h \" # include \" Widgets / Input / SNumericEntryBox . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Framework / ColorGrading / ColorGradingCommon . h \" namespace UE::ColorGrading { class SColorGradingComponentSpinBox ; class SColorGradingComponentViewer : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnValueChanged, float)"
  },
  {
    "label": "DECLARE_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_FourParams(FOnDynamicSliderMinMaxValueChanged, float, TWeakPtr<SWidget>, bool, bool)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SColorGradingComponentViewer) : _Value(0) , _MinValue(0) , _MaxValue(2) , _MinFractionalDigits(DefaultMinFractionalDigits) , _MaxFractionalDigits(DefaultMaxFractionalDigits) , _Delta(0) , _ShiftMultiplier(10.f) , _CtrlMultiplier(0.1f) , _SupportDynamicSliderMaxValue(false) , _SupportDynamicSliderMinValue(false) , _SliderExponent(1.f) , _OnValueChanged() , _OnQueryCurrentColor() , _UseCompactDisplay(false) , _AllowSpin(true)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TOptional<float>, Value) SLATE_ATTRIBUTE(EColorGradingComponent, Component) SLATE_ATTRIBUTE(EColorGradingModes, ColorGradingMode) SLATE_ATTRIBUTE(TOptional<float>, MinValue) SLATE_ATTRIBUTE(TOptional<float>, MaxValue) SLATE_ATTRIBUTE(TOptional<float>, MinSliderValue) SLATE_ATTRIBUTE(TOptional<float>, MaxSliderValue) SLATE_ATTRIBUTE(TOptional<int32>, MinFractionalDigits) SLATE_ATTRIBUTE(TOptional<int32>, MaxFractionalDigits) SLATE_ATTRIBUTE(float, Delta) SLATE_ATTRIBUTE(float, ShiftMultiplier) SLATE_ATTRIBUTE(float, CtrlMultiplier) SLATE_ATTRIBUTE(int32, LinearDeltaSensitivity) SLATE_ATTRIBUTE(bool, SupportDynamicSliderMaxValue) SLATE_ATTRIBUTE(bool, SupportDynamicSliderMinValue) SLATE_EVENT(FOnDynamicSliderMinMaxValueChanged, OnDynamicSliderMaxValueChanged) SLATE_EVENT(FOnDynamicSliderMinMaxValueChanged, OnDynamicSliderMinValueChanged) SLATE_ATTRIBUTE(float, SliderExponent) SLATE_ATTRIBUTE(float, SliderExponentNeutralValue) SLATE_ATTRIBUTE(TOptional<float>, WheelStep) SLATE_EVENT(FOnValueChanged, OnValueChanged) SLATE_EVENT(FSimpleDelegate, OnBeginSliderMovement) SLATE_EVENT(FOnValueChanged, OnEndSliderMovement) SLATE_EVENT(FOnGetCurrentVector4Value, OnQueryCurrentColor) SLATE_ARGUMENT(TSharedPtr<INumericTypeInterface<float>>, TypeInterface) SLATE_ARGUMENT(bool, UseCompactDisplay) SLATE_ARGUMENT(bool, AllowSpin) SLATE_END_ARGS() SColorGradingComponentViewer()"
  },
  {
    "label": "SColorGradingComponentViewer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SColorGradingComponentViewer()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetMaxSliderValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaxSliderValue()"
  },
  {
    "label": "GetMinSliderValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMinSliderValue()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (private : float)",
    "insertText": "GetValue()"
  },
  {
    "label": "GetComponentLabelText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetComponentLabelText()"
  },
  {
    "label": "GetComponentToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetComponentToolTipText()"
  }
]