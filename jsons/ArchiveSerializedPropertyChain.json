[
  {
    "label": "FArchiveSerializedPropertyChain",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FArchiveSerializedPropertyChain"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FArchiveSerializedPropertyChain()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" struct FArchiveSerializedPropertyChain { public :)",
    "insertText": "FArchiveSerializedPropertyChain() : SerializedPropertyChainUpdateCount(0) #if WITH_EDITORONLY_DATA , EditorOnlyPropertyStack(0)"
  },
  {
    "label": "PushProperty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PushProperty(class FProperty* InProperty, const bool bIsEditorOnlyProperty)"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (SerializedPropertyChain .)",
    "insertText": "Push(InProperty)"
  },
  {
    "label": "IncrementUpdateCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementUpdateCount()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA)",
    "insertText": "if(bIsEditorOnlyProperty)"
  },
  {
    "label": "PopProperty()",
    "kind": "Method",
    "detail": "Function (+ + EditorOnlyPropertyStack ; } # endif } void)",
    "insertText": "PopProperty(class FProperty* InProperty, const bool bIsEditorOnlyProperty)"
  },
  {
    "label": "Pop()",
    "kind": "Method",
    "detail": "Function (SerializedPropertyChain .)",
    "insertText": "Pop(EAllowShrinking::No)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (- - EditorOnlyPropertyStack ;)",
    "insertText": "check(EditorOnlyPropertyStack >= 0)"
  },
  {
    "label": "GetPropertyFromStack()",
    "kind": "Method",
    "detail": "Function (} # endif } class FProperty*)",
    "insertText": "GetPropertyFromStack(const int32 InStackIndex)"
  },
  {
    "label": "GetPropertyFromRoot()",
    "kind": "Method",
    "detail": "Function (} class FProperty*)",
    "insertText": "GetPropertyFromRoot(const int32 InRootIndex)"
  },
  {
    "label": "GetUpdateCount()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetUpdateCount()"
  },
  {
    "label": "GetRootIterator()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA return EditorOnlyPropertyStack> 0 ; # else return false ; # endif } TArray<class FProperty*,TInlineAllocator<8>>::TConstIterator)",
    "insertText": "GetRootIterator()"
  }
]