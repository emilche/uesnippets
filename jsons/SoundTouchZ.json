[
  {
    "label": "FSoundTouch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundTouch"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImpl"
  },
  {
    "label": "FSoundTouch()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSoundTouch()"
  },
  {
    "label": "GetVersionId()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "GetVersionId()"
  },
  {
    "label": "SetRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRate(double newRate)"
  },
  {
    "label": "SetTempo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTempo(double newTempo)"
  },
  {
    "label": "SetRateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRateChange(double newRate)"
  },
  {
    "label": "SetTempoChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTempoChange(double newTempo)"
  },
  {
    "label": "SetPitch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPitch(double newPitch)"
  },
  {
    "label": "SetPitchOctaves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPitchOctaves(double newPitch)"
  },
  {
    "label": "SetPitchSemiTones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPitchSemiTones(int32_t newPitch)"
  },
  {
    "label": "SetPitchSemiTones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPitchSemiTones(double newPitch)"
  },
  {
    "label": "SetChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetChannels(uint32_t numChannels)"
  },
  {
    "label": "SetSampleRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSampleRate(uint32_t srate)"
  },
  {
    "label": "GetInputOutputSampleRatio()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetInputOutputSampleRatio()"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "PutSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutSamples(const float* samples, uint32_t numSamples)"
  },
  {
    "label": "ReceiveSamples()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "ReceiveSamples(float* output, uint32_t maxSamples)"
  },
  {
    "label": "ReceiveSamples()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "ReceiveSamples(uint32_t maxSamples)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "SetSetting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSetting(ESetting settingId, int32_t value)"
  }
]