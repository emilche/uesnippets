[
  {
    "label": "bf_key_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "bf_key_st"
  },
  {
    "label": "BF_set_key()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_BLOWFISH_H # define HEADER_BLOWFISH_H # include<openssl / opensslconf . h> # ifndef OPENSSL_NO_BF # include<openssl / e_os2 . h> # ifdef __cplusplus \" C \" { # endif # define BF_ENCRYPT 1 # define BF_DECRYPT 0 # define BF_LONG unsigned int # define BF_ROUNDS 1 6 # define BF_BLOCK 8 typedef struct bf_key_st { BF_LONG P [ BF_ROUNDS + 2 ] ; BF_LONG S [ 4* 2 5 6 ] ; } BF_KEY ; void)",
    "insertText": "BF_set_key(BF_KEY *key, int len, const unsigned char *data)"
  },
  {
    "label": "BF_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BF_encrypt(BF_LONG *data, const BF_KEY *key)"
  },
  {
    "label": "BF_decrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BF_decrypt(BF_LONG *data, const BF_KEY *key)"
  },
  {
    "label": "BF_ecb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BF_ecb_encrypt(const unsigned char *in, unsigned char *out, const BF_KEY *key, int enc)"
  },
  {
    "label": "BF_cbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BF_cbc_encrypt(const unsigned char *in, unsigned char *out, long length, const BF_KEY *schedule, unsigned char *ivec, int enc)"
  },
  {
    "label": "BF_cfb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BF_cfb64_encrypt(const unsigned char *in, unsigned char *out, long length, const BF_KEY *schedule, unsigned char *ivec, int *num, int enc)"
  },
  {
    "label": "BF_ofb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BF_ofb64_encrypt(const unsigned char *in, unsigned char *out, long length, const BF_KEY *schedule, unsigned char *ivec, int *num)"
  },
  {
    "label": "BF_options()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "BF_options(void)"
  }
]