[
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "STextComboBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextComboBox"
  },
  {
    "label": "IDetailPropertyRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailPropertyRow"
  },
  {
    "label": "FStyleColorListCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStyleColorListCustomization"
  },
  {
    "label": "FEditorStyleSettingsCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorStyleSettingsCustomization"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IDetailCustomization . h \" # include \" IPropertyTypeCustomization . h \" # include \" Styling / StyleColors . h \" # include \" Widgets / Notifications / SNotificationList . h \" class IDetailLayoutBuilder ; class STextComboBox ; class IDetailPropertyRow ; # if ALLOW_THEMES)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnThemeEditorClosed, bool)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> PropertyHandle, FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> PropertyHandle, IDetailChildrenBuilder& ChildBuilder, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "OnResetColorToDefault()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnResetColorToDefault(TSharedPtr<IPropertyHandle> Handle, EStyleColor Color)"
  },
  {
    "label": "IsResetToDefaultVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsResetToDefaultVisible(TSharedPtr<IPropertyHandle> Handle, EStyleColor Color)"
  },
  {
    "label": "FEditorStyleSettingsCustomization()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FEditorStyleSettingsCustomization()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailLayout)"
  },
  {
    "label": "RefreshComboBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshComboBox()"
  },
  {
    "label": "PromptToImportTheme()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PromptToImportTheme(const FString& ImportPath)"
  },
  {
    "label": "GenerateThemeOptions()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "GenerateThemeOptions(TSharedPtr<FString>& OutSelectedTheme)"
  },
  {
    "label": "MakeThemePickerRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeThemePickerRow(IDetailPropertyRow& PropertyRow)"
  },
  {
    "label": "OnExportThemeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnExportThemeClicked()"
  },
  {
    "label": "OnImportThemeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnImportThemeClicked()"
  },
  {
    "label": "OnDeleteThemeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDeleteThemeClicked()"
  },
  {
    "label": "OnDuplicateAndEditThemeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDuplicateAndEditThemeClicked()"
  },
  {
    "label": "OnEditThemeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnEditThemeClicked()"
  },
  {
    "label": "GetTextLabelForThemeEntry()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTextLabelForThemeEntry(TSharedPtr<FString> Entry)"
  },
  {
    "label": "OnThemePicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnThemePicked(TSharedPtr<FString> NewSelection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OpenThemeEditorWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenThemeEditorWindow(FOnThemeEditorClosed OnThemeEditorClosed)"
  },
  {
    "label": "IsThemeEditingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsThemeEditingEnabled()"
  },
  {
    "label": "OnThemeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnThemeChanged(const FGuid ThemeId)"
  },
  {
    "label": "ShowNotification()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ShowNotification(const FText& Text, SNotificationItem::ECompletionState CompletionState)"
  }
]