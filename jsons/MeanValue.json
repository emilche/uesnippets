[
  {
    "label": "FMeanValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeanValue"
  },
  {
    "label": "FMeanValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Math / UnrealMathUtility . h \" namespace BuildPatchServices { class FMeanValue { public :)",
    "insertText": "FMeanValue() : ReliabilityCount(10) , Count(0) , Total(0) , TotalSqs(0)"
  },
  {
    "label": "FMeanValue()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMeanValue(uint64 InReliabilityCount) : ReliabilityCount(InReliabilityCount) , Count(0) , Total(0) , TotalSqs(0)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "IsReliable()",
    "kind": "Method",
    "detail": "Function (Count = 0 ; Total = 0 ; TotalSqs = 0 ; } bool)",
    "insertText": "IsReliable()"
  },
  {
    "label": "GetMean()",
    "kind": "Method",
    "detail": "Function (Mean =)",
    "insertText": "GetMean()"
  },
  {
    "label": "GetStd()",
    "kind": "Method",
    "detail": "Function (Std =)",
    "insertText": "GetStd(Mean)"
  },
  {
    "label": "AddSample()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddSample(double Sample)"
  }
]