[
  {
    "label": "FEvolutionLinearSystemSolverParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEvolutionLinearSystemSolverParameters"
  },
  {
    "label": "FEvolutionLinearSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEvolutionLinearSystem"
  },
  {
    "label": "FEvolutionLinearSystem()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FEvolutionLinearSystem(const FSolverParticlesRange& Particles)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FSolverParticlesRange& Particles, const FSolverReal Dt, bool bInFirstNewtonIteration, const FEvolutionLinearSystemSolverParameters& Params)"
  },
  {
    "label": "AddForce()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddForce(const FSolverParticlesRange& Particles, const FSolverVec3& Force, int32 ParticleIndex, const FSolverReal Dt)"
  },
  {
    "label": "AddSymmetricForceDerivative()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSymmetricForceDerivative(const FSolverParticlesRange& Particles, const FSolverMatrix33* const Df1Dx2, const FSolverMatrix33* const Df1Dv2, int32 ParticleIndex1, int32 ParticleIndex2, const FSolverReal Dt)"
  },
  {
    "label": "Solve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Solve(FSolverParticlesRange& Particles, const FSolverReal Dt)"
  },
  {
    "label": "CalculateCompactIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateCompactIndices(const FSolverParticlesRange& Particles)"
  }
]