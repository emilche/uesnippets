[
  {
    "label": "FDatasmithFacadeScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithFacadeScene"
  },
  {
    "label": "FDatasmithFacadeEndpointObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithFacadeEndpointObserver"
  },
  {
    "label": "DATASMITHFACADE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHFACADE_API"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DatasmithDirectLink . h \" # include \" CoreTypes . h \" class FDatasmithFacadeScene ; class FDatasmithFacadeEndpointObserver ; class FDatasmithFacadeDirectLink { public : bool)",
    "insertText": "Init()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init(bool bUseDatasmithExporterUI, const TCHAR* RemoteEngineDirPath)"
  },
  {
    "label": "ValidateCommunicationSetup()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ValidateCommunicationSetup()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Shutdown()"
  },
  {
    "label": "InitializeForScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeForScene(FDatasmithFacadeScene* FacadeScene)"
  },
  {
    "label": "UpdateScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateScene(FDatasmithFacadeScene* FacadeScene)"
  },
  {
    "label": "CloseCurrentSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseCurrentSource()"
  },
  {
    "label": "AddEndpointObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEndpointObserver(FDatasmithFacadeEndpointObserver* Observer)"
  },
  {
    "label": "RemoveEndpointObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEndpointObserver(FDatasmithFacadeEndpointObserver* Observer)"
  }
]