[
  {
    "label": "IResimCacheBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IResimCacheBase"
  },
  {
    "label": "IResimCacheBase()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" ParticleHandle . h \" namespace Chaos { class IResimCacheBase { public :)",
    "insertText": "IResimCacheBase() : bIsResimming(false)"
  },
  {
    "label": "IResimCacheBase()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "IResimCacheBase()"
  },
  {
    "label": "ResetCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCache()"
  },
  {
    "label": "IsResimming()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsResimming()"
  },
  {
    "label": "GetDesyncedView()",
    "kind": "Method",
    "detail": "Function (bIsResimming = bInResimming ; } const TParticleView<TGeometryParticles<FReal,3>>&)",
    "insertText": "GetDesyncedView()"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (DesyncedParticles =)",
    "insertText": "MoveTemp(InDesyncedParticles)"
  },
  {
    "label": "MakeParticleView()",
    "kind": "Method",
    "detail": "Function (TArray<TSOAView<TGeometryParticles<FReal,3>>> TmpArray = { {& DesyncedParticles } } ; DesyncedView =)",
    "insertText": "MakeParticleView(MoveTemp(TmpArray))"
  }
]