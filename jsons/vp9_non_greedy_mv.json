[
  {
    "label": "Status",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Status"
  },
  {
    "label": "MotionField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MotionField"
  },
  {
    "label": "MotionFieldInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MotionFieldInfo"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_ENCODER_VP9_NON_GREEDY_MV_H_ # define VPX_VP9_ENCODER_VP9_NON_GREEDY_MV_H_ # include \" vp9 / common / vp9_enums . h \" # include \" vp9 / common / vp9_blockd . h \" # include \" vpx_scale / yv12config . h \" # include \" vpx_dsp / variance . h \" # ifdef __cplusplus \" C \" { # endif # define NB_MVS_NUM 4 # define LOG2_PRECISION 2 0 # define MF_LOCAL_STRUCTURE_SIZE 4 # define SQUARE_BLOCK_SIZES 4 typedef enum Status { STATUS_OK = 0,STATUS_FAILED = 1 } Status ; typedef struct MotionField { int ready ; BLOCK_SIZE bsize ; int block_rows ; int block_cols ; int block_num ;)",
    "insertText": "int(*local_structure)"
  },
  {
    "label": "MotionField()",
    "kind": "Method",
    "detail": "Function (int_mv* mf ; int* set_mv ; int mv_log_scale ; } MotionField ; typedef struct MotionFieldInfo { int frame_num ; int allocated ;)",
    "insertText": "MotionField(*motion_field_array)"
  },
  {
    "label": "get_square_block_idx()",
    "kind": "Method",
    "detail": "Function (} MotionFieldInfo ; typedef struct { float row,col ; } FloatMV ; int)",
    "insertText": "get_square_block_idx(BLOCK_SIZE bsize)"
  },
  {
    "label": "vp9_alloc_motion_field()",
    "kind": "Method",
    "detail": "Function (Status)",
    "insertText": "vp9_alloc_motion_field(MotionField *motion_field, BLOCK_SIZE bsize, int block_rows, int block_cols)"
  },
  {
    "label": "vp9_free_motion_field()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_free_motion_field(MotionField *motion_field)"
  },
  {
    "label": "vp9_free_motion_field_info()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_free_motion_field_info(MotionFieldInfo *motion_field_info)"
  },
  {
    "label": "vp9_nb_mvs_inconsistency()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "vp9_nb_mvs_inconsistency(const MV *mv, const int_mv *nb_full_mvs, int mv_num)"
  },
  {
    "label": "vp9_get_smooth_motion_field()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_get_smooth_motion_field(const MV *search_mf, const int (*M)[MF_LOCAL_STRUCTURE_SIZE], int rows, int cols, BLOCK_SIZE bize, float alpha, int num_iters, MV *smooth_mf)"
  },
  {
    "label": "vp9_get_local_structure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_get_local_structure(const YV12_BUFFER_CONFIG *cur_frame, const YV12_BUFFER_CONFIG *ref_frame, const MV *search_mf, const vp9_variance_fn_ptr_t *fn_ptr, int rows, int cols, BLOCK_SIZE bsize, int (*M)[MF_LOCAL_STRUCTURE_SIZE])"
  },
  {
    "label": "vp9_motion_field_info_get_motion_field()",
    "kind": "Method",
    "detail": "Function (MotionField*)",
    "insertText": "vp9_motion_field_info_get_motion_field(MotionFieldInfo *motion_field_info, int frame_idx, int rf_idx, BLOCK_SIZE bsize)"
  },
  {
    "label": "vp9_motion_field_mi_set_mv()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_motion_field_mi_set_mv(MotionField *motion_field, int mi_row, int mi_col, int_mv mv)"
  },
  {
    "label": "vp9_motion_field_reset_mvs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_motion_field_reset_mvs(MotionField *motion_field)"
  },
  {
    "label": "vp9_motion_field_get_mv()",
    "kind": "Method",
    "detail": "Function (int_mv)",
    "insertText": "vp9_motion_field_get_mv(const MotionField *motion_field, int brow, int bcol)"
  },
  {
    "label": "vp9_motion_field_mi_get_mv()",
    "kind": "Method",
    "detail": "Function (int_mv)",
    "insertText": "vp9_motion_field_mi_get_mv(const MotionField *motion_field, int mi_row, int mi_col)"
  },
  {
    "label": "vp9_motion_field_is_mv_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_motion_field_is_mv_set(const MotionField *motion_field, int brow, int bcol)"
  }
]