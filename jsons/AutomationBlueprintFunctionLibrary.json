[
  {
    "label": "ACameraActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ACameraActor"
  },
  {
    "label": "FAutomationTaskStatusBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationTaskStatusBase"
  },
  {
    "label": "FUNCTIONALTESTING_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUNCTIONALTESTING_API"
  },
  {
    "label": "FAutomationWaitForLoadingOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAutomationWaitForLoadingOptions"
  },
  {
    "label": "FConsoleVariableSwapperTempl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConsoleVariableSwapperTempl"
  },
  {
    "label": "FAutomationTestScreenshotEnvSetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationTestScreenshotEnvSetup"
  },
  {
    "label": "FAutomationViewExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationViewExtension"
  },
  {
    "label": "FAutomationTaskStatusBase()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AutomationScreenshotOptions . h \" # include \" CoreMinimal . h \" # include \" Engine / EngineBaseTypes . h \" # include \" Engine / LatentActionManager . h \" # include \" HAL / IConsoleManager . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" Misc / AutomationTest . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / ObjectMacros . h \" # include \" AutomationBlueprintFunctionLibrary . generated . h \" class ACameraActor ; class FAutomationTaskStatusBase { public : ~)",
    "insertText": "FAutomationTaskStatusBase()"
  },
  {
    "label": "IsDone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDone()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual ~UAutomationEditorTask()"
  },
  {
    "label": "BindTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindTask(TUniquePtr<FAutomationTaskStatusBase> inTask)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (private : TUniquePtr<FAutomationTaskStatusBase> Task ; } ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY(BlueprintReadWrite, Category = \"Automation\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(meta=(ScriptName=\"AutomationLibrary\"))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UFUNCTION(BlueprintCallable, Category = \"Automation\") static void FinishLoadingBeforeScreenshot()"
  },
  {
    "label": "TakeAutomationScreenshotInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TakeAutomationScreenshotInternal(UObject* WorldContextObject, const FString& ScreenShotName, const FString& Notes, FAutomationScreenshotOptions Options)"
  },
  {
    "label": "BuildScreenshotData()",
    "kind": "Method",
    "detail": "Function (FAutomationScreenshotData)",
    "insertText": "BuildScreenshotData(const FString& MapOrContext, const FString& ScreenShotName, int32 Width, int32 Height)"
  },
  {
    "label": "BuildScreenshotData()",
    "kind": "Method",
    "detail": "Function (FAutomationScreenshotData)",
    "insertText": "BuildScreenshotData(UWorld* InWorld, const FString& ScreenShotName, int32 Width, int32 Height)"
  },
  {
    "label": "GetAutomationScreenshotSize()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetAutomationScreenshotSize(const FAutomationScreenshotOptions& Options)"
  },
  {
    "label": "TakeAutomationScreenshotOfUI_Immediate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TakeAutomationScreenshotOfUI_Immediate(UObject* WorldContextObject, const FString& Name, const FAutomationScreenshotOptions& Options)"
  },
  {
    "label": "FConsoleVariableSwapperTempl()",
    "kind": "Method",
    "detail": "Function (} ; # if WITH_AUTOMATION_TESTS template<T> class FConsoleVariableSwapperTempl { public :)",
    "insertText": "FConsoleVariableSwapperTempl(FString InConsoleVariableName)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(T Value)"
  },
  {
    "label": "Restore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Restore()"
  },
  {
    "label": "FAutomationTestScreenshotEnvSetup()",
    "kind": "Method",
    "detail": "Function (private : bool bModified ; FString ConsoleVariableName ; T OriginalValue ; } ; class FAutomationTestScreenshotEnvSetup { public :)",
    "insertText": "FAutomationTestScreenshotEnvSetup()"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(UWorld* InWorld, FAutomationScreenshotOptions& InOutOptions)"
  }
]