[
  {
    "label": "VP9_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9_COMP"
  },
  {
    "label": "VP9Common",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9Common"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_ENCODER_VP9_QUANTIZE_H_ # define VPX_VP9_ENCODER_VP9_QUANTIZE_H_ # include \" . / vpx_config . h \" # include \" vp9 / encoder / vp9_block . h \" # ifdef __cplusplus \" C \" { # endif typedef struct {)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, y_quant[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, y_quant_shift[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, y_zbin[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, y_round[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, y_quant_fp[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, uv_quant_fp[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, y_round_fp[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, uv_round_fp[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, uv_quant[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, uv_quant_shift[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, uv_zbin[QINDEX_RANGE][8])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, uv_round[QINDEX_RANGE][8])"
  },
  {
    "label": "vp9_regular_quantize_b_4x4()",
    "kind": "Method",
    "detail": "Function (} QUANTS ; void)",
    "insertText": "vp9_regular_quantize_b_4x4(MACROBLOCK *x, int plane, int block, const int16_t *scan, const int16_t *iscan)"
  },
  {
    "label": "vp9_frame_init_quantizer()",
    "kind": "Method",
    "detail": "Function (struct VP9_COMP ; struct VP9Common ; void)",
    "insertText": "vp9_frame_init_quantizer(struct VP9_COMP *cpi)"
  },
  {
    "label": "vp9_init_plane_quantizers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_init_plane_quantizers(struct VP9_COMP *cpi, MACROBLOCK *x)"
  },
  {
    "label": "vp9_init_quantizer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_init_quantizer(struct VP9_COMP *cpi)"
  },
  {
    "label": "vp9_set_quantizer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_set_quantizer(struct VP9_COMP *cm, int q)"
  },
  {
    "label": "vp9_quantizer_to_qindex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_quantizer_to_qindex(int quantizer)"
  },
  {
    "label": "vp9_qindex_to_quantizer()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_qindex_to_quantizer(int qindex)"
  }
]