[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "ISceneOutliner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneOutliner"
  },
  {
    "label": "WORLDPARTITIONEDITOR_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WORLDPARTITIONEDITOR_API"
  },
  {
    "label": "FWorldPartitionActorFilterPropertyTypeCustomization()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IPropertyTypeCustomization . h \" # include \" Internationalization / Text . h \" # include \" PropertyEditorModule . h \" # include \" Templates / SharedPointer . h \" # include \" WorldPartition / Filter / WorldPartitionActorFilterMode . h \" class FDetailWidgetRow ; class IDetailChildrenBuilder ; class IPropertyHandle ; class ISceneOutliner ; struct FWorldPartitionActorFilterPropertyTypeCustomization : public IPropertyTypeCustomization { public : ~)",
    "insertText": "FWorldPartitionActorFilterPropertyTypeCustomization()"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> StructPropertyHandle, FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, IDetailChildrenBuilder& StructBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "CreateModeFilter()",
    "kind": "Method",
    "detail": "Function (} private : TSharedPtr<FWorldPartitionActorFilterMode::FFilter>)",
    "insertText": "CreateModeFilter(TArray<UObject*> OuterObjects)"
  },
  {
    "label": "ApplyFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyFilter(TSharedRef<IPropertyHandle> PropertyHandle, const FWorldPartitionActorFilterMode& Mode)"
  }
]