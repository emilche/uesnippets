[
  {
    "label": "TaskQueueFrameDecodeScheduler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskQueueFrameDecodeScheduler"
  },
  {
    "label": "TaskQueueFrameDecodeScheduler()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_TASK_QUEUE_FRAME_DECODE_SCHEDULER_H_ # define VIDEO_TASK_QUEUE_FRAME_DECODE_SCHEDULER_H_ # include \" video / frame_decode_scheduler . h \" namespace webrtc { class TaskQueueFrameDecodeScheduler : public FrameDecodeScheduler { public :)",
    "insertText": "TaskQueueFrameDecodeScheduler(Clock* clock, TaskQueueBase* const bookkeeping_queue)"
  },
  {
    "label": "TaskQueueFrameDecodeScheduler()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "TaskQueueFrameDecodeScheduler()"
  },
  {
    "label": "TaskQueueFrameDecodeScheduler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskQueueFrameDecodeScheduler(const TaskQueueFrameDecodeScheduler&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TaskQueueFrameDecodeScheduler&)",
    "insertText": "operator(const TaskQueueFrameDecodeScheduler&)"
  },
  {
    "label": "ScheduledRtpTimestamp()",
    "kind": "Method",
    "detail": "Function (absl::optional<uint32_t>)",
    "insertText": "ScheduledRtpTimestamp()"
  },
  {
    "label": "ScheduleFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleFrame(uint32_t rtp, FrameDecodeTiming::FrameSchedule schedule, FrameReleaseCallback cb)"
  },
  {
    "label": "CancelOutstanding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelOutstanding()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  }
]