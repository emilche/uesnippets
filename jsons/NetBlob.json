[
  {
    "label": "FNetBlob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBlob"
  },
  {
    "label": "FNetSerializationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetSerializationContext"
  },
  {
    "label": "FReplicationStateDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationStateDescriptor"
  },
  {
    "label": "FNetReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetReferenceCollector"
  },
  {
    "label": "FNetBlobManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBlobManager"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "chooses",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "chooses"
  },
  {
    "label": "FNetBlobCreationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetBlobCreationInfo"
  },
  {
    "label": "FNetBlob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBlob"
  },
  {
    "label": "FQuantizedBlobState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuantizedBlobState"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FNetObjectAttachment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectAttachment"
  },
  {
    "label": "Private",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Private"
  },
  {
    "label": "FQuantizedBlobState()",
    "kind": "Method",
    "detail": "Function (IRISCORE_API)",
    "insertText": "FQuantizedBlobState(uint32 Size, uint32 Alignment)"
  },
  {
    "label": "FNetBlob()",
    "kind": "Method",
    "detail": "Function (IRISCORE_API)",
    "insertText": "FNetBlob(const FNetBlobCreationInfo&)"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState(const TRefCountPtr<const FReplicationStateDescriptor>& BlobDescriptor, FQuantizedBlobState&& QuantizedBlobState)"
  },
  {
    "label": "SerializeCreationInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeCreationInfo(FNetSerializationContext& Context, const FNetBlobCreationInfo& CreationInfo)"
  },
  {
    "label": "DeserializeCreationInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeserializeCreationInfo(FNetSerializationContext& Context, FNetBlobCreationInfo& OutCreationInfo)"
  },
  {
    "label": "DeserializeWithObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeserializeWithObject(FNetSerializationContext& Context, FNetRefHandle RefHandle)"
  },
  {
    "label": "Deserialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deserialize(FNetSerializationContext& Context)"
  },
  {
    "label": "GetNetObjectReferenceExports()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetNetObjectReferenceExports()"
  },
  {
    "label": "GetNetTokenExports()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetNetTokenExports()"
  },
  {
    "label": "DeserializeBlob()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeserializeBlob(FNetSerializationContext& Context)"
  },
  {
    "label": "FNetObjectAttachment()",
    "kind": "Method",
    "detail": "Function (IRISCORE_API)",
    "insertText": "FNetObjectAttachment(const FNetBlobCreationInfo&)"
  },
  {
    "label": "DeserializeObjectReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeserializeObjectReference(FNetSerializationContext& Context)"
  },
  {
    "label": "DeserializeSubObjectReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeserializeSubObjectReference(FNetSerializationContext& Context, FNetRefHandle RefHandle)"
  },
  {
    "label": "SetNetObjectReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetObjectReference(const FNetObjectReference& InQueueOwnerReference, const FNetObjectReference& InTargetObjectReference)"
  }
]