[
  {
    "label": "FARSupportInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FARSupportInterface"
  },
  {
    "label": "UAREnvironmentCaptureProbeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAREnvironmentCaptureProbeTexture"
  },
  {
    "label": "UMRMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMRMeshComponent"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "UARTrackedGeometry()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UARTrackedGeometry()"
  },
  {
    "label": "InitializeNativeResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeNativeResource(IARRef* InNativeResource)"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FARMeshUpdatePayload& Payload)"
  },
  {
    "label": "UpdateTrackedGeometryNoMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackedGeometryNoMove(const TSharedRef<FARSupportInterface, ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp)"
  },
  {
    "label": "UpdateTrackedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackedGeometry(const TSharedRef<FARSupportInterface , ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InLocalToTrackingTransform, const FTransform& InAlignmentTransform )"
  },
  {
    "label": "UpdateTrackingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackingState( EARTrackingState NewTrackingState )"
  },
  {
    "label": "UpdateAlignmentTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAlignmentTransform( const FTransform& NewAlignmentTransform )"
  },
  {
    "label": "SetDebugName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDebugName( FName InDebugName )"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(const FString& InName)"
  },
  {
    "label": "SetTrackingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTrackingState(EARTrackingState NewState)"
  },
  {
    "label": "SetUnderlyingMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUnderlyingMesh(UMRMeshComponent* InMRMeshComponent)"
  },
  {
    "label": "UpdateTrackedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackedGeometry(const TSharedRef<FARSupportInterface , ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InLocalToTrackingTransform, const FTransform& InAlignmentTransform, const FVector InCenter, const FVector InExtent )"
  },
  {
    "label": "UpdateTrackedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackedGeometry(const TSharedRef<FARSupportInterface , ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InLocalToTrackingTransform, const FTransform& InAlignmentTransform, const FVector InCenter, const FVector InExtent, const TArray<FVector>& InBoundingPoly, UARPlaneGeometry* InSubsumedBy)"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FARPlaneUpdatePayload& Payload)"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FARPointUpdatePayload& Payload)"
  },
  {
    "label": "UpdateTrackedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackedGeometry(const TSharedRef<FARSupportInterface , ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InLocalToTrackingTransform, const FTransform& InAlignmentTransform)"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FARImageUpdatePayload& Payload)"
  },
  {
    "label": "UpdateTrackedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackedGeometry(const TSharedRef<FARSupportInterface, ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InLocalToTrackingTransform, const FTransform& InAlignmentTransform, FVector2D InEstimatedSize, UARCandidateImage* InDetectedImage)"
  },
  {
    "label": "GetEstimateSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetEstimateSize()"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FARQRCodeUpdatePayload& Payload)"
  },
  {
    "label": "UpdateTrackedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackedGeometry(const TSharedRef<FARSupportInterface, ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InLocalToTrackingTransform, const FTransform& InAlignmentTransform, FVector2D InEstimatedSize, const FString& CodeData, int32 InVersion)"
  },
  {
    "label": "UpdateFaceGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFaceGeometry(const TSharedRef<FARSupportInterface , ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InTransform, const FTransform& InAlignmentTransform, FARBlendShapeMap& InBlendShapes, TArray<FVector>& InVertices, const TArray<int32>& Indices, TArray<FVector2D>& InUVs, const FTransform& InLeftEyeTransform, const FTransform& InRightEyeTransform, const FVector& InLookAtTarget)"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FARFaceUpdatePayload& Payload)"
  },
  {
    "label": "UAREnvironmentCaptureProbe()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UAREnvironmentCaptureProbe()"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FAREnvironmentProbeUpdatePayload& Payload)"
  },
  {
    "label": "UpdateEnvironmentCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEnvironmentCapture(const TSharedRef<FARSupportInterface , ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InLocalToTrackingTransform, const FTransform& InAlignmentTransform, FVector InExtent)"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FARObjectUpdatePayload& Payload)"
  },
  {
    "label": "UpdateTrackedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackedGeometry(const TSharedRef<FARSupportInterface , ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InLocalToTrackingTransform, const FTransform& InAlignmentTransform, UARCandidateObject* InDetectedObject)"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FARPoseUpdatePayload& Payload)"
  },
  {
    "label": "UpdateTrackedPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackedPose(const TSharedRef<FARSupportInterface , ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InLocalToTrackingTransform, const FTransform& InAlignmentTransform, const FARPose3D& InTrackedPose)"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FARMeshUpdatePayload& Payload)"
  },
  {
    "label": "UpdateGeoAnchor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGeoAnchor(const TSharedRef<FARSupportInterface, ESPMode::ThreadSafe>& InTrackingSystem, uint32 FrameNumber, double Timestamp, const FTransform& InLocalToTrackingTransform, const FTransform& InAlignmentTransform,\n\t\t\t\t\t\t float InLongitude, float InLatitude, float InAltitudeMeters, EARAltitudeSource InAltitudeSource)"
  },
  {
    "label": "GetNetworkPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNetworkPayload(FARGeoAnchorUpdatePayload& Payload)"
  }
]