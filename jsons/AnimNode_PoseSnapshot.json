[
  {
    "label": "UAnimInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimInstance"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAnimNode_PoseSnapshot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_PoseSnapshot"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimNodeBase . h \" # include \" Animation / PoseSnapshot . h \" # include \" AnimNode_PoseSnapshot . generated . h \" class UAnimInstance ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (NamedSnapshot,SnapshotPin } ;)",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: ANIMGRAPHRUNTIME_API FAnimNode_PoseSnapshot()"
  },
  {
    "label": "HasPreUpdate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPreUpdate()"
  },
  {
    "label": "Update_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update_AnyThread(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "Evaluate_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate_AnyThread(FPoseContext& Output)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "ApplyPose()",
    "kind": "Method",
    "detail": "Function (private : TArray<int32> SourceBoneMapping ; TArray<FName> TargetBoneNames ; FName MappedSourceMeshName ; FName MappedTargetMeshName ; FName TargetBoneNameMesh ; private : void)",
    "insertText": "ApplyPose(const FPoseSnapshot& PoseSnapshot, FCompactPose& OutPose)"
  },
  {
    "label": "CacheBoneMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBoneMapping(FName SourceMeshName, FName TargetMeshName, const TArray<FName>& InSourceBoneNames, const TArray<FName>& InTargetBoneNames)"
  }
]