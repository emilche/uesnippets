[
  {
    "label": "FDatasmithMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithMesh"
  },
  {
    "label": "IDatasmithActorElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithActorElement"
  },
  {
    "label": "IDatasmithScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithScene"
  },
  {
    "label": "FMeshDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDescription"
  },
  {
    "label": "FRawMesh",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRawMesh"
  },
  {
    "label": "DATASMITHCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHCORE_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DATASMITHCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHCORE_API"
  },
  {
    "label": "EUvGenerationPolicy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EUvGenerationPolicy"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DATASMITHCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHCORE_API"
  },
  {
    "label": "IDatasmithTextureElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithTextureElement"
  },
  {
    "label": "IDatasmithScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithScene"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DATASMITHCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHCORE_API"
  },
  {
    "label": "DATASMITHCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHCORE_API"
  },
  {
    "label": "IDatasmithCameraActorElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithCameraActorElement"
  },
  {
    "label": "IDatasmithScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithScene"
  },
  {
    "label": "IDatasmithLightActorElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithLightActorElement"
  },
  {
    "label": "IDatasmithScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithScene"
  },
  {
    "label": "IDatasmithMeshActorElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithMeshActorElement"
  },
  {
    "label": "IDatasmithScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithScene"
  },
  {
    "label": "IDatasmithCustomActorElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithCustomActorElement"
  },
  {
    "label": "IDatasmithScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithScene"
  },
  {
    "label": "IDatasmithActorElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithActorElement"
  },
  {
    "label": "IDatasmithScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithScene"
  },
  {
    "label": "IDatasmithMaterialIDElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithMaterialIDElement"
  },
  {
    "label": "IDatasmithScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithScene"
  },
  {
    "label": "IDatasmithPostProcessElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithPostProcessElement"
  },
  {
    "label": "IDatasmithScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithScene"
  },
  {
    "label": "generates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "generates"
  },
  {
    "label": "allows",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "allows"
  },
  {
    "label": "DATASMITHCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHCORE_API"
  },
  {
    "label": "DATASMITHCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHCORE_API"
  },
  {
    "label": "SanitizeNameInplace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SanitizeNameInplace(FString& InString)"
  },
  {
    "label": "SanitizeName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizeName(FString InString)"
  },
  {
    "label": "SanitizeObjectName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizeObjectName(FString InString)"
  },
  {
    "label": "SanitizeFileName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizeFileName(FString InString)"
  },
  {
    "label": "SanitizeStringInplace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SanitizeStringInplace(FString& InString)"
  },
  {
    "label": "GetEnterpriseVersionAsInt()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetEnterpriseVersionAsInt()"
  },
  {
    "label": "GetEnterpriseVersionAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEnterpriseVersionAsString(bool bWithChangelist=false)"
  },
  {
    "label": "GetDatasmithFormatVersionAsFloat()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDatasmithFormatVersionAsFloat()"
  },
  {
    "label": "GetDatasmithFormatVersionAsInt()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDatasmithFormatVersionAsInt()"
  },
  {
    "label": "GetDatasmithFormatVersionAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDatasmithFormatVersionAsString()"
  },
  {
    "label": "GetCleanFilenameAndExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCleanFilenameAndExtension(const FString& InFilePath, FString& OutFilename, FString& OutExtension)"
  },
  {
    "label": "AreaTriangle3D()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "AreaTriangle3D(const FVector3f& v0, const FVector3f& v1, const FVector3f& v2)"
  },
  {
    "label": "VecType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VecType(V[2], V[0], V[1])"
  },
  {
    "label": "VecType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VecType(-V[2], V[0], V[1])"
  },
  {
    "label": "VecType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VecType(-V[0], V[1], V[2])"
  },
  {
    "label": "VecType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VecType(V[0], -V[1], V[2])"
  },
  {
    "label": "VecType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VecType(V[0], V[1], V[2])"
  },
  {
    "label": "ConvertTransform()",
    "kind": "Method",
    "detail": "Function (static)",
    "insertText": "ConvertTransform(EModelCoordSystem SourceCoordSystem, const FTransform& LocalTransform)"
  },
  {
    "label": "Axis0()",
    "kind": "Method",
    "detail": "Function (TVector<Type>)",
    "insertText": "Axis0(-NormalXSqr + NormalZSqr + NormalYSqr, -2 * Normal.X * Normal.Y, -2 * Normal.X * Normal.Z)"
  },
  {
    "label": "Axis1()",
    "kind": "Method",
    "detail": "Function (TVector<Type>)",
    "insertText": "Axis1(-2 * Normal.Y * Normal.X, -NormalYSqr + NormalXSqr + NormalZSqr, -2 * Normal.Y * Normal.Z)"
  },
  {
    "label": "Axis2()",
    "kind": "Method",
    "detail": "Function (TVector<Type>)",
    "insertText": "Axis2(-2 * Normal.Z * Normal.X, -2 * Normal.Z * Normal.Y, -NormalZSqr + NormalYSqr + NormalXSqr)"
  },
  {
    "label": "ToRawMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToRawMesh(const FDatasmithMesh& Mesh, FRawMesh& RawMesh, bool bValidateRawMesh = true)"
  },
  {
    "label": "ToMeshDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToMeshDescription(FDatasmithMesh& DsMesh, FMeshDescription& MeshDescription, EUvGenerationPolicy UvGen=EUvGenerationPolicy::Ignore)"
  },
  {
    "label": "IsUVChannelValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUVChannelValid(const FDatasmithMesh& DsMesh, const int32 Channel)"
  },
  {
    "label": "CreateDefaultUVsWithLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDefaultUVsWithLOD(FDatasmithMesh& Mesh)"
  },
  {
    "label": "ExtractVertexPositions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractVertexPositions(const FMeshDescription& Mesh, TArray<FVector3f>& OutPositions)"
  },
  {
    "label": "CalculateTextureHash()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CalculateTextureHash(const TSharedPtr<class IDatasmithTextureElement>& TextureElement)"
  },
  {
    "label": "CalculateTextureHashes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateTextureHashes(const TSharedPtr<class IDatasmithScene>& Scene)"
  },
  {
    "label": "GetChannelTypeComponents()",
    "kind": "Method",
    "detail": "Function (ETransformChannelComponents)",
    "insertText": "GetChannelTypeComponents(EDatasmithTransformChannels Channels, EDatasmithTransformType TransformType)"
  },
  {
    "label": "SetChannelTypeComponents()",
    "kind": "Method",
    "detail": "Function (EDatasmithTransformChannels)",
    "insertText": "SetChannelTypeComponents(ETransformChannelComponents Components, EDatasmithTransformType TransformType)"
  },
  {
    "label": "GetAllCameraActorsFromScene()",
    "kind": "Method",
    "detail": "Function (IDatasmithCameraActorElement>>)",
    "insertText": "GetAllCameraActorsFromScene(const TSharedPtr<class IDatasmithScene>& Scene)"
  },
  {
    "label": "GetAllLightActorsFromScene()",
    "kind": "Method",
    "detail": "Function (IDatasmithLightActorElement>>)",
    "insertText": "GetAllLightActorsFromScene(const TSharedPtr<class IDatasmithScene>& Scene)"
  },
  {
    "label": "GetAllMeshActorsFromScene()",
    "kind": "Method",
    "detail": "Function (IDatasmithMeshActorElement>>)",
    "insertText": "GetAllMeshActorsFromScene(const TSharedPtr<class IDatasmithScene>& Scene)"
  },
  {
    "label": "GetAllCustomActorsFromScene()",
    "kind": "Method",
    "detail": "Function (IDatasmithCustomActorElement>>)",
    "insertText": "GetAllCustomActorsFromScene(const TSharedPtr<class IDatasmithScene>& Scene)"
  },
  {
    "label": "FindActorHierarchy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindActorHierarchy(const IDatasmithScene* Scene, const TSharedPtr<IDatasmithActorElement>& ToFind, TActorHierarchy& OutHierarchy)"
  },
  {
    "label": "IsMaterialIDUsedInScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaterialIDUsedInScene(const TSharedPtr<class IDatasmithScene>& Scene, const TSharedPtr<class IDatasmithMaterialIDElement>& MaterialElement)"
  },
  {
    "label": "IsPostProcessUsedInScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPostProcessUsedInScene(const TSharedPtr<class IDatasmithScene>& Scene, const TSharedPtr<class IDatasmithPostProcessElement>& PostProcessElement)"
  },
  {
    "label": "CleanUpScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpScene(TSharedRef<class IDatasmithScene> Scene, bool bRemoveUnused = false)"
  },
  {
    "label": "GenerateUniqueName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GenerateUniqueName(const FString& BaseName, int32 CharBudget=INT32_MAX)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  }
]