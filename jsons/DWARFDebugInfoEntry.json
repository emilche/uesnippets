[
  {
    "label": "DWARFDebugAranges",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DWARFDebugAranges"
  },
  {
    "label": "DWARFCompileUnit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DWARFCompileUnit"
  },
  {
    "label": "DWARFUnit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DWARFUnit"
  },
  {
    "label": "DWARFContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DWARFContext"
  },
  {
    "label": "DWARFFormValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DWARFFormValue"
  },
  {
    "label": "DWARFDebugInfoEntryInlinedChain",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DWARFDebugInfoEntryInlinedChain"
  },
  {
    "label": "DWARFDebugInfoEntryMinimal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DWARFDebugInfoEntryMinimal"
  },
  {
    "label": "DWARFDebugInfoEntryMinimal()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_LIB_DEBUGINFO_DWARFDEBUGINFOENTRY_H # define LLVM_LIB_DEBUGINFO_DWARFDEBUGINFOENTRY_H # include \" llvm / ADT / SmallVector . h \" # include \" llvm / DebugInfo / DIContext . h \" # include \" llvm / DebugInfo / DWARF / DWARFAbbreviationDeclaration . h \" # include \" llvm / DebugInfo / DWARF / DWARFDebugRangeList . h \" # include \" llvm / Support / DataTypes . h \" namespace llvm { class DWARFDebugAranges ; class DWARFCompileUnit ; class DWARFUnit ; class DWARFContext ; class DWARFFormValue ; struct DWARFDebugInfoEntryInlinedChain ; class DWARFDebugInfoEntryMinimal { uint32_t Offset ; uint32_t SiblingIdx ; const DWARFAbbreviationDeclaration* AbbrevDecl ; public :)",
    "insertText": "DWARFDebugInfoEntryMinimal() : Offset(0), SiblingIdx(0), AbbrevDecl(nullptr)"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "dump(raw_ostream &OS, DWARFUnit *u, unsigned recurseDepth, unsigned indent = 0)"
  },
  {
    "label": "dumpAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dumpAttribute(raw_ostream &OS, DWARFUnit *u, uint32_t *offset_ptr, uint16_t attr, uint16_t form, unsigned indent = 0)"
  },
  {
    "label": "extractFast()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extractFast(const DWARFUnit *U, uint32_t *OffsetPtr)"
  },
  {
    "label": "getTag()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "getTag()"
  },
  {
    "label": "isNULL()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isNULL()"
  },
  {
    "label": "isSubroutineDIE()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isSubroutineDIE()"
  },
  {
    "label": "getOffset()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "getOffset()"
  },
  {
    "label": "getSibling()",
    "kind": "Method",
    "detail": "Function (} const DWARFDebugInfoEntryMinimal*)",
    "insertText": "getSibling()"
  },
  {
    "label": "setSibling()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setSibling(const DWARFDebugInfoEntryMinimal *Sibling)"
  },
  {
    "label": "getAbbreviationDeclarationPtr()",
    "kind": "Method",
    "detail": "Function (SiblingIdx = Sibling - this ; } else SiblingIdx = 0 ; } const DWARFAbbreviationDeclaration*)",
    "insertText": "getAbbreviationDeclarationPtr()"
  },
  {
    "label": "getAttributeValueAsString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getAttributeValueAsString(const DWARFUnit *U, const uint16_t Attr, const char *FailValue)"
  },
  {
    "label": "getAttributeValueAsAddress()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getAttributeValueAsAddress(const DWARFUnit *U, const uint16_t Attr, uint64_t FailValue)"
  },
  {
    "label": "getAttributeValueAsUnsignedConstant()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getAttributeValueAsUnsignedConstant(const DWARFUnit *U, const uint16_t Attr, uint64_t FailValue)"
  },
  {
    "label": "getAttributeValueAsReference()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getAttributeValueAsReference(const DWARFUnit *U, const uint16_t Attr, uint64_t FailValue)"
  },
  {
    "label": "getAttributeValueAsSectionOffset()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getAttributeValueAsSectionOffset(const DWARFUnit *U, const uint16_t Attr, uint64_t FailValue)"
  },
  {
    "label": "getRangesBaseAttribute()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getRangesBaseAttribute(const DWARFUnit *U, uint64_t FailValue)"
  },
  {
    "label": "getLowAndHighPC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getLowAndHighPC(const DWARFUnit *U, uint64_t &LowPC, uint64_t &HighPC)"
  },
  {
    "label": "getAddressRanges()",
    "kind": "Method",
    "detail": "Function (DWARFAddressRangesVector)",
    "insertText": "getAddressRanges(const DWARFUnit *U)"
  },
  {
    "label": "collectChildrenAddressRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "collectChildrenAddressRanges(const DWARFUnit *U, DWARFAddressRangesVector &Ranges)"
  },
  {
    "label": "addressRangeContainsAddress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "addressRangeContainsAddress(const DWARFUnit *U, const uint64_t Address)"
  },
  {
    "label": "getSubroutineName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getSubroutineName(const DWARFUnit *U, DINameKind Kind)"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getName(const DWARFUnit *U, DINameKind Kind)"
  },
  {
    "label": "getCallerFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getCallerFrame(const DWARFUnit *U, uint32_t &CallFile, uint32_t &CallLine, uint32_t &CallColumn)"
  },
  {
    "label": "getInlinedChainForAddress()",
    "kind": "Method",
    "detail": "Function (DWARFDebugInfoEntryInlinedChain)",
    "insertText": "getInlinedChainForAddress(const DWARFUnit *U, const uint64_t Address)"
  },
  {
    "label": "DWARFDebugInfoEntryInlinedChain()",
    "kind": "Method",
    "detail": "Function (} ; struct DWARFDebugInfoEntryInlinedChain {)",
    "insertText": "DWARFDebugInfoEntryInlinedChain() : U(nullptr)"
  }
]