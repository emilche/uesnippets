[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FCameraDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCameraDetails"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Camera / CameraTypes . h \" # include \" IDetailCustomization . h \" # include \" Layout / Visibility . h \" # include \" Misc / Optional . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" class FText ; class IDetailLayoutBuilder ; class IPropertyHandle ; class SEditableTextBox ; class SWidget ; class FCameraDetails : public IDetailCustomization { public : TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailLayout)"
  },
  {
    "label": "OnAspectRatioChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnAspectRatioChanged()"
  },
  {
    "label": "GetAspectRatio()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetAspectRatio()"
  },
  {
    "label": "OnAspectRatioSpinnerChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAspectRatioSpinnerChanged(float InValue)"
  },
  {
    "label": "UpdateAspectTextFromProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAspectTextFromProperty()"
  },
  {
    "label": "OnGetComboContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGetComboContent()"
  },
  {
    "label": "CommitAspectRatioText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitAspectRatioText(FText ItemText)"
  },
  {
    "label": "OnCommitAspectRatioText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommitAspectRatioText(const FText& ItemFText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "ProjectionModeMatches()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "ProjectionModeMatches(TSharedPtr<IPropertyHandle> Property, ECameraProjectionMode::Type DesiredMode)"
  }
]