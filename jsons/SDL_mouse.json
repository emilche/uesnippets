[
  {
    "label": "SDL_Cursor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_Cursor"
  },
  {
    "label": "SDL_GetMouseFocus()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_mouse_h_ # define SDL_mouse_h_ # include \" SDL_stdinc . h \" # include \" SDL_error . h \" # include \" SDL_video . h \" # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif typedef struct SDL_Cursor SDL_Cursor ; typedef enum { SDL_SYSTEM_CURSOR_ARROW,SDL_SYSTEM_CURSOR_IBEAM,SDL_SYSTEM_CURSOR_WAIT,SDL_SYSTEM_CURSOR_CROSSHAIR,SDL_SYSTEM_CURSOR_WAITARROW,SDL_SYSTEM_CURSOR_SIZENWSE,SDL_SYSTEM_CURSOR_SIZENESW,SDL_SYSTEM_CURSOR_SIZEWE,SDL_SYSTEM_CURSOR_SIZENS,SDL_SYSTEM_CURSOR_SIZEALL,SDL_SYSTEM_CURSOR_NO,SDL_SYSTEM_CURSOR_HAND,SDL_NUM_SYSTEM_CURSORS } SDL_SystemCursor ; typedef enum { SDL_MOUSEWHEEL_NORMAL,SDL_MOUSEWHEEL_FLIPPED } SDL_MouseWheelDirection ; DECLSPEC SDL_Window* SDLCALL)",
    "insertText": "SDL_GetMouseFocus(void)"
  },
  {
    "label": "SDL_GetMouseState()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint32 SDLCALL)",
    "insertText": "SDL_GetMouseState(int *x, int *y)"
  },
  {
    "label": "SDL_GetGlobalMouseState()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint32 SDLCALL)",
    "insertText": "SDL_GetGlobalMouseState(int *x, int *y)"
  },
  {
    "label": "SDL_GetRelativeMouseState()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint32 SDLCALL)",
    "insertText": "SDL_GetRelativeMouseState(int *x, int *y)"
  },
  {
    "label": "SDL_WarpMouseInWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_WarpMouseInWindow(SDL_Window * window, int x, int y)"
  },
  {
    "label": "SDL_WarpMouseGlobal()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_WarpMouseGlobal(int x, int y)"
  },
  {
    "label": "SDL_SetRelativeMouseMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetRelativeMouseMode(SDL_bool enabled)"
  },
  {
    "label": "SDL_CaptureMouse()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_CaptureMouse(SDL_bool enabled)"
  },
  {
    "label": "SDL_GetRelativeMouseMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_GetRelativeMouseMode(void)"
  },
  {
    "label": "SDL_CreateCursor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Cursor* SDLCALL)",
    "insertText": "SDL_CreateCursor(const Uint8 * data, const Uint8 * mask, int w, int h, int hot_x, int hot_y)"
  },
  {
    "label": "SDL_CreateColorCursor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Cursor* SDLCALL)",
    "insertText": "SDL_CreateColorCursor(SDL_Surface *surface, int hot_x, int hot_y)"
  },
  {
    "label": "SDL_CreateSystemCursor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Cursor* SDLCALL)",
    "insertText": "SDL_CreateSystemCursor(SDL_SystemCursor id)"
  },
  {
    "label": "SDL_SetCursor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SetCursor(SDL_Cursor * cursor)"
  },
  {
    "label": "SDL_GetCursor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Cursor* SDLCALL)",
    "insertText": "SDL_GetCursor(void)"
  },
  {
    "label": "SDL_GetDefaultCursor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Cursor* SDLCALL)",
    "insertText": "SDL_GetDefaultCursor(void)"
  },
  {
    "label": "SDL_FreeCursor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_FreeCursor(SDL_Cursor * cursor)"
  },
  {
    "label": "SDL_ShowCursor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_ShowCursor(int toggle)"
  }
]