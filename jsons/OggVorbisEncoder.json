[
  {
    "label": "FOggVorbisEncoderPrivateState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOggVorbisEncoderPrivateState"
  },
  {
    "label": "FOggVorbisEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOggVorbisEncoder"
  },
  {
    "label": "FOggVorbisEncoder()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DSP / Encoders / IAudioEncoder . h \" # if ! PLATFORM_TVOS struct FOggVorbisEncoderPrivateState ; class FOggVorbisEncoder : public Audio::IAudioEncoder { public :)",
    "insertText": "FOggVorbisEncoder(const FSoundQualityInfo& InInfo, int32 AverageBufferCallbackSize)"
  },
  {
    "label": "GetCompressedPacketSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCompressedPacketSize()"
  },
  {
    "label": "SamplesRequiredPerEncode()",
    "kind": "Method",
    "detail": "Function (protected : int64)",
    "insertText": "SamplesRequiredPerEncode()"
  },
  {
    "label": "StartFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartFile(const FSoundQualityInfo& InQualityInfo, TArray<uint8>& OutFileStart)"
  },
  {
    "label": "EncodeChunk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EncodeChunk(const TArray<float>& InAudio, TArray<uint8>& OutBytes)"
  },
  {
    "label": "EndFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndFile(TArray<uint8>& OutBytes)"
  },
  {
    "label": "FOggVorbisEncoder()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FOggVorbisEncoder()"
  }
]