[
  {
    "label": "WhitespaceHandling",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "WhitespaceHandling"
  },
  {
    "label": "SplitResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SplitResult"
  },
  {
    "label": "SplitString()",
    "kind": "Method",
    "detail": "Function (std::vector<std::string>)",
    "insertText": "SplitString(\n    StringPiece input,\n    StringPiece separators,\n    WhitespaceHandling whitespace,\n    SplitResult result_type)"
  },
  {
    "label": "SplitString()",
    "kind": "Method",
    "detail": "Function (std::vector<std::u16string>)",
    "insertText": "SplitString(\n    StringPiece16 input,\n    StringPiece16 separators,\n    WhitespaceHandling whitespace,\n    SplitResult result_type)"
  },
  {
    "label": "SplitStringPiece()",
    "kind": "Method",
    "detail": "Function (std::vector<StringPiece>)",
    "insertText": "SplitStringPiece(\n    StringPiece input,\n    StringPiece separators,\n    WhitespaceHandling whitespace,\n    SplitResult result_type)"
  },
  {
    "label": "SplitStringPiece()",
    "kind": "Method",
    "detail": "Function (std::vector<StringPiece16>)",
    "insertText": "SplitStringPiece(\n    StringPiece16 input,\n    StringPiece16 separators,\n    WhitespaceHandling whitespace,\n    SplitResult result_type)"
  },
  {
    "label": "SplitStringIntoKeyValuePairs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SplitStringIntoKeyValuePairs(StringPiece input,\n                                              char key_value_delimiter,\n                                              char key_value_pair_delimiter,\n                                              StringPairs* key_value_pairs)"
  },
  {
    "label": "SplitStringIntoKeyValuePairsUsingSubstr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SplitStringIntoKeyValuePairsUsingSubstr(\n    StringPiece input,\n    char key_value_delimiter,\n    StringPiece key_value_pair_delimiter,\n    StringPairs* key_value_pairs)"
  },
  {
    "label": "SplitStringUsingSubstr()",
    "kind": "Method",
    "detail": "Function (std::vector<std::u16string>)",
    "insertText": "SplitStringUsingSubstr(\n    StringPiece16 input,\n    StringPiece16 delimiter,\n    WhitespaceHandling whitespace,\n    SplitResult result_type)"
  },
  {
    "label": "SplitStringUsingSubstr()",
    "kind": "Method",
    "detail": "Function (std::vector<std::string>)",
    "insertText": "SplitStringUsingSubstr(\n    StringPiece input,\n    StringPiece delimiter,\n    WhitespaceHandling whitespace,\n    SplitResult result_type)"
  },
  {
    "label": "SplitStringPieceUsingSubstr()",
    "kind": "Method",
    "detail": "Function (std::vector<StringPiece16>)",
    "insertText": "SplitStringPieceUsingSubstr(StringPiece16 input,\n                            StringPiece16 delimiter,\n                            WhitespaceHandling whitespace,\n                            SplitResult result_type)"
  },
  {
    "label": "SplitStringPieceUsingSubstr()",
    "kind": "Method",
    "detail": "Function (std::vector<StringPiece>)",
    "insertText": "SplitStringPieceUsingSubstr(\n    StringPiece input,\n    StringPiece delimiter,\n    WhitespaceHandling whitespace,\n    SplitResult result_type)"
  }
]