[
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FPendingDelete",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingDelete"
  },
  {
    "label": "FAssetDeleteModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetDeleteModel"
  },
  {
    "label": "EState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EState"
  },
  {
    "label": "FPendingDelete()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPendingDelete( UObject* InObject )"
  },
  {
    "label": "CheckForReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForReferences()"
  },
  {
    "label": "FAssetDeleteModel()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "FAssetDeleteModel( const TArray<UObject*>& InObjectsToDelete )"
  },
  {
    "label": "AddObjectToDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectToDelete(UObject* InObject)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick( const float InDeltaTime )"
  },
  {
    "label": "DeleteSourceContentFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSourceContentFiles()"
  },
  {
    "label": "DoDelete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoDelete()"
  },
  {
    "label": "DoForceDelete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoForceDelete()"
  },
  {
    "label": "DoReplaceReferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoReplaceReferences( const FAssetData& ReplaceReferencesWith )"
  },
  {
    "label": "PrepareToDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareToDelete(UObject* InObject)"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState( EState NewState )"
  },
  {
    "label": "ComputeCanReplaceReferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComputeCanReplaceReferences()"
  },
  {
    "label": "DiscoverSourceFileReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscoverSourceFileReferences(FPendingDelete& PendingDelete)"
  }
]