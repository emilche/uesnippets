[
  {
    "label": "mips_clz()",
    "kind": "Method",
    "detail": "Function (# ifndef __SILK_MACROS_MIPSR1_H__ # define __SILK_MACROS_MIPSR1_H__ # define)",
    "insertText": "mips_clz(x) __builtin_clz(x) #undef silk_SMULWB static inline int silk_SMULWB(int a, int b)"
  },
  {
    "label": "__builtin_mips_mult()",
    "kind": "Method",
    "detail": "Function (long long ac ; int c ; ac =)",
    "insertText": "__builtin_mips_mult(a, (opus_int32)(opus_int16)b)"
  },
  {
    "label": "__builtin_mips_extr_w()",
    "kind": "Method",
    "detail": "Function (c =)",
    "insertText": "__builtin_mips_extr_w(ac, 16)"
  },
  {
    "label": "__builtin_mips_mult()",
    "kind": "Method",
    "detail": "Function (long long ac ; int c ; ac =)",
    "insertText": "__builtin_mips_mult(a, b)"
  },
  {
    "label": "__builtin_mips_mult()",
    "kind": "Method",
    "detail": "Function (long long ac ; int res ; ac =)",
    "insertText": "__builtin_mips_mult(b, c)"
  },
  {
    "label": "silk_CLZ16()",
    "kind": "Method",
    "detail": "Function (res + = a ; return res ; } # define OVERRIDE_silk_CLZ16 opus_int32)",
    "insertText": "silk_CLZ16(opus_int16 in16)"
  },
  {
    "label": "in32()",
    "kind": "Method",
    "detail": "Function (int re32 ; opus_int32)",
    "insertText": "in32(opus_int32)"
  },
  {
    "label": "mips_clz()",
    "kind": "Method",
    "detail": "Function (re32 =)",
    "insertText": "mips_clz(in32)"
  },
  {
    "label": "silk_CLZ32()",
    "kind": "Method",
    "detail": "Function (re32 - = 1 6 ; return re32 ; } # define OVERRIDE_silk_CLZ32 opus_int32)",
    "insertText": "silk_CLZ32(opus_int32 in32)"
  }
]