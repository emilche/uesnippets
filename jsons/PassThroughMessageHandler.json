[
  {
    "label": "FPassThroughMessageHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPassThroughMessageHandler"
  },
  {
    "label": "IPassThroughMessageHandlerFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPassThroughMessageHandlerFactory"
  },
  {
    "label": "FPassThroughMessageHandlerFactoryFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPassThroughMessageHandlerFactoryFactory"
  },
  {
    "label": "FPassThroughMessageHandler()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / GenericApplicationMessageHandler . h \" class FPassThroughMessageHandler : public FGenericApplicationMessageHandler { public : ~)",
    "insertText": "FPassThroughMessageHandler()"
  },
  {
    "label": "IsHandlingMessages()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsHandlingMessages()"
  },
  {
    "label": "SetAllowMessageHandling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowMessageHandling(bool bValue)"
  },
  {
    "label": "IPassThroughMessageHandlerFactory()",
    "kind": "Method",
    "detail": "Function (} ; class IPassThroughMessageHandlerFactory { public : ~)",
    "insertText": "IPassThroughMessageHandlerFactory()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FPassThroughMessageHandler>)",
    "insertText": "Create(const TSharedRef<FGenericApplicationMessageHandler>& MessageHandler)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FPassThroughMessageHandlerFactoryFactory { public : TSharedRef<IPassThroughMessageHandlerFactory>)",
    "insertText": "Create()"
  }
]