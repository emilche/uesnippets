[
  {
    "label": "FDynamicRenderAssetInstanceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicRenderAssetInstanceManager"
  },
  {
    "label": "FTasks",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTasks"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Streaming / TextureInstanceManager . h \" # include \" Streaming / TextureInstanceTask . h \" # include \" ContentStreaming . h \" class FDynamicRenderAssetInstanceManager : public IRenderAssetInstanceManager { public : using FOnSyncDoneDelegate = TFunction<)",
    "insertText": "void(const FRemovedRenderAssetArray&)"
  },
  {
    "label": "FDynamicRenderAssetInstanceManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDynamicRenderAssetInstanceManager(FOnSyncDoneDelegate&& InOnSyncDoneDelegate)"
  },
  {
    "label": "FDynamicRenderAssetInstanceManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDynamicRenderAssetInstanceManager()"
  },
  {
    "label": "RegisterTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTasks(RenderAssetInstanceTask::FDoWorkTask& AsyncTask)"
  },
  {
    "label": "IncrementalUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementalUpdate(FRemovedRenderAssetArray& RemovedRenderAssets, float Percentage)"
  },
  {
    "label": "GetReferencedComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReferencedComponents(TArray<const UPrimitiveComponent*>& Components)"
  },
  {
    "label": "OnPreGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreGarbageCollect(FRemovedRenderAssetArray& RemovedRenderAssets)"
  },
  {
    "label": "IsReferenced()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReferenced(const UPrimitiveComponent* Component)"
  },
  {
    "label": "CanManage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanManage(const UPrimitiveComponent* Component)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (EAddComponentResult)",
    "insertText": "Add(const UPrimitiveComponent* Component, FStreamingTextureLevelContext& LevelContext, float MaxAllowedUIDensity = 0)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(const UPrimitiveComponent* Component, FRemovedRenderAssetArray* RemovedRenderAssets)"
  },
  {
    "label": "PrepareAsyncView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareAsyncView()"
  },
  {
    "label": "GetAsyncView()",
    "kind": "Method",
    "detail": "Function (const FRenderAssetInstanceView*)",
    "insertText": "GetAsyncView(bool bCreateIfNull)"
  },
  {
    "label": "GetAllocatedSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAllocatedSize()"
  },
  {
    "label": "GetGameThreadView()",
    "kind": "Method",
    "detail": "Function (const FRenderAssetInstanceView*)",
    "insertText": "GetGameThreadView()"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Refresh(float Percentage)"
  },
  {
    "label": "OnCreateViewDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateViewDone(FRenderAssetInstanceView* InView)"
  },
  {
    "label": "OnRefreshVisibilityDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRefreshVisibilityDone(int32 BeginIndex, int32 EndIndex, const TArray<int32>& SkippedIndices, int32 FirstFreeBound, int32 LastUsedBound)"
  },
  {
    "label": "FTasks()",
    "kind": "Method",
    "detail": "Function (private : typedef RenderAssetInstanceTask::FCreateViewWithUninitializedBoundsTask FCreateViewTask ; typedef RenderAssetInstanceTask::FRefreshFullTask FRefreshFullTask ; struct FTasks { ~)",
    "insertText": "FTasks()"
  },
  {
    "label": "SyncResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncResults()"
  },
  {
    "label": "SyncRefreshFullTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncRefreshFullTask()"
  }
]