[
  {
    "label": "MockRtpSender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockRtpSender"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_MOCK_RTPSENDER_H_ # define API_TEST_MOCK_RTPSENDER_H_ # include<memory> # include<string> # include<vector> # include \" api / rtp_sender_interface . h \" # include \" test / gmock . h \" namespace webrtc { class MockRtpSender : public RtpSenderInterface { public : rtc::scoped_refptr<MockRtpSender>)",
    "insertText": "Create()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(bool, SetTrack, (MediaStreamTrackInterface*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<MediaStreamTrackInterface>, track, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<DtlsTransportInterface>, dtls_transport, (), (const override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(uint32_t, ssrc, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(cricket::MediaType, media_type, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::string, id, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<std::string>, stream_ids, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetStreams, (const std::vector<std::string>&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<RtpEncodingParameters>, init_send_encodings, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RtpParameters, GetParameters, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCError, SetParameters, (const RtpParameters&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<DtmfSenderInterface>, GetDtmfSender, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetFrameEncryptor, (rtc::scoped_refptr<FrameEncryptorInterface>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<FrameEncryptorInterface>, GetFrameEncryptor, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetEncoderToPacketizerFrameTransformer, (rtc::scoped_refptr<FrameTransformerInterface>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetEncoderSelector, (std::unique_ptr<VideoEncoderFactory::EncoderSelectorInterface>), (override))"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "static_assert(!std::is_abstract_v<rtc::RefCountedObject<MockRtpSender>>, \"\")"
  }
]