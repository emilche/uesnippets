[
  {
    "label": "FViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewModel"
  },
  {
    "label": "SEQUENCERCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCERCORE_API"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MVVM / Extensions / IOutlinerExtension . h \" # include \" MVVM / ICastable . h \" # include \" MVVM / ViewModelPtr . h \" # include \" MVVM / ViewModelTypeID . h \" namespace UE { namespace Sequencer { class FViewModel ; class FLinkedOutlinerExtension { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID(FLinkedOutlinerExtension)"
  },
  {
    "label": "FLinkedOutlinerExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLinkedOutlinerExtension()"
  },
  {
    "label": "GetLinkedOutlinerItem()",
    "kind": "Method",
    "detail": "Function (TViewModelPtr<IOutlinerExtension>)",
    "insertText": "GetLinkedOutlinerItem()"
  },
  {
    "label": "SetLinkedOutlinerItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinkedOutlinerItem(const TViewModelPtr<IOutlinerExtension>& InOutlinerItem)"
  },
  {
    "label": "GetComputedSizing()",
    "kind": "Method",
    "detail": "Function (private : TWeakViewModelPtr<IOutlinerExtension> WeakModel ; } ; class FLinkedOutlinerComputedSizingShim { public : FOutlinerSizing)",
    "insertText": "GetComputedSizing()"
  }
]