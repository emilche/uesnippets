[
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FDrawContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDrawContext"
  },
  {
    "label": "FPacketContentViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPacketContentViewport"
  },
  {
    "label": "FNetworkPacketEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkPacketEvent"
  },
  {
    "label": "FPacketContentViewDrawState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPacketContentViewDrawState"
  },
  {
    "label": "FBoxPrimitive",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoxPrimitive"
  },
  {
    "label": "FTextPrimitive",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextPrimitive"
  },
  {
    "label": "FPacketContentViewDrawStateBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPacketContentViewDrawStateBuilder"
  },
  {
    "label": "FBoxData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoxData"
  },
  {
    "label": "FPacketContentViewDrawHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPacketContentViewDrawHelper"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNetworkPacketEvent()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Styling / WidgetStyle . h \" # include \" TraceServices / Model / NetProfiler . h \" struct FSlateBrush ; namespace UE::Insights { class FDrawContext ; } namespace UE::Insights::NetworkingProfiler { class FPacketContentViewport ; struct FNetworkPacketEvent { uint32 EventTypeIndex ; uint32 ObjectInstanceIndex ; uint64 NetId ; uint32 BitOffset ; uint32 BitSize ; uint32 Level ;)",
    "insertText": "FNetworkPacketEvent() : EventTypeIndex(0) , ObjectInstanceIndex(0) , NetId(0) , BitOffset(0) , BitSize(0) , Level(0)"
  },
  {
    "label": "FNetworkPacketEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNetworkPacketEvent(uint32 InEventTypeIndex, uint32 InObjectInstanceIndex, uint64 InNetId, uint32 InBitOffset, uint32 InBitSize, uint32 InLevel) : EventTypeIndex(InEventTypeIndex) , ObjectInstanceIndex(InObjectInstanceIndex) , NetId(InNetId) , BitOffset(InBitOffset) , BitSize(InBitSize) , Level(InLevel)"
  },
  {
    "label": "FNetworkPacketEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNetworkPacketEvent(const FNetworkPacketEvent& Other) : EventTypeIndex(Other.EventTypeIndex) , ObjectInstanceIndex(Other.ObjectInstanceIndex) , NetId(Other.NetId) , BitOffset(Other.BitOffset) , BitSize(Other.BitSize) , Level(Other.Level)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FNetworkPacketEvent&)",
    "insertText": "operator(const FNetworkPacketEvent& Other)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (EventTypeIndex = Other . EventTypeIndex ; ObjectInstanceIndex = Other . ObjectInstanceIndex ; NetId = Other . NetId ; BitOffset = Other . BitOffset ; BitSize = Other . BitSize ; Level = Other . Level ; return* this ; } bool)",
    "insertText": "Equals(const FNetworkPacketEvent& Other)"
  },
  {
    "label": "FPacketContentViewDrawState()",
    "kind": "Method",
    "detail": "Function (} } ; struct FPacketContentViewDrawState { struct FBoxPrimitive { int32 Depth ; float X ; float W ; FLinearColor Color ; } ; struct FTextPrimitive { int32 Depth ; float X ; FString Text ; bool bWhite ; } ;)",
    "insertText": "FPacketContentViewDrawState() : Events() , Boxes() , InsideBoxes() , Borders() , Texts() , NumLanes(0) , NumMergedBoxes(0)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetNumLanes()",
    "kind": "Method",
    "detail": "Function (NumLanes = 0 ; NumMergedBoxes = 0 ; } int32)",
    "insertText": "GetNumLanes()"
  },
  {
    "label": "GetNumMergedBoxes()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumMergedBoxes()"
  },
  {
    "label": "FBoxData()",
    "kind": "Method",
    "detail": "Function (} TArray<FNetworkPacketEvent> Events ; TArray<FBoxPrimitive> Boxes ; TArray<FBoxPrimitive> InsideBoxes ; TArray<FBoxPrimitive> Borders ; TArray<FTextPrimitive> Texts ; int32 NumLanes ; int32 NumMergedBoxes ; } ; class FPacketContentViewDrawStateBuilder { private : struct FBoxData { float X1 ; float X2 ; uint32 Color ; FLinearColor LinearColor ;)",
    "insertText": "FBoxData() : X1(0.0f), X2(0.0f), Color(0)"
  },
  {
    "label": "FPacketContentViewDrawStateBuilder()",
    "kind": "Method",
    "detail": "Function (X1 = 0 . 0 f ; X2 = 0 . 0 f ; Color = 0 ; } } ; public :)",
    "insertText": "FPacketContentViewDrawStateBuilder(FPacketContentViewDrawState& InState, const FPacketContentViewport& InViewport, float InFontScale)"
  },
  {
    "label": "FPacketContentViewDrawStateBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPacketContentViewDrawStateBuilder(const FPacketContentViewDrawStateBuilder&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPacketContentViewDrawStateBuilder&)",
    "insertText": "operator(const FPacketContentViewDrawStateBuilder&)"
  },
  {
    "label": "AddEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEvent(const TraceServices::FNetProfilerContentEvent& Event, const TCHAR* Name, uint64 NetId)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "GetMaxDepth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxDepth()"
  },
  {
    "label": "FPacketContentViewDrawHelper()",
    "kind": "Method",
    "detail": "Function (private : FPacketContentViewDrawState& DrawState ; const FPacketContentViewport& Viewport ; int32 MaxDepth ; TArray<float> LastEventX2 ; TArray<FBoxData> LastBox ; const FSlateFontInfo EventFont ; float FontScale ; } ; class FPacketContentViewDrawHelper { public : enum class EHighlightMode : uint32 { Hovered = 1,Selected = 2,SelectedAndHovered = 3 } ; public :)",
    "insertText": "FPacketContentViewDrawHelper(const FDrawContext& InDrawContext, const FPacketContentViewport& InViewport)"
  },
  {
    "label": "FPacketContentViewDrawHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPacketContentViewDrawHelper(const FPacketContentViewDrawHelper&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPacketContentViewDrawHelper&)",
    "insertText": "operator(const FPacketContentViewDrawHelper&)"
  },
  {
    "label": "GetWhiteBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetWhiteBrush()"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(const FPacketContentViewDrawState& DrawState, const float Opacity = 1.0f)"
  },
  {
    "label": "DrawEventHighlight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawEventHighlight(const FNetworkPacketEvent& Event, EHighlightMode Mode)"
  },
  {
    "label": "GetColorByType()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColorByType(int32 Type)"
  }
]