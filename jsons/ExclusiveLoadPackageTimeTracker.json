[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FExclusiveLoadPackageTimeTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExclusiveLoadPackageTimeTracker"
  },
  {
    "label": "FScopedPackageTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedPackageTracker"
  },
  {
    "label": "FScopedPostLoadTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedPostLoadTracker"
  },
  {
    "label": "FScopedEndLoadTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedEndLoadTracker"
  },
  {
    "label": "FLoadTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLoadTime"
  },
  {
    "label": "FScopedPackageTracker()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" CoreMinimal . h \" # include \" HAL / CriticalSection . h \" # include \" HAL / IConsoleManager . h \" # include \" HAL / Platform . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / Package . h \" # include \" UObject / UnrealNames . h \" class FString ; # define WITH_LOADPACKAGE_TIME_TRACKER STATS class FExclusiveLoadPackageTimeTracker { public : struct FScopedPackageTracker {)",
    "insertText": "FScopedPackageTracker(UPackage* InPackageToTrack) : PackageToTrack(InPackageToTrack)"
  },
  {
    "label": "PushLoadPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushLoadPackage(PackageToTrack ? PackageToTrack->GetFName() : NAME_None)"
  },
  {
    "label": "FScopedPackageTracker()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FScopedPackageTracker(FName PackageNameToTrack) : PackageToTrack(nullptr)"
  },
  {
    "label": "PushLoadPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushLoadPackage(PackageNameToTrack)"
  },
  {
    "label": "FScopedPackageTracker()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FScopedPackageTracker()"
  },
  {
    "label": "PopLoadPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopLoadPackage(PackageToTrack)"
  },
  {
    "label": "FScopedPostLoadTracker()",
    "kind": "Method",
    "detail": "Function (} UPackage* PackageToTrack ; } ; struct FScopedPostLoadTracker {)",
    "insertText": "FScopedPostLoadTracker(UObject* InPostLoadObject)"
  },
  {
    "label": "FScopedPostLoadTracker()",
    "kind": "Method",
    "detail": "Function (PostLoadObject = InPostLoadObject ; } else { PostLoadObject = nullptr ; } } ~)",
    "insertText": "FScopedPostLoadTracker()"
  },
  {
    "label": "PopPostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopPostLoad(PostLoadObject)"
  },
  {
    "label": "FScopedEndLoadTracker()",
    "kind": "Method",
    "detail": "Function (} } UObject* PostLoadObject ; } ; struct FScopedEndLoadTracker {)",
    "insertText": "FScopedEndLoadTracker()"
  },
  {
    "label": "PushEndLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushEndLoad()"
  },
  {
    "label": "PopEndLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopEndLoad()"
  },
  {
    "label": "PushLoadPackage()",
    "kind": "Method",
    "detail": "Function (} } ; void)",
    "insertText": "PushLoadPackage(FName PackageName)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# if WITH_LOADPACKAGE_TIME_TRACKER)",
    "insertText": "Get().InternalPushLoadPackage(PackageName)"
  },
  {
    "label": "PopLoadPackage()",
    "kind": "Method",
    "detail": "Function (# endif } void)",
    "insertText": "PopLoadPackage(UPackage* LoadedPackage)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# if WITH_LOADPACKAGE_TIME_TRACKER)",
    "insertText": "Get().InternalPopLoadPackage(LoadedPackage, nullptr)"
  },
  {
    "label": "PushPostLoad()",
    "kind": "Method",
    "detail": "Function (# endif } bool)",
    "insertText": "PushPostLoad(UObject* PostLoadObject)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if WITH_LOADPACKAGE_TIME_TRACKER)",
    "insertText": "if(PostLoadObject && PostLoadObject->IsAsset())"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Get().InternalPushLoadPackage(PostLoadObject->GetOutermost()->GetFName())"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# if WITH_LOADPACKAGE_TIME_TRACKER)",
    "insertText": "Get().InternalPopLoadPackage(nullptr, PostLoadObject)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# if WITH_LOADPACKAGE_TIME_TRACKER FExclusiveLoadPackageTimeTracker& Instance =)",
    "insertText": "Get()"
  },
  {
    "label": "InternalPushLoadPackage()",
    "kind": "Method",
    "detail": "Function (Instance .)",
    "insertText": "InternalPushLoadPackage(Instance.EndLoadName)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# if WITH_LOADPACKAGE_TIME_TRACKER)",
    "insertText": "Get().InternalPopLoadPackage(nullptr, nullptr)"
  },
  {
    "label": "DumpReport()",
    "kind": "Method",
    "detail": "Function (# endif } void)",
    "insertText": "DumpReport(const TArray<FString>& Args)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# if WITH_LOADPACKAGE_TIME_TRACKER)",
    "insertText": "Get().InternalDumpReport(Args)"
  },
  {
    "label": "ResetReport()",
    "kind": "Method",
    "detail": "Function (# endif } void)",
    "insertText": "ResetReport()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# if WITH_LOADPACKAGE_TIME_TRACKER)",
    "insertText": "Get().InternalResetReport()"
  },
  {
    "label": "GetExclusiveLoadTime()",
    "kind": "Method",
    "detail": "Function (# endif } double)",
    "insertText": "GetExclusiveLoadTime(FName PackageName)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# if WITH_LOADPACKAGE_TIME_TRACKER return)",
    "insertText": "Get().InternalGetExclusiveLoadTime(PackageName)"
  },
  {
    "label": "GetInclusiveLoadTime()",
    "kind": "Method",
    "detail": "Function (# else return 0 ; # endif } double)",
    "insertText": "GetInclusiveLoadTime(FName PackageName)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# if WITH_LOADPACKAGE_TIME_TRACKER return)",
    "insertText": "Get().InternalGetInclusiveLoadTime(PackageName)"
  },
  {
    "label": "FLoadTime()",
    "kind": "Method",
    "detail": "Function (# else return 0 ; # endif } # if WITH_LOADPACKAGE_TIME_TRACKER private : struct FLoadTime { FName TimeName ; FName AssetClass ; double ExclusiveTime ; double InclusiveTime ; double LastStartTime ; double OriginalStartTime ;)",
    "insertText": "FLoadTime() : ExclusiveTime(0), InclusiveTime(0), LastStartTime(0), OriginalStartTime(0)"
  },
  {
    "label": "FLoadTime()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLoadTime(FName InName, double InStartTime) : TimeName(InName), ExclusiveTime(0), InclusiveTime(0), LastStartTime(InStartTime), OriginalStartTime(InStartTime)"
  },
  {
    "label": "FLoadTime()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLoadTime(FName InName, FName InAssetClass, double InExclusive, double InInclusive) : TimeName(InName), ExclusiveTime(InExclusive), InclusiveTime(InInclusive), LastStartTime(0), OriginalStartTime(0)"
  },
  {
    "label": "FExclusiveLoadPackageTimeTracker()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FExclusiveLoadPackageTimeTracker()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (FExclusiveLoadPackageTimeTracker&)",
    "insertText": "Construct()"
  },
  {
    "label": "InternalPushLoadPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalPushLoadPackage(FName PackageName)"
  },
  {
    "label": "InternalPopLoadPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalPopLoadPackage(UPackage* LoadedPackage, UObject* LoadedAsset)"
  },
  {
    "label": "InternalDumpReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalDumpReport(const TArray<FString>& Args)"
  },
  {
    "label": "InternalResetReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalResetReport()"
  },
  {
    "label": "InternalGetExclusiveLoadTime()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "InternalGetExclusiveLoadTime(FName PackageName)"
  },
  {
    "label": "InternalGetInclusiveLoadTime()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "InternalGetInclusiveLoadTime(FName PackageName)"
  },
  {
    "label": "IsPackageLoadTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPackageLoadTime(const FLoadTime& Time)"
  },
  {
    "label": "DumpReportCommandHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpReportCommandHandler(const TArray<FString>& Args)"
  },
  {
    "label": "ResetReportCommandHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetReportCommandHandler(const TArray<FString>& Args)"
  }
]