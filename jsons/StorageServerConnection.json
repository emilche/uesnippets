[
  {
    "label": "FPackageStoreEntryResource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageStoreEntryResource"
  },
  {
    "label": "FStorageServerConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStorageServerConnection"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (UE_BUILD_SHIPPING)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogStorageServerConnection, Log, All)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize(TArrayView<const FString> HostAddresses, const int32 Port, const FAnsiStringView& InBaseURI)"
  },
  {
    "label": "ChunkSizeRequest()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "ChunkSizeRequest(const FIoChunkId& ChunkId)"
  },
  {
    "label": "ReadChunkRequest()",
    "kind": "Method",
    "detail": "Function (TIoStatusOr<FIoBuffer>)",
    "insertText": "ReadChunkRequest(\n\t\tconst FIoChunkId& ChunkId,\n\t\tconst uint64 Offset,\n\t\tconst uint64 Size,\n\t\tconst TOptional<FIoBuffer> OptDestination,\n\t\tconst bool bHardwareTargetBuffer\n\t)"
  },
  {
    "label": "GetAndResetStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAndResetStats(IStorageServerPlatformFile::FConnectionStats& OutStats)"
  },
  {
    "label": "SortHostAddressesByLocalSubnet()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "SortHostAddressesByLocalSubnet(TArrayView<const FString> HostAddresses, const int32 Port)"
  },
  {
    "label": "IsPlatformSocketAddress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlatformSocketAddress(const FString Address)"
  },
  {
    "label": "CreateHttpClient()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<IStorageServerHttpClient>)",
    "insertText": "CreateHttpClient(const FString Address, const int32 Port)"
  },
  {
    "label": "StringToInternetAddr()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FInternetAddr>)",
    "insertText": "StringToInternetAddr(const FString Address, const int32 Port)"
  },
  {
    "label": "HandshakeRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandshakeRequest()"
  },
  {
    "label": "BuildReadChunkRequestUrl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildReadChunkRequestUrl(FAnsiStringBuilderBase& Builder, const FIoChunkId& ChunkId, const uint64 Offset, const uint64 Size)"
  },
  {
    "label": "ReadChunkRequestProcessHttpResult()",
    "kind": "Method",
    "detail": "Function (TIoStatusOr<FIoBuffer>)",
    "insertText": "ReadChunkRequestProcessHttpResult(\n\t\tIStorageServerHttpClient::FResult ResultTuple,\n\t\tconst uint64 Offset,\n\t\tconst uint64 Size,\n\t\tconst TOptional<FIoBuffer> OptDestination,\n\t\tconst bool bHardwareTargetBuffer\n\t)"
  },
  {
    "label": "GetCompressedOffset()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetCompressedOffset(const FCompressedBuffer& Buffer, uint64 RawOffset)"
  },
  {
    "label": "AddTimingInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimingInstance(const double Duration, const uint64 Bytes)"
  }
]