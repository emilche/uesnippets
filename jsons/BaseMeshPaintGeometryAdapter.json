[
  {
    "label": "MESHPAINT_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MESHPAINT_API"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" IMeshPaintGeometryAdapter . h \" # include \" Math / UnrealMathSSE . h \" # include \" Math / Vector . h \" # include \" TMeshPaintOctree . h \" # include \" Templates / UniquePtr . h \" class FBaseMeshPaintGeometryAdapter : public IMeshPaintGeometryAdapter { public : bool)",
    "insertText": "Initialize()"
  },
  {
    "label": "GetMeshVertices()",
    "kind": "Method",
    "detail": "Function (const TArray<FVector>&)",
    "insertText": "GetMeshVertices()"
  },
  {
    "label": "GetMeshIndices()",
    "kind": "Method",
    "detail": "Function (const TArray<uint32>&)",
    "insertText": "GetMeshIndices()"
  },
  {
    "label": "GetVertexPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexPosition(int32 VertexIndex, FVector& OutVertex)"
  },
  {
    "label": "SphereIntersectTriangles()",
    "kind": "Method",
    "detail": "Function (TArray<uint32>)",
    "insertText": "SphereIntersectTriangles(const float ComponentSpaceSquaredBrushRadius, const FVector& ComponentSpaceBrushPosition, const FVector& ComponentSpaceCameraPosition, const bool bOnlyFrontFacing)"
  },
  {
    "label": "GetInfluencedVertexIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInfluencedVertexIndices(const float ComponentSpaceSquaredBrushRadius, const FVector& ComponentSpaceBrushPosition, const FVector& ComponentSpaceCameraPosition, const bool bOnlyFrontFacing, TSet<int32> &InfluencedVertices)"
  },
  {
    "label": "GetInfluencedVertexData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInfluencedVertexData(const float ComponentSpaceSquaredBrushRadius, const FVector& ComponentSpaceBrushPosition, const FVector& ComponentSpaceCameraPosition, const bool bOnlyFrontFacing, TArray<TPair<int32, FVector>>& OutData)"
  },
  {
    "label": "SphereIntersectVertices()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "SphereIntersectVertices(const float ComponentSpaceSquaredBrushRadius, const FVector& ComponentSpaceBrushPosition, const FVector& ComponentSpaceCameraPosition, const bool bOnlyFrontFacing)"
  },
  {
    "label": "InitializeVertexData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeVertexData()"
  },
  {
    "label": "BuildOctree()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "BuildOctree()"
  }
]