[
  {
    "label": "FLooseFilesCookArtifactReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLooseFilesCookArtifactReader"
  },
  {
    "label": "FLooseFilesCookArtifactReader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CookArtifactReaderCommon . h \" class FLooseFilesCookArtifactReader : public FCookArtifactReaderCommon { public :)",
    "insertText": "FLooseFilesCookArtifactReader()"
  },
  {
    "label": "FileExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FileExists(const TCHAR* Filename)"
  },
  {
    "label": "FileSize()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "FileSize(const TCHAR* Filename)"
  },
  {
    "label": "OpenRead()",
    "kind": "Method",
    "detail": "Function (IFileHandle*)",
    "insertText": "OpenRead(const TCHAR* Filename)"
  },
  {
    "label": "IterateDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IterateDirectory(const TCHAR* Directory, IPlatformFile::FDirectoryVisitor& Visitor)"
  }
]