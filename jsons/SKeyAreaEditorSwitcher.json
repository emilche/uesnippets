[
  {
    "label": "SOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOverlay"
  },
  {
    "label": "IKeyArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IKeyArea"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FChannelGroupModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChannelGroupModel"
  },
  {
    "label": "FSequencerEditorViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerEditorViewModel"
  },
  {
    "label": "SKeyAreaEditorSwitcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SKeyAreaEditorSwitcher"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" class SOverlay ; class IKeyArea ; class ISequencer ; namespace UE { namespace Sequencer { class FChannelGroupModel ; class FSequencerEditorViewModel ; class SKeyAreaEditorSwitcher : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SKeyAreaEditorSwitcher)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedPtr<FChannelGroupModel> InModel, TWeakPtr<FSequencerEditorViewModel> InWeakEditorViewModel)"
  },
  {
    "label": "Rebuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rebuild()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "GetWidgetIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWidgetIndex()"
  },
  {
    "label": "ComputeVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "ComputeVisibility()"
  }
]