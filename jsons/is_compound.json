[
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___TYPE_TRAITS_IS_COMPOUND_H # define _LIBCPP___TYPE_TRAITS_IS_COMPOUND_H # include<__config> # include<__type_traits / integral_constant . h> # include<__type_traits / is_fundamental . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD #if __has_builtin(__is_compound) template<class _Tp> struct _LIBCPP_TEMPLATE_VIS is_compound : _BoolConstant<__is_compound(_Tp)"
  },
  {
    "label": "__is_compound()",
    "kind": "Method",
    "detail": "Function (} ; # if _LIBCPP_STD_VER> 1 4 template<class _Tp> bool is_compound_v =)",
    "insertText": "__is_compound(_Tp)"
  }
]