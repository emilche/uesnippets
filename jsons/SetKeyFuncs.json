[
  {
    "label": "FSetKeyFuncsStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetKeyFuncsStats"
  },
  {
    "label": "KeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "KeyFuncs"
  },
  {
    "label": "TSetKeyFuncs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSetKeyFuncs"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterator"
  },
  {
    "label": "FIterationSentinel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterationSentinel"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterator"
  },
  {
    "label": "FIterationSentinel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterationSentinel"
  },
  {
    "label": "FSetKeyFuncsStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetKeyFuncsStats"
  },
  {
    "label": "GetInvalidElement()",
    "kind": "Method",
    "detail": "Function (ElementType)",
    "insertText": "GetInvalidElement()"
  },
  {
    "label": "IsInvalid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInvalid(const ElementType&)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const ElementType&)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Matches(const ElementType& Element, const ElementType& Comparison)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Matches(const ElementType& Element, const ComparisonType& Comparison)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const ComparisonType&)"
  },
  {
    "label": "TSetKeyFuncs()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "TSetKeyFuncs(KeyFuncsType KeyFuncs, int32 ExpectedNumElements = 0)"
  },
  {
    "label": "SetKeyFuncs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyFuncs(KeyFuncsType KeyFuncs)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty(int32 ExpectedNumElements = 0)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reserve(int32 ExpectedNumElements)"
  },
  {
    "label": "ResizeToTargetSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeToTargetSize()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(ElementType Value, bool* bAlreadyExists = nullptr)"
  },
  {
    "label": "AddByHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddByHash(uint32 TypeHash, ElementType Value, bool* bAlreadyExists = nullptr)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Remove(const ElementType& Value)"
  },
  {
    "label": "RemoveByHash()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveByHash(uint32 TypeHash, const ElementType& Value)"
  },
  {
    "label": "FIterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FIterator(Set)"
  },
  {
    "label": "FIterationSentinel()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FIterationSentinel()"
  },
  {
    "label": "AddByHashNoReallocate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddByHashNoReallocate(uint32 TypeHash, ElementType Value, bool* bAlreadyExists)"
  },
  {
    "label": "Reallocate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reallocate(uint32 NewHashSize)"
  },
  {
    "label": "DestructHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestructHash()"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (bucket)",
    "insertText": "check(CollisionChainCount < HashSize)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (bucket)",
    "insertText": "check(CollisionCount < HashSize)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (bucket)",
    "insertText": "check(CollisionChainCount < HashSize)"
  },
  {
    "label": "GetTargetHashSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTargetHashSize(NumValues)"
  }
]