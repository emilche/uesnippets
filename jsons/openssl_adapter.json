[
  {
    "label": "OpenSSLAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OpenSSLAdapter"
  },
  {
    "label": "EarlyExitCatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EarlyExitCatcher"
  },
  {
    "label": "SSLState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SSLState"
  },
  {
    "label": "ssl_verify_result_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ssl_verify_result_t"
  },
  {
    "label": "ssl_verify_result_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ssl_verify_result_t"
  },
  {
    "label": "OpenSSLStreamAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OpenSSLStreamAdapter"
  },
  {
    "label": "OpenSSLAdapterFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OpenSSLAdapterFactory"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "OpenSSLAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OpenSSLAdapter"
  },
  {
    "label": "StrJoin()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "StrJoin(const std::vector<std::string>& list, char delimiter)"
  },
  {
    "label": "InitializeSSL()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeSSL()"
  },
  {
    "label": "CleanupSSL()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CleanupSSL()"
  },
  {
    "label": "OpenSSLAdapter()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "OpenSSLAdapter(Socket* socket,\n                          OpenSSLSessionCache* ssl_session_cache = nullptr,\n                          SSLCertificateVerifier* ssl_cert_verifier = nullptr)"
  },
  {
    "label": "EarlyExitCatcher()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "EarlyExitCatcher(OpenSSLAdapter& adapter_ptr)"
  },
  {
    "label": "disable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "disable()"
  },
  {
    "label": "BeginSSL()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BeginSSL()"
  },
  {
    "label": "ContinueSSL()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ContinueSSL()"
  },
  {
    "label": "Error()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Error(absl::string_view context, int err, bool signal = true)"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "OnTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTimeout()"
  },
  {
    "label": "DoSslWrite()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DoSslWrite(const void* pv, size_t cb, int* error)"
  },
  {
    "label": "SSLPostConnectionCheck()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SSLPostConnectionCheck(SSL* ssl, absl::string_view host)"
  },
  {
    "label": "SSLInfoCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SSLInfoCallback(const SSL* ssl, int where, int ret)"
  },
  {
    "label": "SSLVerifyCallback()",
    "kind": "Method",
    "detail": "Function (ssl_verify_result_t)",
    "insertText": "SSLVerifyCallback(SSL* ssl,\n                                                    uint8_t* out_alert)"
  },
  {
    "label": "SSLVerifyInternal()",
    "kind": "Method",
    "detail": "Function (ssl_verify_result_t)",
    "insertText": "SSLVerifyInternal(SSL* ssl, uint8_t* out_alert)"
  },
  {
    "label": "SSLVerifyCallback()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSLVerifyCallback(int ok, X509_STORE_CTX* store)"
  },
  {
    "label": "SSLVerifyInternal()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SSLVerifyInternal(int status_on_error, SSL* ssl, X509_STORE_CTX* store)"
  },
  {
    "label": "NewSSLSessionCallback()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NewSSLSessionCallback(SSL* ssl, SSL_SESSION* session)"
  },
  {
    "label": "OpenSSLAdapterFactory()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "OpenSSLAdapterFactory()"
  },
  {
    "label": "TransformAlpnProtocols()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "TransformAlpnProtocols(const std::vector<std::string>& protos)"
  }
]