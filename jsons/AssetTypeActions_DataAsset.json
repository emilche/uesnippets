[
  {
    "label": "ASSETTOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ASSETTOOLS_API"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AssetTypeActions_Base . h \" # include \" Engine / DataAsset . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class FAssetTypeActions_DataAsset : public FAssetTypeActions_Base { public : FText)",
    "insertText": "GetName()"
  },
  {
    "label": "GetTypeColor()",
    "kind": "Method",
    "detail": "Function (} FColor)",
    "insertText": "GetTypeColor()"
  },
  {
    "label": "GetSupportedClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "GetSupportedClass()"
  },
  {
    "label": "GetCategories()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetCategories()"
  },
  {
    "label": "GetActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetActions(const TArray<UObject*>& InObjects, struct FToolMenuSection& Section)"
  },
  {
    "label": "PerformAssetDiff()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformAssetDiff(UObject* OldAsset, UObject* NewAsset, const FRevisionInfo& OldRevision, const FRevisionInfo& NewRevision)"
  },
  {
    "label": "ExecuteChangeDataAssetClass()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ExecuteChangeDataAssetClass(TArray<TWeakObjectPtr<UDataAsset>> InDataAssets)"
  }
]