[
  {
    "label": "FCompactPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactPose"
  },
  {
    "label": "FCompressedAnimSequence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompressedAnimSequence"
  },
  {
    "label": "FAnimExtractContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimExtractContext"
  },
  {
    "label": "FAnimSequenceDecompressionContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimSequenceDecompressionContext"
  },
  {
    "label": "FRootMotionReset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionReset"
  },
  {
    "label": "DecompressPose()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" struct FCompactPose ; struct FCompressedAnimSequence ; struct FAnimExtractContext ; struct FAnimSequenceDecompressionContext ; struct FRootMotionReset ; namespace UE::Anim::Decompression { void)",
    "insertText": "DecompressPose(FCompactPose& OutPose, const FCompressedAnimSequence& CompressedData, const FAnimExtractContext& ExtractionContext, FAnimSequenceDecompressionContext& DecompressionContext, const TArray<FTransform>& RetargetTransforms, const FRootMotionReset& RootMotionReset)"
  },
  {
    "label": "DecompressPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecompressPose(FCompactPose& OutPose, const FCompressedAnimSequence& CompressedData, const FAnimExtractContext& ExtractionContext, FAnimSequenceDecompressionContext& DecompressionContext, FName RetargetSource, const FRootMotionReset& RootMotionReset)"
  }
]