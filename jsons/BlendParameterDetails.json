[
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "FBlendParameterDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlendParameterDetails"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IPropertyTypeCustomization . h \" # include \" Widgets / Input / SNumericEntryBox . h \" class IPropertyHandle ; class FBlendParameterDetails : public IPropertyTypeCustomization { public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> StructPropertyHandle, class FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, class IDetailChildrenBuilder& ChildBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "GetRangeValue()",
    "kind": "Method",
    "detail": "Function (private : TOptional<float>)",
    "insertText": "GetRangeValue(const int32 RangeValueIndex)"
  },
  {
    "label": "OnRangeNumValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeNumValueChanged(float FloatValue, const int32 RangeValueIndex)"
  },
  {
    "label": "OnRangeNumValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRangeNumValueCommitted(float FloatValue, ETextCommit::Type CommitType, const int32 RangeValueIndex)"
  }
]