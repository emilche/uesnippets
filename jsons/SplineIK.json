[
  {
    "label": "FInterpCurveFloat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurveFloat"
  },
  {
    "label": "FInterpCurveQuat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurveQuat"
  },
  {
    "label": "FInterpCurveVector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpCurveVector"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" Math / Axis . h \" # include \" Math / Quat . h \" # include \" Math / Transform . h \" # include \" Math / UnrealMathSSE . h \" struct FInterpCurveFloat ; struct FInterpCurveQuat ; struct FInterpCurveVector ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(float, FFloatMapping, float)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_ThreeParams(float, FFindParamAtFirstSphereIntersection, const FVector& , float , int32&)"
  },
  {
    "label": "SolveSplineIK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolveSplineIK(const TArray<FTransform>& BoneTransforms, const FInterpCurveVector& PositionSpline, const FInterpCurveQuat& RotationSpline, const FInterpCurveVector& ScaleSpline, const float TotalSplineAlpha, const float TotalSplineLength, const FFloatMapping& Twist, const float Roll, const float Stretch, const float Offset, const EAxis::Type BoneAxis, const FFindParamAtFirstSphereIntersection& FindParamAtFirstSphereIntersection, const TArray<FQuat>& BoneOffsetRotations, const TArray<float>& BoneLengths, const float OriginalSplineLength, TArray<FTransform>& OutBoneTransforms)"
  }
]