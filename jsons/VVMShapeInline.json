[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "VEntry()",
    "kind": "Method",
    "detail": "Function (VShape::)",
    "insertText": "VEntry(const VShape::VEntry& Other) : Type(Other.Type)"
  },
  {
    "label": "VEntry()",
    "kind": "Method",
    "detail": "Function (break ; } } VShape::)",
    "insertText": "VEntry() : Index(0) , Type(EFieldType::Offset)"
  },
  {
    "label": "VEntry()",
    "kind": "Method",
    "detail": "Function (} VShape::)",
    "insertText": "VEntry(FProperty* InProperty, EFieldType InType) : UProperty(InProperty) , Type(InProperty->IsA<FVRestValueProperty>() ? EFieldType::FVerseProperty : InType)"
  },
  {
    "label": "VEntry()",
    "kind": "Method",
    "detail": "Function (} VShape::)",
    "insertText": "VEntry(FAccessContext Context, VValue InConstant) : Value(Context, InConstant) , Type(EFieldType::Constant)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool VShape::)",
    "insertText": "operator(const VShape::VEntry& Other)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (} } bool VShape::)",
    "insertText": "Matches(KeyInitType A, KeyInitType B)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (} uint32 VShape::)",
    "insertText": "GetKeyHash(KeyInitType Key)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (} uint32 VShape::)",
    "insertText": "GetKeyHash(const VUniqueString& Key)"
  },
  {
    "label": "GetField()",
    "kind": "Method",
    "detail": "Function (} const VShape::VEntry*)",
    "insertText": "GetField(const VUniqueString& Name)"
  },
  {
    "label": "GetNumFields()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "GetNumFields()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const VShape& Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const VShape::VEntry& Field)"
  },
  {
    "label": "VERSE_UNREACHABLE()",
    "kind": "Method",
    "detail": "Function (default : break ; })",
    "insertText": "VERSE_UNREACHABLE()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const VShape& Shape)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (uint32 Hash = 0 ;)",
    "insertText": "for(auto It : Shape.Fields)"
  },
  {
    "label": "HashCombineFast()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombineFast(Hash, GetTypeHash(It.Key))"
  },
  {
    "label": "HashCombineFast()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombineFast(Hash, GetTypeHash(It.Value))"
  }
]