[
  {
    "label": "FOnSubmixEnvelopeBP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOnSubmixEnvelopeBP"
  },
  {
    "label": "USoundEffectSubmix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundEffectSubmix"
  },
  {
    "label": "USoundSubmix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundSubmix"
  },
  {
    "label": "USoundSubmixBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundSubmixBase"
  },
  {
    "label": "USoundModulatorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundModulatorBase"
  },
  {
    "label": "IAudioMixerEffect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAudioMixerEffect"
  },
  {
    "label": "FMixerSourceVoice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSourceVoice"
  },
  {
    "label": "FMixerDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerDevice"
  },
  {
    "label": "EMixerSourceSubmixSendStage",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMixerSourceSubmixSendStage"
  },
  {
    "label": "FSubmixVoiceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubmixVoiceData"
  },
  {
    "label": "FMixerSubmix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSubmix"
  },
  {
    "label": "FChildSubmixInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChildSubmixInfo"
  },
  {
    "label": "FMixerSubmix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSubmix"
  },
  {
    "label": "AUDIOMIXER_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AUDIOMIXER_API"
  },
  {
    "label": "FSubmixEffectFadeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubmixEffectFadeInfo"
  },
  {
    "label": "FSoundfieldEffectProcessorData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundfieldEffectProcessorData"
  },
  {
    "label": "FSoundfieldStreams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundfieldStreams"
  },
  {
    "label": "FEndpointData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEndpointData"
  },
  {
    "label": "FSpectralAnalysisBandInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpectralAnalysisBandInfo"
  },
  {
    "label": "FSpectrumAnalysisDelegateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpectrumAnalysisDelegateInfo"
  },
  {
    "label": "FMixerDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerDevice"
  },
  {
    "label": "FMixerSubmix()",
    "kind": "Method",
    "detail": "Function (AUDIOMIXER_API)",
    "insertText": "FMixerSubmix(FMixerDevice* InMixerDevice)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const USoundSubmixBase* InSoundSubmix, bool bAllowReInit = true)"
  },
  {
    "label": "SetParentSubmix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParentSubmix(TWeakPtr<FMixerSubmix, ESPMode::ThreadSafe> Submix)"
  },
  {
    "label": "AddChildSubmix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildSubmix(TWeakPtr<FMixerSubmix, ESPMode::ThreadSafe> Submix)"
  },
  {
    "label": "RemoveChildSubmix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildSubmix(TWeakPtr<FMixerSubmix, ESPMode::ThreadSafe> SubmixWeakPtr)"
  },
  {
    "label": "RegisterAudioBus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAudioBus(const Audio::FAudioBusKey& InAudioBusKey, Audio::FPatchInput&& InPatchInput)"
  },
  {
    "label": "UnregisterAudioBus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAudioBus(const Audio::FAudioBusKey& InAudioBusKey)"
  },
  {
    "label": "SetOutputVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOutputVolume(float InOutputLevel)"
  },
  {
    "label": "SetDryLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDryLevel(float InDryLevel)"
  },
  {
    "label": "SetWetLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWetLevel(float InWetLevel)"
  },
  {
    "label": "UpdateModulationSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateModulationSettings(const TSet<TObjectPtr<USoundModulatorBase>>& InOutputModulators, const TSet<TObjectPtr<USoundModulatorBase>>& InWetLevelModulators, const TSet<TObjectPtr<USoundModulatorBase>>& InDryLevelModulators)"
  },
  {
    "label": "SetModulationBaseLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModulationBaseLevels(float InVolumeModBaseDb, float InWetModeBaseDb, float InDryModBaseDb)"
  },
  {
    "label": "GetParentSubmix()",
    "kind": "Method",
    "detail": "Function (ESPMode::ThreadSafe>)",
    "insertText": "GetParentSubmix()"
  },
  {
    "label": "AddOrSetSourceVoice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrSetSourceVoice(FMixerSourceVoice* InSourceVoice, const float SendLevel, EMixerSourceSubmixSendStage InSubmixSendStage)"
  },
  {
    "label": "AddPatch()",
    "kind": "Method",
    "detail": "Function (FPatchOutputStrongPtr)",
    "insertText": "AddPatch(float InGain)"
  },
  {
    "label": "RemoveSourceVoice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSourceVoice(FMixerSourceVoice* InSourceVoice)"
  },
  {
    "label": "AddSoundEffectSubmix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSoundEffectSubmix(FSoundEffectSubmixPtr InSoundEffectSubmix)"
  },
  {
    "label": "RemoveSoundEffectSubmix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSoundEffectSubmix(uint32 SubmixPresetId)"
  },
  {
    "label": "RemoveSoundEffectSubmixAtIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSoundEffectSubmixAtIndex(int32 InIndex)"
  },
  {
    "label": "ClearSoundEffectSubmixes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSoundEffectSubmixes()"
  },
  {
    "label": "SetSubmixEffectChainOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSubmixEffectChainOverride(const TArray<FSoundEffectSubmixPtr>& InSubmixEffectPresetChain, float InFadeTimeSec)"
  },
  {
    "label": "ClearSubmixEffectChainOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSubmixEffectChainOverride(float InFadeTimeSec)"
  },
  {
    "label": "ReplaceSoundEffectSubmix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceSoundEffectSubmix(int32 InIndex, FSoundEffectSubmixPtr InEffectInstance)"
  },
  {
    "label": "SetBackgroundMuted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBackgroundMuted(bool bInMuted)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(FAlignedFloatBuffer& OutAudio)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(ISoundfieldAudioPacket& OutputAudio)"
  },
  {
    "label": "SendAudioToSubmixBufferListeners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendAudioToSubmixBufferListeners(FAlignedFloatBuffer& OutAudioBuffer)"
  },
  {
    "label": "ProcessAudioAndSendToEndpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudioAndSendToEndpoint()"
  },
  {
    "label": "GetNumChainEffects()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumChainEffects()"
  },
  {
    "label": "GetSubmixEffect()",
    "kind": "Method",
    "detail": "Function (FSoundEffectSubmixPtr)",
    "insertText": "GetSubmixEffect(const int32 InIndex)"
  },
  {
    "label": "SetSoundfieldFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSoundfieldFactory(ISoundfieldFactory* InSoundfieldFactory)"
  },
  {
    "label": "SetupSoundfieldStreams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupSoundfieldStreams(const USoundfieldEncodingSettingsBase* SoundfieldSettings, TArray<USoundfieldEffectBase*>& Processors, ISoundfieldFactory* InSoundfieldFactory)"
  },
  {
    "label": "TeardownSoundfieldStreams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TeardownSoundfieldStreams()"
  },
  {
    "label": "SetupEndpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupEndpoint(IAudioEndpointFactory* InFactory, const UAudioEndpointSettingsBase* InSettings)"
  },
  {
    "label": "SetupEndpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupEndpoint(ISoundfieldEndpointFactory* InFactory, const USoundfieldEndpointSettingsBase* InSettings)"
  },
  {
    "label": "UpdateEndpointSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEndpointSettings(TUniquePtr<IAudioEndpointSettingsProxy>&& InSettings)"
  },
  {
    "label": "UpdateEndpointSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEndpointSettings(TUniquePtr<ISoundfieldEndpointSettingsProxy>&& InSettings)"
  },
  {
    "label": "OnStartRecordingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStartRecordingOutput(float ExpectedDuration)"
  },
  {
    "label": "PauseRecordingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseRecordingOutput()"
  },
  {
    "label": "ResumeRecordingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeRecordingOutput()"
  },
  {
    "label": "RegisterBufferListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterBufferListener(ISubmixBufferListener* BufferListener)"
  },
  {
    "label": "UnregisterBufferListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterBufferListener(ISubmixBufferListener* BufferListener)"
  },
  {
    "label": "RegisterBufferListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterBufferListener(TSharedRef<ISubmixBufferListener, ESPMode::ThreadSafe> BufferListener)"
  },
  {
    "label": "UnregisterBufferListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterBufferListener(TSharedRef<ISubmixBufferListener, ESPMode::ThreadSafe> BufferListener)"
  },
  {
    "label": "StartEnvelopeFollowing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartEnvelopeFollowing(int32 AttackTime, int32 ReleaseTime)"
  },
  {
    "label": "StopEnvelopeFollowing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopEnvelopeFollowing()"
  },
  {
    "label": "AddEnvelopeFollowerDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEnvelopeFollowerDelegate(const FOnSubmixEnvelopeBP& OnSubmixEnvelopeBP)"
  },
  {
    "label": "RemoveEnvelopeFollowerDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEnvelopeFollowerDelegate(const FOnSubmixEnvelopeBP& OnSubmixEnvelopeBP)"
  },
  {
    "label": "StartSpectrumAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartSpectrumAnalysis(const FSoundSpectrumAnalyzerSettings& InSettings)"
  },
  {
    "label": "StopSpectrumAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopSpectrumAnalysis()"
  },
  {
    "label": "AddSpectralAnalysisDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSpectralAnalysisDelegate(const FSoundSpectrumAnalyzerDelegateSettings& InDelegateSettings, const FOnSubmixSpectralAnalysisBP& OnSubmixSpectralAnalysisBP)"
  },
  {
    "label": "RemoveSpectralAnalysisDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSpectralAnalysisDelegate(const FOnSubmixSpectralAnalysisBP& OnSubmixSpectralAnalysisBP)"
  },
  {
    "label": "GetMagnitudeForFrequencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMagnitudeForFrequencies(const TArray<float>& InFrequencies, TArray<float>& OutMagnitudes)"
  },
  {
    "label": "GetPhaseForFrequencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhaseForFrequencies(const TArray<float>& InFrequencies, TArray<float>& OutPhases)"
  },
  {
    "label": "BroadcastDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastDelegates()"
  },
  {
    "label": "SetAutoDisable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoDisable(bool bInAutoDisable)"
  },
  {
    "label": "SetAutoDisableTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoDisableTime(float InAutoDisableTime)"
  },
  {
    "label": "GetKeyForSubmixEncoding()",
    "kind": "Method",
    "detail": "Function (FSoundfieldEncodingKey)",
    "insertText": "GetKeyForSubmixEncoding()"
  },
  {
    "label": "GetInitializationParamsForSoundfieldStream()",
    "kind": "Method",
    "detail": "Function (FAudioPluginInitializationParams)",
    "insertText": "GetInitializationParamsForSoundfieldStream()"
  },
  {
    "label": "GetDefaultPositionalDataForAudioDevice()",
    "kind": "Method",
    "detail": "Function (FSoundfieldSpeakerPositionalData)",
    "insertText": "GetDefaultPositionalDataForAudioDevice()"
  },
  {
    "label": "InitInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitInternal()"
  },
  {
    "label": "DownmixBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DownmixBuffer(const int32 InChannels, const FAlignedFloatBuffer& InBuffer, const int32 OutChannels, FAlignedFloatBuffer& OutNewBuffer)"
  },
  {
    "label": "MixBufferDownToMono()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixBufferDownToMono(const FAlignedFloatBuffer& InBuffer, int32 NumInputChannels, FAlignedFloatBuffer& OutBuffer)"
  },
  {
    "label": "SetupSoundfieldEncodersForChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupSoundfieldEncodersForChildren()"
  },
  {
    "label": "SetupSoundfieldEncodingForChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupSoundfieldEncodingForChild(FChildSubmixInfo& InChild)"
  },
  {
    "label": "SetupSoundfieldStreamForParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupSoundfieldStreamForParent()"
  },
  {
    "label": "SetUpSoundfieldPositionalData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUpSoundfieldPositionalData(const TSharedPtr<Audio::FMixerSubmix, ESPMode::ThreadSafe>& InParentSubmix)"
  },
  {
    "label": "MixInSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixInSource(const ISoundfieldAudioPacket& InAudio, const ISoundfieldEncodingSettingsProxy& InSettings, ISoundfieldAudioPacket& PacketToSumTo)"
  },
  {
    "label": "UpdateListenerRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateListenerRotation(const FQuat& InRotation)"
  },
  {
    "label": "MixInChildSubmix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixInChildSubmix(FChildSubmixInfo& Child, ISoundfieldAudioPacket& PacketToSumTo)"
  },
  {
    "label": "GetTranscoderForChildSubmix()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<ISoundfieldTranscodeStream>)",
    "insertText": "GetTranscoderForChildSubmix(const TSharedPtr<Audio::FMixerSubmix, ESPMode::ThreadSafe>& InChildSubmix)"
  },
  {
    "label": "PumpCommandQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PumpCommandQueue()"
  },
  {
    "label": "GenerateEffectChainAudio()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateEffectChainAudio(FSoundEffectSubmixInputData& InputData, const FAlignedFloatBuffer& InAudioBuffer, TArray<FSoundEffectSubmixPtr>& InEffectChain, FAlignedFloatBuffer& OutBuffer)"
  },
  {
    "label": "SendAudioToRegisteredAudioBuses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendAudioToRegisteredAudioBuses(FAlignedFloatBuffer& OutAudioBuffer)"
  },
  {
    "label": "UnregisterBufferListenerInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterBufferListenerInternal(UPTRINT ListenerBufferPtr)"
  },
  {
    "label": "PruneSubmixBufferListeners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PruneSubmixBufferListeners()"
  }
]