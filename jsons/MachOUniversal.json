[
  {
    "label": "MachOUniversalBinary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachOUniversalBinary"
  },
  {
    "label": "ObjectForArch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ObjectForArch"
  },
  {
    "label": "object_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "object_iterator"
  },
  {
    "label": "anchor()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_OBJECT_MACHOUNIVERSAL_H # define LLVM_OBJECT_MACHOUNIVERSAL_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / ADT / Triple . h \" # include \" llvm / ADT / iterator_range . h \" # include \" llvm / Object / Archive . h \" # include \" llvm / Object / Binary . h \" # include \" llvm / Object / MachO . h \" # include \" llvm / Support / ErrorOr . h \" # include \" llvm / Support / MachO . h \" namespace llvm { namespace object { class MachOUniversalBinary : public Binary { void)",
    "insertText": "anchor()"
  },
  {
    "label": "ObjectForArch()",
    "kind": "Method",
    "detail": "Function (uint32_t NumberOfObjects ; public : class ObjectForArch { const MachOUniversalBinary* Parent ; uint32_t Index ; MachO::fat_arch Header ; public :)",
    "insertText": "ObjectForArch(const MachOUniversalBinary *Parent, uint32_t Index)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Parent = nullptr ; Index = 0 ; } bool)",
    "insertText": "operator(const ObjectForArch &Other)"
  },
  {
    "label": "getNext()",
    "kind": "Method",
    "detail": "Function (} ObjectForArch)",
    "insertText": "getNext()"
  },
  {
    "label": "getCPUType()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "getCPUType()"
  },
  {
    "label": "getArch()",
    "kind": "Method",
    "detail": "Function (Triple T =)",
    "insertText": "getArch(Header.cputype, Header.cpusubtype)"
  },
  {
    "label": "getAsObjectFile()",
    "kind": "Method",
    "detail": "Function (} ErrorOr<std::unique_ptr<MachOObjectFile>>)",
    "insertText": "getAsObjectFile()"
  },
  {
    "label": "getAsArchive()",
    "kind": "Method",
    "detail": "Function (ErrorOr<std::unique_ptr<Archive>>)",
    "insertText": "getAsArchive()"
  },
  {
    "label": "object_iterator()",
    "kind": "Method",
    "detail": "Function (} ; class object_iterator { ObjectForArch Obj ; public :)",
    "insertText": "object_iterator(const ObjectForArch &Obj) : Obj(Obj)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} const ObjectForArch*)",
    "insertText": "operator()"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (ErrorOr<std::unique_ptr<MachOUniversalBinary>>)",
    "insertText": "create(MemoryBufferRef Source)"
  },
  {
    "label": "begin_objects()",
    "kind": "Method",
    "detail": "Function (object_iterator)",
    "insertText": "begin_objects()"
  },
  {
    "label": "end_objects()",
    "kind": "Method",
    "detail": "Function (} object_iterator)",
    "insertText": "end_objects()"
  },
  {
    "label": "objects()",
    "kind": "Method",
    "detail": "Function (} iterator_range<object_iterator>)",
    "insertText": "objects()"
  },
  {
    "label": "getNumberOfObjects()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "getNumberOfObjects()"
  },
  {
    "label": "getObjectForArch()",
    "kind": "Method",
    "detail": "Function (} ErrorOr<std::unique_ptr<MachOObjectFile>>)",
    "insertText": "getObjectForArch(StringRef ArchName)"
  }
]