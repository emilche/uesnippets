[
  {
    "label": "M4Image",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "M4Image"
  },
  {
    "label": "M4Decoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "M4Decoder"
  },
  {
    "label": "VIDImage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VIDImage"
  },
  {
    "label": "EDGE_SIZE2()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" vdecmpeg4 . h \" # include \" M4Decoder . h \" namespace vdecmpeg4 { # define EDGE_SIZE 3 2 # define)",
    "insertText": "EDGE_SIZE2(EDGE_SIZE/2) #define ALIGNMENT_TRASH (64)"
  },
  {
    "label": "M4Image()",
    "kind": "Method",
    "detail": "Function (public : VIDImage mImage ; VIDImageInfo mImageInfo ; private :)",
    "insertText": "M4Image()"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (} public : M4Image*)",
    "insertText": "create(M4Decoder* decoder, int16 width, int16 height, bool poolMem = true)"
  },
  {
    "label": "destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroy(M4Image*& pImage, M4Decoder* decoder)"
  },
  {
    "label": "Black()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Black()"
  },
  {
    "label": "RefAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefAdd()"
  },
  {
    "label": "RefRemove()",
    "kind": "Method",
    "detail": "Function (+ + mRefCount ; } void)",
    "insertText": "RefRemove()"
  },
  {
    "label": "free()",
    "kind": "Method",
    "detail": "Function (pDecoder -> mMemSys .)",
    "insertText": "free(this)"
  },
  {
    "label": "RefGet()",
    "kind": "Method",
    "detail": "Function (} } int32)",
    "insertText": "RefGet()"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void* operator)",
    "insertText": "new(size_t sz, M4MemHandler& memSys)"
  },
  {
    "label": "malloc()",
    "kind": "Method",
    "detail": "Function (void* pAddr = memSys .)",
    "insertText": "malloc(sz, 16)"
  },
  {
    "label": "Memzero()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memzero(pAddr, sz)"
  },
  {
    "label": "delete()",
    "kind": "Method",
    "detail": "Function (} return pAddr ; } void operator)",
    "insertText": "delete(void* ptr)"
  },
  {
    "label": "setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setup(uint8* ptr, uint32 flags)"
  },
  {
    "label": "M4Image()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "M4Image(const M4Image& pObj)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const M4Image&)",
    "insertText": "operator(const M4Image& pObj)"
  },
  {
    "label": "saveBMP()",
    "kind": "Method",
    "detail": "Function (M4_MEMORY_HANDLER class M4Decoder ; struct VIDImage ; # ifdef _M4_ENABLE_BMP_OUT void)",
    "insertText": "saveBMP(const char* pBaseName, uint32 frameCounter)"
  },
  {
    "label": "getRGB()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "getRGB(uint8* dst, int32 dstStride)"
  },
  {
    "label": "initImageSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initImageSave()"
  },
  {
    "label": "swapM4Image()",
    "kind": "Method",
    "detail": "Function (int32 mTabRgbY [ 2 5 6 ] ; int32 mTabBU [ 2 5 6 ] ; int32 mTabGU [ 2 5 6 ] ; int32 mTabGV [ 2 5 6 ] ; int32 mTabRV [ 2 5 6 ] ; bool mInitImageSave ; # endif } ; void)",
    "insertText": "swapM4Image(M4Image*& img1, M4Image*& img2)"
  }
]