[
  {
    "label": "CefScopedTempDir",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefScopedTempDir"
  },
  {
    "label": "CefScopedTempDir()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_SCOPED_TEMP_DIR_H_ # define CEF_INCLUDE_SCOPED_TEMP_DIR_H_ # pragma once # include \" include / base / cef_build . h \" # include \" include / base / cef_macros . h \" # include \" include / cef_base . h \" class CefScopedTempDir { public :)",
    "insertText": "CefScopedTempDir()"
  },
  {
    "label": "CreateUniqueTempDir()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateUniqueTempDir()"
  },
  {
    "label": "CreateUniqueTempDirUnderPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateUniqueTempDirUnderPath(const CefString& path)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Set(const CefString& path)"
  },
  {
    "label": "Delete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Delete()"
  },
  {
    "label": "Take()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "Take()"
  },
  {
    "label": "GetPath()",
    "kind": "Method",
    "detail": "Function (const CefString&)",
    "insertText": "GetPath()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (private : CefString path_ ;)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(CefScopedTempDir)"
  }
]