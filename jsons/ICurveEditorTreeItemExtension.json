[
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MVVM / ViewModelTypeID . h \" # include \" CurveEditorTypes . h \" # include \" Tree / ICurveEditorTreeItem . h \" struct FGuid ; class FCurveEditor ; namespace UE { namespace Sequencer { class ICurveEditorTreeItemExtension { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID(ICurveEditorTreeItemExtension) virtual ~ICurveEditorTreeItemExtension()"
  },
  {
    "label": "GetCurveEditorTreeItem()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<ICurveEditorTreeItem>)",
    "insertText": "GetCurveEditorTreeItem()"
  },
  {
    "label": "HasCurves()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCurves()"
  },
  {
    "label": "GetUniquePathName()",
    "kind": "Method",
    "detail": "Function (TOptional<FString>)",
    "insertText": "GetUniquePathName()"
  },
  {
    "label": "GetCurveEditorItemID()",
    "kind": "Method",
    "detail": "Function (FCurveEditorTreeItemID)",
    "insertText": "GetCurveEditorItemID()"
  },
  {
    "label": "OnAddedToCurveEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddedToCurveEditor(FCurveEditorTreeItemID ItemID, TSharedPtr<FCurveEditor> CurveEditor)"
  },
  {
    "label": "OnRemovedFromCurveEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemovedFromCurveEditor(TSharedPtr<FCurveEditor> CurveEditor)"
  },
  {
    "label": "Invalid()",
    "kind": "Method",
    "detail": "Function (CurveEditorTreeItemID =)",
    "insertText": "Invalid()"
  }
]