[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "SGraphPinVector4Slider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphPinVector4Slider"
  },
  {
    "label": "ETextBoxIndex",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextBoxIndex"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Math / Vector4 . h \" # include \" SGraphPin . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" SVector4Slider . h \" # include \" ScopedTransaction . h \" class SWidget ; class UEdGraphPin ; template<NumericType> class SGraphPinVector4Slider : public SGraphPin { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SGraphPinVector4Slider)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, UEdGraphPin* InGraphPinObj, FProperty* InProperty)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (PinProperty = InProperty ;)",
    "insertText": "Construct(SGraphPin::FArguments(), InGraphPinObj)"
  },
  {
    "label": "GetDefaultValueWidget()",
    "kind": "Method",
    "detail": "Function (} protected : TSharedRef<SWidget>)",
    "insertText": "GetDefaultValueWidget()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (UScriptStruct* RotatorStruct = TBaseStructure<FRotator)",
    "insertText": "Get()"
  },
  {
    "label": "GetCurrentValue_0()",
    "kind": "Method",
    "detail": "Function (} private : enum ETextBoxIndex { TextBox_0,TextBox_1,TextBox_2,TextBox_3,} ; FString)",
    "insertText": "GetCurrentValue_0()"
  },
  {
    "label": "GetCurrentValue_1()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetCurrentValue_1()"
  },
  {
    "label": "GetCurrentValue_2()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetCurrentValue_2()"
  },
  {
    "label": "GetCurrentValue_3()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetCurrentValue_3()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetValue(ETextBoxIndex Index)"
  },
  {
    "label": "GetDefaultAsString()",
    "kind": "Method",
    "detail": "Function (FString DefaultString = GraphPinObj ->)",
    "insertText": "GetDefaultAsString()"
  },
  {
    "label": "TrimStartAndEndInline()",
    "kind": "Method",
    "detail": "Function (TArray<FString> ResultString ; DefaultString .)",
    "insertText": "TrimStartAndEndInline()"
  },
  {
    "label": "ParseIntoArray()",
    "kind": "Method",
    "detail": "Function (DefaultString .)",
    "insertText": "ParseIntoArray(ResultString, TEXT(\",\"), true)"
  },
  {
    "label": "OnChangedValueTextBox_0()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "OnChangedValueTextBox_0(NumericType NewValue, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (const FString ValueStr =)",
    "insertText": "Printf(TEXT(\"%f\"), NewValue)"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (FString DefaultValue ; DefaultValue = ValueStr +)",
    "insertText": "FString(TEXT(\",\")) + GetValue(TextBox_1) + FString(TEXT(\",\")) + GetValue(TextBox_2) + FString(TEXT(\",\")) + GetValue(TextBox_3)"
  },
  {
    "label": "Transaction()",
    "kind": "Method",
    "detail": "Function (const FScopedTransaction)",
    "insertText": "Transaction(NSLOCTEXT(\"GraphEditor\", \"ChangeVector4PinValue\", \"Change Vector4 Pin Value\"))"
  },
  {
    "label": "Modify()",
    "kind": "Method",
    "detail": "Function (GraphPinObj ->)",
    "insertText": "Modify()"
  },
  {
    "label": "GetSchema()",
    "kind": "Method",
    "detail": "Function (GraphPinObj ->)",
    "insertText": "GetSchema()->TrySetDefaultValue(*GraphPinObj, DefaultValue)"
  },
  {
    "label": "OnChangedValueTextBox_1()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "OnChangedValueTextBox_1(NumericType NewValue, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FString DefaultValue ; DefaultValue =)",
    "insertText": "GetValue(TextBox_0) + FString(TEXT(\",\")) + ValueStr + FString(TEXT(\",\")) + GetValue(TextBox_2) + FString(TEXT(\",\")) + GetValue(TextBox_3)"
  },
  {
    "label": "OnChangedValueTextBox_2()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "OnChangedValueTextBox_2(NumericType NewValue, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FString DefaultValue ; DefaultValue =)",
    "insertText": "GetValue(TextBox_0) + FString(TEXT(\",\")) + GetValue(TextBox_1) + FString(TEXT(\",\")) + ValueStr + FString(TEXT(\",\")) + GetValue(TextBox_3)"
  },
  {
    "label": "OnChangedValueTextBox_3()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "OnChangedValueTextBox_3(NumericType NewValue, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FString DefaultValue ; DefaultValue =)",
    "insertText": "GetValue(TextBox_0) + FString(TEXT(\",\")) + GetValue(TextBox_1) + FString(TEXT(\",\")) + GetValue(TextBox_2) + FString(TEXT(\",\"))"
  }
]