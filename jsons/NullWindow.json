[
  {
    "label": "FNullApplication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNullApplication"
  },
  {
    "label": "FGenericWindowDefinition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericWindowDefinition"
  },
  {
    "label": "FNullWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNullWindow"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Logging / LogMacros . h \" # include \" Templates / SharedPointer . h \" # include \" GenericPlatform / GenericWindow . h \" # include \" Math / IntPoint . h \" class FNullApplication ; struct FGenericWindowDefinition ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogNullWindow, Log, All)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogNullWindowType, Log, All)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogNullWindowEvent, Log, All)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (class FNullWindow : public FGenericWindow { public : TSharedRef<FNullWindow>)",
    "insertText": "Make()"
  },
  {
    "label": "FNullWindow()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FNullWindow()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(class FNullApplication* const Application, const TSharedRef<FGenericWindowDefinition>& InDefinition, const TSharedPtr<FNullWindow>& InParent, const bool bShowImmediately)"
  },
  {
    "label": "ReshapeWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReshapeWindow(int32 X, int32 Y, int32 Width, int32 Height)"
  },
  {
    "label": "GetFullScreenInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFullScreenInfo(int32& X, int32& Y, int32& Width, int32& Height)"
  },
  {
    "label": "MoveWindowTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveWindowTo(int32 X, int32 Y)"
  },
  {
    "label": "BringToFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BringToFront(bool bForce = false)"
  },
  {
    "label": "HACK_ForceToFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HACK_ForceToFront()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "Minimize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Minimize()"
  },
  {
    "label": "Maximize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Maximize()"
  },
  {
    "label": "Restore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Restore()"
  },
  {
    "label": "Show()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Show()"
  },
  {
    "label": "Hide()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Hide()"
  },
  {
    "label": "SetWindowMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindowMode(EWindowMode::Type InNewWindowMode)"
  },
  {
    "label": "GetWindowMode()",
    "kind": "Method",
    "detail": "Function (EWindowMode::Type)",
    "insertText": "GetWindowMode()"
  },
  {
    "label": "IsMaximized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaximized()"
  },
  {
    "label": "IsMinimized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMinimized()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "GetRestoredDimensions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRestoredDimensions(int32& X, int32& Y, int32& Width, int32& Height)"
  },
  {
    "label": "SetWindowFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindowFocus()"
  },
  {
    "label": "SetOpacity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOpacity(const float InOpacity)"
  },
  {
    "label": "Enable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enable(bool bEnable)"
  },
  {
    "label": "IsPointInWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPointInWindow(int32 X, int32 Y)"
  },
  {
    "label": "GetWindowBorderSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWindowBorderSize()"
  },
  {
    "label": "GetWindowTitleBarSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWindowTitleBarSize()"
  },
  {
    "label": "GetOSWindowHandle()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetOSWindowHandle()"
  },
  {
    "label": "IsForegroundWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsForegroundWindow()"
  },
  {
    "label": "IsFullscreenSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFullscreenSupported()"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText(const TCHAR* const Text)"
  },
  {
    "label": "GetDefinition()",
    "kind": "Method",
    "detail": "Function (const FGenericWindowDefinition&)",
    "insertText": "GetDefinition()"
  },
  {
    "label": "IsDefinitionValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDefinitionValid()"
  },
  {
    "label": "AdjustCachedSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustCachedSize(FVector2D& Size)"
  },
  {
    "label": "GetDPIScaleFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDPIScaleFactor()"
  },
  {
    "label": "IsManualManageDPIChanges()",
    "kind": "Method",
    "detail": "Function (DPIScaleFactor = Value ; } bool)",
    "insertText": "IsManualManageDPIChanges()"
  },
  {
    "label": "SetManualManageDPIChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetManualManageDPIChanges(const bool bAutoHandle)"
  },
  {
    "label": "DrawAttention()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawAttention(const FWindowDrawAttentionParameters& Parameters)"
  },
  {
    "label": "SetNativeWindowButtonsVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNativeWindowButtonsVisibility(bool bVisible)"
  }
]