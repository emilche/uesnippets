[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CalculateRequiredDiskSpace()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Interfaces / IBuildManifest . h \" namespace BuildPatchServices { enum class EInstallMode : uint32 { StageFiles = 0,DestructiveInstall,NonDestructiveInstall,PrereqOnly,InvalidOrMax } ; uint64)",
    "insertText": "CalculateRequiredDiskSpace(const IBuildManifestPtr& CurrentManifest, const IBuildManifestRef& BuildManifest, const EInstallMode& InstallMode, const TSet<FString>& InstallTags)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "static_assert((uint32)BuildPatchServices::EInstallMode::InvalidOrMax == 4, \"Please add support for the extra values to the Lex functions below.\")"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "LexToString(BuildPatchServices::EInstallMode InstallMode)"
  },
  {
    "label": "CASE_ENUM_TO_STR()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "CASE_ENUM_TO_STR(Value) case BuildPatchServices::EInstallMode::Value: return TEXT(#Value) switch (InstallMode)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (default : return)",
    "insertText": "TEXT(\"InvalidOrMax\")"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (} # undef CASE_ENUM_TO_STR } void)",
    "insertText": "LexFromString(BuildPatchServices::EInstallMode& InstallMode, const TCHAR* Buffer)"
  },
  {
    "label": "RETURN_IF_EQUAL()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "RETURN_IF_EQUAL(Value) if (FCString::Stricmp(Buffer, TEXT(#Value)) == 0)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (InstallMode = BuildPatchServices::EInstallMode::Value ; return ; } const TCHAR* const Prefix =)",
    "insertText": "TEXT(\"EInstallMode::\")"
  },
  {
    "label": "Strlen()",
    "kind": "Method",
    "detail": "Function (const SIZE_T PrefixLen =)",
    "insertText": "Strlen(Prefix)"
  },
  {
    "label": "RETURN_IF_EQUAL()",
    "kind": "Method",
    "detail": "Function (Buffer + = PrefixLen ; })",
    "insertText": "RETURN_IF_EQUAL(StageFiles)"
  }
]