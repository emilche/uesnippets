[
  {
    "label": "FBaseRewindHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBaseRewindHistory"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "TDataRewindHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TDataRewindHistory"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "FFrameAndPhase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameAndPhase"
  },
  {
    "label": "EParticleHistoryPhase",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EParticleHistoryPhase"
  },
  {
    "label": "NoEntryInSync",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NoEntryInSync"
  },
  {
    "label": "NoEntryInSync",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NoEntryInSync"
  },
  {
    "label": "FPropertyInterval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyInterval"
  },
  {
    "label": "TParticlePropertyBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TParticlePropertyBuffer"
  },
  {
    "label": "EDesyncResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDesyncResult"
  },
  {
    "label": "FDirtyPropData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirtyPropData"
  },
  {
    "label": "FConstDirtyPropData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstDirtyPropData"
  },
  {
    "label": "TPerShapeDataStateProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPerShapeDataStateProperty"
  },
  {
    "label": "FPerShapeDataStateBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerShapeDataStateBase"
  },
  {
    "label": "FPerShapeDataState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerShapeDataState"
  },
  {
    "label": "FShapesArrayStateBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShapesArrayStateBase"
  },
  {
    "label": "TShapesArrayState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TShapesArrayState"
  },
  {
    "label": "FGeometryParticleStateBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryParticleStateBase"
  },
  {
    "label": "FGeometryParticleState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryParticleState"
  },
  {
    "label": "FJointStateBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FJointStateBase"
  },
  {
    "label": "FJointState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJointState"
  },
  {
    "label": "TDirtyObjects",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDirtyObjects"
  },
  {
    "label": "FPBDRigidsSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsSolver"
  },
  {
    "label": "FRewindData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRewindData"
  },
  {
    "label": "FDirtyRigidParticleReplicationErrorData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirtyRigidParticleReplicationErrorData"
  },
  {
    "label": "FPBDRigidsSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsSolver"
  },
  {
    "label": "FFrameManagerInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameManagerInfo"
  },
  {
    "label": "TDirtyObjectInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TDirtyObjectInfo"
  },
  {
    "label": "FDirtyParticleErrorInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirtyParticleErrorInfo"
  },
  {
    "label": "FResimDebugInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResimDebugInfo"
  },
  {
    "label": "IRewindCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRewindCallback"
  },
  {
    "label": "HasValidData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "HasValidData(ValidFrame)"
  },
  {
    "label": "ExtractData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ExtractData(ExtractFrame, bResetSolver, HistoryDatas, bExactFrame)"
  },
  {
    "label": "RecordData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "RecordData(RecordFrame, HistoryDatas)"
  },
  {
    "label": "ClosestData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ClosestData(DatasFrame, bMinDatas)"
  },
  {
    "label": "LoadData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "LoadData(LoadFrame)"
  },
  {
    "label": "EvalData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EvalData(EvalFrame)"
  },
  {
    "label": "LoadDatas()",
    "kind": "Method",
    "detail": "Function (pragma)",
    "insertText": "LoadDatas(RecordFrame)"
  },
  {
    "label": "GetCurrentData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetCurrentData()"
  },
  {
    "label": "GetCurrentData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetCurrentData()"
  },
  {
    "label": "NumValidData()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NumValidData(StartFrame, EndFrame)"
  },
  {
    "label": "GetDataHistory()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetDataHistory()"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString()"
  },
  {
    "label": "SyncSimWritablePropsFromSim()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncSimWritablePropsFromSim(FDirtyPropData Manager,const TPBDRigidParticleHandle<FReal,3>& Rigid)"
  },
  {
    "label": "SyncDirtyDynamics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncDirtyDynamics(FDirtyPropData& DestManager,const FDirtyChaosProperties& Dirty,const FConstDirtyPropData& SrcManager)"
  },
  {
    "label": "FRewindData()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FRewindData(FPBDRigidsSolver* InSolver, int32 NumFrames, bool InRewindDataOptimization, int32 InCurrentFrame)"
  },
  {
    "label": "ExtendHistoryWithFrame()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "ExtendHistoryWithFrame(const int32 Frame)"
  },
  {
    "label": "ClearPhaseAndFuture()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "ClearPhaseAndFuture(FGeometryParticleHandle& Handle, int32 Frame, FFrameAndPhase::EParticleHistoryPhase Phase)"
  },
  {
    "label": "PushStateAtFrame()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "PushStateAtFrame(FGeometryParticleHandle& Handle, int32 Frame, FFrameAndPhase::EParticleHistoryPhase Phase, const FVector& Position, const FQuat& Quaternion,\n\t\t\t\t\tconst FVector& LinVelocity, const FVector& AngVelocity, const bool bShouldSleep)"
  },
  {
    "label": "SetTargetStateAtFrame()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "SetTargetStateAtFrame(FGeometryParticleHandle& Handle, const int32 Frame, FFrameAndPhase::EParticleHistoryPhase Phase,\n\t\tconst FVector& Position, const FQuat& Quaternion, const FVector& LinVelocity, const FVector& AngVelocity, const bool bShouldSleep)"
  },
  {
    "label": "FinishFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishFrame()"
  },
  {
    "label": "PushGTDirtyData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushGTDirtyData(const FDirtyPropertiesManager& SrcManager,const int32 SrcDataIdx,const FDirtyProxy& Dirty, const FShapeDirtyData* ShapeDirtyData)"
  },
  {
    "label": "PushPTDirtyData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushPTDirtyData(TPBDRigidParticleHandle<FReal,3>& Rigid,const int32 SrcDataIdx)"
  },
  {
    "label": "MarkDirtyFromPT()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "MarkDirtyFromPT(FGeometryParticleHandle& Handle)"
  },
  {
    "label": "MarkDirtyJointFromPT()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "MarkDirtyJointFromPT(FPBDJointConstraintHandle& Handle)"
  },
  {
    "label": "SpawnProxyIfNeeded()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "SpawnProxyIfNeeded(FSingleParticlePhysicsProxy& Proxy)"
  },
  {
    "label": "ApplyInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyInputs(const int32 ApplyFrame, const bool bResetSolver)"
  },
  {
    "label": "RewindStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RewindStates(const int32 RewindFrame, const bool bResetSolver)"
  },
  {
    "label": "BufferPhysicsResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferPhysicsResults(TMap<const IPhysicsProxyBase*, struct FDirtyRigidParticleReplicationErrorData>& DirtyRigidErrors)"
  },
  {
    "label": "FindValidResimFrame()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FindValidResimFrame(const int32 RequestedFrame)"
  },
  {
    "label": "BlockResim()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockResim()"
  },
  {
    "label": "CompareTargetsToLastFrame()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CompareTargetsToLastFrame()"
  },
  {
    "label": "CheckVectorThreshold()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CheckVectorThreshold(FVec3 A, FVec3 B, float Threshold)"
  },
  {
    "label": "CheckQuaternionThreshold()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "CheckQuaternionThreshold(FQuat A, FQuat B, float ThresholdDegrees)"
  },
  {
    "label": "AdvanceFrameImp()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "AdvanceFrameImp(IResimCacheBase* ResimCache)"
  },
  {
    "label": "FindDirtyObjImp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindDirtyObjImp(DirtyParticles, Handle)"
  },
  {
    "label": "FindOrAddDirtyObjImp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindOrAddDirtyObjImp(DirtyParticles, Handle, InitializedOnFrame)"
  },
  {
    "label": "FindOrAddDirtyObjImp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindOrAddDirtyObjImp(DirtyJoints, Handle, InitializedOnFrame)"
  },
  {
    "label": "TObjState()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TObjState(State, Handle, PropertiesPool, { Frame, Phase })"
  },
  {
    "label": "RewindToFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RewindToFrame(int32 RewindFrame)"
  },
  {
    "label": "ApplyTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyTargets(const int32 Frame, const bool bResetSimulation)"
  },
  {
    "label": "StepNonResimParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StepNonResimParticles(const int32 Frame)"
  },
  {
    "label": "DesyncIfNecessary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DesyncIfNecessary(TDirtyInfo& Info, const FFrameAndPhase FrameAndPhase)"
  }
]