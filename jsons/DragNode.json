[
  {
    "label": "SGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphNode"
  },
  {
    "label": "SGraphPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphPanel"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" GraphEditorDragDropAction . h \" # include \" Input / DragAndDrop . h \" # include \" Input / Reply . h \" # include \" Math / Vector2D . h \" # include \" Templates / SharedPointer . h \" class SGraphNode ; class SGraphPanel ; class SWidget ; class UEdGraph ; class UEdGraphNode ; class FDragNode : public FGraphEditorDragDropAction { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FDragNode, FGraphEditorDragDropAction) static TSharedRef<FDragNode> New(const TSharedRef<SGraphPanel>& InGraphPanel, const TSharedRef<SGraphNode>& InDraggedNode)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FDragNode>)",
    "insertText": "New(const TSharedRef<SGraphPanel>& InGraphPanel, const TArray< TSharedRef<SGraphNode> >& InDraggedNodes)"
  },
  {
    "label": "HoverTargetChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HoverTargetChanged()"
  },
  {
    "label": "DroppedOnNode()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "DroppedOnNode(FVector2D ScreenPosition, FVector2D GraphPosition)"
  },
  {
    "label": "DroppedOnPanel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "DroppedOnPanel(const TSharedRef< SWidget >& Panel, FVector2D ScreenPosition, FVector2D GraphPosition, UEdGraph& Graph)"
  },
  {
    "label": "OnDragged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragged(const class FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "GetNodes()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedRef<SGraphNode>>&)",
    "insertText": "GetNodes()"
  },
  {
    "label": "IsValidOperation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidOperation()"
  },
  {
    "label": "GetGraphNodeForSGraphNode()",
    "kind": "Method",
    "detail": "Function (protected : typedef FGraphEditorDragDropAction Super ; UEdGraphNode*)",
    "insertText": "GetGraphNodeForSGraphNode(TSharedRef<SGraphNode>& SNode)"
  }
]