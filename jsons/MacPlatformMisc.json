[
  {
    "label": "CORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CORE_API"
  },
  {
    "label": "FGPUDriverInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUDriverInfo"
  },
  {
    "label": "FGPUDescriptorCommon",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUDescriptorCommon"
  },
  {
    "label": "FGPUDescriptorX86_64",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUDescriptorX86_64"
  },
  {
    "label": "FGPUDescriptorARM64",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUDescriptorARM64"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EMacModifierKeys",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMacModifierKeys"
  },
  {
    "label": "PlatformPreInit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / GenericPlatformMisc . h \" # include \" Mac / MacSystemIncludes . h \" # include \" Apple / ApplePlatformMisc . h \" struct FMacPlatformMisc : public FApplePlatformMisc { void)",
    "insertText": "PlatformPreInit()"
  },
  {
    "label": "PlatformInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlatformInit()"
  },
  {
    "label": "PlatformTearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlatformTearDown()"
  },
  {
    "label": "SetEnvironmentVar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnvironmentVar(const TCHAR* VariableName, const TCHAR* Value)"
  },
  {
    "label": "GetMacAddress()",
    "kind": "Method",
    "detail": "Function (} TArray<uint8>)",
    "insertText": "GetMacAddress()"
  },
  {
    "label": "RequestExit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestExit(bool Force, const TCHAR* CallSite = nullptr)"
  },
  {
    "label": "MessageBoxExt()",
    "kind": "Method",
    "detail": "Function (EAppReturnType::Type)",
    "insertText": "MessageBoxExt(EAppMsgType::Type MsgType, const TCHAR* Text, const TCHAR* Caption)"
  },
  {
    "label": "CommandLineCommands()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CommandLineCommands()"
  },
  {
    "label": "NumberOfCores()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumberOfCores()"
  },
  {
    "label": "NumberOfCoresIncludingHyperthreads()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumberOfCoresIncludingHyperthreads()"
  },
  {
    "label": "NormalizePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NormalizePath(FString& InPath)"
  },
  {
    "label": "NormalizePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NormalizePath(FStringBuilderBase& InPath)"
  },
  {
    "label": "GetPrimaryGPUBrand()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPrimaryGPUBrand()"
  },
  {
    "label": "GetGPUDriverInfo()",
    "kind": "Method",
    "detail": "Function (struct FGPUDriverInfo)",
    "insertText": "GetGPUDriverInfo(const FString& DeviceDescription)"
  },
  {
    "label": "GetOSVersions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOSVersions(FString& out_OSVersionLabel, FString& out_OSSubVersionLabel)"
  },
  {
    "label": "GetOSVersion()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetOSVersion()"
  },
  {
    "label": "GetNSOperatingSystemVersion()",
    "kind": "Method",
    "detail": "Function (NSOperatingSystemVersion)",
    "insertText": "GetNSOperatingSystemVersion()"
  },
  {
    "label": "HasPlatformFeature()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPlatformFeature(const TCHAR* FeatureName)"
  },
  {
    "label": "GetDiskTotalAndFreeSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDiskTotalAndFreeSpace(const FString& InPath, uint64& TotalNumberOfBytes, uint64& NumberOfFreeBytes)"
  },
  {
    "label": "HasSeparateChannelForDebugOutput()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSeparateChannelForDebugOutput()"
  },
  {
    "label": "GetNullRHIShaderFormat()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetNullRHIShaderFormat()"
  },
  {
    "label": "GetCPUVendor()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCPUVendor()"
  },
  {
    "label": "GetCPUBrand()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCPUBrand()"
  },
  {
    "label": "GetCPUInfo()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCPUInfo()"
  },
  {
    "label": "HasNonoptionalCPUFeatures()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasNonoptionalCPUFeatures()"
  },
  {
    "label": "SetCrashHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCrashHandler(void (* CrashHandler)(const FGenericCrashContext& Context))"
  },
  {
    "label": "GetFileManagerName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFileManagerName()"
  },
  {
    "label": "IsRunningOnBattery()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRunningOnBattery()"
  },
  {
    "label": "GetPlatformChunkInstall()",
    "kind": "Method",
    "detail": "Function (IPlatformChunkInstall*)",
    "insertText": "GetPlatformChunkInstall()"
  },
  {
    "label": "MacOSXVersionCompare()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MacOSXVersionCompare(uint8 Major, uint8 Minor, uint8 Revision)"
  },
  {
    "label": "GetOperatingSystemId()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetOperatingSystemId()"
  },
  {
    "label": "GetXcodePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetXcodePath()"
  },
  {
    "label": "IsSupportedXcodeVersionInstalled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupportedXcodeVersionInstalled()"
  },
  {
    "label": "IsRunningOnRecommendedMinSpecHardware()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "IsRunningOnRecommendedMinSpecHardware()"
  },
  {
    "label": "MergeDefaultArgumentsIntoCommandLine()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "MergeDefaultArgumentsIntoCommandLine(FString& CommandLine, FString DefaultArguments)"
  },
  {
    "label": "FGPUDescriptorCommon()",
    "kind": "Method",
    "detail": "Function (template<T> class FGPUDescriptorCommon { public : ~)",
    "insertText": "FGPUDescriptorCommon()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FGPUDescriptorCommon&)",
    "insertText": "operator(FGPUDescriptorCommon const& Other)"
  },
  {
    "label": "GetPerformanceStatistics()",
    "kind": "Method",
    "detail": "Function (TMap<FString,float>)",
    "insertText": "GetPerformanceStatistics()"
  },
  {
    "label": "FGPUDescriptorCommon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGPUDescriptorCommon(FGPUDescriptorCommon const& Other)"
  },
  {
    "label": "FGPUDescriptorCommon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGPUDescriptorCommon(FGPUDescriptorCommon&& Other)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFrom(FGPUDescriptorCommon const& Other)"
  },
  {
    "label": "FGPUDescriptorX86_64()",
    "kind": "Method",
    "detail": "Function (public : NSString* GPUName = nil ; NSString* GPUMetalBundle = nil ; NSString* GPUOpenGLBundle = nil ; NSString* GPUBundleID = nil ; uint32 GPUVendorId = 0 ; uint32 GPUDeviceId = 0 ; uint32 GPUMemoryMB = 0 ; uint32 GPUIndex = 0 ; bool GPUHeadless = false ; } ; # if PLATFORM_MAC_X86 typedef class FGPUDescriptorX86_64 : public FGPUDescriptorCommon<FGPUDescriptorX86_64> { class FGPUDescriptorCommon<FGPUDescriptorX86_64> ; public :)",
    "insertText": "FGPUDescriptorX86_64()"
  },
  {
    "label": "FGPUDescriptorX86_64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGPUDescriptorX86_64(FGPUDescriptorX86_64 const& Other)"
  },
  {
    "label": "CopyFromImpl()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CopyFromImpl(FGPUDescriptorCommon const& Other)"
  },
  {
    "label": "GetPerformanceStatisticsImpl()",
    "kind": "Method",
    "detail": "Function (TMap<FString,float>)",
    "insertText": "GetPerformanceStatisticsImpl()"
  },
  {
    "label": "FGPUDescriptorARM64()",
    "kind": "Method",
    "detail": "Function (public : uint64 RegistryID ; uint32 PCIDevice ; } FGPUDescriptor ; # elif PLATFORM_MAC_ARM64 typedef class FGPUDescriptorARM64 : public FGPUDescriptorCommon<FGPUDescriptorARM64> { class FGPUDescriptorCommon<FGPUDescriptorARM64> ; public :)",
    "insertText": "FGPUDescriptorARM64()"
  },
  {
    "label": "FGPUDescriptorARM64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGPUDescriptorARM64(FGPUDescriptorARM64 const& Other)"
  },
  {
    "label": "GPUChangeNotification()",
    "kind": "Method",
    "detail": "Function (public : uint64 RegistryID = 0 ; } FGPUDescriptor ; # else # error \" Undefined Mac platform \" # endif enum class EMacGPUNotification : uint8 { Added,RemovalRequested,Removed } ; void)",
    "insertText": "GPUChangeNotification(uint64_t DeviceRegistryID, EMacGPUNotification Notification)"
  },
  {
    "label": "GetGPUDescriptors()",
    "kind": "Method",
    "detail": "Function (TArray<FGPUDescriptor> const&)",
    "insertText": "GetGPUDescriptors()"
  },
  {
    "label": "GetExplicitRendererIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetExplicitRendererIndex()"
  },
  {
    "label": "UpdateDriverMonitorStatistics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDriverMonitorStatistics(int32 DeviceIndex)"
  },
  {
    "label": "GetDefaultStackSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDefaultStackSize()"
  },
  {
    "label": "PostInitMacAppInfoUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitMacAppInfoUpdate()"
  },
  {
    "label": "GetSupportedDisplayMode()",
    "kind": "Method",
    "detail": "Function (CGDisplayModeRef)",
    "insertText": "GetSupportedDisplayMode(CGDirectDisplayID DisplayID, uint32 Width, uint32 Height)"
  }
]