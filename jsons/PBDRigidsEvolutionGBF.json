[
  {
    "label": "FChaosArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosArchive"
  },
  {
    "label": "IResimCacheBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IResimCacheBase"
  },
  {
    "label": "FEvolutionResimCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEvolutionResimCache"
  },
  {
    "label": "FPBDRigidsEvolutionGBF",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsEvolutionGBF"
  },
  {
    "label": "FPBDRigidsEvolutionGBF()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDRigidsEvolutionGBF(\n\t\t\tFPBDRigidsSOAs& InParticles, \n\t\t\tTHandleArray<FChaosPhysicsMaterial>& SolverPhysicsMaterials, \n\t\t\tconst TArray<ISimCallbackObject*>* InMidPhaseModifiers = nullptr,\n\t\t\tconst TArray<ISimCallbackObject*>* InCCDModifiers = nullptr,\n\t\t\tconst TArray<ISimCallbackObject*>* InStrainModifiers = nullptr,\n\t\t\tconst TArray<ISimCallbackObject*>* InCollisionModifiers = nullptr,\n\t\t\tbool InIsSingleThreaded = false)"
  },
  {
    "label": "SetIsDeterministic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsDeterministic(const bool bInIsDeterministic)"
  },
  {
    "label": "SetShockPropagationIterations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShockPropagationIterations(const int32 InPositionIts, const int32 InVelocityIts)"
  },
  {
    "label": "Advance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Advance(const FReal Dt, const FReal MaxStepDt, const int32 MaxSteps)"
  },
  {
    "label": "SetParticleTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParticleTransform(FGeometryParticleHandle* InParticle, const FVec3& InPos, const FRotation3& InRot, const bool bIsTeleport)"
  },
  {
    "label": "SetParticleTransformSwept()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParticleTransformSwept(FGeometryParticleHandle* InParticle, const FVec3& InPos, const FRotation3& InRot, const bool bIsTeleport)"
  },
  {
    "label": "SetParticleKinematicTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParticleKinematicTarget(FGeometryParticleHandle* ParticleHandle, const FKinematicTarget& NewKinematicTarget)"
  },
  {
    "label": "ApplySleepOnConnectedParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySleepOnConnectedParticles(FGeometryParticleHandle* InParticle)"
  },
  {
    "label": "OnParticleMoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnParticleMoved(FGeometryParticleHandle* InParticle, const FVec3& PrevX, const FRotation3& PrevR, const bool bIsTeleport)"
  },
  {
    "label": "SetParticleVelocities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParticleVelocities(FGeometryParticleHandle* InParticle, const FVec3& InV, const FVec3f& InW)"
  },
  {
    "label": "ReloadParticlesCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReloadParticlesCache()"
  },
  {
    "label": "DestroyParticleCollisionsInAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyParticleCollisionsInAllocator(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "ParticleMaterialChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParticleMaterialChanged(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "Integrate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Integrate(FReal Dt)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FChaosArchive& Ar)"
  },
  {
    "label": "SetCurrentStepResimCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentStepResimCache(IResimCacheBase* InCurrentStepResimCache)"
  },
  {
    "label": "TransferJointConstraintCollisions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransferJointConstraintCollisions()"
  },
  {
    "label": "AdvanceOneTimeStepImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceOneTimeStepImpl(const FReal dt, const FSubStepInfo& SubStepInfo)"
  },
  {
    "label": "ApplyParticleTransformCorrectionImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyParticleTransformCorrectionImpl(FGeometryParticleHandle* InParticle, const FRigidTransform3& InTransform, const bool bInRecalculateFriction = true)"
  },
  {
    "label": "UpdateInertiaConditioning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInertiaConditioning()"
  },
  {
    "label": "UpdateCollisionSolverType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollisionSolverType()"
  },
  {
    "label": "TestModeResetCollisions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestModeResetCollisions()"
  },
  {
    "label": "SetDebugDrawScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDebugDrawScene(const ChaosDD::Private::FChaosDDScenePtr& InCDDScene)"
  }
]