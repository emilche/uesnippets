[
  {
    "label": "FWrapLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWrapLayer"
  },
  {
    "label": "AHardwareBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AHardwareBuffer"
  },
  {
    "label": "VK_DYNAMICAPI_TO_VULKANRHI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" VulkanConfiguration . h \" # include \" VulkanLoader . h \" # include \" VulkanThirdParty . h \" # if ! VULKAN_COMMANDWRAPPERS_ENABLE # if VULKAN_DYNAMICALLYLOADED # define)",
    "insertText": "VK_DYNAMICAPI_TO_VULKANRHI(Type,Func)"
  },
  {
    "label": "ENUM_VK_ENTRYPOINTS_ALL()",
    "kind": "Method",
    "detail": "Function (namespace VulkanRHI {)",
    "insertText": "ENUM_VK_ENTRYPOINTS_ALL(VK_DYNAMICAPI_TO_VULKANRHI)"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (} # else # error \" Statically linked vulkan api must be wrapped ! \" # endif # else # if VULKAN_DYNAMICALLYLOADED # define VULKANAPINAMESPACE VulkanDynamicAPI # else # define VULKANAPINAMESPACE # endif # if VULKAN_ENABLE_WRAP_LAYER # define VULKAN_LAYER_BODY ; # define VULKAN_EXTERN_EXPORT # else # define VULKAN_LAYER_BODY { } # define VULKAN_EXTERN_EXPORT # endif struct FWrapLayer { void)",
    "insertText": "CreateInstance(VkResult Result, const VkInstanceCreateInfo* CreateInfo, VkInstance* Instance) VULKAN_LAYER_BODY static void DestroyInstance(VkResult Result, VkInstance Instance) VULKAN_LAYER_BODY static void EnumeratePhysicalDevices(VkResult Result, VkInstance Instance, uint32* PhysicalDeviceCount, VkPhysicalDevice* PhysicalDevices) VULKAN_LAYER_BODY static void GetPhysicalDeviceFeatures(VkResult Result, VkPhysicalDevice PhysicalDevice, VkPhysicalDeviceFeatures* Features) VULKAN_LAYER_BODY static void GetPhysicalDeviceFormatProperties(VkResult Result, VkPhysicalDevice PhysicalDevice, VkFormat Format, VkFormatProperties* FormatProperties) VULKAN_LAYER_BODY static void GetPhysicalDeviceFormatProperties2(VkResult Result, VkPhysicalDevice PhysicalDevice, VkFormat Format, VkFormatProperties2* FormatProperties) VULKAN_LAYER_BODY static void GetPhysicalDeviceImageFormatProperties(VkResult Result, VkPhysicalDevice PhysicalDevice, VkFormat Format, VkImageType Type, VkImageTiling Tiling, VkImageUsageFlags Usage, VkImageCreateFlags Flags, VkImageFormatProperties* pImageFormatProperties) VULKAN_LAYER_BODY static void GetPhysicalDeviceProperties(VkResult Result, VkPhysicalDevice PhysicalDevice, VkPhysicalDeviceProperties* FormatProperties) VULKAN_LAYER_BODY static void GetPhysicalDeviceQueueFamilyProperties(VkResult Result, VkPhysicalDevice PhysicalDevice, uint32* QueueFamilyPropertyCount, VkQueueFamilyProperties* QueueFamilyProperties) VULKAN_LAYER_BODY static void GetPhysicalDeviceQueueFamilyProperties2(VkResult Result, VkPhysicalDevice PhysicalDevice, uint32* QueueFamilyPropertyCount, VkQueueFamilyProperties2* QueueFamilyProperties) VULKAN_LAYER_BODY static void GetPhysicalDeviceMemoryProperties(VkResult Result, VkPhysicalDevice PhysicalDevice, VkPhysicalDeviceMemoryProperties* Properties) VULKAN_LAYER_BODY static void GetInstanceProcAddr(VkResult Result, VkInstance Instance, const char* Name, PFN_vkVoidFunction VoidFunction) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void GetDeviceProcAddr(VkResult Result, VkDevice Device, const char* Name, PFN_vkVoidFunction VoidFunction) VULKAN_LAYER_BODY static void CreateDevice(VkResult Result, VkPhysicalDevice PhysicalDevice, const VkDeviceCreateInfo* CreateInfo, VkDevice* Device) VULKAN_LAYER_BODY static void DestroyDevice(VkResult Result, VkDevice Device) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void EnumerateInstanceExtensionProperties(VkResult Result, const char* LayerName, uint32* PropertyCount, VkExtensionProperties* Properties) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void EnumerateDeviceExtensionProperties(VkResult Result, VkPhysicalDevice PhysicalDevice, const char* LayerName, uint32* PropertyCount, VkExtensionProperties* Properties) VULKAN_LAYER_BODY static void EnumerateInstanceLayerProperties(VkResult Result, uint32* PropertyCount, VkLayerProperties* Properties) VULKAN_LAYER_BODY static void EnumerateDeviceLayerProperties(VkResult Result, VkPhysicalDevice PhysicalDevice, uint32* PropertyCount, VkLayerProperties* Properties) VULKAN_LAYER_BODY static void GetDeviceQueue(VkResult Result, VkDevice Device, uint32 QueueFamilyIndex, uint32 QueueIndex, VkQueue* Queue) VULKAN_LAYER_BODY static void QueueSubmit(VkResult Result, VkQueue Queue, uint32 SubmitCount, const VkSubmitInfo* Submits, VkFence Fence) VULKAN_LAYER_BODY static void QueueWaitIdle(VkResult Result, VkQueue Queue) VULKAN_LAYER_BODY static void DeviceWaitIdle(VkResult Result, VkDevice Device) VULKAN_LAYER_BODY static void AllocateMemory(VkResult Result, VkDevice Device, const VkMemoryAllocateInfo* AllocateInfo, VkDeviceMemory* Memory) VULKAN_LAYER_BODY static void FreeMemory(VkResult Result, VkDevice Device, VkDeviceMemory Memory) VULKAN_LAYER_BODY static void MapMemory(VkResult Result, VkDevice Device, VkDeviceMemory Memory, VkDeviceSize Offset, VkDeviceSize Size, VkMemoryMapFlags Flags, void** Data) VULKAN_LAYER_BODY static void UnmapMemory(VkResult Result, VkDevice Device, VkDeviceMemory Memory) VULKAN_LAYER_BODY static void FlushMappedMemoryRanges(VkResult Result, VkDevice Device, uint32 MemoryRangeCount, const VkMappedMemoryRange* pMemoryRanges) VULKAN_LAYER_BODY static void InvalidateMappedMemoryRanges(VkResult Result, VkDevice Device, uint32 MemoryRangeCount, const VkMappedMemoryRange* pMemoryRanges) VULKAN_LAYER_BODY static void GetDeviceMemoryCommitment(VkResult Result, VkDevice Device, VkDeviceMemory Memory, VkDeviceSize* pCommittedMemoryInBytes) VULKAN_LAYER_BODY static void BindBufferMemory(VkResult Result, VkDevice Device, VkBuffer Buffer, VkDeviceMemory Memory, VkDeviceSize MemoryOffset) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void BindImageMemory(VkResult Result, VkDevice Device, VkImage Image, VkDeviceMemory Memory, VkDeviceSize MemoryOffset) VULKAN_LAYER_BODY static void GetBufferMemoryRequirements(VkResult Result, VkDevice Device, VkBuffer Buffer, VkMemoryRequirements* MemoryRequirements) VULKAN_LAYER_BODY static void GetImageMemoryRequirements(VkResult Result, VkDevice Device, VkImage Image, VkMemoryRequirements* MemoryRequirements) VULKAN_LAYER_BODY static void GetImageSparseMemoryRequirements(VkResult Result, VkDevice Device, VkImage Image, uint32_t* pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements* pSparseMemoryRequirements) VULKAN_LAYER_BODY static void GetPhysicalDeviceSparseImageFormatProperties(VkResult Result, VkPhysicalDevice PhysicalDevice, VkFormat Format, VkImageType Type, VkSampleCountFlagBits Samples, VkImageUsageFlags Usage, VkImageTiling Tiling, uint32_t* pPropertyCount, VkSparseImageFormatProperties* pProperties) VULKAN_LAYER_BODY static void QueueBindSparse(VkResult Result, VkQueue Queue, uint32_t BindInfoCount, const VkBindSparseInfo* pBindInfo, VkFence Fence) VULKAN_LAYER_BODY static void CreateFence(VkResult Result, VkDevice Device, const VkFenceCreateInfo* CreateInfo, VkFence* Fence) VULKAN_LAYER_BODY static void DestroyFence(VkResult Result, VkDevice Device, VkFence Fence) VULKAN_LAYER_BODY static void ResetFences(VkResult Result, VkDevice Device, uint32 FenceCount, const VkFence* Fences) VULKAN_LAYER_BODY static void GetFenceStatus(VkResult Result, VkDevice Device, VkFence Fence) VULKAN_LAYER_BODY static void WaitForFences(VkResult Result, VkDevice Device, uint32 FenceCount, const VkFence* Fences, VkBool32 bWaitAll, uint64_t Timeout) VULKAN_LAYER_BODY static void CreateSemaphore(VkResult Result, VkDevice Device, const VkSemaphoreCreateInfo* CreateInfo, VkSemaphore* Semaphore) VULKAN_LAYER_BODY static void DestroySemaphore(VkResult Result, VkDevice Device, VkSemaphore Semaphore) VULKAN_LAYER_BODY static void CreateEvent(VkResult Result, VkDevice Device, const VkEventCreateInfo* CreateInfo, VkEvent* Event) VULKAN_LAYER_BODY static void DestroyEvent(VkResult Result, VkDevice Device, VkEvent Event) VULKAN_LAYER_BODY static void GetEventStatus(VkResult Result, VkDevice Device, VkEvent Event) VULKAN_LAYER_BODY static void SetEvent(VkResult Result, VkDevice Device, VkEvent Event) VULKAN_LAYER_BODY static void ResetEvent(VkResult Result, VkDevice Device, VkEvent Event) VULKAN_LAYER_BODY static void CreateQueryPool(VkResult Result, VkDevice Device, const VkQueryPoolCreateInfo* CreateInfo, VkQueryPool* QueryPool) VULKAN_LAYER_BODY static void DestroyQueryPool(VkResult Result, VkDevice Device, VkQueryPool QueryPool) VULKAN_LAYER_BODY static void GetQueryPoolResults(VkResult Result, VkDevice Device, VkQueryPool QueryPool, uint32 FirstQuery, uint32 QueryCount, size_t DataSize, void* Data, VkDeviceSize Stride, VkQueryResultFlags Flags) VULKAN_LAYER_BODY static void CreateBuffer(VkResult Result, VkDevice Device, const VkBufferCreateInfo* CreateInfo, VkBuffer* Buffer) VULKAN_LAYER_BODY static void DestroyBuffer(VkResult Result, VkDevice Device, VkBuffer Buffer) VULKAN_LAYER_BODY static void CreateBufferView(VkResult Result, VkDevice Device, const VkBufferViewCreateInfo* CreateInfo, VkBufferView* BufferView) VULKAN_LAYER_BODY static void DestroyBufferView(VkResult Result, VkDevice Device, VkBufferView BufferView) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void CreateImage(VkResult Result, VkDevice Device, const VkImageCreateInfo* CreateInfo, VkImage* Image) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void DestroyImage(VkResult Result, VkDevice Device, VkImage Image) VULKAN_LAYER_BODY static void GetImageSubresourceLayout(VkResult Result, VkDevice Device, VkImage Image, const VkImageSubresource* Subresource, VkSubresourceLayout* Layout) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void CreateImageView(VkResult Result, VkDevice Device, const VkImageViewCreateInfo* CreateInfo, VkImageView* ImageView) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void DestroyImageView(VkResult Result, VkDevice Device, VkImageView ImageView) VULKAN_LAYER_BODY static void CreateShaderModule(VkResult Result, VkDevice Device, const VkShaderModuleCreateInfo* CreateInfo, VkShaderModule* ShaderModule) VULKAN_LAYER_BODY static void DestroyShaderModule(VkResult Result, VkDevice Device, VkShaderModule ShaderModule) VULKAN_LAYER_BODY static void CreatePipelineCache(VkResult Result, VkDevice Device, const VkPipelineCacheCreateInfo* CreateInfo, VkPipelineCache* PipelineCache) VULKAN_LAYER_BODY static void DestroyPipelineCache(VkResult Result, VkDevice Device, VkPipelineCache PipelineCache) VULKAN_LAYER_BODY static void GetPipelineCacheData(VkResult Result, VkDevice Device, VkPipelineCache PipelineCache, size_t* DataSize, void* Data) VULKAN_LAYER_BODY static void MergePipelineCaches(VkResult Result, VkDevice Device, VkPipelineCache DestCache, uint32 SourceCacheCount, const VkPipelineCache* SrcCaches) VULKAN_LAYER_BODY static void CreateGraphicsPipelines(VkResult Result, VkDevice Device, VkPipelineCache PipelineCache, uint32 CreateInfoCount, const VkGraphicsPipelineCreateInfo* CreateInfos, VkPipeline* Pipelines) VULKAN_LAYER_BODY static void CreateComputePipelines(VkResult Result, VkDevice Device, VkPipelineCache PipelineCache, uint32 CreateInfoCount, const VkComputePipelineCreateInfo* CreateInfos, VkPipeline* Pipelines) VULKAN_LAYER_BODY static void DestroyPipeline(VkResult Result, VkDevice Device, VkPipeline Pipeline) VULKAN_LAYER_BODY static void CreatePipelineLayout(VkResult Result, VkDevice Device, const VkPipelineLayoutCreateInfo* CreateInfo, VkPipelineLayout* PipelineLayout) VULKAN_LAYER_BODY static void DestroyPipelineLayout(VkResult Result, VkDevice Device, VkPipelineLayout PipelineLayout) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void CreateSampler(VkResult Result, VkDevice Device, const VkSamplerCreateInfo* CreateInfo, VkSampler* Sampler) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void DestroySampler(VkResult Result, VkDevice Device, VkSampler Sampler) VULKAN_LAYER_BODY static void CreateDescriptorSetLayout(VkResult Result, VkDevice Device, const VkDescriptorSetLayoutCreateInfo* CreateInfo, VkDescriptorSetLayout* SetLayout) VULKAN_LAYER_BODY static void DestroyDescriptorSetLayout(VkResult Result, VkDevice Device, VkDescriptorSetLayout DescriptorSetLayout) VULKAN_LAYER_BODY static void CreateDescriptorPool(VkResult Result, VkDevice Device, const VkDescriptorPoolCreateInfo* CreateInfo, VkDescriptorPool* DescriptorPool) VULKAN_LAYER_BODY static void DestroyDescriptorPool(VkResult Result, VkDevice Device, VkDescriptorPool DescriptorPool) VULKAN_LAYER_BODY static void ResetDescriptorPool(VkResult Result, VkDevice Device, VkDescriptorPool DescriptorPool, VkDescriptorPoolResetFlags Flags) VULKAN_LAYER_BODY static void AllocateDescriptorSets(VkResult Result, VkDevice Device, const VkDescriptorSetAllocateInfo* AllocateInfo, VkDescriptorSet* DescriptorSets) VULKAN_LAYER_BODY static void FreeDescriptorSets(VkResult Result, VkDevice Device, VkDescriptorPool DescriptorPool, uint32 DescriptorSetCount, const VkDescriptorSet* DescriptorSets) VULKAN_LAYER_BODY static void UpdateDescriptorSets(VkResult Result, VkDevice Device, uint32 DescriptorWriteCount, const VkWriteDescriptorSet* DescriptorWrites, uint32 DescriptorCopyCount, const VkCopyDescriptorSet* DescriptorCopies) VULKAN_LAYER_BODY static void CreateFramebuffer(VkResult Result, VkDevice Device, const VkFramebufferCreateInfo* CreateInfo, VkFramebuffer* Framebuffer) VULKAN_LAYER_BODY static void DestroyFramebuffer(VkResult Result, VkDevice Device, VkFramebuffer Framebuffer) VULKAN_LAYER_BODY static void CreateRenderPass(VkResult Result, VkDevice Device, const VkRenderPassCreateInfo* CreateInfo, VkRenderPass* RenderPass) VULKAN_LAYER_BODY static void CreateRenderPass2KHR(VkResult Result, VkDevice Device, const VkRenderPassCreateInfo2* CreateInfo, VkRenderPass* RenderPass) VULKAN_LAYER_BODY static void DestroyRenderPass(VkResult Result, VkDevice Device, VkRenderPass RenderPass) VULKAN_LAYER_BODY static void GetRenderAreaGranularity(VkResult Result, VkDevice Device, VkRenderPass RenderPass, VkExtent2D* pGranularity) VULKAN_LAYER_BODY static void CreateCommandPool(VkResult Result, VkDevice Device, const VkCommandPoolCreateInfo* CreateInfo, VkCommandPool* CommandPool) VULKAN_LAYER_BODY static void DestroyCommandPool(VkResult Result, VkDevice Device, VkCommandPool CommandPool) VULKAN_LAYER_BODY static void ResetCommandPool(VkResult Result, VkDevice Device, VkCommandPool CommandPool, VkCommandPoolResetFlags Flags) VULKAN_LAYER_BODY static void TrimCommandPool(VkResult Result, VkDevice Device, VkCommandPool CommandPool, VkCommandPoolTrimFlags Flags) VULKAN_LAYER_BODY static void AllocateCommandBuffers(VkResult Result, VkDevice Device, const VkCommandBufferAllocateInfo* AllocateInfo, VkCommandBuffer* CommandBuffers) VULKAN_LAYER_BODY static void FreeCommandBuffers(VkResult Result, VkDevice Device, VkCommandPool CommandPool, uint32 CommandBufferCount, const VkCommandBuffer* CommandBuffers) VULKAN_LAYER_BODY static void BeginCommandBuffer(VkResult Result, VkCommandBuffer CommandBuffer, const VkCommandBufferBeginInfo* BeginInfo) VULKAN_LAYER_BODY static void EndCommandBuffer(VkResult Result, VkCommandBuffer CommandBuffer) VULKAN_LAYER_BODY static void ResetCommandBuffer(VkResult Result, VkCommandBuffer CommandBuffer, VkCommandBufferResetFlags Flags) VULKAN_LAYER_BODY static void CmdBindPipeline(VkResult Result, VkCommandBuffer CommandBuffer, VkPipelineBindPoint PipelineBindPoint, VkPipeline Pipeline) VULKAN_LAYER_BODY static void CmdSetViewport(VkResult Result, VkCommandBuffer CommandBuffer, uint32 FirstViewport, uint32 ViewportCount, const VkViewport* Viewports) VULKAN_LAYER_BODY static void CmdSetScissor(VkResult Result, VkCommandBuffer CommandBuffer, uint32 FirstScissor, uint32 ScissorCount, const VkRect2D* Scissors) VULKAN_LAYER_BODY static void CmdSetLineWidth(VkResult Result, VkCommandBuffer CommandBuffer, float LineWidth) VULKAN_LAYER_BODY static void CmdSetDepthBias(VkResult Result, VkCommandBuffer CommandBuffer, float DepthBiasConstantFactor, float DepthBiasClamp, float DepthBiasSlopeFactor) VULKAN_LAYER_BODY static void CmdSetBlendConstants(VkResult Result, VkCommandBuffer CommandBuffer, const float BlendConstants[4]) VULKAN_LAYER_BODY static void CmdSetDepthBounds(VkResult Result, VkCommandBuffer CommandBuffer, float MinDepthBounds, float MaxDepthBounds) VULKAN_LAYER_BODY static void CmdSetStencilCompareMask(VkResult Result, VkCommandBuffer CommandBuffer, VkStencilFaceFlags FaceMask, uint32 CompareMask) VULKAN_LAYER_BODY static void CmdSetStencilWriteMask(VkResult Result, VkCommandBuffer CommandBuffer, VkStencilFaceFlags FaceMask, uint32 WriteMask) VULKAN_LAYER_BODY static void CmdSetStencilReference(VkResult Result, VkCommandBuffer CommandBuffer, VkStencilFaceFlags FaceMask, uint32 Reference) VULKAN_LAYER_BODY static void CmdBindDescriptorSets(VkResult Result, VkCommandBuffer CommandBuffer, VkPipelineBindPoint PipelineBindPoint, VkPipelineLayout Layout, uint32 FirstSet, uint32 DescriptorSetCount, const VkDescriptorSet* DescriptorSets, uint32 DynamicOffsetCount, const uint32* DynamicOffsets) VULKAN_LAYER_BODY static void CmdBindIndexBuffer(VkResult Result, VkCommandBuffer CommandBuffer, VkBuffer IndexBuffer, VkDeviceSize Offset, VkIndexType IndexType) VULKAN_LAYER_BODY static void CmdBindVertexBuffers(VkResult Result, VkCommandBuffer CommandBuffer, uint32 FirstBinding, uint32 BindingCount, const VkBuffer* Buffers, const VkDeviceSize* pOffsets) VULKAN_LAYER_BODY static void CmdDraw(VkResult Result, VkCommandBuffer CommandBuffer, uint32 VertexCount, uint32 InstanceCount, uint32 FirstVertex, uint32 FirstInstance) VULKAN_LAYER_BODY static void CmdDrawIndexed(VkResult Result, VkCommandBuffer CommandBuffer, uint32 IndexCount, uint32 InstanceCount, uint32 FirstIndex, int32_t VertexOffset, uint32 FirstInstance) VULKAN_LAYER_BODY static void CmdDrawIndirect(VkResult Result, VkCommandBuffer CommandBuffer, VkBuffer Buffer, VkDeviceSize Offset, uint32 DrawCount, uint32 Stride) VULKAN_LAYER_BODY static void CmdDrawIndexedIndirect(VkResult Result, VkCommandBuffer CommandBuffer, VkBuffer Buffer, VkDeviceSize Offset, uint32 DrawCount, uint32 Stride) VULKAN_LAYER_BODY static void CmdDispatch(VkResult Result, VkCommandBuffer CommandBuffer, uint32 X, uint32 Y, uint32 Z) VULKAN_LAYER_BODY static void CmdDispatchIndirect(VkResult Result, VkCommandBuffer CommandBuffer, VkBuffer Buffer, VkDeviceSize Offset) VULKAN_LAYER_BODY static void CmdCopyBuffer(VkResult Result, VkCommandBuffer CommandBuffer, VkBuffer SrcBuffer, VkBuffer DstBuffer, uint32 RegionCount, const VkBufferCopy* Regions) VULKAN_LAYER_BODY static void CmdCopyImage(VkResult Result, VkCommandBuffer CommandBuffer, VkImage SrcImage, VkImageLayout SrcImageLayout, VkImage DstImage, VkImageLayout DstImageLayout, uint32 RegionCount, const VkImageCopy* Regions) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void CmdBlitImage(VkResult Result, VkCommandBuffer CommandBuffer, VkImage SrcImage, VkImageLayout SrcImageLayout, VkImage DstImage, VkImageLayout DstImageLayout, uint32 RegionCount, const VkImageBlit* Regions, VkFilter Filter) VULKAN_LAYER_BODY static void CmdCopyBufferToImage(VkResult Result, VkCommandBuffer CommandBuffer, VkBuffer SrcBuffer, VkImage DstImage, VkImageLayout DstImageLayout, uint32 RegionCount, const VkBufferImageCopy* Regions) VULKAN_LAYER_BODY static void CmdCopyImageToBuffer(VkResult Result, VkCommandBuffer CommandBuffer, VkImage SrcImage, VkImageLayout SrcImageLayout, VkBuffer DstBuffer, uint32 RegionCount, const VkBufferImageCopy* Regions) VULKAN_LAYER_BODY static void CmdUpdateBuffer(VkResult Result, VkCommandBuffer CommandBuffer, VkBuffer DstBuffer, VkDeviceSize DstOffset, VkDeviceSize DataSize, const void* pData) VULKAN_LAYER_BODY static void CmdFillBuffer(VkResult Result, VkCommandBuffer CommandBuffer, VkBuffer DstBuffer, VkDeviceSize DstOffset, VkDeviceSize Size, uint32 Data) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void CmdClearColorImage(VkResult Result, VkCommandBuffer CommandBuffer, VkImage Image, VkImageLayout ImageLayout, const VkClearColorValue* ColorValue, uint32 RangeCount, const VkImageSubresourceRange* Ranges) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void CmdClearDepthStencilImage(VkResult Result, VkCommandBuffer CommandBuffer, VkImage Image, VkImageLayout ImageLayout, const VkClearDepthStencilValue* DepthStencil, uint32 RangeCount, const VkImageSubresourceRange* Ranges) VULKAN_LAYER_BODY static void CmdClearAttachments(VkResult Result, VkCommandBuffer CommandBuffer, uint32 AttachmentCount, const VkClearAttachment* Attachments, uint32 RectCount, const VkClearRect* Rects) VULKAN_LAYER_BODY static void CmdResolveImage(VkResult Result, VkCommandBuffer CommandBuffer, VkImage SrcImage, VkImageLayout SrcImageLayout, VkImage DstImage, VkImageLayout DstImageLayout, uint32 RegionCount, const VkImageResolve* Regions) VULKAN_LAYER_BODY static void CmdSetEvent(VkResult Result, VkCommandBuffer CommandBuffer, VkEvent Event, VkPipelineStageFlags StageMask) VULKAN_LAYER_BODY static void CmdResetEvent(VkResult Result, VkCommandBuffer CommandBuffer, VkEvent Event, VkPipelineStageFlags StageMask) VULKAN_LAYER_BODY static void CmdWaitEvents(VkResult Result, VkCommandBuffer CommandBuffer, uint32 EventCount, const VkEvent* Events, VkPipelineStageFlags SrcStageMask, VkPipelineStageFlags DstStageMask, uint32 MemoryBarrierCount, const VkMemoryBarrier* pMemoryBarriers, uint32 BufferMemoryBarrierCount, const VkBufferMemoryBarrier* pBufferMemoryBarriers, uint32 ImageMemoryBarrierCount, const VkImageMemoryBarrier* pImageMemoryBarriers) VULKAN_LAYER_BODY static void CmdPipelineBarrier(VkResult Result, VkCommandBuffer CommandBuffer, VkPipelineStageFlags SrcStageMask, VkPipelineStageFlags DstStageMask, VkDependencyFlags DependencyFlags, uint32 MemoryBarrierCount, const VkMemoryBarrier* MemoryBarriers, uint32 BufferMemoryBarrierCount, const VkBufferMemoryBarrier* BufferMemoryBarriers, uint32 ImageMemoryBarrierCount, const VkImageMemoryBarrier* ImageMemoryBarriers) VULKAN_LAYER_BODY static void CmdBeginQuery(VkResult Result, VkCommandBuffer CommandBuffer, VkQueryPool QueryPool, uint32 Query, VkQueryControlFlags Flags) VULKAN_LAYER_BODY static void CmdEndQuery(VkResult Result, VkCommandBuffer CommandBuffer, VkQueryPool QueryPool, uint32 Query) VULKAN_LAYER_BODY static void CmdResetQueryPool(VkResult Result, VkCommandBuffer CommandBuffer, VkQueryPool QueryPool, uint32 FirstQuery, uint32 QueryCount) VULKAN_LAYER_BODY static void CmdWriteTimestamp(VkResult Result, VkCommandBuffer CommandBuffer, VkPipelineStageFlagBits PipelineStage, VkQueryPool QueryPool, uint32 Query) VULKAN_LAYER_BODY static void CmdCopyQueryPoolResults(VkResult Result, VkCommandBuffer CommandBuffer, VkQueryPool QueryPool, uint32 FirstQuery, uint32 QueryCount, VkBuffer DstBuffer, VkDeviceSize DstOffset, VkDeviceSize Stride, VkQueryResultFlags Flags) VULKAN_LAYER_BODY static void CmdPushConstants(VkResult Result, VkCommandBuffer CommandBuffer, VkPipelineLayout Layout, VkShaderStageFlags StageFlags, uint32_t Offset, uint32_t Size, const void* pValues) VULKAN_LAYER_BODY static void CmdBeginRenderPass(VkResult Result, VkCommandBuffer CommandBuffer, const VkRenderPassBeginInfo* RenderPassBegin, VkSubpassContents Contents) VULKAN_LAYER_BODY static void CmdBeginRenderPass2KHR(VkResult Result, VkCommandBuffer CommandBuffer, const VkRenderPassBeginInfo* RenderPassBegin, const VkSubpassBeginInfo* pSubpassBeginInfo) VULKAN_LAYER_BODY static void CmdNextSubpass(VkResult Result, VkCommandBuffer CommandBuffer, VkSubpassContents Contents) VULKAN_LAYER_BODY static void CmdEndRenderPass(VkResult Result, VkCommandBuffer CommandBuffer) VULKAN_LAYER_BODY static void CmdExecuteCommands(VkResult Result, VkCommandBuffer CommandBuffer, uint32 CommandBufferCount, const VkCommandBuffer* pCommandBuffers) VULKAN_LAYER_BODY static void QueuePresent(VkResult Result, VkQueue Queue, const VkPresentInfoKHR* PresentInfo) VULKAN_LAYER_BODY static void GetSwapChainImagesKHR(VkResult Result, VkDevice Device, VkSwapchainKHR Swapchain, uint32_t* SwapchainImageCount, VkImage* SwapchainImages) VULKAN_LAYER_BODY static void CreateSwapchainKHR(VkResult Result, VkDevice Device, const VkSwapchainCreateInfoKHR* CreateInfo, VkSwapchainKHR* Swapchain) VULKAN_LAYER_BODY static void AcquireNextImageKHR(VkResult Result, VkDevice Device, VkSwapchainKHR Swapchain, uint64_t Timeout, VkSemaphore Semaphore, VkFence Fence, uint32_t* ImageIndex) VULKAN_LAYER_BODY static void DestroySurfaceKHR(VkResult Result, VkInstance Instance, VkSurfaceKHR SurfaceKHR) VULKAN_LAYER_BODY static void DestroySwapchainKHR(VkResult Result, VkDevice Device, VkSwapchainKHR Swapchain) VULKAN_LAYER_BODY static void GetImageMemoryRequirements2(VkResult Result, VkDevice Device, const VkImageMemoryRequirementsInfo2* Info, VkMemoryRequirements2* MemoryRequirements) VULKAN_LAYER_BODY static void GetBufferMemoryRequirements2(VkResult Result, VkDevice Device, const VkBufferMemoryRequirementsInfo2* Info, VkMemoryRequirements2* MemoryRequirements) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void GetPhysicalDeviceMemoryProperties2(VkResult Result, VkPhysicalDevice PhysicalDevice, VkPhysicalDeviceMemoryProperties2* MemoryProperties) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void GetPhysicalDeviceProperties2(VkResult Result, VkPhysicalDevice PhysicalDevice, VkPhysicalDeviceProperties2* Properties) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void GetPhysicalDeviceFeatures2(VkResult Result, VkPhysicalDevice PhysicalDevice, VkPhysicalDeviceFeatures2* Features) VULKAN_LAYER_BODY VULKAN_EXTERN_EXPORT static void GetPhysicalDeviceFragmentShadingRatesKHR(VkResult, VkPhysicalDevice PhysicalDevice, uint32* FragmentShadingRateCount, VkPhysicalDeviceFragmentShadingRateKHR* FragmentShadingRates) VULKAN_LAYER_BODY static void GetPhysicalDeviceSurfaceCapabilitiesKHR(VkResult Result, VkPhysicalDevice PhysicalDevice, VkSurfaceKHR Surface, VkSurfaceCapabilitiesKHR* SurfaceCapabilities) VULKAN_LAYER_BODY static void GetPhysicalDeviceSurfaceFormatsKHR(VkResult Result, VkPhysicalDevice PhysicalDevice, VkSurfaceKHR Surface, uint32_t* SurfaceFormatCountPtr, VkSurfaceFormatKHR* SurfaceFormats) VULKAN_LAYER_BODY static void GetPhysicalDeviceSurfaceSupportKHR(VkResult Result, VkPhysicalDevice PhysicalDevice, uint32_t QueueFamilyIndex, VkSurfaceKHR Surface, VkBool32* SupportedPtr) VULKAN_LAYER_BODY static void GetPhysicalDeviceSurfacePresentModesKHR(VkResult Result, VkPhysicalDevice PhysicalDevice, VkSurfaceKHR Surface, uint32_t* PresentModeCountPtr, VkPresentModeKHR* PresentModesPtr) VULKAN_LAYER_BODY #if VULKAN_USE_CREATE_ANDROID_SURFACE static void CreateAndroidSurfaceKHR(VkResult Result, VkInstance Instance, const VkAndroidSurfaceCreateInfoKHR* CreateInfo, VkSurfaceKHR* Surface) VULKAN_LAYER_BODY #endif #if VULKAN_USE_CREATE_WIN32_SURFACE static void CreateWin32SurfaceKHR(VkResult Result, VkInstance instance, const VkWin32SurfaceCreateInfoKHR* pCreateInfo, VkSurfaceKHR* pSurface)"
  },
  {
    "label": "CreateAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "CreateAccelerationStructureKHR(VkResult Result, VkDevice Device, const VkAccelerationStructureCreateInfoKHR* CreateInfo, const VkAllocationCallbacks* Allocator, VkAccelerationStructureKHR* AccelerationStructure) VULKAN_LAYER_BODY static void DestroyAccelerationStructureKHR(VkResult Result, VkDevice Device, VkAccelerationStructureKHR AccelerationStructure, const VkAllocationCallbacks* Allocator) VULKAN_LAYER_BODY static void CmdBuildAccelerationStructuresKHR(VkResult Result, VkCommandBuffer CommandBuffer, uint32 InfoCount, const VkAccelerationStructureBuildGeometryInfoKHR* Infos, const VkAccelerationStructureBuildRangeInfoKHR* const* BuildRangeInfos) VULKAN_LAYER_BODY static void GetAccelerationStructureBuildSizesKHR(VkResult Result, VkDevice Device, VkAccelerationStructureBuildTypeKHR BuildType, const VkAccelerationStructureBuildGeometryInfoKHR* BuildInfo, const uint32* MaxPrimitiveCounts, VkAccelerationStructureBuildSizesInfoKHR* SizeInfo) VULKAN_LAYER_BODY static void GetAccelerationStructureDeviceAddressKHR(VkResult Result, VkDevice Device, const VkAccelerationStructureDeviceAddressInfoKHR* Info) VULKAN_LAYER_BODY static void CmdTraceRaysKHR(VkResult Result, VkCommandBuffer CommandBuffer, const VkStridedDeviceAddressRegionKHR* RaygenShaderBindingTable, const VkStridedDeviceAddressRegionKHR* MissShaderBindingTable, const VkStridedDeviceAddressRegionKHR* HitShaderBindingTable, const VkStridedDeviceAddressRegionKHR* CallableShaderBindingTable, uint32 width, uint32 height, uint32 depth) VULKAN_LAYER_BODY static void CmdTraceRaysIndirectKHR(VkResult Result, VkCommandBuffer CommandBuffer, const VkStridedDeviceAddressRegionKHR* RaygenShaderBindingTable, const VkStridedDeviceAddressRegionKHR* MissShaderBindingTable, const VkStridedDeviceAddressRegionKHR* HitShaderBindingTable, const VkStridedDeviceAddressRegionKHR* CallableShaderBindingTable, VkDeviceAddress IndirectDeviceAddress) VULKAN_LAYER_BODY static void CmdTraceRaysIndirect2KHR(VkResult Result, VkCommandBuffer CommandBuffer, VkDeviceAddress IndirectDeviceAddress) VULKAN_LAYER_BODY static void CreateRayTracingPipelinesKHR(VkResult Result, VkDevice Device, VkDeferredOperationKHR DeferredOperation, VkPipelineCache PipelineCache, uint32_t CreateInfoCount, const VkRayTracingPipelineCreateInfoKHR* CreateInfos, const VkAllocationCallbacks* Allocator, VkPipeline* Pipelines) VULKAN_LAYER_BODY static void GetRayTracingShaderGroupHandlesKHR(VkResult Result, VkDevice Device, VkPipeline Pipeline, uint32_t FirstGroup, uint32_t GroupCount, size_t DataSize, void* Data) VULKAN_LAYER_BODY static void CmdWriteAccelerationStructuresPropertiesKHR(VkResult Result, VkCommandBuffer CommandBuffer, uint32_t AccelerationStructureCount, const VkAccelerationStructureKHR* AccelerationStructures, VkQueryType QueryType, VkQueryPool QueryPool, uint32_t FirstQuery) VULKAN_LAYER_BODY static void CmdCopyAccelerationStructureKHR(VkResult Result, VkCommandBuffer CommandBuffer, const VkCopyAccelerationStructureInfoKHR* Info) VULKAN_LAYER_BODY static void GetBufferDeviceAddressKHR(VkResult Result, VkDevice Device, const VkBufferDeviceAddressInfo* Info) VULKAN_LAYER_BODY static void GetDeviceImageMemoryRequirementsKHR(VkResult Result, VkDevice Device, const VkDeviceImageMemoryRequirements* Info, VkMemoryRequirements2* MemoryRequirements) VULKAN_LAYER_BODY static void GetDeviceBufferMemoryRequirementsKHR(VkResult Result, VkDevice Device, const VkDeviceBufferMemoryRequirements* Info, VkMemoryRequirements2* MemoryRequirements) VULKAN_LAYER_BODY static void ResetQueryPoolEXT(VkResult Result, VkDevice Device, VkQueryPool QueryPool, uint32_t FirstQuery, uint32_t QueryCount) VULKAN_LAYER_BODY static void GetPhysicalDeviceCalibrateableTimeDomainsEXT(VkResult Result, VkPhysicalDevice PhysicalDevice, uint32_t* TimeDomainCount, VkTimeDomainEXT* TimeDomains) VULKAN_LAYER_BODY static void GetCalibratedTimestampsEXT(VkResult Result, VkDevice Device, uint32_t TimestampCount, const VkCalibratedTimestampInfoEXT* TimestampInfos, uint64_t* Timestamps, uint64_t* MaxDeviation) VULKAN_LAYER_BODY static void BindBufferMemory2(VkResult Result, VkDevice Device, uint32_t BindInfoCount, const VkBindBufferMemoryInfo* BindInfos) VULKAN_LAYER_BODY static void BindImageMemory2(VkResult Result, VkDevice Device, uint32_t BindInfoCount, const VkBindImageMemoryInfo* BindInfos) VULKAN_LAYER_BODY static void CmdPipelineBarrier2KHR(VkResult Result, VkCommandBuffer CommandBuffer, const VkDependencyInfo* DependencyInfo) VULKAN_LAYER_BODY static void CmdResetEvent2KHR(VkResult Result, VkCommandBuffer CommandBuffer, VkEvent Event, VkPipelineStageFlags2 StageMask) VULKAN_LAYER_BODY static void CmdSetEvent2KHR(VkResult Result, VkCommandBuffer CommandBuffer, VkEvent Event, const VkDependencyInfo* DependencyInfo) VULKAN_LAYER_BODY static void CmdWaitEvents2KHR(VkResult Result, VkCommandBuffer CommandBuffer, uint32_t EventCount, const VkEvent* Events, const VkDependencyInfo* DependencyInfos) VULKAN_LAYER_BODY static void QueueSubmit2KHR(VkResult Result, VkQueue Queue, uint32_t SubmitCount, const VkSubmitInfo2* Submits, VkFence Fence) VULKAN_LAYER_BODY static void GetDescriptorSetLayoutSizeEXT(VkResult Result, VkDevice Device, VkDescriptorSetLayout Layout, VkDeviceSize* OutLayoutSizeInBytes) VULKAN_LAYER_BODY static void GetDescriptorSetLayoutBindingOffsetEXT(VkResult Result, VkDevice Device, VkDescriptorSetLayout Layout, uint32_t Binding, VkDeviceSize* Offset) VULKAN_LAYER_BODY static void CmdBindDescriptorBuffersEXT(VkResult Result, VkCommandBuffer CommandBuffer, uint32_t BufferCount, const VkDescriptorBufferBindingInfoEXT* BindingInfos) VULKAN_LAYER_BODY static void CmdSetDescriptorBufferOffsetsEXT(VkResult Result, VkCommandBuffer CommandBuffer, VkPipelineBindPoint PipelineBindPoint, VkPipelineLayout Layout, uint32_t FirstSet, uint32_t SetCount, const uint32_t* BufferIndices, const VkDeviceSize* Offsets) VULKAN_LAYER_BODY static void GetDescriptorEXT(VkResult Result, VkDevice Device, const VkDescriptorGetInfoEXT* DescriptorInfo, size_t DataSize, void* Descriptor) VULKAN_LAYER_BODY static void CreateDeferredOperationKHR(VkResult Result, VkDevice Device, const VkAllocationCallbacks* Allocator, VkDeferredOperationKHR* DeferredOperation) VULKAN_LAYER_BODY static void DestroyDeferredOperationKHR(VkResult Result, VkDevice Device, VkDeferredOperationKHR DeferredOperation, const VkAllocationCallbacks* Allocator) VULKAN_LAYER_BODY static void DeferredOperationJoinKHR(VkResult Result, VkDevice Device, VkDeferredOperationKHR DeferredOperation) VULKAN_LAYER_BODY static void GetDeferredOperationMaxConcurrencyKHR(VkResult Result, VkDevice Device, VkDeferredOperationKHR DeferredOperation) VULKAN_LAYER_BODY static void GetDeferredOperationResultKHR(VkResult Result, VkDevice Device, VkDeferredOperationKHR DeferredOperation) VULKAN_LAYER_BODY static void GetDeviceFaultInfoEXT(VkResult Result, VkDevice Device, VkDeviceFaultCountsEXT* FaultCounts, VkDeviceFaultInfoEXT* FaultInfo) VULKAN_LAYER_BODY static void CreateSamplerYcbcrConversion(VkResult Result, VkDevice Device, const VkSamplerYcbcrConversionCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkSamplerYcbcrConversion* YcbcrConversion) VULKAN_LAYER_BODY static void DestroySamplerYcbcrConversion(VkResult Result, VkDevice Device, VkSamplerYcbcrConversion YcbcrConversion, const VkAllocationCallbacks* Allocator) VULKAN_LAYER_BODY #if PLATFORM_ANDROID static void GetAndroidHardwareBufferPropertiesANDROID(VkResult Result, VkDevice Device, const struct AHardwareBuffer* Buffer, VkAndroidHardwareBufferPropertiesANDROID* Properties)"
  },
  {
    "label": "FlushDebugWrapperLog()",
    "kind": "Method",
    "detail": "Function (# undef VULKAN_LAYER_BODY namespace VulkanRHI { void)",
    "insertText": "FlushDebugWrapperLog()"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateInstance(VK_RESULT_MAX_ENUM, CreateInfo, Instance)"
  },
  {
    "label": "vkCreateInstance()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateInstance(CreateInfo, Allocator, Instance)"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateInstance(Result, CreateInfo, Instance)"
  },
  {
    "label": "DestroyInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyInstance(VK_RESULT_MAX_ENUM, Instance)"
  },
  {
    "label": "vkDestroyInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyInstance(Instance, Allocator)"
  },
  {
    "label": "DestroyInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyInstance(VK_SUCCESS, Instance)"
  },
  {
    "label": "vkEnumeratePhysicalDevices()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkEnumeratePhysicalDevices(VkInstance Instance, uint32* PhysicalDeviceCount, VkPhysicalDevice* PhysicalDevices)"
  },
  {
    "label": "EnumeratePhysicalDevices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumeratePhysicalDevices(VK_RESULT_MAX_ENUM, Instance, PhysicalDeviceCount, PhysicalDevices)"
  },
  {
    "label": "vkEnumeratePhysicalDevices()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkEnumeratePhysicalDevices(Instance, PhysicalDeviceCount, PhysicalDevices)"
  },
  {
    "label": "EnumeratePhysicalDevices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumeratePhysicalDevices(Result, Instance, PhysicalDeviceCount, PhysicalDevices)"
  },
  {
    "label": "GetPhysicalDeviceFeatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceFeatures(VK_RESULT_MAX_ENUM, PhysicalDevice, Features)"
  },
  {
    "label": "vkGetPhysicalDeviceFeatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceFeatures(PhysicalDevice, Features)"
  },
  {
    "label": "GetPhysicalDeviceFeatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceFeatures(VK_SUCCESS, PhysicalDevice, Features)"
  },
  {
    "label": "vkGetPhysicalDeviceFormatProperties()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetPhysicalDeviceFormatProperties(VkPhysicalDevice PhysicalDevice, VkFormat Format, VkFormatProperties* FormatProperties)"
  },
  {
    "label": "GetPhysicalDeviceFormatProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceFormatProperties(VK_RESULT_MAX_ENUM, PhysicalDevice, Format, FormatProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceFormatProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceFormatProperties(PhysicalDevice, Format, FormatProperties)"
  },
  {
    "label": "GetPhysicalDeviceFormatProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceFormatProperties(VK_SUCCESS, PhysicalDevice, Format, FormatProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceFormatProperties2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetPhysicalDeviceFormatProperties2(VkPhysicalDevice PhysicalDevice, VkFormat Format, VkFormatProperties2* FormatProperties)"
  },
  {
    "label": "GetPhysicalDeviceFormatProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceFormatProperties2(VK_RESULT_MAX_ENUM, PhysicalDevice, Format, FormatProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceFormatProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceFormatProperties2(PhysicalDevice, Format, FormatProperties)"
  },
  {
    "label": "GetPhysicalDeviceFormatProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceFormatProperties2(VK_SUCCESS, PhysicalDevice, Format, FormatProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceImageFormatProperties()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkGetPhysicalDeviceImageFormatProperties(VkPhysicalDevice PhysicalDevice, VkFormat Format, VkImageType Type, VkImageTiling Tiling, VkImageUsageFlags Usage, VkImageCreateFlags Flags, VkImageFormatProperties* pImageFormatProperties)"
  },
  {
    "label": "GetPhysicalDeviceImageFormatProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceImageFormatProperties(VK_RESULT_MAX_ENUM, PhysicalDevice, Format, Type, Tiling, Usage, Flags, pImageFormatProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceImageFormatProperties()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetPhysicalDeviceImageFormatProperties(PhysicalDevice, Format, Type, Tiling, Usage, Flags, pImageFormatProperties)"
  },
  {
    "label": "GetPhysicalDeviceImageFormatProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceImageFormatProperties(Result, PhysicalDevice, Format, Type, Tiling, Usage, Flags, pImageFormatProperties)"
  },
  {
    "label": "GetPhysicalDeviceProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceProperties(VK_RESULT_MAX_ENUM, PhysicalDevice, Properties)"
  },
  {
    "label": "vkGetPhysicalDeviceProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceProperties(PhysicalDevice, Properties)"
  },
  {
    "label": "GetPhysicalDeviceProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceProperties(VK_SUCCESS, PhysicalDevice, Properties)"
  },
  {
    "label": "vkGetPhysicalDeviceMemoryProperties2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetPhysicalDeviceMemoryProperties2(VkPhysicalDevice PhysicalDevice, VkPhysicalDeviceMemoryProperties2* pMemoryProperties)"
  },
  {
    "label": "GetPhysicalDeviceMemoryProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceMemoryProperties2(VK_RESULT_MAX_ENUM, PhysicalDevice, pMemoryProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceMemoryProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceMemoryProperties2(PhysicalDevice, pMemoryProperties)"
  },
  {
    "label": "GetPhysicalDeviceMemoryProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceMemoryProperties2(VK_SUCCESS, PhysicalDevice, pMemoryProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceProperties2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetPhysicalDeviceProperties2(VkPhysicalDevice PhysicalDevice, VkPhysicalDeviceProperties2* Properties)"
  },
  {
    "label": "GetPhysicalDeviceProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceProperties2(VK_RESULT_MAX_ENUM, PhysicalDevice, Properties)"
  },
  {
    "label": "vkGetPhysicalDeviceProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceProperties2(PhysicalDevice, Properties)"
  },
  {
    "label": "GetPhysicalDeviceProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceProperties2(VK_SUCCESS, PhysicalDevice, Properties)"
  },
  {
    "label": "vkGetPhysicalDeviceFeatures2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetPhysicalDeviceFeatures2(VkPhysicalDevice PhysicalDevice, VkPhysicalDeviceFeatures2* Features)"
  },
  {
    "label": "GetPhysicalDeviceFeatures2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceFeatures2(VK_RESULT_MAX_ENUM, PhysicalDevice, Features)"
  },
  {
    "label": "vkGetPhysicalDeviceFeatures2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceFeatures2(PhysicalDevice, Features)"
  },
  {
    "label": "GetPhysicalDeviceFeatures2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceFeatures2(VK_SUCCESS, PhysicalDevice, Features)"
  },
  {
    "label": "vkGetPhysicalDeviceFragmentShadingRatesKHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetPhysicalDeviceFragmentShadingRatesKHR(VkPhysicalDevice PhysicalDevice, uint32* FragmentShadingRateCount, VkPhysicalDeviceFragmentShadingRateKHR* FragmentShadingRates)"
  },
  {
    "label": "GetPhysicalDeviceFragmentShadingRatesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceFragmentShadingRatesKHR(VK_RESULT_MAX_ENUM, PhysicalDevice, FragmentShadingRateCount, FragmentShadingRates)"
  },
  {
    "label": "vkGetPhysicalDeviceFragmentShadingRatesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceFragmentShadingRatesKHR(PhysicalDevice, FragmentShadingRateCount, FragmentShadingRates)"
  },
  {
    "label": "GetPhysicalDeviceFragmentShadingRatesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceFragmentShadingRatesKHR(VK_SUCCESS, PhysicalDevice, FragmentShadingRateCount, FragmentShadingRates)"
  },
  {
    "label": "vkGetPhysicalDeviceQueueFamilyProperties()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetPhysicalDeviceQueueFamilyProperties(VkPhysicalDevice PhysicalDevice, uint32* QueueFamilyPropertyCount, VkQueueFamilyProperties* QueueFamilyProperties)"
  },
  {
    "label": "GetPhysicalDeviceQueueFamilyProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceQueueFamilyProperties(VK_RESULT_MAX_ENUM, PhysicalDevice, QueueFamilyPropertyCount, QueueFamilyProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceQueueFamilyProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceQueueFamilyProperties(PhysicalDevice, QueueFamilyPropertyCount, QueueFamilyProperties)"
  },
  {
    "label": "GetPhysicalDeviceQueueFamilyProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceQueueFamilyProperties(VK_SUCCESS, PhysicalDevice, QueueFamilyPropertyCount, QueueFamilyProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceQueueFamilyProperties2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetPhysicalDeviceQueueFamilyProperties2(VkPhysicalDevice PhysicalDevice, uint32* QueueFamilyPropertyCount, VkQueueFamilyProperties2* QueueFamilyProperties)"
  },
  {
    "label": "GetPhysicalDeviceQueueFamilyProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceQueueFamilyProperties2(VK_RESULT_MAX_ENUM, PhysicalDevice, QueueFamilyPropertyCount, QueueFamilyProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceQueueFamilyProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceQueueFamilyProperties2(PhysicalDevice, QueueFamilyPropertyCount, QueueFamilyProperties)"
  },
  {
    "label": "GetPhysicalDeviceQueueFamilyProperties2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceQueueFamilyProperties2(VK_SUCCESS, PhysicalDevice, QueueFamilyPropertyCount, QueueFamilyProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceMemoryProperties()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetPhysicalDeviceMemoryProperties(VkPhysicalDevice PhysicalDevice, VkPhysicalDeviceMemoryProperties* MemoryProperties)"
  },
  {
    "label": "GetPhysicalDeviceMemoryProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceMemoryProperties(VK_RESULT_MAX_ENUM, PhysicalDevice, MemoryProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceMemoryProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceMemoryProperties(PhysicalDevice, MemoryProperties)"
  },
  {
    "label": "GetPhysicalDeviceMemoryProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceMemoryProperties(VK_SUCCESS, PhysicalDevice, MemoryProperties)"
  },
  {
    "label": "vkGetInstanceProcAddr()",
    "kind": "Method",
    "detail": "Function (} PFN_vkVoidFunction)",
    "insertText": "vkGetInstanceProcAddr(VkInstance Instance, const char* Name)"
  },
  {
    "label": "GetInstanceProcAddr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstanceProcAddr(VK_RESULT_MAX_ENUM, Instance, Name, nullptr)"
  },
  {
    "label": "vkGetInstanceProcAddr()",
    "kind": "Method",
    "detail": "Function (PFN_vkVoidFunction Function =)",
    "insertText": "vkGetInstanceProcAddr(Instance, Name)"
  },
  {
    "label": "GetInstanceProcAddr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstanceProcAddr(VK_SUCCESS, Instance, Name, Function)"
  },
  {
    "label": "GetDeviceProcAddr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceProcAddr(VK_RESULT_MAX_ENUM, Device, Name, nullptr)"
  },
  {
    "label": "vkGetDeviceProcAddr()",
    "kind": "Method",
    "detail": "Function (PFN_vkVoidFunction Function =)",
    "insertText": "vkGetDeviceProcAddr(Device, Name)"
  },
  {
    "label": "GetDeviceProcAddr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceProcAddr(VK_SUCCESS, Device, Name, Function)"
  },
  {
    "label": "CreateDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDevice(VK_RESULT_MAX_ENUM, PhysicalDevice, CreateInfo, Device)"
  },
  {
    "label": "vkCreateDevice()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateDevice(PhysicalDevice, CreateInfo, Allocator, Device)"
  },
  {
    "label": "CreateDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDevice(Result, PhysicalDevice, CreateInfo, Device)"
  },
  {
    "label": "DestroyDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDevice(VK_RESULT_MAX_ENUM, Device)"
  },
  {
    "label": "vkDestroyDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyDevice(Device, Allocator)"
  },
  {
    "label": "DestroyDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDevice(VK_SUCCESS, Device)"
  },
  {
    "label": "vkEnumerateInstanceExtensionProperties()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkEnumerateInstanceExtensionProperties(const char* LayerName, uint32* PropertyCount, VkExtensionProperties* Properties)"
  },
  {
    "label": "EnumerateInstanceExtensionProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateInstanceExtensionProperties(VK_RESULT_MAX_ENUM, LayerName, PropertyCount, Properties)"
  },
  {
    "label": "vkEnumerateInstanceExtensionProperties()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkEnumerateInstanceExtensionProperties(LayerName, PropertyCount, Properties)"
  },
  {
    "label": "EnumerateDeviceExtensionProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateDeviceExtensionProperties(VK_RESULT_MAX_ENUM, PhysicalDevice, LayerName, PropertyCount, Properties)"
  },
  {
    "label": "vkEnumerateDeviceExtensionProperties()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkEnumerateDeviceExtensionProperties(PhysicalDevice, LayerName, PropertyCount, Properties)"
  },
  {
    "label": "EnumerateDeviceExtensionProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateDeviceExtensionProperties(VK_SUCCESS, PhysicalDevice, LayerName, PropertyCount, Properties)"
  },
  {
    "label": "EnumerateInstanceLayerProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateInstanceLayerProperties(VK_RESULT_MAX_ENUM, PropertyCount, Properties)"
  },
  {
    "label": "vkEnumerateInstanceLayerProperties()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkEnumerateInstanceLayerProperties(PropertyCount, Properties)"
  },
  {
    "label": "EnumerateInstanceLayerProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateInstanceLayerProperties(VK_SUCCESS, PropertyCount, Properties)"
  },
  {
    "label": "EnumerateDeviceLayerProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateDeviceLayerProperties(VK_RESULT_MAX_ENUM, PhysicalDevice, PropertyCount, Properties)"
  },
  {
    "label": "vkEnumerateDeviceLayerProperties()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkEnumerateDeviceLayerProperties(PhysicalDevice, PropertyCount, Properties)"
  },
  {
    "label": "EnumerateDeviceLayerProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateDeviceLayerProperties(VK_SUCCESS, PhysicalDevice, PropertyCount, Properties)"
  },
  {
    "label": "GetDeviceQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceQueue(VK_RESULT_MAX_ENUM, Device, QueueFamilyIndex, QueueIndex, Queue)"
  },
  {
    "label": "vkGetDeviceQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetDeviceQueue(Device, QueueFamilyIndex, QueueIndex, Queue)"
  },
  {
    "label": "GetDeviceQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceQueue(VK_SUCCESS, Device, QueueFamilyIndex, QueueIndex, Queue)"
  },
  {
    "label": "vkQueueSubmit()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkQueueSubmit(VkQueue Queue, uint32 SubmitCount, const VkSubmitInfo* Submits, VkFence Fence)"
  },
  {
    "label": "QueueSubmit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueSubmit(VK_RESULT_MAX_ENUM, Queue, SubmitCount, Submits, Fence)"
  },
  {
    "label": "vkQueueSubmit()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkQueueSubmit(Queue, SubmitCount, Submits, Fence)"
  },
  {
    "label": "QueueSubmit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueSubmit(Result, Queue, SubmitCount, Submits, Fence)"
  },
  {
    "label": "QueueWaitIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueWaitIdle(VK_RESULT_MAX_ENUM, Queue)"
  },
  {
    "label": "vkQueueWaitIdle()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkQueueWaitIdle(Queue)"
  },
  {
    "label": "QueueWaitIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueWaitIdle(Result, Queue)"
  },
  {
    "label": "DeviceWaitIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeviceWaitIdle(VK_RESULT_MAX_ENUM, Device)"
  },
  {
    "label": "vkDeviceWaitIdle()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkDeviceWaitIdle(Device)"
  },
  {
    "label": "DeviceWaitIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeviceWaitIdle(VK_SUCCESS, Device)"
  },
  {
    "label": "AllocateMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateMemory(VK_RESULT_MAX_ENUM, Device, AllocateInfo, Memory)"
  },
  {
    "label": "vkAllocateMemory()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkAllocateMemory(Device, AllocateInfo, Allocator, Memory)"
  },
  {
    "label": "AllocateMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateMemory(Result, Device, AllocateInfo, Memory)"
  },
  {
    "label": "FreeMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeMemory(VK_RESULT_MAX_ENUM, Device, Memory)"
  },
  {
    "label": "vkFreeMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkFreeMemory(Device, Memory, Allocator)"
  },
  {
    "label": "FreeMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeMemory(VK_SUCCESS, Device, Memory)"
  },
  {
    "label": "vkMapMemory()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkMapMemory(VkDevice Device, VkDeviceMemory Memory, VkDeviceSize Offset, VkDeviceSize Size, VkMemoryMapFlags Flags, void** Data)"
  },
  {
    "label": "MapMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapMemory(VK_RESULT_MAX_ENUM, Device, Memory, Offset, Size, Flags, Data)"
  },
  {
    "label": "vkMapMemory()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkMapMemory(Device, Memory, Offset, Size, Flags, Data)"
  },
  {
    "label": "MapMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapMemory(Result, Device, Memory, Offset, Size, Flags, Data)"
  },
  {
    "label": "UnmapMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnmapMemory(VK_RESULT_MAX_ENUM, Device, Memory)"
  },
  {
    "label": "vkUnmapMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkUnmapMemory(Device, Memory)"
  },
  {
    "label": "UnmapMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnmapMemory(VK_SUCCESS, Device, Memory)"
  },
  {
    "label": "vkFlushMappedMemoryRanges()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkFlushMappedMemoryRanges(VkDevice Device, uint32 MemoryRangeCount, const VkMappedMemoryRange* MemoryRanges)"
  },
  {
    "label": "FlushMappedMemoryRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushMappedMemoryRanges(VK_RESULT_MAX_ENUM, Device, MemoryRangeCount, MemoryRanges)"
  },
  {
    "label": "vkFlushMappedMemoryRanges()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkFlushMappedMemoryRanges(Device, MemoryRangeCount, MemoryRanges)"
  },
  {
    "label": "FlushMappedMemoryRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushMappedMemoryRanges(Result, Device, MemoryRangeCount, MemoryRanges)"
  },
  {
    "label": "InvalidateMappedMemoryRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateMappedMemoryRanges(VK_RESULT_MAX_ENUM, Device, MemoryRangeCount, MemoryRanges)"
  },
  {
    "label": "vkInvalidateMappedMemoryRanges()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkInvalidateMappedMemoryRanges(Device, MemoryRangeCount, MemoryRanges)"
  },
  {
    "label": "InvalidateMappedMemoryRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateMappedMemoryRanges(Result, Device, MemoryRangeCount, MemoryRanges)"
  },
  {
    "label": "GetDeviceMemoryCommitment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceMemoryCommitment(VK_RESULT_MAX_ENUM, Device, Memory, pCommittedMemoryInBytes)"
  },
  {
    "label": "vkGetDeviceMemoryCommitment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetDeviceMemoryCommitment(Device, Memory, pCommittedMemoryInBytes)"
  },
  {
    "label": "GetDeviceMemoryCommitment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceMemoryCommitment(VK_SUCCESS, Device, Memory, pCommittedMemoryInBytes)"
  },
  {
    "label": "vkBindBufferMemory()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkBindBufferMemory(VkDevice Device, VkBuffer Buffer, VkDeviceMemory Memory, VkDeviceSize MemoryOffset)"
  },
  {
    "label": "BindBufferMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindBufferMemory(VK_RESULT_MAX_ENUM, Device, Buffer, Memory, MemoryOffset)"
  },
  {
    "label": "vkBindBufferMemory()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkBindBufferMemory(Device, Buffer, Memory, MemoryOffset)"
  },
  {
    "label": "BindBufferMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindBufferMemory(Result, Device, Buffer, Memory, MemoryOffset)"
  },
  {
    "label": "BindImageMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindImageMemory(VK_RESULT_MAX_ENUM, Device, Image, Memory, MemoryOffset)"
  },
  {
    "label": "vkBindImageMemory()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkBindImageMemory(Device, Image, Memory, MemoryOffset)"
  },
  {
    "label": "BindImageMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindImageMemory(Result, Device, Image, Memory, MemoryOffset)"
  },
  {
    "label": "GetBufferMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBufferMemoryRequirements(VK_RESULT_MAX_ENUM, Device, Buffer, MemoryRequirements)"
  },
  {
    "label": "vkGetBufferMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetBufferMemoryRequirements(Device, Buffer, MemoryRequirements)"
  },
  {
    "label": "GetBufferMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBufferMemoryRequirements(VK_SUCCESS, Device, Buffer, MemoryRequirements)"
  },
  {
    "label": "vkGetImageMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetImageMemoryRequirements(VkDevice Device, VkImage Image, VkMemoryRequirements* MemoryRequirements)"
  },
  {
    "label": "GetImageMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetImageMemoryRequirements(VK_RESULT_MAX_ENUM, Device, Image, MemoryRequirements)"
  },
  {
    "label": "vkGetImageMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetImageMemoryRequirements(Device, Image, MemoryRequirements)"
  },
  {
    "label": "GetImageMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetImageMemoryRequirements(VK_SUCCESS, Device, Image, MemoryRequirements)"
  },
  {
    "label": "vkGetImageSparseMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetImageSparseMemoryRequirements(VkDevice Device, VkImage Image, uint32* pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements* pSparseMemoryRequirements)"
  },
  {
    "label": "GetImageSparseMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetImageSparseMemoryRequirements(VK_RESULT_MAX_ENUM, Device, Image, pSparseMemoryRequirementCount, pSparseMemoryRequirements)"
  },
  {
    "label": "vkGetImageSparseMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetImageSparseMemoryRequirements(Device, Image, pSparseMemoryRequirementCount, pSparseMemoryRequirements)"
  },
  {
    "label": "GetImageSparseMemoryRequirements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetImageSparseMemoryRequirements(VK_SUCCESS, Device, Image, pSparseMemoryRequirementCount, pSparseMemoryRequirements)"
  },
  {
    "label": "vkGetPhysicalDeviceSparseImageFormatProperties()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetPhysicalDeviceSparseImageFormatProperties(VkPhysicalDevice PhysicalDevice, VkFormat Format, VkImageType Type, VkSampleCountFlagBits Samples, VkImageUsageFlags Usage, VkImageTiling Tiling, uint32* pPropertyCount, VkSparseImageFormatProperties* pProperties)"
  },
  {
    "label": "GetPhysicalDeviceSparseImageFormatProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceSparseImageFormatProperties(VK_RESULT_MAX_ENUM, PhysicalDevice, Format, Type, Samples, Usage, Tiling, pPropertyCount, pProperties)"
  },
  {
    "label": "vkGetPhysicalDeviceSparseImageFormatProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetPhysicalDeviceSparseImageFormatProperties(PhysicalDevice, Format, Type, Samples, Usage, Tiling, pPropertyCount, pProperties)"
  },
  {
    "label": "GetPhysicalDeviceSparseImageFormatProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceSparseImageFormatProperties(VK_SUCCESS, PhysicalDevice, Format, Type, Samples, Usage, Tiling, pPropertyCount, pProperties)"
  },
  {
    "label": "vkQueueBindSparse()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkQueueBindSparse(VkQueue Queue, uint32 BindInfoCount, const VkBindSparseInfo* pBindInfo, VkFence Fence)"
  },
  {
    "label": "QueueBindSparse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueBindSparse(VK_RESULT_MAX_ENUM, Queue, BindInfoCount, pBindInfo, Fence)"
  },
  {
    "label": "vkQueueBindSparse()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkQueueBindSparse(Queue, BindInfoCount, pBindInfo, Fence)"
  },
  {
    "label": "QueueBindSparse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueBindSparse(Result, Queue, BindInfoCount, pBindInfo, Fence)"
  },
  {
    "label": "CreateFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFence(VK_RESULT_MAX_ENUM, Device, CreateInfo, Fence)"
  },
  {
    "label": "vkCreateFence()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateFence(Device, CreateInfo, Allocator, Fence)"
  },
  {
    "label": "CreateFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFence(Result, Device, CreateInfo, Fence)"
  },
  {
    "label": "DestroyFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyFence(VK_RESULT_MAX_ENUM, Device, Fence)"
  },
  {
    "label": "vkDestroyFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyFence(Device, Fence, Allocator)"
  },
  {
    "label": "DestroyFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyFence(VK_SUCCESS, Device, Fence)"
  },
  {
    "label": "vkResetFences()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkResetFences(VkDevice Device, uint32 FenceCount, const VkFence* Fences)"
  },
  {
    "label": "ResetFences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetFences(VK_RESULT_MAX_ENUM, Device, FenceCount, Fences)"
  },
  {
    "label": "vkResetFences()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkResetFences(Device, FenceCount, Fences)"
  },
  {
    "label": "ResetFences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetFences(Result, Device, FenceCount, Fences)"
  },
  {
    "label": "GetFenceStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFenceStatus(VK_RESULT_MAX_ENUM, Device, Fence)"
  },
  {
    "label": "vkGetFenceStatus()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetFenceStatus(Device, Fence)"
  },
  {
    "label": "GetFenceStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFenceStatus(Result, Device, Fence)"
  },
  {
    "label": "WaitForFences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForFences(VK_RESULT_MAX_ENUM, Device, FenceCount, Fences, bWaitAll, Timeout)"
  },
  {
    "label": "vkWaitForFences()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkWaitForFences(Device, FenceCount, Fences, bWaitAll, Timeout)"
  },
  {
    "label": "WaitForFences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForFences(Result, Device, FenceCount, Fences, bWaitAll, Timeout)"
  },
  {
    "label": "CreateSemaphore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSemaphore(VK_RESULT_MAX_ENUM, Device, CreateInfo, Semaphore)"
  },
  {
    "label": "vkCreateSemaphore()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateSemaphore(Device, CreateInfo, Allocator, Semaphore)"
  },
  {
    "label": "CreateSemaphore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSemaphore(Result, Device, CreateInfo, Semaphore)"
  },
  {
    "label": "DestroySemaphore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySemaphore(VK_RESULT_MAX_ENUM, Device, Semaphore)"
  },
  {
    "label": "vkDestroySemaphore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroySemaphore(Device, Semaphore, Allocator)"
  },
  {
    "label": "DestroySemaphore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySemaphore(VK_SUCCESS, Device, Semaphore)"
  },
  {
    "label": "vkCreateEvent()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateEvent(VkDevice Device, const VkEventCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkEvent* Event)"
  },
  {
    "label": "CreateEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEvent(VK_RESULT_MAX_ENUM, Device, CreateInfo, Event)"
  },
  {
    "label": "vkCreateEvent()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateEvent(Device, CreateInfo, Allocator, Event)"
  },
  {
    "label": "CreateEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEvent(Result, Device, CreateInfo, Event)"
  },
  {
    "label": "DestroyEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyEvent(VK_RESULT_MAX_ENUM, Device, Event)"
  },
  {
    "label": "vkDestroyEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyEvent(Device, Event, Allocator)"
  },
  {
    "label": "DestroyEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyEvent(VK_SUCCESS, Device, Event)"
  },
  {
    "label": "vkGetEventStatus()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkGetEventStatus(VkDevice Device, VkEvent Event)"
  },
  {
    "label": "GetEventStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetEventStatus(VK_RESULT_MAX_ENUM, Device, Event)"
  },
  {
    "label": "vkGetEventStatus()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetEventStatus(Device, Event)"
  },
  {
    "label": "GetEventStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetEventStatus(Result, Device, Event)"
  },
  {
    "label": "SetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEvent(VK_RESULT_MAX_ENUM, Device, Event)"
  },
  {
    "label": "vkSetEvent()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkSetEvent(Device, Event)"
  },
  {
    "label": "SetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEvent(Result, Device, Event)"
  },
  {
    "label": "ResetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetEvent(VK_RESULT_MAX_ENUM, Device, Event)"
  },
  {
    "label": "vkResetEvent()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkResetEvent(Device, Event)"
  },
  {
    "label": "ResetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetEvent(Result, Device, Event)"
  },
  {
    "label": "CreateQueryPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateQueryPool(VK_RESULT_MAX_ENUM, Device, CreateInfo, QueryPool)"
  },
  {
    "label": "vkCreateQueryPool()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateQueryPool(Device, CreateInfo, Allocator, QueryPool)"
  },
  {
    "label": "CreateQueryPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateQueryPool(Result, Device, CreateInfo, QueryPool)"
  },
  {
    "label": "DestroyQueryPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyQueryPool(VK_RESULT_MAX_ENUM, Device, QueryPool)"
  },
  {
    "label": "vkDestroyQueryPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyQueryPool(Device, QueryPool, Allocator)"
  },
  {
    "label": "DestroyQueryPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyQueryPool(VK_SUCCESS, Device, QueryPool)"
  },
  {
    "label": "vkGetQueryPoolResults()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkGetQueryPoolResults(VkDevice Device, VkQueryPool QueryPool, uint32 FirstQuery, uint32 QueryCount, size_t DataSize, void* Data, VkDeviceSize Stride, VkQueryResultFlags Flags)"
  },
  {
    "label": "GetQueryPoolResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetQueryPoolResults(VK_RESULT_MAX_ENUM, Device, QueryPool, FirstQuery, QueryCount, DataSize, Data, Stride, Flags)"
  },
  {
    "label": "vkGetQueryPoolResults()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetQueryPoolResults(Device, QueryPool, FirstQuery, QueryCount, DataSize, Data, Stride, Flags)"
  },
  {
    "label": "GetQueryPoolResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetQueryPoolResults(Result, Device, QueryPool, FirstQuery, QueryCount, DataSize, Data, Stride, Flags)"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateBuffer(VK_RESULT_MAX_ENUM, Device, CreateInfo, Buffer)"
  },
  {
    "label": "vkCreateBuffer()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateBuffer(Device, CreateInfo, Allocator, Buffer)"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateBuffer(Result, Device, CreateInfo, Buffer)"
  },
  {
    "label": "DestroyBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyBuffer(VK_RESULT_MAX_ENUM, Device, Buffer)"
  },
  {
    "label": "vkDestroyBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyBuffer(Device, Buffer, Allocator)"
  },
  {
    "label": "DestroyBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyBuffer(VK_SUCCESS, Device, Buffer)"
  },
  {
    "label": "vkCreateBufferView()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateBufferView(VkDevice Device, const VkBufferViewCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkBufferView* View)"
  },
  {
    "label": "CreateBufferView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateBufferView(VK_RESULT_MAX_ENUM, Device, CreateInfo, View)"
  },
  {
    "label": "vkCreateBufferView()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateBufferView(Device, CreateInfo, Allocator, View)"
  },
  {
    "label": "CreateBufferView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateBufferView(Result, Device, CreateInfo, View)"
  },
  {
    "label": "DestroyBufferView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyBufferView(VK_RESULT_MAX_ENUM, Device, BufferView)"
  },
  {
    "label": "vkDestroyBufferView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyBufferView(Device, BufferView, Allocator)"
  },
  {
    "label": "vkCreateImage()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateImage(VkDevice Device, const VkImageCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkImage* Image)"
  },
  {
    "label": "CreateImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateImage(VK_RESULT_MAX_ENUM, Device, CreateInfo, Image)"
  },
  {
    "label": "vkCreateImage()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateImage(Device, CreateInfo, Allocator, Image)"
  },
  {
    "label": "CreateImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateImage(Result, Device, CreateInfo, Image)"
  },
  {
    "label": "DestroyImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyImage(VK_RESULT_MAX_ENUM, Device, Image)"
  },
  {
    "label": "vkDestroyImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyImage(Device, Image, Allocator)"
  },
  {
    "label": "DestroyImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyImage(VK_SUCCESS, Device, Image)"
  },
  {
    "label": "vkGetImageSubresourceLayout()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetImageSubresourceLayout(VkDevice Device, VkImage Image, const VkImageSubresource* Subresource, VkSubresourceLayout* Layout)"
  },
  {
    "label": "GetImageSubresourceLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetImageSubresourceLayout(VK_RESULT_MAX_ENUM, Device, Image, Subresource, Layout)"
  },
  {
    "label": "vkGetImageSubresourceLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetImageSubresourceLayout(Device, Image, Subresource, Layout)"
  },
  {
    "label": "GetImageSubresourceLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetImageSubresourceLayout(VK_SUCCESS, Device, Image, Subresource, Layout)"
  },
  {
    "label": "vkCreateImageView()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateImageView(VkDevice Device, const VkImageViewCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkImageView* View)"
  },
  {
    "label": "CreateImageView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateImageView(VK_RESULT_MAX_ENUM, Device, CreateInfo, View)"
  },
  {
    "label": "vkCreateImageView()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateImageView(Device, CreateInfo, Allocator, View)"
  },
  {
    "label": "CreateImageView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateImageView(Result, Device, CreateInfo, View)"
  },
  {
    "label": "DestroyImageView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyImageView(VK_RESULT_MAX_ENUM, Device, ImageView)"
  },
  {
    "label": "vkDestroyImageView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyImageView(Device, ImageView, Allocator)"
  },
  {
    "label": "DestroyImageView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyImageView(VK_SUCCESS, Device, ImageView)"
  },
  {
    "label": "vkCreateShaderModule()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateShaderModule(VkDevice Device, const VkShaderModuleCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkShaderModule* ShaderModule)"
  },
  {
    "label": "CreateShaderModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateShaderModule(VK_RESULT_MAX_ENUM, Device, CreateInfo, ShaderModule)"
  },
  {
    "label": "vkCreateShaderModule()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateShaderModule(Device, CreateInfo, Allocator, ShaderModule)"
  },
  {
    "label": "CreateShaderModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateShaderModule(Result, Device, CreateInfo, ShaderModule)"
  },
  {
    "label": "DestroyShaderModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyShaderModule(VK_RESULT_MAX_ENUM, Device, ShaderModule)"
  },
  {
    "label": "vkDestroyShaderModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyShaderModule(Device, ShaderModule, Allocator)"
  },
  {
    "label": "DestroyShaderModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyShaderModule(VK_SUCCESS, Device, ShaderModule)"
  },
  {
    "label": "vkCreatePipelineCache()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreatePipelineCache(VkDevice Device, const VkPipelineCacheCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkPipelineCache* PipelineCache)"
  },
  {
    "label": "CreatePipelineCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePipelineCache(VK_RESULT_MAX_ENUM, Device, CreateInfo, PipelineCache)"
  },
  {
    "label": "vkCreatePipelineCache()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreatePipelineCache(Device, CreateInfo, Allocator, PipelineCache)"
  },
  {
    "label": "CreatePipelineCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePipelineCache(Result, Device, CreateInfo, PipelineCache)"
  },
  {
    "label": "DestroyPipelineCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPipelineCache(VK_RESULT_MAX_ENUM, Device, PipelineCache)"
  },
  {
    "label": "vkDestroyPipelineCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyPipelineCache(Device, PipelineCache, Allocator)"
  },
  {
    "label": "DestroyPipelineCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPipelineCache(VK_SUCCESS, Device, PipelineCache)"
  },
  {
    "label": "vkGetPipelineCacheData()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkGetPipelineCacheData(VkDevice Device, VkPipelineCache PipelineCache, size_t* DataSize, void* Data)"
  },
  {
    "label": "GetPipelineCacheData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPipelineCacheData(VK_RESULT_MAX_ENUM, Device, PipelineCache, DataSize, Data)"
  },
  {
    "label": "vkGetPipelineCacheData()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetPipelineCacheData(Device, PipelineCache, DataSize, Data)"
  },
  {
    "label": "GetPipelineCacheData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPipelineCacheData(Result, Device, PipelineCache, DataSize, Data)"
  },
  {
    "label": "MergePipelineCaches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergePipelineCaches(VK_RESULT_MAX_ENUM, Device, DestCache, SourceCacheCount, SrcCaches)"
  },
  {
    "label": "vkMergePipelineCaches()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkMergePipelineCaches(Device, DestCache, SourceCacheCount, SrcCaches)"
  },
  {
    "label": "MergePipelineCaches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergePipelineCaches(Result, Device, DestCache, SourceCacheCount, SrcCaches)"
  },
  {
    "label": "CreateGraphicsPipelines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGraphicsPipelines(VK_RESULT_MAX_ENUM, Device, PipelineCache, CreateInfoCount, CreateInfos, Pipelines)"
  },
  {
    "label": "vkCreateGraphicsPipelines()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateGraphicsPipelines(Device, PipelineCache, CreateInfoCount, CreateInfos, Allocator, Pipelines)"
  },
  {
    "label": "CreateGraphicsPipelines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGraphicsPipelines(Result, Device, PipelineCache, CreateInfoCount, CreateInfos, Pipelines)"
  },
  {
    "label": "CreateComputePipelines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateComputePipelines(VK_RESULT_MAX_ENUM, Device, PipelineCache, CreateInfoCount, CreateInfos, Pipelines)"
  },
  {
    "label": "vkCreateComputePipelines()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateComputePipelines(Device, PipelineCache, CreateInfoCount, CreateInfos, Allocator, Pipelines)"
  },
  {
    "label": "CreateComputePipelines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateComputePipelines(Result, Device, PipelineCache, CreateInfoCount, CreateInfos, Pipelines)"
  },
  {
    "label": "DestroyPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPipeline(VK_RESULT_MAX_ENUM, Device, Pipeline)"
  },
  {
    "label": "vkDestroyPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyPipeline(Device, Pipeline, Allocator)"
  },
  {
    "label": "DestroyPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPipeline(VK_SUCCESS, Device, Pipeline)"
  },
  {
    "label": "vkCreatePipelineLayout()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreatePipelineLayout(VkDevice Device, const VkPipelineLayoutCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkPipelineLayout* PipelineLayout)"
  },
  {
    "label": "CreatePipelineLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePipelineLayout(VK_RESULT_MAX_ENUM, Device, CreateInfo, PipelineLayout)"
  },
  {
    "label": "vkCreatePipelineLayout()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreatePipelineLayout(Device, CreateInfo, Allocator, PipelineLayout)"
  },
  {
    "label": "CreatePipelineLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePipelineLayout(Result, Device, CreateInfo, PipelineLayout)"
  },
  {
    "label": "DestroyPipelineLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPipelineLayout(VK_RESULT_MAX_ENUM, Device, PipelineLayout)"
  },
  {
    "label": "vkDestroyPipelineLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyPipelineLayout(Device, PipelineLayout, Allocator)"
  },
  {
    "label": "DestroyPipelineLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPipelineLayout(VK_SUCCESS, Device, PipelineLayout)"
  },
  {
    "label": "vkCreateSampler()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateSampler(VkDevice Device, const VkSamplerCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkSampler* Sampler)"
  },
  {
    "label": "CreateSampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSampler(VK_RESULT_MAX_ENUM, Device, CreateInfo, Sampler)"
  },
  {
    "label": "vkCreateSampler()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateSampler(Device, CreateInfo, Allocator, Sampler)"
  },
  {
    "label": "CreateSampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSampler(Result, Device, CreateInfo, Sampler)"
  },
  {
    "label": "DestroySampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySampler(VK_RESULT_MAX_ENUM, Device, Sampler)"
  },
  {
    "label": "vkDestroySampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroySampler(Device, Sampler, Allocator)"
  },
  {
    "label": "vkCreateDescriptorSetLayout()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateDescriptorSetLayout(VkDevice Device, const VkDescriptorSetLayoutCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkDescriptorSetLayout* SetLayout)"
  },
  {
    "label": "CreateDescriptorSetLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDescriptorSetLayout(VK_RESULT_MAX_ENUM, Device, CreateInfo, SetLayout)"
  },
  {
    "label": "vkCreateDescriptorSetLayout()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateDescriptorSetLayout(Device, CreateInfo, Allocator, SetLayout)"
  },
  {
    "label": "CreateDescriptorSetLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDescriptorSetLayout(Result, Device, CreateInfo, SetLayout)"
  },
  {
    "label": "DestroyDescriptorSetLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDescriptorSetLayout(VK_RESULT_MAX_ENUM, Device, DescriptorSetLayout)"
  },
  {
    "label": "vkDestroyDescriptorSetLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyDescriptorSetLayout(Device, DescriptorSetLayout, Allocator)"
  },
  {
    "label": "DestroyDescriptorSetLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDescriptorSetLayout(VK_SUCCESS, Device, DescriptorSetLayout)"
  },
  {
    "label": "vkCreateDescriptorPool()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateDescriptorPool(VkDevice Device, const VkDescriptorPoolCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkDescriptorPool* DescriptorPool)"
  },
  {
    "label": "CreateDescriptorPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDescriptorPool(VK_RESULT_MAX_ENUM, Device, CreateInfo, DescriptorPool)"
  },
  {
    "label": "vkCreateDescriptorPool()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateDescriptorPool(Device, CreateInfo, Allocator, DescriptorPool)"
  },
  {
    "label": "CreateDescriptorPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDescriptorPool(Result, Device, CreateInfo, DescriptorPool)"
  },
  {
    "label": "DestroyDescriptorPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDescriptorPool(VK_RESULT_MAX_ENUM, Device, DescriptorPool)"
  },
  {
    "label": "vkDestroyDescriptorPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyDescriptorPool(Device, DescriptorPool, Allocator)"
  },
  {
    "label": "DestroyDescriptorPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDescriptorPool(VK_SUCCESS, Device, DescriptorPool)"
  },
  {
    "label": "vkResetDescriptorPool()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkResetDescriptorPool(VkDevice Device, VkDescriptorPool DescriptorPool, VkDescriptorPoolResetFlags Flags)"
  },
  {
    "label": "ResetDescriptorPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDescriptorPool(VK_RESULT_MAX_ENUM, Device, DescriptorPool, Flags)"
  },
  {
    "label": "vkResetDescriptorPool()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkResetDescriptorPool(Device, DescriptorPool, Flags)"
  },
  {
    "label": "ResetDescriptorPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDescriptorPool(Result, Device, DescriptorPool, Flags)"
  },
  {
    "label": "AllocateDescriptorSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateDescriptorSets(VK_RESULT_MAX_ENUM, Device, AllocateInfo, DescriptorSets)"
  },
  {
    "label": "vkAllocateDescriptorSets()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkAllocateDescriptorSets(Device, AllocateInfo, DescriptorSets)"
  },
  {
    "label": "AllocateDescriptorSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateDescriptorSets(Result, Device, AllocateInfo, DescriptorSets)"
  },
  {
    "label": "FreeDescriptorSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeDescriptorSets(VK_RESULT_MAX_ENUM, Device, DescriptorPool, DescriptorSetCount, DescriptorSets)"
  },
  {
    "label": "vkFreeDescriptorSets()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkFreeDescriptorSets(Device, DescriptorPool, DescriptorSetCount, DescriptorSets)"
  },
  {
    "label": "FreeDescriptorSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeDescriptorSets(Result, Device, DescriptorPool, DescriptorSetCount, DescriptorSets)"
  },
  {
    "label": "UpdateDescriptorSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDescriptorSets(VK_RESULT_MAX_ENUM, Device, DescriptorWriteCount, DescriptorWrites, DescriptorCopyCount, DescriptorCopies)"
  },
  {
    "label": "vkUpdateDescriptorSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkUpdateDescriptorSets(Device, DescriptorWriteCount, DescriptorWrites, DescriptorCopyCount, DescriptorCopies)"
  },
  {
    "label": "UpdateDescriptorSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDescriptorSets(VK_SUCCESS, Device, DescriptorWriteCount, DescriptorWrites, DescriptorCopyCount, DescriptorCopies)"
  },
  {
    "label": "vkCreateFramebuffer()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateFramebuffer(VkDevice Device, const VkFramebufferCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkFramebuffer* Framebuffer)"
  },
  {
    "label": "CreateFramebuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFramebuffer(VK_RESULT_MAX_ENUM, Device, CreateInfo, Framebuffer)"
  },
  {
    "label": "vkCreateFramebuffer()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateFramebuffer(Device, CreateInfo, Allocator, Framebuffer)"
  },
  {
    "label": "CreateFramebuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFramebuffer(Result, Device, CreateInfo, Framebuffer)"
  },
  {
    "label": "DestroyFramebuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyFramebuffer(VK_RESULT_MAX_ENUM, Device, Framebuffer)"
  },
  {
    "label": "vkDestroyFramebuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyFramebuffer(Device, Framebuffer, Allocator)"
  },
  {
    "label": "DestroyFramebuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyFramebuffer(VK_SUCCESS, Device, Framebuffer)"
  },
  {
    "label": "vkCreateRenderPass()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateRenderPass(VkDevice Device, const VkRenderPassCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkRenderPass* RenderPass)"
  },
  {
    "label": "CreateRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRenderPass(VK_RESULT_MAX_ENUM, Device, CreateInfo, RenderPass)"
  },
  {
    "label": "vkCreateRenderPass()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateRenderPass(Device, CreateInfo, Allocator, RenderPass)"
  },
  {
    "label": "CreateRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRenderPass(Result, Device, CreateInfo, RenderPass)"
  },
  {
    "label": "CreateRenderPass2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRenderPass2KHR(VK_RESULT_MAX_ENUM, Device, CreateInfo, RenderPass)"
  },
  {
    "label": "vkCreateRenderPass2KHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateRenderPass2KHR(Device, CreateInfo, Allocator, RenderPass)"
  },
  {
    "label": "CreateRenderPass2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRenderPass2KHR(Result, Device, CreateInfo, RenderPass)"
  },
  {
    "label": "DestroyRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRenderPass(VK_RESULT_MAX_ENUM, Device, RenderPass)"
  },
  {
    "label": "vkDestroyRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyRenderPass(Device, RenderPass, Allocator)"
  },
  {
    "label": "DestroyRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRenderPass(VK_SUCCESS, Device, RenderPass)"
  },
  {
    "label": "vkGetRenderAreaGranularity()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetRenderAreaGranularity(VkDevice Device, VkRenderPass RenderPass, VkExtent2D* pGranularity)"
  },
  {
    "label": "GetRenderAreaGranularity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRenderAreaGranularity(VK_RESULT_MAX_ENUM, Device, RenderPass, pGranularity)"
  },
  {
    "label": "vkGetRenderAreaGranularity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetRenderAreaGranularity(Device, RenderPass, pGranularity)"
  },
  {
    "label": "GetRenderAreaGranularity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRenderAreaGranularity(VK_SUCCESS, Device, RenderPass, pGranularity)"
  },
  {
    "label": "vkCreateCommandPool()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateCommandPool(VkDevice Device, const VkCommandPoolCreateInfo* CreateInfo, const VkAllocationCallbacks* Allocator, VkCommandPool* CommandPool)"
  },
  {
    "label": "CreateCommandPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCommandPool(VK_RESULT_MAX_ENUM, Device, CreateInfo, CommandPool)"
  },
  {
    "label": "vkCreateCommandPool()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateCommandPool(Device, CreateInfo, Allocator, CommandPool)"
  },
  {
    "label": "CreateCommandPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCommandPool(Result, Device, CreateInfo, CommandPool)"
  },
  {
    "label": "DestroyCommandPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyCommandPool(VK_RESULT_MAX_ENUM, Device, CommandPool)"
  },
  {
    "label": "vkDestroyCommandPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyCommandPool(Device, CommandPool, Allocator)"
  },
  {
    "label": "DestroyCommandPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyCommandPool(VK_SUCCESS, Device, CommandPool)"
  },
  {
    "label": "vkResetCommandPool()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkResetCommandPool(VkDevice Device, VkCommandPool CommandPool, VkCommandPoolResetFlags Flags)"
  },
  {
    "label": "ResetCommandPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCommandPool(VK_RESULT_MAX_ENUM, Device, CommandPool, Flags)"
  },
  {
    "label": "vkResetCommandPool()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkResetCommandPool(Device, CommandPool, Flags)"
  },
  {
    "label": "ResetCommandPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCommandPool(Result, Device, CommandPool, Flags)"
  },
  {
    "label": "TrimCommandPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimCommandPool(VK_RESULT_MAX_ENUM, Device, CommandPool, Flags)"
  },
  {
    "label": "vkTrimCommandPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkTrimCommandPool(Device, CommandPool, Flags)"
  },
  {
    "label": "TrimCommandPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimCommandPool(VK_SUCCESS, Device, CommandPool, Flags)"
  },
  {
    "label": "vkAllocateCommandBuffers()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkAllocateCommandBuffers(VkDevice Device, const VkCommandBufferAllocateInfo* AllocateInfo, VkCommandBuffer* CommandBuffers)"
  },
  {
    "label": "AllocateCommandBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateCommandBuffers(VK_RESULT_MAX_ENUM, Device, AllocateInfo, CommandBuffers)"
  },
  {
    "label": "vkAllocateCommandBuffers()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkAllocateCommandBuffers(Device, AllocateInfo, CommandBuffers)"
  },
  {
    "label": "AllocateCommandBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateCommandBuffers(Result, Device, AllocateInfo, CommandBuffers)"
  },
  {
    "label": "FreeCommandBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeCommandBuffers(VK_RESULT_MAX_ENUM, Device, CommandPool, CommandBufferCount, CommandBuffers)"
  },
  {
    "label": "vkFreeCommandBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkFreeCommandBuffers(Device, CommandPool, CommandBufferCount, CommandBuffers)"
  },
  {
    "label": "FreeCommandBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeCommandBuffers(VK_SUCCESS, Device, CommandPool, CommandBufferCount, CommandBuffers)"
  },
  {
    "label": "vkBeginCommandBuffer()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkBeginCommandBuffer(VkCommandBuffer CommandBuffer, const VkCommandBufferBeginInfo* BeginInfo)"
  },
  {
    "label": "BeginCommandBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCommandBuffer(VK_RESULT_MAX_ENUM, CommandBuffer, BeginInfo)"
  },
  {
    "label": "vkBeginCommandBuffer()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkBeginCommandBuffer(CommandBuffer, BeginInfo)"
  },
  {
    "label": "BeginCommandBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCommandBuffer(Result, CommandBuffer, BeginInfo)"
  },
  {
    "label": "EndCommandBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndCommandBuffer(VK_RESULT_MAX_ENUM, CommandBuffer)"
  },
  {
    "label": "vkEndCommandBuffer()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkEndCommandBuffer(CommandBuffer)"
  },
  {
    "label": "EndCommandBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndCommandBuffer(Result, CommandBuffer)"
  },
  {
    "label": "ResetCommandBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCommandBuffer(VK_RESULT_MAX_ENUM, CommandBuffer, Flags)"
  },
  {
    "label": "vkResetCommandBuffer()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkResetCommandBuffer(CommandBuffer, Flags)"
  },
  {
    "label": "ResetCommandBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCommandBuffer(Result, CommandBuffer, Flags)"
  },
  {
    "label": "CmdBindPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBindPipeline(VK_RESULT_MAX_ENUM, CommandBuffer, PipelineBindPoint, Pipeline)"
  },
  {
    "label": "vkCmdBindPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdBindPipeline(CommandBuffer, PipelineBindPoint, Pipeline)"
  },
  {
    "label": "CmdBindPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBindPipeline(VK_SUCCESS, CommandBuffer, PipelineBindPoint, Pipeline)"
  },
  {
    "label": "vkCmdSetViewport()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetViewport(VkCommandBuffer CommandBuffer, uint32 FirstViewport, uint32 ViewportCount, const VkViewport* Viewports)"
  },
  {
    "label": "CmdSetViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetViewport(VK_RESULT_MAX_ENUM, CommandBuffer, FirstViewport, ViewportCount, Viewports)"
  },
  {
    "label": "vkCmdSetViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetViewport(CommandBuffer, FirstViewport, ViewportCount, Viewports)"
  },
  {
    "label": "CmdSetViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetViewport(VK_SUCCESS, CommandBuffer, FirstViewport, ViewportCount, Viewports)"
  },
  {
    "label": "vkCmdSetScissor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetScissor(VkCommandBuffer CommandBuffer, uint32 FirstScissor, uint32 ScissorCount, const VkRect2D* Scissors)"
  },
  {
    "label": "CmdSetScissor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetScissor(VK_RESULT_MAX_ENUM, CommandBuffer, FirstScissor, ScissorCount, Scissors)"
  },
  {
    "label": "vkCmdSetScissor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetScissor(CommandBuffer, FirstScissor, ScissorCount, Scissors)"
  },
  {
    "label": "CmdSetScissor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetScissor(VK_SUCCESS, CommandBuffer, FirstScissor, ScissorCount, Scissors)"
  },
  {
    "label": "vkCmdSetLineWidth()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetLineWidth(VkCommandBuffer CommandBuffer, float LineWidth)"
  },
  {
    "label": "CmdSetLineWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetLineWidth(VK_RESULT_MAX_ENUM, CommandBuffer, LineWidth)"
  },
  {
    "label": "vkCmdSetLineWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetLineWidth(CommandBuffer, LineWidth)"
  },
  {
    "label": "CmdSetLineWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetLineWidth(VK_SUCCESS, CommandBuffer, LineWidth)"
  },
  {
    "label": "vkCmdSetDepthBias()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetDepthBias(VkCommandBuffer CommandBuffer, float DepthBiasConstantFactor, float DepthBiasClamp, float DepthBiasSlopeFactor)"
  },
  {
    "label": "CmdSetDepthBias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetDepthBias(VK_RESULT_MAX_ENUM, CommandBuffer, DepthBiasConstantFactor, DepthBiasClamp, DepthBiasSlopeFactor)"
  },
  {
    "label": "vkCmdSetDepthBias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetDepthBias(CommandBuffer, DepthBiasConstantFactor, DepthBiasClamp, DepthBiasSlopeFactor)"
  },
  {
    "label": "CmdSetDepthBias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetDepthBias(VK_SUCCESS, CommandBuffer, DepthBiasConstantFactor, DepthBiasClamp, DepthBiasSlopeFactor)"
  },
  {
    "label": "vkCmdSetBlendConstants()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetBlendConstants(VkCommandBuffer CommandBuffer, const float BlendConstants[4])"
  },
  {
    "label": "CmdSetBlendConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetBlendConstants(VK_RESULT_MAX_ENUM, CommandBuffer, BlendConstants)"
  },
  {
    "label": "vkCmdSetBlendConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetBlendConstants(CommandBuffer, BlendConstants)"
  },
  {
    "label": "CmdSetBlendConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetBlendConstants(VK_SUCCESS, CommandBuffer, BlendConstants)"
  },
  {
    "label": "vkCmdSetDepthBounds()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetDepthBounds(VkCommandBuffer CommandBuffer, float MinDepthBounds, float MaxDepthBounds)"
  },
  {
    "label": "CmdSetDepthBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetDepthBounds(VK_RESULT_MAX_ENUM, CommandBuffer, MinDepthBounds, MaxDepthBounds)"
  },
  {
    "label": "vkCmdSetDepthBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetDepthBounds(CommandBuffer, MinDepthBounds, MaxDepthBounds)"
  },
  {
    "label": "CmdSetDepthBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetDepthBounds(VK_SUCCESS, CommandBuffer, MinDepthBounds, MaxDepthBounds)"
  },
  {
    "label": "vkCmdSetStencilCompareMask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetStencilCompareMask(VkCommandBuffer CommandBuffer, VkStencilFaceFlags FaceMask, uint32 CompareMask)"
  },
  {
    "label": "CmdSetStencilCompareMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetStencilCompareMask(VK_RESULT_MAX_ENUM, CommandBuffer, FaceMask, CompareMask)"
  },
  {
    "label": "vkCmdSetStencilCompareMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetStencilCompareMask(CommandBuffer, FaceMask, CompareMask)"
  },
  {
    "label": "CmdSetStencilCompareMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetStencilCompareMask(VK_SUCCESS, CommandBuffer, FaceMask, CompareMask)"
  },
  {
    "label": "vkCmdSetStencilWriteMask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetStencilWriteMask(VkCommandBuffer CommandBuffer, VkStencilFaceFlags FaceMask, uint32 WriteMask)"
  },
  {
    "label": "CmdSetStencilWriteMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetStencilWriteMask(VK_RESULT_MAX_ENUM, CommandBuffer, FaceMask, WriteMask)"
  },
  {
    "label": "vkCmdSetStencilWriteMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetStencilWriteMask(CommandBuffer, FaceMask, WriteMask)"
  },
  {
    "label": "CmdSetStencilWriteMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetStencilWriteMask(VK_SUCCESS, CommandBuffer, FaceMask, WriteMask)"
  },
  {
    "label": "vkCmdSetStencilReference()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetStencilReference(VkCommandBuffer CommandBuffer, VkStencilFaceFlags FaceMask, uint32 Reference)"
  },
  {
    "label": "CmdSetStencilReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetStencilReference(VK_RESULT_MAX_ENUM, CommandBuffer, FaceMask, Reference)"
  },
  {
    "label": "vkCmdSetStencilReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetStencilReference(CommandBuffer, FaceMask, Reference)"
  },
  {
    "label": "CmdSetStencilReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetStencilReference(VK_SUCCESS, CommandBuffer, FaceMask, Reference)"
  },
  {
    "label": "vkCmdBindDescriptorSets()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdBindDescriptorSets(VkCommandBuffer CommandBuffer, VkPipelineBindPoint PipelineBindPoint, VkPipelineLayout Layout, uint32 FirstSet, uint32 DescriptorSetCount, const VkDescriptorSet* DescriptorSets, uint32 DynamicOffsetCount, const uint32* DynamicOffsets)"
  },
  {
    "label": "CmdBindDescriptorSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBindDescriptorSets(VK_RESULT_MAX_ENUM, CommandBuffer, PipelineBindPoint, Layout, FirstSet, DescriptorSetCount, DescriptorSets, DynamicOffsetCount, DynamicOffsets)"
  },
  {
    "label": "vkCmdBindDescriptorSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdBindDescriptorSets(CommandBuffer, PipelineBindPoint, Layout, FirstSet, DescriptorSetCount, DescriptorSets, DynamicOffsetCount, DynamicOffsets)"
  },
  {
    "label": "CmdBindDescriptorSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBindDescriptorSets(VK_SUCCESS, CommandBuffer, PipelineBindPoint, Layout, FirstSet, DescriptorSetCount, DescriptorSets, DynamicOffsetCount, DynamicOffsets)"
  },
  {
    "label": "vkCmdBindIndexBuffer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdBindIndexBuffer(VkCommandBuffer CommandBuffer, VkBuffer Buffer, VkDeviceSize Offset, VkIndexType IndexType)"
  },
  {
    "label": "CmdBindIndexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBindIndexBuffer(VK_RESULT_MAX_ENUM, CommandBuffer, Buffer, Offset, IndexType)"
  },
  {
    "label": "vkCmdBindIndexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdBindIndexBuffer(CommandBuffer, Buffer, Offset, IndexType)"
  },
  {
    "label": "CmdBindIndexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBindIndexBuffer(VK_SUCCESS, CommandBuffer, Buffer, Offset, IndexType)"
  },
  {
    "label": "vkCmdBindVertexBuffers()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdBindVertexBuffers(VkCommandBuffer CommandBuffer, uint32 FirstBinding, uint32 BindingCount, const VkBuffer* Buffers, const VkDeviceSize* Offsets)"
  },
  {
    "label": "CmdBindVertexBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBindVertexBuffers(VK_RESULT_MAX_ENUM, CommandBuffer, FirstBinding, BindingCount, Buffers, Offsets)"
  },
  {
    "label": "vkCmdBindVertexBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdBindVertexBuffers(CommandBuffer, FirstBinding, BindingCount, Buffers, Offsets)"
  },
  {
    "label": "CmdBindVertexBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBindVertexBuffers(VK_SUCCESS, CommandBuffer, FirstBinding, BindingCount, Buffers, Offsets)"
  },
  {
    "label": "vkCmdDraw()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdDraw(VkCommandBuffer CommandBuffer, uint32 VertexCount, uint32 InstanceCount, uint32 FirstVertex, uint32 FirstInstance)"
  },
  {
    "label": "CmdDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDraw(VK_RESULT_MAX_ENUM, CommandBuffer, VertexCount, InstanceCount, FirstVertex, FirstInstance)"
  },
  {
    "label": "vkCmdDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdDraw(CommandBuffer, VertexCount, InstanceCount, FirstVertex, FirstInstance)"
  },
  {
    "label": "CmdDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDraw(VK_SUCCESS, CommandBuffer, VertexCount, InstanceCount, FirstVertex, FirstInstance)"
  },
  {
    "label": "vkCmdDrawIndexed()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdDrawIndexed(VkCommandBuffer CommandBuffer, uint32 IndexCount, uint32 InstanceCount, uint32 FirstIndex, int32_t VertexOffset, uint32 FirstInstance)"
  },
  {
    "label": "CmdDrawIndexed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDrawIndexed(VK_RESULT_MAX_ENUM, CommandBuffer, IndexCount, InstanceCount, FirstIndex, VertexOffset, FirstInstance)"
  },
  {
    "label": "vkCmdDrawIndexed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdDrawIndexed(CommandBuffer, IndexCount, InstanceCount, FirstIndex, VertexOffset, FirstInstance)"
  },
  {
    "label": "CmdDrawIndexed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDrawIndexed(VK_SUCCESS, CommandBuffer, IndexCount, InstanceCount, FirstIndex, VertexOffset, FirstInstance)"
  },
  {
    "label": "vkCmdDrawIndirect()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdDrawIndirect(VkCommandBuffer CommandBuffer, VkBuffer Buffer, VkDeviceSize Offset, uint32 DrawCount, uint32 Stride)"
  },
  {
    "label": "CmdDrawIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDrawIndirect(VK_RESULT_MAX_ENUM, CommandBuffer, Buffer, Offset, DrawCount, Stride)"
  },
  {
    "label": "vkCmdDrawIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdDrawIndirect(CommandBuffer, Buffer, Offset, DrawCount, Stride)"
  },
  {
    "label": "CmdDrawIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDrawIndirect(VK_SUCCESS, CommandBuffer, Buffer, Offset, DrawCount, Stride)"
  },
  {
    "label": "vkCmdDrawIndexedIndirect()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdDrawIndexedIndirect(VkCommandBuffer CommandBuffer, VkBuffer Buffer, VkDeviceSize Offset, uint32 DrawCount, uint32 Stride)"
  },
  {
    "label": "CmdDrawIndexedIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDrawIndexedIndirect(VK_RESULT_MAX_ENUM, CommandBuffer, Buffer, Offset, DrawCount, Stride)"
  },
  {
    "label": "vkCmdDrawIndexedIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdDrawIndexedIndirect(CommandBuffer, Buffer, Offset, DrawCount, Stride)"
  },
  {
    "label": "CmdDrawIndexedIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDrawIndexedIndirect(VK_SUCCESS, CommandBuffer, Buffer, Offset, DrawCount, Stride)"
  },
  {
    "label": "vkCmdDispatch()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdDispatch(VkCommandBuffer CommandBuffer, uint32 X, uint32 Y, uint32 Z)"
  },
  {
    "label": "CmdDispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDispatch(VK_RESULT_MAX_ENUM, CommandBuffer, X, Y, Z)"
  },
  {
    "label": "vkCmdDispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdDispatch(CommandBuffer, X, Y, Z)"
  },
  {
    "label": "CmdDispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDispatch(VK_SUCCESS, CommandBuffer, X, Y, Z)"
  },
  {
    "label": "vkCmdDispatchIndirect()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdDispatchIndirect(VkCommandBuffer CommandBuffer, VkBuffer Buffer, VkDeviceSize Offset)"
  },
  {
    "label": "CmdDispatchIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDispatchIndirect(VK_RESULT_MAX_ENUM, CommandBuffer, Buffer, Offset)"
  },
  {
    "label": "vkCmdDispatchIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdDispatchIndirect(CommandBuffer, Buffer, Offset)"
  },
  {
    "label": "CmdDispatchIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdDispatchIndirect(VK_SUCCESS, CommandBuffer, Buffer, Offset)"
  },
  {
    "label": "vkCmdCopyBuffer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdCopyBuffer(VkCommandBuffer CommandBuffer, VkBuffer SrcBuffer, VkBuffer DstBuffer, uint32 RegionCount, const VkBufferCopy* Regions)"
  },
  {
    "label": "CmdCopyBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyBuffer(VK_RESULT_MAX_ENUM, CommandBuffer, SrcBuffer, DstBuffer, RegionCount, Regions)"
  },
  {
    "label": "vkCmdCopyBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdCopyBuffer(CommandBuffer, SrcBuffer, DstBuffer, RegionCount, Regions)"
  },
  {
    "label": "CmdCopyBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyBuffer(VK_SUCCESS, CommandBuffer, SrcBuffer, DstBuffer, RegionCount, Regions)"
  },
  {
    "label": "vkCmdCopyImage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdCopyImage(VkCommandBuffer CommandBuffer, VkImage SrcImage, VkImageLayout SrcImageLayout, VkImage DstImage, VkImageLayout DstImageLayout, uint32 RegionCount, const VkImageCopy* Regions)"
  },
  {
    "label": "CmdCopyImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyImage(VK_RESULT_MAX_ENUM, CommandBuffer, SrcImage, SrcImageLayout, DstImage, DstImageLayout, RegionCount, Regions)"
  },
  {
    "label": "vkCmdCopyImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdCopyImage(CommandBuffer, SrcImage, SrcImageLayout, DstImage, DstImageLayout, RegionCount, Regions)"
  },
  {
    "label": "CmdCopyImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyImage(VK_SUCCESS, CommandBuffer, SrcImage, SrcImageLayout, DstImage, DstImageLayout, RegionCount, Regions)"
  },
  {
    "label": "vkCmdBlitImage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdBlitImage(VkCommandBuffer CommandBuffer, VkImage SrcImage, VkImageLayout SrcImageLayout, VkImage DstImage, VkImageLayout DstImageLayout, uint32 RegionCount, const VkImageBlit* Regions, VkFilter Filter)"
  },
  {
    "label": "CmdBlitImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBlitImage(VK_RESULT_MAX_ENUM, CommandBuffer, SrcImage, SrcImageLayout, DstImage, DstImageLayout, RegionCount, Regions, Filter)"
  },
  {
    "label": "vkCmdBlitImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdBlitImage(CommandBuffer, SrcImage, SrcImageLayout, DstImage, DstImageLayout, RegionCount, Regions, Filter)"
  },
  {
    "label": "CmdBlitImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBlitImage(VK_SUCCESS, CommandBuffer, SrcImage, SrcImageLayout, DstImage, DstImageLayout, RegionCount, Regions, Filter)"
  },
  {
    "label": "vkCmdCopyBufferToImage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdCopyBufferToImage(VkCommandBuffer CommandBuffer, VkBuffer SrcBuffer, VkImage DstImage, VkImageLayout DstImageLayout, uint32 RegionCount, const VkBufferImageCopy* Regions)"
  },
  {
    "label": "CmdCopyBufferToImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyBufferToImage(VK_RESULT_MAX_ENUM, CommandBuffer, SrcBuffer, DstImage, DstImageLayout, RegionCount, Regions)"
  },
  {
    "label": "vkCmdCopyBufferToImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdCopyBufferToImage(CommandBuffer, SrcBuffer, DstImage, DstImageLayout, RegionCount, Regions)"
  },
  {
    "label": "CmdCopyBufferToImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyBufferToImage(VK_SUCCESS, CommandBuffer, SrcBuffer, DstImage, DstImageLayout, RegionCount, Regions)"
  },
  {
    "label": "vkCmdCopyImageToBuffer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdCopyImageToBuffer(VkCommandBuffer CommandBuffer, VkImage SrcImage, VkImageLayout SrcImageLayout, VkBuffer DstBuffer, uint32 RegionCount, const VkBufferImageCopy* Regions)"
  },
  {
    "label": "CmdCopyImageToBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyImageToBuffer(VK_RESULT_MAX_ENUM, CommandBuffer, SrcImage, SrcImageLayout, DstBuffer, RegionCount, Regions)"
  },
  {
    "label": "vkCmdCopyImageToBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdCopyImageToBuffer(CommandBuffer, SrcImage, SrcImageLayout, DstBuffer, RegionCount, Regions)"
  },
  {
    "label": "CmdCopyImageToBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyImageToBuffer(VK_SUCCESS, CommandBuffer, SrcImage, SrcImageLayout, DstBuffer, RegionCount, Regions)"
  },
  {
    "label": "vkCmdUpdateBuffer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdUpdateBuffer(VkCommandBuffer CommandBuffer, VkBuffer DstBuffer, VkDeviceSize DstOffset, VkDeviceSize DataSize, const void* pData)"
  },
  {
    "label": "CmdUpdateBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdUpdateBuffer(VK_RESULT_MAX_ENUM, CommandBuffer, DstBuffer, DstOffset, DataSize, pData)"
  },
  {
    "label": "vkCmdUpdateBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdUpdateBuffer(CommandBuffer, DstBuffer, DstOffset, DataSize, pData)"
  },
  {
    "label": "CmdUpdateBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdUpdateBuffer(VK_SUCCESS, CommandBuffer, DstBuffer, DstOffset, DataSize, pData)"
  },
  {
    "label": "vkCmdFillBuffer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdFillBuffer(VkCommandBuffer CommandBuffer, VkBuffer DstBuffer, VkDeviceSize DstOffset, VkDeviceSize Size, uint32 Data)"
  },
  {
    "label": "CmdFillBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdFillBuffer(VK_RESULT_MAX_ENUM, CommandBuffer, DstBuffer, DstOffset, Size, Data)"
  },
  {
    "label": "vkCmdFillBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdFillBuffer(CommandBuffer, DstBuffer, DstOffset, Size, Data)"
  },
  {
    "label": "CmdFillBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdFillBuffer(VK_SUCCESS, CommandBuffer, DstBuffer, DstOffset, Size, Data)"
  },
  {
    "label": "vkCmdClearColorImage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdClearColorImage(VkCommandBuffer CommandBuffer, VkImage Image, VkImageLayout ImageLayout, const VkClearColorValue* Color, uint32 RangeCount, const VkImageSubresourceRange* Ranges)"
  },
  {
    "label": "CmdClearColorImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdClearColorImage(VK_RESULT_MAX_ENUM, CommandBuffer, Image, ImageLayout, Color, RangeCount, Ranges)"
  },
  {
    "label": "vkCmdClearColorImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdClearColorImage(CommandBuffer, Image, ImageLayout, Color, RangeCount, Ranges)"
  },
  {
    "label": "CmdClearColorImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdClearColorImage(VK_SUCCESS, CommandBuffer, Image, ImageLayout, Color, RangeCount, Ranges)"
  },
  {
    "label": "vkCmdClearDepthStencilImage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdClearDepthStencilImage(VkCommandBuffer CommandBuffer, VkImage Image, VkImageLayout ImageLayout, const VkClearDepthStencilValue* DepthStencil, uint32 RangeCount, const VkImageSubresourceRange* Ranges)"
  },
  {
    "label": "CmdClearDepthStencilImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdClearDepthStencilImage(VK_RESULT_MAX_ENUM, CommandBuffer, Image, ImageLayout, DepthStencil, RangeCount, Ranges)"
  },
  {
    "label": "vkCmdClearDepthStencilImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdClearDepthStencilImage(CommandBuffer, Image, ImageLayout, DepthStencil, RangeCount, Ranges)"
  },
  {
    "label": "CmdClearDepthStencilImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdClearDepthStencilImage(VK_SUCCESS, CommandBuffer, Image, ImageLayout, DepthStencil, RangeCount, Ranges)"
  },
  {
    "label": "vkCmdClearAttachments()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdClearAttachments(VkCommandBuffer CommandBuffer, uint32 AttachmentCount, const VkClearAttachment* Attachments, uint32 RectCount, const VkClearRect* Rects)"
  },
  {
    "label": "CmdClearAttachments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdClearAttachments(VK_RESULT_MAX_ENUM, CommandBuffer, AttachmentCount, Attachments, RectCount, Rects)"
  },
  {
    "label": "vkCmdClearAttachments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdClearAttachments(CommandBuffer, AttachmentCount, Attachments, RectCount, Rects)"
  },
  {
    "label": "CmdClearAttachments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdClearAttachments(VK_SUCCESS, CommandBuffer, AttachmentCount, Attachments, RectCount, Rects)"
  },
  {
    "label": "vkCmdResolveImage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdResolveImage(VkCommandBuffer CommandBuffer, VkImage SrcImage, VkImageLayout SrcImageLayout, VkImage DstImage, VkImageLayout DstImageLayout, uint32 RegionCount, const VkImageResolve* Regions)"
  },
  {
    "label": "CmdResolveImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdResolveImage(VK_RESULT_MAX_ENUM, CommandBuffer, SrcImage, SrcImageLayout, DstImage, DstImageLayout, RegionCount, Regions)"
  },
  {
    "label": "vkCmdResolveImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdResolveImage(CommandBuffer, SrcImage, SrcImageLayout, DstImage, DstImageLayout, RegionCount, Regions)"
  },
  {
    "label": "CmdResolveImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdResolveImage(VK_SUCCESS, CommandBuffer, SrcImage, SrcImageLayout, DstImage, DstImageLayout, RegionCount, Regions)"
  },
  {
    "label": "vkCmdSetEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetEvent(VkCommandBuffer CommandBuffer, VkEvent Event, VkPipelineStageFlags StageMask)"
  },
  {
    "label": "CmdSetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetEvent(VK_RESULT_MAX_ENUM, CommandBuffer, Event, StageMask)"
  },
  {
    "label": "vkCmdSetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetEvent(CommandBuffer, Event, StageMask)"
  },
  {
    "label": "CmdSetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetEvent(VK_SUCCESS, CommandBuffer, Event, StageMask)"
  },
  {
    "label": "vkCmdResetEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdResetEvent(VkCommandBuffer CommandBuffer, VkEvent Event, VkPipelineStageFlags StageMask)"
  },
  {
    "label": "CmdResetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdResetEvent(VK_RESULT_MAX_ENUM, CommandBuffer, Event, StageMask)"
  },
  {
    "label": "vkCmdResetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdResetEvent(CommandBuffer, Event, StageMask)"
  },
  {
    "label": "CmdResetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdResetEvent(VK_SUCCESS, CommandBuffer, Event, StageMask)"
  },
  {
    "label": "vkCmdWaitEvents()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdWaitEvents(VkCommandBuffer CommandBuffer, uint32 EventCount, const VkEvent* Events, VkPipelineStageFlags SrcStageMask, VkPipelineStageFlags DstStageMask, uint32 MemoryBarrierCount, const VkMemoryBarrier* pMemoryBarriers, uint32 BufferMemoryBarrierCount, const VkBufferMemoryBarrier* pBufferMemoryBarriers, uint32 ImageMemoryBarrierCount, const VkImageMemoryBarrier* pImageMemoryBarriers)"
  },
  {
    "label": "CmdWaitEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdWaitEvents(VK_RESULT_MAX_ENUM, CommandBuffer, EventCount, Events, SrcStageMask, DstStageMask, MemoryBarrierCount, pMemoryBarriers, BufferMemoryBarrierCount, pBufferMemoryBarriers, ImageMemoryBarrierCount, pImageMemoryBarriers)"
  },
  {
    "label": "vkCmdWaitEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdWaitEvents(CommandBuffer, EventCount, Events, SrcStageMask, DstStageMask, MemoryBarrierCount, pMemoryBarriers, BufferMemoryBarrierCount, pBufferMemoryBarriers, ImageMemoryBarrierCount, pImageMemoryBarriers)"
  },
  {
    "label": "CmdWaitEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdWaitEvents(VK_SUCCESS, CommandBuffer, EventCount, Events, SrcStageMask, DstStageMask, MemoryBarrierCount, pMemoryBarriers, BufferMemoryBarrierCount, pBufferMemoryBarriers, ImageMemoryBarrierCount, pImageMemoryBarriers)"
  },
  {
    "label": "vkCmdPipelineBarrier()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdPipelineBarrier(VkCommandBuffer CommandBuffer, VkPipelineStageFlags SrcStageMask, VkPipelineStageFlags DstStageMask, VkDependencyFlags DependencyFlags, uint32 MemoryBarrierCount, const VkMemoryBarrier* MemoryBarriers, uint32 BufferMemoryBarrierCount, const VkBufferMemoryBarrier* BufferMemoryBarriers, uint32 ImageMemoryBarrierCount, const VkImageMemoryBarrier* ImageMemoryBarriers)"
  },
  {
    "label": "CmdPipelineBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdPipelineBarrier(VK_RESULT_MAX_ENUM, CommandBuffer, SrcStageMask, DstStageMask, DependencyFlags, MemoryBarrierCount, MemoryBarriers, BufferMemoryBarrierCount, BufferMemoryBarriers, ImageMemoryBarrierCount, ImageMemoryBarriers)"
  },
  {
    "label": "vkCmdPipelineBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdPipelineBarrier(CommandBuffer, SrcStageMask, DstStageMask, DependencyFlags, MemoryBarrierCount, MemoryBarriers, BufferMemoryBarrierCount, BufferMemoryBarriers, ImageMemoryBarrierCount, ImageMemoryBarriers)"
  },
  {
    "label": "CmdPipelineBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdPipelineBarrier(VK_SUCCESS, CommandBuffer, SrcStageMask, DstStageMask, DependencyFlags, MemoryBarrierCount, MemoryBarriers, BufferMemoryBarrierCount, BufferMemoryBarriers, ImageMemoryBarrierCount, ImageMemoryBarriers)"
  },
  {
    "label": "vkCmdBeginQuery()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdBeginQuery(VkCommandBuffer CommandBuffer, VkQueryPool QueryPool, uint32 Query, VkQueryControlFlags Flags)"
  },
  {
    "label": "CmdBeginQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBeginQuery(VK_RESULT_MAX_ENUM, CommandBuffer, QueryPool, Query, Flags)"
  },
  {
    "label": "vkCmdBeginQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdBeginQuery(CommandBuffer, QueryPool, Query, Flags)"
  },
  {
    "label": "CmdBeginQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBeginQuery(VK_SUCCESS, CommandBuffer, QueryPool, Query, Flags)"
  },
  {
    "label": "vkCmdEndQuery()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdEndQuery(VkCommandBuffer CommandBuffer, VkQueryPool QueryPool, uint32 Query)"
  },
  {
    "label": "CmdEndQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdEndQuery(VK_RESULT_MAX_ENUM, CommandBuffer, QueryPool, Query)"
  },
  {
    "label": "vkCmdEndQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdEndQuery(CommandBuffer, QueryPool, Query)"
  },
  {
    "label": "CmdEndQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdEndQuery(VK_SUCCESS, CommandBuffer, QueryPool, Query)"
  },
  {
    "label": "vkCmdResetQueryPool()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdResetQueryPool(VkCommandBuffer CommandBuffer, VkQueryPool QueryPool, uint32 FirstQuery, uint32 QueryCount)"
  },
  {
    "label": "CmdResetQueryPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdResetQueryPool(VK_RESULT_MAX_ENUM, CommandBuffer, QueryPool, FirstQuery, QueryCount)"
  },
  {
    "label": "vkCmdResetQueryPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdResetQueryPool(CommandBuffer, QueryPool, FirstQuery, QueryCount)"
  },
  {
    "label": "CmdResetQueryPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdResetQueryPool(VK_SUCCESS, CommandBuffer, QueryPool, FirstQuery, QueryCount)"
  },
  {
    "label": "vkCmdWriteTimestamp()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdWriteTimestamp(VkCommandBuffer CommandBuffer, VkPipelineStageFlagBits PipelineStage, VkQueryPool QueryPool, uint32 Query)"
  },
  {
    "label": "CmdWriteTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdWriteTimestamp(VK_RESULT_MAX_ENUM, CommandBuffer, PipelineStage, QueryPool, Query)"
  },
  {
    "label": "vkCmdWriteTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdWriteTimestamp(CommandBuffer, PipelineStage, QueryPool, Query)"
  },
  {
    "label": "CmdWriteTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdWriteTimestamp(VK_SUCCESS, CommandBuffer, PipelineStage, QueryPool, Query)"
  },
  {
    "label": "vkCmdCopyQueryPoolResults()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdCopyQueryPoolResults(VkCommandBuffer CommandBuffer, VkQueryPool QueryPool, uint32 FirstQuery, uint32 QueryCount, VkBuffer DstBuffer, VkDeviceSize DstOffset, VkDeviceSize Stride, VkQueryResultFlags Flags)"
  },
  {
    "label": "CmdCopyQueryPoolResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyQueryPoolResults(VK_RESULT_MAX_ENUM, CommandBuffer, QueryPool, FirstQuery, QueryCount, DstBuffer, DstOffset, Stride, Flags)"
  },
  {
    "label": "vkCmdCopyQueryPoolResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdCopyQueryPoolResults(CommandBuffer, QueryPool, FirstQuery, QueryCount, DstBuffer, DstOffset, Stride, Flags)"
  },
  {
    "label": "CmdCopyQueryPoolResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyQueryPoolResults(VK_SUCCESS, CommandBuffer, QueryPool, FirstQuery, QueryCount, DstBuffer, DstOffset, Stride, Flags)"
  },
  {
    "label": "vkCmdPushConstants()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdPushConstants(VkCommandBuffer CommandBuffer, VkPipelineLayout Layout, VkShaderStageFlags StageFlags, uint32 Offset, uint32 Size, const void* pValues)"
  },
  {
    "label": "CmdPushConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdPushConstants(VK_RESULT_MAX_ENUM, CommandBuffer, Layout, StageFlags, Offset, Size, pValues)"
  },
  {
    "label": "vkCmdPushConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdPushConstants(CommandBuffer, Layout, StageFlags, Offset, Size, pValues)"
  },
  {
    "label": "CmdPushConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdPushConstants(VK_SUCCESS, CommandBuffer, Layout, StageFlags, Offset, Size, pValues)"
  },
  {
    "label": "vkCmdBeginRenderPass()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdBeginRenderPass(VkCommandBuffer CommandBuffer, const VkRenderPassBeginInfo* RenderPassBegin, VkSubpassContents Contents)"
  },
  {
    "label": "CmdBeginRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBeginRenderPass(VK_RESULT_MAX_ENUM, CommandBuffer, RenderPassBegin, Contents)"
  },
  {
    "label": "vkCmdBeginRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdBeginRenderPass(CommandBuffer, RenderPassBegin, Contents)"
  },
  {
    "label": "CmdBeginRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBeginRenderPass(VK_SUCCESS, CommandBuffer, RenderPassBegin, Contents)"
  },
  {
    "label": "vkCmdBeginRenderPass2KHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdBeginRenderPass2KHR(VkCommandBuffer CommandBuffer, const VkRenderPassBeginInfo* RenderPassBegin, const VkSubpassBeginInfo* SubpassBeginInfo)"
  },
  {
    "label": "CmdBeginRenderPass2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBeginRenderPass2KHR(VK_RESULT_MAX_ENUM, CommandBuffer, RenderPassBegin, SubpassBeginInfo)"
  },
  {
    "label": "vkCmdBeginRenderPass2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdBeginRenderPass2KHR(CommandBuffer, RenderPassBegin, SubpassBeginInfo)"
  },
  {
    "label": "CmdBeginRenderPass2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBeginRenderPass2KHR(VK_SUCCESS, CommandBuffer, RenderPassBegin, SubpassBeginInfo)"
  },
  {
    "label": "vkCmdNextSubpass()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdNextSubpass(VkCommandBuffer CommandBuffer, VkSubpassContents Contents)"
  },
  {
    "label": "CmdNextSubpass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdNextSubpass(VK_RESULT_MAX_ENUM, CommandBuffer, Contents)"
  },
  {
    "label": "vkCmdNextSubpass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdNextSubpass(CommandBuffer, Contents)"
  },
  {
    "label": "CmdNextSubpass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdNextSubpass(VK_SUCCESS, CommandBuffer, Contents)"
  },
  {
    "label": "vkCmdEndRenderPass()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdEndRenderPass(VkCommandBuffer CommandBuffer)"
  },
  {
    "label": "CmdEndRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdEndRenderPass(VK_RESULT_MAX_ENUM, CommandBuffer)"
  },
  {
    "label": "vkCmdEndRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdEndRenderPass(CommandBuffer)"
  },
  {
    "label": "CmdEndRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdEndRenderPass(VK_SUCCESS, CommandBuffer)"
  },
  {
    "label": "vkCmdExecuteCommands()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdExecuteCommands(VkCommandBuffer CommandBuffer, uint32 CommandBufferCount, const VkCommandBuffer* pCommandBuffers)"
  },
  {
    "label": "CmdExecuteCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdExecuteCommands(VK_RESULT_MAX_ENUM, CommandBuffer, CommandBufferCount, pCommandBuffers)"
  },
  {
    "label": "vkCmdExecuteCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdExecuteCommands(CommandBuffer, CommandBufferCount, pCommandBuffers)"
  },
  {
    "label": "CmdExecuteCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdExecuteCommands(VK_SUCCESS, CommandBuffer, CommandBufferCount, pCommandBuffers)"
  },
  {
    "label": "vkCreateSwapchainKHR()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateSwapchainKHR(VkDevice Device, const VkSwapchainCreateInfoKHR* CreateInfo, const VkAllocationCallbacks* Allocator, VkSwapchainKHR* Swapchain)"
  },
  {
    "label": "CreateSwapchainKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSwapchainKHR(VK_RESULT_MAX_ENUM, Device, CreateInfo, Swapchain)"
  },
  {
    "label": "vkCreateSwapchainKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateSwapchainKHR(Device, CreateInfo, Allocator, Swapchain)"
  },
  {
    "label": "CreateSwapchainKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSwapchainKHR(Result, Device, CreateInfo, Swapchain)"
  },
  {
    "label": "DestroySwapchainKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySwapchainKHR(VK_RESULT_MAX_ENUM, Device, Swapchain)"
  },
  {
    "label": "vkDestroySwapchainKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroySwapchainKHR(Device, Swapchain, Allocator)"
  },
  {
    "label": "DestroySwapchainKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySwapchainKHR(VK_SUCCESS, Device, Swapchain)"
  },
  {
    "label": "vkGetSwapchainImagesKHR()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkGetSwapchainImagesKHR(VkDevice Device, VkSwapchainKHR Swapchain, uint32_t* SwapchainImageCount, VkImage* SwapchainImages)"
  },
  {
    "label": "GetSwapChainImagesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSwapChainImagesKHR(VK_RESULT_MAX_ENUM, Device, Swapchain, SwapchainImageCount, SwapchainImages)"
  },
  {
    "label": "vkGetSwapchainImagesKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetSwapchainImagesKHR(Device, Swapchain, SwapchainImageCount, SwapchainImages)"
  },
  {
    "label": "GetSwapChainImagesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSwapChainImagesKHR(Result, Device, Swapchain, SwapchainImageCount, SwapchainImages)"
  },
  {
    "label": "AcquireNextImageKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquireNextImageKHR(VK_RESULT_MAX_ENUM, Device, Swapchain, Timeout, Semaphore, Fence, ImageIndex)"
  },
  {
    "label": "vkAcquireNextImageKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkAcquireNextImageKHR(Device, Swapchain, Timeout, Semaphore, Fence, ImageIndex)"
  },
  {
    "label": "AcquireNextImageKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquireNextImageKHR(Result, Device, Swapchain, Timeout, Semaphore, Fence, ImageIndex)"
  },
  {
    "label": "QueuePresent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueuePresent(VK_RESULT_MAX_ENUM, Queue, PresentInfo)"
  },
  {
    "label": "vkQueuePresentKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkQueuePresentKHR(Queue, PresentInfo)"
  },
  {
    "label": "QueuePresent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueuePresent(Result, Queue, PresentInfo)"
  },
  {
    "label": "GetPhysicalDeviceSurfaceCapabilitiesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceSurfaceCapabilitiesKHR(VK_RESULT_MAX_ENUM, PhysicalDevice, Surface, SurfaceCapabilities)"
  },
  {
    "label": "vkGetPhysicalDeviceSurfaceCapabilitiesKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetPhysicalDeviceSurfaceCapabilitiesKHR(PhysicalDevice, Surface, SurfaceCapabilities)"
  },
  {
    "label": "GetPhysicalDeviceSurfaceCapabilitiesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceSurfaceCapabilitiesKHR(VK_SUCCESS, PhysicalDevice, Surface, SurfaceCapabilities)"
  },
  {
    "label": "GetPhysicalDeviceSurfaceFormatsKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceSurfaceFormatsKHR(VK_RESULT_MAX_ENUM, PhysicalDevice, Surface, SurfaceFormatCountPtr, SurfaceFormats)"
  },
  {
    "label": "vkGetPhysicalDeviceSurfaceFormatsKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetPhysicalDeviceSurfaceFormatsKHR(PhysicalDevice, Surface, SurfaceFormatCountPtr, SurfaceFormats)"
  },
  {
    "label": "GetPhysicalDeviceSurfaceFormatsKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceSurfaceFormatsKHR(VK_SUCCESS, PhysicalDevice, Surface, SurfaceFormatCountPtr, SurfaceFormats)"
  },
  {
    "label": "GetPhysicalDeviceSurfaceSupportKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceSurfaceSupportKHR(VK_RESULT_MAX_ENUM, PhysicalDevice, QueueFamilyIndex, Surface, SupportedPtr)"
  },
  {
    "label": "vkGetPhysicalDeviceSurfaceSupportKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetPhysicalDeviceSurfaceSupportKHR(PhysicalDevice, QueueFamilyIndex, Surface, SupportedPtr)"
  },
  {
    "label": "GetPhysicalDeviceSurfaceSupportKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceSurfaceSupportKHR(VK_SUCCESS, PhysicalDevice, QueueFamilyIndex, Surface, SupportedPtr)"
  },
  {
    "label": "GetPhysicalDeviceSurfacePresentModesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceSurfacePresentModesKHR(VK_RESULT_MAX_ENUM, PhysicalDevice, Surface, PresentModeCountPtr, PresentModesPtr)"
  },
  {
    "label": "vkGetPhysicalDeviceSurfacePresentModesKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetPhysicalDeviceSurfacePresentModesKHR(PhysicalDevice, Surface, PresentModeCountPtr, PresentModesPtr)"
  },
  {
    "label": "GetPhysicalDeviceSurfacePresentModesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceSurfacePresentModesKHR(VK_SUCCESS, PhysicalDevice, Surface, PresentModeCountPtr, PresentModesPtr)"
  },
  {
    "label": "CreateWin32SurfaceKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateWin32SurfaceKHR(VK_RESULT_MAX_ENUM, Instance, CreateInfo, Surface)"
  },
  {
    "label": "vkCreateWin32SurfaceKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateWin32SurfaceKHR(Instance, CreateInfo, Allocator, Surface)"
  },
  {
    "label": "CreateWin32SurfaceKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateWin32SurfaceKHR(Result, Instance, CreateInfo, Surface)"
  },
  {
    "label": "CreateAndroidSurfaceKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAndroidSurfaceKHR(VK_RESULT_MAX_ENUM, Instance, CreateInfo, Surface)"
  },
  {
    "label": "vkCreateAndroidSurfaceKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateAndroidSurfaceKHR(Instance, CreateInfo, Allocator, Surface)"
  },
  {
    "label": "CreateAndroidSurfaceKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAndroidSurfaceKHR(Result, Instance, CreateInfo, Surface)"
  },
  {
    "label": "DestroySurfaceKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySurfaceKHR(VK_RESULT_MAX_ENUM, Instance, Surface)"
  },
  {
    "label": "vkDestroySurfaceKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroySurfaceKHR(Instance, Surface, pAllocator)"
  },
  {
    "label": "DestroySurfaceKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySurfaceKHR(VK_SUCCESS, Instance, Surface)"
  },
  {
    "label": "vkGetImageMemoryRequirements2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetImageMemoryRequirements2(VkDevice Device, const VkImageMemoryRequirementsInfo2* Info, VkMemoryRequirements2* MemoryRequirements)"
  },
  {
    "label": "GetImageMemoryRequirements2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetImageMemoryRequirements2(VK_RESULT_MAX_ENUM, Device, Info, MemoryRequirements)"
  },
  {
    "label": "vkGetImageMemoryRequirements2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetImageMemoryRequirements2(Device, Info, MemoryRequirements)"
  },
  {
    "label": "GetImageMemoryRequirements2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetImageMemoryRequirements2(VK_SUCCESS, Device, Info, MemoryRequirements)"
  },
  {
    "label": "vkGetBufferMemoryRequirements2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetBufferMemoryRequirements2(VkDevice Device, const VkBufferMemoryRequirementsInfo2* Info, VkMemoryRequirements2* MemoryRequirements)"
  },
  {
    "label": "GetBufferMemoryRequirements2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBufferMemoryRequirements2(VK_RESULT_MAX_ENUM, Device, Info, MemoryRequirements)"
  },
  {
    "label": "vkGetBufferMemoryRequirements2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetBufferMemoryRequirements2(Device, Info, MemoryRequirements)"
  },
  {
    "label": "GetBufferMemoryRequirements2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBufferMemoryRequirements2(VK_SUCCESS, Device, Info, MemoryRequirements)"
  },
  {
    "label": "vkCreateAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateAccelerationStructureKHR(VkDevice Device, const VkAccelerationStructureCreateInfoKHR* CreateInfo, const VkAllocationCallbacks* Allocator, VkAccelerationStructureKHR* AccelerationStructure)"
  },
  {
    "label": "CreateAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAccelerationStructureKHR(VK_RESULT_MAX_ENUM, Device, CreateInfo, Allocator, AccelerationStructure)"
  },
  {
    "label": "vkCreateAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (const VkResult Result =)",
    "insertText": "vkCreateAccelerationStructureKHR(Device, CreateInfo, Allocator, AccelerationStructure)"
  },
  {
    "label": "CreateAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAccelerationStructureKHR(Result, Device, CreateInfo, Allocator, AccelerationStructure)"
  },
  {
    "label": "DestroyAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAccelerationStructureKHR(VK_RESULT_MAX_ENUM, Device, AccelerationStructure, Allocator)"
  },
  {
    "label": "vkDestroyAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyAccelerationStructureKHR(Device, AccelerationStructure, Allocator)"
  },
  {
    "label": "DestroyAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAccelerationStructureKHR(VK_SUCCESS, Device, AccelerationStructure, Allocator)"
  },
  {
    "label": "vkCmdBuildAccelerationStructuresKHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdBuildAccelerationStructuresKHR(VkCommandBuffer CommandBuffer, uint32 InfoCount, const VkAccelerationStructureBuildGeometryInfoKHR* Infos, const VkAccelerationStructureBuildRangeInfoKHR* const* BuildRangeInfos)"
  },
  {
    "label": "CmdBuildAccelerationStructuresKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBuildAccelerationStructuresKHR(VK_RESULT_MAX_ENUM, CommandBuffer, InfoCount, Infos, BuildRangeInfos)"
  },
  {
    "label": "vkCmdBuildAccelerationStructuresKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdBuildAccelerationStructuresKHR(CommandBuffer, InfoCount, Infos, BuildRangeInfos)"
  },
  {
    "label": "CmdBuildAccelerationStructuresKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBuildAccelerationStructuresKHR(VK_SUCCESS, CommandBuffer, InfoCount, Infos, BuildRangeInfos)"
  },
  {
    "label": "vkGetAccelerationStructureBuildSizesKHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetAccelerationStructureBuildSizesKHR(VkDevice Device, VkAccelerationStructureBuildTypeKHR BuildType, const VkAccelerationStructureBuildGeometryInfoKHR* BuildInfo, const uint32* MaxPrimitiveCounts, VkAccelerationStructureBuildSizesInfoKHR* SizeInfo)"
  },
  {
    "label": "GetAccelerationStructureBuildSizesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAccelerationStructureBuildSizesKHR(VK_RESULT_MAX_ENUM, Device, BuildType, BuildInfo, MaxPrimitiveCounts, SizeInfo)"
  },
  {
    "label": "vkGetAccelerationStructureBuildSizesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetAccelerationStructureBuildSizesKHR(Device, BuildType, BuildInfo, MaxPrimitiveCounts, SizeInfo)"
  },
  {
    "label": "GetAccelerationStructureBuildSizesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAccelerationStructureBuildSizesKHR(VK_SUCCESS, Device, BuildType, BuildInfo, MaxPrimitiveCounts, SizeInfo)"
  },
  {
    "label": "vkGetAccelerationStructureDeviceAddressKHR()",
    "kind": "Method",
    "detail": "Function (} VkDeviceAddress)",
    "insertText": "vkGetAccelerationStructureDeviceAddressKHR(VkDevice Device, const VkAccelerationStructureDeviceAddressInfoKHR* Info)"
  },
  {
    "label": "GetAccelerationStructureDeviceAddressKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAccelerationStructureDeviceAddressKHR(VK_RESULT_MAX_ENUM, Device, Info)"
  },
  {
    "label": "vkGetAccelerationStructureDeviceAddressKHR()",
    "kind": "Method",
    "detail": "Function (VkDeviceAddress Result =)",
    "insertText": "vkGetAccelerationStructureDeviceAddressKHR(Device, Info)"
  },
  {
    "label": "GetAccelerationStructureDeviceAddressKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAccelerationStructureDeviceAddressKHR(VK_SUCCESS, Device, Info)"
  },
  {
    "label": "CmdTraceRaysKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdTraceRaysKHR(VK_RESULT_MAX_ENUM, CommandBuffer, RaygenShaderBindingTable, MissShaderBindingTable, HitShaderBindingTable, CallableShaderBindingTable, width, height, depth)"
  },
  {
    "label": "vkCmdTraceRaysKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdTraceRaysKHR(CommandBuffer, RaygenShaderBindingTable, MissShaderBindingTable, HitShaderBindingTable, CallableShaderBindingTable, width, height, depth)"
  },
  {
    "label": "CmdTraceRaysKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdTraceRaysKHR(VK_SUCCESS, CommandBuffer, RaygenShaderBindingTable, MissShaderBindingTable, HitShaderBindingTable, CallableShaderBindingTable, width, height, depth)"
  },
  {
    "label": "vkCmdTraceRaysIndirectKHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdTraceRaysIndirectKHR(VkCommandBuffer CommandBuffer, const VkStridedDeviceAddressRegionKHR* RaygenShaderBindingTable, const VkStridedDeviceAddressRegionKHR* MissShaderBindingTable, const VkStridedDeviceAddressRegionKHR* HitShaderBindingTable, const VkStridedDeviceAddressRegionKHR* CallableShaderBindingTable, VkDeviceAddress IndirectDeviceAddress)"
  },
  {
    "label": "CmdTraceRaysIndirectKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdTraceRaysIndirectKHR(VK_RESULT_MAX_ENUM, CommandBuffer, RaygenShaderBindingTable, MissShaderBindingTable, HitShaderBindingTable, CallableShaderBindingTable, IndirectDeviceAddress)"
  },
  {
    "label": "vkCmdTraceRaysIndirectKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdTraceRaysIndirectKHR(CommandBuffer, RaygenShaderBindingTable, MissShaderBindingTable, HitShaderBindingTable, CallableShaderBindingTable, IndirectDeviceAddress)"
  },
  {
    "label": "CmdTraceRaysIndirectKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdTraceRaysIndirectKHR(VK_SUCCESS, CommandBuffer, RaygenShaderBindingTable, MissShaderBindingTable, HitShaderBindingTable, CallableShaderBindingTable, IndirectDeviceAddress)"
  },
  {
    "label": "vkCmdTraceRaysIndirect2KHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdTraceRaysIndirect2KHR(VkCommandBuffer CommandBuffer, VkDeviceAddress IndirectDeviceAddress)"
  },
  {
    "label": "CmdTraceRaysIndirect2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdTraceRaysIndirect2KHR(VK_RESULT_MAX_ENUM, CommandBuffer, IndirectDeviceAddress)"
  },
  {
    "label": "vkCmdTraceRaysIndirect2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdTraceRaysIndirect2KHR(CommandBuffer, IndirectDeviceAddress)"
  },
  {
    "label": "CmdTraceRaysIndirect2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdTraceRaysIndirect2KHR(VK_SUCCESS, CommandBuffer, IndirectDeviceAddress)"
  },
  {
    "label": "vkCreateRayTracingPipelinesKHR()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateRayTracingPipelinesKHR(VkDevice Device, VkDeferredOperationKHR DeferredOperation, VkPipelineCache PipelineCache, uint32_t CreateInfoCount, const VkRayTracingPipelineCreateInfoKHR* CreateInfos, const VkAllocationCallbacks* Allocator, VkPipeline* Pipelines)"
  },
  {
    "label": "CreateRayTracingPipelinesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRayTracingPipelinesKHR(VK_RESULT_MAX_ENUM, Device, DeferredOperation, PipelineCache, CreateInfoCount, CreateInfos, Allocator, Pipelines)"
  },
  {
    "label": "vkCreateRayTracingPipelinesKHR()",
    "kind": "Method",
    "detail": "Function (const VkResult Result =)",
    "insertText": "vkCreateRayTracingPipelinesKHR(Device, DeferredOperation, PipelineCache, CreateInfoCount, CreateInfos, Allocator, Pipelines)"
  },
  {
    "label": "CreateRayTracingPipelinesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRayTracingPipelinesKHR(Result, Device, DeferredOperation, PipelineCache, CreateInfoCount, CreateInfos, Allocator, Pipelines)"
  },
  {
    "label": "GetRayTracingShaderGroupHandlesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRayTracingShaderGroupHandlesKHR(VK_RESULT_MAX_ENUM, Device, Pipeline, FirstGroup, GroupCount, DataSize, Data)"
  },
  {
    "label": "vkGetRayTracingShaderGroupHandlesKHR()",
    "kind": "Method",
    "detail": "Function (const VkResult Result =)",
    "insertText": "vkGetRayTracingShaderGroupHandlesKHR(Device, Pipeline, FirstGroup, GroupCount, DataSize, Data)"
  },
  {
    "label": "GetRayTracingShaderGroupHandlesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRayTracingShaderGroupHandlesKHR(Result, Device, Pipeline, FirstGroup, GroupCount, DataSize, Data)"
  },
  {
    "label": "CmdWriteAccelerationStructuresPropertiesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdWriteAccelerationStructuresPropertiesKHR(VK_RESULT_MAX_ENUM, CommandBuffer, AccelerationStructureCount, AccelerationStructures, QueryType, QueryPool, FirstQuery)"
  },
  {
    "label": "vkCmdWriteAccelerationStructuresPropertiesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdWriteAccelerationStructuresPropertiesKHR(CommandBuffer, AccelerationStructureCount, AccelerationStructures, QueryType, QueryPool, FirstQuery)"
  },
  {
    "label": "CmdWriteAccelerationStructuresPropertiesKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdWriteAccelerationStructuresPropertiesKHR(VK_SUCCESS, CommandBuffer, AccelerationStructureCount, AccelerationStructures, QueryType, QueryPool, FirstQuery)"
  },
  {
    "label": "vkCmdCopyAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdCopyAccelerationStructureKHR(VkCommandBuffer CommandBuffer, const VkCopyAccelerationStructureInfoKHR* Info)"
  },
  {
    "label": "CmdCopyAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyAccelerationStructureKHR(VK_RESULT_MAX_ENUM, CommandBuffer, Info)"
  },
  {
    "label": "vkCmdCopyAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdCopyAccelerationStructureKHR(CommandBuffer, Info)"
  },
  {
    "label": "CmdCopyAccelerationStructureKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdCopyAccelerationStructureKHR(VK_SUCCESS, CommandBuffer, Info)"
  },
  {
    "label": "vkGetBufferDeviceAddressKHR()",
    "kind": "Method",
    "detail": "Function (} VkDeviceAddress)",
    "insertText": "vkGetBufferDeviceAddressKHR(VkDevice Device, const VkBufferDeviceAddressInfo* Info)"
  },
  {
    "label": "GetBufferDeviceAddressKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBufferDeviceAddressKHR(VK_RESULT_MAX_ENUM, Device, Info)"
  },
  {
    "label": "vkGetBufferDeviceAddressKHR()",
    "kind": "Method",
    "detail": "Function (const VkDeviceAddress Result =)",
    "insertText": "vkGetBufferDeviceAddressKHR(Device, Info)"
  },
  {
    "label": "GetBufferDeviceAddressKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBufferDeviceAddressKHR(VK_SUCCESS, Device, Info)"
  },
  {
    "label": "GetDeviceImageMemoryRequirementsKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceImageMemoryRequirementsKHR(VK_RESULT_MAX_ENUM, Device, Info, MemoryRequirements)"
  },
  {
    "label": "vkGetDeviceImageMemoryRequirementsKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetDeviceImageMemoryRequirementsKHR(Device, Info, MemoryRequirements)"
  },
  {
    "label": "GetDeviceImageMemoryRequirementsKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceImageMemoryRequirementsKHR(VK_SUCCESS, Device, Info, MemoryRequirements)"
  },
  {
    "label": "vkGetDeviceBufferMemoryRequirementsKHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetDeviceBufferMemoryRequirementsKHR(VkDevice Device, const VkDeviceBufferMemoryRequirements* Info, VkMemoryRequirements2* MemoryRequirements)"
  },
  {
    "label": "GetDeviceBufferMemoryRequirementsKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceBufferMemoryRequirementsKHR(VK_RESULT_MAX_ENUM, Device, Info, MemoryRequirements)"
  },
  {
    "label": "vkGetDeviceBufferMemoryRequirementsKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetDeviceBufferMemoryRequirementsKHR(Device, Info, MemoryRequirements)"
  },
  {
    "label": "GetDeviceBufferMemoryRequirementsKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceBufferMemoryRequirementsKHR(VK_SUCCESS, Device, Info, MemoryRequirements)"
  },
  {
    "label": "vkResetQueryPoolEXT()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkResetQueryPoolEXT(VkDevice Device, VkQueryPool QueryPool, uint32_t FirstQuery, uint32_t QueryCount)"
  },
  {
    "label": "ResetQueryPoolEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetQueryPoolEXT(VK_RESULT_MAX_ENUM, Device, QueryPool, FirstQuery, QueryCount)"
  },
  {
    "label": "vkResetQueryPoolEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkResetQueryPoolEXT(Device, QueryPool, FirstQuery, QueryCount)"
  },
  {
    "label": "ResetQueryPoolEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetQueryPoolEXT(VK_SUCCESS, Device, QueryPool, FirstQuery, QueryCount)"
  },
  {
    "label": "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT(VkPhysicalDevice PhysicalDevice, uint32_t* TimeDomainCount, VkTimeDomainEXT* TimeDomains)"
  },
  {
    "label": "GetPhysicalDeviceCalibrateableTimeDomainsEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceCalibrateableTimeDomainsEXT(VK_RESULT_MAX_ENUM, PhysicalDevice, TimeDomainCount, TimeDomains)"
  },
  {
    "label": "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT()",
    "kind": "Method",
    "detail": "Function (const VkResult Result =)",
    "insertText": "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT(PhysicalDevice, TimeDomainCount, TimeDomains)"
  },
  {
    "label": "GetPhysicalDeviceCalibrateableTimeDomainsEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPhysicalDeviceCalibrateableTimeDomainsEXT(Result, PhysicalDevice, TimeDomainCount, TimeDomains)"
  },
  {
    "label": "GetCalibratedTimestampsEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCalibratedTimestampsEXT(VK_RESULT_MAX_ENUM, Device, TimestampCount, TimestampInfos, Timestamps, MaxDeviation)"
  },
  {
    "label": "vkGetCalibratedTimestampsEXT()",
    "kind": "Method",
    "detail": "Function (const VkResult Result =)",
    "insertText": "vkGetCalibratedTimestampsEXT(Device, TimestampCount, TimestampInfos, Timestamps, MaxDeviation)"
  },
  {
    "label": "GetCalibratedTimestampsEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCalibratedTimestampsEXT(Result, Device, TimestampCount, TimestampInfos, Timestamps, MaxDeviation)"
  },
  {
    "label": "BindBufferMemory2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindBufferMemory2(VK_RESULT_MAX_ENUM, Device, BindInfoCount, BindInfos)"
  },
  {
    "label": "vkBindBufferMemory2()",
    "kind": "Method",
    "detail": "Function (const VkResult Result =)",
    "insertText": "vkBindBufferMemory2(Device, BindInfoCount, BindInfos)"
  },
  {
    "label": "BindBufferMemory2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindBufferMemory2(Result, Device, BindInfoCount, BindInfos)"
  },
  {
    "label": "BindImageMemory2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindImageMemory2(VK_RESULT_MAX_ENUM, Device, BindInfoCount, BindInfos)"
  },
  {
    "label": "vkBindImageMemory2()",
    "kind": "Method",
    "detail": "Function (const VkResult Result =)",
    "insertText": "vkBindImageMemory2(Device, BindInfoCount, BindInfos)"
  },
  {
    "label": "BindImageMemory2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindImageMemory2(Result, Device, BindInfoCount, BindInfos)"
  },
  {
    "label": "CmdPipelineBarrier2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdPipelineBarrier2KHR(VK_RESULT_MAX_ENUM, CommandBuffer, DependencyInfo)"
  },
  {
    "label": "vkCmdPipelineBarrier2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdPipelineBarrier2KHR(CommandBuffer, DependencyInfo)"
  },
  {
    "label": "CmdPipelineBarrier2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdPipelineBarrier2KHR(VK_SUCCESS, CommandBuffer, DependencyInfo)"
  },
  {
    "label": "vkCmdResetEvent2KHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdResetEvent2KHR(VkCommandBuffer CommandBuffer, VkEvent Event, VkPipelineStageFlags2 StageMask)"
  },
  {
    "label": "CmdResetEvent2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdResetEvent2KHR(VK_RESULT_MAX_ENUM, CommandBuffer, Event, StageMask)"
  },
  {
    "label": "vkCmdResetEvent2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdResetEvent2KHR(CommandBuffer, Event, StageMask)"
  },
  {
    "label": "CmdResetEvent2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdResetEvent2KHR(VK_SUCCESS, CommandBuffer, Event, StageMask)"
  },
  {
    "label": "vkCmdSetEvent2KHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetEvent2KHR(VkCommandBuffer CommandBuffer, VkEvent Event, const VkDependencyInfo* DependencyInfo)"
  },
  {
    "label": "CmdSetEvent2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetEvent2KHR(VK_RESULT_MAX_ENUM, CommandBuffer, Event, DependencyInfo)"
  },
  {
    "label": "vkCmdSetEvent2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetEvent2KHR(CommandBuffer, Event, DependencyInfo)"
  },
  {
    "label": "CmdSetEvent2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetEvent2KHR(VK_SUCCESS, CommandBuffer, Event, DependencyInfo)"
  },
  {
    "label": "vkCmdWaitEvents2KHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdWaitEvents2KHR(VkCommandBuffer CommandBuffer, uint32_t EventCount, const VkEvent* Events, const VkDependencyInfo* DependencyInfos)"
  },
  {
    "label": "CmdWaitEvents2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdWaitEvents2KHR(VK_RESULT_MAX_ENUM, CommandBuffer, EventCount, Events, DependencyInfos)"
  },
  {
    "label": "vkCmdWaitEvents2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdWaitEvents2KHR(CommandBuffer, EventCount, Events, DependencyInfos)"
  },
  {
    "label": "CmdWaitEvents2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdWaitEvents2KHR(VK_SUCCESS, CommandBuffer, EventCount, Events, DependencyInfos)"
  },
  {
    "label": "vkQueueSubmit2KHR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkQueueSubmit2KHR(VkQueue Queue, uint32_t SubmitCount, const VkSubmitInfo2* Submits, VkFence Fence)"
  },
  {
    "label": "QueueSubmit2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueSubmit2KHR(VK_RESULT_MAX_ENUM, Queue, SubmitCount, Submits, Fence)"
  },
  {
    "label": "vkQueueSubmit2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkQueueSubmit2KHR(Queue, SubmitCount, Submits, Fence)"
  },
  {
    "label": "QueueSubmit2KHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueSubmit2KHR(VK_SUCCESS, Queue, SubmitCount, Submits, Fence)"
  },
  {
    "label": "vkGetDescriptorSetLayoutSizeEXT()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetDescriptorSetLayoutSizeEXT(VkDevice Device, VkDescriptorSetLayout Layout, VkDeviceSize* OutLayoutSizeInBytes)"
  },
  {
    "label": "GetDescriptorSetLayoutSizeEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDescriptorSetLayoutSizeEXT(VK_RESULT_MAX_ENUM, Device, Layout, OutLayoutSizeInBytes)"
  },
  {
    "label": "vkGetDescriptorSetLayoutSizeEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetDescriptorSetLayoutSizeEXT(Device, Layout, OutLayoutSizeInBytes)"
  },
  {
    "label": "GetDescriptorSetLayoutSizeEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDescriptorSetLayoutSizeEXT(VK_SUCCESS, Device, Layout, OutLayoutSizeInBytes)"
  },
  {
    "label": "vkGetDescriptorSetLayoutBindingOffsetEXT()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetDescriptorSetLayoutBindingOffsetEXT(VkDevice Device, VkDescriptorSetLayout Layout, uint32_t Binding, VkDeviceSize* Offset)"
  },
  {
    "label": "GetDescriptorSetLayoutBindingOffsetEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDescriptorSetLayoutBindingOffsetEXT(VK_RESULT_MAX_ENUM, Device, Layout, Binding, Offset)"
  },
  {
    "label": "vkGetDescriptorSetLayoutBindingOffsetEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetDescriptorSetLayoutBindingOffsetEXT(Device, Layout, Binding, Offset)"
  },
  {
    "label": "GetDescriptorSetLayoutBindingOffsetEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDescriptorSetLayoutBindingOffsetEXT(VK_SUCCESS, Device, Layout, Binding, Offset)"
  },
  {
    "label": "vkCmdBindDescriptorBuffersEXT()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdBindDescriptorBuffersEXT(VkCommandBuffer CommandBuffer, uint32_t BufferCount, const VkDescriptorBufferBindingInfoEXT* BindingInfos)"
  },
  {
    "label": "CmdBindDescriptorBuffersEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBindDescriptorBuffersEXT(VK_RESULT_MAX_ENUM, CommandBuffer, BufferCount, BindingInfos)"
  },
  {
    "label": "vkCmdBindDescriptorBuffersEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdBindDescriptorBuffersEXT(CommandBuffer, BufferCount, BindingInfos)"
  },
  {
    "label": "CmdBindDescriptorBuffersEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdBindDescriptorBuffersEXT(VK_SUCCESS, CommandBuffer, BufferCount, BindingInfos)"
  },
  {
    "label": "vkCmdSetDescriptorBufferOffsetsEXT()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkCmdSetDescriptorBufferOffsetsEXT(VkCommandBuffer CommandBuffer, VkPipelineBindPoint PipelineBindPoint, VkPipelineLayout Layout, uint32_t FirstSet, uint32_t SetCount, const uint32_t* BufferIndices, const VkDeviceSize* Offsets)"
  },
  {
    "label": "CmdSetDescriptorBufferOffsetsEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetDescriptorBufferOffsetsEXT(VK_RESULT_MAX_ENUM, CommandBuffer, PipelineBindPoint, Layout, FirstSet, SetCount, BufferIndices, Offsets)"
  },
  {
    "label": "vkCmdSetDescriptorBufferOffsetsEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkCmdSetDescriptorBufferOffsetsEXT(CommandBuffer, PipelineBindPoint, Layout, FirstSet, SetCount, BufferIndices, Offsets)"
  },
  {
    "label": "CmdSetDescriptorBufferOffsetsEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CmdSetDescriptorBufferOffsetsEXT(VK_SUCCESS, CommandBuffer, PipelineBindPoint, Layout, FirstSet, SetCount, BufferIndices, Offsets)"
  },
  {
    "label": "vkGetDescriptorEXT()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vkGetDescriptorEXT(VkDevice Device, const VkDescriptorGetInfoEXT* DescriptorInfo, size_t DataSize, void* Descriptor)"
  },
  {
    "label": "GetDescriptorEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDescriptorEXT(VK_RESULT_MAX_ENUM, Device, DescriptorInfo, DataSize, Descriptor)"
  },
  {
    "label": "vkGetDescriptorEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkGetDescriptorEXT(Device, DescriptorInfo, DataSize, Descriptor)"
  },
  {
    "label": "GetDescriptorEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDescriptorEXT(VK_SUCCESS, Device, DescriptorInfo, DataSize, Descriptor)"
  },
  {
    "label": "vkCreateDeferredOperationKHR()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkCreateDeferredOperationKHR(VkDevice Device, const VkAllocationCallbacks* Allocator, VkDeferredOperationKHR* DeferredOperation)"
  },
  {
    "label": "CreateDeferredOperationKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDeferredOperationKHR(VK_RESULT_MAX_ENUM, Device, Allocator, DeferredOperation)"
  },
  {
    "label": "vkCreateDeferredOperationKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateDeferredOperationKHR(Device, Allocator, DeferredOperation)"
  },
  {
    "label": "CreateDeferredOperationKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDeferredOperationKHR(Result, Device, Allocator, DeferredOperation)"
  },
  {
    "label": "DestroyDeferredOperationKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDeferredOperationKHR(VK_RESULT_MAX_ENUM, Device, DeferredOperation, Allocator)"
  },
  {
    "label": "vkDestroyDeferredOperationKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroyDeferredOperationKHR(Device, DeferredOperation, Allocator)"
  },
  {
    "label": "DestroyDeferredOperationKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDeferredOperationKHR(VK_SUCCESS, Device, DeferredOperation, Allocator)"
  },
  {
    "label": "vkDeferredOperationJoinKHR()",
    "kind": "Method",
    "detail": "Function (} VkResult)",
    "insertText": "vkDeferredOperationJoinKHR(VkDevice Device, VkDeferredOperationKHR DeferredOperation)"
  },
  {
    "label": "DeferredOperationJoinKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferredOperationJoinKHR(VK_RESULT_MAX_ENUM, Device, DeferredOperation)"
  },
  {
    "label": "vkDeferredOperationJoinKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkDeferredOperationJoinKHR(Device, DeferredOperation)"
  },
  {
    "label": "DeferredOperationJoinKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferredOperationJoinKHR(Result, Device, DeferredOperation)"
  },
  {
    "label": "GetDeferredOperationMaxConcurrencyKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeferredOperationMaxConcurrencyKHR(VK_RESULT_MAX_ENUM, Device, DeferredOperation)"
  },
  {
    "label": "vkGetDeferredOperationMaxConcurrencyKHR()",
    "kind": "Method",
    "detail": "Function (uint32_t Result =)",
    "insertText": "vkGetDeferredOperationMaxConcurrencyKHR(Device, DeferredOperation)"
  },
  {
    "label": "GetDeferredOperationMaxConcurrencyKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeferredOperationMaxConcurrencyKHR(VK_SUCCESS, Device, DeferredOperation)"
  },
  {
    "label": "GetDeferredOperationResultKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeferredOperationResultKHR(VK_RESULT_MAX_ENUM, Device, DeferredOperation)"
  },
  {
    "label": "vkGetDeferredOperationResultKHR()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetDeferredOperationResultKHR(Device, DeferredOperation)"
  },
  {
    "label": "GetDeferredOperationResultKHR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeferredOperationResultKHR(Result, Device, DeferredOperation)"
  },
  {
    "label": "GetDeviceFaultInfoEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceFaultInfoEXT(VK_RESULT_MAX_ENUM, Device, FaultCounts, FaultInfo)"
  },
  {
    "label": "vkGetDeviceFaultInfoEXT()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetDeviceFaultInfoEXT(Device, FaultCounts, FaultInfo)"
  },
  {
    "label": "GetDeviceFaultInfoEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceFaultInfoEXT(Result, Device, FaultCounts, FaultInfo)"
  },
  {
    "label": "CreateSamplerYcbcrConversion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSamplerYcbcrConversion(VK_RESULT_MAX_ENUM, Device, CreateInfo, Allocator, YcbcrConversion)"
  },
  {
    "label": "vkCreateSamplerYcbcrConversion()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkCreateSamplerYcbcrConversion(Device, CreateInfo, Allocator, YcbcrConversion)"
  },
  {
    "label": "CreateSamplerYcbcrConversion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSamplerYcbcrConversion(Result, Device, CreateInfo, Allocator, YcbcrConversion)"
  },
  {
    "label": "DestroySamplerYcbcrConversion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySamplerYcbcrConversion(VK_RESULT_MAX_ENUM, Device, YcbcrConversion, Allocator)"
  },
  {
    "label": "vkDestroySamplerYcbcrConversion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vkDestroySamplerYcbcrConversion(Device, YcbcrConversion, Allocator)"
  },
  {
    "label": "DestroySamplerYcbcrConversion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySamplerYcbcrConversion(VK_SUCCESS, Device, YcbcrConversion, Allocator)"
  },
  {
    "label": "vkGetAndroidHardwareBufferPropertiesANDROID()",
    "kind": "Method",
    "detail": "Function (} # if PLATFORM_ANDROID VkResult)",
    "insertText": "vkGetAndroidHardwareBufferPropertiesANDROID(VkDevice Device, const struct AHardwareBuffer* Buffer, VkAndroidHardwareBufferPropertiesANDROID* Properties)"
  },
  {
    "label": "GetAndroidHardwareBufferPropertiesANDROID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAndroidHardwareBufferPropertiesANDROID(VK_RESULT_MAX_ENUM, Device, Buffer, Properties)"
  },
  {
    "label": "vkGetAndroidHardwareBufferPropertiesANDROID()",
    "kind": "Method",
    "detail": "Function (VkResult Result =)",
    "insertText": "vkGetAndroidHardwareBufferPropertiesANDROID(Device, Buffer, Properties)"
  },
  {
    "label": "GetAndroidHardwareBufferPropertiesANDROID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAndroidHardwareBufferPropertiesANDROID(Result, Device, Buffer, Properties)"
  },
  {
    "label": "DumpLayerPushMarker()",
    "kind": "Method",
    "detail": "Function (# endif # if VULKAN_ENABLE_DUMP_LAYER void)",
    "insertText": "DumpLayerPushMarker(const TCHAR* Name)"
  },
  {
    "label": "DumpLayerPopMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpLayerPopMarker()"
  },
  {
    "label": "PrintfBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintfBegin(const FString& String)"
  }
]