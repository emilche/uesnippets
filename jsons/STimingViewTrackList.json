[
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "STimingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingView"
  },
  {
    "label": "STimingViewTrackList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingViewTrackList"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / SListView . h \" # include \" Insights / ViewModels / BaseTimingTrack . h \" class SSearchBox ; namespace UE::Insights::TimingProfiler { class STimingView ; } class STimingViewTrackList : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(STimingViewTrackList)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, const TSharedRef<UE::Insights::TimingProfiler::STimingView>& InTimingView, ETimingTrackLocation InTrackLocation)"
  },
  {
    "label": "OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRow(TSharedPtr<FBaseTimingTrack> Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "RefreshFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshFilter()"
  }
]