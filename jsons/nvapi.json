[
  {
    "label": "_NV_DP_LINK_RATE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DP_LINK_RATE"
  },
  {
    "label": "_NV_DP_LANE_COUNT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DP_LANE_COUNT"
  },
  {
    "label": "_NV_DP_COLOR_FORMAT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DP_COLOR_FORMAT"
  },
  {
    "label": "_NV_DP_COLORIMETRY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DP_COLORIMETRY"
  },
  {
    "label": "_NV_DP_DYNAMIC_RANGE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DP_DYNAMIC_RANGE"
  },
  {
    "label": "_NV_DP_BPC",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DP_BPC"
  },
  {
    "label": "_NV_GPU_CONNECTOR_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_CONNECTOR_TYPE"
  },
  {
    "label": "_NV_DISPLAY_TV_FORMAT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DISPLAY_TV_FORMAT"
  },
  {
    "label": "_NV_TARGET_VIEW_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_TARGET_VIEW_MODE"
  },
  {
    "label": "_NV_SCALING",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_SCALING"
  },
  {
    "label": "_NV_ROTATE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_ROTATE"
  },
  {
    "label": "_NV_FORMAT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_FORMAT"
  },
  {
    "label": "_NV_TIMING_OVERRIDE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_TIMING_OVERRIDE"
  },
  {
    "label": "tagNV_TIMINGEXT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagNV_TIMINGEXT"
  },
  {
    "label": "_NV_TIMING",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_TIMING"
  },
  {
    "label": "_NV_POSITION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_POSITION"
  },
  {
    "label": "_NV_RESOLUTION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_RESOLUTION"
  },
  {
    "label": "_NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1"
  },
  {
    "label": "_NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1"
  },
  {
    "label": "_NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2"
  },
  {
    "label": "_NV_DISPLAYCONFIG_SPANNING_ORIENTATION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DISPLAYCONFIG_SPANNING_ORIENTATION"
  },
  {
    "label": "_NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1"
  },
  {
    "label": "_NV_DISPLAYCONFIG_PATH_INFO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_DISPLAYCONFIG_PATH_INFO_V1"
  },
  {
    "label": "_NV_DISPLAYCONFIG_PATH_INFO_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_DISPLAYCONFIG_PATH_INFO_V2"
  },
  {
    "label": "_NV_DISPLAYCONFIG_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DISPLAYCONFIG_FLAGS"
  },
  {
    "label": "_NV_GPU_PERF_VOLTAGE_INFO_DOMAIN_ID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_PERF_VOLTAGE_INFO_DOMAIN_ID"
  },
  {
    "label": "_NV_GPU_PUBLIC_CLOCK_ID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_PUBLIC_CLOCK_ID"
  },
  {
    "label": "_NV_GPU_PERF_PSTATE_ID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_PERF_PSTATE_ID"
  },
  {
    "label": "_NV_GPU_PERF_PSTATES20_INFO_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_PERF_PSTATES20_INFO_V2"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "_NV_GPU_DISPLAYIDS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_DISPLAYIDS"
  },
  {
    "label": "_NV_GPU_OUTPUT_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_OUTPUT_TYPE"
  },
  {
    "label": "_NV_GPU_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_TYPE"
  },
  {
    "label": "_NV_GPU_BUS_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_BUS_TYPE"
  },
  {
    "label": "_NV_BOARD_INFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_BOARD_INFO"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "_NV_GPU_ARCHITECTURE_ID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_ARCHITECTURE_ID"
  },
  {
    "label": "_NV_GPU_ARCH_IMPLEMENTATION_ID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_ARCH_IMPLEMENTATION_ID"
  },
  {
    "label": "_NV_GPU_CHIP_REVISION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_CHIP_REVISION"
  },
  {
    "label": "made",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "made"
  },
  {
    "label": "made",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "made"
  },
  {
    "label": "made",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "made"
  },
  {
    "label": "NV_I2C_SPEED",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_I2C_SPEED"
  },
  {
    "label": "NV_I2C_SPEED",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_I2C_SPEED"
  },
  {
    "label": "_NV_GPU_HDCP_FUSE_STATE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_HDCP_FUSE_STATE"
  },
  {
    "label": "_NV_GPU_HDCP_KEY_SOURCE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_HDCP_KEY_SOURCE"
  },
  {
    "label": "_NV_GPU_HDCP_KEY_SOURCE_STATE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_HDCP_KEY_SOURCE_STATE"
  },
  {
    "label": "_NV_COMPUTE_GPU",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_COMPUTE_GPU"
  },
  {
    "label": "_NV_COMPUTE_GPU_TOPOLOGY_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_COMPUTE_GPU_TOPOLOGY_V2"
  },
  {
    "label": "_NV_ECC_CONFIGURATION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_ECC_CONFIGURATION"
  },
  {
    "label": "is",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "is"
  },
  {
    "label": "NV_QSYNC_EVENT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_QSYNC_EVENT"
  },
  {
    "label": "_NV_GPU_WORKSTATION_FEATURE_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_WORKSTATION_FEATURE_TYPE"
  },
  {
    "label": "NV_GPU_WORKSTATION_FEATURE_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_GPU_WORKSTATION_FEATURE_TYPE"
  },
  {
    "label": "_NV_SCANOUT_INTENSITY_STATE_DATA",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SCANOUT_INTENSITY_STATE_DATA"
  },
  {
    "label": "_NV_SCANOUT_WARPING_STATE_DATA",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SCANOUT_WARPING_STATE_DATA"
  },
  {
    "label": "defines",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "defines"
  },
  {
    "label": "_NV_SCANOUT_INFORMATION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SCANOUT_INFORMATION"
  },
  {
    "label": "_NV_VIRTUALIZATION_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_VIRTUALIZATION_MODE"
  },
  {
    "label": "_NV_GPU_VIRTUALIZATION_INFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_VIRTUALIZATION_INFO"
  },
  {
    "label": "_NV_LOGICAL_GPU_DATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LOGICAL_GPU_DATA_V1"
  },
  {
    "label": "_NV_LICENSE_FEATURE_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_LICENSE_FEATURE_TYPE"
  },
  {
    "label": "_NV_LICENSE_EXPIRY_DETAILS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LICENSE_EXPIRY_DETAILS"
  },
  {
    "label": "_NV_LICENSE_FEATURE_DETAILS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LICENSE_FEATURE_DETAILS_V1"
  },
  {
    "label": "_NV_LICENSE_FEATURE_DETAILS_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LICENSE_FEATURE_DETAILS_V2"
  },
  {
    "label": "_NV_LICENSE_FEATURE_DETAILS_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LICENSE_FEATURE_DETAILS_V3"
  },
  {
    "label": "_NV_LICENSE_FEATURE_DETAILS_V4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LICENSE_FEATURE_DETAILS_V4"
  },
  {
    "label": "_NV_LICENSABLE_FEATURES_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LICENSABLE_FEATURES_V1"
  },
  {
    "label": "_NV_LICENSABLE_FEATURES_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LICENSABLE_FEATURES_V2"
  },
  {
    "label": "_NV_LICENSABLE_FEATURES_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LICENSABLE_FEATURES_V3"
  },
  {
    "label": "_NV_LICENSABLE_FEATURES_V4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LICENSABLE_FEATURES_V4"
  },
  {
    "label": "_NV_GPU_VR_READY_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_VR_READY_V1"
  },
  {
    "label": "_NVAPI_GPU_PERF_DECREASE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_GPU_PERF_DECREASE"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "_NV_GPU_ILLUMINATION_ATTRIB",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_ILLUMINATION_ATTRIB"
  },
  {
    "label": "_NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1"
  },
  {
    "label": "_NV_GPU_GET_ILLUMINATION_PARM_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_GET_ILLUMINATION_PARM_V1"
  },
  {
    "label": "_NV_GPU_SET_ILLUMINATION_PARM_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_SET_ILLUMINATION_PARM_V1"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_DEVICE_INFO_DATA_MCUV10",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_DEVICE_INFO_DATA_MCUV10"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_DEVICE_INFO_DATA_GPIO_PWM_RGBW",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_DEVICE_INFO_DATA_GPIO_PWM_RGBW"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_DEVICE_INFO_DATA_GPIO_PWM_SINGLE_COLOR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_DEVICE_INFO_DATA_GPIO_PWM_SINGLE_COLOR"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_DEVICE_INFO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_DEVICE_INFO_V1"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_DEVICE_INFO_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_DEVICE_INFO_PARAMS_V1"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_INFO_DATA_RGB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_INFO_DATA_RGB"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_INFO_DATA_RGBW",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_INFO_DATA_RGBW"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_INFO_DATA_SINGLE_COLOR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_INFO_DATA_SINGLE_COLOR"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_INFO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_INFO_V1"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_INFO_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_INFO_PARAMS_V1"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_RGB_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_RGB_PARAMS"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_RGB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_RGB"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_PIECEWISE_LINEAR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_PIECEWISE_LINEAR"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_PIECEWISE_LINEAR_RGB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_PIECEWISE_LINEAR_RGB"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_RGB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_RGB"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_COLOR_FIXED_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_COLOR_FIXED_PARAMS"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_COLOR_FIXED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_COLOR_FIXED"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_PIECEWISE_LINEAR_COLOR_FIXED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_PIECEWISE_LINEAR_COLOR_FIXED"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_COLOR_FIXED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_COLOR_FIXED"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_RGBW_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_RGBW_PARAMS"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_RGBW",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_RGBW"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_PIECEWISE_LINEAR_RGBW",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_PIECEWISE_LINEAR_RGBW"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_RGBW",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_RGBW"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_SINGLE_COLOR_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_SINGLE_COLOR_PARAMS"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_SINGLE_COLOR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_MANUAL_SINGLE_COLOR"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_PIECEWISE_LINEAR_SINGLE_COLOR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_PIECEWISE_LINEAR_SINGLE_COLOR"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_SINGLE_COLOR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_DATA_SINGLE_COLOR"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_V1"
  },
  {
    "label": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_PARAMS_V1"
  },
  {
    "label": "index",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "index"
  },
  {
    "label": "index",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "index"
  },
  {
    "label": "index",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "index"
  },
  {
    "label": "index",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "index"
  },
  {
    "label": "_NV_DISPLAY_PORT_INFO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_DISPLAY_PORT_INFO_V1"
  },
  {
    "label": "_NV_HDMI_SUPPORT_INFO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_HDMI_SUPPORT_INFO_V1"
  },
  {
    "label": "_NV_HDMI_SUPPORT_INFO_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_HDMI_SUPPORT_INFO_V2"
  },
  {
    "label": "_NV_DYNAMIC_RANGE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DYNAMIC_RANGE"
  },
  {
    "label": "_NV_BPC",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_BPC"
  },
  {
    "label": "_NV_COLOR_SELECTION_POLICY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_COLOR_SELECTION_POLICY"
  },
  {
    "label": "_NV_DESKTOP_COLOR_DEPTH",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DESKTOP_COLOR_DEPTH"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "_NV_COLOR_DATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_COLOR_DATA_V1"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "_NV_COLOR_DATA_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_COLOR_DATA_V2"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "_NV_COLOR_DATA_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_COLOR_DATA_V3"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "_NV_COLOR_DATA_V4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_COLOR_DATA_V4"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "_NV_COLOR_DATA_V5",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_COLOR_DATA_V5"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "_NV_HDR_CAPABILITIES_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_HDR_CAPABILITIES_V1"
  },
  {
    "label": "_NV_HDR_CAPABILITIES_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_HDR_CAPABILITIES_V2"
  },
  {
    "label": "_NV_HDR_CAPABILITIES_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_HDR_CAPABILITIES_V3"
  },
  {
    "label": "_NV_HDR_COLOR_DATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_HDR_COLOR_DATA_V1"
  },
  {
    "label": "_NV_HDR_COLOR_DATA_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_HDR_COLOR_DATA_V2"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "_NV_COLORSPACE_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_COLORSPACE_TYPE"
  },
  {
    "label": "_NV_HDR_METADATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_HDR_METADATA_V1"
  },
  {
    "label": "_NV_DISPLAY_OUTPUT_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_DISPLAY_OUTPUT_MODE"
  },
  {
    "label": "_NV_HDR_TONEMAPPING_METHOD",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_HDR_TONEMAPPING_METHOD"
  },
  {
    "label": "_NV_TIMING_INPUT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_TIMING_INPUT"
  },
  {
    "label": "_NV_MONITOR_CAPS_VCDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MONITOR_CAPS_VCDB"
  },
  {
    "label": "_NV_MONITOR_CAPS_VSDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MONITOR_CAPS_VSDB"
  },
  {
    "label": "_NV_MONITOR_CAPS_GENERIC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MONITOR_CAPS_GENERIC"
  },
  {
    "label": "_NV_MONITOR_CAPABILITIES_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MONITOR_CAPABILITIES_V1"
  },
  {
    "label": "_NV_MONITOR_COLOR_DATA",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MONITOR_COLOR_DATA"
  },
  {
    "label": "index",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "index"
  },
  {
    "label": "_NV_GET_ADAPTIVE_SYNC_DATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GET_ADAPTIVE_SYNC_DATA_V1"
  },
  {
    "label": "_NV_SET_ADAPTIVE_SYNC_DATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SET_ADAPTIVE_SYNC_DATA_V1"
  },
  {
    "label": "_NV_GET_VIRTUAL_REFRESH_RATE_DATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GET_VIRTUAL_REFRESH_RATE_DATA_V1"
  },
  {
    "label": "_NV_SET_VIRTUAL_REFRESH_RATE_DATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SET_VIRTUAL_REFRESH_RATE_DATA_V1"
  },
  {
    "label": "_NV_MANAGED_DEDICATED_DISPLAY_INFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MANAGED_DEDICATED_DISPLAY_INFO"
  },
  {
    "label": "list",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "list"
  },
  {
    "label": "_NV_MOSAIC_DISPLAY_SETTING_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MOSAIC_DISPLAY_SETTING_V1"
  },
  {
    "label": "NV_MOSAIC_DISPLAY_SETTING_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_MOSAIC_DISPLAY_SETTING_V2"
  },
  {
    "label": "_NV_MOSAIC_SUPPORTED_TOPO_INFO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MOSAIC_SUPPORTED_TOPO_INFO_V1"
  },
  {
    "label": "_NV_MOSAIC_SUPPORTED_TOPO_INFO_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MOSAIC_SUPPORTED_TOPO_INFO_V2"
  },
  {
    "label": "_NV_MOSAIC_GRID_TOPO_DISPLAY_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MOSAIC_GRID_TOPO_DISPLAY_V1"
  },
  {
    "label": "_NV_PIXEL_SHIFT_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_PIXEL_SHIFT_TYPE"
  },
  {
    "label": "_NV_MOSAIC_GRID_TOPO_DISPLAY_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MOSAIC_GRID_TOPO_DISPLAY_V2"
  },
  {
    "label": "_NV_MOSAIC_GRID_TOPO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MOSAIC_GRID_TOPO_V1"
  },
  {
    "label": "_NV_MOSAIC_GRID_TOPO_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MOSAIC_GRID_TOPO_V2"
  },
  {
    "label": "_NV_GSYNC_CAPABILITIES_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GSYNC_CAPABILITIES_V1"
  },
  {
    "label": "_NV_GSYNC_CAPABILITIES_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GSYNC_CAPABILITIES_V2"
  },
  {
    "label": "_NVAPI_GSYNC_GPU_TOPOLOGY_CONNECTOR",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_GSYNC_GPU_TOPOLOGY_CONNECTOR"
  },
  {
    "label": "_NVAPI_GSYNC_DISPLAY_SYNC_STATE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_GSYNC_DISPLAY_SYNC_STATE"
  },
  {
    "label": "_NV_GSYNC_GPU",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GSYNC_GPU"
  },
  {
    "label": "_NV_GSYNC_DISPLAY",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GSYNC_DISPLAY"
  },
  {
    "label": "_NVAPI_GSYNC_POLARITY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_GSYNC_POLARITY"
  },
  {
    "label": "_NVAPI_GSYNC_VIDEO_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_GSYNC_VIDEO_MODE"
  },
  {
    "label": "_NVAPI_GSYNC_SYNC_SOURCE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_GSYNC_SYNC_SOURCE"
  },
  {
    "label": "_NV_GSYNC_DELAY",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GSYNC_DELAY"
  },
  {
    "label": "_NV_GSYNC_CONTROL_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GSYNC_CONTROL_PARAMS"
  },
  {
    "label": "_NVAPI_GSYNC_DELAY_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_GSYNC_DELAY_TYPE"
  },
  {
    "label": "_NV_GSYNC_STATUS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GSYNC_STATUS"
  },
  {
    "label": "_NVAPI_GSYNC_RJ45_IO",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_GSYNC_RJ45_IO"
  },
  {
    "label": "_NV_GSYNC_STATUS_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GSYNC_STATUS_PARAMS_V1"
  },
  {
    "label": "_NV_GSYNC_STATUS_PARAMS_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GSYNC_STATUS_PARAMS_V2"
  },
  {
    "label": "_NV_STEREO_VIDEO_FORMAT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_STEREO_VIDEO_FORMAT"
  },
  {
    "label": "_NV_DX_VIDEO_STEREO_INFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_DX_VIDEO_STEREO_INFO"
  },
  {
    "label": "_NVAPI_D3D11_INSERTWFI_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D11_INSERTWFI_FLAG"
  },
  {
    "label": "_NV_JOIN_PRESENT_BARRIER_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_JOIN_PRESENT_BARRIER_PARAMS"
  },
  {
    "label": "_NV_PRESENT_BARRIER_SYNC_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_PRESENT_BARRIER_SYNC_MODE"
  },
  {
    "label": "_NV_PRESENT_BARRIER_FRAME_STATISTICS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_PRESENT_BARRIER_FRAME_STATISTICS"
  },
  {
    "label": "NVAPI_QUAD_FILLMODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NVAPI_QUAD_FILLMODE"
  },
  {
    "label": "NvAPI_D3D11_RASTERIZER_DESC_EX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_RASTERIZER_DESC_EX"
  },
  {
    "label": "_NVAPI_ANSEL_FEATURE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_ANSEL_FEATURE"
  },
  {
    "label": "_NVAPI_ANSEL_FEATURE_STATE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_ANSEL_FEATURE_STATE"
  },
  {
    "label": "_NVAPI_ANSEL_HOTKEY_MODIFIER",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_ANSEL_HOTKEY_MODIFIER"
  },
  {
    "label": "NVAPI_ANSEL_FEATURE_CONFIGURATION_STRUCT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_ANSEL_FEATURE_CONFIGURATION_STRUCT"
  },
  {
    "label": "NVAPI_ANSEL_CONFIGURATION_STRUCT_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_ANSEL_CONFIGURATION_STRUCT_V1"
  },
  {
    "label": "_NV_D3D11_FEATURE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_D3D11_FEATURE"
  },
  {
    "label": "_NV_D3D11_FEATURE_DATA_RASTERIZER_SUPPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D11_FEATURE_DATA_RASTERIZER_SUPPORT"
  },
  {
    "label": "_NV_RESOLVE_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_RESOLVE_MODE"
  },
  {
    "label": "_NV_SWIZZLE_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_SWIZZLE_MODE"
  },
  {
    "label": "_NV_SWIZZLE_OFFSET",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_SWIZZLE_OFFSET"
  },
  {
    "label": "NV_CUSTOM_SEMANTIC_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_CUSTOM_SEMANTIC_TYPE"
  },
  {
    "label": "_NV_CUSTOM_SEMANTIC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_CUSTOM_SEMANTIC"
  },
  {
    "label": "NvAPI_D3D11_CREATE_GEOMETRY_SHADER_EX_V5",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_GEOMETRY_SHADER_EX_V5"
  },
  {
    "label": "linkage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "linkage"
  },
  {
    "label": "NvAPI_D3D11_CREATE_VERTEX_SHADER_EX_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_VERTEX_SHADER_EX_V1"
  },
  {
    "label": "NvAPI_D3D11_CREATE_VERTEX_SHADER_EX_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_VERTEX_SHADER_EX_V2"
  },
  {
    "label": "NvAPI_D3D11_CREATE_VERTEX_SHADER_EX_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_VERTEX_SHADER_EX_V3"
  },
  {
    "label": "linkage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "linkage"
  },
  {
    "label": "NvAPI_D3D11_CREATE_HULL_SHADER_EX_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_HULL_SHADER_EX_V1"
  },
  {
    "label": "NvAPI_D3D11_CREATE_HULL_SHADER_EX_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_HULL_SHADER_EX_V2"
  },
  {
    "label": "linkage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "linkage"
  },
  {
    "label": "NvAPI_D3D11_CREATE_DOMAIN_SHADER_EX_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_DOMAIN_SHADER_EX_V1"
  },
  {
    "label": "NvAPI_D3D11_CREATE_DOMAIN_SHADER_EX_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_DOMAIN_SHADER_EX_V2"
  },
  {
    "label": "NvAPI_D3D11_CREATE_DOMAIN_SHADER_EX_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_DOMAIN_SHADER_EX_V3"
  },
  {
    "label": "linkage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "linkage"
  },
  {
    "label": "NvAPI_D3D11_CREATE_PIXEL_SHADER_EX_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_PIXEL_SHADER_EX_V1"
  },
  {
    "label": "NvAPI_D3D11_CREATE_PIXEL_SHADER_EX_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_PIXEL_SHADER_EX_V2"
  },
  {
    "label": "linkage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "linkage"
  },
  {
    "label": "_NV_FASTGS_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_FASTGS_FLAGS"
  },
  {
    "label": "NvAPI_D3D11_CREATE_FASTGS_EXPLICIT_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NvAPI_D3D11_CREATE_FASTGS_EXPLICIT_DESC_V1"
  },
  {
    "label": "linkage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "linkage"
  },
  {
    "label": "linkage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "linkage"
  },
  {
    "label": "becuase",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "becuase"
  },
  {
    "label": "_NV_PSO_EXTENSION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_PSO_EXTENSION"
  },
  {
    "label": "NVAPI_D3D12_PSO_EXTENSION_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_EXTENSION_DESC_V1"
  },
  {
    "label": "NVAPI_D3D12_PSO_RASTERIZER_STATE_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_RASTERIZER_STATE_DESC_V1"
  },
  {
    "label": "NVAPI_D3D12_PSO_CREATE_FASTGS_EXPLICIT_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_CREATE_FASTGS_EXPLICIT_DESC_V1"
  },
  {
    "label": "NVAPI_D3D12_PSO_REQUEST_FAST_GEOMETRY_SHADER_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_REQUEST_FAST_GEOMETRY_SHADER_DESC_V1"
  },
  {
    "label": "NVAPI_D3D12_PSO_GEOMETRY_SHADER_DESC_V5",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_GEOMETRY_SHADER_DESC_V5"
  },
  {
    "label": "NVAPI_D3D12_PSO_VERTEX_SHADER_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_VERTEX_SHADER_DESC_V1"
  },
  {
    "label": "NVAPI_D3D12_PSO_VERTEX_SHADER_DESC_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_VERTEX_SHADER_DESC_V2"
  },
  {
    "label": "NVAPI_D3D12_PSO_VERTEX_SHADER_DESC_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_VERTEX_SHADER_DESC_V3"
  },
  {
    "label": "NVAPI_D3D12_PSO_HULL_SHADER_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_HULL_SHADER_DESC_V1"
  },
  {
    "label": "NVAPI_D3D12_PSO_HULL_SHADER_DESC_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_HULL_SHADER_DESC_V2"
  },
  {
    "label": "NVAPI_D3D12_PSO_DOMAIN_SHADER_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_DOMAIN_SHADER_DESC_V1"
  },
  {
    "label": "NVAPI_D3D12_PSO_DOMAIN_SHADER_DESC_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_DOMAIN_SHADER_DESC_V2"
  },
  {
    "label": "NVAPI_D3D12_PSO_DOMAIN_SHADER_DESC_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_DOMAIN_SHADER_DESC_V3"
  },
  {
    "label": "NVAPI_D3D12_PSO_ENABLE_DEPTH_BOUND_TEST_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_ENABLE_DEPTH_BOUND_TEST_DESC_V1"
  },
  {
    "label": "NVAPI_D3D12_PSO_SET_SHADER_EXTENSION_SLOT_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_D3D12_PSO_SET_SHADER_EXTENSION_SLOT_DESC_V1"
  },
  {
    "label": "_NV_COMPUTE_SHADER_DERIVATIVES",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_COMPUTE_SHADER_DERIVATIVES"
  },
  {
    "label": "_NV_HEAP_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_HEAP_PARAMS_V1"
  },
  {
    "label": "NV_D3D_GRAPHICS_STATES",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_D3D_GRAPHICS_STATES"
  },
  {
    "label": "NVAPI_META_COMMAND_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVAPI_META_COMMAND_DESC"
  },
  {
    "label": "NV_META_COMMAND_TENSOR_DATA_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_TENSOR_DATA_TYPE"
  },
  {
    "label": "NV_META_COMMAND_TENSOR_LAYOUT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_TENSOR_LAYOUT"
  },
  {
    "label": "NV_META_COMMAND_TENSOR_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_TENSOR_FLAGS"
  },
  {
    "label": "NV_META_COMMAND_PRECISION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_PRECISION"
  },
  {
    "label": "NV_META_COMMAND_TENSOR_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_TENSOR_DESC"
  },
  {
    "label": "NV_META_COMMAND_ACTIVATION_FUNCTION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_ACTIVATION_FUNCTION"
  },
  {
    "label": "NV_META_COMMAND_ACTIVATION_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_ACTIVATION_DESC"
  },
  {
    "label": "NV_META_COMMAND_TENSOR_DATA_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_TENSOR_DATA_TYPE"
  },
  {
    "label": "NV_META_COMMAND_TENSOR_LAYOUT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_TENSOR_LAYOUT"
  },
  {
    "label": "NV_META_COMMAND_TENSOR_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_TENSOR_FLAGS"
  },
  {
    "label": "NV_META_COMMAND_PRECISION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_PRECISION"
  },
  {
    "label": "NV_META_COMMAND_TENSOR_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_TENSOR_DESC"
  },
  {
    "label": "NV_META_COMMAND_ACTIVATION_FUNCTION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_ACTIVATION_FUNCTION"
  },
  {
    "label": "NV_META_COMMAND_ACTIVATION_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_ACTIVATION_DESC"
  },
  {
    "label": "NV_META_COMMAND_OPTIONAL_TENSOR_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_OPTIONAL_TENSOR_DESC"
  },
  {
    "label": "NV_META_COMMAND_OPTIONAL_ACTIVATION_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_OPTIONAL_ACTIVATION_DESC"
  },
  {
    "label": "NV_META_COMMAND_PADDING_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_PADDING_MODE"
  },
  {
    "label": "NV_META_COMMAND_PADDING_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_PADDING_DESC"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "NV_META_COMMAND_RESOURCE_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_RESOURCE_TYPE"
  },
  {
    "label": "NV_META_COMMAND_CONVOLUTION_DIRECTION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_CONVOLUTION_DIRECTION"
  },
  {
    "label": "NV_META_COMMAND_CONVOLUTION_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_CONVOLUTION_MODE"
  },
  {
    "label": "NV_META_COMMAND_CREATE_CONVOLUTION_EX_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_CREATE_CONVOLUTION_EX_DESC"
  },
  {
    "label": "NV_META_COMMAND_CONVOLUTION_DIRECTION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_CONVOLUTION_DIRECTION"
  },
  {
    "label": "NV_META_COMMAND_CONVOLUTION_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_CONVOLUTION_MODE"
  },
  {
    "label": "NV_META_COMMAND_CREATE_CONVOLUTION_EX_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_CREATE_CONVOLUTION_EX_DESC"
  },
  {
    "label": "NV_META_COMMAND_CONVOLUTION_POOL_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_CONVOLUTION_POOL_MODE"
  },
  {
    "label": "NV_META_COMMAND_CONVOLUTION_UPSAMPLE_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_CONVOLUTION_UPSAMPLE_MODE"
  },
  {
    "label": "NV_META_COMMAND_CONVOLUTION_SKIP_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_CONVOLUTION_SKIP_MODE"
  },
  {
    "label": "NV_META_COMMAND_CONVOLUTION_FUSE_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_CONVOLUTION_FUSE_DESC"
  },
  {
    "label": "NV_META_COMMAND_CREATE_CONVOLUTION_EX_FUSED_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_CREATE_CONVOLUTION_EX_FUSED_DESC"
  },
  {
    "label": "NV_META_COMMAND_MATRIX_TRANSFORM",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_MATRIX_TRANSFORM"
  },
  {
    "label": "NV_META_COMMAND_CREATE_GEMM_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_CREATE_GEMM_DESC"
  },
  {
    "label": "NV_META_COMMAND_MATRIX_TRANSFORM",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_META_COMMAND_MATRIX_TRANSFORM"
  },
  {
    "label": "NV_META_COMMAND_CREATE_GEMM_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_META_COMMAND_CREATE_GEMM_DESC"
  },
  {
    "label": "NV_D3D11_META_COMMAND_RESOURCE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_D3D11_META_COMMAND_RESOURCE"
  },
  {
    "label": "NV_D3D11_META_COMMAND_INITIALIZE_CONVOLUTION_EX_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_D3D11_META_COMMAND_INITIALIZE_CONVOLUTION_EX_DESC"
  },
  {
    "label": "NV_D3D11_META_COMMAND_EXECUTE_CONVOLUTION_EX_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_D3D11_META_COMMAND_EXECUTE_CONVOLUTION_EX_DESC"
  },
  {
    "label": "NV_D3D11_META_COMMAND_INITIALIZE_GEMM_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_D3D11_META_COMMAND_INITIALIZE_GEMM_DESC"
  },
  {
    "label": "NV_D3D11_META_COMMAND_EXECUTE_GEMM_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_D3D11_META_COMMAND_EXECUTE_GEMM_DESC"
  },
  {
    "label": "NV_D3D12_META_COMMAND_INITIALIZE_CONVOLUTION_EX_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_D3D12_META_COMMAND_INITIALIZE_CONVOLUTION_EX_DESC"
  },
  {
    "label": "NV_D3D12_META_COMMAND_EXECUTE_CONVOLUTION_EX_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_D3D12_META_COMMAND_EXECUTE_CONVOLUTION_EX_DESC"
  },
  {
    "label": "NV_D3D12_META_COMMAND_INITIALIZE_GEMM_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_D3D12_META_COMMAND_INITIALIZE_GEMM_DESC"
  },
  {
    "label": "NV_D3D12_META_COMMAND_EXECUTE_GEMM_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_D3D12_META_COMMAND_EXECUTE_GEMM_DESC"
  },
  {
    "label": "_NV_RESOURCE_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_RESOURCE_PARAMS_V1"
  },
  {
    "label": "_NV_MULTIGPU_CAPS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MULTIGPU_CAPS_V1"
  },
  {
    "label": "_NV_MULTIGPU_CAPS_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MULTIGPU_CAPS_V2"
  },
  {
    "label": "_NV_QUERY_SINGLE_PASS_STEREO_SUPPORT_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_QUERY_SINGLE_PASS_STEREO_SUPPORT_PARAMS_V1"
  },
  {
    "label": "version",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "version"
  },
  {
    "label": "_NV_QUERY_SINGLE_PASS_STEREO_SUPPORT_PARAMS_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_QUERY_SINGLE_PASS_STEREO_SUPPORT_PARAMS_V2"
  },
  {
    "label": "version",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "version"
  },
  {
    "label": "_NV_QUERY_MULTIVIEW_SUPPORT_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_QUERY_MULTIVIEW_SUPPORT_PARAMS_V1"
  },
  {
    "label": "version",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "version"
  },
  {
    "label": "_NV_MULTIVIEW_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MULTIVIEW_PARAMS_V1"
  },
  {
    "label": "version",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "version"
  },
  {
    "label": "_NV_QUERY_MODIFIED_W_SUPPORT_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_QUERY_MODIFIED_W_SUPPORT_PARAMS"
  },
  {
    "label": "version",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "version"
  },
  {
    "label": "_NV_MODIFIED_W_COEFFICIENTS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MODIFIED_W_COEFFICIENTS"
  },
  {
    "label": "_NV_MODIFIED_W_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MODIFIED_W_PARAMS"
  },
  {
    "label": "version",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "version"
  },
  {
    "label": "_NV_D3D_LATELATCH_OBJECT_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D_LATELATCH_OBJECT_DESC_V1"
  },
  {
    "label": "_NV_QUERY_LATELATCH_SUPPORT_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_QUERY_LATELATCH_SUPPORT_PARAMS"
  },
  {
    "label": "_IMPLICIT_SLI_CONTROL",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_IMPLICIT_SLI_CONTROL"
  },
  {
    "label": "_NV_D3D12_MOSAIC_GETCOMPANIONALLOCATIONS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D12_MOSAIC_GETCOMPANIONALLOCATIONS"
  },
  {
    "label": "_NV_D3D12_MOSAIC_GETVIEWPORTANDGPUPARTITIONS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D12_MOSAIC_GETVIEWPORTANDGPUPARTITIONS"
  },
  {
    "label": "_NV_D3D1x_GRAPHICS_CAPS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D1x_GRAPHICS_CAPS_V1"
  },
  {
    "label": "_NV_D3D1x_GRAPHICS_CAPS_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D1x_GRAPHICS_CAPS_V2"
  },
  {
    "label": "created",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "created"
  },
  {
    "label": "by",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "by"
  },
  {
    "label": "_NV_D3D12_GRAPHICS_CAPS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D12_GRAPHICS_CAPS_V1"
  },
  {
    "label": "created",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "created"
  },
  {
    "label": "by",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "by"
  },
  {
    "label": "_NV_D3D11_EXCLUSIVE_SCISSOR_RECT_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D11_EXCLUSIVE_SCISSOR_RECT_DESC_V1"
  },
  {
    "label": "_NV_D3D11_EXCLUSIVE_SCISSOR_RECTS_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D11_EXCLUSIVE_SCISSOR_RECTS_DESC_V1"
  },
  {
    "label": "version",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "version"
  },
  {
    "label": "_NV_D3D11_VIEWPORT_SHADING_RATE_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D11_VIEWPORT_SHADING_RATE_DESC_V1"
  },
  {
    "label": "_NV_D3D11_VIEWPORTS_SHADING_RATE_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D11_VIEWPORTS_SHADING_RATE_DESC_V1"
  },
  {
    "label": "_NV_SRRV_DIMENSION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_SRRV_DIMENSION"
  },
  {
    "label": "_NV_TEX2D_SRRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_TEX2D_SRRV"
  },
  {
    "label": "_NV_TEX2D_ARRAY_SRRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_TEX2D_ARRAY_SRRV"
  },
  {
    "label": "_NV_D3D11_SHADING_RATE_RESOURCE_VIEW_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_D3D11_SHADING_RATE_RESOURCE_VIEW_DESC_V1"
  },
  {
    "label": "version",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "version"
  },
  {
    "label": "_NV_PIXEL_SRSO_1x2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_PIXEL_SRSO_1x2"
  },
  {
    "label": "NV_PIXEL_SRSO_1x2_X1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_1x2_X1"
  },
  {
    "label": "NV_PIXEL_SRSO_1x2_X2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_1x2_X2"
  },
  {
    "label": "NV_PIXEL_SRSO_1x2_X4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_1x2_X4"
  },
  {
    "label": "NV_PIXEL_SRSO_1x2_X8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_1x2_X8"
  },
  {
    "label": "_NV_PIXEL_SRSO_2x1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_PIXEL_SRSO_2x1"
  },
  {
    "label": "NV_PIXEL_SRSO_2x1_X1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_2x1_X1"
  },
  {
    "label": "NV_PIXEL_SRSO_2x1_X2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_2x1_X2"
  },
  {
    "label": "NV_PIXEL_SRSO_2x1_X4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_2x1_X4"
  },
  {
    "label": "_NV_PIXEL_SRSO_2x2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_PIXEL_SRSO_2x2"
  },
  {
    "label": "NV_PIXEL_SRSO_2x2_X1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_2x2_X1"
  },
  {
    "label": "NV_PIXEL_SRSO_2x2_X2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_2x2_X2"
  },
  {
    "label": "NV_PIXEL_SRSO_2x2_X4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_2x2_X4"
  },
  {
    "label": "_NV_PIXEL_SRSO_2x4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_PIXEL_SRSO_2x4"
  },
  {
    "label": "NV_PIXEL_SRSO_2x4_X1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_2x4_X1"
  },
  {
    "label": "NV_PIXEL_SRSO_2x4_X2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_2x4_X2"
  },
  {
    "label": "_NV_PIXEL_SRSO_4x2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_PIXEL_SRSO_4x2"
  },
  {
    "label": "NV_PIXEL_SRSO_4x2_X1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_4x2_X1"
  },
  {
    "label": "_NV_PIXEL_SRSO_4x4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_PIXEL_SRSO_4x4"
  },
  {
    "label": "NV_PIXEL_SRSO_4x4_X1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NV_PIXEL_SRSO_4x4_X1"
  },
  {
    "label": "_NV_PIXEL_SHADING_RATE_SAMPLE_ORDER_TABLE_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_PIXEL_SHADING_RATE_SAMPLE_ORDER_TABLE_V1"
  },
  {
    "label": "_NV_VRS_HELPER_LATCH_GAZE_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_VRS_HELPER_LATCH_GAZE_PARAMS_V1"
  },
  {
    "label": "_NV_VRS_CONTENT_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_VRS_CONTENT_TYPE"
  },
  {
    "label": "_NV_FOVEATED_RENDERING_SHADING_RATE_PRESET",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_FOVEATED_RENDERING_SHADING_RATE_PRESET"
  },
  {
    "label": "_NV_FOVEATED_RENDERING_CUSTOM_SHADING_RATE_PRESET_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_FOVEATED_RENDERING_CUSTOM_SHADING_RATE_PRESET_DESC_V1"
  },
  {
    "label": "_NV_FOVEATED_RENDERING_FOVEATION_PATTERN_PRESET",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_FOVEATED_RENDERING_FOVEATION_PATTERN_PRESET"
  },
  {
    "label": "_NV_FOVEATED_RENDERING_CUSTOM_FOVEATION_PATTERN_PRESET_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_FOVEATED_RENDERING_CUSTOM_FOVEATION_PATTERN_PRESET_DESC_V1"
  },
  {
    "label": "_NV_FOVEATED_RENDERING_DESC_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_FOVEATED_RENDERING_DESC_V1"
  },
  {
    "label": "_NV_VRS_RENDER_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_VRS_RENDER_MODE"
  },
  {
    "label": "_NV_VRS_HELPER_ENABLE_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_VRS_HELPER_ENABLE_PARAMS_V1"
  },
  {
    "label": "_NV_VRS_HELPER_DISABLE_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_VRS_HELPER_DISABLE_PARAMS_V1"
  },
  {
    "label": "_NV_VRS_HELPER_GET_SHADING_RATE_RESOURCE_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_VRS_HELPER_GET_SHADING_RATE_RESOURCE_PARAMS_V1"
  },
  {
    "label": "_NV_VRS_HELPER_PURGE_INTERNAL_RESOURCES_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_VRS_HELPER_PURGE_INTERNAL_RESOURCES_PARAMS_V1"
  },
  {
    "label": "_NV_VRS_HELPER_INIT_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_VRS_HELPER_INIT_PARAMS_V1"
  },
  {
    "label": "_NV_GAZE_DATA_VALIDITY_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GAZE_DATA_VALIDITY_FLAGS"
  },
  {
    "label": "_NV_FOVEATED_RENDERING_GAZE_DATA_PER_EYE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_FOVEATED_RENDERING_GAZE_DATA_PER_EYE"
  },
  {
    "label": "_NV_FOVEATED_RENDERING_UPDATE_GAZE_DATA_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_FOVEATED_RENDERING_UPDATE_GAZE_DATA_PARAMS"
  },
  {
    "label": "_NV_GAZE_DATA_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GAZE_DATA_TYPE"
  },
  {
    "label": "_NV_GAZE_HANDLER_INIT_PARAMS_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GAZE_HANDLER_INIT_PARAMS_V2"
  },
  {
    "label": "_NV_GAZE_HANDLER_INIT_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GAZE_HANDLER_INIT_PARAMS_V1"
  },
  {
    "label": "NV_SMP_ASSIST_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_SMP_ASSIST_TYPE"
  },
  {
    "label": "NV_SMP_ASSIST_LEVEL",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_SMP_ASSIST_LEVEL"
  },
  {
    "label": "NV_MRS_CONFIG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_MRS_CONFIG"
  },
  {
    "label": "NV_LMS_CONFIG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_LMS_CONFIG"
  },
  {
    "label": "_NV_MRS_CUSTOM_CONFIG_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MRS_CUSTOM_CONFIG_V1"
  },
  {
    "label": "_NV_MRS_INSTANCED_STEREO_CONFIG_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_MRS_INSTANCED_STEREO_CONFIG_V1"
  },
  {
    "label": "_NV_LMS_CUSTOM_CONFIG_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LMS_CUSTOM_CONFIG_V1"
  },
  {
    "label": "_NV_LMS_INSTANCED_STEREO_CONFIG_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LMS_INSTANCED_STEREO_CONFIG_V1"
  },
  {
    "label": "_NV_SMP_ASSIST_EYE_INDEX",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_SMP_ASSIST_EYE_INDEX"
  },
  {
    "label": "_NV_CUSTOM_RECTS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_CUSTOM_RECTS_V1"
  },
  {
    "label": "_NV_SMP_ASSIST_ENABLE_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SMP_ASSIST_ENABLE_PARAMS_V1"
  },
  {
    "label": "_NV_SMP_ASSIST_DISABLE_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SMP_ASSIST_DISABLE_PARAMS_V1"
  },
  {
    "label": "FastGSCBData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FastGSCBData"
  },
  {
    "label": "_NV_SMP_ASSIST_FASTGSCBDATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SMP_ASSIST_FASTGSCBDATA_V1"
  },
  {
    "label": "_NV_SMP_ASSIST_FASTGSCBDATA_MRS_INSTANCED_STEREO_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SMP_ASSIST_FASTGSCBDATA_MRS_INSTANCED_STEREO_V1"
  },
  {
    "label": "RemapCBData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RemapCBData"
  },
  {
    "label": "_NV_SMP_ASSIST_REMAPCBDATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SMP_ASSIST_REMAPCBDATA_V1"
  },
  {
    "label": "_NV_SMP_ASSIST_GET_CONSTANTS_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SMP_ASSIST_GET_CONSTANTS_V3"
  },
  {
    "label": "_NV_SMP_ASSIST_SETUP_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SMP_ASSIST_SETUP_PARAMS_V1"
  },
  {
    "label": "NV_LMS_CONFIG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_LMS_CONFIG"
  },
  {
    "label": "NV_MRS_CUSTOM_CONFIG_V1",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NV_MRS_CUSTOM_CONFIG_V1"
  },
  {
    "label": "_NV_SMP_ASSIST_UPDATE_INSTANCEDSTEREO_DATA_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SMP_ASSIST_UPDATE_INSTANCEDSTEREO_DATA_PARAMS_V1"
  },
  {
    "label": "_NV_SMP_ASSIST_INITIALIZE_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SMP_ASSIST_INITIALIZE_PARAMS_V1"
  },
  {
    "label": "_NV_QUERY_SMP_ASSIST_SUPPORT_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_QUERY_SMP_ASSIST_SUPPORT_PARAMS_V1"
  },
  {
    "label": "_NV_GET_SLEEP_STATUS_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GET_SLEEP_STATUS_PARAMS"
  },
  {
    "label": "_NV_SET_SLEEP_MODE_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_SET_SLEEP_MODE_PARAMS"
  },
  {
    "label": "_NV_LATENCY_RESULT_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LATENCY_RESULT_PARAMS"
  },
  {
    "label": "FrameReport",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FrameReport"
  },
  {
    "label": "_NV_LATENCY_MARKER_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_LATENCY_MARKER_PARAMS"
  },
  {
    "label": "_NVAPI_DIM3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_DIM3"
  },
  {
    "label": "_NVAPI_CU_KERNEL_LAUNCH_PARAMS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_CU_KERNEL_LAUNCH_PARAMS"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_THREAD_REORDERING_CAPS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_THREAD_REORDERING_CAPS"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_CAPS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_CAPS"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_CAPS_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_CAPS_TYPE"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_ARRAY_BUILD_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_ARRAY_BUILD_FLAGS"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_FORMAT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_FORMAT"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_USAGE_COUNT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_USAGE_COUNT"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_DESC"
  },
  {
    "label": "_NVAPI_D3D12_BUILD_RAYTRACING_OPACITY_MICROMAP_ARRAY_INPUTS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_BUILD_RAYTRACING_OPACITY_MICROMAP_ARRAY_INPUTS"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_ARRAY_PREBUILD_INFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_ARRAY_PREBUILD_INFO"
  },
  {
    "label": "_NVAPI_GET_RAYTRACING_OPACITY_MICROMAP_ARRAY_PREBUILD_INFO_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_GET_RAYTRACING_OPACITY_MICROMAP_ARRAY_PREBUILD_INFO_PARAMS_V1"
  },
  {
    "label": "_NVAPI_D3D12_PIPELINE_CREATION_STATE_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_PIPELINE_CREATION_STATE_FLAGS"
  },
  {
    "label": "_NVAPI_D3D12_SET_CREATE_PIPELINE_STATE_OPTIONS_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_SET_CREATE_PIPELINE_STATE_OPTIONS_PARAMS_V1"
  },
  {
    "label": "_NVAPI_D3D12_SERIALIZED_DATA_TYPE_EX",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_SERIALIZED_DATA_TYPE_EX"
  },
  {
    "label": "_NVAPI_CHECK_DRIVER_MATCHING_IDENTIFIER_EX_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_CHECK_DRIVER_MATCHING_IDENTIFIER_EX_PARAMS_V1"
  },
  {
    "label": "extends",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "extends"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS_EX",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS_EX"
  },
  {
    "label": "extends",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "extends"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_GEOMETRY_TYPE_EX",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_GEOMETRY_TYPE_EX"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_SPECIAL_INDEX",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_SPECIAL_INDEX"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_GEOMETRY_OMM_ATTACHMENT_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_GEOMETRY_OMM_ATTACHMENT_DESC"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_GEOMETRY_OMM_TRIANGLES_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_GEOMETRY_OMM_TRIANGLES_DESC"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_GEOMETRY_DESC_EX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_GEOMETRY_DESC_EX"
  },
  {
    "label": "extends",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "extends"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_INSTANCE_FLAGS_EX",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_INSTANCE_FLAGS_EX"
  },
  {
    "label": "_NVAPI_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS_EX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS_EX"
  },
  {
    "label": "_NVAPI_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO_EX_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO_EX_PARAMS_V1"
  },
  {
    "label": "_NVAPI_D3D12_BUILD_RAYTRACING_OPACITY_MICROMAP_ARRAY_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_BUILD_RAYTRACING_OPACITY_MICROMAP_ARRAY_DESC"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_ARRAY_POSTBUILD_INFO_CURRENT_SIZE_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_ARRAY_POSTBUILD_INFO_CURRENT_SIZE_DESC"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_ARRAY_POSTBUILD_INFO_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_ARRAY_POSTBUILD_INFO_TYPE"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_ARRAY_POSTBUILD_INFO_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_ARRAY_POSTBUILD_INFO_DESC"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "_NVAPI_BUILD_RAYTRACING_OPACITY_MICROMAP_ARRAY_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_BUILD_RAYTRACING_OPACITY_MICROMAP_ARRAY_PARAMS_V1"
  },
  {
    "label": "_NVAPI_RELOCATE_RAYTRACING_OPACITY_MICROMAP_ARRAY_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_RELOCATE_RAYTRACING_OPACITY_MICROMAP_ARRAY_PARAMS_V1"
  },
  {
    "label": "_NVAPI_EMIT_RAYTRACING_OPACITY_MICROMAP_ARRAY_POSTBUILD_INFO_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_EMIT_RAYTRACING_OPACITY_MICROMAP_ARRAY_POSTBUILD_INFO_PARAMS_V1"
  },
  {
    "label": "_NVAPI_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_EX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_EX"
  },
  {
    "label": "_NVAPI_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_EX_PARAMS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_EX_PARAMS_V1"
  },
  {
    "label": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_STATE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_D3D12_RAYTRACING_OPACITY_MICROMAP_STATE"
  },
  {
    "label": "_NVAPI_RAY_FLAGS_EX",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_RAY_FLAGS_EX"
  },
  {
    "label": "_NVVIOOWNERTYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOOWNERTYPE"
  },
  {
    "label": "_NVVIOSIGNALFORMAT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOSIGNALFORMAT"
  },
  {
    "label": "_NVVIOVIDEOSTANDARD",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOVIDEOSTANDARD"
  },
  {
    "label": "_NVVIOVIDEOTYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOVIDEOTYPE"
  },
  {
    "label": "_NVVIOINTERLACEMODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOINTERLACEMODE"
  },
  {
    "label": "_NVVIODATAFORMAT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIODATAFORMAT"
  },
  {
    "label": "_NVVIOOUTPUTAREA",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOOUTPUTAREA"
  },
  {
    "label": "_NVVIOSYNCSOURCE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOSYNCSOURCE"
  },
  {
    "label": "_NVVIOCOMPSYNCTYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOCOMPSYNCTYPE"
  },
  {
    "label": "_NVVIOINPUTOUTPUTSTATUS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOINPUTOUTPUTSTATUS"
  },
  {
    "label": "_NVVIOSYNCSTATUS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOSYNCSTATUS"
  },
  {
    "label": "_NVVIOCAPTURESTATUS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOCAPTURESTATUS"
  },
  {
    "label": "_NVVIOSTATUSTYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOSTATUSTYPE"
  },
  {
    "label": "_NVVIOCONFIGTYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOCONFIGTYPE"
  },
  {
    "label": "_NVVIOCOLORSPACE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOCOLORSPACE"
  },
  {
    "label": "_NVVIOCOMPONENTSAMPLING",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOCOMPONENTSAMPLING"
  },
  {
    "label": "_NVVIOBITSPERCOMPONENT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOBITSPERCOMPONENT"
  },
  {
    "label": "_NVVIOLINKID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOLINKID"
  },
  {
    "label": "_NVVIOANCPARITYCOMPUTATION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOANCPARITYCOMPUTATION"
  },
  {
    "label": "interface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "interface"
  },
  {
    "label": "_NVVIOCAPS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOCAPS"
  },
  {
    "label": "_NVVIOCHANNELSTATUS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOCHANNELSTATUS"
  },
  {
    "label": "_NVVIOINPUTSTATUS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOINPUTSTATUS"
  },
  {
    "label": "_NVVIOOUTPUTSTATUS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOOUTPUTSTATUS"
  },
  {
    "label": "_NVVIOSTATUS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOSTATUS"
  },
  {
    "label": "_NVVIOOUTPUTREGION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOOUTPUTREGION"
  },
  {
    "label": "_NVVIOGAMMARAMP8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOGAMMARAMP8"
  },
  {
    "label": "_NVVIOGAMMARAMP10",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOGAMMARAMP10"
  },
  {
    "label": "_NVVIOSYNCDELAY",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOSYNCDELAY"
  },
  {
    "label": "_NVVIOVIDEOMODE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOVIDEOMODE"
  },
  {
    "label": "_NVVIOSIGNALFORMATDETAIL",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOSIGNALFORMATDETAIL"
  },
  {
    "label": "_NVVIODATAFORMATDETAIL",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIODATAFORMATDETAIL"
  },
  {
    "label": "_NVVIOCOLORCONVERSION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOCOLORCONVERSION"
  },
  {
    "label": "_NVVIOGAMMACORRECTION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOGAMMACORRECTION"
  },
  {
    "label": "_NVVIOCOMPOSITERANGE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOCOMPOSITERANGE"
  },
  {
    "label": "_NVVIOOUTPUTCONFIG_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOOUTPUTCONFIG_V1"
  },
  {
    "label": "_NVVIOOUTPUTCONFIG_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOOUTPUTCONFIG_V2"
  },
  {
    "label": "_NVVIOOUTPUTCONFIG_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOOUTPUTCONFIG_V3"
  },
  {
    "label": "_NVVIOSTREAM",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOSTREAM"
  },
  {
    "label": "_NVVIOINPUTCONFIG",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOINPUTCONFIG"
  },
  {
    "label": "_NVVIOCONFIG_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOCONFIG_V1"
  },
  {
    "label": "_NVVIOCONFIG_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOCONFIG_V2"
  },
  {
    "label": "_NVVIOCONFIG_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOCONFIG_V3"
  },
  {
    "label": "_NV_VIO_TOPOLOGY",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_VIO_TOPOLOGY"
  },
  {
    "label": "_NVVIOPCILINKRATE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOPCILINKRATE"
  },
  {
    "label": "_NVVIOPCILINKWIDTH",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVVIOPCILINKWIDTH"
  },
  {
    "label": "_NVVIOPCIINFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVVIOPCIINFO"
  },
  {
    "label": "_NV_StereoRegistryProfileType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_StereoRegistryProfileType"
  },
  {
    "label": "_NV_StereoRegistryID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_StereoRegistryID"
  },
  {
    "label": "_NVAPI_STEREO_CAPS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVAPI_STEREO_CAPS"
  },
  {
    "label": "_NV_FrustumAdjustMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_FrustumAdjustMode"
  },
  {
    "label": "_NVAPI_STEREO_INIT_ACTIVATION_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVAPI_STEREO_INIT_ACTIVATION_FLAGS"
  },
  {
    "label": "_NV_StereoSwapChainMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_StereoSwapChainMode"
  },
  {
    "label": "_NVDRS_SETTING_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVDRS_SETTING_TYPE"
  },
  {
    "label": "_NVDRS_SETTING_LOCATION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NVDRS_SETTING_LOCATION"
  },
  {
    "label": "_NVDRS_GPU_SUPPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVDRS_GPU_SUPPORT"
  },
  {
    "label": "_NVDRS_BINARY_SETTING",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVDRS_BINARY_SETTING"
  },
  {
    "label": "_NVDRS_SETTING_VALUES",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVDRS_SETTING_VALUES"
  },
  {
    "label": "_NVDRS_SETTING_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVDRS_SETTING_V1"
  },
  {
    "label": "_NVDRS_APPLICATION_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVDRS_APPLICATION_V1"
  },
  {
    "label": "_NVDRS_APPLICATION_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVDRS_APPLICATION_V2"
  },
  {
    "label": "_NVDRS_APPLICATION_V3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVDRS_APPLICATION_V3"
  },
  {
    "label": "_NVDRS_APPLICATION_V4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVDRS_APPLICATION_V4"
  },
  {
    "label": "_NVDRS_PROFILE_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NVDRS_PROFILE_V1"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "pointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "pointer"
  },
  {
    "label": "pointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "pointer"
  },
  {
    "label": "_NV_DISPLAY_DRIVER_INFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_DISPLAY_DRIVER_INFO"
  },
  {
    "label": "_NV_DISPLAY_DRIVER_INFO_V2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_DISPLAY_DRIVER_INFO_V2"
  },
  {
    "label": "_NV_CLIENT_CALLBACK_SETTINGS_SUPER_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_CLIENT_CALLBACK_SETTINGS_SUPER_V1"
  },
  {
    "label": "_NV_GPU_CLIENT_PERIODIC_CALLBACK_SETTINGS_SUPER_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_PERIODIC_CALLBACK_SETTINGS_SUPER_V1"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "_NV_GPU_CLIENT_CALLBACK_DATA_SUPER_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_CALLBACK_DATA_SUPER_V1"
  },
  {
    "label": "_NV_GPU_CLIENT_UTIL_DOMAIN_ID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NV_GPU_CLIENT_UTIL_DOMAIN_ID"
  },
  {
    "label": "_NV_GPU_CLIENT_UTILIZATION_DATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_UTILIZATION_DATA_V1"
  },
  {
    "label": "_NV_GPU_CLIENT_CALLBACK_UTILIZATION_DATA_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_CALLBACK_UTILIZATION_DATA_V1"
  },
  {
    "label": "_NV_GPU_CLIENT_UTILIZATION_PERIODIC_CALLBACK_SETTINGS_V1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_GPU_CLIENT_UTILIZATION_PERIODIC_CALLBACK_SETTINGS_V1"
  },
  {
    "label": "NvAPI_Initialize()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Initialize()"
  },
  {
    "label": "NvAPI_Unload()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Unload()"
  },
  {
    "label": "NvAPI_GetErrorMessage()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetErrorMessage(NvAPI_Status nr,NvAPI_ShortString szDesc)"
  },
  {
    "label": "NvAPI_GetInterfaceVersionString()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetInterfaceVersionString(NvAPI_ShortString szDesc)"
  },
  {
    "label": "NvAPI_GetInterfaceVersionStringEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetInterfaceVersionStringEx(NvAPI_ShortString szDesc)"
  },
  {
    "label": "NvAPI_GPU_GetEDID()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetEDID(NvPhysicalGpuHandle hPhysicalGpu, NvU32 displayOutputId, NV_EDID *pEDID)"
  },
  {
    "label": "NvAPI_SetView()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SetView(NvDisplayHandle hNvDisplay, NV_VIEW_TARGET_INFO *pTargetInfo, NV_TARGET_VIEW_MODE targetView)"
  },
  {
    "label": "NvAPI_SetViewEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SetViewEx(NvDisplayHandle hNvDisplay, NV_DISPLAY_PATH_INFO *pPathInfo, NV_TARGET_VIEW_MODE displayView)"
  },
  {
    "label": "NvAPI_GetDisplayDriverVersion()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetDisplayDriverVersion(NvDisplayHandle hNvDisplay, NV_DISPLAY_DRIVER_VERSION *pVersion)"
  },
  {
    "label": "NvAPI_OGL_ExpertModeSet()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_OGL_ExpertModeSet(NvU32 expertDetailLevel,\n                                        NvU32 expertReportMask,\n                                        NvU32 expertOutputMask,\n                     NVAPI_OGLEXPERT_CALLBACK expertCallback)"
  },
  {
    "label": "NvAPI_OGL_ExpertModeGet()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_OGL_ExpertModeGet(NvU32 *pExpertDetailLevel,\n                                        NvU32 *pExpertReportMask,\n                                        NvU32 *pExpertOutputMask,\n                     NVAPI_OGLEXPERT_CALLBACK *pExpertCallback)"
  },
  {
    "label": "NvAPI_OGL_ExpertModeDefaultsSet()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_OGL_ExpertModeDefaultsSet(NvU32 expertDetailLevel,\n                                                NvU32 expertReportMask,\n                                                NvU32 expertOutputMask)"
  },
  {
    "label": "NvAPI_OGL_ExpertModeDefaultsGet()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_OGL_ExpertModeDefaultsGet(NvU32 *pExpertDetailLevel,\n                                                NvU32 *pExpertReportMask,\n                                                NvU32 *pExpertOutputMask)"
  },
  {
    "label": "NvAPI_EnumTCCPhysicalGPUs()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_EnumTCCPhysicalGPUs( NvPhysicalGpuHandle nvGPUHandle[NVAPI_MAX_PHYSICAL_GPUS], NvU32 *pGpuCount)"
  },
  {
    "label": "NvAPI_EnumLogicalGPUs()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_EnumLogicalGPUs(NvLogicalGpuHandle nvGPUHandle[NVAPI_MAX_LOGICAL_GPUS], NvU32 *pGpuCount)"
  },
  {
    "label": "NvAPI_GetPhysicalGPUsFromDisplay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetPhysicalGPUsFromDisplay(NvDisplayHandle hNvDisp, NvPhysicalGpuHandle nvGPUHandle[NVAPI_MAX_PHYSICAL_GPUS], NvU32 *pGpuCount)"
  },
  {
    "label": "NvAPI_GetPhysicalGPUFromUnAttachedDisplay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetPhysicalGPUFromUnAttachedDisplay(NvUnAttachedDisplayHandle hNvUnAttachedDisp, NvPhysicalGpuHandle *pPhysicalGpu)"
  },
  {
    "label": "NvAPI_GetLogicalGPUFromDisplay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetLogicalGPUFromDisplay(NvDisplayHandle hNvDisp, NvLogicalGpuHandle *pLogicalGPU)"
  },
  {
    "label": "NvAPI_GetLogicalGPUFromPhysicalGPU()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetLogicalGPUFromPhysicalGPU(NvPhysicalGpuHandle hPhysicalGPU, NvLogicalGpuHandle *pLogicalGPU)"
  },
  {
    "label": "NvAPI_GetPhysicalGPUsFromLogicalGPU()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetPhysicalGPUsFromLogicalGPU(NvLogicalGpuHandle hLogicalGPU,NvPhysicalGpuHandle hPhysicalGPU[NVAPI_MAX_PHYSICAL_GPUS], NvU32 *pGpuCount)"
  },
  {
    "label": "NvAPI_GetPhysicalGPUFromGPUID()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetPhysicalGPUFromGPUID(NvU32 gpuId, NvPhysicalGpuHandle *pPhysicalGPU)"
  },
  {
    "label": "NvAPI_GetGPUIDfromPhysicalGPU()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetGPUIDfromPhysicalGPU(NvPhysicalGpuHandle hPhysicalGpu, NvU32 *pGpuId)"
  },
  {
    "label": "NvAPI_GPU_GetShaderSubPipeCount()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetShaderSubPipeCount(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pCount)"
  },
  {
    "label": "NvAPI_GPU_GetGpuCoreCount()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetGpuCoreCount(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pCount)"
  },
  {
    "label": "NvAPI_GPU_GetAllOutputs()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetAllOutputs(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pOutputsMask)"
  },
  {
    "label": "NvAPI_GPU_GetConnectedOutputs()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetConnectedOutputs(NvPhysicalGpuHandle hPhysicalGpu, NvU32 *pOutputsMask)"
  },
  {
    "label": "NvAPI_GPU_GetConnectedSLIOutputs()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetConnectedSLIOutputs(NvPhysicalGpuHandle hPhysicalGpu, NvU32 *pOutputsMask)"
  },
  {
    "label": "NvAPI_GPU_GetConnectedOutputsWithLidState()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetConnectedOutputsWithLidState(NvPhysicalGpuHandle hPhysicalGpu, NvU32 *pOutputsMask)"
  },
  {
    "label": "NvAPI_GPU_GetConnectedSLIOutputsWithLidState()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetConnectedSLIOutputsWithLidState(NvPhysicalGpuHandle hPhysicalGpu, NvU32 *pOutputsMask)"
  },
  {
    "label": "NvAPI_GPU_GetSystemType()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetSystemType(NvPhysicalGpuHandle hPhysicalGpu, NV_SYSTEM_TYPE *pSystemType)"
  },
  {
    "label": "NvAPI_GPU_GetActiveOutputs()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetActiveOutputs(NvPhysicalGpuHandle hPhysicalGpu, NvU32 *pOutputsMask)"
  },
  {
    "label": "NvAPI_GPU_SetEDID()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_SetEDID(NvPhysicalGpuHandle hPhysicalGpu, NvU32 displayOutputId, NV_EDID *pEDID)"
  },
  {
    "label": "NvAPI_GPU_GetOutputType()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetOutputType(NvPhysicalGpuHandle hPhysicalGpu, NvU32 outputId, NV_GPU_OUTPUT_TYPE *pOutputType)"
  },
  {
    "label": "NvAPI_GPU_ValidateOutputCombination()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_ValidateOutputCombination(NvPhysicalGpuHandle hPhysicalGpu, NvU32 outputsMask)"
  },
  {
    "label": "NvAPI_GPU_GetFullName()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetFullName(NvPhysicalGpuHandle hPhysicalGpu, NvAPI_ShortString szName)"
  },
  {
    "label": "NvAPI_GPU_GetPCIIdentifiers()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetPCIIdentifiers(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pDeviceId,NvU32 *pSubSystemId,NvU32 *pRevisionId,NvU32 *pExtDeviceId)"
  },
  {
    "label": "NvAPI_GPU_GetGPUType()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetGPUType(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GPU_TYPE *pGpuType)"
  },
  {
    "label": "NvAPI_GPU_GetBusType()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetBusType(NvPhysicalGpuHandle hPhysicalGpu,NV_GPU_BUS_TYPE *pBusType)"
  },
  {
    "label": "NvAPI_GPU_GetBusId()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetBusId(NvPhysicalGpuHandle hPhysicalGpu, NvU32 *pBusId)"
  },
  {
    "label": "NvAPI_GPU_GetBusSlotId()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetBusSlotId(NvPhysicalGpuHandle hPhysicalGpu, NvU32 *pBusSlotId)"
  },
  {
    "label": "NvAPI_GPU_GetIRQ()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetIRQ(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pIRQ)"
  },
  {
    "label": "NvAPI_GPU_GetVbiosRevision()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetVbiosRevision(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pBiosRevision)"
  },
  {
    "label": "NvAPI_GPU_GetVbiosOEMRevision()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetVbiosOEMRevision(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pBiosRevision)"
  },
  {
    "label": "NvAPI_GPU_GetVbiosVersionString()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetVbiosVersionString(NvPhysicalGpuHandle hPhysicalGpu,NvAPI_ShortString szBiosRevision)"
  },
  {
    "label": "NvAPI_GPU_GetAGPAperture()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetAGPAperture(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pSize)"
  },
  {
    "label": "NvAPI_GPU_GetCurrentAGPRate()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetCurrentAGPRate(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pRate)"
  },
  {
    "label": "NvAPI_GPU_GetCurrentPCIEDownstreamWidth()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetCurrentPCIEDownstreamWidth(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pWidth)"
  },
  {
    "label": "NvAPI_GPU_GetPhysicalFrameBufferSize()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetPhysicalFrameBufferSize(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pSize)"
  },
  {
    "label": "NvAPI_GPU_GetVirtualFrameBufferSize()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetVirtualFrameBufferSize(NvPhysicalGpuHandle hPhysicalGpu,NvU32 *pSize)"
  },
  {
    "label": "NvAPI_GPU_GetQuadroStatus()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetQuadroStatus(NvPhysicalGpuHandle hPhysicalGpu, NvU32 *pStatus)"
  },
  {
    "label": "NvAPI_GPU_GetBoardInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetBoardInfo(NvPhysicalGpuHandle hPhysicalGpu, NV_BOARD_INFO *pBoardInfo)"
  },
  {
    "label": "NvAPI_GPU_GetRamBusWidth()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetRamBusWidth(NvPhysicalGpuHandle hPhysicalGpu, NvU32 *pBusWidth)"
  },
  {
    "label": "NvAPI_GPU_GetArchInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetArchInfo(NvPhysicalGpuHandle hPhysicalGpu, NV_GPU_ARCH_INFO *pGpuArchInfo)"
  },
  {
    "label": "NvAPI_I2CRead()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_I2CRead(NvPhysicalGpuHandle hPhysicalGpu, NV_I2C_INFO *pI2cInfo)"
  },
  {
    "label": "NvAPI_I2CWrite()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_I2CWrite(NvPhysicalGpuHandle hPhysicalGpu, NV_I2C_INFO *pI2cInfo)"
  },
  {
    "label": "NvAPI_GPU_WorkstationFeatureSetup()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_WorkstationFeatureSetup(__in NvPhysicalGpuHandle hPhysicalGpu, __in NvU32 featureEnableMask, __in NvU32 featureDisableMask)"
  },
  {
    "label": "NvAPI_GPU_WorkstationFeatureQuery()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_WorkstationFeatureQuery(__in NvPhysicalGpuHandle hPhysicalGpu, __out_opt NvU32 *pConfiguredFeatureMask, __out_opt NvU32 *pConsistentFeatureMask)"
  },
  {
    "label": "NvAPI_GPU_GetHDCPSupportStatus()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetHDCPSupportStatus(NvPhysicalGpuHandle hPhysicalGpu, NV_GPU_GET_HDCP_SUPPORT_STATUS *pGetHDCPSupportStatus)"
  },
  {
    "label": "NvAPI_GPU_CudaEnumComputeCapableGpus()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_CudaEnumComputeCapableGpus(__inout NV_COMPUTE_GPU_TOPOLOGY *pComputeTopo)"
  },
  {
    "label": "NvAPI_GPU_GetTachReading()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetTachReading(NvPhysicalGpuHandle hPhysicalGPU, NvU32 *pValue)"
  },
  {
    "label": "NvAPI_GPU_GetECCStatusInfo()",
    "kind": "Method",
    "detail": "Function (fn)",
    "insertText": "NvAPI_GPU_GetECCStatusInfo(NvPhysicalGpuHandle hPhysicalGpu,\n//!                                           NV_GPU_ECC_STATUS_INFO *pECCStatusInfo)"
  },
  {
    "label": "NvAPI_GPU_GetECCStatusInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetECCStatusInfo(NvPhysicalGpuHandle hPhysicalGpu,\n                                           NV_GPU_ECC_STATUS_INFO *pECCStatusInfo)"
  },
  {
    "label": "NvAPI_GPU_GetECCErrorInfo()",
    "kind": "Method",
    "detail": "Function (fn)",
    "insertText": "NvAPI_GPU_GetECCErrorInfo(NvPhysicalGpuHandle hPhysicalGpu,\n//!                                          NV_GPU_ECC_ERROR_INFO *pECCErrorInfo)"
  },
  {
    "label": "NvAPI_GPU_GetECCErrorInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetECCErrorInfo(NvPhysicalGpuHandle hPhysicalGpu,\n                                          NV_GPU_ECC_ERROR_INFO *pECCErrorInfo)"
  },
  {
    "label": "NvAPI_GPU_ResetECCErrorInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_ResetECCErrorInfo(NvPhysicalGpuHandle hPhysicalGpu, NvU8 bResetCurrent,\n                                            NvU8 bResetAggregate)"
  },
  {
    "label": "NvAPI_GPU_GetECCConfigurationInfo()",
    "kind": "Method",
    "detail": "Function (fn)",
    "insertText": "NvAPI_GPU_GetECCConfigurationInfo(NvPhysicalGpuHandle hPhysicalGpu,\n//!                             NV_GPU_ECC_CONFIGURATION_INFO *pECCConfigurationInfo)"
  },
  {
    "label": "NvAPI_GPU_GetECCConfigurationInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetECCConfigurationInfo(NvPhysicalGpuHandle hPhysicalGpu,\n                                                  NV_GPU_ECC_CONFIGURATION_INFO *pECCConfigurationInfo)"
  },
  {
    "label": "NvAPI_GPU_SetECCConfiguration()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_SetECCConfiguration(NvPhysicalGpuHandle hPhysicalGpu, NvU8 bEnable,\n                                              NvU8 bEnableImmediately)"
  },
  {
    "label": "NvAPI_GPU_QueryWorkstationFeatureSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_QueryWorkstationFeatureSupport(NvPhysicalGpuHandle physicalGpu, NV_GPU_WORKSTATION_FEATURE_TYPE gpuWorkstationFeature)"
  },
  {
    "label": "NvAPI_GPU_SetScanoutIntensity()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_SetScanoutIntensity(NvU32 displayId, NV_SCANOUT_INTENSITY_DATA* scanoutIntensityData, int *pbSticky)"
  },
  {
    "label": "NvAPI_GPU_GetScanoutIntensityState()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetScanoutIntensityState(__in NvU32 displayId, __inout NV_SCANOUT_INTENSITY_STATE_DATA* scanoutIntensityStateData)"
  },
  {
    "label": "NvAPI_GPU_SetScanoutWarping()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_SetScanoutWarping(NvU32 displayId, NV_SCANOUT_WARPING_DATA* scanoutWarpingData, int* piMaxNumVertices, int* pbSticky)"
  },
  {
    "label": "NvAPI_GPU_GetScanoutWarpingState()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetScanoutWarpingState(__in NvU32 displayId, __inout NV_SCANOUT_WARPING_STATE_DATA* scanoutWarpingStateData)"
  },
  {
    "label": "NvAPI_GPU_SetScanoutCompositionParameter()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_SetScanoutCompositionParameter(NvU32 displayId, NV_GPU_SCANOUT_COMPOSITION_PARAMETER parameter,\n                                                         NV_GPU_SCANOUT_COMPOSITION_PARAMETER_VALUE parameterValue, float *pContainer)"
  },
  {
    "label": "NvAPI_GPU_GetScanoutCompositionParameter()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetScanoutCompositionParameter(__in NvU32 displayId, __in NV_GPU_SCANOUT_COMPOSITION_PARAMETER parameter,\n                                                         __out NV_GPU_SCANOUT_COMPOSITION_PARAMETER_VALUE *parameterData, __out float *pContainer)"
  },
  {
    "label": "NvAPI_GPU_GetScanoutConfiguration()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetScanoutConfiguration(NvU32 displayId, NvSBox* desktopRect, NvSBox* scanoutRect)"
  },
  {
    "label": "NvAPI_GPU_GetScanoutConfigurationEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetScanoutConfigurationEx(__in NvU32 displayId, __inout NV_SCANOUT_INFORMATION *pScanoutInformation)"
  },
  {
    "label": "NvAPI_GPU_GetAdapterIdFromPhysicalGpu()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetAdapterIdFromPhysicalGpu(NvPhysicalGpuHandle hPhysicalGpu, void *pOSAdapterId)"
  },
  {
    "label": "NvAPI_GPU_GetVirtualizationInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetVirtualizationInfo(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GPU_VIRTUALIZATION_INFO *pVirtualizationInfo)"
  },
  {
    "label": "NvAPI_GPU_GetLogicalGpuInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetLogicalGpuInfo(__in NvLogicalGpuHandle hLogicalGpu, __inout NV_LOGICAL_GPU_DATA *pLogicalGpuData)"
  },
  {
    "label": "NvAPI_GPU_GetLicensableFeatures()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetLicensableFeatures(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_LICENSABLE_FEATURES *pLicensableFeatures)"
  },
  {
    "label": "NvAPI_GPU_GetVRReadyData()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetVRReadyData(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GPU_VR_READY *pGpuVrReadyData)"
  },
  {
    "label": "NvAPI_GPU_GetPerfDecreaseInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetPerfDecreaseInfo(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NvU32 *pPerfDecrInfo)"
  },
  {
    "label": "NvAPI_GPU_GetPstatesInfoEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetPstatesInfoEx(NvPhysicalGpuHandle hPhysicalGpu, NV_GPU_PERF_PSTATES_INFO *pPerfPstatesInfo, NvU32 inputFlags)"
  },
  {
    "label": "NvAPI_GPU_GetPstates20()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetPstates20(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GPU_PERF_PSTATES20_INFO *pPstatesInfo)"
  },
  {
    "label": "NvAPI_GPU_GetCurrentPstate()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetCurrentPstate(NvPhysicalGpuHandle hPhysicalGpu, NV_GPU_PERF_PSTATE_ID *pCurrentPstate)"
  },
  {
    "label": "NvAPI_GPU_GetDynamicPstatesInfoEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetDynamicPstatesInfoEx(NvPhysicalGpuHandle hPhysicalGpu, NV_GPU_DYNAMIC_PSTATES_INFO_EX *pDynamicPstatesInfoEx)"
  },
  {
    "label": "NvAPI_GPU_GetThermalSettings()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetThermalSettings(NvPhysicalGpuHandle hPhysicalGpu, NvU32 sensorIndex, NV_GPU_THERMAL_SETTINGS *pThermalSettings)"
  },
  {
    "label": "NvAPI_GPU_GetAllClockFrequencies()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetAllClockFrequencies(__in NvPhysicalGpuHandle hPhysicalGPU, __inout NV_GPU_CLOCK_FREQUENCIES *pClkFreqs)"
  },
  {
    "label": "NvAPI_GPU_QueryIlluminationSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_QueryIlluminationSupport(__inout NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM *pIlluminationSupportInfo)"
  },
  {
    "label": "NvAPI_GPU_GetIllumination()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetIllumination(NV_GPU_GET_ILLUMINATION_PARM *pIlluminationInfo)"
  },
  {
    "label": "NvAPI_GPU_SetIllumination()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_SetIllumination(NV_GPU_SET_ILLUMINATION_PARM *pIlluminationInfo)"
  },
  {
    "label": "NvAPI_GPU_ClientIllumDevicesGetInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_ClientIllumDevicesGetInfo(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GPU_CLIENT_ILLUM_DEVICE_INFO_PARAMS *pIllumDevicesInfo)"
  },
  {
    "label": "NvAPI_GPU_ClientIllumDevicesGetControl()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_ClientIllumDevicesGetControl(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GPU_CLIENT_ILLUM_DEVICE_CONTROL_PARAMS *pClientIllumDevicesControl)"
  },
  {
    "label": "NvAPI_GPU_ClientIllumDevicesSetControl()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_ClientIllumDevicesSetControl(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GPU_CLIENT_ILLUM_DEVICE_CONTROL_PARAMS *pClientIllumDevicesControl)"
  },
  {
    "label": "NvAPI_GPU_ClientIllumZonesGetInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_ClientIllumZonesGetInfo(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GPU_CLIENT_ILLUM_ZONE_INFO_PARAMS *pIllumZonesInfo)"
  },
  {
    "label": "NvAPI_GPU_ClientIllumZonesGetControl()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_ClientIllumZonesGetControl(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_PARAMS *pIllumZonesControl)"
  },
  {
    "label": "NvAPI_GPU_ClientIllumZonesSetControl()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_ClientIllumZonesSetControl(__in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GPU_CLIENT_ILLUM_ZONE_CONTROL_PARAMS *pIllumZonesControl)"
  },
  {
    "label": "NvAPI_Event_RegisterCallback()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Event_RegisterCallback(PNV_EVENT_REGISTER_CALLBACK eventCallback,\n                                             NvEventHandle* phClient)"
  },
  {
    "label": "NvAPI_Event_UnregisterCallback()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Event_UnregisterCallback(NvEventHandle hClient)"
  },
  {
    "label": "NvAPI_EnumNvidiaDisplayHandle()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_EnumNvidiaDisplayHandle(NvU32 thisEnum, NvDisplayHandle *pNvDispHandle)"
  },
  {
    "label": "NvAPI_EnumNvidiaUnAttachedDisplayHandle()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_EnumNvidiaUnAttachedDisplayHandle(NvU32 thisEnum, NvUnAttachedDisplayHandle *pNvUnAttachedDispHandle)"
  },
  {
    "label": "NvAPI_CreateDisplayFromUnAttachedDisplay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_CreateDisplayFromUnAttachedDisplay(NvUnAttachedDisplayHandle hNvUnAttachedDisp, NvDisplayHandle *pNvDisplay)"
  },
  {
    "label": "NvAPI_GetAssociatedNvidiaDisplayHandle()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetAssociatedNvidiaDisplayHandle(const char *szDisplayName, NvDisplayHandle *pNvDispHandle)"
  },
  {
    "label": "NvAPI_DISP_GetAssociatedUnAttachedNvidiaDisplayHandle()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_GetAssociatedUnAttachedNvidiaDisplayHandle(const char *szDisplayName, NvUnAttachedDisplayHandle *pNvUnAttachedDispHandle)"
  },
  {
    "label": "NvAPI_GetAssociatedNvidiaDisplayName()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetAssociatedNvidiaDisplayName(NvDisplayHandle NvDispHandle, NvAPI_ShortString szDisplayName)"
  },
  {
    "label": "NvAPI_GetUnAttachedAssociatedDisplayName()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetUnAttachedAssociatedDisplayName(NvUnAttachedDisplayHandle hNvUnAttachedDisp, NvAPI_ShortString szDisplayName)"
  },
  {
    "label": "NvAPI_EnableHWCursor()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_EnableHWCursor(NvDisplayHandle hNvDisplay)"
  },
  {
    "label": "NvAPI_DisableHWCursor()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DisableHWCursor(NvDisplayHandle hNvDisplay)"
  },
  {
    "label": "NvAPI_GetVBlankCounter()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetVBlankCounter(NvDisplayHandle hNvDisplay, NvU32 *pCounter)"
  },
  {
    "label": "NvAPI_SetRefreshRateOverride()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SetRefreshRateOverride(NvDisplayHandle hNvDisplay, NvU32 outputsMask, float refreshRate, NvU32 bSetDeferred)"
  },
  {
    "label": "NvAPI_GetAssociatedDisplayOutputId()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetAssociatedDisplayOutputId(NvDisplayHandle hNvDisplay, NvU32 *pOutputId)"
  },
  {
    "label": "NvAPI_GetDisplayPortInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetDisplayPortInfo(__in_opt NvDisplayHandle hNvDisplay, __in NvU32 outputId, __inout NV_DISPLAY_PORT_INFO *pInfo)"
  },
  {
    "label": "NvAPI_SetDisplayPort()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SetDisplayPort(NvDisplayHandle hNvDisplay, NvU32 outputId, NV_DISPLAY_PORT_CONFIG *pCfg)"
  },
  {
    "label": "NvAPI_GetHDMISupportInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetHDMISupportInfo(__in_opt NvDisplayHandle hNvDisplay, __in NvU32 outputId, __inout NV_HDMI_SUPPORT_INFO *pInfo)"
  },
  {
    "label": "NvAPI_Disp_InfoFrameControl()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_InfoFrameControl(__in NvU32 displayId, __inout NV_INFOFRAME_DATA *pInfoframeData)"
  },
  {
    "label": "NvAPI_Disp_ColorControl()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_ColorControl(NvU32 displayId, NV_COLOR_DATA *pColorData)"
  },
  {
    "label": "NvAPI_Disp_GetHdrCapabilities()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_GetHdrCapabilities(__in NvU32 displayId, __inout NV_HDR_CAPABILITIES *pHdrCapabilities)"
  },
  {
    "label": "NvAPI_Disp_HdrColorControl()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_HdrColorControl(__in NvU32 displayId, __inout NV_HDR_COLOR_DATA *pHdrColorData)"
  },
  {
    "label": "NvAPI_Disp_SetSourceColorSpace()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_SetSourceColorSpace(__in NvU32 displayId, __in NV_COLORSPACE_TYPE colorSpaceType)"
  },
  {
    "label": "NvAPI_Disp_GetSourceColorSpace()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_GetSourceColorSpace(__in NvU32 displayId, __inout NV_COLORSPACE_TYPE* pColorSpaceType, NvU64 sourcePID)"
  },
  {
    "label": "NvAPI_Disp_SetSourceHdrMetadata()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_SetSourceHdrMetadata(__in NvU32 displayId, __in NV_HDR_METADATA* pMetadata)"
  },
  {
    "label": "NvAPI_Disp_GetSourceHdrMetadata()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_GetSourceHdrMetadata(__in NvU32 displayId, __inout NV_HDR_METADATA* pMetadata, NvU64 sourcePID)"
  },
  {
    "label": "NvAPI_Disp_SetOutputMode()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_SetOutputMode(__in NvU32 displayId, __inout NV_DISPLAY_OUTPUT_MODE* pDisplayMode)"
  },
  {
    "label": "NvAPI_Disp_GetOutputMode()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_GetOutputMode(__in NvU32 displayId, __inout NV_DISPLAY_OUTPUT_MODE* pDisplayMode)"
  },
  {
    "label": "NvAPI_Disp_SetHdrToneMapping()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_SetHdrToneMapping(__in NvU32 displayId, __in NV_HDR_TONEMAPPING_METHOD hdrTonemapping)"
  },
  {
    "label": "NvAPI_Disp_GetHdrToneMapping()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Disp_GetHdrToneMapping(__in NvU32 displayId, __inout NV_HDR_TONEMAPPING_METHOD* pHdrTonemapping)"
  },
  {
    "label": "NvAPI_DISP_GetTiming()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_GetTiming( __in NvU32 displayId,__in NV_TIMING_INPUT *timingInput, __out NV_TIMING *pTiming)"
  },
  {
    "label": "NvAPI_DISP_GetMonitorCapabilities()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_GetMonitorCapabilities(__in NvU32 displayId, __inout NV_MONITOR_CAPABILITIES *pMonitorCapabilities)"
  },
  {
    "label": "NvAPI_DISP_EnumCustomDisplay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_EnumCustomDisplay( __in NvU32 displayId, __in NvU32 index, __inout NV_CUSTOM_DISPLAY *pCustDisp)"
  },
  {
    "label": "NvAPI_GetView()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetView(NvDisplayHandle hNvDisplay, NV_VIEW_TARGET_INFO *pTargets, NvU32 *pTargetMaskCount, NV_TARGET_VIEW_MODE *pTargetView)"
  },
  {
    "label": "NvAPI_GetViewEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetViewEx(NvDisplayHandle hNvDisplay, NV_DISPLAY_PATH_INFO *pPathInfo, NvU32 *pPathCount, NV_TARGET_VIEW_MODE *pTargetViewMode)"
  },
  {
    "label": "NvAPI_GetSupportedViews()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetSupportedViews(NvDisplayHandle hNvDisplay, NV_TARGET_VIEW_MODE *pTargetViews, NvU32 *pViewCount)"
  },
  {
    "label": "display()",
    "kind": "Method",
    "detail": "Function (of)",
    "insertText": "display(Eg: \"\\\\DISPLAY1\" to\n//!                              retrieve the displayId for.\n//! \\param [out]    displayId    Display ID of the requested display.\n//!\n//! retval ::NVAPI_OK:                          Capabilties have been returned.\n//! retval ::NVAPI_INVALID_ARGUMENT:            One or more args passed in are invalid.\n//! retval ::NVAPI_API_NOT_INTIALIZED:          The NvAPI API needs to be initialized first\n//! retval ::NVAPI_NO_IMPLEMENTATION:           This entrypoint not available\n//! retval ::NVAPI_ERROR:                       Miscellaneous error occurred\n//!\n//! \\ingroup dispcontrol\n///////////////////////////////////////////////////////////////////////////////\nNVAPI_INTERFACE NvAPI_DISP_GetDisplayIdByDisplayName(const char *displayName, NvU32* displayId)"
  },
  {
    "label": "NvAPI_DISP_GetAdaptiveSyncData()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_GetAdaptiveSyncData(__in NvU32 displayId, __inout NV_GET_ADAPTIVE_SYNC_DATA *pAdaptiveSyncData)"
  },
  {
    "label": "NvAPI_DISP_SetAdaptiveSyncData()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_SetAdaptiveSyncData(__in NvU32 displayId, __in NV_SET_ADAPTIVE_SYNC_DATA *pAdaptiveSyncData)"
  },
  {
    "label": "NvAPI_DISP_GetVirtualRefreshRateData()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_GetVirtualRefreshRateData(__in NvU32 displayId, __inout NV_GET_VIRTUAL_REFRESH_RATE_DATA *pVirtualRefreshRateData)"
  },
  {
    "label": "NvAPI_DISP_SetVirtualRefreshRateData()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_SetVirtualRefreshRateData(__in NvU32 displayId, __in NV_SET_VIRTUAL_REFRESH_RATE_DATA *pVirtualRefreshRateData)"
  },
  {
    "label": "NvAPI_DISP_SetPreferredStereoDisplay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_SetPreferredStereoDisplay(__in NV_SET_PREFERRED_STEREO_DISPLAY *pPreferredStereoDisplay)"
  },
  {
    "label": "NvAPI_DISP_GetPreferredStereoDisplay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_GetPreferredStereoDisplay(__inout NV_GET_PREFERRED_STEREO_DISPLAY *pPreferredStereoDisplay)"
  },
  {
    "label": "NvAPI_DISP_GetNvManagedDedicatedDisplays()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_GetNvManagedDedicatedDisplays(__inout NvU32* pDedicatedDisplayCount, __inout NV_MANAGED_DEDICATED_DISPLAY_INFO* pDedicatedDisplays)"
  },
  {
    "label": "NvAPI_DISP_AcquireDedicatedDisplay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_AcquireDedicatedDisplay(__in NvU32 displayId, __inout NvU64* pDisplaySourceHandle)"
  },
  {
    "label": "NvAPI_DISP_ReleaseDedicatedDisplay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DISP_ReleaseDedicatedDisplay(__in NvU32 displayId)"
  },
  {
    "label": "NvAPI_Mosaic_GetSupportedTopoInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Mosaic_GetSupportedTopoInfo(NV_MOSAIC_SUPPORTED_TOPO_INFO *pSupportedTopoInfo, NV_MOSAIC_TOPO_TYPE type)"
  },
  {
    "label": "NvAPI_Mosaic_GetTopoGroup()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Mosaic_GetTopoGroup(NV_MOSAIC_TOPO_BRIEF *pTopoBrief, NV_MOSAIC_TOPO_GROUP *pTopoGroup)"
  },
  {
    "label": "NvAPI_Mosaic_GetOverlapLimits()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Mosaic_GetOverlapLimits(NV_MOSAIC_TOPO_BRIEF *pTopoBrief, NV_MOSAIC_DISPLAY_SETTING *pDisplaySetting, NvS32 *pMinOverlapX, NvS32 *pMaxOverlapX, NvS32 *pMinOverlapY, NvS32 *pMaxOverlapY)"
  },
  {
    "label": "NvAPI_Mosaic_SetCurrentTopo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Mosaic_SetCurrentTopo(NV_MOSAIC_TOPO_BRIEF *pTopoBrief, NV_MOSAIC_DISPLAY_SETTING *pDisplaySetting, NvS32 overlapX, NvS32 overlapY, NvU32 enable)"
  },
  {
    "label": "NvAPI_Mosaic_GetCurrentTopo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Mosaic_GetCurrentTopo(NV_MOSAIC_TOPO_BRIEF *pTopoBrief, NV_MOSAIC_DISPLAY_SETTING *pDisplaySetting, NvS32 *pOverlapX, NvS32 *pOverlapY)"
  },
  {
    "label": "NvAPI_Mosaic_EnableCurrentTopo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Mosaic_EnableCurrentTopo(NvU32 enable)"
  },
  {
    "label": "NvAPI_GetSupportedMosaicTopologies()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetSupportedMosaicTopologies(NV_MOSAIC_SUPPORTED_TOPOLOGIES *pMosaicTopos)"
  },
  {
    "label": "NvAPI_GetCurrentMosaicTopology()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GetCurrentMosaicTopology(NV_MOSAIC_TOPOLOGY *pMosaicTopo, NvU32 *pEnabled)"
  },
  {
    "label": "NvAPI_SetCurrentMosaicTopology()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SetCurrentMosaicTopology(NV_MOSAIC_TOPOLOGY *pMosaicTopo)"
  },
  {
    "label": "NvAPI_EnableCurrentMosaicTopology()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_EnableCurrentMosaicTopology(NvU32 enable)"
  },
  {
    "label": "NvAPI_GSync_EnumSyncDevices()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GSync_EnumSyncDevices(__out NvGSyncDeviceHandle nvGSyncHandles[NVAPI_MAX_GSYNC_DEVICES], __out NvU32 *gsyncCount)"
  },
  {
    "label": "NvAPI_GSync_QueryCapabilities()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GSync_QueryCapabilities(__in NvGSyncDeviceHandle hNvGSyncDevice, __inout NV_GSYNC_CAPABILITIES *pNvGSyncCapabilities)"
  },
  {
    "label": "NvAPI_GSync_GetControlParameters()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GSync_GetControlParameters(__in NvGSyncDeviceHandle hNvGSyncDevice, __inout NV_GSYNC_CONTROL_PARAMS *pGsyncControls)"
  },
  {
    "label": "NvAPI_GSync_SetControlParameters()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GSync_SetControlParameters(__in NvGSyncDeviceHandle hNvGSyncDevice, __inout NV_GSYNC_CONTROL_PARAMS *pGsyncControls)"
  },
  {
    "label": "NvAPI_GSync_AdjustSyncDelay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GSync_AdjustSyncDelay(__in NvGSyncDeviceHandle hNvGSyncDevice, __in NVAPI_GSYNC_DELAY_TYPE delayType, __inout NV_GSYNC_DELAY *pGsyncDelay, __out_opt NvU32* syncSteps)"
  },
  {
    "label": "NvAPI_GSync_GetSyncStatus()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GSync_GetSyncStatus(__in NvGSyncDeviceHandle hNvGSyncDevice, __in NvPhysicalGpuHandle hPhysicalGpu, __inout NV_GSYNC_STATUS *status)"
  },
  {
    "label": "NvAPI_GSync_GetStatusParameters()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GSync_GetStatusParameters(NvGSyncDeviceHandle hNvGSyncDevice, NV_GSYNC_STATUS_PARAMS *pStatusParams)"
  },
  {
    "label": "NvAPI_D3D9_RegisterResource()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_RegisterResource(IDirect3DResource9* pResource)"
  },
  {
    "label": "NvAPI_D3D9_UnregisterResource()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_UnregisterResource(IDirect3DResource9* pResource)"
  },
  {
    "label": "NvAPI_D3D9_AliasSurfaceAsTexture()",
    "kind": "Method",
    "detail": "Function (fn)",
    "insertText": "NvAPI_D3D9_AliasSurfaceAsTexture(IDirect3DDevice9* pDev,\n//!                                              IDirect3DSurface9* pSurface,\n//!                                              IDirect3DTexture9 **ppTexture,\n//!                                              DWORD dwFlag)"
  },
  {
    "label": "NvAPI_D3D9_AliasSurfaceAsTexture()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_AliasSurfaceAsTexture(IDirect3DDevice9* pDev,\n                                                 IDirect3DSurface9* pSurface,\n                                                 IDirect3DTexture9 **ppTexture,\n                                                 DWORD dwFlag)"
  },
  {
    "label": "NvAPI_D3D9_StretchRectEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_StretchRectEx(IDirect3DDevice9 * pDevice,\n                                         IDirect3DResource9 * pSourceResource,\n                                         CONST RECT * pSourceRect,\n                                         IDirect3DResource9 * pDestResource,\n                                         CONST RECT * pDestRect,\n                                         D3DTEXTUREFILTERTYPE Filter)"
  },
  {
    "label": "NvAPI_D3D9_ClearRT()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_ClearRT(IDirect3DDevice9 * pDevice,\n                                   NvU32 dwNumRects,\n                                   CONST RECT * pRects,\n                                   float r, float g, float b, float a)"
  },
  {
    "label": "NvAPI_D3D9_GetSurfaceHandle()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_GetSurfaceHandle(IDirect3DSurface9 *pSurface, \n                                        NVDX_ObjectHandle *pHandle)"
  },
  {
    "label": "NvAPI_D3D9_VideoSetStereoInfo()",
    "kind": "Method",
    "detail": "Function (fn)",
    "insertText": "NvAPI_D3D9_VideoSetStereoInfo(IDirect3DDevice9 *pDev,\n//!                                            NV_DX_VIDEO_STEREO_INFO *pStereoInfo)"
  },
  {
    "label": "NvAPI_D3D9_VideoSetStereoInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_VideoSetStereoInfo(IDirect3DDevice9 *pDev,\n                                              NV_DX_VIDEO_STEREO_INFO *pStereoInfo)"
  },
  {
    "label": "NvAPI_D3D10_SetDepthBoundsTest()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D10_SetDepthBoundsTest(ID3D10Device *pDev,\n                                               NvU32 bEnable,\n                                               float fMinDepth,\n                                               float fMaxDepth)"
  },
  {
    "label": "NvAPI_D3D11_IsNvShaderExtnOpCodeSupported()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_IsNvShaderExtnOpCodeSupported(__in  IUnknown *pDev,\n                                                          __in  NvU32 opCode,\n                                                          __out bool *pSupported)"
  },
  {
    "label": "NvAPI_D3D11_SetNvShaderExtnSlot()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_SetNvShaderExtnSlot(__in IUnknown *pDev,\n                                                __in NvU32 uavSlot)"
  },
  {
    "label": "NvAPI_D3D12_SetNvShaderExtnSlotSpace()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_SetNvShaderExtnSlotSpace(__in IUnknown *pDev,\n                                                __in NvU32 uavSlot,\n                                                __in NvU32 uavSpace)"
  },
  {
    "label": "NvAPI_D3D12_SetNvShaderExtnSlotSpaceLocalThread()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_SetNvShaderExtnSlotSpaceLocalThread(__in IUnknown *pDev,\n                                                                __in NvU32 uavSlot,\n                                                                __in NvU32 uavSpace)"
  },
  {
    "label": "NvAPI_D3D11_SetNvShaderExtnSlotLocalThread()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_SetNvShaderExtnSlotLocalThread(__in IUnknown *pDev,\n                                                           __in NvU32 uavSlot)"
  },
  {
    "label": "NvAPI_D3D11_BeginUAVOverlapEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_BeginUAVOverlapEx(__in  IUnknown *pDeviceOrContext, __in NvU32 insertWFIFlags)"
  },
  {
    "label": "NvAPI_D3D11_BeginUAVOverlap()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_BeginUAVOverlap(__in  IUnknown *pDeviceOrContext)"
  },
  {
    "label": "NvAPI_D3D11_EndUAVOverlap()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_EndUAVOverlap(__in  IUnknown *pDeviceOrContext)"
  },
  {
    "label": "NvAPI_D3D11_GetResourceHandle()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_GetResourceHandle(ID3D11Device *pDev,\n                                              ID3D11Resource* pResource,\n                                              NVDX_ObjectHandle* phObject)"
  },
  {
    "label": "NvAPI_D3D_SetFPSIndicatorState()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_SetFPSIndicatorState(IUnknown *pDev, NvU8 doEnable)"
  },
  {
    "label": "NvAPI_D3D9_Present()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_Present(IDirect3DDevice9 *pDevice,\n                                   IDirect3DSwapChain9 *pSwapChain,\n                                   const RECT *pSourceRect,\n                                   const RECT *pDestRect,\n                                   HWND hDestWindowOverride,\n                                   const RGNDATA *pDirtyRegion)"
  },
  {
    "label": "NvAPI_D3D9_QueryFrameCount()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_QueryFrameCount(IDirect3DDevice9 *pDevice,\n                                           NvU32 *pFrameCount)"
  },
  {
    "label": "NvAPI_D3D9_ResetFrameCount()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_ResetFrameCount(IDirect3DDevice9 *pDevice)"
  },
  {
    "label": "NvAPI_D3D9_QueryMaxSwapGroup()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_QueryMaxSwapGroup(IDirect3DDevice9 *pDevice, \n                                             NvU32 *pMaxGroups, \n                                             NvU32 *pMaxBarriers)"
  },
  {
    "label": "NvAPI_D3D9_QuerySwapGroup()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_QuerySwapGroup(IDirect3DDevice9 *pDevice, \n                                          IDirect3DSwapChain9 *pSwapChain, \n                                          NvU32 *pSwapGroup, \n                                          NvU32 *pSwapBarrier)"
  },
  {
    "label": "NvAPI_D3D9_JoinSwapGroup()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_JoinSwapGroup(IDirect3DDevice9 *pDevice, \n                                         IDirect3DSwapChain9 *pSwapChain, \n                                         NvU32 group,\n                                         BOOL blocking)"
  },
  {
    "label": "NvAPI_D3D9_BindSwapBarrier()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_BindSwapBarrier(IDirect3DDevice9 *pDevice, \n                                           NvU32 group, \n                                           NvU32 barrier)"
  },
  {
    "label": "NvAPI_D3D1x_Present()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D1x_Present(IUnknown *pDevice,\n                                    IDXGISwapChain *pSwapChain,\n                                    UINT SyncInterval,\n                                    UINT Flags)"
  },
  {
    "label": "NvAPI_D3D1x_QueryFrameCount()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D1x_QueryFrameCount(IUnknown *pDevice,\n                                            NvU32 *pFrameCount)"
  },
  {
    "label": "NvAPI_D3D1x_ResetFrameCount()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D1x_ResetFrameCount(IUnknown *pDevice)"
  },
  {
    "label": "NvAPI_D3D1x_QueryMaxSwapGroup()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D1x_QueryMaxSwapGroup(IUnknown *pDevice, \n                                              NvU32 *pMaxGroups, \n                                              NvU32 *pMaxBarriers)"
  },
  {
    "label": "NvAPI_D3D1x_QuerySwapGroup()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D1x_QuerySwapGroup(IUnknown *pDevice, \n                                           IDXGISwapChain  *pSwapChain, \n                                           NvU32 *pSwapGroup, \n                                           NvU32 *pSwapBarrier)"
  },
  {
    "label": "NvAPI_D3D1x_JoinSwapGroup()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D1x_JoinSwapGroup(IUnknown *pDevice, \n                                          IDXGISwapChain  *pSwapChain, \n                                          NvU32 group,\n                                          BOOL blocking)"
  },
  {
    "label": "NvAPI_D3D1x_BindSwapBarrier()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D1x_BindSwapBarrier(IUnknown *pDevice, \n                                            NvU32 group, \n                                            NvU32 barrier)"
  },
  {
    "label": "NvAPI_D3D12_QueryPresentBarrierSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_QueryPresentBarrierSupport(__in ID3D12Device *pDevice, __out bool *pSupported)"
  },
  {
    "label": "NvAPI_D3D12_CreatePresentBarrierClient()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreatePresentBarrierClient(__in ID3D12Device *pDevice,\n                                                       __in IDXGISwapChain *pSwapChain,\n                                                       __out NvPresentBarrierClientHandle *pPresentBarrierClient)"
  },
  {
    "label": "NvAPI_D3D12_RegisterPresentBarrierResources()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_RegisterPresentBarrierResources(__in NvPresentBarrierClientHandle presentBarrierClient,\n                                                            __in ID3D12Fence                  *pFence,\n                                                            __in ID3D12Resource               **ppResources,\n                                                            __in NvU32                        numResources)"
  },
  {
    "label": "NvAPI_DestroyPresentBarrierClient()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DestroyPresentBarrierClient(__in NvPresentBarrierClientHandle presentBarrierClient)"
  },
  {
    "label": "NvAPI_JoinPresentBarrier()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_JoinPresentBarrier(__in NvPresentBarrierClientHandle presentBarrierClient, __in NV_JOIN_PRESENT_BARRIER_PARAMS *pParams)"
  },
  {
    "label": "NvAPI_LeavePresentBarrier()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_LeavePresentBarrier(__in NvPresentBarrierClientHandle presentBarrierClient)"
  },
  {
    "label": "NvAPI_QueryPresentBarrierFrameStatistics()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_QueryPresentBarrierFrameStatistics(__in NvPresentBarrierClientHandle presentBarrierClient,\n                                                         __out NV_PRESENT_BARRIER_FRAME_STATISTICS *pFrameStats)"
  },
  {
    "label": "NvAPI_D3D12_CreateDDisplayPresentBarrierClient()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateDDisplayPresentBarrierClient(__in ID3D12Device *pDevice, __in NvU32 sourceId, __out NvPresentBarrierClientHandle *pPresentBarrierClient)"
  },
  {
    "label": "NvAPI_D3D11_CreateRasterizerState()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateRasterizerState(__in ID3D11Device *pDevice,\n                                                  __in const NvAPI_D3D11_RASTERIZER_DESC_EX *pRasterizerDesc,\n                                                  __out ID3D11RasterizerState **ppRasterizerState)"
  },
  {
    "label": "NvAPI_D3D_ConfigureAnsel()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_ConfigureAnsel(__in IUnknown *pDevice,\n                                         __in NVAPI_ANSEL_CONFIGURATION_STRUCT *pNLSConfig)"
  },
  {
    "label": "NvAPI_D3D11_CreateTiledTexture2DArray()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateTiledTexture2DArray(__in       ID3D11Device           *pDevice,\n                                                      __in const D3D11_TEXTURE2D_DESC   *pDesc,\n                                                      __in const D3D11_SUBRESOURCE_DATA *pInitialData,\n                                                      __out      ID3D11Texture2D        **ppTexture2D)"
  },
  {
    "label": "NvAPI_D3D11_CheckFeatureSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CheckFeatureSupport(__in  ID3D11Device        *pDevice,\n                                                __in  NV_D3D11_FEATURE    Feature,\n                                                __out void                *pFeatureSupportData,\n                                                __in  UINT                FeatureSupportDataSize)"
  },
  {
    "label": "NvAPI_D3D11_CreateImplicitMSAATexture2D()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateImplicitMSAATexture2D(__in  ID3D11Device                 *pDevice,\n                                                        __in  const D3D11_TEXTURE2D_DESC   *pDesc,\n                                                        __out ID3D11Texture2D              **ppTexture2D)"
  },
  {
    "label": "NvAPI_D3D12_CreateCommittedImplicitMSAATexture2D()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateCommittedImplicitMSAATexture2D(\n        __in  ID3D12Device* pDevice,\n        __in  const D3D12_HEAP_PROPERTIES *pHeapProperties,\n        D3D12_HEAP_FLAGS HeapFlags,\n        __in  const D3D12_RESOURCE_DESC *pDesc,\n        D3D12_RESOURCE_STATES InitialResourceState,\n        __in_opt  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\n        REFIID riidResource,\n        __out void **ppvResource)"
  },
  {
    "label": "NvAPI_D3D11_ResolveSubresourceRegion()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_ResolveSubresourceRegion(\n    __in  ID3D11Device     *pDevice,\n    __in  ID3D11Texture2D  *pDstResource,\n    __in  UINT              DstSubresource,\n    __in  UINT              DstX,\n    __in  UINT              DstY,\n    __in  ID3D11Texture2D  *pSrcResource,\n    __in  UINT              SrcSubresource,\n    __in_opt const RECT    *pSrcRect,\n    __in  DXGI_FORMAT       Format,\n    __in  NV_RESOLVE_MODE   ResolveMode)"
  },
  {
    "label": "NvAPI_D3D12_ResolveSubresourceRegion()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_ResolveSubresourceRegion(\n    __in     ID3D12GraphicsCommandList1*pCommandList,\n    __in     ID3D12Resource            *pDstResource,\n    __in     UINT                       DstSubresource,\n    __in     UINT                       DstX,\n    __in     UINT                       DstY,\n    __in     ID3D12Resource            *pSrcResource,\n    __in     UINT                       SrcSubresource,\n    __in_opt RECT                      *pSrcRect,\n    __in     DXGI_FORMAT                Format,\n    __in     NV_RESOLVE_MODE            ResolveMode)"
  },
  {
    "label": "NvAPI_D3D11_TiledTexture2DArrayGetDesc()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_TiledTexture2DArrayGetDesc(__in  ID3D11Texture2D      *pTiledTexture2DArray,\n                                                       __out D3D11_TEXTURE2D_DESC *pDesc)"
  },
  {
    "label": "NvAPI_D3D11_UpdateTileMappings()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_UpdateTileMappings(\n    __in       ID3D11DeviceContext2            *pDeviceContext,\n    __in       ID3D11Resource                  *pTiledResource,\n    __in       UINT                             NumTiledResourceRegions,\n    __in const D3D11_TILED_RESOURCE_COORDINATE *pTiledResourceRegionStartCoordinates,\n    __in const D3D11_TILE_REGION_SIZE          *pTiledResourceRegionSizes,\n    __in       ID3D11Buffer                    *pTilePool,\n    __in       UINT                             NumRanges,\n    __in const UINT                            *pRangeFlags,\n    __in const UINT                            *pTilePoolStartOffsets,\n    __in const UINT                            *pRangeTileCounts,\n    __in       UINT                             Flags)"
  },
  {
    "label": "NvAPI_D3D11_CopyTileMappings()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CopyTileMappings(\n    __in       ID3D11DeviceContext             *pDeviceContext,\n    __in       ID3D11Resource                  *pDestTiledResource,\n    __in const D3D11_TILED_RESOURCE_COORDINATE *pDestRegionStartCoordinate,\n    __in       ID3D11Resource                  *pSourceTiledResource,\n    __in const D3D11_TILED_RESOURCE_COORDINATE *pSourceRegionStartCoordinate,\n    __in const D3D11_TILE_REGION_SIZE          *pTileRegionSize,\n    __in       UINT                             Flags)"
  },
  {
    "label": "NvAPI_D3D11_TiledResourceBarrier()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_TiledResourceBarrier(\n    __in       ID3D11DeviceContext             *pDeviceContext,\n    __in       ID3D11Resource                  *pTiledResourceAccessBeforeBarrier,\n    __in       ID3D11Resource                  *pTiledResourceAccessAfterBarrier)"
  },
  {
    "label": "NvAPI_D3D11_AliasMSAATexture2DAsNonMSAA()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_AliasMSAATexture2DAsNonMSAA(__in ID3D11Device *pDevice,\n                                                        __in ID3D11Texture2D *pInputTex,\n                                                        __out ID3D11Texture2D **ppOutTex)"
  },
  {
    "label": "NvAPI_D3D11_CreateGeometryShaderEx_2()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateGeometryShaderEx_2(__in ID3D11Device *pDevice, __in const void *pShaderBytecode, \n                                                     __in SIZE_T BytecodeLength, __in_opt ID3D11ClassLinkage *pClassLinkage, \n                                                     __in const NvAPI_D3D11_CREATE_GEOMETRY_SHADER_EX *pCreateGeometryShaderExArgs,\n                                                    __out ID3D11GeometryShader **ppGeometryShader)"
  },
  {
    "label": "NvAPI_D3D11_CreateVertexShaderEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateVertexShaderEx(__in ID3D11Device *pDevice, __in const void *pShaderBytecode, \n                                                 __in SIZE_T BytecodeLength, __in_opt ID3D11ClassLinkage *pClassLinkage, \n                                                 __in const NvAPI_D3D11_CREATE_VERTEX_SHADER_EX *pCreateVertexShaderExArgs,\n                                                 __out ID3D11VertexShader **ppVertexShader)"
  },
  {
    "label": "NvAPI_D3D11_CreateHullShaderEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateHullShaderEx(__in ID3D11Device *pDevice, __in const void *pShaderBytecode, \n                                               __in SIZE_T BytecodeLength, __in_opt ID3D11ClassLinkage *pClassLinkage, \n                                               __in const NvAPI_D3D11_CREATE_HULL_SHADER_EX *pCreateHullShaderExArgs,\n                                               __out ID3D11HullShader **ppHullShader)"
  },
  {
    "label": "NvAPI_D3D11_CreateDomainShaderEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateDomainShaderEx(__in ID3D11Device *pDevice, __in const void *pShaderBytecode, \n                                                 __in SIZE_T BytecodeLength, __in_opt ID3D11ClassLinkage *pClassLinkage, \n                                                 __in const NvAPI_D3D11_CREATE_DOMAIN_SHADER_EX *pCreateDomainShaderExArgs,\n                                                 __out ID3D11DomainShader **ppDomainShader)"
  },
  {
    "label": "NvAPI_D3D11_CreatePixelShaderEx_2()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreatePixelShaderEx_2(__in ID3D11Device *pDevice, __in const void *pShaderBytecode, \n                                                 __in SIZE_T BytecodeLength, __in_opt ID3D11ClassLinkage *pClassLinkage, \n                                                 __in const NvAPI_D3D11_CREATE_PIXEL_SHADER_EX *pCreatePixelShaderExArgs,\n                                                 __out ID3D11PixelShader **ppPixelShader)"
  },
  {
    "label": "NvAPI_D3D11_CreateFastGeometryShaderExplicit()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateFastGeometryShaderExplicit(__in ID3D11Device *pDevice, __in const void *pShaderBytecode,\n                                                             __in SIZE_T BytecodeLength, __in_opt ID3D11ClassLinkage *pClassLinkage,\n                                                             __in const NvAPI_D3D11_CREATE_FASTGS_EXPLICIT_DESC *pCreateFastGSArgs,\n                                                             __out ID3D11GeometryShader **ppGeometryShader)"
  },
  {
    "label": "NvAPI_D3D11_CreateFastGeometryShader()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateFastGeometryShader(__in ID3D11Device *pDevice, __in const void *pShaderBytecode, \n                                                     __in SIZE_T BytecodeLength, __in_opt ID3D11ClassLinkage *pClassLinkage,\n                                                     __out ID3D11GeometryShader **ppGeometryShader)"
  },
  {
    "label": "NvAPI_D3D11_DecompressView()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_DecompressView(__in ID3D11Device* pDevice, __in ID3D11DeviceContext *pDeviceContext, __in ID3D11View* pView)"
  },
  {
    "label": "NvAPI_D3D12_CreateGraphicsPipelineState()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateGraphicsPipelineState(__in ID3D12Device *pDevice,\n                                                        __in const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pPSODesc,\n                                                          NvU32 numExtensions,\n                                                        __in const NVAPI_D3D12_PSO_EXTENSION_DESC** ppExtensions,\n                                                        __out ID3D12PipelineState **ppPSO)"
  },
  {
    "label": "NvAPI_D3D12_CreateComputePipelineState()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateComputePipelineState(__in ID3D12Device *pDevice,\n                                                       __in const D3D12_COMPUTE_PIPELINE_STATE_DESC *pPSODesc,\n                                                         NvU32 numExtensions,\n                                                       __in const NVAPI_D3D12_PSO_EXTENSION_DESC** ppExtensions,\n                                                       __out ID3D12PipelineState **ppPSO)"
  },
  {
    "label": "NvAPI_D3D12_SetDepthBoundsTestValues()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_SetDepthBoundsTestValues(__in ID3D12GraphicsCommandList *pCommandList,\n                                                     __in const float minDepth,\n                                                     __in const float maxDepth)"
  },
  {
    "label": "NvAPI_D3D12_CreateReservedResource()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateReservedResource(__in       ID3D12Device           *pDevice,\n                                                   __in const D3D12_RESOURCE_DESC    *pDesc,\n                                                   __in       D3D12_RESOURCE_STATES   InitialState,\n                                                   __in const D3D12_CLEAR_VALUE      *pOptimizedClearValue,\n                                                   __in       REFIID                  riid,\n                                                   __out      void                  **ppvResource,\n                                                   __in       bool                    bTexture2DArrayMipPack,\n                                                   __in       ID3D12Heap             *pHeap)"
  },
  {
    "label": "NvAPI_D3D12_CreateHeap()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateHeap(__in       ID3D12Device     *pDevice,\n                                       __in const D3D12_HEAP_DESC  *pDesc,\n                                       __in       REFIID            riid,\n                                       __out      void            **ppvHeap)"
  },
  {
    "label": "NvAPI_D3D12_CreateHeap2()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateHeap2(__in       ID3D12Device         *pDevice,\n                                        __in const D3D12_HEAP_DESC      *pDesc,\n                                        __in const NV_HEAP_PARAMS       *pNVHeapParams,\n                                        __in       REFIID               riid,\n                                        __out      void                 **ppvHeap)"
  },
  {
    "label": "NvAPI_D3D12_QueryCpuVisibleVidmem()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_QueryCpuVisibleVidmem(__in       ID3D12Device  *pDevice,\n                                                  __out      NvU64         *pTotalBytes,\n                                                  __out      NvU64         *pFreeBytes)"
  },
  {
    "label": "NvAPI_D3D12_ReservedResourceGetDesc()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_ReservedResourceGetDesc(__in  ID3D12Resource      *pReservedResource,\n                                                    __out D3D12_RESOURCE_DESC *pDesc)"
  },
  {
    "label": "NvAPI_D3D12_UpdateTileMappings()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_UpdateTileMappings(\n    __in       ID3D12CommandQueue              *pCommandQueue,\n    __in       ID3D12Resource                  *pResource,\n    __in       UINT                             NumResourceRegions,\n    __in const D3D12_TILED_RESOURCE_COORDINATE *pResourceRegionStartCoordinates,\n    __in const D3D12_TILE_REGION_SIZE          *pResourceRegionSizes,\n    __in       ID3D12Heap                      *pHeap,\n    __in       UINT                             NumRanges,\n    __in const D3D12_TILE_RANGE_FLAGS          *pRangeFlags,\n    __in const UINT                            *pHeapRangeStartOffsets,\n    __in const UINT                            *pRangeTileCounts,\n    __in       D3D12_TILE_MAPPING_FLAGS         Flags)"
  },
  {
    "label": "NvAPI_D3D12_CopyTileMappings()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CopyTileMappings(\n    __in       ID3D12CommandQueue              *pCommandQueue,\n    __in       ID3D12Resource                  *pDstResource,\n    __in const D3D12_TILED_RESOURCE_COORDINATE *pDstRegionStartCoordinate,\n    __in       ID3D12Resource                  *pSrcResource,\n    __in const D3D12_TILED_RESOURCE_COORDINATE *pSrcRegionStartCoordinate,\n    __in const D3D12_TILE_REGION_SIZE          *pRegionSize,\n    __in       D3D12_TILE_MAPPING_FLAGS         Flags)"
  },
  {
    "label": "NvAPI_D3D12_ResourceAliasingBarrier()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_ResourceAliasingBarrier(\n    __in       ID3D12GraphicsCommandList *pCommandList,\n    __in       UINT                       NumBarriers,\n    __in const D3D12_RESOURCE_BARRIER    *pBarriers)"
  },
  {
    "label": "NvAPI_D3D12_CaptureUAVInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CaptureUAVInfo(__in  ID3D12Device*               pDevice,\n                                           __out NVAPI_UAV_INFO             *pUAVInfo)"
  },
  {
    "label": "NvAPI_D3D11_GetResourceGPUVirtualAddressEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_GetResourceGPUVirtualAddressEx(__in  ID3D11Device *pDevice,\n                                                           __inout  NV_GET_GPU_VIRTUAL_ADDRESS *pParams)"
  },
  {
    "label": "NvAPI_D3D12_CreateCommittedResource()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateCommittedResource(__in       ID3D12Device             *pDevice,\n                                                    __in const D3D12_HEAP_PROPERTIES    *pHeapProperties,          \n                                                    __in       D3D12_HEAP_FLAGS         HeapFlags,\n                                                    __in const D3D12_RESOURCE_DESC      *pDesc,\n                                                    __in       D3D12_RESOURCE_STATES    InitialState,\n                                                    __in const D3D12_CLEAR_VALUE        *pOptimizedClearValue,\n                                                    __in const NV_RESOURCE_PARAMS       *pNVResourceParams,\n                                                    __in       REFIID                    riid,\n                                                    __out_opt  void                      **ppvResource,\n                                                    __out_opt  bool                      *pSupported)"
  },
  {
    "label": "NvAPI_D3D12_CopyTextureRegion()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CopyTextureRegion(__in              ID3D12GraphicsCommandList           *pCommandList,\n                                              __in const        D3D12_TEXTURE_COPY_LOCATION         *pDst,\n                                              __in              UINT                                 DstX,\n                                              __in              UINT                                 DstY,\n                                              __in              UINT                                 DstZ,\n                                              __in const        D3D12_TEXTURE_COPY_LOCATION         *pSrc,\n                                              __in_opt const    D3D12_BOX                           *pSrcBox)"
  },
  {
    "label": "NvAPI_D3D12_IsNvShaderExtnOpCodeSupported()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_IsNvShaderExtnOpCodeSupported(__in  ID3D12Device *pDevice,\n                                                          __in  NvU32 opCode,\n                                                          __out bool *pSupported)"
  },
  {
    "label": "NvAPI_D3D12_GetOptimalThreadCountForMesh()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_GetOptimalThreadCountForMesh(__in  ID3D12Device *pDevice,\n                                                          __out NvU32 *pThreadCount)"
  },
  {
    "label": "NvAPI_D3D_IsGSyncCapable()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_IsGSyncCapable(__in IUnknown *pDeviceOrContext, __in NVDX_ObjectHandle primarySurface, __out BOOL *pIsGsyncCapable)"
  },
  {
    "label": "NvAPI_D3D_IsGSyncActive()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_IsGSyncActive(__in IUnknown *pDeviceOrContext, __in NVDX_ObjectHandle primarySurface, __out BOOL *pIsGsyncActive)"
  },
  {
    "label": "NvAPI_D3D1x_DisableShaderDiskCache()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D1x_DisableShaderDiskCache(IUnknown *pDevice)"
  },
  {
    "label": "NvAPI_D3D11_MultiGPU_GetCaps()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_MultiGPU_GetCaps(__inout PNV_MULTIGPU_CAPS pMultiGPUCaps)"
  },
  {
    "label": "NvAPI_D3D11_MultiGPU_Init()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_MultiGPU_Init(__in bool bEnable)"
  },
  {
    "label": "NvAPI_D3D11_CreateMultiGPUDevice()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateMultiGPUDevice(__in ID3D11Device *pDevice, __in ULONG version, __out ULONG *currentVersion, __out ID3D11MultiGPUDevice **ppD3D11MultiGPUDevice, __in UINT maxGpus=ALL_GPUS)"
  },
  {
    "label": "NvAPI_D3D_QuerySinglePassStereoSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_QuerySinglePassStereoSupport(__in IUnknown *pDevice,\n                                                __inout NV_QUERY_SINGLE_PASS_STEREO_SUPPORT_PARAMS *pQuerySinglePassStereoSupportedParams)"
  },
  {
    "label": "NvAPI_D3D_SetSinglePassStereoMode()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_SetSinglePassStereoMode(__in IUnknown *pDevOrContext, __in NvU32 numViews, __in NvU32 renderTargetIndexOffset, __in NvU8 independentViewportMaskEnable)"
  },
  {
    "label": "NvAPI_D3D12_QuerySinglePassStereoSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_QuerySinglePassStereoSupport(__in ID3D12Device *pDevice,\n                                                         __inout NV_QUERY_SINGLE_PASS_STEREO_SUPPORT_PARAMS *pQuerySinglePassStereoSupportedParams)"
  },
  {
    "label": "NvAPI_D3D12_SetSinglePassStereoMode()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_SetSinglePassStereoMode(__in ID3D12GraphicsCommandList* pCommandList,\n                                                    __in NvU32 numViews,\n                                                    __in NvU32 renderTargetIndexOffset,\n                                                    __in NvU8 independentViewportMaskEnable)"
  },
  {
    "label": "NvAPI_D3D_QueryMultiViewSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_QueryMultiViewSupport(__in IUnknown *pDevice,\n                                                __inout NV_QUERY_MULTIVIEW_SUPPORT_PARAMS *pQueryMultiViewSupportedParams)"
  },
  {
    "label": "NvAPI_D3D_SetMultiViewMode()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_SetMultiViewMode(__in IUnknown *pDevOrContext, __in NV_MULTIVIEW_PARAMS *pMultiViewParams)"
  },
  {
    "label": "NvAPI_D3D_QueryModifiedWSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_QueryModifiedWSupport(__in IUnknown *pDev,\n                                            __inout NV_QUERY_MODIFIED_W_SUPPORT_PARAMS *pQueryModifiedWSupportedParams)"
  },
  {
    "label": "NvAPI_D3D_SetModifiedWMode()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_SetModifiedWMode(__in IUnknown *pDevOrContext, __in NV_MODIFIED_W_PARAMS *psModifiedWParams)"
  },
  {
    "label": "NvAPI_D3D12_QueryModifiedWSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_QueryModifiedWSupport(__in ID3D12Device *pDevice,\n                                                  __inout NV_QUERY_MODIFIED_W_SUPPORT_PARAMS *pQueryModifiedWSupportedParams)"
  },
  {
    "label": "NvAPI_D3D12_SetModifiedWMode()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_SetModifiedWMode(__in ID3D12GraphicsCommandList* pCommandList,\n                                             __in NV_MODIFIED_W_PARAMS *pModifiedWParams)"
  },
  {
    "label": "NvAPI_D3D_CreateLateLatchObject()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_CreateLateLatchObject(__in IUnknown *pDevice, __inout NV_D3D_LATELATCH_OBJECT_DESC* pLateLatchObjectDesc)"
  },
  {
    "label": "NvAPI_D3D_QueryLateLatchSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_QueryLateLatchSupport(__in IUnknown *pDevice,\n                                            __inout NV_QUERY_LATELATCH_SUPPORT_PARAMS *pQueryLateLatchSupportParams)"
  },
  {
    "label": "NvAPI_D3D_RegisterDevice()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_RegisterDevice(__in IUnknown *pDev)"
  },
  {
    "label": "NvAPI_D3D11_MultiDrawInstancedIndirect()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_MultiDrawInstancedIndirect(__in ID3D11DeviceContext *pDevContext11,\n                                                       __in NvU32                drawCount,\n                                                       __in ID3D11Buffer        *pBuffer,\n                                                       __in NvU32                alignedByteOffsetForArgs,\n                                                       __in NvU32                alignedByteStrideForArgs)"
  },
  {
    "label": "NvAPI_D3D11_MultiDrawIndexedInstancedIndirect()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_MultiDrawIndexedInstancedIndirect(__in ID3D11DeviceContext *pDevContext11,\n                                                              __in NvU32                drawCount,\n                                                              __in ID3D11Buffer        *pBuffer,\n                                                              __in NvU32                alignedByteOffsetForArgs,\n                                                              __in NvU32                alignedByteStrideForArgs)"
  },
  {
    "label": "NvAPI_D3D_ImplicitSLIControl()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_ImplicitSLIControl(__in IMPLICIT_SLI_CONTROL implicitSLIControl)"
  },
  {
    "label": "NvAPI_D3D12_UseDriverHeapPriorities()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_UseDriverHeapPriorities(__in ID3D12Device *pDevice)"
  },
  {
    "label": "NvAPI_D3D12_Mosaic_GetCompanionAllocations()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_Mosaic_GetCompanionAllocations(__inout NV_D3D12_MOSAIC_GETCOMPANIONALLOCATIONS *params)"
  },
  {
    "label": "NvAPI_D3D12_Mosaic_GetViewportAndGpuPartitions()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_Mosaic_GetViewportAndGpuPartitions(__inout NV_D3D12_MOSAIC_GETVIEWPORTANDGPUPARTITIONS *params)"
  },
  {
    "label": "NvAPI_D3D1x_GetGraphicsCapabilities()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D1x_GetGraphicsCapabilities(__in IUnknown *pDevice,\n                                                    __in NvU32 structVersion,\n                                                    __inout NV_D3D1x_GRAPHICS_CAPS *pGraphicsCaps)"
  },
  {
    "label": "NvAPI_D3D12_GetGraphicsCapabilities()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_GetGraphicsCapabilities(__in IUnknown *pDevice,\n                                                    __in NvU32 structVersion,\n                                                    __inout NV_D3D12_GRAPHICS_CAPS *pGraphicsCaps)"
  },
  {
    "label": "NvAPI_D3D11_RSSetExclusiveScissorRects()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_RSSetExclusiveScissorRects(__in IUnknown *pContext,\n                                                       __in NV_D3D11_EXCLUSIVE_SCISSOR_RECTS_DESC *pExclusiveScissorRectsDesc)"
  },
  {
    "label": "NvAPI_D3D11_RSSetViewportsPixelShadingRates()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_RSSetViewportsPixelShadingRates(__in IUnknown *pContext,\n                                                            __in NV_D3D11_VIEWPORTS_SHADING_RATE_DESC *pShadingRateDesc)"
  },
  {
    "label": "NvAPI_D3D11_CreateShadingRateResourceView()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateShadingRateResourceView(__in  ID3D11Device *pDevice,\n                                                          __in  ID3D11Resource *pShadingRateResource,\n                                                          __in  NV_D3D11_SHADING_RATE_RESOURCE_VIEW_DESC *pShadingRateResourceViewDesc,\n                                                          __out ID3D11NvShadingRateResourceView **ppShadingRateResourceView)"
  },
  {
    "label": "NvAPI_D3D11_RSSetShadingRateResourceView()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_RSSetShadingRateResourceView(__in IUnknown *pContext,\n                                                         __in ID3D11NvShadingRateResourceView *pShadingRateResourceView)"
  },
  {
    "label": "NvAPI_D3D11_RSGetPixelShadingRateSampleOrder()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_RSGetPixelShadingRateSampleOrder(__in IUnknown *pContext,\n                                                             __out NV_PIXEL_SHADING_RATE_SAMPLE_ORDER_TABLE* pSampleOrderTable)"
  },
  {
    "label": "NvAPI_D3D11_RSSetPixelShadingRateSampleOrder()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_RSSetPixelShadingRateSampleOrder(__in IUnknown *pContext,\n                                                             __in NV_PIXEL_SHADING_RATE_SAMPLE_ORDER_TABLE* pSampleOrderTable)"
  },
  {
    "label": "NvAPI_D3D_InitializeVRSHelper()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_InitializeVRSHelper(__in    IUnknown *pDevice,\n                                              __inout NV_VRS_HELPER_INIT_PARAMS *pInitializeVRSHelperParams)"
  },
  {
    "label": "NvAPI_D3D_InitializeNvGazeHandler()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_InitializeNvGazeHandler(__in    IUnknown *pDevice,\n                                                  __inout NV_GAZE_HANDLER_INIT_PARAMS *pInitializeNvGazeHandlerParams)"
  },
  {
    "label": "NvAPI_D3D_InitializeSMPAssist()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_InitializeSMPAssist(__in IUnknown *pDevice, __inout NV_SMP_ASSIST_INITIALIZE_PARAMS *pSMPAssistInitParams)"
  },
  {
    "label": "NvAPI_D3D_QuerySMPAssistSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_QuerySMPAssistSupport(__in IUnknown *pDev, __inout NV_QUERY_SMP_ASSIST_SUPPORT_PARAMS *pQuerySMPAssistSupportParams)"
  },
  {
    "label": "NvAPI_D3D_GetSleepStatus()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_GetSleepStatus(__in IUnknown *pDev, __in NV_GET_SLEEP_STATUS_PARAMS *pGetSleepStatusParams)"
  },
  {
    "label": "NvAPI_D3D_SetSleepMode()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_SetSleepMode(__in IUnknown *pDev, __in NV_SET_SLEEP_MODE_PARAMS *pSetSleepModeParams)"
  },
  {
    "label": "NvAPI_D3D_Sleep()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_Sleep(__in IUnknown *pDev)"
  },
  {
    "label": "NvAPI_D3D_GetLatency()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_GetLatency(__in IUnknown *pDev, __out NV_LATENCY_RESULT_PARAMS *pGetLatencyParams)"
  },
  {
    "label": "NvAPI_D3D_SetLatencyMarker()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_SetLatencyMarker(__in IUnknown *pDev, __in NV_LATENCY_MARKER_PARAMS* pSetLatencyMarkerParams)"
  },
  {
    "label": "NvAPI_D3D12_SetAsyncFrameMarker()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_SetAsyncFrameMarker(__in ID3D12CommandQueue *pCommandQueue, __in NV_ASYNC_FRAME_MARKER_PARAMS* pSetAsyncFrameMarkerParams)"
  },
  {
    "label": "NvAPI_D3D12_NotifyOutOfBandCommandQueue()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_NotifyOutOfBandCommandQueue(__in ID3D12CommandQueue *pCommandQueue, __in NV_OUT_OF_BAND_CQ_TYPE cqType)"
  },
  {
    "label": "NvAPI_D3D12_CreateCubinComputeShader()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateCubinComputeShader(__in   ID3D12Device*       pDevice,\n                                                     __in   const void*         pCubin,\n                                                     __in   NvU32               size,\n                                                     __in   NvU32               blockX, \n                                                     __in   NvU32               blockY, \n                                                     __in   NvU32               blockZ,\n                                                     __out  NVDX_ObjectHandle*  phShader)"
  },
  {
    "label": "NvAPI_D3D12_CreateCubinComputeShaderEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateCubinComputeShaderEx(__in   ID3D12Device*       pDevice,\n                                                       __in   const void*         pCubin,\n                                                       __in   NvU32               size,\n                                                       __in   NvU32               blockX, \n                                                       __in   NvU32               blockY, \n                                                       __in   NvU32               blockZ,\n                                                       __in   NvU32               dynSharedMemBytes,\n                                                       __in   const char*         pShaderName,\n                                                       __out  NVDX_ObjectHandle*  phShader)"
  },
  {
    "label": "NvAPI_D3D12_CreateCubinComputeShaderWithName()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateCubinComputeShaderWithName(__in   ID3D12Device*       pDevice,\n                                                              __in   const void*         pCubin,\n                                                              __in   NvU32               size,\n                                                              __in   NvU32               blockX, \n                                                              __in   NvU32               blockY, \n                                                              __in   NvU32               blockZ,\n                                                              __in   const char*         pShaderName,\n                                                              __out  NVDX_ObjectHandle*  phShader)"
  },
  {
    "label": "NvAPI_D3D12_LaunchCubinShader()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_LaunchCubinShader(__in  ID3D12GraphicsCommandList*  pCommandList,\n                                              __in   NVDX_ObjectHandle          hShader,\n                                              __in   NvU32                      gridX,\n                                              __in   NvU32                      gridY,\n                                              __in   NvU32                      gridZ,\n                                              __in   const void*                pParams,\n                                              __in   NvU32                      paramSize)"
  },
  {
    "label": "NvAPI_D3D12_DestroyCubinComputeShader()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_DestroyCubinComputeShader(__in  ID3D12Device*       pDevice,\n                                                      __in  NVDX_ObjectHandle   hShader)"
  },
  {
    "label": "NvAPI_D3D12_GetCudaTextureObject()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_GetCudaTextureObject(__in  ID3D12Device*                pDevice,\n                                                 __in  D3D12_CPU_DESCRIPTOR_HANDLE  texDesc,\n                                                 __in  D3D12_CPU_DESCRIPTOR_HANDLE  smpDesc,\n                                                 __out NvU32*                       pTextureHandle)"
  },
  {
    "label": "NvAPI_D3D12_GetCudaSurfaceObject()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_GetCudaSurfaceObject(__in  ID3D12Device*                pDevice,\n                                                 __in  D3D12_CPU_DESCRIPTOR_HANDLE  uavDesc,\n                                                 __out NvU32*                       pSurfaceHandle)"
  },
  {
    "label": "NvAPI_D3D12_IsFatbinPTXSupported()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_IsFatbinPTXSupported(__in  ID3D12Device *pDevice,\n                                                 __out bool *pSupported)"
  },
  {
    "label": "NvAPI_D3D12_CreateCuModule()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateCuModule(__in   ID3D12Device*       pDevice,\n                                           __in   const void*         pBlob,\n                                           __in   NvU32               size,\n                                           __out  NVDX_ObjectHandle*  phModule)"
  },
  {
    "label": "NvAPI_D3D12_EnumFunctionsInModule()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_EnumFunctionsInModule(__in     ID3D12Device*       pDevice,\n                                                  __in     NVDX_ObjectHandle   hModule,\n                                                  __inout  NvU32*              pArraySize,\n                                                  __out    const char** const  pFunctionNames)"
  },
  {
    "label": "NvAPI_D3D12_CreateCuFunction()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CreateCuFunction(__in   ID3D12Device*       pDevice,\n                                             __in   NVDX_ObjectHandle   hModule,\n                                             __in   const char*         pName,\n                                             __out  NVDX_ObjectHandle*  phFunction)"
  },
  {
    "label": "NvAPI_D3D12_LaunchCuKernelChain()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_LaunchCuKernelChain(__in  ID3D12GraphicsCommandList*            pCommandList,\n                                                __in  const NVAPI_CU_KERNEL_LAUNCH_PARAMS*  pKernels,\n                                                __in  NvU32                                 numKernels)"
  },
  {
    "label": "NvAPI_D3D12_DestroyCuModule()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_DestroyCuModule(__in  ID3D12Device*       pDevice,\n                                            __in  NVDX_ObjectHandle   hModule)"
  },
  {
    "label": "NvAPI_D3D12_DestroyCuFunction()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_DestroyCuFunction(__in  ID3D12Device*       pDevice,\n                                              __in  NVDX_ObjectHandle   hFunction)"
  },
  {
    "label": "NvAPI_D3D11_CreateCubinComputeShader()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateCubinComputeShader(__in   ID3D11Device*       pDevice,\n                                                     __in   const void*         pCubin,\n                                                     __in   NvU32               size,\n                                                     __in   NvU32               blockX, \n                                                     __in   NvU32               blockY, \n                                                     __in   NvU32               blockZ,\n                                                     __out  NVDX_ObjectHandle*  phShader)"
  },
  {
    "label": "NvAPI_D3D11_CreateCubinComputeShaderEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateCubinComputeShaderEx(__in   ID3D11Device*     pDevice,\n                                                       __in   const void*         pCubin,\n                                                       __in   NvU32               size,\n                                                       __in   NvU32               blockX, \n                                                       __in   NvU32               blockY, \n                                                       __in   NvU32               blockZ,\n                                                       __in   NvU32               dynSharedMemBytes,\n                                                       __in   const char*         pShaderName,\n                                                       __out  NVDX_ObjectHandle*  phShader)"
  },
  {
    "label": "NvAPI_D3D11_CreateCubinComputeShaderWithName()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateCubinComputeShaderWithName(__in   ID3D11Device*       pDevice,\n                                                             __in   const void*         pCubin,\n                                                             __in   NvU32               size,\n                                                             __in   NvU32               blockX, \n                                                             __in   NvU32               blockY, \n                                                             __in   NvU32               blockZ,\n                                                             __in   const char*         pShaderName,\n                                                             __out  NVDX_ObjectHandle*  phShader)"
  },
  {
    "label": "NvAPI_D3D11_LaunchCubinShader()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_LaunchCubinShader(__in   ID3D11DeviceContext       *pDeviceContext,\n                                              __in   NVDX_ObjectHandle          hShader,\n                                              __in   NvU32                      gridX,\n                                              __in   NvU32                      gridY,\n                                              __in   NvU32                      gridZ,\n                                              __in   const void*                pParams,\n                                              __in   NvU32                      paramSize,\n                                              __in   const NVDX_ObjectHandle*   pReadResources,\n                                              __in   NvU32                      numReadResources,\n                                              __in   const NVDX_ObjectHandle*   pWriteResources,\n                                              __in   NvU32                      numWriteResources)"
  },
  {
    "label": "NvAPI_D3D11_DestroyCubinComputeShader()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_DestroyCubinComputeShader(__in  ID3D11Device*       pDevice,\n                                                      __in  NVDX_ObjectHandle   hShader)"
  },
  {
    "label": "NvAPI_D3D11_IsFatbinPTXSupported()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_IsFatbinPTXSupported(__in  ID3D11Device *pDevice,\n                                                 __out bool *pSupported)"
  },
  {
    "label": "NvAPI_D3D11_CreateUnorderedAccessView()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateUnorderedAccessView(__in   ID3D11Device*                            pDevice,\n                                                      __in   ID3D11Resource*                          pResource,\n                                                      __in   const D3D11_UNORDERED_ACCESS_VIEW_DESC*  pDesc,\n                                                      __out  ID3D11UnorderedAccessView**              ppUAV,\n                                                      __out  NvU32*                                   pDriverHandle)"
  },
  {
    "label": "NvAPI_D3D11_CreateShaderResourceView()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateShaderResourceView(__in   ID3D11Device*                          pDevice,\n                                                     __in   ID3D11Resource*                        pResource,\n                                                     __in   const D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc,\n                                                     __out  ID3D11ShaderResourceView**             ppSRV,\n                                                     __out  NvU32*                                 pDriverHandle)"
  },
  {
    "label": "NvAPI_D3D11_CreateSamplerState()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_CreateSamplerState(__in   ID3D11Device*                          pDevice,\n                                               __in   const D3D11_SAMPLER_DESC*              pSamplerDesc,\n                                               __out  ID3D11SamplerState**                   ppSamplerState,\n                                               __out  NvU32*                                 pDriverHandle)"
  },
  {
    "label": "NvAPI_D3D11_GetCudaTextureObject()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_GetCudaTextureObject(__in   ID3D11Device*                       pDevice,\n                                                 __in   NvU32                               srvDriverHandle,\n                                                 __in   NvU32                               samplerDriverHandle,\n                                                 __out  NvU32*                              pCudaTextureHandle)"
  },
  {
    "label": "NvAPI_D3D11_GetResourceGPUVirtualAddress()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D11_GetResourceGPUVirtualAddress(__in  ID3D11Device*                pDevice,\n                                                         __in  const NVDX_ObjectHandle      hResource,\n                                                         __out NvU64*                       pGpuVA)"
  },
  {
    "label": "NvAPI_D3D12_GetRaytracingCaps()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_GetRaytracingCaps(\n    __in    ID3D12Device* pDevice,\n    __in    NVAPI_D3D12_RAYTRACING_CAPS_TYPE type,\n    __out   void* pData,\n    __in    size_t dataSize)"
  },
  {
    "label": "NvAPI_D3D12_GetRaytracingOpacityMicromapArrayPrebuildInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_GetRaytracingOpacityMicromapArrayPrebuildInfo(\n    __in    ID3D12Device5* pDevice,\n    __inout NVAPI_GET_RAYTRACING_OPACITY_MICROMAP_ARRAY_PREBUILD_INFO_PARAMS* pParams)"
  },
  {
    "label": "NvAPI_D3D12_SetCreatePipelineStateOptions()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_SetCreatePipelineStateOptions(\n    __in ID3D12Device5* pDevice,\n    __in const NVAPI_D3D12_SET_CREATE_PIPELINE_STATE_OPTIONS_PARAMS* pState)"
  },
  {
    "label": "NvAPI_D3D12_CheckDriverMatchingIdentifierEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_CheckDriverMatchingIdentifierEx(\n    __in    ID3D12Device5* pDevice,\n    __inout NVAPI_CHECK_DRIVER_MATCHING_IDENTIFIER_EX_PARAMS* pParams)"
  },
  {
    "label": "NvAPI_D3D12_GetRaytracingAccelerationStructurePrebuildInfoEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_GetRaytracingAccelerationStructurePrebuildInfoEx(\n    __in    ID3D12Device5* pDevice,\n    __inout NVAPI_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO_EX_PARAMS* pParams)"
  },
  {
    "label": "NvAPI_D3D12_BuildRaytracingOpacityMicromapArray()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_BuildRaytracingOpacityMicromapArray(\n    __in ID3D12GraphicsCommandList4* pCommandList,\n    __in NVAPI_BUILD_RAYTRACING_OPACITY_MICROMAP_ARRAY_PARAMS* pParams)"
  },
  {
    "label": "NvAPI_D3D12_RelocateRaytracingOpacityMicromapArray()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_RelocateRaytracingOpacityMicromapArray(\n    __in ID3D12GraphicsCommandList4* pCommandList,\n    __in const NVAPI_RELOCATE_RAYTRACING_OPACITY_MICROMAP_ARRAY_PARAMS* pParams)"
  },
  {
    "label": "NvAPI_D3D12_EmitRaytracingOpacityMicromapArrayPostbuildInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_EmitRaytracingOpacityMicromapArrayPostbuildInfo(\n    __in ID3D12GraphicsCommandList4* pCommandList,\n    __in const NVAPI_EMIT_RAYTRACING_OPACITY_MICROMAP_ARRAY_POSTBUILD_INFO_PARAMS* pParams)"
  },
  {
    "label": "NvAPI_D3D12_BuildRaytracingAccelerationStructureEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D12_BuildRaytracingAccelerationStructureEx(\n    __in ID3D12GraphicsCommandList4* pCommandList,\n    __in const NVAPI_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_EX_PARAMS* pParams)"
  },
  {
    "label": "NvAPI_VIO_GetCapabilities()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_GetCapabilities(NvVioHandle     hVioHandle,\n                                          NVVIOCAPS       *pAdapterCaps)"
  },
  {
    "label": "NvAPI_VIO_Open()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_Open(NvVioHandle       hVioHandle,\n                               NvU32             vioClass,\n                               NVVIOOWNERTYPE    ownerType)"
  },
  {
    "label": "NvAPI_VIO_Close()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_Close(NvVioHandle       hVioHandle,\n                                NvU32             bRelease)"
  },
  {
    "label": "NvAPI_VIO_Status()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_Status(NvVioHandle     hVioHandle, \n                                 NVVIOSTATUS     *pStatus)"
  },
  {
    "label": "NvAPI_VIO_SyncFormatDetect()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_SyncFormatDetect(NvVioHandle hVioHandle,\n                                           NvU32       *pWait)"
  },
  {
    "label": "NvAPI_VIO_GetConfig()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_GetConfig(NvVioHandle        hVioHandle,\n                                    NVVIOCONFIG        *pConfig)"
  },
  {
    "label": "NvAPI_VIO_SetConfig()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_SetConfig(NvVioHandle            hVioHandle,\n                                    const NVVIOCONFIG      *pConfig)"
  },
  {
    "label": "NvAPI_VIO_SetCSC()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_SetCSC(NvVioHandle           hVioHandle,\n                                 NVVIOCOLORCONVERSION  *pCSC)"
  },
  {
    "label": "NvAPI_VIO_GetCSC()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_GetCSC(NvVioHandle           hVioHandle,\n                                 NVVIOCOLORCONVERSION  *pCSC)"
  },
  {
    "label": "NvAPI_VIO_SetGamma()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_SetGamma(NvVioHandle           hVioHandle,\n                                   NVVIOGAMMACORRECTION  *pGamma)"
  },
  {
    "label": "NvAPI_VIO_GetGamma()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_GetGamma(NvVioHandle           hVioHandle,\n                                   NVVIOGAMMACORRECTION* pGamma)"
  },
  {
    "label": "NvAPI_VIO_SetSyncDelay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_SetSyncDelay(NvVioHandle            hVioHandle,\n                                       const NVVIOSYNCDELAY   *pSyncDelay)"
  },
  {
    "label": "NvAPI_VIO_GetSyncDelay()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_GetSyncDelay(NvVioHandle      hVioHandle,\n                                       NVVIOSYNCDELAY   *pSyncDelay)"
  },
  {
    "label": "NvAPI_VIO_GetPCIInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_GetPCIInfo(__in NvVioHandle hVioHandle, \n                                            __inout NVVIOPCIINFO* pVioPCIInfo)"
  },
  {
    "label": "NvAPI_VIO_IsRunning()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_IsRunning(NvVioHandle   hVioHandle)"
  },
  {
    "label": "NvAPI_VIO_Start()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_Start(NvVioHandle     hVioHandle)"
  },
  {
    "label": "NvAPI_VIO_Stop()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_Stop(NvVioHandle     hVioHandle)"
  },
  {
    "label": "NvAPI_VIO_IsFrameLockModeCompatible()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_IsFrameLockModeCompatible(NvVioHandle              hVioHandle,\n                                                    NvU32                    srcEnumIndex,\n                                                    NvU32                    destEnumIndex,\n                                                    NvU32*                   pbCompatible)"
  },
  {
    "label": "NvAPI_VIO_EnumDevices()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_EnumDevices(NvVioHandle       hVioHandle[NVAPI_MAX_VIO_DEVICES],\n                                      NvU32             *vioDeviceCount)"
  },
  {
    "label": "NvAPI_VIO_QueryTopology()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_QueryTopology(NV_VIO_TOPOLOGY   *pNvVIOTopology)"
  },
  {
    "label": "NvAPI_VIO_EnumSignalFormats()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_EnumSignalFormats(NvVioHandle              hVioHandle,\n                                            NvU32                    enumIndex,\n                                            NVVIOSIGNALFORMATDETAIL  *pSignalFormatDetail)"
  },
  {
    "label": "NvAPI_VIO_EnumDataFormats()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_VIO_EnumDataFormats(NvVioHandle            hVioHandle,\n                                          NvU32                  enumIndex,\n                                          NVVIODATAFORMATDETAIL  *pDataFormatDetail)"
  },
  {
    "label": "NvAPI_Stereo_CreateConfigurationProfileRegistryKey()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_CreateConfigurationProfileRegistryKey(NV_STEREO_REGISTRY_PROFILE_TYPE registryProfileType)"
  },
  {
    "label": "NvAPI_Stereo_DeleteConfigurationProfileRegistryKey()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_DeleteConfigurationProfileRegistryKey(NV_STEREO_REGISTRY_PROFILE_TYPE registryProfileType)"
  },
  {
    "label": "NvAPI_Stereo_SetConfigurationProfileValue()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_SetConfigurationProfileValue(NV_STEREO_REGISTRY_PROFILE_TYPE registryProfileType, NV_STEREO_REGISTRY_ID valueRegistryID, void *pValue)"
  },
  {
    "label": "NvAPI_Stereo_DeleteConfigurationProfileValue()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_DeleteConfigurationProfileValue(NV_STEREO_REGISTRY_PROFILE_TYPE registryProfileType, NV_STEREO_REGISTRY_ID valueRegistryID)"
  },
  {
    "label": "NvAPI_Stereo_GetStereoSupport()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_GetStereoSupport(__in NvMonitorHandle hMonitor, __out NVAPI_STEREO_CAPS *pCaps)"
  },
  {
    "label": "NvAPI_Stereo_DecreaseSeparation()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_DecreaseSeparation(StereoHandle stereoHandle)"
  },
  {
    "label": "NvAPI_Stereo_IncreaseSeparation()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_IncreaseSeparation(StereoHandle stereoHandle)"
  },
  {
    "label": "NvAPI_Stereo_DecreaseConvergence()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_DecreaseConvergence(StereoHandle stereoHandle)"
  },
  {
    "label": "NvAPI_Stereo_IncreaseConvergence()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_IncreaseConvergence(StereoHandle stereoHandle)"
  },
  {
    "label": "NvAPI_Stereo_GetFrustumAdjustMode()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_GetFrustumAdjustMode(StereoHandle stereoHandle, NV_FRUSTUM_ADJUST_MODE *pFrustumAdjustMode)"
  },
  {
    "label": "NvAPI_Stereo_SetFrustumAdjustMode()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_SetFrustumAdjustMode(StereoHandle stereoHandle, NV_FRUSTUM_ADJUST_MODE newFrustumAdjustModeValue)"
  },
  {
    "label": "NvAPI_Stereo_CaptureJpegImage()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_CaptureJpegImage(StereoHandle stereoHandle, NvU32 quality)"
  },
  {
    "label": "NvAPI_Stereo_InitActivation()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_InitActivation(__in StereoHandle hStereoHandle, __in NVAPI_STEREO_INIT_ACTIVATION_FLAGS flags)"
  },
  {
    "label": "NvAPI_Stereo_Trigger_Activation()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_Trigger_Activation(__in StereoHandle hStereoHandle)"
  },
  {
    "label": "NvAPI_Stereo_CapturePngImage()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_CapturePngImage(StereoHandle stereoHandle)"
  },
  {
    "label": "NvAPI_Stereo_ReverseStereoBlitControl()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_ReverseStereoBlitControl(StereoHandle hStereoHandle, NvU8 TurnOn)"
  },
  {
    "label": "NvAPI_Stereo_SetNotificationMessage()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_Stereo_SetNotificationMessage(StereoHandle hStereoHandle, NvU64 hWnd,NvU64 messageID)"
  },
  {
    "label": "NvAPI_D3D1x_CreateSwapChain()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D1x_CreateSwapChain(StereoHandle hStereoHandle,\n                                            DXGI_SWAP_CHAIN_DESC* pDesc,\n                                            IDXGISwapChain** ppSwapChain,\n                                            NV_STEREO_SWAPCHAIN_MODE mode)"
  },
  {
    "label": "NvAPI_D3D9_CreateSwapChain()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D9_CreateSwapChain(StereoHandle hStereoHandle,\n                                           D3DPRESENT_PARAMETERS *pPresentationParameters,\n                                           IDirect3DSwapChain9 **ppSwapChain,\n                                           NV_STEREO_SWAPCHAIN_MODE mode)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (APIs)",
    "insertText": "NV_DECLARE_HANDLE(NvDRSSessionHandle)"
  },
  {
    "label": "NvAPI_DRS_CreateSession()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_CreateSession(NvDRSSessionHandle *phSession)"
  },
  {
    "label": "NvAPI_DRS_DestroySession()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_DestroySession(NvDRSSessionHandle hSession)"
  },
  {
    "label": "NvAPI_DRS_LoadSettings()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_LoadSettings(NvDRSSessionHandle hSession)"
  },
  {
    "label": "NvAPI_DRS_SaveSettings()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_SaveSettings(NvDRSSessionHandle hSession)"
  },
  {
    "label": "NvAPI_DRS_LoadSettingsFromFile()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_LoadSettingsFromFile(NvDRSSessionHandle hSession, NvAPI_UnicodeString fileName)"
  },
  {
    "label": "NvAPI_DRS_SaveSettingsToFile()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_SaveSettingsToFile(NvDRSSessionHandle hSession, NvAPI_UnicodeString fileName)"
  },
  {
    "label": "NvAPI_DRS_CreateProfile()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_CreateProfile(NvDRSSessionHandle hSession, NVDRS_PROFILE *pProfileInfo, NvDRSProfileHandle *phProfile)"
  },
  {
    "label": "NvAPI_DRS_DeleteProfile()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_DeleteProfile(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile)"
  },
  {
    "label": "NvAPI_DRS_SetCurrentGlobalProfile()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_SetCurrentGlobalProfile(NvDRSSessionHandle hSession, NvAPI_UnicodeString wszGlobalProfileName)"
  },
  {
    "label": "NvAPI_DRS_GetCurrentGlobalProfile()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_GetCurrentGlobalProfile(NvDRSSessionHandle hSession, NvDRSProfileHandle *phProfile)"
  },
  {
    "label": "NvAPI_DRS_GetProfileInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_GetProfileInfo(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NVDRS_PROFILE *pProfileInfo)"
  },
  {
    "label": "NvAPI_DRS_SetProfileInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_SetProfileInfo(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NVDRS_PROFILE *pProfileInfo)"
  },
  {
    "label": "NvAPI_DRS_FindProfileByName()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_FindProfileByName(NvDRSSessionHandle hSession, NvAPI_UnicodeString profileName, NvDRSProfileHandle* phProfile)"
  },
  {
    "label": "NvAPI_DRS_EnumProfiles()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_EnumProfiles(NvDRSSessionHandle hSession, NvU32 index, NvDRSProfileHandle *phProfile)"
  },
  {
    "label": "NvAPI_DRS_GetNumProfiles()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_GetNumProfiles(NvDRSSessionHandle hSession, NvU32 *numProfiles)"
  },
  {
    "label": "NvAPI_DRS_CreateApplication()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_CreateApplication(NvDRSSessionHandle hSession, NvDRSProfileHandle  hProfile, NVDRS_APPLICATION *pApplication)"
  },
  {
    "label": "NvAPI_DRS_DeleteApplicationEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_DeleteApplicationEx(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NVDRS_APPLICATION *pApp)"
  },
  {
    "label": "NvAPI_DRS_DeleteApplication()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_DeleteApplication(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NvAPI_UnicodeString appName)"
  },
  {
    "label": "NvAPI_DRS_GetApplicationInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_GetApplicationInfo(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NvAPI_UnicodeString appName, NVDRS_APPLICATION *pApplication)"
  },
  {
    "label": "NvAPI_DRS_EnumApplications()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_EnumApplications(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NvU32 startIndex, NvU32 *appCount, NVDRS_APPLICATION *pApplication)"
  },
  {
    "label": "NvAPI_DRS_FindApplicationByName()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_FindApplicationByName(__in NvDRSSessionHandle hSession, __in NvAPI_UnicodeString appName, __out NvDRSProfileHandle *phProfile, __inout NVDRS_APPLICATION *pApplication)"
  },
  {
    "label": "NvAPI_DRS_SetSetting()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_SetSetting(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NVDRS_SETTING *pSetting)"
  },
  {
    "label": "NvAPI_DRS_GetSetting()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_GetSetting(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NvU32 settingId, NVDRS_SETTING *pSetting)"
  },
  {
    "label": "NvAPI_DRS_EnumSettings()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_EnumSettings(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NvU32 startIndex, NvU32 *settingsCount, NVDRS_SETTING *pSetting)"
  },
  {
    "label": "NvAPI_DRS_EnumAvailableSettingIds()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_EnumAvailableSettingIds(NvU32 *pSettingIds, NvU32 *pMaxCount)"
  },
  {
    "label": "NvAPI_DRS_EnumAvailableSettingValues()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_EnumAvailableSettingValues(NvU32 settingId, NvU32 *pMaxNumValues, NVDRS_SETTING_VALUES *pSettingValues)"
  },
  {
    "label": "NvAPI_DRS_GetSettingIdFromName()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_GetSettingIdFromName(NvAPI_UnicodeString settingName, NvU32 *pSettingId)"
  },
  {
    "label": "NvAPI_DRS_GetSettingNameFromId()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_GetSettingNameFromId(NvU32 settingId, NvAPI_UnicodeString *pSettingName)"
  },
  {
    "label": "NvAPI_DRS_DeleteProfileSetting()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_DeleteProfileSetting(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NvU32 settingId)"
  },
  {
    "label": "NvAPI_DRS_RestoreAllDefaults()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_RestoreAllDefaults(NvDRSSessionHandle hSession)"
  },
  {
    "label": "NvAPI_DRS_RestoreProfileDefault()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_RestoreProfileDefault(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile)"
  },
  {
    "label": "NvAPI_DRS_RestoreProfileDefaultSetting()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_RestoreProfileDefaultSetting(NvDRSSessionHandle hSession, NvDRSProfileHandle hProfile, NvU32 settingId)"
  },
  {
    "label": "NvAPI_DRS_GetBaseProfile()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_DRS_GetBaseProfile(NvDRSSessionHandle hSession, NvDRSProfileHandle *phProfile)"
  },
  {
    "label": "NvAPI_SYS_GetChipSetInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SYS_GetChipSetInfo(NV_CHIPSET_INFO *pChipSetInfo)"
  },
  {
    "label": "NvAPI_SYS_GetLidAndDockInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SYS_GetLidAndDockInfo(NV_LID_DOCK_PARAMS *pLidAndDock)"
  },
  {
    "label": "NvAPI_SYS_GetDisplayIdFromGpuAndOutputId()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SYS_GetDisplayIdFromGpuAndOutputId(NvPhysicalGpuHandle hPhysicalGpu, NvU32 outputId, NvU32* displayId)"
  },
  {
    "label": "NvAPI_SYS_GetGpuAndOutputIdFromDisplayId()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SYS_GetGpuAndOutputIdFromDisplayId(NvU32 displayId, NvPhysicalGpuHandle *hPhysicalGpu, NvU32 *outputId)"
  },
  {
    "label": "NvAPI_SYS_GetPhysicalGpuFromDisplayId()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SYS_GetPhysicalGpuFromDisplayId(NvU32 displayId, NvPhysicalGpuHandle *hPhysicalGpu)"
  },
  {
    "label": "NvAPI_SYS_GetDisplayDriverInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SYS_GetDisplayDriverInfo(__inout NV_DISPLAY_DRIVER_INFO *pDriverInfo)"
  },
  {
    "label": "NvAPI_GPU_ClientRegisterForUtilizationSampleUpdates()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_ClientRegisterForUtilizationSampleUpdates(__in NvPhysicalGpuHandle hPhysicalGpu, __in NV_GPU_CLIENT_UTILIZATION_PERIODIC_CALLBACK_SETTINGS* pCallbackSettings)"
  }
]