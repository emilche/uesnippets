[
  {
    "label": "IFileHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileHandle"
  },
  {
    "label": "FILEUTILITIES_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FILEUTILITIES_API"
  },
  {
    "label": "FFileEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFileEntry"
  },
  {
    "label": "FFileEntry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainersFwd . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" GenericPlatform / GenericPlatformFile . h \" # include \" HAL / Platform . h \" # include \" HAL / UnrealMemory . h \" # include \" Misc / DateTime . h \" # if WITH_ENGINE class IFileHandle ; class FZipArchiveWriter { struct FFileEntry { FString Filename ; uint32 Crc32 ; uint64 Length ; uint64 Offset ; uint32 Time ;)",
    "insertText": "FFileEntry(const FString& InFilename, uint32 InCrc32, uint64 InLength, uint64 InOffset, uint32 InTime) : Filename(InFilename) , Crc32(InCrc32) , Length(InLength) , Offset(InOffset) , Time(InTime)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (} } ; TArray<FFileEntry> Files ; TArray<uint8> Buffer ; IFileHandle* File ; void)",
    "insertText": "Write(uint16 V)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write((void*)&V, sizeof(V))"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Write(uint32 V)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Write(uint64 V)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Write(void* Src, uint64 Size)"
  },
  {
    "label": "AddUninitialized()",
    "kind": "Method",
    "detail": "Function (void* Dst =& Buffer [ Buffer .)",
    "insertText": "AddUninitialized(Size)"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memcpy(Dst, Src, Size)"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (} } uint64)",
    "insertText": "Tell()"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Flush()"
  },
  {
    "label": "FZipArchiveWriter()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FZipArchiveWriter(IFileHandle* InFile)"
  },
  {
    "label": "FZipArchiveWriter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FZipArchiveWriter()"
  },
  {
    "label": "AddFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFile(const FString& Filename, TConstArrayView<uint8> Data, const FDateTime& Timestamp)"
  },
  {
    "label": "AddFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFile(const FString& Filename, const TArray<uint8>& Data, const FDateTime& Timestamp)"
  }
]