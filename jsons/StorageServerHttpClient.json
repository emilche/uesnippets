[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IStorageServerHttpClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStorageServerHttpClient"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" IO / IoBuffer . h \" # include \" IO / IoStatus . h \" # include \" Misc / Optional . h \" # if ! UE_BUILD_SHIPPING enum class EStorageServerContentType : uint8 { Unknown = 0,CbObject,Binary,CompressedBinary,} ; class IStorageServerHttpClient { public : using FResult = TTuple<TIoStatusOr<FIoBuffer>,EStorageServerContentType> ; using FResultCallback = TFunction<)",
    "insertText": "void(FResult)"
  },
  {
    "label": "IStorageServerHttpClient()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IStorageServerHttpClient()"
  },
  {
    "label": "RequestSync()",
    "kind": "Method",
    "detail": "Function (FResult)",
    "insertText": "RequestSync(FAnsiStringView Url, EStorageServerContentType Accept = EStorageServerContentType::Unknown, FAnsiStringView Verb = \"GET\", TOptional<FIoBuffer> OptPayload = TOptional<FIoBuffer>(), TOptional<FIoBuffer> OptDestination = TOptional<FIoBuffer>(), float TimeoutSeconds = -1.f, const bool bReportErrors = true)"
  },
  {
    "label": "RequestAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestAsync(FResultCallback&& Callback, FAnsiStringView Url, EStorageServerContentType Accept = EStorageServerContentType::Unknown, FAnsiStringView Verb = \"GET\", TOptional<FIoBuffer> OptPayload = TOptional<FIoBuffer>(), TOptional<FIoBuffer> OptDestination = TOptional<FIoBuffer>(), float TimeoutSeconds = -1.f, const bool bReportErrors = true)"
  }
]