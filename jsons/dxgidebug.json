[
  {
    "label": "DXGI_DEBUG_RLO_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DXGI_DEBUG_RLO_FLAGS"
  },
  {
    "label": "DXGI_INFO_QUEUE_MESSAGE_CATEGORY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DXGI_INFO_QUEUE_MESSAGE_CATEGORY"
  },
  {
    "label": "DXGI_INFO_QUEUE_MESSAGE_SEVERITY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DXGI_INFO_QUEUE_MESSAGE_SEVERITY"
  },
  {
    "label": "DXGI_INFO_QUEUE_MESSAGE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_INFO_QUEUE_MESSAGE"
  },
  {
    "label": "DXGI_INFO_QUEUE_FILTER_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_INFO_QUEUE_FILTER_DESC"
  },
  {
    "label": "DXGI_INFO_QUEUE_FILTER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_INFO_QUEUE_FILTER"
  },
  {
    "label": "IDXGIInfoQueueVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIInfoQueueVtbl"
  },
  {
    "label": "IDXGIDebugVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIDebugVtbl"
  },
  {
    "label": "IDXGIDebug1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIDebug1Vtbl"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef __REQUIRED_RPCNDR_H_VERSION__ # define __REQUIRED_RPCNDR_H_VERSION__ 5 0 0 # endif # ifndef __REQUIRED_RPCSAL_H_VERSION__ # define __REQUIRED_RPCSAL_H_VERSION__ 1 0 0 # endif # include \" rpc . h \" # include \" rpcndr . h \" # ifndef __RPCNDR_H_VERSION__ # error this stub requires an updated version of<rpcndr . h> # endif # ifndef COM_NO_WINDOWS_H # include \" windows . h \" # include \" ole2 . h \" # endif # ifndef __dxgidebug_h__ # define __dxgidebug_h__ # if)",
    "insertText": "defined(_MSC_VER) && (_MSC_VER >= 1020)"
  },
  {
    "label": "WINAPI_FAMILY_PARTITION()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef __IDXGIDebug_FWD_DEFINED__ # define __IDXGIDebug_FWD_DEFINED__ typedef interface IDXGIDebug IDXGIDebug ; # endif # ifndef __IDXGIDebug1_FWD_DEFINED__ # define __IDXGIDebug1_FWD_DEFINED__ typedef interface IDXGIDebug1 IDXGIDebug1 ; # endif # include \" oaidl . h \" # include \" ocidl . h \" # ifdef __cplusplus \" C \" { # endif # include<winapifamily . h> # pragma region Application Family # if)",
    "insertText": "WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) #define DXGI_DEBUG_BINARY_VERSION ( 1)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (DXGI_DEBUG_RLO_SUMMARY = 0 x1,DXGI_DEBUG_RLO_DETAIL = 0 x2,DXGI_DEBUG_RLO_IGNORE_INTERNAL = 0 x4,DXGI_DEBUG_RLO_ALL = 0 x7 } DXGI_DEBUG_RLO_FLAGS ; typedef GUID DXGI_DEBUG_ID ;)",
    "insertText": "DEFINE_GUID(DXGI_DEBUG_ALL, 0xe48ae283, 0xda80, 0x490b, 0x87, 0xe6, 0x43, 0xe9, 0xa9, 0xcf, 0xda, 0x8)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(DXGI_DEBUG_DX, 0x35cdd7fc, 0x13b2, 0x421d, 0xa5, 0xd7, 0x7e, 0x44, 0x51, 0x28, 0x7d, 0x64)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(DXGI_DEBUG_DXGI, 0x25cddaa4, 0xb1c6, 0x47e1, 0xac, 0x3e, 0x98, 0x87, 0x5b, 0x5a, 0x2e, 0x2a)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(DXGI_DEBUG_APP, 0x6cd6e01, 0x4219, 0x4ebd, 0x87, 0x9, 0x27, 0xed, 0x23, 0x36, 0xc, 0x62)"
  },
  {
    "label": "DXGI_INFO_QUEUE_MESSAGE_CATEGORY_MISCELLANEOUS()",
    "kind": "Method",
    "detail": "Function (typedef enum DXGI_INFO_QUEUE_MESSAGE_CATEGORY { DXGI_INFO_QUEUE_MESSAGE_CATEGORY_UNKNOWN = 0,)",
    "insertText": "DXGI_INFO_QUEUE_MESSAGE_CATEGORY_MISCELLANEOUS(DXGI_INFO_QUEUE_MESSAGE_CATEGORY_UNKNOWN + 1 ) , DXGI_INFO_QUEUE_MESSAGE_CATEGORY_INITIALIZATION = ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_MISCELLANEOUS + 1 ) , DXGI_INFO_QUEUE_MESSAGE_CATEGORY_CLEANUP = ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_INITIALIZATION + 1 ) , DXGI_INFO_QUEUE_MESSAGE_CATEGORY_COMPILATION = ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_CLEANUP + 1 ) , DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_CREATION = ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_COMPILATION + 1 ) , DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_SETTING = ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_CREATION + 1 ) , DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_GETTING = ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_SETTING + 1 ) , DXGI_INFO_QUEUE_MESSAGE_CATEGORY_RESOURCE_MANIPULATION = ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_GETTING + 1 ) , DXGI_INFO_QUEUE_MESSAGE_CATEGORY_EXECUTION = ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_RESOURCE_MANIPULATION + 1 ) , DXGI_INFO_QUEUE_MESSAGE_CATEGORY_SHADER = ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_EXECUTION + 1)"
  },
  {
    "label": "DXGI_INFO_QUEUE_MESSAGE_SEVERITY_ERROR()",
    "kind": "Method",
    "detail": "Function (typedef enum DXGI_INFO_QUEUE_MESSAGE_SEVERITY { DXGI_INFO_QUEUE_MESSAGE_SEVERITY_CORRUPTION = 0,)",
    "insertText": "DXGI_INFO_QUEUE_MESSAGE_SEVERITY_ERROR(DXGI_INFO_QUEUE_MESSAGE_SEVERITY_CORRUPTION + 1 ) , DXGI_INFO_QUEUE_MESSAGE_SEVERITY_WARNING = ( DXGI_INFO_QUEUE_MESSAGE_SEVERITY_ERROR + 1 ) , DXGI_INFO_QUEUE_MESSAGE_SEVERITY_INFO = ( DXGI_INFO_QUEUE_MESSAGE_SEVERITY_WARNING + 1 ) , DXGI_INFO_QUEUE_MESSAGE_SEVERITY_MESSAGE = ( DXGI_INFO_QUEUE_MESSAGE_SEVERITY_INFO + 1)"
  },
  {
    "label": "_Field_size_()",
    "kind": "Method",
    "detail": "Function (typedef int DXGI_INFO_QUEUE_MESSAGE_ID ; # define DXGI_INFO_QUEUE_MESSAGE_ID_STRING_FROM_APPLICATION 0 typedef struct DXGI_INFO_QUEUE_MESSAGE { DXGI_DEBUG_ID Producer ; DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category ; DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity ; DXGI_INFO_QUEUE_MESSAGE_ID ID ;)",
    "insertText": "_Field_size_(DescriptionByteLength)"
  },
  {
    "label": "_Field_size_()",
    "kind": "Method",
    "detail": "Function (SIZE_T DescriptionByteLength ; } DXGI_INFO_QUEUE_MESSAGE ; typedef struct DXGI_INFO_QUEUE_FILTER_DESC { UINT NumCategories ;)",
    "insertText": "_Field_size_(NumCategories)"
  },
  {
    "label": "_Field_size_()",
    "kind": "Method",
    "detail": "Function (UINT NumSeverities ;)",
    "insertText": "_Field_size_(NumSeverities)"
  },
  {
    "label": "_Field_size_()",
    "kind": "Method",
    "detail": "Function (UINT NumIDs ;)",
    "insertText": "_Field_size_(NumIDs)"
  },
  {
    "label": "DXGIGetDebugInterface()",
    "kind": "Method",
    "detail": "Function (} DXGI_INFO_QUEUE_FILTER_DESC ; typedef struct DXGI_INFO_QUEUE_FILTER { DXGI_INFO_QUEUE_FILTER_DESC AllowList ; DXGI_INFO_QUEUE_FILTER_DESC DenyList ; } DXGI_INFO_QUEUE_FILTER ; # define DXGI_INFO_QUEUE_DEFAULT_MESSAGE_COUNT_LIMIT 1 0 2 4 HRESULT WINAPI)",
    "insertText": "DXGIGetDebugInterface(REFIID riid, void **ppDebug)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_dxgidebug_0000_0000_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_dxgidebug_0000_0000_v0_0_s_ifspec ; # ifndef __IDXGIInfoQueue_INTERFACE_DEFINED__ # define __IDXGIInfoQueue_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGIInfoQueue ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"D67441C7-672A-476f-9E82-CD55B44949CE\")"
  },
  {
    "label": "SetMessageCountLimit()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetMessageCountLimit(_In_ DXGI_DEBUG_ID Producer, _In_ UINT64 MessageCountLimit)"
  },
  {
    "label": "ClearStoredMessages()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ClearStoredMessages(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "GetMessage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetMessage(_In_ DXGI_DEBUG_ID Producer, _In_ UINT64 MessageIndex, _Out_writes_bytes_opt_(*pMessageByteLength) DXGI_INFO_QUEUE_MESSAGE *pMessage, _Inout_ SIZE_T *pMessageByteLength)"
  },
  {
    "label": "GetNumStoredMessagesAllowedByRetrievalFilters()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetNumStoredMessagesAllowedByRetrievalFilters(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "GetNumStoredMessages()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetNumStoredMessages(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "GetNumMessagesDiscardedByMessageCountLimit()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetNumMessagesDiscardedByMessageCountLimit(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "GetMessageCountLimit()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetMessageCountLimit(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "GetNumMessagesAllowedByStorageFilter()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetNumMessagesAllowedByStorageFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "GetNumMessagesDeniedByStorageFilter()",
    "kind": "Method",
    "detail": "Function (UINT64 STDMETHODCALLTYPE)",
    "insertText": "GetNumMessagesDeniedByStorageFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "AddStorageFilterEntries()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "AddStorageFilterEntries(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "GetStorageFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetStorageFilter(_In_ DXGI_DEBUG_ID Producer, _Out_writes_bytes_opt_(*pFilterByteLength) DXGI_INFO_QUEUE_FILTER *pFilter, _Inout_ SIZE_T *pFilterByteLength)"
  },
  {
    "label": "ClearStorageFilter()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ClearStorageFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "PushEmptyStorageFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushEmptyStorageFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "PushDenyAllStorageFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushDenyAllStorageFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "PushCopyOfStorageFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushCopyOfStorageFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "PushStorageFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushStorageFilter(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "PopStorageFilter()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PopStorageFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "GetStorageFilterStackSize()",
    "kind": "Method",
    "detail": "Function (UINT STDMETHODCALLTYPE)",
    "insertText": "GetStorageFilterStackSize(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "AddRetrievalFilterEntries()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "AddRetrievalFilterEntries(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "GetRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetRetrievalFilter(_In_ DXGI_DEBUG_ID Producer, _Out_writes_bytes_opt_(*pFilterByteLength) DXGI_INFO_QUEUE_FILTER *pFilter, _Inout_ SIZE_T *pFilterByteLength)"
  },
  {
    "label": "ClearRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ClearRetrievalFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "PushEmptyRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushEmptyRetrievalFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "PushDenyAllRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushDenyAllRetrievalFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "PushCopyOfRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushCopyOfRetrievalFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "PushRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PushRetrievalFilter(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "PopRetrievalFilter()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PopRetrievalFilter(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "GetRetrievalFilterStackSize()",
    "kind": "Method",
    "detail": "Function (UINT STDMETHODCALLTYPE)",
    "insertText": "GetRetrievalFilterStackSize(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "AddMessage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "AddMessage(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category, _In_ DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity, _In_ DXGI_INFO_QUEUE_MESSAGE_ID ID, _In_ LPCSTR pDescription)"
  },
  {
    "label": "AddApplicationMessage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "AddApplicationMessage(_In_ DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity, _In_ LPCSTR pDescription)"
  },
  {
    "label": "SetBreakOnCategory()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetBreakOnCategory(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category, _In_ BOOL bEnable)"
  },
  {
    "label": "SetBreakOnSeverity()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetBreakOnSeverity(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity, _In_ BOOL bEnable)"
  },
  {
    "label": "SetBreakOnID()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetBreakOnID(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_ID ID, _In_ BOOL bEnable)"
  },
  {
    "label": "GetBreakOnCategory()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "GetBreakOnCategory(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category)"
  },
  {
    "label": "GetBreakOnSeverity()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "GetBreakOnSeverity(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity)"
  },
  {
    "label": "GetBreakOnID()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "GetBreakOnID(_In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_ID ID)"
  },
  {
    "label": "SetMuteDebugOutput()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "SetMuteDebugOutput(_In_ DXGI_DEBUG_ID Producer, _In_ BOOL bMute)"
  },
  {
    "label": "GetMuteDebugOutput()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "GetMuteDebugOutput(_In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIInfoQueueVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIInfoQueue * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIInfoQueue * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIInfoQueue * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetMessageCountLimit )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ UINT64 MessageCountLimit)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ClearStoredMessages )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetMessage )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ UINT64 MessageIndex, _Out_writes_bytes_opt_(*pMessageByteLength) DXGI_INFO_QUEUE_MESSAGE *pMessage, _Inout_ SIZE_T *pMessageByteLength)"
  },
  {
    "label": "UINT64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT64(STDMETHODCALLTYPE *GetNumStoredMessagesAllowedByRetrievalFilters )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "UINT64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT64(STDMETHODCALLTYPE *GetNumStoredMessages )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "UINT64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT64(STDMETHODCALLTYPE *GetNumMessagesDiscardedByMessageCountLimit )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "UINT64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT64(STDMETHODCALLTYPE *GetMessageCountLimit )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "UINT64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT64(STDMETHODCALLTYPE *GetNumMessagesAllowedByStorageFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "UINT64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT64(STDMETHODCALLTYPE *GetNumMessagesDeniedByStorageFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *AddStorageFilterEntries )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetStorageFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _Out_writes_bytes_opt_(*pFilterByteLength) DXGI_INFO_QUEUE_FILTER *pFilter, _Inout_ SIZE_T *pFilterByteLength)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ClearStorageFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *PushEmptyStorageFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *PushDenyAllStorageFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *PushCopyOfStorageFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *PushStorageFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PopStorageFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetStorageFilterStackSize )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *AddRetrievalFilterEntries )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetRetrievalFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _Out_writes_bytes_opt_(*pFilterByteLength) DXGI_INFO_QUEUE_FILTER *pFilter, _Inout_ SIZE_T *pFilterByteLength)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ClearRetrievalFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *PushEmptyRetrievalFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *PushDenyAllRetrievalFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *PushCopyOfRetrievalFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *PushRetrievalFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_FILTER *pFilter)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PopRetrievalFilter )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetRetrievalFilterStackSize )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *AddMessage )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category, _In_ DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity, _In_ DXGI_INFO_QUEUE_MESSAGE_ID ID, _In_ LPCSTR pDescription)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *AddApplicationMessage )( IDXGIInfoQueue * This, _In_ DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity, _In_ LPCSTR pDescription)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetBreakOnCategory )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category, _In_ BOOL bEnable)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetBreakOnSeverity )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity, _In_ BOOL bEnable)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetBreakOnID )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_ID ID, _In_ BOOL bEnable)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *GetBreakOnCategory )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *GetBreakOnSeverity )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *GetBreakOnID )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ DXGI_INFO_QUEUE_MESSAGE_ID ID)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SetMuteDebugOutput )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer, _In_ BOOL bMute)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *GetMuteDebugOutput )( IDXGIInfoQueue * This, _In_ DXGI_DEBUG_ID Producer)"
  },
  {
    "label": "IDXGIInfoQueue_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIInfoQueueVtbl ; interface IDXGIInfoQueue { CONST_VTBL struct IDXGIInfoQueueVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIInfoQueue_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIInfoQueue_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIInfoQueue_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIInfoQueue_SetMessageCountLimit(This,Producer,MessageCountLimit) \\ ( (This)->lpVtbl -> SetMessageCountLimit(This,Producer,MessageCountLimit) ) #define IDXGIInfoQueue_ClearStoredMessages(This,Producer) \\ ( (This)->lpVtbl -> ClearStoredMessages(This,Producer) ) #define IDXGIInfoQueue_GetMessage(This,Producer,MessageIndex,pMessage,pMessageByteLength) \\ ( (This)->lpVtbl -> GetMessage(This,Producer,MessageIndex,pMessage,pMessageByteLength) ) #define IDXGIInfoQueue_GetNumStoredMessagesAllowedByRetrievalFilters(This,Producer) \\ ( (This)->lpVtbl -> GetNumStoredMessagesAllowedByRetrievalFilters(This,Producer) ) #define IDXGIInfoQueue_GetNumStoredMessages(This,Producer) \\ ( (This)->lpVtbl -> GetNumStoredMessages(This,Producer) ) #define IDXGIInfoQueue_GetNumMessagesDiscardedByMessageCountLimit(This,Producer) \\ ( (This)->lpVtbl -> GetNumMessagesDiscardedByMessageCountLimit(This,Producer) ) #define IDXGIInfoQueue_GetMessageCountLimit(This,Producer) \\ ( (This)->lpVtbl -> GetMessageCountLimit(This,Producer) ) #define IDXGIInfoQueue_GetNumMessagesAllowedByStorageFilter(This,Producer) \\ ( (This)->lpVtbl -> GetNumMessagesAllowedByStorageFilter(This,Producer) ) #define IDXGIInfoQueue_GetNumMessagesDeniedByStorageFilter(This,Producer) \\ ( (This)->lpVtbl -> GetNumMessagesDeniedByStorageFilter(This,Producer) ) #define IDXGIInfoQueue_AddStorageFilterEntries(This,Producer,pFilter) \\ ( (This)->lpVtbl -> AddStorageFilterEntries(This,Producer,pFilter) ) #define IDXGIInfoQueue_GetStorageFilter(This,Producer,pFilter,pFilterByteLength) \\ ( (This)->lpVtbl -> GetStorageFilter(This,Producer,pFilter,pFilterByteLength) ) #define IDXGIInfoQueue_ClearStorageFilter(This,Producer) \\ ( (This)->lpVtbl -> ClearStorageFilter(This,Producer) ) #define IDXGIInfoQueue_PushEmptyStorageFilter(This,Producer) \\ ( (This)->lpVtbl -> PushEmptyStorageFilter(This,Producer) ) #define IDXGIInfoQueue_PushDenyAllStorageFilter(This,Producer) \\ ( (This)->lpVtbl -> PushDenyAllStorageFilter(This,Producer) ) #define IDXGIInfoQueue_PushCopyOfStorageFilter(This,Producer) \\ ( (This)->lpVtbl -> PushCopyOfStorageFilter(This,Producer) ) #define IDXGIInfoQueue_PushStorageFilter(This,Producer,pFilter) \\ ( (This)->lpVtbl -> PushStorageFilter(This,Producer,pFilter) ) #define IDXGIInfoQueue_PopStorageFilter(This,Producer) \\ ( (This)->lpVtbl -> PopStorageFilter(This,Producer) ) #define IDXGIInfoQueue_GetStorageFilterStackSize(This,Producer) \\ ( (This)->lpVtbl -> GetStorageFilterStackSize(This,Producer) ) #define IDXGIInfoQueue_AddRetrievalFilterEntries(This,Producer,pFilter) \\ ( (This)->lpVtbl -> AddRetrievalFilterEntries(This,Producer,pFilter) ) #define IDXGIInfoQueue_GetRetrievalFilter(This,Producer,pFilter,pFilterByteLength) \\ ( (This)->lpVtbl -> GetRetrievalFilter(This,Producer,pFilter,pFilterByteLength) ) #define IDXGIInfoQueue_ClearRetrievalFilter(This,Producer) \\ ( (This)->lpVtbl -> ClearRetrievalFilter(This,Producer) ) #define IDXGIInfoQueue_PushEmptyRetrievalFilter(This,Producer) \\ ( (This)->lpVtbl -> PushEmptyRetrievalFilter(This,Producer) ) #define IDXGIInfoQueue_PushDenyAllRetrievalFilter(This,Producer) \\ ( (This)->lpVtbl -> PushDenyAllRetrievalFilter(This,Producer) ) #define IDXGIInfoQueue_PushCopyOfRetrievalFilter(This,Producer) \\ ( (This)->lpVtbl -> PushCopyOfRetrievalFilter(This,Producer) ) #define IDXGIInfoQueue_PushRetrievalFilter(This,Producer,pFilter) \\ ( (This)->lpVtbl -> PushRetrievalFilter(This,Producer,pFilter) ) #define IDXGIInfoQueue_PopRetrievalFilter(This,Producer) \\ ( (This)->lpVtbl -> PopRetrievalFilter(This,Producer) ) #define IDXGIInfoQueue_GetRetrievalFilterStackSize(This,Producer) \\ ( (This)->lpVtbl -> GetRetrievalFilterStackSize(This,Producer) ) #define IDXGIInfoQueue_AddMessage(This,Producer,Category,Severity,ID,pDescription) \\ ( (This)->lpVtbl -> AddMessage(This,Producer,Category,Severity,ID,pDescription) ) #define IDXGIInfoQueue_AddApplicationMessage(This,Severity,pDescription) \\ ( (This)->lpVtbl -> AddApplicationMessage(This,Severity,pDescription) ) #define IDXGIInfoQueue_SetBreakOnCategory(This,Producer,Category,bEnable) \\ ( (This)->lpVtbl -> SetBreakOnCategory(This,Producer,Category,bEnable) ) #define IDXGIInfoQueue_SetBreakOnSeverity(This,Producer,Severity,bEnable) \\ ( (This)->lpVtbl -> SetBreakOnSeverity(This,Producer,Severity,bEnable) ) #define IDXGIInfoQueue_SetBreakOnID(This,Producer,ID,bEnable) \\ ( (This)->lpVtbl -> SetBreakOnID(This,Producer,ID,bEnable) ) #define IDXGIInfoQueue_GetBreakOnCategory(This,Producer,Category) \\ ( (This)->lpVtbl -> GetBreakOnCategory(This,Producer,Category) ) #define IDXGIInfoQueue_GetBreakOnSeverity(This,Producer,Severity) \\ ( (This)->lpVtbl -> GetBreakOnSeverity(This,Producer,Severity) ) #define IDXGIInfoQueue_GetBreakOnID(This,Producer,ID) \\ ( (This)->lpVtbl -> GetBreakOnID(This,Producer,ID) ) #define IDXGIInfoQueue_SetMuteDebugOutput(This,Producer,bMute) \\ ( (This)->lpVtbl -> SetMuteDebugOutput(This,Producer,bMute) ) #define IDXGIInfoQueue_GetMuteDebugOutput(This,Producer) \\ ( (This)->lpVtbl -> GetMuteDebugOutput(This,Producer))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"119E7452-DE9E-40fe-8806-88F90C12B441\")"
  },
  {
    "label": "ReportLiveObjects()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "ReportLiveObjects(GUID apiid, DXGI_DEBUG_RLO_FLAGS flags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIDebugVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIDebug * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIDebug * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIDebug * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ReportLiveObjects )( IDXGIDebug * This, GUID apiid, DXGI_DEBUG_RLO_FLAGS flags)"
  },
  {
    "label": "IDXGIDebug_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIDebugVtbl ; interface IDXGIDebug { CONST_VTBL struct IDXGIDebugVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIDebug_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIDebug_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIDebug_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIDebug_ReportLiveObjects(This,apiid,flags) \\ ( (This)->lpVtbl -> ReportLiveObjects(This,apiid,flags))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"c5a05f0c-16f2-4adf-9f4d-a8c4d58ac550\")"
  },
  {
    "label": "EnableLeakTrackingForThread()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "EnableLeakTrackingForThread(void)"
  },
  {
    "label": "DisableLeakTrackingForThread()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "DisableLeakTrackingForThread(void)"
  },
  {
    "label": "IsLeakTrackingEnabledForThread()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "IsLeakTrackingEnabledForThread(void)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIDebug1Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIDebug1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIDebug1 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIDebug1 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ReportLiveObjects )( IDXGIDebug1 * This, GUID apiid, DXGI_DEBUG_RLO_FLAGS flags)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *EnableLeakTrackingForThread )( IDXGIDebug1 * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *DisableLeakTrackingForThread )( IDXGIDebug1 * This)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *IsLeakTrackingEnabledForThread )( IDXGIDebug1 * This)"
  },
  {
    "label": "IDXGIDebug1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIDebug1Vtbl ; interface IDXGIDebug1 { CONST_VTBL struct IDXGIDebug1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIDebug1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIDebug1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIDebug1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIDebug1_ReportLiveObjects(This,apiid,flags) \\ ( (This)->lpVtbl -> ReportLiveObjects(This,apiid,flags) ) #define IDXGIDebug1_EnableLeakTrackingForThread(This) \\ ( (This)->lpVtbl -> EnableLeakTrackingForThread(This) ) #define IDXGIDebug1_DisableLeakTrackingForThread(This) \\ ( (This)->lpVtbl -> DisableLeakTrackingForThread(This) ) #define IDXGIDebug1_IsLeakTrackingEnabledForThread(This) \\ ( (This)->lpVtbl -> IsLeakTrackingEnabledForThread(This) ) #endif #endif #endif #endif #pragma endregion #pragma region Desktop Family #if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) #endif #pragma endregion DEFINE_GUID(IID_IDXGIInfoQueue,0xD67441C7,0x672A,0x476f,0x9E,0x82,0xCD,0x55,0xB4,0x49,0x49,0xCE)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIDebug,0x119E7452,0xDE9E,0x40fe,0x88,0x06,0x88,0xF9,0x0C,0x12,0xB4,0x41)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIDebug1,0xc5a05f0c,0x16f2,0x4adf,0x9f,0x4d,0xa8,0xc4,0xd5,0x8a,0xc5,0x50)"
  }
]