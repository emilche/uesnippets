[
  {
    "label": "NackRequester",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NackRequester"
  },
  {
    "label": "PacketRouter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PacketRouter"
  },
  {
    "label": "ReceiveStatistics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReceiveStatistics"
  },
  {
    "label": "RtcpRttStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcpRttStats"
  },
  {
    "label": "RtpPacketReceived",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpPacketReceived"
  },
  {
    "label": "Transport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Transport"
  },
  {
    "label": "UlpfecReceiver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UlpfecReceiver"
  },
  {
    "label": "RtpVideoStreamReceiver2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpVideoStreamReceiver2"
  },
  {
    "label": "OnCompleteFrameCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnCompleteFrameCallback"
  },
  {
    "label": "RtcpFeedbackBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcpFeedbackBuffer"
  },
  {
    "label": "LossNotificationState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LossNotificationState"
  },
  {
    "label": "ParseGenericDependenciesResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ParseGenericDependenciesResult"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "AddReceiveCodec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReceiveCodec(uint8_t payload_type,\n                       VideoCodecType video_codec,\n                       const std::map<std::string, std::string>& codec_params,\n                       bool raw_payload)"
  },
  {
    "label": "RemoveReceiveCodec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReceiveCodec(uint8_t payload_type)"
  },
  {
    "label": "RemoveReceiveCodecs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReceiveCodecs()"
  },
  {
    "label": "StartReceive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartReceive()"
  },
  {
    "label": "StopReceive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopReceive()"
  },
  {
    "label": "DeliverRtcp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeliverRtcp(const uint8_t* rtcp_packet, size_t rtcp_packet_length)"
  },
  {
    "label": "FrameContinuous()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameContinuous(int64_t seq_num)"
  },
  {
    "label": "FrameDecoded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameDecoded(int64_t seq_num)"
  },
  {
    "label": "SignalNetworkState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SignalNetworkState(NetworkState state)"
  },
  {
    "label": "OnReceivedPayloadData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedPayloadData(rtc::CopyOnWriteBuffer codec_payload,\n                             const RtpPacketReceived& rtp_packet,\n                             const RTPVideoHeader& video)"
  },
  {
    "label": "SetFrameDecryptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameDecryptor(\n      rtc::scoped_refptr<FrameDecryptorInterface> frame_decryptor)"
  },
  {
    "label": "SetDepacketizerToDecoderFrameTransformer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDepacketizerToDecoderFrameTransformer(\n      rtc::scoped_refptr<FrameTransformerInterface> frame_transformer)"
  },
  {
    "label": "SetRtpExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRtpExtensions(const std::vector<RtpExtension>& extensions)"
  },
  {
    "label": "UpdateRtt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRtt(int64_t max_rtt_ms)"
  },
  {
    "label": "OnLocalSsrcChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLocalSsrcChange(uint32_t local_ssrc)"
  },
  {
    "label": "SetRtcpMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRtcpMode(RtcpMode mode)"
  },
  {
    "label": "SetReferenceTimeReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReferenceTimeReport(bool enabled)"
  },
  {
    "label": "SetPacketSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPacketSink(RtpPacketSinkInterface* packet_sink)"
  },
  {
    "label": "SetLossNotificationEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLossNotificationEnabled(bool enabled)"
  },
  {
    "label": "SetNackHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNackHistory(TimeDelta history)"
  },
  {
    "label": "SetProtectionPayloadTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProtectionPayloadTypes(int red_payload_type, int ulpfec_payload_type)"
  },
  {
    "label": "RtcpFeedbackBuffer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "RtcpFeedbackBuffer(KeyFrameRequestSender* key_frame_request_sender,\n                       NackSender* nack_sender,\n                       LossNotificationSender* loss_notification_sender)"
  },
  {
    "label": "SendBufferedRtcpFeedback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendBufferedRtcpFeedback()"
  },
  {
    "label": "ClearLossNotificationState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLossNotificationState()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (request_key_frame_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (nack_sequence_numbers_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (lntf_state_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (rtp_header_extensions_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (ulpfec_receiver_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (red_payload_type_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (packet_sink_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (receiving_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_packet_log_ms_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (nack_module_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (loss_notification_controller_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (packet_buffer_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (frame_counter_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (frame_id_unwrapper_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (video_structure_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (video_structure_frame_id_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (reference_finder_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (current_codec_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_assembled_frame_rtp_timestamp_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_seq_num_for_pic_id_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (tracker_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (payload_type_map_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (pt_codec_params_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (has_received_frame_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_received_rtp_timestamp_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_received_keyframe_rtp_timestamp_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_received_rtp_system_time_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_received_keyframe_rtp_system_time_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_PT_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (buffered_frame_decryptor_)",
    "insertText": "RTC_PT_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (frames_decryptable_)",
    "insertText": "RTC_GUARDED_BY(worker_task_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (absolute_capture_time_interpolator_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (capture_clock_offset_updater_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (rtp_seq_num_unwrapper_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (packet_infos_)",
    "insertText": "RTC_GUARDED_BY(packet_sequence_checker_)"
  }
]