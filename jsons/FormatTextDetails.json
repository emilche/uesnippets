[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "UK2Node_FormatText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_FormatText"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FFormatTextDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFormatTextDetails"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "IDetailCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCustomization"
  },
  {
    "label": "FFormatTextLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFormatTextLayout"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FFormatTextLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFormatTextLayout"
  },
  {
    "label": "FFormatTextArgumentLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFormatTextArgumentLayout"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FFormatTextArgumentLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFormatTextArgumentLayout"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeShareable(new FFormatTextDetails)"
  },
  {
    "label": "OnForceRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnForceRefresh()"
  },
  {
    "label": "OnAddNewArgument()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddNewArgument()"
  },
  {
    "label": "OnEditorPackageModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditorPackageModified(UPackage* Package)"
  },
  {
    "label": "OnMoveArgumentUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMoveArgumentUp()"
  },
  {
    "label": "OnMoveArgumentDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMoveArgumentDown()"
  },
  {
    "label": "OnArgumentRemove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArgumentRemove()"
  },
  {
    "label": "OnArgumentNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArgumentNameCommitted(const FText& NewText, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "OnArgumentNameChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArgumentNameChanged(const FText& NewText)"
  }
]