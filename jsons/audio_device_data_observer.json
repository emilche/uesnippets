[
  {
    "label": "AudioDeviceDataObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioDeviceDataObserver"
  },
  {
    "label": "OnCaptureData()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_DEVICE_INCLUDE_AUDIO_DEVICE_DATA_OBSERVER_H_ # define MODULES_AUDIO_DEVICE_INCLUDE_AUDIO_DEVICE_DATA_OBSERVER_H_ # include<stddef . h> # include<stdint . h> # include \" absl / base / attributes . h \" # include \" api / scoped_refptr . h \" # include \" api / task_queue / task_queue_factory . h \" # include \" modules / audio_device / include / audio_device . h \" namespace webrtc { class AudioDeviceDataObserver { public : void)",
    "insertText": "OnCaptureData(const void* audio_samples, size_t num_samples, size_t bytes_per_sample, size_t num_channels, uint32_t samples_per_sec)"
  },
  {
    "label": "OnRenderData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenderData(const void* audio_samples, size_t num_samples, size_t bytes_per_sample, size_t num_channels, uint32_t samples_per_sec)"
  },
  {
    "label": "AudioDeviceDataObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AudioDeviceDataObserver()"
  },
  {
    "label": "CreateAudioDeviceWithDataObserver()",
    "kind": "Method",
    "detail": "Function (} ; rtc::scoped_refptr<AudioDeviceModule>)",
    "insertText": "CreateAudioDeviceWithDataObserver(rtc::scoped_refptr<AudioDeviceModule> impl, std::unique_ptr<AudioDeviceDataObserver> observer)"
  },
  {
    "label": "ABSL_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ABSL_DEPRECATED(\"\") rtc::scoped_refptr<AudioDeviceModule> CreateAudioDeviceWithDataObserver( rtc::scoped_refptr<AudioDeviceModule> impl, AudioDeviceDataObserver* observer)"
  },
  {
    "label": "CreateAudioDeviceWithDataObserver()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<AudioDeviceModule>)",
    "insertText": "CreateAudioDeviceWithDataObserver(AudioDeviceModule::AudioLayer audio_layer, TaskQueueFactory* task_queue_factory, std::unique_ptr<AudioDeviceDataObserver> observer)"
  },
  {
    "label": "ABSL_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ABSL_DEPRECATED(\"\") rtc::scoped_refptr<AudioDeviceModule> CreateAudioDeviceWithDataObserver( AudioDeviceModule::AudioLayer audio_layer, TaskQueueFactory* task_queue_factory, AudioDeviceDataObserver* observer)"
  }
]