[
  {
    "label": "PDBSymbolCompiland",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolCompiland"
  },
  {
    "label": "PDBSymbolExe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBSymbolExe"
  },
  {
    "label": "IPDBSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPDBSession"
  },
  {
    "label": "IPDBSession()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_DEBUGINFO_PDB_IPDBSESSION_H # define LLVM_DEBUGINFO_PDB_IPDBSESSION_H # include \" PDBTypes . h \" # include \" llvm / Support / Casting . h \" # include<memory> namespace llvm { class PDBSymbolCompiland ; class PDBSymbolExe ; class IPDBSession { public : ~)",
    "insertText": "IPDBSession()"
  },
  {
    "label": "getLoadAddress()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getLoadAddress()"
  },
  {
    "label": "setLoadAddress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLoadAddress(uint64_t Address)"
  },
  {
    "label": "getGlobalScope()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<PDBSymbolExe>)",
    "insertText": "getGlobalScope()"
  },
  {
    "label": "getSymbolById()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<PDBSymbol>)",
    "insertText": "getSymbolById(uint32_t SymbolId)"
  },
  {
    "label": "getConcreteSymbolById()",
    "kind": "Method",
    "detail": "Function (template<T> std::unique_ptr<T>)",
    "insertText": "getConcreteSymbolById(uint32_t SymbolId)"
  },
  {
    "label": "Symbol()",
    "kind": "Method",
    "detail": "Function (auto)",
    "insertText": "Symbol(getSymbolById(SymbolId))"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T* ConcreteSymbol = dyn_cast<)",
    "insertText": "T(Symbol.get())"
  },
  {
    "label": "release()",
    "kind": "Method",
    "detail": "Function (Symbol .)",
    "insertText": "release()"
  },
  {
    "label": "findSymbolByAddress()",
    "kind": "Method",
    "detail": "Function (} std::unique_ptr<PDBSymbol>)",
    "insertText": "findSymbolByAddress(uint64_t Address, PDB_SymType Type)"
  },
  {
    "label": "findLineNumbersByAddress()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<IPDBEnumLineNumbers>)",
    "insertText": "findLineNumbersByAddress(uint64_t Address, uint32_t Length)"
  },
  {
    "label": "getAllSourceFiles()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<IPDBEnumSourceFiles>)",
    "insertText": "getAllSourceFiles()"
  },
  {
    "label": "getSourceFilesForCompiland()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<IPDBEnumSourceFiles>)",
    "insertText": "getSourceFilesForCompiland(const PDBSymbolCompiland &Compiland)"
  },
  {
    "label": "getSourceFileById()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<IPDBSourceFile>)",
    "insertText": "getSourceFileById(uint32_t FileId)"
  },
  {
    "label": "getDebugStreams()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<IPDBEnumDataStreams>)",
    "insertText": "getDebugStreams()"
  }
]