[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPhysicsFieldInfos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPhysicsFieldInfos"
  },
  {
    "label": "FPhysicsFieldResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsFieldResource"
  },
  {
    "label": "FPhysicsFieldInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsFieldInstance"
  },
  {
    "label": "UPhysicsFieldComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsFieldComponent"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "FPhysicsFieldSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsFieldSceneProxy"
  },
  {
    "label": "FPhysicsFieldSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsFieldSceneProxy"
  },
  {
    "label": "FPhysicsFieldSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsFieldSceneProxy"
  },
  {
    "label": "UPhysicsFieldComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsFieldComponent"
  },
  {
    "label": "UPhysicsFieldStatics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsFieldStatics"
  },
  {
    "label": "UpdateResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResource(FRHICommandList& RHICmdList,\n\t\tconst TStaticArray<int32, EFieldPhysicsType::Field_PhysicsType_Max + 1>& TargetsOffsetsDatas, const TArray<int32>& NodesOffsetsDatas, const TArray<float>& NodesParamsDatas,\n\t\tconst TArray<FVector>& TargetsMinDatas, const TArray<FVector>& TargetsMaxDatas, const float TimeSeconds, \n\t\tconst TArray<FVector4>& BoundsMinDatas, const TArray<FVector4>& BoundsMaxDatas, const TStaticArray<int32, EFieldPhysicsType::Field_PhysicsType_Max + 1>& BoundsOffsetsDatas)"
  },
  {
    "label": "UpdateBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBounds(const TArray<FVector>& TargetsMin, const TArray<FVector>& TargetsMax, const TStaticArray<int32, EFieldPhysicsType::Field_PhysicsType_Max + 1>& TargetOffsets,\n\t\t\t\t\t  const TStaticArray<int32, EFieldPhysicsType::Field_PhysicsType_Max + 1>& BoundsOffsets)"
  },
  {
    "label": "InitInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitInstance(const TArray<EFieldPhysicsType>& TargetTypes, const bool bBuildClipmap)"
  },
  {
    "label": "ReleaseInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseInstance()"
  },
  {
    "label": "UpdateInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInstance(const float TimeSeconds, const bool bIsDebugBuffer)"
  },
  {
    "label": "UPhysicsFieldComponent()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "UPhysicsFieldComponent()"
  },
  {
    "label": "AddTransientCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTransientCommand(const FFieldSystemCommand& FieldCommand, const bool bIsGPUField)"
  },
  {
    "label": "AddPersistentCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPersistentCommand(const FFieldSystemCommand& FieldCommand, const bool bIsGPUField)"
  },
  {
    "label": "AddConstructionCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstructionCommand(const FFieldSystemCommand& FieldCommand)"
  },
  {
    "label": "RemoveTransientCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTransientCommand(const FFieldSystemCommand& FieldCommand, const bool bIsGPUField)"
  },
  {
    "label": "RemovePersistentCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePersistentCommand(const FFieldSystemCommand& FieldCommand, const bool bIsGPUField)"
  },
  {
    "label": "BuildCommandBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildCommandBounds(FFieldSystemCommand& FieldCommand)"
  },
  {
    "label": "GetFieldIndex()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "GetFieldIndex(const uint32 FieldType, int32& FieldIndex, EFieldOutputType& FieldOutput)"
  },
  {
    "label": "FPhysicsFieldSceneProxy()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FPhysicsFieldSceneProxy(class UPhysicsFieldComponent* PhysicsFieldComponent)"
  },
  {
    "label": "EvalPhysicsVectorField()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "EvalPhysicsVectorField(const UObject* WorldContextObject, const FVector& WorldPosition, const EFieldVectorType VectorType)"
  },
  {
    "label": "EvalPhysicsScalarField()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "EvalPhysicsScalarField(const UObject* WorldContextObject, const FVector& WorldPosition, const EFieldScalarType ScalarType)"
  },
  {
    "label": "EvalPhysicsIntegerField()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "EvalPhysicsIntegerField(const UObject* WorldContextObject, const FVector& WorldPosition, const EFieldIntegerType IntegerType)"
  },
  {
    "label": "EvaluateFieldVectorNodes()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "EvaluateFieldVectorNodes(TArray<FFieldSystemCommand>& FieldCommands, const EFieldPhysicsType FieldType, FFieldContext& FieldContext, \n\tTArray<FVector>& ResultsArray, TArray<FVector>& MaxArray)"
  },
  {
    "label": "EvaluateFieldScalarNodes()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "EvaluateFieldScalarNodes(TArray<FFieldSystemCommand>& FieldCommands, const EFieldPhysicsType FieldType, FFieldContext& FieldContext, \n\tTArray<float>& ResultsArray, TArray<float>& MaxArray)"
  },
  {
    "label": "EvaluateFieldIntegerNodes()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "EvaluateFieldIntegerNodes(TArray<FFieldSystemCommand>& FieldCommands, const EFieldPhysicsType FieldType, FFieldContext& FieldContext, \n\tTArray<int32>& ResultsArray, TArray<int32>& MaxArray)"
  }
]