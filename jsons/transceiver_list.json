[
  {
    "label": "TransceiverStableState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransceiverStableState"
  },
  {
    "label": "TransceiverList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransceiverList"
  },
  {
    "label": "TransceiverStableState()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_TRANSCEIVER_LIST_H_ # define PC_TRANSCEIVER_LIST_H_ # include<stddef . h> # include<algorithm> # include<map> # include<string> # include<vector> # include \" absl / types / optional . h \" # include \" api / media_types . h \" # include \" api / rtc_error . h \" # include \" api / rtp_parameters . h \" # include \" api / rtp_sender_interface . h \" # include \" api / scoped_refptr . h \" # include \" api / sequence_checker . h \" # include \" pc / rtp_transceiver . h \" # include \" rtc_base / checks . h \" # include \" rtc_base / system / no_unique_address . h \" # include \" rtc_base / thread_annotations . h \" namespace webrtc { typedef rtc::scoped_refptr<RtpTransceiverProxyWithInternal<RtpTransceiver>> RtpTransceiverProxyRefPtr ; class TransceiverStableState { public :)",
    "insertText": "TransceiverStableState()"
  },
  {
    "label": "set_newly_created()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_newly_created()"
  },
  {
    "label": "SetMSectionIfUnset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMSectionIfUnset(absl::optional<std::string> mid, absl::optional<size_t> mline_index)"
  },
  {
    "label": "SetRemoteStreamIds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRemoteStreamIds(const std::vector<std::string>& ids)"
  },
  {
    "label": "SetInitSendEncodings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitSendEncodings(const std::vector<RtpEncodingParameters>& encodings)"
  },
  {
    "label": "SetFiredDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFiredDirection(absl::optional<RtpTransceiverDirection> fired_direction)"
  },
  {
    "label": "mid()",
    "kind": "Method",
    "detail": "Function (fired_direction_ = fired_direction ; } absl::optional<std::string>)",
    "insertText": "mid()"
  },
  {
    "label": "fired_direction()",
    "kind": "Method",
    "detail": "Function (} absl::optional<RtpTransceiverDirection>)",
    "insertText": "fired_direction()"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(did_set_fired_direction())"
  },
  {
    "label": "List()",
    "kind": "Method",
    "detail": "Function (} private : absl::optional<std::string> mid_ ; absl::optional<size_t> mline_index_ ; absl::optional<std::vector<std::string>> remote_stream_ids_ ; absl::optional<std::vector<RtpEncodingParameters>> init_send_encodings_ ; bool has_m_section_ = false ; bool newly_created_ = false ; absl::optional<absl::optional<RtpTransceiverDirection>> fired_direction_ ; } ; class TransceiverList { public : std::vector<RtpTransceiverProxyRefPtr>)",
    "insertText": "List()"
  },
  {
    "label": "RTC_DCHECK_RUN_ON()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_RUN_ON(&sequence_checker_)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(RtpTransceiverProxyRefPtr transceiver)"
  },
  {
    "label": "push_back()",
    "kind": "Method",
    "detail": "Function (transceivers_ .)",
    "insertText": "push_back(transceiver)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Remove(RtpTransceiverProxyRefPtr transceiver)"
  },
  {
    "label": "erase()",
    "kind": "Method",
    "detail": "Function (transceivers_ .)",
    "insertText": "erase(std::remove(transceivers_.begin(), transceivers_.end(), transceiver), transceivers_.end())"
  },
  {
    "label": "FindBySender()",
    "kind": "Method",
    "detail": "Function (} RtpTransceiverProxyRefPtr)",
    "insertText": "FindBySender(rtc::scoped_refptr<RtpSenderInterface> sender)"
  },
  {
    "label": "FindByMid()",
    "kind": "Method",
    "detail": "Function (RtpTransceiverProxyRefPtr)",
    "insertText": "FindByMid(const std::string& mid)"
  },
  {
    "label": "FindByMLineIndex()",
    "kind": "Method",
    "detail": "Function (RtpTransceiverProxyRefPtr)",
    "insertText": "FindByMLineIndex(size_t mline_index)"
  },
  {
    "label": "StableState()",
    "kind": "Method",
    "detail": "Function (TransceiverStableState*)",
    "insertText": "StableState(RtpTransceiverProxyRefPtr transceiver)"
  },
  {
    "label": "DiscardStableStates()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DiscardStableStates()"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (transceiver_stable_states_by_transceivers_ .)",
    "insertText": "clear()"
  },
  {
    "label": "StableStates()",
    "kind": "Method",
    "detail": "Function (} std::map<RtpTransceiverProxyRefPtr,TransceiverStableState>&)",
    "insertText": "StableStates()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (std::map<RtpTransceiverProxyRefPtr,std::vector<std::string>> remote_stream_ids_by_transceivers_)",
    "insertText": "RTC_GUARDED_BY(sequence_checker_)"
  }
]