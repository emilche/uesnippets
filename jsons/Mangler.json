[
  {
    "label": "DataLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataLayout"
  },
  {
    "label": "GlobalValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalValue"
  },
  {
    "label": "SmallVectorImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SmallVectorImpl"
  },
  {
    "label": "Twine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Twine"
  },
  {
    "label": "Mangler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Mangler"
  },
  {
    "label": "Mangler()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_MANGLER_H # define LLVM_IR_MANGLER_H # include \" llvm / ADT / DenseMap . h \" # include \" llvm / Support / raw_ostream . h \" namespace llvm { class DataLayout ; class GlobalValue ; template<T> class SmallVectorImpl ; class Twine ; class Mangler { DenseMap<const GlobalValue*,unsigned> AnonGlobalIDs ; unsigned NextAnonGlobalID ; public :)",
    "insertText": "Mangler() : NextAnonGlobalID(1)"
  },
  {
    "label": "getNameWithPrefix()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "getNameWithPrefix(raw_ostream &OS, const GlobalValue *GV, bool CannotUsePrivateLabel)"
  },
  {
    "label": "getNameWithPrefix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNameWithPrefix(SmallVectorImpl<char> &OutName, const GlobalValue *GV, bool CannotUsePrivateLabel)"
  },
  {
    "label": "getNameWithPrefix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNameWithPrefix(raw_ostream &OS, const Twine &GVName, const DataLayout &DL)"
  },
  {
    "label": "getNameWithPrefix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNameWithPrefix(SmallVectorImpl<char> &OutName, const Twine &GVName, const DataLayout &DL)"
  }
]