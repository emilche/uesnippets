[
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FMaterialShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMap"
  },
  {
    "label": "FMaterialShaderMapId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMapId"
  },
  {
    "label": "FShaderCommonCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCommonCompileJob"
  },
  {
    "label": "FShaderCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCompileJob"
  },
  {
    "label": "FShaderKeyGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderKeyGenerator"
  },
  {
    "label": "FUniformExpressionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformExpressionSet"
  },
  {
    "label": "FVertexFactoryType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexFactoryType"
  },
  {
    "label": "FMaterialShaderParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaderParameters"
  },
  {
    "label": "FMaterialShadingModelField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShadingModelField"
  },
  {
    "label": "EBlendMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlendMode"
  },
  {
    "label": "EMaterialShadingModel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMaterialShadingModel"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMaterialKeyGeneratorContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialKeyGeneratorContext"
  },
  {
    "label": "FMaterialShaderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderType"
  },
  {
    "label": "CompiledShaderInitializerType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CompiledShaderInitializerType"
  },
  {
    "label": "FMaterialShaderTypes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaderTypes"
  },
  {
    "label": "FMaterialShaders",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaders"
  },
  {
    "label": "GetShadingModelString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetShadingModelString(EMaterialShadingModel ShadingModel)"
  },
  {
    "label": "GetShadingModelFieldString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetShadingModelFieldString(FMaterialShadingModelField ShadingModels, const FShadingModelToStringDelegate& Delegate, const FString& Delimiter = \" \")"
  },
  {
    "label": "GetShadingModelFieldString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetShadingModelFieldString(FMaterialShadingModelField ShadingModels)"
  },
  {
    "label": "GetBlendModeString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetBlendModeString(EBlendMode BlendMode)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"INVALID_KEY\")"
  },
  {
    "label": "GetMaterialShaderMapKeyString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetMaterialShaderMapKeyString(\n\tconst FMaterialShaderMapId& ShaderMapId,\n\tconst FMaterialShaderParameters& ShaderParameters,\n\tEShaderPlatform Platform,\n\tbool bIncludeKeyStringShaderDependencies = true)"
  },
  {
    "label": "RecordOrEmitMaterialShaderMapKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordOrEmitMaterialShaderMapKey(\n\tFMaterialKeyGeneratorContext& Context,\n\tFMaterialShaderMapId& ShaderMapId,\n\tFMaterialShaderParameters& ShaderParameters)"
  },
  {
    "label": "RecordOrEmitMaterialShaderMapKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordOrEmitMaterialShaderMapKey(\n\tFMaterialKeyGeneratorContext& Context,\n\tconst FMaterialShaderMapId& ShaderMapId,\n\tconst FMaterialShaderParameters& ShaderParameters)"
  },
  {
    "label": "UpdateMaterialShaderCompilingStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterialShaderCompilingStats(const FMaterial* Material)"
  },
  {
    "label": "DumpMaterialStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMaterialStats( EShaderPlatform Platform )"
  },
  {
    "label": "BeginCompileShaderPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCompileShaderPipeline(\n\t\tEShaderCompileJobPriority Priority,\n\t\tuint32 ShaderMapJobId,\n\t\tEShaderPlatform Platform,\n\t\tEShaderPermutationFlags PermutationFlags,\n\t\tconst FMaterial* Material,\n\t\tconst FMaterialShaderMapId& ShaderMapId,\n\t\tFSharedShaderCompilerEnvironment* MaterialEnvironment,\n\t\tconst FShaderPipelineType* ShaderPipeline,\n\t\tTArray<TRefCountPtr<FShaderCommonCompileJob>>& NewJobs,\n\t\tconst FString& DebugGroupName,\n\t\tconst TCHAR* DebugDescription,\n\t\tconst TCHAR* DebugExtension\n\t)"
  },
  {
    "label": "ShouldCompilePipeline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePipeline(const FShaderPipelineType* ShaderPipelineType, EShaderPlatform Platform, const FMaterialShaderParameters& MaterialParameters, EShaderPermutationFlags Flags)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_Vertex, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_Pixel, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_Geometry, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_Mesh, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_Compute, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_WorkGraphComputeNode, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_Vertex, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_Pixel, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_Geometry, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_Mesh, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_Compute, OutShader)"
  },
  {
    "label": "TryGetShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryGetShader(SF_WorkGraphComputeNode, OutShader)"
  }
]