[
  {
    "label": "FStaticMeshComponentTargetFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshComponentTargetFactory"
  },
  {
    "label": "FStaticMeshComponentTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshComponentTarget"
  },
  {
    "label": "CanBuild()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ComponentSourceInterfaces . h \" # include \" TargetInterfaces / MeshTargetInterfaceTypes . h \" # include \" Components / PrimitiveComponent . h \" # include \" Components / StaticMeshComponent . h \" class FStaticMeshComponentTargetFactory : public FComponentTargetFactory { public : EMeshLODIdentifier CurrentEditingLOD = EMeshLODIdentifier::MaxQuality ; bool)",
    "insertText": "CanBuild(UActorComponent* Candidate)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FPrimitiveComponentTarget>)",
    "insertText": "Build(UPrimitiveComponent* PrimitiveComponent)"
  },
  {
    "label": "FStaticMeshComponentTarget()",
    "kind": "Method",
    "detail": "Function (} ; class FStaticMeshComponentTarget : public FPrimitiveComponentTarget { public :)",
    "insertText": "FStaticMeshComponentTarget(UPrimitiveComponent* Component, EMeshLODIdentifier EditingLOD = EMeshLODIdentifier::LOD0)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetMaterialSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMaterialSet(FComponentMaterialSet& MaterialSetOut, bool bAssetMaterials)"
  },
  {
    "label": "GetMesh()",
    "kind": "Method",
    "detail": "Function (FMeshDescription*)",
    "insertText": "GetMesh()"
  },
  {
    "label": "CommitMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitMesh(const FCommitter&)"
  },
  {
    "label": "CommitMaterialSetUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitMaterialSetUpdate(const FComponentMaterialSet& MaterialSet, bool bApplyToAsset)"
  },
  {
    "label": "HasSameSourceData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSameSourceData(const FPrimitiveComponentTarget& OtherTarget)"
  }
]