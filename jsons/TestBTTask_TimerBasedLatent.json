[
  {
    "label": "FBTTimerBasedLatentTaskMemory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBTTimerBasedLatentTaskMemory"
  },
  {
    "label": "UTestBTTask_TimerBasedLatent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTestBTTask_TimerBasedLatent"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BehaviorTree / BTTaskNode . h \" # include \" TestBTTask_TimerBasedLatent . generated . h \" struct FBTTimerBasedLatentTaskMemory { FTimerHandle TimerHandle ; uint8 bIsAborting : 1 ; } ;)",
    "insertText": "UCLASS(meta = (HiddenNode))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UTestBTTask_TimerBasedLatent()"
  },
  {
    "label": "ExecuteTask()",
    "kind": "Method",
    "detail": "Function (protected : EBTNodeResult::Type)",
    "insertText": "ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "AbortTask()",
    "kind": "Method",
    "detail": "Function (EBTNodeResult::Type)",
    "insertText": "AbortTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "GetInstanceMemorySize()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetInstanceMemorySize()"
  },
  {
    "label": "InitializeMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeMemory(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTMemoryInit::Type InitType)"
  },
  {
    "label": "CleanupMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupMemory(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTMemoryClear::Type CleanupType)"
  },
  {
    "label": "LogExecution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogExecution(UBehaviorTreeComponent& OwnerComp, int32 LogNumber)"
  }
]