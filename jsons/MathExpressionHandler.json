[
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "UK2Node_MathExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_MathExpression"
  },
  {
    "label": "FBPTerminal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPTerminal"
  },
  {
    "label": "FBlueprintCompiledStatement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintCompiledStatement"
  },
  {
    "label": "FKismetFunctionContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKismetFunctionContext"
  },
  {
    "label": "FKCHandler_MathExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKCHandler_MathExpression"
  },
  {
    "label": "GenerateFunctionRPN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" CoreMinimal . h \" # include \" KismetCompilerMisc . h \" class FKismetCompilerContext ; class UEdGraphNode ; class UEdGraphPin ; class UFunction ; class UK2Node_MathExpression ; struct FBPTerminal ; struct FBlueprintCompiledStatement ; struct FKismetFunctionContext ; class FKCHandler_MathExpression : public FNodeHandlingFunctor { FBlueprintCompiledStatement*)",
    "insertText": "GenerateFunctionRPN(UEdGraphNode* CurrentNode , FKismetFunctionContext& Context , UK2Node_MathExpression& MENode , FBPTerminal* ResultTerm , TMap<UEdGraphPin*, UEdGraphPin*>& InnerToOuterInput)"
  },
  {
    "label": "FKCHandler_MathExpression()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FKCHandler_MathExpression(FKismetCompilerContext& InCompilerContext) : FNodeHandlingFunctor(InCompilerContext)"
  },
  {
    "label": "RegisterNets()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterNets(FKismetFunctionContext& Context, UEdGraphNode* InNode)"
  },
  {
    "label": "RegisterNet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNet(FKismetFunctionContext& Context, UEdGraphPin* Net)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compile(FKismetFunctionContext& Context, UEdGraphNode* Node)"
  },
  {
    "label": "CanBeCalledByMathExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeCalledByMathExpression(const UFunction* Function)"
  }
]