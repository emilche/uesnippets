[
  {
    "label": "FPackedLevelActorBuilderCluster",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackedLevelActorBuilderCluster"
  },
  {
    "label": "FPackedLevelActorBuilderClusterID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackedLevelActorBuilderClusterID"
  },
  {
    "label": "FPackedLevelActorBuilderCluster()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Crc . h \" # include \" Logging / LogMacros . h \" using FPackedLevelActorBuilderID = uint32 ; class FPackedLevelActorBuilderCluster { FPackedLevelActorBuilderID BuilderID ; public :)",
    "insertText": "FPackedLevelActorBuilderCluster(FPackedLevelActorBuilderID InBuilderID) : BuilderID(InBuilderID)"
  },
  {
    "label": "FPackedLevelActorBuilderCluster()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FPackedLevelActorBuilderCluster()"
  },
  {
    "label": "GetBuilderID()",
    "kind": "Method",
    "detail": "Function (} FPackedLevelActorBuilderID)",
    "insertText": "GetBuilderID()"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Equals(const FPackedLevelActorBuilderCluster& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPackedLevelActorBuilderCluster&)",
    "insertText": "operator(const FPackedLevelActorBuilderCluster&)"
  },
  {
    "label": "FPackedLevelActorBuilderClusterID()",
    "kind": "Method",
    "detail": "Function (} ; class FPackedLevelActorBuilderClusterID { public : FPackedLevelActorBuilderClusterID Invalid ;)",
    "insertText": "FPackedLevelActorBuilderClusterID() : Hash(0)"
  },
  {
    "label": "FPackedLevelActorBuilderClusterID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPackedLevelActorBuilderClusterID(FPackedLevelActorBuilderClusterID&& Other) : Hash(Other.Hash), Data(MoveTemp(Other.Data))"
  },
  {
    "label": "FPackedLevelActorBuilderClusterID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPackedLevelActorBuilderClusterID(TUniquePtr<FPackedLevelActorBuilderCluster>&& InData) : Data(MoveTemp(InData))"
  },
  {
    "label": "ComputeHash()",
    "kind": "Method",
    "detail": "Function (Hash = Data ->)",
    "insertText": "ComputeHash()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FPackedLevelActorBuilderClusterID& Other)"
  },
  {
    "label": "GetHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetHash()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FPackedLevelActorBuilderClusterID& ID)"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (} FPackedLevelActorBuilderCluster*)",
    "insertText": "GetData()"
  },
  {
    "label": "FPackedLevelActorBuilderClusterID()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "FPackedLevelActorBuilderClusterID(const FPackedLevelActorBuilderClusterID&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPackedLevelActorBuilderClusterID&)",
    "insertText": "operator(const FPackedLevelActorBuilderClusterID&)"
  }
]