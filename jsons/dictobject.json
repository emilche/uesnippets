[
  {
    "label": "_dictkeysobject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_dictkeysobject"
  },
  {
    "label": "_dictvalues",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_dictvalues"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (# ifndef Py_CPYTHON_DICTOBJECT_H # error \" this header file must not be included directly \" # endif typedef struct _dictkeysobject PyDictKeysObject ; typedef struct _dictvalues PyDictValues ; typedef struct { PyObject_HEAD Py_ssize_t ma_used ; uint64_t ma_version_tag ; PyDictKeysObject* ma_keys ; PyDictValues* ma_values ; } PyDictObject ;)",
    "insertText": "PyAPI_FUNC(PyObject *) _PyDict_GetItem_KnownHash(PyObject *mp, PyObject *key, Py_hash_t hash)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(PyObject *) _PyDict_GetItemWithError(PyObject *dp, PyObject *key)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(PyObject *) _PyDict_GetItemIdWithError(PyObject *dp, _Py_Identifier *key)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(PyObject *) _PyDict_GetItemStringWithError(PyObject *, const char *)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(PyObject *) PyDict_SetDefault( PyObject *mp, PyObject *key, PyObject *defaultobj)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(int) _PyDict_SetItem_KnownHash(PyObject *mp, PyObject *key, PyObject *item, Py_hash_t hash)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(int) _PyDict_DelItem_KnownHash(PyObject *mp, PyObject *key, Py_hash_t hash)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(int) _PyDict_DelItemIf(PyObject *mp, PyObject *key, int (*predicate)(PyObject *value))"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(int) _PyDict_Next( PyObject *mp, Py_ssize_t *pos, PyObject **key, PyObject **value, Py_hash_t *hash)"
  },
  {
    "label": "PyDict_GET_SIZE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "PyDict_GET_SIZE(mp) (assert(PyDict_Check(mp)),((PyDictObject *)mp)->ma_used) PyAPI_FUNC(int) _PyDict_Contains_KnownHash(PyObject *, PyObject *, Py_hash_t)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(int) _PyDict_ContainsId(PyObject *, _Py_Identifier *)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(PyObject *) _PyDict_NewPresized(Py_ssize_t minused)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(void) _PyDict_MaybeUntrack(PyObject *mp)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(int) _PyDict_HasOnlyStringKeys(PyObject *mp)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(Py_ssize_t) _PyDict_SizeOf(PyDictObject *)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(PyObject *) _PyDict_Pop(PyObject *, PyObject *, PyObject *)"
  },
  {
    "label": "_PyDict_HasSplitTable()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "_PyDict_HasSplitTable(d) ((d)->ma_values != NULL) PyAPI_FUNC(int) _PyDict_MergeEx(PyObject *mp, PyObject *other, int override)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(int) _PyDict_SetItemId(PyObject *dp, _Py_Identifier *key, PyObject *item)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(int) _PyDict_DelItemId(PyObject *mp, _Py_Identifier *key)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(void) _PyDict_DebugMallocStats(FILE *out)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (typedef struct { PyObject_HEAD PyDictObject* dv_dict ; } _PyDictViewObject ;)",
    "insertText": "PyAPI_FUNC(PyObject *) _PyDictView_New(PyObject *, PyTypeObject *)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(PyObject *) _PyDictView_Intersect(PyObject* self, PyObject *other)"
  }
]