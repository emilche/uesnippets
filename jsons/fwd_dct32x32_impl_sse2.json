[
  {
    "label": "vpx_fdct32x32_rows_c()",
    "kind": "Method",
    "detail": "Function (# include<emmintrin . h> # include \" vpx_dsp / fwd_txfm . h \" # include \" vpx_dsp / txfm_common . h \" # include \" vpx_dsp / x86 / txfm_common_sse2 . h \" # if DCT_HIGH_BIT_DEPTH # define ADD_EPI16 _mm_adds_epi16 # define SUB_EPI16 _mm_subs_epi16 # if FDCT32x32_HIGH_PRECISION void)",
    "insertText": "vpx_fdct32x32_rows_c(const int16_t *intermediate, tran_low_t *out)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (int i,j ;)",
    "insertText": "for(i = 0; i < 32; ++i)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (tran_high_t temp_in [ 3 2 ],temp_out [ 3 2 ] ;)",
    "insertText": "for(j = 0; j < 32; ++j)"
  },
  {
    "label": "vpx_fdct32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_fdct32(temp_in, temp_out, 0)"
  },
  {
    "label": "vpx_fdct32x32_rd_rows_c()",
    "kind": "Method",
    "detail": "Function (} } # define HIGH_FDCT32x32_2D_C vpx_highbd_fdct32x32_c # define HIGH_FDCT32x32_2D_ROWS_C vpx_fdct32x32_rows_c # else void)",
    "insertText": "vpx_fdct32x32_rd_rows_c(const int16_t *intermediate, tran_low_t *out)"
  },
  {
    "label": "vpx_fdct32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_fdct32(temp_in, temp_out, 1)"
  },
  {
    "label": "FDCT32x32_2D()",
    "kind": "Method",
    "detail": "Function (} } # define HIGH_FDCT32x32_2D_C vpx_highbd_fdct32x32_rd_c # define HIGH_FDCT32x32_2D_ROWS_C vpx_fdct32x32_rd_rows_c # endif # else # define ADD_EPI16 _mm_add_epi16 # define SUB_EPI16 _mm_sub_epi16 # endif void)",
    "insertText": "FDCT32x32_2D(const int16_t *input, tran_low_t *output_org, int stride)"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (const int str1 = stride ; const int str2 = 2* stride ; const int str3 = 2* stride + str1 ;)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, intermediate[32 * 32])"
  },
  {
    "label": "_mm_set1_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p16_p16 =)",
    "insertText": "_mm_set1_epi16(cospi_16_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p16_m16 =)",
    "insertText": "pair_set_epi16(+cospi_16_64, -cospi_16_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m08_p24 =)",
    "insertText": "pair_set_epi16(-cospi_8_64, cospi_24_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m24_m08 =)",
    "insertText": "pair_set_epi16(-cospi_24_64, -cospi_8_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p24_p08 =)",
    "insertText": "pair_set_epi16(+cospi_24_64, cospi_8_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p12_p20 =)",
    "insertText": "pair_set_epi16(+cospi_12_64, cospi_20_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m20_p12 =)",
    "insertText": "pair_set_epi16(-cospi_20_64, cospi_12_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m04_p28 =)",
    "insertText": "pair_set_epi16(-cospi_4_64, cospi_28_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p28_p04 =)",
    "insertText": "pair_set_epi16(+cospi_28_64, cospi_4_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m28_m04 =)",
    "insertText": "pair_set_epi16(-cospi_28_64, -cospi_4_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m12_m20 =)",
    "insertText": "pair_set_epi16(-cospi_12_64, -cospi_20_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p30_p02 =)",
    "insertText": "pair_set_epi16(+cospi_30_64, cospi_2_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p14_p18 =)",
    "insertText": "pair_set_epi16(+cospi_14_64, cospi_18_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p22_p10 =)",
    "insertText": "pair_set_epi16(+cospi_22_64, cospi_10_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p06_p26 =)",
    "insertText": "pair_set_epi16(+cospi_6_64, cospi_26_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m26_p06 =)",
    "insertText": "pair_set_epi16(-cospi_26_64, cospi_6_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m10_p22 =)",
    "insertText": "pair_set_epi16(-cospi_10_64, cospi_22_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m18_p14 =)",
    "insertText": "pair_set_epi16(-cospi_18_64, cospi_14_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m02_p30 =)",
    "insertText": "pair_set_epi16(-cospi_2_64, cospi_30_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p31_p01 =)",
    "insertText": "pair_set_epi16(+cospi_31_64, cospi_1_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p15_p17 =)",
    "insertText": "pair_set_epi16(+cospi_15_64, cospi_17_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p23_p09 =)",
    "insertText": "pair_set_epi16(+cospi_23_64, cospi_9_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p07_p25 =)",
    "insertText": "pair_set_epi16(+cospi_7_64, cospi_25_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m25_p07 =)",
    "insertText": "pair_set_epi16(-cospi_25_64, cospi_7_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m09_p23 =)",
    "insertText": "pair_set_epi16(-cospi_9_64, cospi_23_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m17_p15 =)",
    "insertText": "pair_set_epi16(-cospi_17_64, cospi_15_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m01_p31 =)",
    "insertText": "pair_set_epi16(-cospi_1_64, cospi_31_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p27_p05 =)",
    "insertText": "pair_set_epi16(+cospi_27_64, cospi_5_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p11_p21 =)",
    "insertText": "pair_set_epi16(+cospi_11_64, cospi_21_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p19_p13 =)",
    "insertText": "pair_set_epi16(+cospi_19_64, cospi_13_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_p03_p29 =)",
    "insertText": "pair_set_epi16(+cospi_3_64, cospi_29_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m29_p03 =)",
    "insertText": "pair_set_epi16(-cospi_29_64, cospi_3_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m13_p19 =)",
    "insertText": "pair_set_epi16(-cospi_13_64, cospi_19_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m21_p11 =)",
    "insertText": "pair_set_epi16(-cospi_21_64, cospi_11_64)"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__cospi_m05_p27 =)",
    "insertText": "pair_set_epi16(-cospi_5_64, cospi_27_64)"
  },
  {
    "label": "_mm_set1_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k__DCT_CONST_ROUNDING =)",
    "insertText": "_mm_set1_epi32(DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_setzero_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i kZero =)",
    "insertText": "_mm_setzero_si128()"
  },
  {
    "label": "_mm_set1_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i kOne =)",
    "insertText": "_mm_set1_epi16(1)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (int pass ; # if DCT_HIGH_BIT_DEPTH int overflow ; # endif)",
    "insertText": "for(pass = 0; pass < 2; ++pass)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (int column_start ;)",
    "insertText": "for(column_start = 0; column_start < 32; column_start += 8)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (__m128i step1 [ 3 2 ] ; __m128i step2 [ 3 2 ] ; __m128i step3 [ 3 2 ] ; __m128i out [ 3 2 ] ;)",
    "insertText": "if(0 == pass)"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (const int16_t* in =& input [ column_start ] ; { const int16_t* ina = in + 0* str1 ; const int16_t* inb = in + 3 1* str1 ; __m128i* step1a =& step1 [ 0 ] ; __m128i* step1b =& step1 [ 3 1 ] ; const __m128i ina0 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(ina))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i ina1 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(ina + str1))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i ina2 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(ina + str2))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i ina3 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(ina + str3))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i inb3 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(inb - str3))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i inb2 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(inb - str2))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i inb1 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(inb - str1))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i inb0 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(inb))"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1a [ 0 ] =)",
    "insertText": "_mm_add_epi16(ina0, inb0)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1a [ 1 ] =)",
    "insertText": "_mm_add_epi16(ina1, inb1)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1a [ 2 ] =)",
    "insertText": "_mm_add_epi16(ina2, inb2)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1a [ 3 ] =)",
    "insertText": "_mm_add_epi16(ina3, inb3)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1b [ - 3 ] =)",
    "insertText": "_mm_sub_epi16(ina3, inb3)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1b [ - 2 ] =)",
    "insertText": "_mm_sub_epi16(ina2, inb2)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1b [ - 1 ] =)",
    "insertText": "_mm_sub_epi16(ina1, inb1)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (step1b [ - 0 ] =)",
    "insertText": "_mm_sub_epi16(ina0, inb0)"
  },
  {
    "label": "_mm_slli_epi16()",
    "kind": "Method",
    "detail": "Function (step1a [ 0 ] =)",
    "insertText": "_mm_slli_epi16(step1a[0], 2)"
  },
  {
    "label": "_mm_slli_epi16()",
    "kind": "Method",
    "detail": "Function (step1a [ 1 ] =)",
    "insertText": "_mm_slli_epi16(step1a[1], 2)"
  },
  {
    "label": "_mm_slli_epi16()",
    "kind": "Method",
    "detail": "Function (step1a [ 2 ] =)",
    "insertText": "_mm_slli_epi16(step1a[2], 2)"
  },
  {
    "label": "_mm_slli_epi16()",
    "kind": "Method",
    "detail": "Function (step1a [ 3 ] =)",
    "insertText": "_mm_slli_epi16(step1a[3], 2)"
  },
  {
    "label": "_mm_slli_epi16()",
    "kind": "Method",
    "detail": "Function (step1b [ - 3 ] =)",
    "insertText": "_mm_slli_epi16(step1b[-3], 2)"
  },
  {
    "label": "_mm_slli_epi16()",
    "kind": "Method",
    "detail": "Function (step1b [ - 2 ] =)",
    "insertText": "_mm_slli_epi16(step1b[-2], 2)"
  },
  {
    "label": "_mm_slli_epi16()",
    "kind": "Method",
    "detail": "Function (step1b [ - 1 ] =)",
    "insertText": "_mm_slli_epi16(step1b[-1], 2)"
  },
  {
    "label": "_mm_slli_epi16()",
    "kind": "Method",
    "detail": "Function (step1b [ - 0 ] =)",
    "insertText": "_mm_slli_epi16(step1b[-0], 2)"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (} } else { int16_t* in =& intermediate [ column_start ] ; { __m128i in00 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 0 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in01 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 1 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in02 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 2 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in03 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 3 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in28 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 28 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in29 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 29 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in30 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 30 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in31 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 31 * 32))"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 0 ] =)",
    "insertText": "ADD_EPI16(in00, in31)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 ] =)",
    "insertText": "ADD_EPI16(in01, in30)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 ] =)",
    "insertText": "ADD_EPI16(in02, in29)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 ] =)",
    "insertText": "ADD_EPI16(in03, in28)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 8 ] =)",
    "insertText": "SUB_EPI16(in03, in28)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 9 ] =)",
    "insertText": "SUB_EPI16(in02, in29)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 0 ] =)",
    "insertText": "SUB_EPI16(in01, in30)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 1 ] =)",
    "insertText": "SUB_EPI16(in00, in31)"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&step1[0], &step1[1], &step1[2], &step1[3], &step1[28], &step1[29], &step1[30], &step1[31])"
  },
  {
    "label": "HIGH_FDCT32x32_2D_ROWS_C()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HIGH_FDCT32x32_2D_ROWS_C(intermediate, output_org)"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in05 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 5 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in06 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 6 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in07 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 7 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in24 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 24 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in25 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 25 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in26 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 26 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in27 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 27 * 32))"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 4 ] =)",
    "insertText": "ADD_EPI16(in04, in27)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 5 ] =)",
    "insertText": "ADD_EPI16(in05, in26)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 6 ] =)",
    "insertText": "ADD_EPI16(in06, in25)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 7 ] =)",
    "insertText": "ADD_EPI16(in07, in24)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 4 ] =)",
    "insertText": "SUB_EPI16(in07, in24)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 5 ] =)",
    "insertText": "SUB_EPI16(in06, in25)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 6 ] =)",
    "insertText": "SUB_EPI16(in05, in26)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 7 ] =)",
    "insertText": "SUB_EPI16(in04, in27)"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&step1[4], &step1[5], &step1[6], &step1[7], &step1[24], &step1[25], &step1[26], &step1[27])"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in09 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 9 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in10 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 10 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in11 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 11 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in20 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 20 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in21 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 21 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in22 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 22 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in23 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 23 * 32))"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 8 ] =)",
    "insertText": "ADD_EPI16(in08, in23)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 9 ] =)",
    "insertText": "ADD_EPI16(in09, in22)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 0 ] =)",
    "insertText": "ADD_EPI16(in10, in21)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 1 ] =)",
    "insertText": "ADD_EPI16(in11, in20)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 0 ] =)",
    "insertText": "SUB_EPI16(in11, in20)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 1 ] =)",
    "insertText": "SUB_EPI16(in10, in21)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 2 ] =)",
    "insertText": "SUB_EPI16(in09, in22)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 3 ] =)",
    "insertText": "SUB_EPI16(in08, in23)"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&step1[8], &step1[9], &step1[10], &step1[11], &step1[20], &step1[21], &step1[22], &step1[23])"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in13 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 13 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in14 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 14 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in15 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 15 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in16 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 16 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in17 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 17 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in18 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 18 * 32))"
  },
  {
    "label": "_mm_loadu_si128()",
    "kind": "Method",
    "detail": "Function (__m128i in19 =)",
    "insertText": "_mm_loadu_si128((const __m128i *)(in + 19 * 32))"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 2 ] =)",
    "insertText": "ADD_EPI16(in12, in19)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 3 ] =)",
    "insertText": "ADD_EPI16(in13, in18)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 4 ] =)",
    "insertText": "ADD_EPI16(in14, in17)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 5 ] =)",
    "insertText": "ADD_EPI16(in15, in16)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 6 ] =)",
    "insertText": "SUB_EPI16(in15, in16)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 7 ] =)",
    "insertText": "SUB_EPI16(in14, in17)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 8 ] =)",
    "insertText": "SUB_EPI16(in13, in18)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 9 ] =)",
    "insertText": "SUB_EPI16(in12, in19)"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&step1[12], &step1[13], &step1[14], &step1[15], &step1[16], &step1[17], &step1[18], &step1[19])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 ] =)",
    "insertText": "ADD_EPI16(step1[1], step1[14])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 ] =)",
    "insertText": "ADD_EPI16(step1[2], step1[13])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 3 ] =)",
    "insertText": "ADD_EPI16(step1[3], step1[12])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 4 ] =)",
    "insertText": "ADD_EPI16(step1[4], step1[11])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 5 ] =)",
    "insertText": "ADD_EPI16(step1[5], step1[10])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 6 ] =)",
    "insertText": "ADD_EPI16(step1[6], step1[9])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 7 ] =)",
    "insertText": "ADD_EPI16(step1[7], step1[8])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 8 ] =)",
    "insertText": "SUB_EPI16(step1[7], step1[8])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 9 ] =)",
    "insertText": "SUB_EPI16(step1[6], step1[9])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 0 ] =)",
    "insertText": "SUB_EPI16(step1[5], step1[10])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 1 ] =)",
    "insertText": "SUB_EPI16(step1[4], step1[11])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 2 ] =)",
    "insertText": "SUB_EPI16(step1[3], step1[12])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 3 ] =)",
    "insertText": "SUB_EPI16(step1[2], step1[13])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 4 ] =)",
    "insertText": "SUB_EPI16(step1[1], step1[14])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 5 ] =)",
    "insertText": "SUB_EPI16(step1[0], step1[15])"
  },
  {
    "label": "check_epi16_overflow_x16()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x16(&step2[0], &step2[1], &step2[2], &step2[3], &step2[4], &step2[5], &step2[6], &step2[7], &step2[8], &step2[9], &step2[10], &step2[11], &step2[12], &step2[13], &step2[14], &step2[15])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_20_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[27], step1[20])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_21_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[26], step1[21])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_21_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[26], step1[21])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_22_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[25], step1[22])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_22_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[25], step1[22])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_23_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[24], step1[23])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_23_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[24], step1[23])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_20_2 =)",
    "insertText": "_mm_madd_epi16(s2_20_0, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_20_3 =)",
    "insertText": "_mm_madd_epi16(s2_20_1, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_21_2 =)",
    "insertText": "_mm_madd_epi16(s2_21_0, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_21_3 =)",
    "insertText": "_mm_madd_epi16(s2_21_1, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_22_2 =)",
    "insertText": "_mm_madd_epi16(s2_22_0, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_22_3 =)",
    "insertText": "_mm_madd_epi16(s2_22_1, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_23_2 =)",
    "insertText": "_mm_madd_epi16(s2_23_0, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_23_3 =)",
    "insertText": "_mm_madd_epi16(s2_23_1, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_24_2 =)",
    "insertText": "_mm_madd_epi16(s2_23_0, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_24_3 =)",
    "insertText": "_mm_madd_epi16(s2_23_1, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_25_2 =)",
    "insertText": "_mm_madd_epi16(s2_22_0, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_25_3 =)",
    "insertText": "_mm_madd_epi16(s2_22_1, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_26_2 =)",
    "insertText": "_mm_madd_epi16(s2_21_0, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_26_3 =)",
    "insertText": "_mm_madd_epi16(s2_21_1, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_27_2 =)",
    "insertText": "_mm_madd_epi16(s2_20_0, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_27_3 =)",
    "insertText": "_mm_madd_epi16(s2_20_1, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_20_4 =)",
    "insertText": "_mm_add_epi32(s2_20_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_20_5 =)",
    "insertText": "_mm_add_epi32(s2_20_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_21_4 =)",
    "insertText": "_mm_add_epi32(s2_21_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_21_5 =)",
    "insertText": "_mm_add_epi32(s2_21_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_22_4 =)",
    "insertText": "_mm_add_epi32(s2_22_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_22_5 =)",
    "insertText": "_mm_add_epi32(s2_22_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_23_4 =)",
    "insertText": "_mm_add_epi32(s2_23_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_23_5 =)",
    "insertText": "_mm_add_epi32(s2_23_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_24_4 =)",
    "insertText": "_mm_add_epi32(s2_24_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_24_5 =)",
    "insertText": "_mm_add_epi32(s2_24_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_25_4 =)",
    "insertText": "_mm_add_epi32(s2_25_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_25_5 =)",
    "insertText": "_mm_add_epi32(s2_25_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_26_4 =)",
    "insertText": "_mm_add_epi32(s2_26_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_26_5 =)",
    "insertText": "_mm_add_epi32(s2_26_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_27_4 =)",
    "insertText": "_mm_add_epi32(s2_27_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_27_5 =)",
    "insertText": "_mm_add_epi32(s2_27_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_20_6 =)",
    "insertText": "_mm_srai_epi32(s2_20_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_20_7 =)",
    "insertText": "_mm_srai_epi32(s2_20_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_21_6 =)",
    "insertText": "_mm_srai_epi32(s2_21_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_21_7 =)",
    "insertText": "_mm_srai_epi32(s2_21_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_22_6 =)",
    "insertText": "_mm_srai_epi32(s2_22_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_22_7 =)",
    "insertText": "_mm_srai_epi32(s2_22_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_23_6 =)",
    "insertText": "_mm_srai_epi32(s2_23_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_23_7 =)",
    "insertText": "_mm_srai_epi32(s2_23_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_24_6 =)",
    "insertText": "_mm_srai_epi32(s2_24_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_24_7 =)",
    "insertText": "_mm_srai_epi32(s2_24_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_25_6 =)",
    "insertText": "_mm_srai_epi32(s2_25_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_25_7 =)",
    "insertText": "_mm_srai_epi32(s2_25_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_26_6 =)",
    "insertText": "_mm_srai_epi32(s2_26_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_26_7 =)",
    "insertText": "_mm_srai_epi32(s2_26_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_27_6 =)",
    "insertText": "_mm_srai_epi32(s2_27_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_27_7 =)",
    "insertText": "_mm_srai_epi32(s2_27_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 0 ] =)",
    "insertText": "_mm_packs_epi32(s2_20_6, s2_20_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 1 ] =)",
    "insertText": "_mm_packs_epi32(s2_21_6, s2_21_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 2 ] =)",
    "insertText": "_mm_packs_epi32(s2_22_6, s2_22_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 3 ] =)",
    "insertText": "_mm_packs_epi32(s2_23_6, s2_23_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 4 ] =)",
    "insertText": "_mm_packs_epi32(s2_24_6, s2_24_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 5 ] =)",
    "insertText": "_mm_packs_epi32(s2_25_6, s2_25_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 6 ] =)",
    "insertText": "_mm_packs_epi32(s2_26_6, s2_26_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 7 ] =)",
    "insertText": "_mm_packs_epi32(s2_27_6, s2_27_7)"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&step2[20], &step2[21], &step2[22], &step2[23], &step2[24], &step2[25], &step2[26], &step2[27])"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_00_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[0], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_01_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[1], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_02_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[2], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_03_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[3], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_04_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[4], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_05_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[5], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_06_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[6], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_07_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[7], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s2_08_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[8], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s2_09_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[9], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_10_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[10], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_11_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[11], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_12_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[12], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_13_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[13], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s2_14_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[14], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s2_15_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[15], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_16_0 =)",
    "insertText": "_mm_cmplt_epi16(step1[16], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_17_0 =)",
    "insertText": "_mm_cmplt_epi16(step1[17], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_18_0 =)",
    "insertText": "_mm_cmplt_epi16(step1[18], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_19_0 =)",
    "insertText": "_mm_cmplt_epi16(step1[19], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_20_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[20], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_21_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[21], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_22_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[22], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_23_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[23], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_24_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[24], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_25_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[25], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_26_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[26], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_27_0 =)",
    "insertText": "_mm_cmplt_epi16(step2[27], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_28_0 =)",
    "insertText": "_mm_cmplt_epi16(step1[28], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_29_0 =)",
    "insertText": "_mm_cmplt_epi16(step1[29], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_30_0 =)",
    "insertText": "_mm_cmplt_epi16(step1[30], kZero)"
  },
  {
    "label": "_mm_cmplt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i s3_31_0 =)",
    "insertText": "_mm_cmplt_epi16(step1[31], kZero)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 0 ] =)",
    "insertText": "SUB_EPI16(step2[0], s3_00_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 ] =)",
    "insertText": "SUB_EPI16(step2[1], s3_01_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 ] =)",
    "insertText": "SUB_EPI16(step2[2], s3_02_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 3 ] =)",
    "insertText": "SUB_EPI16(step2[3], s3_03_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 4 ] =)",
    "insertText": "SUB_EPI16(step2[4], s3_04_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 5 ] =)",
    "insertText": "SUB_EPI16(step2[5], s3_05_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 6 ] =)",
    "insertText": "SUB_EPI16(step2[6], s3_06_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 7 ] =)",
    "insertText": "SUB_EPI16(step2[7], s3_07_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 8 ] =)",
    "insertText": "SUB_EPI16(step2[8], s2_08_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 9 ] =)",
    "insertText": "SUB_EPI16(step2[9], s2_09_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 0 ] =)",
    "insertText": "SUB_EPI16(step2[10], s3_10_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 1 ] =)",
    "insertText": "SUB_EPI16(step2[11], s3_11_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 2 ] =)",
    "insertText": "SUB_EPI16(step2[12], s3_12_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 3 ] =)",
    "insertText": "SUB_EPI16(step2[13], s3_13_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 4 ] =)",
    "insertText": "SUB_EPI16(step2[14], s2_14_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 5 ] =)",
    "insertText": "SUB_EPI16(step2[15], s2_15_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 6 ] =)",
    "insertText": "SUB_EPI16(step1[16], s3_16_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 7 ] =)",
    "insertText": "SUB_EPI16(step1[17], s3_17_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 8 ] =)",
    "insertText": "SUB_EPI16(step1[18], s3_18_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 9 ] =)",
    "insertText": "SUB_EPI16(step1[19], s3_19_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 0 ] =)",
    "insertText": "SUB_EPI16(step2[20], s3_20_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 1 ] =)",
    "insertText": "SUB_EPI16(step2[21], s3_21_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 2 ] =)",
    "insertText": "SUB_EPI16(step2[22], s3_22_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 3 ] =)",
    "insertText": "SUB_EPI16(step2[23], s3_23_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 4 ] =)",
    "insertText": "SUB_EPI16(step2[24], s3_24_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 5 ] =)",
    "insertText": "SUB_EPI16(step2[25], s3_25_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 6 ] =)",
    "insertText": "SUB_EPI16(step2[26], s3_26_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 7 ] =)",
    "insertText": "SUB_EPI16(step2[27], s3_27_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 8 ] =)",
    "insertText": "SUB_EPI16(step1[28], s3_28_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 9 ] =)",
    "insertText": "SUB_EPI16(step1[29], s3_29_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 0 ] =)",
    "insertText": "SUB_EPI16(step1[30], s3_30_0)"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 1 ] =)",
    "insertText": "SUB_EPI16(step1[31], s3_31_0)"
  },
  {
    "label": "check_epi16_overflow_x32()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x32(&step2[0], &step2[1], &step2[2], &step2[3], &step2[4], &step2[5], &step2[6], &step2[7], &step2[8], &step2[9], &step2[10], &step2[11], &step2[12], &step2[13], &step2[14], &step2[15], &step1[16], &step1[17], &step1[18], &step1[19], &step2[20], &step2[21], &step2[22], &step2[23], &step2[24], &step2[25], &step2[26], &step2[27], &step1[28], &step1[29], &step1[30], &step1[31])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 ] =)",
    "insertText": "_mm_add_epi16(step2[1], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 ] =)",
    "insertText": "_mm_add_epi16(step2[2], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 3 ] =)",
    "insertText": "_mm_add_epi16(step2[3], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 4 ] =)",
    "insertText": "_mm_add_epi16(step2[4], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 5 ] =)",
    "insertText": "_mm_add_epi16(step2[5], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 6 ] =)",
    "insertText": "_mm_add_epi16(step2[6], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 7 ] =)",
    "insertText": "_mm_add_epi16(step2[7], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 8 ] =)",
    "insertText": "_mm_add_epi16(step2[8], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 9 ] =)",
    "insertText": "_mm_add_epi16(step2[9], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 0 ] =)",
    "insertText": "_mm_add_epi16(step2[10], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 1 ] =)",
    "insertText": "_mm_add_epi16(step2[11], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 2 ] =)",
    "insertText": "_mm_add_epi16(step2[12], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 3 ] =)",
    "insertText": "_mm_add_epi16(step2[13], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 4 ] =)",
    "insertText": "_mm_add_epi16(step2[14], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 5 ] =)",
    "insertText": "_mm_add_epi16(step2[15], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 6 ] =)",
    "insertText": "_mm_add_epi16(step1[16], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 7 ] =)",
    "insertText": "_mm_add_epi16(step1[17], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 8 ] =)",
    "insertText": "_mm_add_epi16(step1[18], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 9 ] =)",
    "insertText": "_mm_add_epi16(step1[19], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 0 ] =)",
    "insertText": "_mm_add_epi16(step2[20], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 1 ] =)",
    "insertText": "_mm_add_epi16(step2[21], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 2 ] =)",
    "insertText": "_mm_add_epi16(step2[22], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 3 ] =)",
    "insertText": "_mm_add_epi16(step2[23], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 4 ] =)",
    "insertText": "_mm_add_epi16(step2[24], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 5 ] =)",
    "insertText": "_mm_add_epi16(step2[25], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 6 ] =)",
    "insertText": "_mm_add_epi16(step2[26], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 7 ] =)",
    "insertText": "_mm_add_epi16(step2[27], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 8 ] =)",
    "insertText": "_mm_add_epi16(step1[28], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 9 ] =)",
    "insertText": "_mm_add_epi16(step1[29], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 0 ] =)",
    "insertText": "_mm_add_epi16(step1[30], kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 1 ] =)",
    "insertText": "_mm_add_epi16(step1[31], kOne)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 0 ] =)",
    "insertText": "_mm_srai_epi16(step2[0], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 ] =)",
    "insertText": "_mm_srai_epi16(step2[1], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 ] =)",
    "insertText": "_mm_srai_epi16(step2[2], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 3 ] =)",
    "insertText": "_mm_srai_epi16(step2[3], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 4 ] =)",
    "insertText": "_mm_srai_epi16(step2[4], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 5 ] =)",
    "insertText": "_mm_srai_epi16(step2[5], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 6 ] =)",
    "insertText": "_mm_srai_epi16(step2[6], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 7 ] =)",
    "insertText": "_mm_srai_epi16(step2[7], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 8 ] =)",
    "insertText": "_mm_srai_epi16(step2[8], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 9 ] =)",
    "insertText": "_mm_srai_epi16(step2[9], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 0 ] =)",
    "insertText": "_mm_srai_epi16(step2[10], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 1 ] =)",
    "insertText": "_mm_srai_epi16(step2[11], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 2 ] =)",
    "insertText": "_mm_srai_epi16(step2[12], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 3 ] =)",
    "insertText": "_mm_srai_epi16(step2[13], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 4 ] =)",
    "insertText": "_mm_srai_epi16(step2[14], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 5 ] =)",
    "insertText": "_mm_srai_epi16(step2[15], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 6 ] =)",
    "insertText": "_mm_srai_epi16(step1[16], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 7 ] =)",
    "insertText": "_mm_srai_epi16(step1[17], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 8 ] =)",
    "insertText": "_mm_srai_epi16(step1[18], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 9 ] =)",
    "insertText": "_mm_srai_epi16(step1[19], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 0 ] =)",
    "insertText": "_mm_srai_epi16(step2[20], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 1 ] =)",
    "insertText": "_mm_srai_epi16(step2[21], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 2 ] =)",
    "insertText": "_mm_srai_epi16(step2[22], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 3 ] =)",
    "insertText": "_mm_srai_epi16(step2[23], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 4 ] =)",
    "insertText": "_mm_srai_epi16(step2[24], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 5 ] =)",
    "insertText": "_mm_srai_epi16(step2[25], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 6 ] =)",
    "insertText": "_mm_srai_epi16(step2[26], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 7 ] =)",
    "insertText": "_mm_srai_epi16(step2[27], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 8 ] =)",
    "insertText": "_mm_srai_epi16(step1[28], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 9 ] =)",
    "insertText": "_mm_srai_epi16(step1[29], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 0 ] =)",
    "insertText": "_mm_srai_epi16(step1[30], 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 1 ] =)",
    "insertText": "_mm_srai_epi16(step1[31], 2)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} # endif # if FDCT32x32_HIGH_PRECISION)",
    "insertText": "if(pass == 0)"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (# endif { step3 [ 0 ] =)",
    "insertText": "ADD_EPI16(step2[(8 - 1)], step2[0])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 ] =)",
    "insertText": "ADD_EPI16(step2[(8 - 2)], step2[1])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 ] =)",
    "insertText": "ADD_EPI16(step2[(8 - 3)], step2[2])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 3 ] =)",
    "insertText": "ADD_EPI16(step2[(8 - 4)], step2[3])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 4 ] =)",
    "insertText": "SUB_EPI16(step2[(8 - 5)], step2[4])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 5 ] =)",
    "insertText": "SUB_EPI16(step2[(8 - 6)], step2[5])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 6 ] =)",
    "insertText": "SUB_EPI16(step2[(8 - 7)], step2[6])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 7 ] =)",
    "insertText": "SUB_EPI16(step2[(8 - 8)], step2[7])"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&step3[0], &step3[1], &step3[2], &step3[3], &step3[4], &step3[5], &step3[6], &step3[7])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_10_1 =)",
    "insertText": "_mm_unpackhi_epi16(step2[13], step2[10])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_11_0 =)",
    "insertText": "_mm_unpacklo_epi16(step2[12], step2[11])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_11_1 =)",
    "insertText": "_mm_unpackhi_epi16(step2[12], step2[11])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_10_2 =)",
    "insertText": "_mm_madd_epi16(s3_10_0, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_10_3 =)",
    "insertText": "_mm_madd_epi16(s3_10_1, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_11_2 =)",
    "insertText": "_mm_madd_epi16(s3_11_0, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_11_3 =)",
    "insertText": "_mm_madd_epi16(s3_11_1, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_12_2 =)",
    "insertText": "_mm_madd_epi16(s3_11_0, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_12_3 =)",
    "insertText": "_mm_madd_epi16(s3_11_1, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_13_2 =)",
    "insertText": "_mm_madd_epi16(s3_10_0, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_13_3 =)",
    "insertText": "_mm_madd_epi16(s3_10_1, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_10_4 =)",
    "insertText": "_mm_add_epi32(s3_10_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_10_5 =)",
    "insertText": "_mm_add_epi32(s3_10_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_11_4 =)",
    "insertText": "_mm_add_epi32(s3_11_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_11_5 =)",
    "insertText": "_mm_add_epi32(s3_11_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_12_4 =)",
    "insertText": "_mm_add_epi32(s3_12_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_12_5 =)",
    "insertText": "_mm_add_epi32(s3_12_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_13_4 =)",
    "insertText": "_mm_add_epi32(s3_13_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_13_5 =)",
    "insertText": "_mm_add_epi32(s3_13_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_10_6 =)",
    "insertText": "_mm_srai_epi32(s3_10_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_10_7 =)",
    "insertText": "_mm_srai_epi32(s3_10_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_11_6 =)",
    "insertText": "_mm_srai_epi32(s3_11_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_11_7 =)",
    "insertText": "_mm_srai_epi32(s3_11_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_12_6 =)",
    "insertText": "_mm_srai_epi32(s3_12_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_12_7 =)",
    "insertText": "_mm_srai_epi32(s3_12_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_13_6 =)",
    "insertText": "_mm_srai_epi32(s3_13_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_13_7 =)",
    "insertText": "_mm_srai_epi32(s3_13_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 0 ] =)",
    "insertText": "_mm_packs_epi32(s3_10_6, s3_10_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 1 ] =)",
    "insertText": "_mm_packs_epi32(s3_11_6, s3_11_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 2 ] =)",
    "insertText": "_mm_packs_epi32(s3_12_6, s3_12_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 3 ] =)",
    "insertText": "_mm_packs_epi32(s3_13_6, s3_13_7)"
  },
  {
    "label": "check_epi16_overflow_x4()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x4(&step3[10], &step3[11], &step3[12], &step3[13])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 7 ] =)",
    "insertText": "ADD_EPI16(step2[22], step1[17])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 8 ] =)",
    "insertText": "ADD_EPI16(step2[21], step1[18])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 9 ] =)",
    "insertText": "ADD_EPI16(step2[20], step1[19])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 0 ] =)",
    "insertText": "SUB_EPI16(step1[19], step2[20])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 1 ] =)",
    "insertText": "SUB_EPI16(step1[18], step2[21])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 2 ] =)",
    "insertText": "SUB_EPI16(step1[17], step2[22])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 3 ] =)",
    "insertText": "SUB_EPI16(step1[16], step2[23])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 4 ] =)",
    "insertText": "SUB_EPI16(step1[31], step2[24])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 5 ] =)",
    "insertText": "SUB_EPI16(step1[30], step2[25])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 6 ] =)",
    "insertText": "SUB_EPI16(step1[29], step2[26])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 7 ] =)",
    "insertText": "SUB_EPI16(step1[28], step2[27])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 8 ] =)",
    "insertText": "ADD_EPI16(step2[27], step1[28])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 9 ] =)",
    "insertText": "ADD_EPI16(step2[26], step1[29])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 3 0 ] =)",
    "insertText": "ADD_EPI16(step2[25], step1[30])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 3 1 ] =)",
    "insertText": "ADD_EPI16(step2[24], step1[31])"
  },
  {
    "label": "check_epi16_overflow_x16()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x16(&step3[16], &step3[17], &step3[18], &step3[19], &step3[20], &step3[21], &step3[22], &step3[23], &step3[24], &step3[25], &step3[26], &step3[27], &step3[28], &step3[29], &step3[30], &step3[31])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 ] =)",
    "insertText": "ADD_EPI16(step3[2], step3[1])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 ] =)",
    "insertText": "SUB_EPI16(step3[1], step3[2])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 ] =)",
    "insertText": "SUB_EPI16(step3[0], step3[3])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 8 ] =)",
    "insertText": "ADD_EPI16(step3[11], step2[8])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 9 ] =)",
    "insertText": "ADD_EPI16(step3[10], step2[9])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 0 ] =)",
    "insertText": "SUB_EPI16(step2[9], step3[10])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 1 ] =)",
    "insertText": "SUB_EPI16(step2[8], step3[11])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 2 ] =)",
    "insertText": "SUB_EPI16(step2[15], step3[12])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 3 ] =)",
    "insertText": "SUB_EPI16(step2[14], step3[13])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 4 ] =)",
    "insertText": "ADD_EPI16(step3[13], step2[14])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 5 ] =)",
    "insertText": "ADD_EPI16(step3[12], step2[15])"
  },
  {
    "label": "check_epi16_overflow_x16()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x16(&step1[0], &step1[1], &step1[2], &step1[3], &step1[4], &step1[5], &step1[6], &step1[7], &step1[8], &step1[9], &step1[10], &step1[11], &step1[12], &step1[13], &step1[14], &step1[15])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_05_1 =)",
    "insertText": "_mm_unpackhi_epi16(step3[6], step3[5])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_05_2 =)",
    "insertText": "_mm_madd_epi16(s1_05_0, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_05_3 =)",
    "insertText": "_mm_madd_epi16(s1_05_1, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_06_2 =)",
    "insertText": "_mm_madd_epi16(s1_05_0, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_06_3 =)",
    "insertText": "_mm_madd_epi16(s1_05_1, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_05_4 =)",
    "insertText": "_mm_add_epi32(s1_05_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_05_5 =)",
    "insertText": "_mm_add_epi32(s1_05_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_06_4 =)",
    "insertText": "_mm_add_epi32(s1_06_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_06_5 =)",
    "insertText": "_mm_add_epi32(s1_06_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_05_6 =)",
    "insertText": "_mm_srai_epi32(s1_05_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_05_7 =)",
    "insertText": "_mm_srai_epi32(s1_05_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_06_6 =)",
    "insertText": "_mm_srai_epi32(s1_06_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_06_7 =)",
    "insertText": "_mm_srai_epi32(s1_06_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step1 [ 5 ] =)",
    "insertText": "_mm_packs_epi32(s1_05_6, s1_05_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step1 [ 6 ] =)",
    "insertText": "_mm_packs_epi32(s1_06_6, s1_06_7)"
  },
  {
    "label": "check_epi16_overflow_x2()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x2(&step1[5], &step1[6])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_18_1 =)",
    "insertText": "_mm_unpackhi_epi16(step3[18], step3[29])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_19_0 =)",
    "insertText": "_mm_unpacklo_epi16(step3[19], step3[28])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_19_1 =)",
    "insertText": "_mm_unpackhi_epi16(step3[19], step3[28])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_20_0 =)",
    "insertText": "_mm_unpacklo_epi16(step3[20], step3[27])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_20_1 =)",
    "insertText": "_mm_unpackhi_epi16(step3[20], step3[27])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_21_0 =)",
    "insertText": "_mm_unpacklo_epi16(step3[21], step3[26])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_21_1 =)",
    "insertText": "_mm_unpackhi_epi16(step3[21], step3[26])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_18_2 =)",
    "insertText": "_mm_madd_epi16(s1_18_0, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_18_3 =)",
    "insertText": "_mm_madd_epi16(s1_18_1, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_19_2 =)",
    "insertText": "_mm_madd_epi16(s1_19_0, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_19_3 =)",
    "insertText": "_mm_madd_epi16(s1_19_1, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_20_2 =)",
    "insertText": "_mm_madd_epi16(s1_20_0, k__cospi_m24_m08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_20_3 =)",
    "insertText": "_mm_madd_epi16(s1_20_1, k__cospi_m24_m08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_21_2 =)",
    "insertText": "_mm_madd_epi16(s1_21_0, k__cospi_m24_m08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_21_3 =)",
    "insertText": "_mm_madd_epi16(s1_21_1, k__cospi_m24_m08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_26_2 =)",
    "insertText": "_mm_madd_epi16(s1_21_0, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_26_3 =)",
    "insertText": "_mm_madd_epi16(s1_21_1, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_27_2 =)",
    "insertText": "_mm_madd_epi16(s1_20_0, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_27_3 =)",
    "insertText": "_mm_madd_epi16(s1_20_1, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_28_2 =)",
    "insertText": "_mm_madd_epi16(s1_19_0, k__cospi_p24_p08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_28_3 =)",
    "insertText": "_mm_madd_epi16(s1_19_1, k__cospi_p24_p08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_29_2 =)",
    "insertText": "_mm_madd_epi16(s1_18_0, k__cospi_p24_p08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_29_3 =)",
    "insertText": "_mm_madd_epi16(s1_18_1, k__cospi_p24_p08)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_18_4 =)",
    "insertText": "_mm_add_epi32(s1_18_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_18_5 =)",
    "insertText": "_mm_add_epi32(s1_18_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_19_4 =)",
    "insertText": "_mm_add_epi32(s1_19_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_19_5 =)",
    "insertText": "_mm_add_epi32(s1_19_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_20_4 =)",
    "insertText": "_mm_add_epi32(s1_20_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_20_5 =)",
    "insertText": "_mm_add_epi32(s1_20_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_21_4 =)",
    "insertText": "_mm_add_epi32(s1_21_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_21_5 =)",
    "insertText": "_mm_add_epi32(s1_21_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_26_4 =)",
    "insertText": "_mm_add_epi32(s1_26_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_26_5 =)",
    "insertText": "_mm_add_epi32(s1_26_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_27_4 =)",
    "insertText": "_mm_add_epi32(s1_27_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_27_5 =)",
    "insertText": "_mm_add_epi32(s1_27_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_28_4 =)",
    "insertText": "_mm_add_epi32(s1_28_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_28_5 =)",
    "insertText": "_mm_add_epi32(s1_28_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_29_4 =)",
    "insertText": "_mm_add_epi32(s1_29_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_29_5 =)",
    "insertText": "_mm_add_epi32(s1_29_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_18_6 =)",
    "insertText": "_mm_srai_epi32(s1_18_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_18_7 =)",
    "insertText": "_mm_srai_epi32(s1_18_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_19_6 =)",
    "insertText": "_mm_srai_epi32(s1_19_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_19_7 =)",
    "insertText": "_mm_srai_epi32(s1_19_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_20_6 =)",
    "insertText": "_mm_srai_epi32(s1_20_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_20_7 =)",
    "insertText": "_mm_srai_epi32(s1_20_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_21_6 =)",
    "insertText": "_mm_srai_epi32(s1_21_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_21_7 =)",
    "insertText": "_mm_srai_epi32(s1_21_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_26_6 =)",
    "insertText": "_mm_srai_epi32(s1_26_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_26_7 =)",
    "insertText": "_mm_srai_epi32(s1_26_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_27_6 =)",
    "insertText": "_mm_srai_epi32(s1_27_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_27_7 =)",
    "insertText": "_mm_srai_epi32(s1_27_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_28_6 =)",
    "insertText": "_mm_srai_epi32(s1_28_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_28_7 =)",
    "insertText": "_mm_srai_epi32(s1_28_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_29_6 =)",
    "insertText": "_mm_srai_epi32(s1_29_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s1_29_7 =)",
    "insertText": "_mm_srai_epi32(s1_29_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 8 ] =)",
    "insertText": "_mm_packs_epi32(s1_18_6, s1_18_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 9 ] =)",
    "insertText": "_mm_packs_epi32(s1_19_6, s1_19_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 0 ] =)",
    "insertText": "_mm_packs_epi32(s1_20_6, s1_20_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 1 ] =)",
    "insertText": "_mm_packs_epi32(s1_21_6, s1_21_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 6 ] =)",
    "insertText": "_mm_packs_epi32(s1_26_6, s1_26_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 7 ] =)",
    "insertText": "_mm_packs_epi32(s1_27_6, s1_27_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 8 ] =)",
    "insertText": "_mm_packs_epi32(s1_28_6, s1_28_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 9 ] =)",
    "insertText": "_mm_packs_epi32(s1_29_6, s1_29_7)"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&step1[18], &step1[19], &step1[20], &step1[21], &step1[26], &step1[27], &step1[28], &step1[29])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 5 ] =)",
    "insertText": "SUB_EPI16(step3[4], step1[5])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 6 ] =)",
    "insertText": "SUB_EPI16(step3[7], step1[6])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 7 ] =)",
    "insertText": "ADD_EPI16(step1[6], step3[7])"
  },
  {
    "label": "check_epi16_overflow_x4()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x4(&step2[4], &step2[5], &step2[6], &step2[7])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_00_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[0], step1[1])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_08_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[2], step1[3])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_08_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[2], step1[3])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_00_2 =)",
    "insertText": "_mm_madd_epi16(out_00_0, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_00_3 =)",
    "insertText": "_mm_madd_epi16(out_00_1, k__cospi_p16_p16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_16_2 =)",
    "insertText": "_mm_madd_epi16(out_00_0, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_16_3 =)",
    "insertText": "_mm_madd_epi16(out_00_1, k__cospi_p16_m16)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_08_2 =)",
    "insertText": "_mm_madd_epi16(out_08_0, k__cospi_p24_p08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_08_3 =)",
    "insertText": "_mm_madd_epi16(out_08_1, k__cospi_p24_p08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_24_2 =)",
    "insertText": "_mm_madd_epi16(out_08_0, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_24_3 =)",
    "insertText": "_mm_madd_epi16(out_08_1, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_00_4 =)",
    "insertText": "_mm_add_epi32(out_00_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_00_5 =)",
    "insertText": "_mm_add_epi32(out_00_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_16_4 =)",
    "insertText": "_mm_add_epi32(out_16_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_16_5 =)",
    "insertText": "_mm_add_epi32(out_16_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_08_4 =)",
    "insertText": "_mm_add_epi32(out_08_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_08_5 =)",
    "insertText": "_mm_add_epi32(out_08_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_24_4 =)",
    "insertText": "_mm_add_epi32(out_24_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_24_5 =)",
    "insertText": "_mm_add_epi32(out_24_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_00_6 =)",
    "insertText": "_mm_srai_epi32(out_00_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_00_7 =)",
    "insertText": "_mm_srai_epi32(out_00_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_16_6 =)",
    "insertText": "_mm_srai_epi32(out_16_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_16_7 =)",
    "insertText": "_mm_srai_epi32(out_16_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_08_6 =)",
    "insertText": "_mm_srai_epi32(out_08_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_08_7 =)",
    "insertText": "_mm_srai_epi32(out_08_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_24_6 =)",
    "insertText": "_mm_srai_epi32(out_24_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_24_7 =)",
    "insertText": "_mm_srai_epi32(out_24_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_packs_epi32(out_00_6, out_00_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 6 ] =)",
    "insertText": "_mm_packs_epi32(out_16_6, out_16_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 8 ] =)",
    "insertText": "_mm_packs_epi32(out_08_6, out_08_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 4 ] =)",
    "insertText": "_mm_packs_epi32(out_24_6, out_24_7)"
  },
  {
    "label": "check_epi16_overflow_x4()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x4(&out[0], &out[16], &out[8], &out[24])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_09_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[9], step1[14])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_10_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[10], step1[13])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_10_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[10], step1[13])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_09_2 =)",
    "insertText": "_mm_madd_epi16(s2_09_0, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_09_3 =)",
    "insertText": "_mm_madd_epi16(s2_09_1, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_10_2 =)",
    "insertText": "_mm_madd_epi16(s2_10_0, k__cospi_m24_m08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_10_3 =)",
    "insertText": "_mm_madd_epi16(s2_10_1, k__cospi_m24_m08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_13_2 =)",
    "insertText": "_mm_madd_epi16(s2_10_0, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_13_3 =)",
    "insertText": "_mm_madd_epi16(s2_10_1, k__cospi_m08_p24)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_14_2 =)",
    "insertText": "_mm_madd_epi16(s2_09_0, k__cospi_p24_p08)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_14_3 =)",
    "insertText": "_mm_madd_epi16(s2_09_1, k__cospi_p24_p08)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_09_4 =)",
    "insertText": "_mm_add_epi32(s2_09_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_09_5 =)",
    "insertText": "_mm_add_epi32(s2_09_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_10_4 =)",
    "insertText": "_mm_add_epi32(s2_10_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_10_5 =)",
    "insertText": "_mm_add_epi32(s2_10_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_13_4 =)",
    "insertText": "_mm_add_epi32(s2_13_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_13_5 =)",
    "insertText": "_mm_add_epi32(s2_13_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_14_4 =)",
    "insertText": "_mm_add_epi32(s2_14_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_14_5 =)",
    "insertText": "_mm_add_epi32(s2_14_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_09_6 =)",
    "insertText": "_mm_srai_epi32(s2_09_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_09_7 =)",
    "insertText": "_mm_srai_epi32(s2_09_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_10_6 =)",
    "insertText": "_mm_srai_epi32(s2_10_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_10_7 =)",
    "insertText": "_mm_srai_epi32(s2_10_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_13_6 =)",
    "insertText": "_mm_srai_epi32(s2_13_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_13_7 =)",
    "insertText": "_mm_srai_epi32(s2_13_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_14_6 =)",
    "insertText": "_mm_srai_epi32(s2_14_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s2_14_7 =)",
    "insertText": "_mm_srai_epi32(s2_14_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 9 ] =)",
    "insertText": "_mm_packs_epi32(s2_09_6, s2_09_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 0 ] =)",
    "insertText": "_mm_packs_epi32(s2_10_6, s2_10_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 3 ] =)",
    "insertText": "_mm_packs_epi32(s2_13_6, s2_13_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 4 ] =)",
    "insertText": "_mm_packs_epi32(s2_14_6, s2_14_7)"
  },
  {
    "label": "check_epi16_overflow_x4()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x4(&step2[9], &step2[10], &step2[13], &step2[14])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 7 ] =)",
    "insertText": "ADD_EPI16(step1[18], step3[17])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 8 ] =)",
    "insertText": "SUB_EPI16(step3[17], step1[18])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 1 9 ] =)",
    "insertText": "SUB_EPI16(step3[16], step1[19])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 0 ] =)",
    "insertText": "SUB_EPI16(step3[23], step1[20])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 1 ] =)",
    "insertText": "SUB_EPI16(step3[22], step1[21])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 2 ] =)",
    "insertText": "ADD_EPI16(step1[21], step3[22])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 3 ] =)",
    "insertText": "ADD_EPI16(step1[20], step3[23])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 4 ] =)",
    "insertText": "ADD_EPI16(step1[27], step3[24])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 5 ] =)",
    "insertText": "ADD_EPI16(step1[26], step3[25])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 6 ] =)",
    "insertText": "SUB_EPI16(step3[25], step1[26])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 7 ] =)",
    "insertText": "SUB_EPI16(step3[24], step1[27])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 8 ] =)",
    "insertText": "SUB_EPI16(step3[31], step1[28])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 2 9 ] =)",
    "insertText": "SUB_EPI16(step3[30], step1[29])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 3 0 ] =)",
    "insertText": "ADD_EPI16(step1[29], step3[30])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step2 [ 3 1 ] =)",
    "insertText": "ADD_EPI16(step1[28], step3[31])"
  },
  {
    "label": "check_epi16_overflow_x16()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x16(&step2[16], &step2[17], &step2[18], &step2[19], &step2[20], &step2[21], &step2[22], &step2[23], &step2[24], &step2[25], &step2[26], &step2[27], &step2[28], &step2[29], &step2[30], &step2[31])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_04_1 =)",
    "insertText": "_mm_unpackhi_epi16(step2[4], step2[7])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_20_0 =)",
    "insertText": "_mm_unpacklo_epi16(step2[5], step2[6])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_20_1 =)",
    "insertText": "_mm_unpackhi_epi16(step2[5], step2[6])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_28_0 =)",
    "insertText": "_mm_unpacklo_epi16(step2[4], step2[7])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_04_2 =)",
    "insertText": "_mm_madd_epi16(out_04_0, k__cospi_p28_p04)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_04_3 =)",
    "insertText": "_mm_madd_epi16(out_04_1, k__cospi_p28_p04)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_20_2 =)",
    "insertText": "_mm_madd_epi16(out_20_0, k__cospi_p12_p20)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_20_3 =)",
    "insertText": "_mm_madd_epi16(out_20_1, k__cospi_p12_p20)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_12_2 =)",
    "insertText": "_mm_madd_epi16(out_12_0, k__cospi_m20_p12)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_12_3 =)",
    "insertText": "_mm_madd_epi16(out_12_1, k__cospi_m20_p12)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_28_2 =)",
    "insertText": "_mm_madd_epi16(out_28_0, k__cospi_m04_p28)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_28_3 =)",
    "insertText": "_mm_madd_epi16(out_28_1, k__cospi_m04_p28)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_04_4 =)",
    "insertText": "_mm_add_epi32(out_04_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_04_5 =)",
    "insertText": "_mm_add_epi32(out_04_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_20_4 =)",
    "insertText": "_mm_add_epi32(out_20_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_20_5 =)",
    "insertText": "_mm_add_epi32(out_20_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_12_4 =)",
    "insertText": "_mm_add_epi32(out_12_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_12_5 =)",
    "insertText": "_mm_add_epi32(out_12_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_28_4 =)",
    "insertText": "_mm_add_epi32(out_28_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_28_5 =)",
    "insertText": "_mm_add_epi32(out_28_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_04_6 =)",
    "insertText": "_mm_srai_epi32(out_04_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_04_7 =)",
    "insertText": "_mm_srai_epi32(out_04_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_20_6 =)",
    "insertText": "_mm_srai_epi32(out_20_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_20_7 =)",
    "insertText": "_mm_srai_epi32(out_20_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_12_6 =)",
    "insertText": "_mm_srai_epi32(out_12_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_12_7 =)",
    "insertText": "_mm_srai_epi32(out_12_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_28_6 =)",
    "insertText": "_mm_srai_epi32(out_28_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_28_7 =)",
    "insertText": "_mm_srai_epi32(out_28_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 4 ] =)",
    "insertText": "_mm_packs_epi32(out_04_6, out_04_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 0 ] =)",
    "insertText": "_mm_packs_epi32(out_20_6, out_20_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 2 ] =)",
    "insertText": "_mm_packs_epi32(out_12_6, out_12_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 8 ] =)",
    "insertText": "_mm_packs_epi32(out_28_6, out_28_7)"
  },
  {
    "label": "check_epi16_overflow_x4()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x4(&out[4], &out[20], &out[12], &out[28])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 9 ] =)",
    "insertText": "SUB_EPI16(step1[8], step2[9])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 0 ] =)",
    "insertText": "SUB_EPI16(step1[11], step2[10])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 1 ] =)",
    "insertText": "ADD_EPI16(step2[10], step1[11])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 2 ] =)",
    "insertText": "ADD_EPI16(step2[13], step1[12])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 3 ] =)",
    "insertText": "SUB_EPI16(step1[12], step2[13])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 4 ] =)",
    "insertText": "SUB_EPI16(step1[15], step2[14])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 5 ] =)",
    "insertText": "ADD_EPI16(step2[14], step1[15])"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&step3[8], &step3[9], &step3[10], &step3[11], &step3[12], &step3[13], &step3[14], &step3[15])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_17_1 =)",
    "insertText": "_mm_unpackhi_epi16(step2[17], step2[30])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_18_0 =)",
    "insertText": "_mm_unpacklo_epi16(step2[18], step2[29])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_18_1 =)",
    "insertText": "_mm_unpackhi_epi16(step2[18], step2[29])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_21_0 =)",
    "insertText": "_mm_unpacklo_epi16(step2[21], step2[26])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_21_1 =)",
    "insertText": "_mm_unpackhi_epi16(step2[21], step2[26])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_22_0 =)",
    "insertText": "_mm_unpacklo_epi16(step2[22], step2[25])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_22_1 =)",
    "insertText": "_mm_unpackhi_epi16(step2[22], step2[25])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_17_2 =)",
    "insertText": "_mm_madd_epi16(s3_17_0, k__cospi_m04_p28)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_17_3 =)",
    "insertText": "_mm_madd_epi16(s3_17_1, k__cospi_m04_p28)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_18_2 =)",
    "insertText": "_mm_madd_epi16(s3_18_0, k__cospi_m28_m04)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_18_3 =)",
    "insertText": "_mm_madd_epi16(s3_18_1, k__cospi_m28_m04)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_21_2 =)",
    "insertText": "_mm_madd_epi16(s3_21_0, k__cospi_m20_p12)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_21_3 =)",
    "insertText": "_mm_madd_epi16(s3_21_1, k__cospi_m20_p12)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_22_2 =)",
    "insertText": "_mm_madd_epi16(s3_22_0, k__cospi_m12_m20)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_22_3 =)",
    "insertText": "_mm_madd_epi16(s3_22_1, k__cospi_m12_m20)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_25_2 =)",
    "insertText": "_mm_madd_epi16(s3_22_0, k__cospi_m20_p12)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_25_3 =)",
    "insertText": "_mm_madd_epi16(s3_22_1, k__cospi_m20_p12)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_26_2 =)",
    "insertText": "_mm_madd_epi16(s3_21_0, k__cospi_p12_p20)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_26_3 =)",
    "insertText": "_mm_madd_epi16(s3_21_1, k__cospi_p12_p20)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_29_2 =)",
    "insertText": "_mm_madd_epi16(s3_18_0, k__cospi_m04_p28)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_29_3 =)",
    "insertText": "_mm_madd_epi16(s3_18_1, k__cospi_m04_p28)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_30_2 =)",
    "insertText": "_mm_madd_epi16(s3_17_0, k__cospi_p28_p04)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_30_3 =)",
    "insertText": "_mm_madd_epi16(s3_17_1, k__cospi_p28_p04)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_17_4 =)",
    "insertText": "_mm_add_epi32(s3_17_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_17_5 =)",
    "insertText": "_mm_add_epi32(s3_17_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_18_4 =)",
    "insertText": "_mm_add_epi32(s3_18_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_18_5 =)",
    "insertText": "_mm_add_epi32(s3_18_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_21_4 =)",
    "insertText": "_mm_add_epi32(s3_21_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_21_5 =)",
    "insertText": "_mm_add_epi32(s3_21_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_22_4 =)",
    "insertText": "_mm_add_epi32(s3_22_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_22_5 =)",
    "insertText": "_mm_add_epi32(s3_22_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_17_6 =)",
    "insertText": "_mm_srai_epi32(s3_17_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_17_7 =)",
    "insertText": "_mm_srai_epi32(s3_17_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_18_6 =)",
    "insertText": "_mm_srai_epi32(s3_18_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_18_7 =)",
    "insertText": "_mm_srai_epi32(s3_18_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_21_6 =)",
    "insertText": "_mm_srai_epi32(s3_21_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_21_7 =)",
    "insertText": "_mm_srai_epi32(s3_21_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_22_6 =)",
    "insertText": "_mm_srai_epi32(s3_22_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_22_7 =)",
    "insertText": "_mm_srai_epi32(s3_22_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_25_4 =)",
    "insertText": "_mm_add_epi32(s3_25_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_25_5 =)",
    "insertText": "_mm_add_epi32(s3_25_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_26_4 =)",
    "insertText": "_mm_add_epi32(s3_26_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_26_5 =)",
    "insertText": "_mm_add_epi32(s3_26_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_29_4 =)",
    "insertText": "_mm_add_epi32(s3_29_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_29_5 =)",
    "insertText": "_mm_add_epi32(s3_29_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_30_4 =)",
    "insertText": "_mm_add_epi32(s3_30_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_30_5 =)",
    "insertText": "_mm_add_epi32(s3_30_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_25_6 =)",
    "insertText": "_mm_srai_epi32(s3_25_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_25_7 =)",
    "insertText": "_mm_srai_epi32(s3_25_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_26_6 =)",
    "insertText": "_mm_srai_epi32(s3_26_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_26_7 =)",
    "insertText": "_mm_srai_epi32(s3_26_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_29_6 =)",
    "insertText": "_mm_srai_epi32(s3_29_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_29_7 =)",
    "insertText": "_mm_srai_epi32(s3_29_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_30_6 =)",
    "insertText": "_mm_srai_epi32(s3_30_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i s3_30_7 =)",
    "insertText": "_mm_srai_epi32(s3_30_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 7 ] =)",
    "insertText": "_mm_packs_epi32(s3_17_6, s3_17_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 1 8 ] =)",
    "insertText": "_mm_packs_epi32(s3_18_6, s3_18_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 1 ] =)",
    "insertText": "_mm_packs_epi32(s3_21_6, s3_21_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 2 ] =)",
    "insertText": "_mm_packs_epi32(s3_22_6, s3_22_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 5 ] =)",
    "insertText": "_mm_packs_epi32(s3_25_6, s3_25_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 6 ] =)",
    "insertText": "_mm_packs_epi32(s3_26_6, s3_26_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 2 9 ] =)",
    "insertText": "_mm_packs_epi32(s3_29_6, s3_29_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (step3 [ 3 0 ] =)",
    "insertText": "_mm_packs_epi32(s3_30_6, s3_30_7)"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&step3[17], &step3[18], &step3[21], &step3[22], &step3[25], &step3[26], &step3[29], &step3[30])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_02_1 =)",
    "insertText": "_mm_unpackhi_epi16(step3[8], step3[15])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_18_0 =)",
    "insertText": "_mm_unpacklo_epi16(step3[9], step3[14])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_18_1 =)",
    "insertText": "_mm_unpackhi_epi16(step3[9], step3[14])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_10_0 =)",
    "insertText": "_mm_unpacklo_epi16(step3[10], step3[13])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_10_1 =)",
    "insertText": "_mm_unpackhi_epi16(step3[10], step3[13])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_26_0 =)",
    "insertText": "_mm_unpacklo_epi16(step3[11], step3[12])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_26_1 =)",
    "insertText": "_mm_unpackhi_epi16(step3[11], step3[12])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_02_2 =)",
    "insertText": "_mm_madd_epi16(out_02_0, k__cospi_p30_p02)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_02_3 =)",
    "insertText": "_mm_madd_epi16(out_02_1, k__cospi_p30_p02)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_18_2 =)",
    "insertText": "_mm_madd_epi16(out_18_0, k__cospi_p14_p18)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_18_3 =)",
    "insertText": "_mm_madd_epi16(out_18_1, k__cospi_p14_p18)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_10_2 =)",
    "insertText": "_mm_madd_epi16(out_10_0, k__cospi_p22_p10)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_10_3 =)",
    "insertText": "_mm_madd_epi16(out_10_1, k__cospi_p22_p10)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_26_2 =)",
    "insertText": "_mm_madd_epi16(out_26_0, k__cospi_p06_p26)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_26_3 =)",
    "insertText": "_mm_madd_epi16(out_26_1, k__cospi_p06_p26)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_06_2 =)",
    "insertText": "_mm_madd_epi16(out_26_0, k__cospi_m26_p06)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_06_3 =)",
    "insertText": "_mm_madd_epi16(out_26_1, k__cospi_m26_p06)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_22_2 =)",
    "insertText": "_mm_madd_epi16(out_10_0, k__cospi_m10_p22)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_22_3 =)",
    "insertText": "_mm_madd_epi16(out_10_1, k__cospi_m10_p22)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_14_2 =)",
    "insertText": "_mm_madd_epi16(out_18_0, k__cospi_m18_p14)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_14_3 =)",
    "insertText": "_mm_madd_epi16(out_18_1, k__cospi_m18_p14)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_30_2 =)",
    "insertText": "_mm_madd_epi16(out_02_0, k__cospi_m02_p30)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_30_3 =)",
    "insertText": "_mm_madd_epi16(out_02_1, k__cospi_m02_p30)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_02_4 =)",
    "insertText": "_mm_add_epi32(out_02_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_02_5 =)",
    "insertText": "_mm_add_epi32(out_02_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_18_4 =)",
    "insertText": "_mm_add_epi32(out_18_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_18_5 =)",
    "insertText": "_mm_add_epi32(out_18_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_10_4 =)",
    "insertText": "_mm_add_epi32(out_10_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_10_5 =)",
    "insertText": "_mm_add_epi32(out_10_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_26_4 =)",
    "insertText": "_mm_add_epi32(out_26_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_26_5 =)",
    "insertText": "_mm_add_epi32(out_26_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_06_4 =)",
    "insertText": "_mm_add_epi32(out_06_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_06_5 =)",
    "insertText": "_mm_add_epi32(out_06_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_22_4 =)",
    "insertText": "_mm_add_epi32(out_22_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_22_5 =)",
    "insertText": "_mm_add_epi32(out_22_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_14_4 =)",
    "insertText": "_mm_add_epi32(out_14_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_14_5 =)",
    "insertText": "_mm_add_epi32(out_14_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_30_4 =)",
    "insertText": "_mm_add_epi32(out_30_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_30_5 =)",
    "insertText": "_mm_add_epi32(out_30_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_02_6 =)",
    "insertText": "_mm_srai_epi32(out_02_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_02_7 =)",
    "insertText": "_mm_srai_epi32(out_02_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_18_6 =)",
    "insertText": "_mm_srai_epi32(out_18_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_18_7 =)",
    "insertText": "_mm_srai_epi32(out_18_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_10_6 =)",
    "insertText": "_mm_srai_epi32(out_10_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_10_7 =)",
    "insertText": "_mm_srai_epi32(out_10_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_26_6 =)",
    "insertText": "_mm_srai_epi32(out_26_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_26_7 =)",
    "insertText": "_mm_srai_epi32(out_26_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_06_6 =)",
    "insertText": "_mm_srai_epi32(out_06_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_06_7 =)",
    "insertText": "_mm_srai_epi32(out_06_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_22_6 =)",
    "insertText": "_mm_srai_epi32(out_22_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_22_7 =)",
    "insertText": "_mm_srai_epi32(out_22_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_14_6 =)",
    "insertText": "_mm_srai_epi32(out_14_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_14_7 =)",
    "insertText": "_mm_srai_epi32(out_14_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_30_6 =)",
    "insertText": "_mm_srai_epi32(out_30_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_30_7 =)",
    "insertText": "_mm_srai_epi32(out_30_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 ] =)",
    "insertText": "_mm_packs_epi32(out_02_6, out_02_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 8 ] =)",
    "insertText": "_mm_packs_epi32(out_18_6, out_18_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 0 ] =)",
    "insertText": "_mm_packs_epi32(out_10_6, out_10_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 6 ] =)",
    "insertText": "_mm_packs_epi32(out_26_6, out_26_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 6 ] =)",
    "insertText": "_mm_packs_epi32(out_06_6, out_06_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 2 ] =)",
    "insertText": "_mm_packs_epi32(out_22_6, out_22_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 4 ] =)",
    "insertText": "_mm_packs_epi32(out_14_6, out_14_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 3 0 ] =)",
    "insertText": "_mm_packs_epi32(out_30_6, out_30_7)"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&out[2], &out[18], &out[10], &out[26], &out[6], &out[22], &out[14], &out[30])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 7 ] =)",
    "insertText": "SUB_EPI16(step2[16], step3[17])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 8 ] =)",
    "insertText": "SUB_EPI16(step2[19], step3[18])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 1 9 ] =)",
    "insertText": "ADD_EPI16(step3[18], step2[19])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 0 ] =)",
    "insertText": "ADD_EPI16(step3[21], step2[20])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 1 ] =)",
    "insertText": "SUB_EPI16(step2[20], step3[21])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 2 ] =)",
    "insertText": "SUB_EPI16(step2[23], step3[22])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 3 ] =)",
    "insertText": "ADD_EPI16(step3[22], step2[23])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 4 ] =)",
    "insertText": "ADD_EPI16(step3[25], step2[24])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 5 ] =)",
    "insertText": "SUB_EPI16(step2[24], step3[25])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 6 ] =)",
    "insertText": "SUB_EPI16(step2[27], step3[26])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 7 ] =)",
    "insertText": "ADD_EPI16(step3[26], step2[27])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 8 ] =)",
    "insertText": "ADD_EPI16(step3[29], step2[28])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 2 9 ] =)",
    "insertText": "SUB_EPI16(step2[28], step3[29])"
  },
  {
    "label": "SUB_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 0 ] =)",
    "insertText": "SUB_EPI16(step2[31], step3[30])"
  },
  {
    "label": "ADD_EPI16()",
    "kind": "Method",
    "detail": "Function (step1 [ 3 1 ] =)",
    "insertText": "ADD_EPI16(step3[30], step2[31])"
  },
  {
    "label": "check_epi16_overflow_x16()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x16(&step1[16], &step1[17], &step1[18], &step1[19], &step1[20], &step1[21], &step1[22], &step1[23], &step1[24], &step1[25], &step1[26], &step1[27], &step1[28], &step1[29], &step1[30], &step1[31])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_01_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[16], step1[31])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_17_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[17], step1[30])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_17_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[17], step1[30])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_09_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[18], step1[29])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_09_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[18], step1[29])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_25_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[19], step1[28])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_25_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[19], step1[28])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_01_2 =)",
    "insertText": "_mm_madd_epi16(out_01_0, k__cospi_p31_p01)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_01_3 =)",
    "insertText": "_mm_madd_epi16(out_01_1, k__cospi_p31_p01)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_17_2 =)",
    "insertText": "_mm_madd_epi16(out_17_0, k__cospi_p15_p17)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_17_3 =)",
    "insertText": "_mm_madd_epi16(out_17_1, k__cospi_p15_p17)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_09_2 =)",
    "insertText": "_mm_madd_epi16(out_09_0, k__cospi_p23_p09)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_09_3 =)",
    "insertText": "_mm_madd_epi16(out_09_1, k__cospi_p23_p09)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_25_2 =)",
    "insertText": "_mm_madd_epi16(out_25_0, k__cospi_p07_p25)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_25_3 =)",
    "insertText": "_mm_madd_epi16(out_25_1, k__cospi_p07_p25)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_07_2 =)",
    "insertText": "_mm_madd_epi16(out_25_0, k__cospi_m25_p07)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_07_3 =)",
    "insertText": "_mm_madd_epi16(out_25_1, k__cospi_m25_p07)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_23_2 =)",
    "insertText": "_mm_madd_epi16(out_09_0, k__cospi_m09_p23)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_23_3 =)",
    "insertText": "_mm_madd_epi16(out_09_1, k__cospi_m09_p23)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_15_2 =)",
    "insertText": "_mm_madd_epi16(out_17_0, k__cospi_m17_p15)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_15_3 =)",
    "insertText": "_mm_madd_epi16(out_17_1, k__cospi_m17_p15)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_31_2 =)",
    "insertText": "_mm_madd_epi16(out_01_0, k__cospi_m01_p31)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_31_3 =)",
    "insertText": "_mm_madd_epi16(out_01_1, k__cospi_m01_p31)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_01_4 =)",
    "insertText": "_mm_add_epi32(out_01_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_01_5 =)",
    "insertText": "_mm_add_epi32(out_01_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_17_4 =)",
    "insertText": "_mm_add_epi32(out_17_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_17_5 =)",
    "insertText": "_mm_add_epi32(out_17_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_09_4 =)",
    "insertText": "_mm_add_epi32(out_09_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_09_5 =)",
    "insertText": "_mm_add_epi32(out_09_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_25_4 =)",
    "insertText": "_mm_add_epi32(out_25_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_25_5 =)",
    "insertText": "_mm_add_epi32(out_25_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_07_4 =)",
    "insertText": "_mm_add_epi32(out_07_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_07_5 =)",
    "insertText": "_mm_add_epi32(out_07_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_23_4 =)",
    "insertText": "_mm_add_epi32(out_23_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_23_5 =)",
    "insertText": "_mm_add_epi32(out_23_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_15_4 =)",
    "insertText": "_mm_add_epi32(out_15_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_15_5 =)",
    "insertText": "_mm_add_epi32(out_15_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_31_4 =)",
    "insertText": "_mm_add_epi32(out_31_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_31_5 =)",
    "insertText": "_mm_add_epi32(out_31_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_01_6 =)",
    "insertText": "_mm_srai_epi32(out_01_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_01_7 =)",
    "insertText": "_mm_srai_epi32(out_01_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_17_6 =)",
    "insertText": "_mm_srai_epi32(out_17_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_17_7 =)",
    "insertText": "_mm_srai_epi32(out_17_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_09_6 =)",
    "insertText": "_mm_srai_epi32(out_09_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_09_7 =)",
    "insertText": "_mm_srai_epi32(out_09_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_25_6 =)",
    "insertText": "_mm_srai_epi32(out_25_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_25_7 =)",
    "insertText": "_mm_srai_epi32(out_25_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_07_6 =)",
    "insertText": "_mm_srai_epi32(out_07_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_07_7 =)",
    "insertText": "_mm_srai_epi32(out_07_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_23_6 =)",
    "insertText": "_mm_srai_epi32(out_23_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_23_7 =)",
    "insertText": "_mm_srai_epi32(out_23_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_15_6 =)",
    "insertText": "_mm_srai_epi32(out_15_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_15_7 =)",
    "insertText": "_mm_srai_epi32(out_15_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_31_6 =)",
    "insertText": "_mm_srai_epi32(out_31_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_31_7 =)",
    "insertText": "_mm_srai_epi32(out_31_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 ] =)",
    "insertText": "_mm_packs_epi32(out_01_6, out_01_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 7 ] =)",
    "insertText": "_mm_packs_epi32(out_17_6, out_17_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 9 ] =)",
    "insertText": "_mm_packs_epi32(out_09_6, out_09_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 5 ] =)",
    "insertText": "_mm_packs_epi32(out_25_6, out_25_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 7 ] =)",
    "insertText": "_mm_packs_epi32(out_07_6, out_07_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 3 ] =)",
    "insertText": "_mm_packs_epi32(out_23_6, out_23_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 5 ] =)",
    "insertText": "_mm_packs_epi32(out_15_6, out_15_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 3 1 ] =)",
    "insertText": "_mm_packs_epi32(out_31_6, out_31_7)"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&out[1], &out[17], &out[9], &out[25], &out[7], &out[23], &out[15], &out[31])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_05_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[20], step1[27])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_21_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[21], step1[26])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_21_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[21], step1[26])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_13_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[22], step1[25])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_13_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[22], step1[25])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_29_0 =)",
    "insertText": "_mm_unpacklo_epi16(step1[23], step1[24])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_29_1 =)",
    "insertText": "_mm_unpackhi_epi16(step1[23], step1[24])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_05_2 =)",
    "insertText": "_mm_madd_epi16(out_05_0, k__cospi_p27_p05)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_05_3 =)",
    "insertText": "_mm_madd_epi16(out_05_1, k__cospi_p27_p05)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_21_2 =)",
    "insertText": "_mm_madd_epi16(out_21_0, k__cospi_p11_p21)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_21_3 =)",
    "insertText": "_mm_madd_epi16(out_21_1, k__cospi_p11_p21)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_13_2 =)",
    "insertText": "_mm_madd_epi16(out_13_0, k__cospi_p19_p13)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_13_3 =)",
    "insertText": "_mm_madd_epi16(out_13_1, k__cospi_p19_p13)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_29_2 =)",
    "insertText": "_mm_madd_epi16(out_29_0, k__cospi_p03_p29)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_29_3 =)",
    "insertText": "_mm_madd_epi16(out_29_1, k__cospi_p03_p29)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_03_2 =)",
    "insertText": "_mm_madd_epi16(out_29_0, k__cospi_m29_p03)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_03_3 =)",
    "insertText": "_mm_madd_epi16(out_29_1, k__cospi_m29_p03)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_19_2 =)",
    "insertText": "_mm_madd_epi16(out_13_0, k__cospi_m13_p19)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_19_3 =)",
    "insertText": "_mm_madd_epi16(out_13_1, k__cospi_m13_p19)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_11_2 =)",
    "insertText": "_mm_madd_epi16(out_21_0, k__cospi_m21_p11)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_11_3 =)",
    "insertText": "_mm_madd_epi16(out_21_1, k__cospi_m21_p11)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_27_2 =)",
    "insertText": "_mm_madd_epi16(out_05_0, k__cospi_m05_p27)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i out_27_3 =)",
    "insertText": "_mm_madd_epi16(out_05_1, k__cospi_m05_p27)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_05_4 =)",
    "insertText": "_mm_add_epi32(out_05_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_05_5 =)",
    "insertText": "_mm_add_epi32(out_05_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_21_4 =)",
    "insertText": "_mm_add_epi32(out_21_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_21_5 =)",
    "insertText": "_mm_add_epi32(out_21_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_13_4 =)",
    "insertText": "_mm_add_epi32(out_13_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_13_5 =)",
    "insertText": "_mm_add_epi32(out_13_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_29_4 =)",
    "insertText": "_mm_add_epi32(out_29_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_29_5 =)",
    "insertText": "_mm_add_epi32(out_29_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_03_4 =)",
    "insertText": "_mm_add_epi32(out_03_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_03_5 =)",
    "insertText": "_mm_add_epi32(out_03_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_19_4 =)",
    "insertText": "_mm_add_epi32(out_19_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_19_5 =)",
    "insertText": "_mm_add_epi32(out_19_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_11_4 =)",
    "insertText": "_mm_add_epi32(out_11_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_11_5 =)",
    "insertText": "_mm_add_epi32(out_11_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_27_4 =)",
    "insertText": "_mm_add_epi32(out_27_2, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_27_5 =)",
    "insertText": "_mm_add_epi32(out_27_3, k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_05_6 =)",
    "insertText": "_mm_srai_epi32(out_05_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_05_7 =)",
    "insertText": "_mm_srai_epi32(out_05_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_21_6 =)",
    "insertText": "_mm_srai_epi32(out_21_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_21_7 =)",
    "insertText": "_mm_srai_epi32(out_21_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_13_6 =)",
    "insertText": "_mm_srai_epi32(out_13_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_13_7 =)",
    "insertText": "_mm_srai_epi32(out_13_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_29_6 =)",
    "insertText": "_mm_srai_epi32(out_29_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_29_7 =)",
    "insertText": "_mm_srai_epi32(out_29_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_03_6 =)",
    "insertText": "_mm_srai_epi32(out_03_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_03_7 =)",
    "insertText": "_mm_srai_epi32(out_03_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_19_6 =)",
    "insertText": "_mm_srai_epi32(out_19_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_19_7 =)",
    "insertText": "_mm_srai_epi32(out_19_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_11_6 =)",
    "insertText": "_mm_srai_epi32(out_11_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_11_7 =)",
    "insertText": "_mm_srai_epi32(out_11_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_27_6 =)",
    "insertText": "_mm_srai_epi32(out_27_4, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i out_27_7 =)",
    "insertText": "_mm_srai_epi32(out_27_5, DCT_CONST_BITS)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 5 ] =)",
    "insertText": "_mm_packs_epi32(out_05_6, out_05_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 1 ] =)",
    "insertText": "_mm_packs_epi32(out_21_6, out_21_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 3 ] =)",
    "insertText": "_mm_packs_epi32(out_13_6, out_13_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 9 ] =)",
    "insertText": "_mm_packs_epi32(out_29_6, out_29_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 3 ] =)",
    "insertText": "_mm_packs_epi32(out_03_6, out_03_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 9 ] =)",
    "insertText": "_mm_packs_epi32(out_19_6, out_19_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 1 ] =)",
    "insertText": "_mm_packs_epi32(out_11_6, out_11_7)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 7 ] =)",
    "insertText": "_mm_packs_epi32(out_27_6, out_27_7)"
  },
  {
    "label": "check_epi16_overflow_x8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "check_epi16_overflow_x8(&out[5], &out[21], &out[13], &out[29], &out[3], &out[19], &out[11], &out[27])"
  },
  {
    "label": "pair_set_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k__pOne_mOne =)",
    "insertText": "pair_set_epi16(1, -1)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function ({ lstep2 [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi16(step2[0], step2[7])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi16(step2[0], step2[7])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi16(step2[1], step2[6])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi16(step2[1], step2[6])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi16(step2[2], step2[5])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi16(step2[2], step2[5])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi16(step2[3], step2[4])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi16(step2[3], step2[4])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 0 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[0], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 1 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[1], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[2], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[3], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[4], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[5], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 6 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[6], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 7 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[7], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 8 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[6], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 9 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[7], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 1 0 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[4], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 1 1 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[5], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 1 2 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[2], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 1 3 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[3], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 1 4 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[0], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 1 5 ] =)",
    "insertText": "_mm_madd_epi16(lstep2[1], k__pOne_mOne)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (} { const __m128i s3_10_0 =)",
    "insertText": "_mm_unpacklo_epi16(step2[13], step2[10])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (} { lstep1 [ 3 2 ] =)",
    "insertText": "_mm_unpacklo_epi16(step1[16], step2[23])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 3 ] =)",
    "insertText": "_mm_unpackhi_epi16(step1[16], step2[23])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 4 ] =)",
    "insertText": "_mm_unpacklo_epi16(step1[17], step2[22])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 5 ] =)",
    "insertText": "_mm_unpackhi_epi16(step1[17], step2[22])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 6 ] =)",
    "insertText": "_mm_unpacklo_epi16(step1[18], step2[21])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 7 ] =)",
    "insertText": "_mm_unpackhi_epi16(step1[18], step2[21])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 8 ] =)",
    "insertText": "_mm_unpacklo_epi16(step1[19], step2[20])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 9 ] =)",
    "insertText": "_mm_unpackhi_epi16(step1[19], step2[20])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 6 ] =)",
    "insertText": "_mm_unpacklo_epi16(step1[28], step2[27])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 7 ] =)",
    "insertText": "_mm_unpackhi_epi16(step1[28], step2[27])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 8 ] =)",
    "insertText": "_mm_unpacklo_epi16(step1[29], step2[26])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 9 ] =)",
    "insertText": "_mm_unpackhi_epi16(step1[29], step2[26])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 6 0 ] =)",
    "insertText": "_mm_unpacklo_epi16(step1[30], step2[25])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 6 1 ] =)",
    "insertText": "_mm_unpackhi_epi16(step1[30], step2[25])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 6 2 ] =)",
    "insertText": "_mm_unpacklo_epi16(step1[31], step2[24])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 6 3 ] =)",
    "insertText": "_mm_unpackhi_epi16(step1[31], step2[24])"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 2 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[32], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 3 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[33], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 4 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[34], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 5 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[35], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 6 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[36], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 7 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[37], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 8 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[38], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 9 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[39], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 0 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[38], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 1 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[39], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 2 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[36], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 3 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[37], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 4 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[34], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 5 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[35], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 6 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[32], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 7 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[33], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 8 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[62], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 4 9 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[63], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 0 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[60], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 1 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[61], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 2 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[58], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 3 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[59], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 4 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[56], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 5 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[57], k__pOne_mOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 6 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[56], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 7 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[57], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 8 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[58], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 5 9 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[59], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 6 0 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[60], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 6 1 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[61], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 6 2 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[62], kOne)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 6 3 ] =)",
    "insertText": "_mm_madd_epi16(lstep1[63], kOne)"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (} { sign [ 0 ] =)",
    "insertText": "_mm_cmpgt_epi16(kZero, step2[8])"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (sign [ 1 ] =)",
    "insertText": "_mm_cmpgt_epi16(kZero, step2[9])"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (sign [ 2 ] =)",
    "insertText": "_mm_cmpgt_epi16(kZero, step2[14])"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (sign [ 3 ] =)",
    "insertText": "_mm_cmpgt_epi16(kZero, step2[15])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 6 ] =)",
    "insertText": "_mm_unpacklo_epi16(step2[8], sign[0])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 7 ] =)",
    "insertText": "_mm_unpackhi_epi16(step2[8], sign[0])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 8 ] =)",
    "insertText": "_mm_unpacklo_epi16(step2[9], sign[1])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 9 ] =)",
    "insertText": "_mm_unpackhi_epi16(step2[9], sign[1])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 2 8 ] =)",
    "insertText": "_mm_unpacklo_epi16(step2[14], sign[2])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 2 9 ] =)",
    "insertText": "_mm_unpackhi_epi16(step2[14], sign[2])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 3 0 ] =)",
    "insertText": "_mm_unpacklo_epi16(step2[15], sign[3])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 3 1 ] =)",
    "insertText": "_mm_unpackhi_epi16(step2[15], sign[3])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 0 ] =)",
    "insertText": "_mm_add_epi32(lstep3[6], lstep3[0])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 1 ] =)",
    "insertText": "_mm_add_epi32(lstep3[7], lstep3[1])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 ] =)",
    "insertText": "_mm_add_epi32(lstep3[4], lstep3[2])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 ] =)",
    "insertText": "_mm_add_epi32(lstep3[5], lstep3[3])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[2], lstep3[4])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[3], lstep3[5])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 6 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[0], lstep3[6])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 7 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[1], lstep3[7])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 1 6 ] =)",
    "insertText": "_mm_add_epi32(lstep3[22], lstep2[16])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 1 7 ] =)",
    "insertText": "_mm_add_epi32(lstep3[23], lstep2[17])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 1 8 ] =)",
    "insertText": "_mm_add_epi32(lstep3[20], lstep2[18])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 1 9 ] =)",
    "insertText": "_mm_add_epi32(lstep3[21], lstep2[19])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 0 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[18], lstep3[20])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 1 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[19], lstep3[21])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 2 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[16], lstep3[22])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 3 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[17], lstep3[23])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 4 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[30], lstep3[24])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 5 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[31], lstep3[25])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 6 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[28], lstep3[26])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 7 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[29], lstep3[27])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 8 ] =)",
    "insertText": "_mm_add_epi32(lstep3[26], lstep2[28])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 2 9 ] =)",
    "insertText": "_mm_add_epi32(lstep3[27], lstep2[29])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 0 ] =)",
    "insertText": "_mm_add_epi32(lstep3[24], lstep2[30])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 1 ] =)",
    "insertText": "_mm_add_epi32(lstep3[25], lstep2[31])"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (} { const __m128i k32_p16_p16 =)",
    "insertText": "pair_set_epi32(cospi_16_64, cospi_16_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p16_m16 =)",
    "insertText": "pair_set_epi32(cospi_16_64, -cospi_16_64)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[12], lstep3[10])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[12], lstep3[10])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[13], lstep3[11])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[13], lstep3[11])"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 0 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_p16_m16)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_p16_m16)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_p16_m16)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_p16_m16)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 4 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_p16_p16)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 5 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_p16_p16)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 6 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_p16_p16)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 7 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_p16_p16)"
  },
  {
    "label": "k_check_epi32_overflow_8()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "k_check_epi32_overflow_8(&v[0], &v[1], &v[2], &v[3], &v[4], &v[5], &v[6], &v[7], &kZero)"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "k_packs_epi64(v[2], v[3])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "k_packs_epi64(v[4], v[5])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "k_packs_epi64(v[6], v[7])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 0 ] =)",
    "insertText": "_mm_add_epi32(u[0], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 ] =)",
    "insertText": "_mm_add_epi32(u[1], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 ] =)",
    "insertText": "_mm_add_epi32(u[2], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 ] =)",
    "insertText": "_mm_add_epi32(u[3], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 1 0 ] =)",
    "insertText": "_mm_srai_epi32(v[0], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 1 1 ] =)",
    "insertText": "_mm_srai_epi32(v[1], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 1 2 ] =)",
    "insertText": "_mm_srai_epi32(v[2], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 1 3 ] =)",
    "insertText": "_mm_srai_epi32(v[3], DCT_CONST_BITS)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (} { const __m128i k32_m08_p24 =)",
    "insertText": "pair_set_epi32(-cospi_8_64, cospi_24_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m24_m08 =)",
    "insertText": "pair_set_epi32(-cospi_24_64, -cospi_8_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p24_p08 =)",
    "insertText": "pair_set_epi32(cospi_24_64, cospi_8_64)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[36], lstep3[58])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[36], lstep3[58])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[37], lstep3[59])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[37], lstep3[59])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[38], lstep3[56])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[38], lstep3[56])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[39], lstep3[57])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[39], lstep3[57])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 8 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[40], lstep3[54])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 9 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[40], lstep3[54])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[41], lstep3[55])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[41], lstep3[55])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[42], lstep3[52])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[42], lstep3[52])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[43], lstep3[53])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[43], lstep3[53])"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 0 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 8 ] =)",
    "insertText": "k_madd_epi32(u[8], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 9 ] =)",
    "insertText": "k_madd_epi32(u[9], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 0 ] =)",
    "insertText": "k_madd_epi32(u[10], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 1 ] =)",
    "insertText": "k_madd_epi32(u[11], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 2 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 3 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 4 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 5 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 6 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 7 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 8 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 9 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 0 ] =)",
    "insertText": "k_madd_epi32(u[8], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 1 ] =)",
    "insertText": "k_madd_epi32(u[9], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 2 ] =)",
    "insertText": "k_madd_epi32(u[10], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 3 ] =)",
    "insertText": "k_madd_epi32(u[11], k32_m08_p24)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_p24_p08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_p24_p08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_p24_p08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_p24_p08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 8 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_p24_p08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 9 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_p24_p08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 0 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_p24_p08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 1 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_p24_p08)"
  },
  {
    "label": "k_check_epi32_overflow_32()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "k_check_epi32_overflow_32(&v[0], &v[1], &v[2], &v[3], &v[4], &v[5], &v[6], &v[7], &v[8], &v[9], &v[10], &v[11], &v[12], &v[13], &v[14], &v[15], &v[16], &v[17], &v[18], &v[19], &v[20], &v[21], &v[22], &v[23], &v[24], &v[25], &v[26], &v[27], &v[28], &v[29], &v[30], &v[31], &kZero)"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "k_packs_epi64(v[8], v[9])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "k_packs_epi64(v[10], v[11])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "k_packs_epi64(v[12], v[13])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "k_packs_epi64(v[14], v[15])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 8 ] =)",
    "insertText": "k_packs_epi64(v[16], v[17])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 9 ] =)",
    "insertText": "k_packs_epi64(v[18], v[19])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 1 0 ] =)",
    "insertText": "k_packs_epi64(v[20], v[21])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 1 1 ] =)",
    "insertText": "k_packs_epi64(v[22], v[23])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 1 2 ] =)",
    "insertText": "k_packs_epi64(v[24], v[25])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 1 3 ] =)",
    "insertText": "k_packs_epi64(v[26], v[27])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 1 4 ] =)",
    "insertText": "k_packs_epi64(v[28], v[29])"
  },
  {
    "label": "k_packs_epi64()",
    "kind": "Method",
    "detail": "Function (u [ 1 5 ] =)",
    "insertText": "k_packs_epi64(v[30], v[31])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 4 ] =)",
    "insertText": "_mm_add_epi32(u[4], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 5 ] =)",
    "insertText": "_mm_add_epi32(u[5], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 6 ] =)",
    "insertText": "_mm_add_epi32(u[6], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 7 ] =)",
    "insertText": "_mm_add_epi32(u[7], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 8 ] =)",
    "insertText": "_mm_add_epi32(u[8], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 9 ] =)",
    "insertText": "_mm_add_epi32(u[9], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 0 ] =)",
    "insertText": "_mm_add_epi32(u[10], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 1 ] =)",
    "insertText": "_mm_add_epi32(u[11], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 2 ] =)",
    "insertText": "_mm_add_epi32(u[12], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 3 ] =)",
    "insertText": "_mm_add_epi32(u[13], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 4 ] =)",
    "insertText": "_mm_add_epi32(u[14], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 5 ] =)",
    "insertText": "_mm_add_epi32(u[15], k__DCT_CONST_ROUNDING)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 0 ] =)",
    "insertText": "_mm_srai_epi32(v[4], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 1 ] =)",
    "insertText": "_mm_srai_epi32(v[5], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 2 ] =)",
    "insertText": "_mm_srai_epi32(v[6], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 3 ] =)",
    "insertText": "_mm_srai_epi32(v[7], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 2 ] =)",
    "insertText": "_mm_srai_epi32(v[8], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 3 ] =)",
    "insertText": "_mm_srai_epi32(v[9], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 4 ] =)",
    "insertText": "_mm_srai_epi32(v[10], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 5 ] =)",
    "insertText": "_mm_srai_epi32(v[11], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 6 ] =)",
    "insertText": "_mm_srai_epi32(v[12], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 7 ] =)",
    "insertText": "_mm_srai_epi32(v[13], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 8 ] =)",
    "insertText": "_mm_srai_epi32(v[14], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 9 ] =)",
    "insertText": "_mm_srai_epi32(v[15], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (} { lstep2 [ 8 ] =)",
    "insertText": "_mm_add_epi32(lstep1[10], lstep3[8])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 9 ] =)",
    "insertText": "_mm_add_epi32(lstep1[11], lstep3[9])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 0 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[8], lstep1[10])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 1 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[9], lstep1[11])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 2 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[14], lstep1[12])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 3 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[15], lstep1[13])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 4 ] =)",
    "insertText": "_mm_add_epi32(lstep1[12], lstep3[14])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 5 ] =)",
    "insertText": "_mm_add_epi32(lstep1[13], lstep3[15])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[0], lstep1[2])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[0], lstep1[2])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[1], lstep1[3])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[1], lstep1[3])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[4], lstep1[6])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[4], lstep1[6])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[5], lstep1[7])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[5], lstep1[7])"
  },
  {
    "label": "k_check_epi32_overflow_16()",
    "kind": "Method",
    "detail": "Function (# if DCT_HIGH_BIT_DEPTH overflow =)",
    "insertText": "k_check_epi32_overflow_16(&v[0], &v[1], &v[2], &v[3], &v[4], &v[5], &v[6], &v[7], &v[8], &v[9], &v[10], &v[11], &v[12], &v[13], &v[14], &v[15], &kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (sign [ 0 ] =)",
    "insertText": "_mm_cmplt_epi32(u[0], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (sign [ 1 ] =)",
    "insertText": "_mm_cmplt_epi32(u[1], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (sign [ 2 ] =)",
    "insertText": "_mm_cmplt_epi32(u[2], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (sign [ 3 ] =)",
    "insertText": "_mm_cmplt_epi32(u[3], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (sign [ 4 ] =)",
    "insertText": "_mm_cmplt_epi32(u[4], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (sign [ 5 ] =)",
    "insertText": "_mm_cmplt_epi32(u[5], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (sign [ 6 ] =)",
    "insertText": "_mm_cmplt_epi32(u[6], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (sign [ 7 ] =)",
    "insertText": "_mm_cmplt_epi32(u[7], kZero)"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_sub_epi32(u[0], sign[0])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_sub_epi32(u[1], sign[1])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_sub_epi32(u[2], sign[2])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_sub_epi32(u[3], sign[3])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_sub_epi32(u[4], sign[4])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_sub_epi32(u[5], sign[5])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_sub_epi32(u[6], sign[6])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_sub_epi32(u[7], sign[7])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_add_epi32(u[0], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_add_epi32(u[1], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_add_epi32(u[2], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_add_epi32(u[3], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_add_epi32(u[4], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_add_epi32(u[5], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_add_epi32(u[6], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_add_epi32(u[7], K32One)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_srai_epi32(u[0], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_srai_epi32(u[1], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_srai_epi32(u[2], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_srai_epi32(u[3], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_srai_epi32(u[4], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_srai_epi32(u[5], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_srai_epi32(u[6], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_srai_epi32(u[7], 2)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_packs_epi32(u[0], u[1])"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 6 ] =)",
    "insertText": "_mm_packs_epi32(u[2], u[3])"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 8 ] =)",
    "insertText": "_mm_packs_epi32(u[4], u[5])"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 4 ] =)",
    "insertText": "_mm_packs_epi32(u[6], u[7])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[18], lstep1[28])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[18], lstep1[28])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[19], lstep1[29])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[19], lstep1[29])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[20], lstep1[26])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[20], lstep1[26])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[21], lstep1[27])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[21], lstep1[27])"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_m24_m08)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_m24_m08)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 8 ] =)",
    "insertText": "_mm_srai_epi32(u[0], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 1 9 ] =)",
    "insertText": "_mm_srai_epi32(u[1], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 2 0 ] =)",
    "insertText": "_mm_srai_epi32(u[2], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 2 1 ] =)",
    "insertText": "_mm_srai_epi32(u[3], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 2 6 ] =)",
    "insertText": "_mm_srai_epi32(u[4], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 2 7 ] =)",
    "insertText": "_mm_srai_epi32(u[5], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 2 8 ] =)",
    "insertText": "_mm_srai_epi32(u[6], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 2 9 ] =)",
    "insertText": "_mm_srai_epi32(u[7], DCT_CONST_BITS)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (} { lstep2 [ 3 2 ] =)",
    "insertText": "_mm_add_epi32(lstep1[38], lstep3[32])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 3 3 ] =)",
    "insertText": "_mm_add_epi32(lstep1[39], lstep3[33])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 3 4 ] =)",
    "insertText": "_mm_add_epi32(lstep1[36], lstep3[34])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 3 5 ] =)",
    "insertText": "_mm_add_epi32(lstep1[37], lstep3[35])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 3 6 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[34], lstep1[36])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 3 7 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[35], lstep1[37])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 3 8 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[32], lstep1[38])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 3 9 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[33], lstep1[39])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 0 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[46], lstep1[40])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 1 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[47], lstep1[41])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 2 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[44], lstep1[42])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 3 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[45], lstep1[43])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 4 ] =)",
    "insertText": "_mm_add_epi32(lstep1[42], lstep3[44])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 5 ] =)",
    "insertText": "_mm_add_epi32(lstep1[43], lstep3[45])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 6 ] =)",
    "insertText": "_mm_add_epi32(lstep1[40], lstep3[46])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 7 ] =)",
    "insertText": "_mm_add_epi32(lstep1[41], lstep3[47])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 8 ] =)",
    "insertText": "_mm_add_epi32(lstep1[54], lstep3[48])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 4 9 ] =)",
    "insertText": "_mm_add_epi32(lstep1[55], lstep3[49])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 0 ] =)",
    "insertText": "_mm_add_epi32(lstep1[52], lstep3[50])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 1 ] =)",
    "insertText": "_mm_add_epi32(lstep1[53], lstep3[51])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 2 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[50], lstep1[52])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 3 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[51], lstep1[53])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 4 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[48], lstep1[54])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 5 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[49], lstep1[55])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 6 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[62], lstep1[56])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 7 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[63], lstep1[57])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 8 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[60], lstep1[58])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 5 9 ] =)",
    "insertText": "_mm_sub_epi32(lstep3[61], lstep1[59])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 6 0 ] =)",
    "insertText": "_mm_add_epi32(lstep1[58], lstep3[60])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 6 1 ] =)",
    "insertText": "_mm_add_epi32(lstep1[59], lstep3[61])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 6 2 ] =)",
    "insertText": "_mm_add_epi32(lstep1[56], lstep3[62])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep2 [ 6 3 ] =)",
    "insertText": "_mm_add_epi32(lstep1[57], lstep3[63])"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (} { const __m128i k32_p28_p04 =)",
    "insertText": "pair_set_epi32(cospi_28_64, cospi_4_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p12_p20 =)",
    "insertText": "pair_set_epi32(cospi_12_64, cospi_20_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m20_p12 =)",
    "insertText": "pair_set_epi32(-cospi_20_64, cospi_12_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m04_p28 =)",
    "insertText": "pair_set_epi32(-cospi_4_64, cospi_28_64)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[8], lstep2[14])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[8], lstep2[14])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[9], lstep2[15])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[9], lstep2[15])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[10], lstep2[12])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[10], lstep2[12])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[11], lstep2[13])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[11], lstep2[13])"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 0 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_p28_p04)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_p28_p04)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_p28_p04)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_p28_p04)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_p12_p20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_p12_p20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_p12_p20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_p12_p20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 8 ] =)",
    "insertText": "k_madd_epi32(u[8], k32_m20_p12)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 9 ] =)",
    "insertText": "k_madd_epi32(u[9], k32_m20_p12)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 0 ] =)",
    "insertText": "k_madd_epi32(u[10], k32_m20_p12)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 1 ] =)",
    "insertText": "k_madd_epi32(u[11], k32_m20_p12)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 2 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_m04_p28)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 3 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_m04_p28)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 4 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_m04_p28)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 5 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_m04_p28)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 1 7 ] =)",
    "insertText": "_mm_add_epi32(lstep2[19], lstep1[17])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 1 8 ] =)",
    "insertText": "_mm_sub_epi32(lstep1[16], lstep2[18])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 1 9 ] =)",
    "insertText": "_mm_sub_epi32(lstep1[17], lstep2[19])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 0 ] =)",
    "insertText": "_mm_sub_epi32(lstep1[22], lstep2[20])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 1 ] =)",
    "insertText": "_mm_sub_epi32(lstep1[23], lstep2[21])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 2 ] =)",
    "insertText": "_mm_add_epi32(lstep2[20], lstep1[22])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 3 ] =)",
    "insertText": "_mm_add_epi32(lstep2[21], lstep1[23])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 4 ] =)",
    "insertText": "_mm_add_epi32(lstep2[26], lstep1[24])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 5 ] =)",
    "insertText": "_mm_add_epi32(lstep2[27], lstep1[25])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 6 ] =)",
    "insertText": "_mm_sub_epi32(lstep1[24], lstep2[26])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 7 ] =)",
    "insertText": "_mm_sub_epi32(lstep1[25], lstep2[27])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 8 ] =)",
    "insertText": "_mm_sub_epi32(lstep1[30], lstep2[28])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 2 9 ] =)",
    "insertText": "_mm_sub_epi32(lstep1[31], lstep2[29])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 0 ] =)",
    "insertText": "_mm_add_epi32(lstep2[28], lstep1[30])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep3 [ 3 1 ] =)",
    "insertText": "_mm_add_epi32(lstep2[29], lstep1[31])"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m28_m04 =)",
    "insertText": "pair_set_epi32(-cospi_28_64, -cospi_4_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m12_m20 =)",
    "insertText": "pair_set_epi32(-cospi_12_64, -cospi_20_64)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[34], lstep2[60])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[34], lstep2[60])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[35], lstep2[61])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[35], lstep2[61])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[36], lstep2[58])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[36], lstep2[58])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[37], lstep2[59])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[37], lstep2[59])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 8 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[42], lstep2[52])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 9 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[42], lstep2[52])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[43], lstep2[53])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[43], lstep2[53])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[44], lstep2[50])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[44], lstep2[50])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep2[45], lstep2[51])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep2[45], lstep2[51])"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 0 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_m04_p28)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_m04_p28)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_m04_p28)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_m04_p28)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_m28_m04)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_m28_m04)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_m28_m04)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_m28_m04)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 2 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_m12_m20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 3 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_m12_m20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 4 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_m12_m20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 5 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_m12_m20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 6 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_m20_p12)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 7 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_m20_p12)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 8 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_m20_p12)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 9 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_m20_p12)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 0 ] =)",
    "insertText": "k_madd_epi32(u[8], k32_p12_p20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 1 ] =)",
    "insertText": "k_madd_epi32(u[9], k32_p12_p20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 2 ] =)",
    "insertText": "k_madd_epi32(u[10], k32_p12_p20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 3 ] =)",
    "insertText": "k_madd_epi32(u[11], k32_p12_p20)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_m04_p28)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_m04_p28)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_m04_p28)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_m04_p28)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (} { const __m128i k32_p30_p02 =)",
    "insertText": "pair_set_epi32(cospi_30_64, cospi_2_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p14_p18 =)",
    "insertText": "pair_set_epi32(cospi_14_64, cospi_18_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p22_p10 =)",
    "insertText": "pair_set_epi32(cospi_22_64, cospi_10_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p06_p26 =)",
    "insertText": "pair_set_epi32(cospi_6_64, cospi_26_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m26_p06 =)",
    "insertText": "pair_set_epi32(-cospi_26_64, cospi_6_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m10_p22 =)",
    "insertText": "pair_set_epi32(-cospi_10_64, cospi_22_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m18_p14 =)",
    "insertText": "pair_set_epi32(-cospi_18_64, cospi_14_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m02_p30 =)",
    "insertText": "pair_set_epi32(-cospi_2_64, cospi_30_64)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[16], lstep3[30])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[16], lstep3[30])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[17], lstep3[31])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[17], lstep3[31])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[18], lstep3[28])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[18], lstep3[28])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[19], lstep3[29])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[19], lstep3[29])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 8 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[20], lstep3[26])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 9 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[20], lstep3[26])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[21], lstep3[27])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[21], lstep3[27])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[22], lstep3[24])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[22], lstep3[24])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep3[23], lstep3[25])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep3[23], lstep3[25])"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 0 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_p30_p02)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_p30_p02)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_p30_p02)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_p30_p02)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_p14_p18)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_p14_p18)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_p14_p18)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_p14_p18)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 8 ] =)",
    "insertText": "k_madd_epi32(u[8], k32_p22_p10)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 9 ] =)",
    "insertText": "k_madd_epi32(u[9], k32_p22_p10)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 0 ] =)",
    "insertText": "k_madd_epi32(u[10], k32_p22_p10)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 1 ] =)",
    "insertText": "k_madd_epi32(u[11], k32_p22_p10)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 2 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_p06_p26)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 3 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_p06_p26)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 4 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_p06_p26)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 5 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_p06_p26)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 6 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_m26_p06)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 7 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_m26_p06)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 8 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_m26_p06)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 9 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_m26_p06)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 0 ] =)",
    "insertText": "k_madd_epi32(u[8], k32_m10_p22)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 1 ] =)",
    "insertText": "k_madd_epi32(u[9], k32_m10_p22)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 2 ] =)",
    "insertText": "k_madd_epi32(u[10], k32_m10_p22)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 3 ] =)",
    "insertText": "k_madd_epi32(u[11], k32_m10_p22)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_m18_p14)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_m18_p14)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_m18_p14)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_m18_p14)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 8 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_m02_p30)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 9 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_m02_p30)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 0 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_m02_p30)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 1 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_m02_p30)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 8 ] =)",
    "insertText": "_mm_cmplt_epi32(u[8], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 9 ] =)",
    "insertText": "_mm_cmplt_epi32(u[9], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 0 ] =)",
    "insertText": "_mm_cmplt_epi32(u[10], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 1 ] =)",
    "insertText": "_mm_cmplt_epi32(u[11], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 2 ] =)",
    "insertText": "_mm_cmplt_epi32(u[12], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 3 ] =)",
    "insertText": "_mm_cmplt_epi32(u[13], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 4 ] =)",
    "insertText": "_mm_cmplt_epi32(u[14], kZero)"
  },
  {
    "label": "_mm_cmplt_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 5 ] =)",
    "insertText": "_mm_cmplt_epi32(u[15], kZero)"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_sub_epi32(u[0], v[0])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_sub_epi32(u[1], v[1])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_sub_epi32(u[2], v[2])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_sub_epi32(u[3], v[3])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_sub_epi32(u[4], v[4])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_sub_epi32(u[5], v[5])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_sub_epi32(u[6], v[6])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_sub_epi32(u[7], v[7])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 8 ] =)",
    "insertText": "_mm_sub_epi32(u[8], v[8])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 9 ] =)",
    "insertText": "_mm_sub_epi32(u[9], v[9])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 0 ] =)",
    "insertText": "_mm_sub_epi32(u[10], v[10])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 1 ] =)",
    "insertText": "_mm_sub_epi32(u[11], v[11])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 2 ] =)",
    "insertText": "_mm_sub_epi32(u[12], v[12])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 3 ] =)",
    "insertText": "_mm_sub_epi32(u[13], v[13])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 4 ] =)",
    "insertText": "_mm_sub_epi32(u[14], v[14])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 5 ] =)",
    "insertText": "_mm_sub_epi32(u[15], v[15])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 8 ] =)",
    "insertText": "_mm_add_epi32(u[8], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 9 ] =)",
    "insertText": "_mm_add_epi32(u[9], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 0 ] =)",
    "insertText": "_mm_add_epi32(u[10], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 1 ] =)",
    "insertText": "_mm_add_epi32(u[11], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 2 ] =)",
    "insertText": "_mm_add_epi32(u[12], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 3 ] =)",
    "insertText": "_mm_add_epi32(u[13], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 4 ] =)",
    "insertText": "_mm_add_epi32(u[14], K32One)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 5 ] =)",
    "insertText": "_mm_add_epi32(u[15], K32One)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_srai_epi32(v[0], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_srai_epi32(v[1], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_srai_epi32(v[2], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_srai_epi32(v[3], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_srai_epi32(v[4], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_srai_epi32(v[5], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_srai_epi32(v[6], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_srai_epi32(v[7], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 8 ] =)",
    "insertText": "_mm_srai_epi32(v[8], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 9 ] =)",
    "insertText": "_mm_srai_epi32(v[9], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 0 ] =)",
    "insertText": "_mm_srai_epi32(v[10], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 1 ] =)",
    "insertText": "_mm_srai_epi32(v[11], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 2 ] =)",
    "insertText": "_mm_srai_epi32(v[12], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 3 ] =)",
    "insertText": "_mm_srai_epi32(v[13], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 4 ] =)",
    "insertText": "_mm_srai_epi32(v[14], 2)"
  },
  {
    "label": "_mm_srai_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 5 ] =)",
    "insertText": "_mm_srai_epi32(v[15], 2)"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 6 ] =)",
    "insertText": "_mm_packs_epi32(u[8], u[9])"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 2 2 ] =)",
    "insertText": "_mm_packs_epi32(u[10], u[11])"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 4 ] =)",
    "insertText": "_mm_packs_epi32(u[12], u[13])"
  },
  {
    "label": "_mm_packs_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 3 0 ] =)",
    "insertText": "_mm_packs_epi32(u[14], u[15])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 3 ] =)",
    "insertText": "_mm_add_epi32(lstep3[35], lstep2[33])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 4 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[32], lstep3[34])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 5 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[33], lstep3[35])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 6 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[38], lstep3[36])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 7 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[39], lstep3[37])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 8 ] =)",
    "insertText": "_mm_add_epi32(lstep3[36], lstep2[38])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 3 9 ] =)",
    "insertText": "_mm_add_epi32(lstep3[37], lstep2[39])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 0 ] =)",
    "insertText": "_mm_add_epi32(lstep3[42], lstep2[40])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 1 ] =)",
    "insertText": "_mm_add_epi32(lstep3[43], lstep2[41])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 2 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[40], lstep3[42])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 3 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[41], lstep3[43])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 4 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[46], lstep3[44])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 5 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[47], lstep3[45])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 6 ] =)",
    "insertText": "_mm_add_epi32(lstep3[44], lstep2[46])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 7 ] =)",
    "insertText": "_mm_add_epi32(lstep3[45], lstep2[47])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 8 ] =)",
    "insertText": "_mm_add_epi32(lstep3[50], lstep2[48])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 4 9 ] =)",
    "insertText": "_mm_add_epi32(lstep3[51], lstep2[49])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 0 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[48], lstep3[50])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 1 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[49], lstep3[51])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 2 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[54], lstep3[52])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 3 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[55], lstep3[53])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 4 ] =)",
    "insertText": "_mm_add_epi32(lstep3[52], lstep2[54])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 5 ] =)",
    "insertText": "_mm_add_epi32(lstep3[53], lstep2[55])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 6 ] =)",
    "insertText": "_mm_add_epi32(lstep3[58], lstep2[56])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 7 ] =)",
    "insertText": "_mm_add_epi32(lstep3[59], lstep2[57])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 8 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[56], lstep3[58])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 5 9 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[57], lstep3[59])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 6 0 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[62], lstep3[60])"
  },
  {
    "label": "_mm_sub_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 6 1 ] =)",
    "insertText": "_mm_sub_epi32(lstep2[63], lstep3[61])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 6 2 ] =)",
    "insertText": "_mm_add_epi32(lstep3[60], lstep2[62])"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (lstep1 [ 6 3 ] =)",
    "insertText": "_mm_add_epi32(lstep3[61], lstep2[63])"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (} { const __m128i k32_p31_p01 =)",
    "insertText": "pair_set_epi32(cospi_31_64, cospi_1_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p15_p17 =)",
    "insertText": "pair_set_epi32(cospi_15_64, cospi_17_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p23_p09 =)",
    "insertText": "pair_set_epi32(cospi_23_64, cospi_9_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p07_p25 =)",
    "insertText": "pair_set_epi32(cospi_7_64, cospi_25_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m25_p07 =)",
    "insertText": "pair_set_epi32(-cospi_25_64, cospi_7_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m09_p23 =)",
    "insertText": "pair_set_epi32(-cospi_9_64, cospi_23_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m17_p15 =)",
    "insertText": "pair_set_epi32(-cospi_17_64, cospi_15_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m01_p31 =)",
    "insertText": "pair_set_epi32(-cospi_1_64, cospi_31_64)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[32], lstep1[62])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[32], lstep1[62])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[33], lstep1[63])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[33], lstep1[63])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[34], lstep1[60])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[34], lstep1[60])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[35], lstep1[61])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[35], lstep1[61])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 8 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[36], lstep1[58])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 9 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[36], lstep1[58])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[37], lstep1[59])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[37], lstep1[59])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[38], lstep1[56])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[38], lstep1[56])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[39], lstep1[57])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[39], lstep1[57])"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 0 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_p31_p01)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_p31_p01)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_p31_p01)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_p31_p01)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_p15_p17)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_p15_p17)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_p15_p17)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_p15_p17)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 8 ] =)",
    "insertText": "k_madd_epi32(u[8], k32_p23_p09)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 9 ] =)",
    "insertText": "k_madd_epi32(u[9], k32_p23_p09)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 0 ] =)",
    "insertText": "k_madd_epi32(u[10], k32_p23_p09)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 1 ] =)",
    "insertText": "k_madd_epi32(u[11], k32_p23_p09)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 2 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_p07_p25)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 3 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_p07_p25)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 4 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_p07_p25)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 5 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_p07_p25)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 6 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_m25_p07)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 7 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_m25_p07)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 8 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_m25_p07)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 9 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_m25_p07)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 0 ] =)",
    "insertText": "k_madd_epi32(u[8], k32_m09_p23)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 1 ] =)",
    "insertText": "k_madd_epi32(u[9], k32_m09_p23)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 2 ] =)",
    "insertText": "k_madd_epi32(u[10], k32_m09_p23)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 3 ] =)",
    "insertText": "k_madd_epi32(u[11], k32_m09_p23)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_m17_p15)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_m17_p15)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_m17_p15)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_m17_p15)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 8 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_m01_p31)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 9 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_m01_p31)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 0 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_m01_p31)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 1 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_m01_p31)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p11_p21 =)",
    "insertText": "pair_set_epi32(cospi_11_64, cospi_21_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p19_p13 =)",
    "insertText": "pair_set_epi32(cospi_19_64, cospi_13_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_p03_p29 =)",
    "insertText": "pair_set_epi32(cospi_3_64, cospi_29_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m29_p03 =)",
    "insertText": "pair_set_epi32(-cospi_29_64, cospi_3_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m13_p19 =)",
    "insertText": "pair_set_epi32(-cospi_13_64, cospi_19_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m21_p11 =)",
    "insertText": "pair_set_epi32(-cospi_21_64, cospi_11_64)"
  },
  {
    "label": "pair_set_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i k32_m05_p27 =)",
    "insertText": "pair_set_epi32(-cospi_5_64, cospi_27_64)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[40], lstep1[54])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[40], lstep1[54])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[41], lstep1[55])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[41], lstep1[55])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[42], lstep1[52])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[42], lstep1[52])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[43], lstep1[53])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[43], lstep1[53])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 8 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[44], lstep1[50])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 9 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[44], lstep1[50])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[45], lstep1[51])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[45], lstep1[51])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 2 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[46], lstep1[48])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 3 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[46], lstep1[48])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 4 ] =)",
    "insertText": "_mm_unpacklo_epi32(lstep1[47], lstep1[49])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (u [ 1 5 ] =)",
    "insertText": "_mm_unpackhi_epi32(lstep1[47], lstep1[49])"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 0 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_p27_p05)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_p27_p05)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_p27_p05)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_p27_p05)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_p11_p21)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_p11_p21)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_p11_p21)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_p11_p21)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 8 ] =)",
    "insertText": "k_madd_epi32(u[8], k32_p19_p13)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 9 ] =)",
    "insertText": "k_madd_epi32(u[9], k32_p19_p13)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 0 ] =)",
    "insertText": "k_madd_epi32(u[10], k32_p19_p13)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 1 ] =)",
    "insertText": "k_madd_epi32(u[11], k32_p19_p13)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 2 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_p03_p29)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 3 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_p03_p29)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 4 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_p03_p29)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 5 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_p03_p29)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 6 ] =)",
    "insertText": "k_madd_epi32(u[12], k32_m29_p03)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 7 ] =)",
    "insertText": "k_madd_epi32(u[13], k32_m29_p03)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 8 ] =)",
    "insertText": "k_madd_epi32(u[14], k32_m29_p03)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 1 9 ] =)",
    "insertText": "k_madd_epi32(u[15], k32_m29_p03)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 0 ] =)",
    "insertText": "k_madd_epi32(u[8], k32_m13_p19)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 1 ] =)",
    "insertText": "k_madd_epi32(u[9], k32_m13_p19)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 2 ] =)",
    "insertText": "k_madd_epi32(u[10], k32_m13_p19)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 3 ] =)",
    "insertText": "k_madd_epi32(u[11], k32_m13_p19)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 4 ] =)",
    "insertText": "k_madd_epi32(u[4], k32_m21_p11)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 5 ] =)",
    "insertText": "k_madd_epi32(u[5], k32_m21_p11)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 6 ] =)",
    "insertText": "k_madd_epi32(u[6], k32_m21_p11)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 7 ] =)",
    "insertText": "k_madd_epi32(u[7], k32_m21_p11)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 8 ] =)",
    "insertText": "k_madd_epi32(u[0], k32_m05_p27)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 2 9 ] =)",
    "insertText": "k_madd_epi32(u[1], k32_m05_p27)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 0 ] =)",
    "insertText": "k_madd_epi32(u[2], k32_m05_p27)"
  },
  {
    "label": "k_madd_epi32()",
    "kind": "Method",
    "detail": "Function (v [ 3 1 ] =)",
    "insertText": "k_madd_epi32(u[3], k32_m05_p27)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i* this_out =& out [ 8* transpose_block ] ; const __m128i tr0_0 =)",
    "insertText": "_mm_unpacklo_epi16(this_out[0], this_out[1])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_1 =)",
    "insertText": "_mm_unpacklo_epi16(this_out[2], this_out[3])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_2 =)",
    "insertText": "_mm_unpackhi_epi16(this_out[0], this_out[1])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_3 =)",
    "insertText": "_mm_unpackhi_epi16(this_out[2], this_out[3])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_4 =)",
    "insertText": "_mm_unpacklo_epi16(this_out[4], this_out[5])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_5 =)",
    "insertText": "_mm_unpacklo_epi16(this_out[6], this_out[7])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_6 =)",
    "insertText": "_mm_unpackhi_epi16(this_out[4], this_out[5])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i tr0_7 =)",
    "insertText": "_mm_unpackhi_epi16(this_out[6], this_out[7])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_0 =)",
    "insertText": "_mm_unpacklo_epi32(tr0_0, tr0_1)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_1 =)",
    "insertText": "_mm_unpacklo_epi32(tr0_2, tr0_3)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_2 =)",
    "insertText": "_mm_unpackhi_epi32(tr0_0, tr0_1)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_3 =)",
    "insertText": "_mm_unpackhi_epi32(tr0_2, tr0_3)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_4 =)",
    "insertText": "_mm_unpacklo_epi32(tr0_4, tr0_5)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_5 =)",
    "insertText": "_mm_unpacklo_epi32(tr0_6, tr0_7)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_6 =)",
    "insertText": "_mm_unpackhi_epi32(tr0_4, tr0_5)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tr1_7 =)",
    "insertText": "_mm_unpackhi_epi32(tr0_6, tr0_7)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_0 =)",
    "insertText": "_mm_unpacklo_epi64(tr1_0, tr1_4)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_1 =)",
    "insertText": "_mm_unpackhi_epi64(tr1_0, tr1_4)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_2 =)",
    "insertText": "_mm_unpacklo_epi64(tr1_2, tr1_6)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_3 =)",
    "insertText": "_mm_unpackhi_epi64(tr1_2, tr1_6)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_4 =)",
    "insertText": "_mm_unpacklo_epi64(tr1_1, tr1_5)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_5 =)",
    "insertText": "_mm_unpackhi_epi64(tr1_1, tr1_5)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_6 =)",
    "insertText": "_mm_unpacklo_epi64(tr1_3, tr1_7)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_7 =)",
    "insertText": "_mm_unpackhi_epi64(tr1_3, tr1_7)"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_0_0 =)",
    "insertText": "_mm_cmpgt_epi16(tr2_0, kZero)"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_1_0 =)",
    "insertText": "_mm_cmpgt_epi16(tr2_1, kZero)"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_2_0 =)",
    "insertText": "_mm_cmpgt_epi16(tr2_2, kZero)"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_3_0 =)",
    "insertText": "_mm_cmpgt_epi16(tr2_3, kZero)"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_4_0 =)",
    "insertText": "_mm_cmpgt_epi16(tr2_4, kZero)"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_5_0 =)",
    "insertText": "_mm_cmpgt_epi16(tr2_5, kZero)"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_6_0 =)",
    "insertText": "_mm_cmpgt_epi16(tr2_6, kZero)"
  },
  {
    "label": "_mm_cmpgt_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i tr2_7_0 =)",
    "insertText": "_mm_cmpgt_epi16(tr2_7, kZero)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_0 =)",
    "insertText": "_mm_sub_epi16(tr2_0, tr2_0_0)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_1 =)",
    "insertText": "_mm_sub_epi16(tr2_1, tr2_1_0)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_2 =)",
    "insertText": "_mm_sub_epi16(tr2_2, tr2_2_0)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_3 =)",
    "insertText": "_mm_sub_epi16(tr2_3, tr2_3_0)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_4 =)",
    "insertText": "_mm_sub_epi16(tr2_4, tr2_4_0)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_5 =)",
    "insertText": "_mm_sub_epi16(tr2_5, tr2_5_0)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_6 =)",
    "insertText": "_mm_sub_epi16(tr2_6, tr2_6_0)"
  },
  {
    "label": "_mm_sub_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_7 =)",
    "insertText": "_mm_sub_epi16(tr2_7, tr2_7_0)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_0 =)",
    "insertText": "_mm_add_epi16(tr2_0, kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_1 =)",
    "insertText": "_mm_add_epi16(tr2_1, kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_2 =)",
    "insertText": "_mm_add_epi16(tr2_2, kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_3 =)",
    "insertText": "_mm_add_epi16(tr2_3, kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_4 =)",
    "insertText": "_mm_add_epi16(tr2_4, kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_5 =)",
    "insertText": "_mm_add_epi16(tr2_5, kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_6 =)",
    "insertText": "_mm_add_epi16(tr2_6, kOne)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_7 =)",
    "insertText": "_mm_add_epi16(tr2_7, kOne)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_0 =)",
    "insertText": "_mm_srai_epi16(tr2_0, 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_1 =)",
    "insertText": "_mm_srai_epi16(tr2_1, 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_2 =)",
    "insertText": "_mm_srai_epi16(tr2_2, 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_3 =)",
    "insertText": "_mm_srai_epi16(tr2_3, 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_4 =)",
    "insertText": "_mm_srai_epi16(tr2_4, 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_5 =)",
    "insertText": "_mm_srai_epi16(tr2_5, 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_6 =)",
    "insertText": "_mm_srai_epi16(tr2_6, 2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (tr2_7 =)",
    "insertText": "_mm_srai_epi16(tr2_7, 2)"
  },
  {
    "label": "_mm_storeu_si128()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm_storeu_si128((__m128i *)(output0 + 0 * 32), tr2_0)"
  },
  {
    "label": "_mm_storeu_si128()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm_storeu_si128((__m128i *)(output0 + 1 * 32), tr2_1)"
  },
  {
    "label": "_mm_storeu_si128()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm_storeu_si128((__m128i *)(output0 + 2 * 32), tr2_2)"
  },
  {
    "label": "_mm_storeu_si128()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm_storeu_si128((__m128i *)(output0 + 3 * 32), tr2_3)"
  },
  {
    "label": "_mm_storeu_si128()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm_storeu_si128((__m128i *)(output0 + 4 * 32), tr2_4)"
  },
  {
    "label": "_mm_storeu_si128()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm_storeu_si128((__m128i *)(output0 + 5 * 32), tr2_5)"
  },
  {
    "label": "_mm_storeu_si128()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm_storeu_si128((__m128i *)(output0 + 6 * 32), tr2_6)"
  },
  {
    "label": "_mm_storeu_si128()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mm_storeu_si128((__m128i *)(output0 + 7 * 32), tr2_7)"
  },
  {
    "label": "storeu_output()",
    "kind": "Method",
    "detail": "Function (output0 + = 8 ; } else {)",
    "insertText": "storeu_output(&tr2_0, (output1 + 0 * 32))"
  },
  {
    "label": "storeu_output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "storeu_output(&tr2_1, (output1 + 1 * 32))"
  },
  {
    "label": "storeu_output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "storeu_output(&tr2_2, (output1 + 2 * 32))"
  },
  {
    "label": "storeu_output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "storeu_output(&tr2_3, (output1 + 3 * 32))"
  },
  {
    "label": "storeu_output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "storeu_output(&tr2_4, (output1 + 4 * 32))"
  },
  {
    "label": "storeu_output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "storeu_output(&tr2_5, (output1 + 5 * 32))"
  },
  {
    "label": "storeu_output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "storeu_output(&tr2_6, (output1 + 6 * 32))"
  },
  {
    "label": "storeu_output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "storeu_output(&tr2_7, (output1 + 7 * 32))"
  }
]