[
  {
    "label": "FMeshDrawSingleShaderBindings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawSingleShaderBindings"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FMaterialShaderPermutationParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaderPermutationParameters"
  },
  {
    "label": "FMeshMaterialShaderPermutationParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshMaterialShaderPermutationParameters"
  },
  {
    "label": "FEmptyPrecomputedLightingUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmptyPrecomputedLightingUniformBuffer"
  },
  {
    "label": "FIndirectLightingCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIndirectLightingCache"
  },
  {
    "label": "FIndirectLightingCacheAllocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIndirectLightingCacheAllocation"
  },
  {
    "label": "FVolumetricLightmapSceneData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVolumetricLightmapSceneData"
  },
  {
    "label": "FEmptyIndirectLightingCacheUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmptyIndirectLightingCacheUniformBuffer"
  },
  {
    "label": "FNoLightMapPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNoLightMapPolicy"
  },
  {
    "label": "ELightmapQuality",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELightmapQuality"
  },
  {
    "label": "TLightMapPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TLightMapPolicy"
  },
  {
    "label": "TDistanceFieldShadowsAndLightMapPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TDistanceFieldShadowsAndLightMapPolicy"
  },
  {
    "label": "FDummyLightMapPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDummyLightMapPolicy"
  },
  {
    "label": "FSelfShadowedTranslucencyPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSelfShadowedTranslucencyPolicy"
  },
  {
    "label": "VertexParametersType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VertexParametersType"
  },
  {
    "label": "PixelParametersType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PixelParametersType"
  },
  {
    "label": "ComputeParametersType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ComputeParametersType"
  },
  {
    "label": "FPrecomputedVolumetricLightmapLightingPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrecomputedVolumetricLightmapLightingPolicy"
  },
  {
    "label": "FCachedVolumeIndirectLightingPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedVolumeIndirectLightingPolicy"
  },
  {
    "label": "FCachedPointIndirectLightingPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedPointIndirectLightingPolicy"
  },
  {
    "label": "FMobileDirectionalLightAndCSMPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMobileDirectionalLightAndCSMPolicy"
  },
  {
    "label": "FMobileDistanceFieldShadowsAndLQLightMapPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMobileDistanceFieldShadowsAndLQLightMapPolicy"
  },
  {
    "label": "FMobileDistanceFieldShadowsLightMapAndCSMLightingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMobileDistanceFieldShadowsLightMapAndCSMLightingPolicy"
  },
  {
    "label": "FMobileDirectionalLightCSMAndLightMapPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMobileDirectionalLightCSMAndLightMapPolicy"
  },
  {
    "label": "FMobileDirectionalLightAndSHIndirectPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMobileDirectionalLightAndSHIndirectPolicy"
  },
  {
    "label": "FMobileDirectionalLightCSMAndSHIndirectPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMobileDirectionalLightCSMAndSHIndirectPolicy"
  },
  {
    "label": "ELightMapPolicyType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELightMapPolicyType"
  },
  {
    "label": "FUniformLightMapPolicyShaderParametersType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformLightMapPolicyShaderParametersType"
  },
  {
    "label": "FUniformLightMapPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformLightMapPolicy"
  },
  {
    "label": "TUniformLightMapPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TUniformLightMapPolicy"
  },
  {
    "label": "FSelfShadowLightCacheElementData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSelfShadowLightCacheElementData"
  },
  {
    "label": "FSelfShadowedCachedPointIndirectLightingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSelfShadowedCachedPointIndirectLightingPolicy"
  },
  {
    "label": "PixelParametersType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PixelParametersType"
  },
  {
    "label": "ComputeParametersType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ComputeParametersType"
  },
  {
    "label": "FSelfShadowedVolumetricLightmapPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSelfShadowedVolumetricLightmapPolicy"
  },
  {
    "label": "PixelParametersType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PixelParametersType"
  },
  {
    "label": "ComputeParametersType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ComputeParametersType"
  },
  {
    "label": "MobileUsesNoLightMapPermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MobileUsesNoLightMapPermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "MobileUseCSMShaderBranch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MobileUseCSMShaderBranch()"
  },
  {
    "label": "GetIndirectLightingCacheParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetIndirectLightingCacheParameters(\n\tERHIFeatureLevel::Type FeatureLevel,\n\tFIndirectLightingCacheUniformParameters& Parameters,\n\tconst class FIndirectLightingCache* LightingCache,\n\tconst class FIndirectLightingCacheAllocation* LightingAllocation,\n\tFVector VolumetricLightmapLookupPosition,\n\tuint32 SceneFrameNumber,\n\tclass FVolumetricLightmapSceneData* VolumetricLightmapSceneData)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(ELightmapQuality LightmapQuality, const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(ELightmapQuality LightmapQuality, const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(ELightmapQuality LightmapQuality, const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "GetVertexShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexShaderBindings(\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst ElementDataType& ShaderElementData,\n\t\tconst VertexParametersType* VertexShaderParameters,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "GetPixelShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPixelShaderBindings(\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst ElementDataType& ShaderElementData,\n\t\tconst PixelParametersType* PixelShaderParameters,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "GetComputeShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetComputeShaderBindings(\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst ElementDataType& ShaderElementData,\n\t\tconst ComputeParametersType* ComputeShaderParameters,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(ELightMapPolicyType Policy, const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(ELightMapPolicyType Policy, const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "GetVertexShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexShaderBindings(\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst ElementDataType& ShaderElementData,\n\t\tconst VertexParametersType* VertexShaderParameters,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "GetPixelShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPixelShaderBindings(\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst ElementDataType& ShaderElementData,\n\t\tconst PixelParametersType* PixelShaderParameters,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "GetComputeShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetComputeShaderBindings(\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst ElementDataType& ShaderElementData,\n\t\tconst ComputeParametersType* PixelShaderParameters,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "GetPixelShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPixelShaderBindings(\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst ElementDataType& ShaderElementData,\n\t\tconst PixelParametersType* PixelShaderParameters,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "GetComputeShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetComputeShaderBindings(\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst ElementDataType& ShaderElementData,\n\t\tconst ComputeParametersType* ComputeShaderParameters,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "GetPixelShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPixelShaderBindings(\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst ElementDataType& ShaderElementData,\n\t\tconst PixelParametersType* PixelShaderParameters,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "GetComputeShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetComputeShaderBindings(\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst ElementDataType& ShaderElementData,\n\t\tconst ComputeParametersType* ComputeShaderParameters,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings)"
  }
]