[
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FSlateIcon",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateIcon"
  },
  {
    "label": "FUIAction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUIAction"
  },
  {
    "label": "FButtonArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FButtonArgs"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FMultiBoxBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMultiBoxBuilder"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FMultiBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMultiBox"
  },
  {
    "label": "FMultiBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMultiBox"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FMenuEntryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMenuEntryParams"
  },
  {
    "label": "FBaseMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseMenuBuilder"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FMenuBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBarBuilder"
  },
  {
    "label": "FToolBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolBarBuilder"
  },
  {
    "label": "UToolMenus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenus"
  },
  {
    "label": "FVerticalToolBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVerticalToolBarBuilder"
  },
  {
    "label": "FUniformToolBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformToolBarBuilder"
  },
  {
    "label": "FSlimHorizontalToolBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlimHorizontalToolBarBuilder"
  },
  {
    "label": "FButtonRowBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FButtonRowBuilder"
  },
  {
    "label": "FSlimHorizontalUniformToolBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlimHorizontalUniformToolBarBuilder"
  },
  {
    "label": "PushCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushCommandList( const TSharedRef< const FUICommandList > CommandList )"
  },
  {
    "label": "SetLastSelectedCommandIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastSelectedCommandIndex( int32 InLastSelectedCommandIndex )"
  },
  {
    "label": "PopCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopCommandList()"
  },
  {
    "label": "GetTopCommandList()",
    "kind": "Method",
    "detail": "Function (FUICommandList>)",
    "insertText": "GetTopCommandList()"
  },
  {
    "label": "PushExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushExtender( TSharedRef< FExtender > InExtender )"
  },
  {
    "label": "PopExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopExtender()"
  },
  {
    "label": "SetCheckBoxStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCheckBoxStyle(FName InCheckBoxStyle)"
  },
  {
    "label": "SetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStyle( const ISlateStyle* InStyleSet, const FName& InStyleName )"
  },
  {
    "label": "AddMenuEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMenuEntry( const FMenuEntryParams& InMenuEntryParams )"
  },
  {
    "label": "AddMenuSeparator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMenuSeparator(FName InExtensionHook = NAME_None)"
  },
  {
    "label": "AddSeparator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSeparator(FName InExtensionHook = NAME_None)"
  },
  {
    "label": "EndSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndSection()"
  },
  {
    "label": "AddSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubMenu( const TSharedRef< SWidget > Contents, const FNewMenuDelegate& InSubMenu, const bool bInOpenSubMenuOnClick = false, const bool bInShouldCloseWindowAfterMenuSelection = true )"
  },
  {
    "label": "AddSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubMenu( const FUIAction& UIAction, const TSharedRef< SWidget > Contents, const FNewMenuDelegate& InSubMenu, const bool bInShouldCloseWindowAfterMenuSelection = true )"
  },
  {
    "label": "AddSearchWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSearchWidget()"
  },
  {
    "label": "AddWrapperSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWrapperSubMenu( const FText& InMenuLabel, const FText& InToolTip, const FOnGetContent& InSubMenu, const FSlateIcon& InIcon )"
  },
  {
    "label": "AddWrapperSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWrapperSubMenu( const FText& InMenuLabel, const FText& InToolTip, const FOnGetContent& InSubMenu, const FSlateIcon& InIcon, const FUIAction& UIAction )"
  },
  {
    "label": "AddWrapperSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWrapperSubMenu( const FText& InMenuLabel, const FText& InToolTip, const TSharedPtr<SWidget>& InSubMenu, const FSlateIcon& InIcon )"
  },
  {
    "label": "AddPullDownMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPullDownMenu( const TAttribute<FText>& InMenuLabel, const TAttribute<FText>& InToolTip, const FNewMenuDelegate& InPullDownMenu, FName InExtensionHook = NAME_None, FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "AddPullDownMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPullDownMenu(const TAttribute<FText>& InMenuLabel, const TAttribute<FText>& InToolTip, const FOnGetContent& InMenuContentGenerator, FName InExtensionHook = NAME_None, FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "SetIsFocusable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsFocusable(bool bInIsFocusable)"
  },
  {
    "label": "AddToolBarButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToolBarButton(const FButtonArgs& ButtonArgs)"
  },
  {
    "label": "AddToolbarStackButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToolbarStackButton(const TSharedPtr< const FUICommandInfo > InCommand, FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "BeginSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginSection(FName InExtensionHook, bool bInSectionShouldHaveSeparator = true)"
  },
  {
    "label": "EndSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndSection()"
  },
  {
    "label": "BeginBlockGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginBlockGroup()"
  },
  {
    "label": "EndBlockGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndBlockGroup()"
  },
  {
    "label": "BeginStyleOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginStyleOverride(FName StyleOverrideName)"
  },
  {
    "label": "EndStyleOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndStyleOverride()"
  },
  {
    "label": "InitializeToolBarButtonBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeToolBarButtonBlock(TSharedPtr<FToolBarButtonBlock> ButtonRowBlock, const FButtonArgs& ButtonArgs)"
  },
  {
    "label": "FSlimHorizontalUniformToolBarBuilder()",
    "kind": "Method",
    "detail": "Function (SLATE_API)",
    "insertText": "FSlimHorizontalUniformToolBarBuilder(TSharedPtr<const FUICommandList> InCommandList, FMultiBoxCustomization InCustomization, TSharedPtr<FExtender> InExtender = nullptr, const bool InForceSmallIcons = false)"
  }
]