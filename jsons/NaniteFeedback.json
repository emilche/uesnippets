[
  {
    "label": "FFeedbackManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFeedbackManager"
  },
  {
    "label": "FBufferState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBufferState"
  },
  {
    "label": "FMaterialWarningItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialWarningItem"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GPUMessaging . h \" namespace Nanite { # if ! UE_BUILD_SHIPPING class FFeedbackManager { GPUMessage::FSocket StatusFeedbackSocket ; FDelegateHandle ScreenMessageDelegate ; struct FBufferState { double LatestOverflowTime = - MAX_dbl ; uint32 LatestOverflowPeak = 0 ; uint32 HighWaterMark = 0 ; bool)",
    "insertText": "Update(const uint32 Peak, const uint32 Capacity)"
  },
  {
    "label": "FFeedbackManager()",
    "kind": "Method",
    "detail": "Function (} ; FBufferState NodeState ; FBufferState CandidateClusterState ; FBufferState VisibleClusterState ; FCriticalSection DelgateCallbackCS ; struct FMaterialWarningItem { double LastTimeSeen = - MAX_dbl ; double LastTimeLogged = - MAX_dbl ; } ; TMap<FString,FMaterialWarningItem> MaterialWarningItems ; public :)",
    "insertText": "FFeedbackManager()"
  },
  {
    "label": "GetStatusMessageId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetStatusMessageId()"
  },
  {
    "label": "ReportMaterialPerformanceWarning()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReportMaterialPerformanceWarning(const FString& MaterialName)"
  },
  {
    "label": "ShouldReportFeedbackMaterialPerformanceWarning()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "ShouldReportFeedbackMaterialPerformanceWarning()"
  }
]