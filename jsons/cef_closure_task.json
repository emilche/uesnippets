[
  {
    "label": "CefCreateClosureTask()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_WRAPPER_CEF_CLOSURE_TASK_H_ # define CEF_INCLUDE_WRAPPER_CEF_CLOSURE_TASK_H_ # pragma once # include \" include / base / cef_callback_forward . h \" # include \" include / base / cef_macros . h \" # include \" include / cef_task . h \" CefRefPtr<CefTask>)",
    "insertText": "CefCreateClosureTask(base::OnceClosure closure)"
  },
  {
    "label": "CefCreateClosureTask()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefTask>)",
    "insertText": "CefCreateClosureTask(const base::RepeatingClosure& closure)"
  },
  {
    "label": "CefPostTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefPostTask(CefThreadId threadId, base::OnceClosure closure)"
  },
  {
    "label": "CefPostTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefPostTask(CefThreadId threadId, const base::RepeatingClosure& closure)"
  },
  {
    "label": "CefPostDelayedTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefPostDelayedTask(CefThreadId threadId, base::OnceClosure closure, int64 delay_ms)"
  },
  {
    "label": "CefPostDelayedTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefPostDelayedTask(CefThreadId threadId, const base::RepeatingClosure& closure, int64 delay_ms)"
  }
]