[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "SScaleBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScaleBox"
  },
  {
    "label": "SScaleBox()",
    "kind": "Method",
    "detail": "Function (SLATE_API)",
    "insertText": "SScaleBox()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(TSharedRef<SWidget> InContent)"
  },
  {
    "label": "SetHAlign()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHAlign(EHorizontalAlignment HAlign)"
  },
  {
    "label": "SetVAlign()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVAlign(EVerticalAlignment VAlign)"
  },
  {
    "label": "SetStretchDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStretchDirection(EStretchDirection::Type InStretchDirection)"
  },
  {
    "label": "SetStretch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStretch(EStretch::Type InStretch)"
  },
  {
    "label": "SetUserSpecifiedScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUserSpecifiedScale(float InUserSpecifiedScale)"
  },
  {
    "label": "SetIgnoreInheritedScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIgnoreInheritedScale(bool InIgnoreInheritedScale)"
  },
  {
    "label": "SetOverrideScreenInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOverrideScreenInformation(TOptional<FVector2D> InScreenSize)"
  },
  {
    "label": "RefreshSafeZoneScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSafeZoneScale()"
  },
  {
    "label": "HandleSafeFrameChangedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSafeFrameChangedEvent()"
  },
  {
    "label": "DebugSafeAreaUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugSafeAreaUpdated(const FMargin& NewSafeZone, bool bShouldRecacheMetrics)"
  }
]