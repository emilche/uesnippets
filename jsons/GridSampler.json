[
  {
    "label": "TGridSampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGridSampler"
  },
  {
    "label": "TGridSampler()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MathUtil . h \" # include \" VectorTypes . h \" namespace UE { namespace Geometry { template<RealType> class TGridSampler { private : int32 Size = 1 ; public :)",
    "insertText": "TGridSampler(int32 SizeIn) : Size(SizeIn)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Num()"
  },
  {
    "label": "X()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "X(static_cast<RealType>(Index % Size) + RealType{ 1 } / RealType{ 2 }) / static_cast<RealType>(Size)"
  },
  {
    "label": "Y()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Y(static_cast<RealType>(Index / Size) + RealType{ 1 } / RealType{ 2 }) / static_cast<RealType>(Size)"
  }
]