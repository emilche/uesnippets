[
  {
    "label": "DesktopFrameIOSurface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DesktopFrameIOSurface"
  },
  {
    "label": "Wrap()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_MAC_DESKTOP_FRAME_IOSURFACE_H_ # define MODULES_DESKTOP_CAPTURE_MAC_DESKTOP_FRAME_IOSURFACE_H_ # include<CoreGraphics / CoreGraphics . h> # include<IOSurface / IOSurface . h> # include<memory> # include \" modules / desktop_capture / desktop_frame . h \" # include \" sdk / objc / helpers / scoped_cftyperef . h \" namespace webrtc { class DesktopFrameIOSurface final : public DesktopFrame { public : std::unique_ptr<DesktopFrameIOSurface>)",
    "insertText": "Wrap(rtc::ScopedCFTypeRef<IOSurfaceRef> io_surface)"
  },
  {
    "label": "DesktopFrameIOSurface()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DesktopFrameIOSurface()"
  },
  {
    "label": "DesktopFrameIOSurface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DesktopFrameIOSurface(const DesktopFrameIOSurface&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DesktopFrameIOSurface&)",
    "insertText": "operator(const DesktopFrameIOSurface&)"
  },
  {
    "label": "DesktopFrameIOSurface()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "DesktopFrameIOSurface(rtc::ScopedCFTypeRef<IOSurfaceRef> io_surface)"
  }
]