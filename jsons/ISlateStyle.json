[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "FSlateDynamicImageBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateDynamicImageBrush"
  },
  {
    "label": "FSlateWidgetStyle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateWidgetStyle"
  },
  {
    "label": "ISlateStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateStyle"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSlateStyleSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateStyleSet"
  },
  {
    "label": "ISlateStyle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Styling / SlateColor . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Styling / StyleDefaults . h \" class Error ; class UTexture2D ; struct FSlateDynamicImageBrush ; struct FSlateWidgetStyle ; class ISlateStyle { public :)",
    "insertText": "ISlateStyle()"
  },
  {
    "label": "GetStyleSetName()",
    "kind": "Method",
    "detail": "Function (} const FName&)",
    "insertText": "GetStyleSetName()"
  },
  {
    "label": "GetResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResources(TArray< const FSlateBrush* >& OutResources)"
  },
  {
    "label": "GetContentRootDir()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetContentRootDir()"
  },
  {
    "label": "GetEntriesUsingBrush()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetEntriesUsingBrush(const FName BrushName)"
  },
  {
    "label": "GetWidgetStyle()",
    "kind": "Method",
    "detail": "Function (template<WidgetStyleType> const WidgetStyleType&)",
    "insertText": "GetWidgetStyle(FName PropertyName, const ANSICHAR* Specifier = nullptr, const WidgetStyleType* DefaultValue = nullptr)"
  },
  {
    "label": "GetWidgetStyleInternal()",
    "kind": "Method",
    "detail": "Function (const bool bWarnIfNotFound = true ; const FSlateWidgetStyle* ExistingStyle =)",
    "insertText": "GetWidgetStyleInternal(WidgetStyleType::TypeName, Join( PropertyName, Specifier ), DefaultValue, bWarnIfNotFound)"
  },
  {
    "label": "WidgetStyleType()",
    "kind": "Method",
    "detail": "Function (} return* static_cast<const)",
    "insertText": "WidgetStyleType(ExistingStyle)"
  },
  {
    "label": "HasWidgetStyle()",
    "kind": "Method",
    "detail": "Function (} template<WidgetStyleType> bool)",
    "insertText": "HasWidgetStyle(FName PropertyName, const ANSICHAR* Specifier = nullptr)"
  },
  {
    "label": "GetWidgetStyleInternal()",
    "kind": "Method",
    "detail": "Function (const bool bWarnIfNotFound = false ; return)",
    "insertText": "GetWidgetStyleInternal(WidgetStyleType::TypeName, Join( PropertyName, Specifier ), nullptr, bWarnIfNotFound)"
  },
  {
    "label": "GetFloat()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetFloat(const FName PropertyName, const ANSICHAR* Specifier = nullptr, float DefaultValue = FStyleDefaults::GetFloat(), const ISlateStyle* RequestingStyle = nullptr)"
  },
  {
    "label": "GetVector()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetVector(const FName PropertyName, const ANSICHAR* Specifier = nullptr, FVector2D DefaultValue = FStyleDefaults::GetVector2D(), const ISlateStyle* RequestingStyle = nullptr)"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (const FLinearColor&)",
    "insertText": "GetColor(const FName PropertyName, const ANSICHAR* Specifier = nullptr, const FLinearColor& DefaultValue = FStyleDefaults::GetColor(), const ISlateStyle* RequestingStyle = nullptr)"
  },
  {
    "label": "GetSlateColor()",
    "kind": "Method",
    "detail": "Function (const FSlateColor)",
    "insertText": "GetSlateColor(const FName PropertyName, const ANSICHAR* Specifier = nullptr, const FSlateColor& DefaultValue = FStyleDefaults::GetSlateColor(), const ISlateStyle* RequestingStyle = nullptr)"
  },
  {
    "label": "GetMargin()",
    "kind": "Method",
    "detail": "Function (const FMargin&)",
    "insertText": "GetMargin(const FName PropertyName, const ANSICHAR* Specifier = nullptr, const FMargin& DefaultValue = FStyleDefaults::GetMargin(), const ISlateStyle* RequestingStyle = nullptr)"
  },
  {
    "label": "GetBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBrush(const FName PropertyName, const ANSICHAR* Specifier = nullptr, const ISlateStyle* RequestingStyle = nullptr)"
  },
  {
    "label": "GetOptionalBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetOptionalBrush(const FName PropertyName, const ANSICHAR* Specifier = nullptr, const FSlateBrush* const DefaultBrush = FStyleDefaults::GetNoBrush())"
  },
  {
    "label": "GetDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FSlateDynamicImageBrush>)",
    "insertText": "GetDynamicImageBrush(const FName BrushTemplate, const FName TextureName, const ANSICHAR* Specifier = nullptr, const ISlateStyle* RequestingStyle = nullptr)"
  },
  {
    "label": "GetDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FSlateDynamicImageBrush>)",
    "insertText": "GetDynamicImageBrush(const FName BrushTemplate, const ANSICHAR* Specifier, UTexture2D* TextureResource, const FName TextureName, const ISlateStyle* RequestingStyle = nullptr)"
  },
  {
    "label": "GetDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FSlateDynamicImageBrush>)",
    "insertText": "GetDynamicImageBrush(const FName BrushTemplate, UTexture2D* TextureResource, const FName TextureName, const ISlateStyle* RequestingStyle = nullptr)"
  },
  {
    "label": "GetDefaultBrush()",
    "kind": "Method",
    "detail": "Function (FSlateBrush*)",
    "insertText": "GetDefaultBrush()"
  },
  {
    "label": "GetSound()",
    "kind": "Method",
    "detail": "Function (const FSlateSound&)",
    "insertText": "GetSound(const FName PropertyName, const ANSICHAR* Specifier = nullptr , const ISlateStyle* RequestingStyle = nullptr)"
  },
  {
    "label": "GetFontStyle()",
    "kind": "Method",
    "detail": "Function (FSlateFontInfo)",
    "insertText": "GetFontStyle(const FName PropertyName, const ANSICHAR* Specifier = nullptr)"
  },
  {
    "label": "Join()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "Join(FName A, const ANSICHAR* B)"
  },
  {
    "label": "GetStyleKeys()",
    "kind": "Method",
    "detail": "Function (} } TSet<FName>)",
    "insertText": "GetStyleKeys()"
  },
  {
    "label": "GetWidgetStyleInternal()",
    "kind": "Method",
    "detail": "Function (protected : class FSlateStyleSet ; class ISlateStyle ; const FSlateWidgetStyle*)",
    "insertText": "GetWidgetStyleInternal(const FName DesiredTypeName, const FName StyleName, const FSlateWidgetStyle* DefaultStyle, bool bWarnIfNotFound)"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log(EStyleMessageSeverity Severity, const FText& Message)"
  },
  {
    "label": "LogMissingResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogMissingResource(EStyleMessageSeverity Severity, const FText& Message, const FName& MissingResource)"
  },
  {
    "label": "MakeDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FSlateDynamicImageBrush>)",
    "insertText": "MakeDynamicImageBrush(const FName BrushTemplate, UTexture2D* TextureResource, const FName TextureName)"
  }
]