[
  {
    "label": "FieldType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FieldType"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TAllFieldsIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TAllFieldsIterator"
  },
  {
    "label": "GetInnerFieldsFromField()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Field . h \" # include \" UObject / UnrealType . h \" # include \" UObject / UObjectIterator . h \" template<class FieldType> void)",
    "insertText": "GetInnerFieldsFromField(FieldType* Owner, TArray<FieldType*>& OutFields)"
  },
  {
    "label": "GetInnerFieldsFromField()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "GetInnerFieldsFromField(FField* Owner, TArray<FField*>& OutFields)"
  },
  {
    "label": "GetInnerFields()",
    "kind": "Method",
    "detail": "Function (Owner ->)",
    "insertText": "GetInnerFields(OutFields)"
  },
  {
    "label": "GetInnerFieldsFromField()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "GetInnerFieldsFromField(UField* Owner, TArray<UField*>& OutFields)"
  },
  {
    "label": "TAllFieldsIterator()",
    "kind": "Method",
    "detail": "Function (} template<class T> class TAllFieldsIterator { private : TObjectIterator<UStruct> StructIterator ; TFieldIterator<T::BaseFieldClass> FieldIterator ; TArray<T::BaseFieldClass*> CurrentFields ; int32 CurrentFieldIndex = - 1 ; public :)",
    "insertText": "TAllFieldsIterator(EObjectFlags AdditionalExclusionFlags = RF_ClassDefaultObject, EInternalObjectFlags InternalExclusionFlags = EInternalObjectFlags::None) : StructIterator(AdditionalExclusionFlags, true, InternalExclusionFlags) , FieldIterator(nullptr)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (CurrentFields .)",
    "insertText": "Reserve(4)"
  },
  {
    "label": "InitFieldIterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFieldIterator()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const TAllFieldsIterator<T>& Rhs)"
  },
  {
    "label": "IterateToNextField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateToNextField()"
  },
  {
    "label": "ConditionallyIterateToNextStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionallyIterateToNextStruct()"
  },
  {
    "label": "InitCurrentFields()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } protected : void)",
    "insertText": "InitCurrentFields()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (CurrentFieldIndex = - 1 ; CurrentFields .)",
    "insertText": "Reset()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (T::BaseFieldClass* CurrentField =* FieldIterator ; CurrentFields .)",
    "insertText": "Add(CurrentField)"
  },
  {
    "label": "BaseFieldClass()",
    "kind": "Method",
    "detail": "Function (GetInnerFieldsFromField<)",
    "insertText": "BaseFieldClass(CurrentField, CurrentFields)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (break ; } })",
    "insertText": "if(CurrentFieldIndex == CurrentFields.Num())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + FieldIterator ;)",
    "insertText": "if(FieldIterator)"
  },
  {
    "label": "BaseFieldClass()",
    "kind": "Method",
    "detail": "Function (FieldIterator . ~ TFieldIterator<)",
    "insertText": "BaseFieldClass()"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(&FieldIterator) TFieldIterator<typename T::BaseFieldClass>(*StructIterator, EFieldIteratorFlags::ExcludeSuper, EFieldIteratorFlags::IncludeDeprecated, EFieldIteratorFlags::IncludeInterfaces)"
  }
]