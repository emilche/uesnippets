[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FSlateShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResource"
  },
  {
    "label": "IWebBrowserDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWebBrowserDialog"
  },
  {
    "label": "IWebBrowserPopupFeatures",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWebBrowserPopupFeatures"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FWebNavigationRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWebNavigationRequest"
  },
  {
    "label": "IWebBrowserWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWebBrowserWindow"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "LoadURL()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / CursorReply . h \" # include \" Input / Reply . h \" # include \" Widgets / SWindow . h \" # include \" SWebBrowser . h \" class Error ; class FSlateShaderResource ; class IWebBrowserDialog ; class IWebBrowserPopupFeatures ; enum class EWebBrowserDialogEventResponse ; enum class EWebBrowserDocumentState { Completed,Error,Loading,NoDocument } ; enum class EWebBrowserConsoleLogSeverity { Default,Verbose,Debug,Info,Warning,Error,Fatal } ; enum class EWebTransitionSource { Unknown,Link,,AutoSubframe,ManualSubframe,FormSubmit,Reload } ; enum class EWebTransitionSourceQualifier { Unknown,Blocked,ForwardBack,ChainStart,ChainEnd,ClientRedirect,ServerRedirect } ; struct FWebNavigationRequest { bool bIsRedirect ; bool bIsMainFrame ; bool bIsExplicitTransition ; EWebTransitionSource TransitionSource ; EWebTransitionSourceQualifier TransitionSourceQualifier ; } ; class IWebBrowserWindow { public : void)",
    "insertText": "LoadURL(FString NewURL)"
  },
  {
    "label": "LoadString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadString(FString Contents, FString DummyURL)"
  },
  {
    "label": "SetViewportSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewportSize(FIntPoint WindowSize, FIntPoint WindowPos = FIntPoint::NoneValue)"
  },
  {
    "label": "GetViewportSize()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetViewportSize()"
  },
  {
    "label": "GetTexture()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResource*)",
    "insertText": "GetTexture(bool bIsPopup = false)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "IsClosing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClosing()"
  },
  {
    "label": "GetDocumentLoadingState()",
    "kind": "Method",
    "detail": "Function (EWebBrowserDocumentState)",
    "insertText": "GetDocumentLoadingState()"
  },
  {
    "label": "GetTitle()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTitle()"
  },
  {
    "label": "GetUrl()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetUrl()"
  },
  {
    "label": "GetSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSource(TFunction<void (const FString&)> Callback)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnKeyDown(const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnKeyUp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnKeyUp(const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnKeyChar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnKeyChar(const FCharacterEvent& InCharacterEvent)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, bool bIsPopup)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, bool bIsPopup)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDoubleClick(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, bool bIsPopup)"
  },
  {
    "label": "OnMouseMove()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseMove(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, bool bIsPopup)"
  },
  {
    "label": "OnMouseLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseLeave(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "SetSupportsMouseWheel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSupportsMouseWheel(bool bValue)"
  },
  {
    "label": "GetSupportsMouseWheel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSupportsMouseWheel()"
  },
  {
    "label": "OnMouseWheel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseWheel(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, bool bIsPopup)"
  },
  {
    "label": "OnTouchGesture()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnTouchGesture(const FGeometry& MyGeometry, const FPointerEvent& GestureEvent, bool bIsPopup)"
  },
  {
    "label": "OnCursorQuery()",
    "kind": "Method",
    "detail": "Function (FCursorReply)",
    "insertText": "OnCursorQuery(const FGeometry& MyGeometry, const FPointerEvent& CursorEvent)"
  },
  {
    "label": "OnFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFocus(bool SetFocus, bool bIsPopup)"
  },
  {
    "label": "OnCaptureLost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCaptureLost()"
  },
  {
    "label": "CanGoBack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanGoBack()"
  },
  {
    "label": "GoBack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GoBack()"
  },
  {
    "label": "CanGoForward()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanGoForward()"
  },
  {
    "label": "GoForward()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GoForward()"
  },
  {
    "label": "IsLoading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoading()"
  },
  {
    "label": "Reload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reload()"
  },
  {
    "label": "StopLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopLoad()"
  },
  {
    "label": "ExecuteJavascript()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteJavascript(const FString& Script)"
  },
  {
    "label": "CloseBrowser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseBrowser(bool bForce, bool bBlockTillClosed = false)"
  },
  {
    "label": "BindUObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindUObject(const FString& Name, UObject* Object, bool bIsPermanent = true)"
  },
  {
    "label": "UnbindUObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnbindUObject(const FString& Name, UObject* Object, bool bIsPermanent = true)"
  },
  {
    "label": "BindInputMethodSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindInputMethodSystem(ITextInputMethodSystem* TextInputMethodSystem)"
  },
  {
    "label": "UnbindInputMethodSystem()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnbindInputMethodSystem()"
  },
  {
    "label": "GetLoadError()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetLoadError()"
  },
  {
    "label": "SetIsDisabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsDisabled(bool bValue)"
  },
  {
    "label": "GetParentWindow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class SWindow>)",
    "insertText": "GetParentWindow()"
  },
  {
    "label": "SetParentWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParentWindow(TSharedPtr<class SWindow> Window)"
  },
  {
    "label": "CheckTickActivity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckTickActivity()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (} ; public :)",
    "insertText": "DECLARE_EVENT_OneParam(IWebBrowserWindow, FOnDocumentStateChanged, EWebBrowserDocumentState)"
  },
  {
    "label": "OnDocumentStateChanged()",
    "kind": "Method",
    "detail": "Function (FOnDocumentStateChanged&)",
    "insertText": "OnDocumentStateChanged()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(IWebBrowserWindow, FOnTitleChanged, FString)"
  },
  {
    "label": "OnTitleChanged()",
    "kind": "Method",
    "detail": "Function (FOnTitleChanged&)",
    "insertText": "OnTitleChanged()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(IWebBrowserWindow, FOnUrlChanged, FString)"
  },
  {
    "label": "OnUrlChanged()",
    "kind": "Method",
    "detail": "Function (FOnUrlChanged&)",
    "insertText": "OnUrlChanged()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(IWebBrowserWindow, FOnToolTip, FString)"
  },
  {
    "label": "OnToolTip()",
    "kind": "Method",
    "detail": "Function (FOnToolTip&)",
    "insertText": "OnToolTip()"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(IWebBrowserWindow, FOnNeedsRedraw) virtual FOnNeedsRedraw& OnNeedsRedraw()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FOnBeforeBrowse, const FString& , const FWebNavigationRequest& ) virtual FOnBeforeBrowse& OnBeforeBrowse()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_ThreeParams(bool, FOnLoadUrl, const FString& , const FString& , FString& ) virtual FOnLoadUrl& OnLoadUrl()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FOnBeforePopupDelegate, FString, FString)"
  },
  {
    "label": "OnBeforePopup()",
    "kind": "Method",
    "detail": "Function (FOnBeforePopupDelegate&)",
    "insertText": "OnBeforePopup()"
  },
  {
    "label": "DECLARE_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (typedef TMap<FString,FString> FRequestHeaders ;)",
    "insertText": "DECLARE_DELEGATE_FourParams(FOnBeforeResourceLoadDelegate, FString , FString , FRequestHeaders& , const bool)"
  },
  {
    "label": "OnBeforeResourceLoad()",
    "kind": "Method",
    "detail": "Function (FOnBeforeResourceLoadDelegate&)",
    "insertText": "OnBeforeResourceLoad()"
  },
  {
    "label": "DECLARE_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_FourParams(FOnResourceLoadCompleteDelegate, FString , FString , FString , int64)"
  },
  {
    "label": "OnResourceLoadComplete()",
    "kind": "Method",
    "detail": "Function (FOnResourceLoadCompleteDelegate&)",
    "insertText": "OnResourceLoadComplete()"
  },
  {
    "label": "DECLARE_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_FourParams(FOnConsoleMessageDelegate, const FString& , const FString& , int32 , EWebBrowserConsoleLogSeverity)"
  },
  {
    "label": "OnConsoleMessage()",
    "kind": "Method",
    "detail": "Function (FOnConsoleMessageDelegate&)",
    "insertText": "OnConsoleMessage()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FOnCreateWindow, const TWeakPtr<IWebBrowserWindow>& , const TWeakPtr<IWebBrowserPopupFeatures>& ) virtual FOnCreateWindow& OnCreateWindow()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnCloseWindow, const TWeakPtr<IWebBrowserWindow>& ) virtual FOnCloseWindow& OnCloseWindow()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(IWebBrowserWindow, FOnShowPopup, const FIntRect& ) virtual FOnShowPopup& OnShowPopup()"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(IWebBrowserWindow, FOnDismissPopup) virtual FOnDismissPopup& OnDismissPopup()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(EWebBrowserDialogEventResponse, FOnShowDialog, const TWeakPtr<IWebBrowserDialog>& ) virtual FOnShowDialog& OnShowDialog()"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE(FOnDismissAllDialogs) virtual FOnDismissAllDialogs& OnDismissAllDialogs()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(bool, FOnSuppressContextMenu)"
  },
  {
    "label": "OnSuppressContextMenu()",
    "kind": "Method",
    "detail": "Function (FOnSuppressContextMenu&)",
    "insertText": "OnSuppressContextMenu()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnUnhandledKeyDown, const FKeyEvent&)"
  },
  {
    "label": "OnUnhandledKeyDown()",
    "kind": "Method",
    "detail": "Function (FOnUnhandledKeyDown&)",
    "insertText": "OnUnhandledKeyDown()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnUnhandledKeyUp, const FKeyEvent&)"
  },
  {
    "label": "OnUnhandledKeyUp()",
    "kind": "Method",
    "detail": "Function (FOnUnhandledKeyUp&)",
    "insertText": "OnUnhandledKeyUp()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnUnhandledKeyChar, const FCharacterEvent&)"
  },
  {
    "label": "OnUnhandledKeyChar()",
    "kind": "Method",
    "detail": "Function (FOnUnhandledKeyChar&)",
    "insertText": "OnUnhandledKeyChar()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnDragWindow, const FPointerEvent& ) virtual FOnDragWindow& OnDragWindow()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(bool, FOnCheckVisibility)"
  },
  {
    "label": "OnCheckVisibility()",
    "kind": "Method",
    "detail": "Function (FOnCheckVisibility&)",
    "insertText": "OnCheckVisibility()"
  },
  {
    "label": "IWebBrowserWindow()",
    "kind": "Method",
    "detail": "Function (} protected : ~)",
    "insertText": "IWebBrowserWindow()"
  }
]