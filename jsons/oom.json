[
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_PARTITION_ALLOCATOR_OOM_H_ # define BASE_ALLOCATOR_PARTITION_ALLOCATOR_OOM_H_ # include<cstddef> # include \" base / allocator / partition_allocator / allocation_guard . h \" # include \" base / allocator / partition_allocator / partition_alloc_base / compiler_specific . h \" # include \" base / allocator / partition_allocator / partition_alloc_base / component_export . h \" # include \" build / build_config . h \" # if)",
    "insertText": "BUILDFLAG(IS_WIN)"
  },
  {
    "label": "PA_COMPONENT_EXPORT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PA_COMPONENT_EXPORT(PARTITION_ALLOC) void TerminateBecauseOutOfMemory(size_t size)"
  },
  {
    "label": "PA_COMPONENT_EXPORT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PA_COMPONENT_EXPORT(PARTITION_ALLOC)"
  },
  {
    "label": "PA_COMPONENT_EXPORT()",
    "kind": "Method",
    "detail": "Function (const DWORD kOomExceptionCode = 0 xe0000008 ; } # endif namespace internal { [ [ noreturn ] ])",
    "insertText": "PA_COMPONENT_EXPORT(PARTITION_ALLOC) void PA_NOT_TAIL_CALLED OnNoMemory(size_t size)"
  },
  {
    "label": "OOM_CRASH()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "OOM_CRASH(size)"
  },
  {
    "label": "OnNoMemory()",
    "kind": "Method",
    "detail": "Function (\\ \\::partition_alloc::ScopedAllowAllocations guard { } ; \\::partition_alloc::)",
    "insertText": "OnNoMemory(size)"
  }
]