[
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FRDGPooledBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGPooledBuffer"
  },
  {
    "label": "FRHITexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHITexture"
  },
  {
    "label": "EPixelFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPixelFormat"
  },
  {
    "label": "FTileUploader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTileUploader"
  },
  {
    "label": "FAddResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddResult"
  },
  {
    "label": "FPageTableUpdater",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPageTableUpdater"
  },
  {
    "label": "FBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBatch"
  },
  {
    "label": "UseAsyncComputeForStreaming()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / StaticArray . h \" # include \" RenderGraphResources . h \" class FRDGBuilder ; class FRDGPooledBuffer ; class FRHITexture ; enum EPixelFormat : uint8 ; namespace UE { namespace SVT { bool)",
    "insertText": "UseAsyncComputeForStreaming()"
  },
  {
    "label": "FTileUploader()",
    "kind": "Method",
    "detail": "Function (class FTileUploader { public : struct FAddResult { TStaticArray<uint8*,2> OccupancyBitsPtrs ; TStaticArray<uint8*,2> TileDataOffsetsPtrs ; TStaticArray<uint8*,2> TileDataPtrs ; TStaticArray<uint32,2> TileDataBaseOffsets ; uint8* PackedPhysicalTileCoordsPtr ; } ;)",
    "insertText": "FTileUploader()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FRDGBuilder& InGraphBuilder, int32 InMaxNumTiles, int32 InMaxNumVoxelsA, int32 InMaxNumVoxelsB, EPixelFormat InFormatA, EPixelFormat InFormatB)"
  },
  {
    "label": "Add_GetRef()",
    "kind": "Method",
    "detail": "Function (FAddResult)",
    "insertText": "Add_GetRef(int32 InNumTiles, int32 InNumVoxelsA, int32 InNumVoxelsB)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "ResourceUploadTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResourceUploadTo(FRDGBuilder& InGraphBuilder, const TRefCountPtr<IPooledRenderTarget>& InDstTextureA, const TRefCountPtr<IPooledRenderTarget>& InDstTextureB, const FVector4f& InFallbackValueA, const FVector4f& InFallbackValueB)"
  },
  {
    "label": "ResetState()",
    "kind": "Method",
    "detail": "Function (private : TRefCountPtr<FRDGPooledBuffer> OccupancyBitsUploadBuffer ; TRefCountPtr<FRDGPooledBuffer> TileDataOffsetsUploadBuffer ; TRefCountPtr<FRDGPooledBuffer> DstTileCoordsUploadBuffer ; TRefCountPtr<FRDGPooledBuffer> TileDataAUploadBuffer ; TRefCountPtr<FRDGPooledBuffer> TileDataBUploadBuffer ; TArray<uint32> TileDataOffsets ; uint8* OccupancyBitsAPtr ; uint8* OccupancyBitsBPtr ; uint8* TileDataOffsetsAPtr ; uint8* TileDataOffsetsBPtr ; uint8* TileCoordsPtr ; uint8* TileDataAPtr ; uint8* TileDataBPtr ; int32 MaxNumTiles ; int32 MaxNumVoxelsA ; int32 MaxNumVoxelsB ; EPixelFormat FormatA ; EPixelFormat FormatB ; int32 FormatSizeA ; int32 FormatSizeB ; int32 NumWrittenTiles ; int32 NumWrittenVoxelsA ; int32 NumWrittenVoxelsB ; void)",
    "insertText": "ResetState()"
  },
  {
    "label": "FPageTableUpdater()",
    "kind": "Method",
    "detail": "Function (} ; class FPageTableUpdater { public :)",
    "insertText": "FPageTableUpdater()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FRDGBuilder& InGraphBuilder, int32 InMaxNumUpdates, int32 InEstimatedNumBatches)"
  },
  {
    "label": "Add_GetRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add_GetRef(const TRefCountPtr<IPooledRenderTarget>& InPageTable, int32 InMipLevel, int32 InNumUpdates, uint8*& OutCoordsPtr, uint8*& OutPayloadPtr)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply(FRDGBuilder& InGraphBuilder)"
  },
  {
    "label": "FBatch()",
    "kind": "Method",
    "detail": "Function (private : struct FBatch { TRefCountPtr<IPooledRenderTarget> PageTable ; int32 MipLevel ; int32 NumUpdates ;)",
    "insertText": "FBatch()"
  },
  {
    "label": "FBatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBatch(const TRefCountPtr<IPooledRenderTarget>& InPageTable, int32 InMipLevel) : PageTable(InPageTable), MipLevel(InMipLevel), NumUpdates(0)"
  }
]