[
  {
    "label": "UWorldPartitionEditorHash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionEditorHash"
  },
  {
    "label": "FForEachIntersectingActorParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForEachIntersectingActorParams"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" WorldPartition / WorldPartitionActorDesc . h \" # include \" WorldPartition / WorldPartitionHandle . h \" # include \" WorldPartitionEditorHash . generated . h \")",
    "insertText": "UCLASS(Abstract, Config=Engine, Within = WorldPartition, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: #if WITH_EDITOR ENGINE_API virtual void Initialize() PURE_VIRTUAL(UWorldPartitionEditorHash::Initialize, return;)"
  },
  {
    "label": "SetDefaultValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultValues() PURE_VIRTUAL(UWorldPartitionEditorHash::SetDefaultValues, return;)"
  },
  {
    "label": "GetWorldPartitionEditorName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetWorldPartitionEditorName() const PURE_VIRTUAL(UWorldPartitionEditorHash::GetWorldPartitionEditorName, return FName(NAME_None);)"
  },
  {
    "label": "GetEditorWorldBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetEditorWorldBounds() const PURE_VIRTUAL(UWorldPartitionEditorHash::GetEditorWorldBounds, return FBox(ForceInit);)"
  },
  {
    "label": "GetRuntimeWorldBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetRuntimeWorldBounds() const PURE_VIRTUAL(UWorldPartitionEditorHash::GetRuntimeWorldBounds, return FBox(ForceInit);)"
  },
  {
    "label": "GetNonSpatialBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetNonSpatialBounds() const PURE_VIRTUAL(UWorldPartitionEditorHash::GetNonSpatialBounds, return FBox(ForceInit);)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds) PURE_VIRTUAL(UWorldPartitionEditorHash::Tick, return;)"
  },
  {
    "label": "HashActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HashActor(FWorldPartitionHandle& InActorHandle) PURE_VIRTUAL(UWorldPartitionEditorHash::HashActor, ;)"
  },
  {
    "label": "UnhashActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnhashActor(FWorldPartitionHandle& InActorHandle) PURE_VIRTUAL(UWorldPartitionEditorHash::UnhashActor, ;)"
  },
  {
    "label": "FForEachIntersectingActorParams()",
    "kind": "Method",
    "detail": "Function (struct FForEachIntersectingActorParams {)",
    "insertText": "FForEachIntersectingActorParams()"
  },
  {
    "label": "SetIncludeSpatiallyLoadedActors()",
    "kind": "Method",
    "detail": "Function (bool bIncludeSpatiallyLoadedActors ; bool bIncludeNonSpatiallyLoadedActors ; TOptional<FBox> MinimumBox ; FForEachIntersectingActorParams&)",
    "insertText": "SetIncludeSpatiallyLoadedActors(bool bInIncludeSpatiallyLoadedActors)"
  },
  {
    "label": "SetIncludeNonSpatiallyLoadedActors()",
    "kind": "Method",
    "detail": "Function (bIncludeSpatiallyLoadedActors = bInIncludeSpatiallyLoadedActors ; return* this ; } ; FForEachIntersectingActorParams&)",
    "insertText": "SetIncludeNonSpatiallyLoadedActors(bool bInIncludeNonSpatiallyLoadedActors)"
  },
  {
    "label": "SetMinimumBox()",
    "kind": "Method",
    "detail": "Function (bIncludeNonSpatiallyLoadedActors = bInIncludeNonSpatiallyLoadedActors ; return* this ; } ; FForEachIntersectingActorParams&)",
    "insertText": "SetMinimumBox(const FBox& InMinimumBox)"
  }
]