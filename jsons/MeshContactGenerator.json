[
  {
    "label": "FMeshContactGeneratorSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshContactGeneratorSettings"
  },
  {
    "label": "FMeshContactGeneratorTriangle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshContactGeneratorTriangle"
  },
  {
    "label": "FMeshContactGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshContactGenerator"
  },
  {
    "label": "FVertexContactIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVertexContactIndex"
  },
  {
    "label": "FEdgeTriangleIndices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdgeTriangleIndices"
  },
  {
    "label": "FEdgeTriangleIndicesMapTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdgeTriangleIndicesMapTraits"
  },
  {
    "label": "VertexContactIndicesMapTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VertexContactIndicesMapTraits"
  },
  {
    "label": "FMeshContactGeneratorSettings()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMeshContactGeneratorSettings()"
  },
  {
    "label": "FMeshContactGenerator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMeshContactGenerator(const FMeshContactGeneratorSettings& InSettings)"
  },
  {
    "label": "ProcessGeneratedContacts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessGeneratedContacts(const FRigidTransform3& ConvexTransform, const FRigidTransform3& MeshToConvexTransform)"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(Contacts)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(const int32 InMaxTriangles, const int32 InMaxContacts)"
  },
  {
    "label": "FixFeature()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FixFeature(const int32 LocalTriangleIndex, Private::EConvexFeatureType& InOutFeatureType, int32& InOutFeatureIndex, FVec3& InOutPlaneNormal)"
  },
  {
    "label": "AddTriangleContacts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTriangleContacts(const int32 LocalTriangleIndex, const TArrayView<FContactPoint>& TriangleContactPoints)"
  },
  {
    "label": "PruneAndCorrectContacts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PruneAndCorrectContacts()"
  },
  {
    "label": "FixContactNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixContactNormal(const int32 ContactIndex)"
  },
  {
    "label": "RemoveDisabledContacts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDisabledContacts()"
  },
  {
    "label": "SortContactByPhi()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortContactByPhi()"
  },
  {
    "label": "SortContactsForSolverConvergence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortContactsForSolverConvergence()"
  },
  {
    "label": "FinalizeContacts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeContacts(const FRigidTransform3& MeshToConvexTransform)"
  },
  {
    "label": "DebugDrawContacts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugDrawContacts(const FRigidTransform3& ConvexTransform, const FColor& Color, const FReal LineScale)"
  },
  {
    "label": "DebugDrawTriangles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugDrawTriangles(const FRigidTransform3& ConvexTransform, const FColor& VisitedColor, const FColor& IgnoredColor)"
  },
  {
    "label": "DebugDrawTriangle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugDrawTriangle(const FRigidTransform3& ConvexTransform, const FTriangleExt& TriangleData, const FColor& Color)"
  },
  {
    "label": "MurmurFinalize32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MurmurFinalize32(VertexID)"
  }
]