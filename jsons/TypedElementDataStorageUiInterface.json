[
  {
    "label": "IEditorDataStorageUiProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditorDataStorageUiProvider"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FTypedElementWidgetConstructor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementWidgetConstructor"
  },
  {
    "label": "FSimpleWidgetConstructor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimpleWidgetConstructor"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ContainersFwd . h \" # include \" Elements / Common / TypedElementQueryConditions . h \" # include \" Elements / Interfaces / TypedElementDataStorageInterface . h \" # include \" Elements / Framework / TypedElementMetaData . h \" # include \" Elements / Framework / TypedElementQueryBuilder . h \" # include \" Features / IModularFeature . h \" # include \" Templates / UnrealTypeTraits . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / Interface . h \" # include \" TypedElementDataStorageUiInterface . generated . h \" class IEditorDataStorageUiProvider ; class SWidget ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "FTypedElementWidgetConstructor()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FTypedElementWidgetConstructor(const UScriptStruct* InTypeInfo)"
  },
  {
    "label": "FTypedElementWidgetConstructor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTypedElementWidgetConstructor(EForceInit)"
  },
  {
    "label": "FTypedElementWidgetConstructor()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FTypedElementWidgetConstructor()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize(const UE::Editor::DataStorage::FMetaDataView& InArguments, TArray<TWeakObjectPtr<const UScriptStruct>> InMatchedColumnTypes, const UE::Editor::DataStorage::Queries::FConditions& InQueryConditions)"
  },
  {
    "label": "GetTypeInfo()",
    "kind": "Method",
    "detail": "Function (const UScriptStruct*)",
    "insertText": "GetTypeInfo()"
  },
  {
    "label": "GetMatchedColumns()",
    "kind": "Method",
    "detail": "Function (const TArray<TWeakObjectPtr<const UScriptStruct>>&)",
    "insertText": "GetMatchedColumns()"
  },
  {
    "label": "GetQueryConditions()",
    "kind": "Method",
    "detail": "Function (const UE::Editor::DataStorage::Queries::FConditions*)",
    "insertText": "GetQueryConditions()"
  },
  {
    "label": "GetAdditionalColumnsList()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<const UScriptStruct*>)",
    "insertText": "GetAdditionalColumnsList()"
  },
  {
    "label": "CreateWidgetDisplayName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "CreateWidgetDisplayName(IEditorDataStorageProvider* DataStorage, RowHandle Row)"
  },
  {
    "label": "ConstructFinalWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "ConstructFinalWidget(RowHandle Row, IEditorDataStorageProvider* DataStorage, IEditorDataStorageUiProvider* DataStorageUi, const UE::Editor::DataStorage::FMetaDataView& Arguments)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "Construct(RowHandle Row, IEditorDataStorageProvider* DataStorage, IEditorDataStorageUiProvider* DataStorageUi, const UE::Editor::DataStorage::FMetaDataView& Arguments)"
  },
  {
    "label": "CreateWidget()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<SWidget>)",
    "insertText": "CreateWidget(const UE::Editor::DataStorage::FMetaDataView& Arguments)"
  },
  {
    "label": "CreateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateWidget(IEditorDataStorageProvider* DataStorage, IEditorDataStorageUiProvider* DataStorageUi, UE::Editor::DataStorage::RowHandle TargetRow, UE::Editor::DataStorage::RowHandle WidgetRow, const UE::Editor::DataStorage::FMetaDataView& Arguments)"
  },
  {
    "label": "SetColumns()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetColumns(IEditorDataStorageProvider* DataStorage, RowHandle Row)"
  },
  {
    "label": "DescribeColumnType()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DescribeColumnType(const UScriptStruct* ColumnType)"
  },
  {
    "label": "FinalizeWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FinalizeWidget(IEditorDataStorageProvider* DataStorage, IEditorDataStorageUiProvider* DataStorageUi, RowHandle Row, const TSharedPtr<SWidget>& Widget)"
  },
  {
    "label": "AddDefaultWidgetColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDefaultWidgetColumns(RowHandle Row, IEditorDataStorageProvider* DataStorage)"
  },
  {
    "label": "GetTargetRow()",
    "kind": "Method",
    "detail": "Function (RowHandle)",
    "insertText": "GetTargetRow(IEditorDataStorageProvider* DataStorage, RowHandle WidgetRow)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() TYPEDELEMENTFRAMEWORK_API explicit FSimpleWidgetConstructor(const UScriptStruct* InTypeInfo)"
  },
  {
    "label": "FSimpleWidgetConstructor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSimpleWidgetConstructor() : Super(StaticStruct())"
  },
  {
    "label": "FSimpleWidgetConstructor()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSimpleWidgetConstructor()"
  },
  {
    "label": "SetColumns()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetColumns(IEditorDataStorageProvider* DataStorage, RowHandle WidgetRow)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "Construct(RowHandle WidgetRow, IEditorDataStorageProvider* DataStorage, IEditorDataStorageUiProvider* DataStorageUi, const UE::Editor::DataStorage::FMetaDataView& Arguments)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; template<> struct TStructOpsTypeTraits<FTypedElementWidgetConstructor> : public TStructOpsTypeTraitsBase2<FTypedElementWidgetConstructor> { enum { WithNoInitConstructor = true,WithPureVirtual = true,} ; } ; class IEditorDataStorageUiProvider : public IModularFeature { using RowHandle = UE::Editor::DataStorage::RowHandle ; public : enum class EPurposeType : uint8 { Generic,UniqueByName,UniqueByNameAndColumn } ; enum class EMatchApproach : uint8 { LongestMatch,ExactMatch,SingleMatch } ; using WidgetCreatedCallback = TFunctionRef<)",
    "insertText": "void(const TSharedRef<SWidget>& NewWidget, RowHandle Row)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (using WidgetConstructorCallback = TFunctionRef<)",
    "insertText": "bool(TUniquePtr<FTypedElementWidgetConstructor>, TConstArrayView<TWeakObjectPtr<const UScriptStruct>>)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (using WidgetPurposeCallback = TFunctionRef<)",
    "insertText": "void(FName, EPurposeType, const FText&)"
  },
  {
    "label": "RegisterWidgetPurpose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterWidgetPurpose(FName Purpose, EPurposeType Type, FText Description)"
  },
  {
    "label": "RegisterWidgetFactory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterWidgetFactory(FName Purpose, const UScriptStruct* Constructor)"
  },
  {
    "label": "RegisterWidgetFactory()",
    "kind": "Method",
    "detail": "Function (template<ConstructorType> bool)",
    "insertText": "RegisterWidgetFactory(FName Purpose)"
  },
  {
    "label": "RegisterWidgetFactory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterWidgetFactory(FName Purpose, const UScriptStruct* Constructor, UE::Editor::DataStorage::Queries::FConditions Columns)"
  },
  {
    "label": "RegisterWidgetFactory()",
    "kind": "Method",
    "detail": "Function (template<ConstructorType> bool)",
    "insertText": "RegisterWidgetFactory(FName Purpose, UE::Editor::DataStorage::Queries::FConditions Columns)"
  },
  {
    "label": "RegisterWidgetFactory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterWidgetFactory(FName Purpose, TUniquePtr<FTypedElementWidgetConstructor>&& Constructor)"
  },
  {
    "label": "RegisterWidgetFactory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterWidgetFactory(FName Purpose, TUniquePtr<FTypedElementWidgetConstructor>&& Constructor, UE::Editor::DataStorage::Queries::FConditions Columns)"
  },
  {
    "label": "CreateWidgetConstructors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateWidgetConstructors(FName Purpose, const UE::Editor::DataStorage::FMetaDataView& Arguments, const WidgetConstructorCallback& Callback)"
  },
  {
    "label": "CreateWidgetConstructors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateWidgetConstructors(FName Purpose, EMatchApproach MatchApproach, TArray<TWeakObjectPtr<const UScriptStruct>>& Columns, const UE::Editor::DataStorage::FMetaDataView& Arguments, const WidgetConstructorCallback& Callback)"
  },
  {
    "label": "ConstructWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructWidgets(FName Purpose, const UE::Editor::DataStorage::FMetaDataView& Arguments, const WidgetCreatedCallback& ConstructionCallback)"
  },
  {
    "label": "ConstructWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "ConstructWidget(RowHandle Row, FTypedElementWidgetConstructor& Constructor, const UE::Editor::DataStorage::FMetaDataView& Arguments)"
  },
  {
    "label": "ListWidgetPurposes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ListWidgetPurposes(const WidgetPurposeCallback& Callback)"
  },
  {
    "label": "SupportsExtension()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsExtension(FName Extension)"
  },
  {
    "label": "ListExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ListExtensions(TFunctionRef<void(FName)> Callback)"
  }
]