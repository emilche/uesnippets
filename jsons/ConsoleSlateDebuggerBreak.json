[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FConsoleSlateDebuggerBreak",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConsoleSlateDebuggerBreak"
  },
  {
    "label": "FInvalidationElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInvalidationElement"
  },
  {
    "label": "FConsoleSlateDebuggerBreak()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Debugging / SlateDebugging . h \" # if WITH_SLATE_DEBUGGING # include \" CoreMinimal . h \" # include \" Debugging / ConsoleSlateDebuggerUtility . h \" # include \" Delegates / Delegate . h \" # include \" HAL / IConsoleManager . h \" class SWidget ; class FConsoleSlateDebuggerBreak { public :)",
    "insertText": "FConsoleSlateDebuggerBreak()"
  },
  {
    "label": "AddInvalidation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInvalidation(const SWidget& Widget, EInvalidateWidgetReason Reason)"
  },
  {
    "label": "RemoveInvalidation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInvalidation(const SWidget& Widget)"
  },
  {
    "label": "AddBeginPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBeginPaint(const SWidget& Widget)"
  },
  {
    "label": "RemoveBeginPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBeginPaint(const SWidget& Widget)"
  },
  {
    "label": "AddEndPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEndPaint(const SWidget& Widget)"
  },
  {
    "label": "RemoveEndPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEndPaint(const SWidget& Widget)"
  },
  {
    "label": "RemoveAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAll()"
  },
  {
    "label": "Reason()",
    "kind": "Method",
    "detail": "Function (private : struct FInvalidationElement { FConsoleSlateDebuggerUtility::TSWidgetId WidgetId = FConsoleSlateDebuggerUtility::InvalidWidgetId ; EInvalidateWidgetReason)",
    "insertText": "Reason(EInvalidateWidgetReason)"
  },
  {
    "label": "AddInvalidation()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "AddInvalidation(FInvalidationElement Element)"
  },
  {
    "label": "AddBeginPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBeginPaint(FConsoleSlateDebuggerUtility::TSWidgetId Element)"
  },
  {
    "label": "AddEndPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEndPaint(FConsoleSlateDebuggerUtility::TSWidgetId Element)"
  },
  {
    "label": "HandleWidgetInvalidated()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleWidgetInvalidated(const FSlateDebuggingInvalidateArgs&)"
  },
  {
    "label": "HandleBeginWidgetPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBeginWidgetPaint(const SWidget* , const FPaintArgs& , const FGeometry& , const FSlateRect& , const FSlateWindowElementList& , int32)"
  },
  {
    "label": "HandleEndWidgetPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEndWidgetPaint(const SWidget* , const FSlateWindowElementList& , int32)"
  },
  {
    "label": "HandleBreakOnWidgetInvalidation()",
    "kind": "Method",
    "detail": "Function (private : TArray<FInvalidationElement> BreakOnInvalidationElements ; TArray<FConsoleSlateDebuggerUtility::TSWidgetId> BreakOnBeginPaintElements ; TArray<FConsoleSlateDebuggerUtility::TSWidgetId> BreakOnEndPaintElements ; private : void)",
    "insertText": "HandleBreakOnWidgetInvalidation(const TArray<FString>& Params)"
  },
  {
    "label": "HandleBeginWidgetPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBeginWidgetPaint(const TArray<FString>& Params)"
  },
  {
    "label": "HandleEndWidgetPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEndWidgetPaint(const TArray<FString>& Params)"
  },
  {
    "label": "ParseWidgetArgs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseWidgetArgs(FInvalidationElement& Out, const TArray<FString>& Params, bool bAllowInvalidationReason)"
  }
]