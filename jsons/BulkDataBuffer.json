[
  {
    "label": "FBulkDataBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBulkDataBuffer"
  },
  {
    "label": "FBulkDataBuffer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" template<DataType> class FBulkDataBuffer { public : using ViewType = TArrayView64<DataType> ;)",
    "insertText": "FBulkDataBuffer()"
  },
  {
    "label": "FBulkDataBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBulkDataBuffer(const FBulkDataBuffer& Other)"
  },
  {
    "label": "FBulkDataBuffer()",
    "kind": "Method",
    "detail": "Function (* this = Other ; })",
    "insertText": "FBulkDataBuffer(FBulkDataBuffer&& Other)"
  },
  {
    "label": "ViewType()",
    "kind": "Method",
    "detail": "Function (View = Other . View ; Other . View =)",
    "insertText": "ViewType()"
  },
  {
    "label": "FBulkDataBuffer()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBulkDataBuffer(DataType* InBuffer, int64 InNumberOfElements) : View(InBuffer, InNumberOfElements)"
  },
  {
    "label": "FreeBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeBuffer()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FBulkDataBuffer&)",
    "insertText": "operator(const FBulkDataBuffer& Other)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (const int64 BufferSize = Other . View .)",
    "insertText": "Num()"
  },
  {
    "label": "BufferCopy()",
    "kind": "Method",
    "detail": "Function (DataType*)",
    "insertText": "BufferCopy(DataType*)FMemory::Malloc(BufferSize)"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memcpy(BufferCopy, Other.View.GetData(), BufferSize)"
  },
  {
    "label": "ViewType()",
    "kind": "Method",
    "detail": "Function (View =)",
    "insertText": "ViewType(BufferCopy, BufferSize)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} return* this ; } FBulkDataBuffer&)",
    "insertText": "operator(FBulkDataBuffer&& Other)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (} return* this ; } void)",
    "insertText": "Empty()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset(DataType* InBuffer, uint64 InNumberOfElements)"
  },
  {
    "label": "ViewType()",
    "kind": "Method",
    "detail": "Function (View =)",
    "insertText": "ViewType(InBuffer, InNumberOfElements)"
  },
  {
    "label": "GetView()",
    "kind": "Method",
    "detail": "Function (} const ViewType&)",
    "insertText": "GetView()"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(View.GetData())"
  }
]