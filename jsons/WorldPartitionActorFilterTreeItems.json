[
  {
    "label": "FWorldPartitionActorFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionActorFilter"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "FWorldPartitionActorFilterItemBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionActorFilterItemBase"
  },
  {
    "label": "FWorldPartitionActorFilterItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionActorFilterItem"
  },
  {
    "label": "FTreeItemData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTreeItemData"
  },
  {
    "label": "FWorldPartitionActorFilterDataLayerItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionActorFilterDataLayerItem"
  },
  {
    "label": "FWorldPartitionActorFilterItemBase()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" SceneOutlinerFwd . h \" # include \" ISceneOutlinerTreeItem . h \" struct FWorldPartitionActorFilter ; class UClass ; struct FWorldPartitionActorFilterItemBase : ISceneOutlinerTreeItem {)",
    "insertText": "FWorldPartitionActorFilterItemBase(FSceneOutlinerTreeItemType InType) : ISceneOutlinerTreeItem(InType)"
  },
  {
    "label": "GetIconClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "GetIconClass()"
  },
  {
    "label": "GenerateLabelWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateLabelWidget(ISceneOutliner& Outliner, const STableRow<FSceneOutlinerTreeItemPtr>& InRow)"
  },
  {
    "label": "CanInteract()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanInteract()"
  },
  {
    "label": "FWorldPartitionActorFilterItem()",
    "kind": "Method",
    "detail": "Function (} const FWorldPartitionActorFilter* Filter ; } ;)",
    "insertText": "FWorldPartitionActorFilterItem(const FTreeItemData& InData)"
  },
  {
    "label": "ComputeTreeItemID()",
    "kind": "Method",
    "detail": "Function (FSceneOutlinerTreeItemID)",
    "insertText": "ComputeTreeItemID(const FWorldPartitionActorFilterItem::FTreeItemData& InData)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetDisplayString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDisplayString()"
  },
  {
    "label": "GetFilter()",
    "kind": "Method",
    "detail": "Function (const FWorldPartitionActorFilter*)",
    "insertText": "GetFilter()"
  },
  {
    "label": "FWorldPartitionActorFilterDataLayerItem()",
    "kind": "Method",
    "detail": "Function (} const FWorldPartitionActorFilter* Filter ; const FSoftObjectPath AssetPath ; } ;)",
    "insertText": "FWorldPartitionActorFilterDataLayerItem(const FTreeItemData& InData)"
  },
  {
    "label": "ComputeTreeItemID()",
    "kind": "Method",
    "detail": "Function (FSceneOutlinerTreeItemID)",
    "insertText": "ComputeTreeItemID(const FWorldPartitionActorFilterDataLayerItem::FTreeItemData& InData)"
  }
]