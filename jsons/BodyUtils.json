[
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "FMassProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassProperties"
  },
  {
    "label": "ComputeMassProperties()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / ShapeInstanceFwd . h \" # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" PhysicsInterfaceDeclaresCore . h \" struct FBodyInstance ; namespace Chaos { struct FMassProperties ; } namespace BodyUtils { Chaos::FMassProperties)",
    "insertText": "ComputeMassProperties(const FBodyInstance* OwningBodyInstance, const TArray<FPhysicsShapeHandle>& Shapes, const FTransform& MassModifierTransform, const bool bInertaScaleIncludeMass = false)"
  },
  {
    "label": "ComputeMassProperties()",
    "kind": "Method",
    "detail": "Function (Chaos::FMassProperties)",
    "insertText": "ComputeMassProperties(const FBodyInstance* OwningBodyInstance, const Chaos::FShapesArray& Shapes, const TArray<bool>& bContributesToMass, const FTransform& MassModifierTransform, const bool bInertaScaleIncludeMass = false)"
  }
]