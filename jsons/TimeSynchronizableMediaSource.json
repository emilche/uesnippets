[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UTimeSynchronizableMediaSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTimeSynchronizableMediaSource"
  },
  {
    "label": "UseTimeSynchronizatioOption()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BaseMediaSource . h \" # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" TimeSynchronizableMediaSource . generated . h \" class UObject ; namespace TimeSynchronizableMedia { FName)",
    "insertText": "UseTimeSynchronizatioOption(\"UseTimeSynchronization\")"
  },
  {
    "label": "FrameDelay()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "FrameDelay(\"FrameDelay\")"
  },
  {
    "label": "TimeDelay()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "TimeDelay(\"TimeDelay\")"
  },
  {
    "label": "AutoDetect()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "AutoDetect(\"AutoDetect\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UCLASS(Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: MEDIAASSETS_API UTimeSynchronizableMediaSource()"
  },
  {
    "label": "GetMediaOption()",
    "kind": "Method",
    "detail": "Function (public : using Super::GetMediaOption ; bool)",
    "insertText": "GetMediaOption(const FName& Key, bool DefaultValue)"
  },
  {
    "label": "GetMediaOption()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetMediaOption(const FName& Key, int64 DefaultValue)"
  },
  {
    "label": "GetMediaOption()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetMediaOption(const FName& Key, double DefaultValue)"
  },
  {
    "label": "GetMediaOption()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetMediaOption(const FName& Key, const FString& DefaultValue)"
  },
  {
    "label": "HasMediaOption()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMediaOption(const FName& Key)"
  },
  {
    "label": "SupportsFormatAutoDetection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsFormatAutoDetection()"
  }
]