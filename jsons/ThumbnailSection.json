[
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "FSequencerSectionPainter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerSectionPainter"
  },
  {
    "label": "FTrackEditorThumbnailPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackEditorThumbnailPool"
  },
  {
    "label": "ISectionLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISectionLayoutBuilder"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FThumbnailCameraSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThumbnailCameraSettings"
  },
  {
    "label": "MOVIESCENETOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENETOOLS_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FThumbnailSection()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" Widgets / SWidget . h \" # include \" ISequencer . h \" # include \" ISequencerSection . h \" # include \" TrackEditorThumbnail / TrackEditorThumbnail . h \" class FLevelEditorViewportClient ; class FMenuBuilder ; class FSceneViewport ; class FSequencerSectionPainter ; class FTrackEditorThumbnailPool ; class ISectionLayoutBuilder ; struct FSlateBrush ; struct FThumbnailCameraSettings { float AspectRatio ; } ; class FThumbnailSection : public ISequencerSection,public TSharedFromThis<FThumbnailSection> { public :)",
    "insertText": "FThumbnailSection(TSharedPtr<ISequencer> InSequencer, TSharedPtr<FTrackEditorThumbnailPool> InThumbnailPool, IViewportThumbnailClient* InViewportThumbanilClient, UMovieSceneSection& InSection)"
  },
  {
    "label": "FThumbnailSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FThumbnailSection(TSharedPtr<ISequencer> InSequencer, TSharedPtr<FTrackEditorThumbnailPool> InThumbnailPool, ICustomThumbnailClient* InCustomThumbnailClient, UMovieSceneSection& InSection)"
  },
  {
    "label": "FThumbnailSection()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FThumbnailSection()"
  },
  {
    "label": "GetSequencerWidget()",
    "kind": "Method",
    "detail": "Function (public : TSharedRef<SWidget>)",
    "insertText": "GetSequencerWidget()"
  },
  {
    "label": "EnterRename()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EnterRename()"
  },
  {
    "label": "CanRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRename()"
  },
  {
    "label": "HandleThumbnailTextBlockTextCommitted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HandleThumbnailTextBlockTextCommitted(const FText& NewThumbnailName, ETextCommit::Type CommitType)"
  },
  {
    "label": "SetSingleTime()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "SetSingleTime(double GlobalTime)"
  },
  {
    "label": "BuildSectionContextMenu()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "BuildSectionContextMenu(FMenuBuilder& MenuBuilder, const FGuid& ObjectBinding)"
  },
  {
    "label": "BuildSectionSidebarMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildSectionSidebarMenu(FMenuBuilder& MenuBuilder, const FGuid& ObjectBinding)"
  },
  {
    "label": "GenerateSectionWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateSectionWidget()"
  },
  {
    "label": "GetSectionGripSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetSectionGripSize()"
  },
  {
    "label": "GetSectionHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetSectionHeight(const UE::Sequencer::FViewDensityInfo& ViewDensity)"
  },
  {
    "label": "GetSectionObject()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "GetSectionObject()"
  },
  {
    "label": "GetSectionTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSectionTitle()"
  },
  {
    "label": "OnPaintSection()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaintSection(FSequencerSectionPainter& InPainter)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const FGeometry& ParentGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "RedrawThumbnails()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RedrawThumbnails()"
  },
  {
    "label": "GetVisibleRange()",
    "kind": "Method",
    "detail": "Function (TRange<double>)",
    "insertText": "GetVisibleRange()"
  },
  {
    "label": "GetTotalRange()",
    "kind": "Method",
    "detail": "Function (TRange<double>)",
    "insertText": "GetTotalRange()"
  },
  {
    "label": "GetRenameVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetRenameVisibility()"
  },
  {
    "label": "BuildThumbnailsMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildThumbnailsMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "FViewportThumbnailSection()",
    "kind": "Method",
    "detail": "Function (protected : UMovieSceneSection* Section ; TWeakPtr<ISequencer> SequencerPtr ; FTrackEditorThumbnailCache ThumbnailCache ; EMovieScenePlayerStatus::Type SavedPlaybackStatus ; TSharedPtr<SInlineEditableTextBlock> NameWidget ; const FSlateBrush* WhiteBrush ; ESlateDrawEffect AdditionalDrawEffect ; enum class ETimeSpace { Global,Local,} ; ETimeSpace TimeSpace ; FDelegateHandle RedrawThumbnailDelegateHandle ; } ; class FViewportThumbnailSection : public FThumbnailSection,public IViewportThumbnailClient { public :)",
    "insertText": "FViewportThumbnailSection(TSharedPtr<ISequencer> InSequencer, TSharedPtr<FTrackEditorThumbnailPool> InThumbnailPool, UMovieSceneSection& InSection)"
  },
  {
    "label": "PreDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreDraw(FTrackEditorThumbnail& Thumbnail)"
  },
  {
    "label": "PostDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDraw(FTrackEditorThumbnail& Thumbnail)"
  }
]