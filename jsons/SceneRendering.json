[
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FSceneViewState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewState"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FILCUpdatePrimTaskData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FILCUpdatePrimTaskData"
  },
  {
    "label": "FPostprocessContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPostprocessContext"
  },
  {
    "label": "FRayTracingLightGrid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingLightGrid"
  },
  {
    "label": "FRayTracingDecals",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingDecals"
  },
  {
    "label": "FRayTracingLocalShaderBindingWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingLocalShaderBindingWriter"
  },
  {
    "label": "FVirtualShadowMapClipmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapClipmap"
  },
  {
    "label": "FShadowProjectionPassParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShadowProjectionPassParameters"
  },
  {
    "label": "FSceneTextureShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneTextureShaderParameters"
  },
  {
    "label": "FLumenSceneData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenSceneData"
  },
  {
    "label": "FShadowSceneRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShadowSceneRenderer"
  },
  {
    "label": "FGlobalShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderMap"
  },
  {
    "label": "FVirtualTextureUpdater",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureUpdater"
  },
  {
    "label": "FExponentialHeightFogSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExponentialHeightFogSceneInfo"
  },
  {
    "label": "FCloudRenderContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCloudRenderContext"
  },
  {
    "label": "FSceneWithoutWaterTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneWithoutWaterTextures"
  },
  {
    "label": "FHairStrandsVisibilityViews",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsVisibilityViews"
  },
  {
    "label": "FSortedLightSetSceneInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortedLightSetSceneInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTransientLightFunctionTextureAtlas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransientLightFunctionTextureAtlas"
  },
  {
    "label": "FSceneTexturesConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneTexturesConfig"
  },
  {
    "label": "FMinimalSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalSceneTextures"
  },
  {
    "label": "FSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneTextures"
  },
  {
    "label": "FCustomDepthTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomDepthTextures"
  },
  {
    "label": "FDynamicShadowsTaskData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicShadowsTaskData"
  },
  {
    "label": "FAtmosphereUniformShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAtmosphereUniformShaderParameters"
  },
  {
    "label": "FSkyAtmosphereRenderContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkyAtmosphereRenderContext"
  },
  {
    "label": "FTexture2DResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture2DResource"
  },
  {
    "label": "FSimpleLightArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleLightArray"
  },
  {
    "label": "FScreenMessageWriter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScreenMessageWriter"
  },
  {
    "label": "FVolumetricFogIntegrationParameterData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVolumetricFogIntegrationParameterData"
  },
  {
    "label": "FLumenHardwareRayTracingUniformBufferParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenHardwareRayTracingUniformBufferParameters"
  },
  {
    "label": "FDBufferTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDBufferTextures"
  },
  {
    "label": "FInstanceDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceDraw"
  },
  {
    "label": "FMobileCSMVisibilityInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMobileCSMVisibilityInfo"
  },
  {
    "label": "FMobileCSMSubjectPrimitives",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMobileCSMSubjectPrimitives"
  },
  {
    "label": "FVisibleLightViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVisibleLightViewInfo"
  },
  {
    "label": "FVisibleLightInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVisibleLightInfo"
  },
  {
    "label": "FTranslucenyPrimCount",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTranslucenyPrimCount"
  },
  {
    "label": "FOcclusionPrimitive",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOcclusionPrimitive"
  },
  {
    "label": "FFrameBasedOcclusionQueryPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFrameBasedOcclusionQueryPool"
  },
  {
    "label": "FFrameOcclusionQueries",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameOcclusionQueries"
  },
  {
    "label": "FOcclusionQueryBatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOcclusionQueryBatcher"
  },
  {
    "label": "FSceneViewState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewState"
  },
  {
    "label": "FOcclusionBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOcclusionBatch"
  },
  {
    "label": "FHZBOcclusionTester",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHZBOcclusionTester"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "EVolumeUpdateType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EVolumeUpdateType"
  },
  {
    "label": "FVolumeUpdateRegion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVolumeUpdateRegion"
  },
  {
    "label": "FClipmapUpdateBounds",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClipmapUpdateBounds"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGlobalDistanceFieldClipmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalDistanceFieldClipmap"
  },
  {
    "label": "FGlobalDistanceFieldInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalDistanceFieldInfo"
  },
  {
    "label": "FForwardLightingViewResources",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FForwardLightingViewResources"
  },
  {
    "label": "FTransientLightFunctionTextureAtlasTile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransientLightFunctionTextureAtlasTile"
  },
  {
    "label": "FVolumetricFogLocalLightFunctionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVolumetricFogLocalLightFunctionInfo"
  },
  {
    "label": "FVolumetricFogViewResources",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVolumetricFogViewResources"
  },
  {
    "label": "FVolumetricMeshBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVolumetricMeshBatch"
  },
  {
    "label": "FSkyMeshBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkyMeshBatch"
  },
  {
    "label": "FSortedTrianglesMeshBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortedTrianglesMeshBatch"
  },
  {
    "label": "FTemporalAAHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTemporalAAHistory"
  },
  {
    "label": "FTSRHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTSRHistory"
  },
  {
    "label": "FScreenSpaceDenoiserHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScreenSpaceDenoiserHistory"
  },
  {
    "label": "FGTAOTAAHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGTAOTAAHistory"
  },
  {
    "label": "FPreviousViewInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreviousViewInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRayTracingCullingParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingCullingParameters"
  },
  {
    "label": "FPrimitiveInstanceRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveInstanceRange"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FShadowMapRenderTargetsRefCounted",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShadowMapRenderTargetsRefCounted"
  },
  {
    "label": "FSortedShadowMapAtlas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortedShadowMapAtlas"
  },
  {
    "label": "FSortedShadowMaps",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortedShadowMaps"
  },
  {
    "label": "FOcclusionSubmittedFenceState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOcclusionSubmittedFenceState"
  },
  {
    "label": "FViewFamilyInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewFamilyInfo"
  },
  {
    "label": "FMinimalSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalSceneTextures"
  },
  {
    "label": "FSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneTextures"
  },
  {
    "label": "FComputeLightGridOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComputeLightGridOutput"
  },
  {
    "label": "FSceneRendererBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneRendererBase"
  },
  {
    "label": "FSceneRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneRenderer"
  },
  {
    "label": "FCustomRenderPassInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomRenderPassInfo"
  },
  {
    "label": "FCrossGPUTransfersDeferred",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCrossGPUTransfersDeferred"
  },
  {
    "label": "FVolumetricFogIntegrationParameterData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVolumetricFogIntegrationParameterData"
  },
  {
    "label": "FCrossGPUTransfersDeferred",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCrossGPUTransfersDeferred"
  },
  {
    "label": "FFXSystemInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystemInterface"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGatherShadowPrimitivesPrepareTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGatherShadowPrimitivesPrepareTask"
  },
  {
    "label": "FPlanarReflectionSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlanarReflectionSceneProxy"
  },
  {
    "label": "FSkyAtmospherePendingRDGResources",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkyAtmospherePendingRDGResources"
  },
  {
    "label": "FVisibilityTaskData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVisibilityTaskData"
  },
  {
    "label": "FRendererModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRendererModule"
  },
  {
    "label": "FForwardScreenSpaceShadowMaskTextureMobileOutputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForwardScreenSpaceShadowMaskTextureMobileOutputs"
  },
  {
    "label": "FMobileSceneRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMobileSceneRenderer"
  },
  {
    "label": "FInitViewTaskDatas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitViewTaskDatas"
  },
  {
    "label": "FMobileRenderPassParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMobileRenderPassParameters"
  },
  {
    "label": "FMobileRenderPassParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMobileRenderPassParameters"
  },
  {
    "label": "FRenderViewContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderViewContext"
  },
  {
    "label": "FMobileRenderPassParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMobileRenderPassParameters"
  },
  {
    "label": "FRenderViewContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderViewContext"
  },
  {
    "label": "FInstanceCullingDrawParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceCullingDrawParams"
  },
  {
    "label": "FFastVramConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFastVramConfig"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ShouldUseStereoLumenOptimizations()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldUseStereoLumenOptimizations()"
  },
  {
    "label": "AdvanceFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceFrame(uint32 InOcclusionFrameCounter, uint32 InNumBufferedFrames, bool bStereoRoundRobin)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush(FRHICommandList& RHICmdList)"
  },
  {
    "label": "FHZBOcclusionTester()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FHZBOcclusionTester()"
  },
  {
    "label": "AddBounds()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AddBounds( const FVector& BoundsOrigin, const FVector& BoundsExtent )"
  },
  {
    "label": "Submit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Submit(FRDGBuilder& GraphBuilder, const FViewInfo& View)"
  },
  {
    "label": "MapResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapResults(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "UnmapResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnmapResults(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "SetValidFrameNumber()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValidFrameNumber(uint32 FrameNumber)"
  },
  {
    "label": "SetInvalidFrameNumber()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInvalidFrameNumber()"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dispatch(bool bHighPriority = false)"
  },
  {
    "label": "FParallelCommandListSet()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FParallelCommandListSet(const FRDGPass* InPass, const FViewInfo& InView, FRHICommandListImmediate& InParentCmdList, bool bHasRenderPasses = true)"
  },
  {
    "label": "AddParallelCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParallelCommandList(FRHICommandList* CmdList)"
  },
  {
    "label": "UpdateParameterData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateParameterData(float MaxOcclusionDistance, bool bLumenEnabled, float LumenSceneViewDistance, FVector PreViewTranslation)"
  },
  {
    "label": "CreateDummyForwardLightUniformBuffer()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FForwardLightData>)",
    "insertText": "CreateDummyForwardLightUniformBuffer(FRDGBuilder& GraphBuilder, EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "SetDummyForwardLightUniformBufferOnViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDummyForwardLightUniformBufferOnViews(FRDGBuilder& GraphBuilder, EShaderPlatform ShaderPlatform, TArray<FViewInfo>& Views)"
  },
  {
    "label": "SetupVolumetricFogGlobalData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupVolumetricFogGlobalData(const FViewInfo& View, FVolumetricFogGlobalData& Parameters)"
  },
  {
    "label": "GetMaxNumReflectionCaptures()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxNumReflectionCaptures(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FViewInfo& View)"
  },
  {
    "label": "FViewInfo()",
    "kind": "Method",
    "detail": "Function (RENDERER_API)",
    "insertText": "FViewInfo(const FSceneViewInitOptions& InitOptions)"
  },
  {
    "label": "FViewInfo()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FViewInfo(const FSceneView* InView)"
  },
  {
    "label": "UpdatePreExposure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePreExposure()"
  },
  {
    "label": "InitRHIResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHIResources(uint32 OverrideNumMSAASamples = 0)"
  },
  {
    "label": "CreateViewUniformBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateViewUniformBuffers(const FViewUniformShaderParameters& Params)"
  },
  {
    "label": "IsDistanceCulled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDistanceCulled(float DistanceSquared, float MinDrawDistance, float InMaxDrawDistance, const FPrimitiveSceneInfo* PrimitiveSceneInfo)"
  },
  {
    "label": "UpdatePrimitiveFadingState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdatePrimitiveFadingState(const FPrimitiveSceneInfo* PrimitiveSceneInfo, bool bFadingIn)"
  },
  {
    "label": "DestroyAllSnapshots()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAllSnapshots()"
  },
  {
    "label": "WaitForTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForTasks()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "FViewFamilyInfo()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FViewFamilyInfo(const FSceneViewFamily& InViewFamily)"
  },
  {
    "label": "FViewFamilyInfo()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FViewFamilyInfo(const FSceneViewFamily::ConstructionValues& CVS, const FViewFamilyInfo& MainViewFamily)"
  },
  {
    "label": "FSceneRenderer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSceneRenderer(const FSceneViewFamily* InViewFamily, FHitProxyConsumer* HitProxyConsumer)"
  },
  {
    "label": "RenderThreadBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderThreadBegin(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "RenderThreadEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderThreadEnd(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "RenderThreadBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderThreadBegin(FRHICommandListImmediate& RHICmdList, const TArray<FSceneRenderer*>& SceneRenderers)"
  },
  {
    "label": "RenderThreadEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderThreadEnd(FRHICommandListImmediate& RHICmdList, const TArray<FSceneRenderer*>& SceneRenderers)"
  },
  {
    "label": "CreateSceneRenderers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSceneRenderers(TArrayView<const FSceneViewFamily*> InViewFamilies, FHitProxyConsumer* HitProxyConsumer, TArray<FSceneRenderer*>& OutSceneRenderers)"
  },
  {
    "label": "PrepareViewRectsForRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareViewRectsForRendering(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "ComputeGPUMasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeGPUMasks(FRHICommandListImmediate* RHICmdList)"
  },
  {
    "label": "PreallocateCrossGPUFences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreallocateCrossGPUFences(const TArray<FSceneRenderer*>& SceneRenderers)"
  },
  {
    "label": "DoCrossGPUTransfers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoCrossGPUTransfers(FRDGBuilder& GraphBuilder, FRDGTextureRef ViewFamilyTexture, TArrayView<FViewInfo> InViews, bool bCrossGPUTransferFencesDefer, FRHIGPUMask RenderTargetGPUMask, class FCrossGPUTransfersDeferred* TransfersDeferred)"
  },
  {
    "label": "FlushCrossGPUTransfers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCrossGPUTransfers(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "FlushCrossGPUFences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCrossGPUFences(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "FenceOcclusionTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FenceOcclusionTests(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "WaitOcclusionTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitOcclusionTests(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "ShouldCompositeEditorPrimitives()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompositeEditorPrimitives(const FViewInfo& View)"
  },
  {
    "label": "ShouldCompositeDebugPrimitivesInPostProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompositeDebugPrimitivesInPostProcess(const FViewInfo& View)"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUp(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "WaitForCleanUpTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForCleanUpTasks(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "ApplyResolutionFraction()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "ApplyResolutionFraction(\n\t\tconst FSceneViewFamily& ViewFamily, const FIntPoint& UnscaledViewSize, float ResolutionFraction)"
  },
  {
    "label": "QuantizeViewRectMin()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "QuantizeViewRectMin(const FIntPoint& ViewRectMin)"
  },
  {
    "label": "GetDesiredInternalBufferSize()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetDesiredInternalBufferSize(const FSceneViewFamily& ViewFamily)"
  },
  {
    "label": "GetRefractionQuality()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetRefractionQuality(const FSceneViewFamily& ViewFamily)"
  },
  {
    "label": "RenderSkyAtmosphereInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderSkyAtmosphereInternal(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextureShaderParameters& SceneTextures,\n\t\tFSkyAtmosphereRenderContext& SkyRenderContext)"
  },
  {
    "label": "RenderVolumetricCloudsInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderVolumetricCloudsInternal(FRDGBuilder& GraphBuilder, FCloudRenderContext& CloudRC, FInstanceCullingManager& InstanceCullingManager)"
  },
  {
    "label": "SetStereoViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStereoViewport(FRHICommandList& RHICmdList, const FViewInfo& View, float ViewportScale = 1.0f)"
  },
  {
    "label": "UpdateGlobalDistanceFieldObjectBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGlobalDistanceFieldObjectBuffers(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "UpdateGlobalHeightFieldObjectBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGlobalHeightFieldObjectBuffers(FRDGBuilder& GraphBuilder, const TArray<uint32>& IndicesToUpdateInHeightFieldObjectBuffers)"
  },
  {
    "label": "ProcessPendingHeightFieldPrimitiveAddAndRemoveOps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPendingHeightFieldPrimitiveAddAndRemoveOps(TArray<uint32>& IndicesToUpdateInHeightFieldObjectBuffers)"
  },
  {
    "label": "PrepareDistanceFieldScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareDistanceFieldScene(FRDGBuilder& GraphBuilder, FRDGExternalAccessQueue& ExternalAccessQueue)"
  },
  {
    "label": "VoxelizeFogVolumePrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VoxelizeFogVolumePrimitives(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FViewInfo& View,\n\t\tconst FVolumetricFogIntegrationParameterData& IntegrationData,\n\t\tFIntVector VolumetricFogGridSize,\n\t\tFVector GridZParams,\n\t\tfloat VolumetricFogDistance,\n\t\tbool bVoxelizeEmissive)"
  },
  {
    "label": "RenderLightFunctionForVolumetricFog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLightFunctionForVolumetricFog(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFViewInfo& View,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tFIntVector VolumetricFogGridSize,\n\t\tfloat VolumetricFogMaxDistance,\n\t\tFLightSceneInfo* DirectionalLightSceneInfo,\n\t\tFMatrix44f& OutLightFunctionTranslatedWorldToShadow,\n\t\tFRDGTexture*& OutLightFunctionTexture)"
  },
  {
    "label": "RenderLocalLightsForVolumetricFog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLocalLightsForVolumetricFog(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFViewInfo& View, int32 ViewIndex,\n\t\tbool bUseTemporalReprojection,\n\t\tconst struct FVolumetricFogIntegrationParameterData& IntegrationData,\n\t\tconst FExponentialHeightFogSceneInfo& FogInfo,\n\t\tFIntVector VolumetricFogGridSize,\n\t\tFVector GridZParams,\n\t\tconst FRDGTextureDesc& VolumeDesc,\n\t\tFRDGTextureRef ConservativeDepthTexture,\n\t\tTConstArrayView<const FLightSceneInfo*> LightsToInject,\n\t\tTConstArrayView<const FLightSceneInfo*> RayTracedLightsToInject,\n\t\tFRDGTexture*& OutLocalShadowedLightScattering)"
  },
  {
    "label": "SetupVolumetricFog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupVolumetricFog()"
  },
  {
    "label": "ComputeVolumetricFog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeVolumetricFog(FRDGBuilder& GraphBuilder, const FSceneTextures& SceneTextures)"
  },
  {
    "label": "DrawGPUSkinCacheVisualizationInfoText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawGPUSkinCacheVisualizationInfoText()"
  },
  {
    "label": "GetLightNameForDrawEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLightNameForDrawEvent(const FLightSceneProxy* LightProxy, FString& LightNameWithLevel)"
  },
  {
    "label": "FinishInitDynamicShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishInitDynamicShadows(FRDGBuilder& GraphBuilder, FDynamicShadowsTaskData* TaskData)"
  },
  {
    "label": "FinishDynamicShadowMeshPassSetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishDynamicShadowMeshPassSetup(FRDGBuilder& GraphBuilder, FDynamicShadowsTaskData* TaskData)"
  },
  {
    "label": "CreateDynamicShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDynamicShadows(FDynamicShadowsTaskData& TaskData)"
  },
  {
    "label": "FilterDynamicShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterDynamicShadows(FDynamicShadowsTaskData& TaskData)"
  },
  {
    "label": "SetupMeshPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupMeshPass(FViewInfo& View, FExclusiveDepthStencil::Type BasePassDepthStencilAccess, FViewCommands& ViewCommands, FInstanceCullingManager& InstanceCullingManager)"
  },
  {
    "label": "RenderShadowProjections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderShadowProjections(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFRDGTextureRef OutputTexture,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FLightSceneProxy* LightSceneProxy,\n\t\tTArrayView<const FProjectedShadowInfo* const> Shadows,\n\t\tbool bSubPixelShadow,\n\t\tbool bProjectingForForwardShading)"
  },
  {
    "label": "RenderShadowProjections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderShadowProjections(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tFRDGTextureRef ScreenShadowMaskTexture,\n\t\tFRDGTextureRef ScreenShadowMaskSubPixelTexture,\n\t\tconst FLightSceneInfo* LightSceneInfo,\n\t\tbool bProjectingForForwardShading)"
  },
  {
    "label": "GetCachedPreshadow()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FProjectedShadowInfo>)",
    "insertText": "GetCachedPreshadow(\n\t\tconst FLightPrimitiveInteraction* InParentInteraction,\n\t\tconst FProjectedShadowInitializer& Initializer,\n\t\tconst FBoxSphereBounds& Bounds,\n\t\tuint32 InResolutionX)"
  },
  {
    "label": "CreatePerObjectProjectedShadow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePerObjectProjectedShadow(\n\t\tFDynamicShadowsTaskData& TaskData,\n\t\tFLightPrimitiveInteraction* Interaction,\n\t\tbool bCreateTranslucentObjectShadow,\n\t\tbool bCreateInsetObjectShadow,\n\t\tconst TArray<FProjectedShadowInfo*, SceneRenderingAllocator>& ViewDependentWholeSceneShadows,\n\t\tTArray<FProjectedShadowInfo*, SceneRenderingAllocator>& OutPreShadows)"
  },
  {
    "label": "SetupInteractionShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupInteractionShadows(\n\t\tFDynamicShadowsTaskData& TaskData,\n\t\tFLightPrimitiveInteraction* Interaction,\n\t\tFVisibleLightInfo& VisibleLightInfo,\n\t\tbool bStaticSceneOnly,\n\t\tconst TArray<FProjectedShadowInfo*, SceneRenderingAllocator>& ViewDependentWholeSceneShadows,\n\t\tTArray<FProjectedShadowInfo*, SceneRenderingAllocator>& PreShadows)"
  },
  {
    "label": "AddViewDependentWholeSceneShadowsForView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddViewDependentWholeSceneShadowsForView(\n\t\tTArray<FProjectedShadowInfo*, SceneRenderingAllocator>& ShadowInfos, \n\t\tTArray<FProjectedShadowInfo*, SceneRenderingAllocator>& ShadowInfosThatNeedCulling, \n\t\tFVisibleLightInfo& VisibleLightInfo, \n\t\tFLightSceneInfo& LightSceneInfo,\n\t\tint64 CachedShadowMapsSize,\n\t\tuint32& NumCSMCachesUpdatedThisFrame)"
  },
  {
    "label": "AllocateShadowDepthTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateShadowDepthTargets(FDynamicShadowsTaskData& TaskData)"
  },
  {
    "label": "AllocateAtlasedShadowDepthTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateAtlasedShadowDepthTargets(FRHICommandListBase& RHICmdList, TConstArrayView<FProjectedShadowInfo*> Shadows, TArray<FSortedShadowMapAtlas,SceneRenderingAllocator>& OutAtlases)"
  },
  {
    "label": "AllocateCachedShadowDepthTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateCachedShadowDepthTargets(FRHICommandListBase& RHICmdList, TConstArrayView<FProjectedShadowInfo*> CachedShadows)"
  },
  {
    "label": "AllocateCSMDepthTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateCSMDepthTargets(FRHICommandListBase& RHICmdList, TConstArrayView<FProjectedShadowInfo*> WholeSceneDirectionalShadows, TArray<FSortedShadowMapAtlas, SceneRenderingAllocator>& OutAtlases)"
  },
  {
    "label": "AllocateOnePassPointLightDepthTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateOnePassPointLightDepthTargets(FRHICommandListBase& RHICmdList, TConstArrayView<FProjectedShadowInfo*> WholeScenePointShadows)"
  },
  {
    "label": "AllocateTranslucentShadowDepthTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateTranslucentShadowDepthTargets(FRHICommandListBase& RHICmdList, TConstArrayView<FProjectedShadowInfo*> TranslucentShadows)"
  },
  {
    "label": "AllocateMobileCSMAndSpotLightShadowDepthTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateMobileCSMAndSpotLightShadowDepthTargets(FRHICommandListBase& RHICmdList, TConstArrayView<FProjectedShadowInfo*> MobileCSMAndSpotLightShadows)"
  },
  {
    "label": "BeginGatherShadowPrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginGatherShadowPrimitives(FDynamicShadowsTaskData* TaskData, IVisibilityTaskData* VisibilityTaskData)"
  },
  {
    "label": "FinishGatherShadowPrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishGatherShadowPrimitives(FDynamicShadowsTaskData* TaskData)"
  },
  {
    "label": "RenderShadowDepthMaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderShadowDepthMaps(FRDGBuilder& GraphBuilder, FDynamicShadowsTaskData* DynamicShadowsTaskData, FInstanceCullingManager& InstanceCullingManager, FRDGExternalAccessQueue& ExternalAccessQueue)"
  },
  {
    "label": "RenderVirtualShadowMaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderVirtualShadowMaps(FRDGBuilder& GraphBuilder, bool bNaniteEnabled)"
  },
  {
    "label": "RenderShadowDepthMapAtlases()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderShadowDepthMapAtlases(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "CreateWholeSceneProjectedShadow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateWholeSceneProjectedShadow(FDynamicShadowsTaskData& TaskData, FLightSceneInfo* LightSceneInfo, int64 CachedShadowMapsSize, uint32& NumPointShadowCachesUpdatedThisFrame, uint32& NumSpotShadowCachesUpdatedThisFrame)"
  },
  {
    "label": "UpdatePreshadowCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePreshadowCache()"
  },
  {
    "label": "GatherSimpleLights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherSimpleLights(const FSceneViewFamily& ViewFamily, const TArray<FViewInfo>& Views, FSimpleLightArray& SimpleLights)"
  },
  {
    "label": "InitProjectedShadowVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitProjectedShadowVisibility(FDynamicShadowsTaskData& TaskData)"
  },
  {
    "label": "DrawDebugShadowFrustum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugShadowFrustum(FViewInfo& View, FProjectedShadowInfo& ProjectedShadowInfo)"
  },
  {
    "label": "GatherShadowDynamicMeshElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherShadowDynamicMeshElements(FDynamicShadowsTaskData& TaskData)"
  },
  {
    "label": "PreVisibilityFrameSetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreVisibilityFrameSetup(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "GatherReflectionCaptureLightMeshElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherReflectionCaptureLightMeshElements()"
  },
  {
    "label": "PostVisibilityFrameSetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostVisibilityFrameSetup(FILCUpdatePrimTaskData*& OutILCTaskData)"
  },
  {
    "label": "InitFogConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFogConstants()"
  },
  {
    "label": "OnRenderFinish()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenderFinish(FRDGBuilder& GraphBuilder, FRDGTextureRef ViewFamilyTexture)"
  },
  {
    "label": "RenderCustomDepthPass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenderCustomDepthPass(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFCustomDepthTextures& CustomDepthTextures,\n\t\tconst FSceneTextureShaderParameters& SceneTextures,\n\t\tTConstArrayView<Nanite::FRasterResults> PrimaryNaniteRasterResults,\n\t\tTConstArrayView<Nanite::FPackedView> PrimaryNaniteViews)"
  },
  {
    "label": "UpdatePrimitiveIndirectLightingCacheBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrimitiveIndirectLightingCacheBuffers(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "RenderPlanarReflection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderPlanarReflection(class FPlanarReflectionSceneProxy* ReflectionSceneProxy)"
  },
  {
    "label": "InitSkyAtmosphereForViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSkyAtmosphereForViews(FRHICommandListImmediate& RHICmdList, FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "RenderSkyAtmosphereLookUpTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderSkyAtmosphereLookUpTables(FRDGBuilder& GraphBuilder, class FSkyAtmospherePendingRDGResources& PendingRDGResources)"
  },
  {
    "label": "RenderSkyAtmosphere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderSkyAtmosphere(FRDGBuilder& GraphBuilder, const FMinimalSceneTextures& SceneTextures)"
  },
  {
    "label": "InitVolumetricCloudsForViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitVolumetricCloudsForViews(FRDGBuilder& GraphBuilder, bool bShouldRenderVolumetricCloud, FInstanceCullingManager& InstanceCullingManager)"
  },
  {
    "label": "RenderVolumetricCloud()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenderVolumetricCloud(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tbool bSkipVolumetricRenderTarget,\n\t\tbool bSkipPerPixelTracing,\n\t\tbool bAccumulateAlphaHoldOut,\n\t\tFRDGTextureRef HalfResolutionDepthCheckerboardMinMaxTexture,\n\t\tFRDGTextureRef QuarterResolutionDepthMinMaxTexture,\n\t\tbool bAsyncCompute,\n\t\tFInstanceCullingManager& InstanceCullingManager)"
  },
  {
    "label": "ShouldRenderSkyAtmosphereEditorNotifications()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderSkyAtmosphereEditorNotifications(TArrayView<FViewInfo> Views)"
  },
  {
    "label": "GatherAndSortLights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherAndSortLights(FSortedLightSetSceneInfo& OutSortedLights, bool bShadowedLightsInClustered = false)"
  },
  {
    "label": "UpdateLightFunctionAtlasTaskFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLightFunctionAtlasTaskFunction()"
  },
  {
    "label": "ComputeLightGrid()",
    "kind": "Method",
    "detail": "Function (FComputeLightGridOutput)",
    "insertText": "ComputeLightGrid(FRDGBuilder& GraphBuilder, bool bCullLightsToGrid, const FSortedLightSetSceneInfo& SortedLightSet)"
  },
  {
    "label": "SetupSceneReflectionCaptureBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupSceneReflectionCaptureBuffer(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "RenderVelocities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderVelocities(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tTArrayView<FViewInfo> InViews,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tEVelocityPass VelocityPass,\n\t\tbool bForceVelocity)"
  },
  {
    "label": "RenderMeshDistanceFieldVisualization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderMeshDistanceFieldVisualization(FRDGBuilder& GraphBuilder, const FMinimalSceneTextures& SceneTextures)"
  },
  {
    "label": "DestroySplitScreenDebugViewFamily()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySplitScreenDebugViewFamily(FSceneViewFamily* Family)"
  },
  {
    "label": "ComputeLightVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeLightVisibility()"
  },
  {
    "label": "ComputeFamilySize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeFamilySize()"
  },
  {
    "label": "SetupMeshPasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupMeshPasses(IVisibilityTaskData& TaskData, FExclusiveDepthStencil::Type BasePassDepthStencilAccess, FInstanceCullingManager& InstanceCullingManager)"
  },
  {
    "label": "PrepareViewStateForVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareViewStateForVisibility(const FSceneTexturesConfig& SceneTexturesConfig)"
  },
  {
    "label": "Scope()",
    "kind": "Method",
    "detail": "Function (FOptionalTaskTagScope)",
    "insertText": "Scope(ETaskTag::EParallelRenderingThread)"
  },
  {
    "label": "Scope()",
    "kind": "Method",
    "detail": "Function (FOptionalTaskTagScope)",
    "insertText": "Scope(ETaskTag::EParallelRenderingThread)"
  },
  {
    "label": "Scope()",
    "kind": "Method",
    "detail": "Function (FOptionalTaskTagScope)",
    "insertText": "Scope(ETaskTag::EParallelRenderingThread)"
  },
  {
    "label": "Lambda()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Lambda()"
  },
  {
    "label": "FMobileSceneRenderer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMobileSceneRenderer(const FSceneViewFamily* InViewFamily, FHitProxyConsumer* HitProxyConsumer)"
  },
  {
    "label": "RequiresMultiPass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresMultiPass(int32 NumMSAASamples, EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "PrepareViewVisibilityLists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareViewVisibilityLists()"
  },
  {
    "label": "BuildCSMVisibilityState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildCSMVisibilityState(FLightSceneInfo* LightSceneInfo)"
  },
  {
    "label": "InitViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitViews(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFSceneTexturesConfig& SceneTexturesConfig,\n\t\tFInstanceCullingManager& InstanceCullingManager,\n\t\tFVirtualTextureUpdater* VirtualTextureUpdater,\n\t\tFInitViewTaskDatas& TaskDatas)"
  },
  {
    "label": "RenderPrePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderPrePass(FRHICommandList& RHICmdList, const FViewInfo& View, const FInstanceCullingDrawParams* InstanceCullingDrawParams)"
  },
  {
    "label": "RenderMaskedPrePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderMaskedPrePass(FRHICommandList& RHICmdList, const FViewInfo& View)"
  },
  {
    "label": "RenderFullDepthPrepass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderFullDepthPrepass(FRDGBuilder& GraphBuilder, TArrayView<FViewInfo> InViews, FSceneTextures& SceneTextures, bool bIsSceneCaptureRenderPass=false)"
  },
  {
    "label": "RenderMobileLocalLightsBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderMobileLocalLightsBuffer(FRDGBuilder& GraphBuilder, FSceneTextures& SceneTextures, const FSortedLightSetSceneInfo& SortedLights)"
  },
  {
    "label": "RenderCustomRenderPassBasePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderCustomRenderPassBasePass(FRDGBuilder& GraphBuilder, TArrayView<FViewInfo> InViews, FRDGTextureRef ViewFamilyTexture, FSceneTextures& SceneTextures)"
  },
  {
    "label": "RenderMobileBasePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderMobileBasePass(FRHICommandList& RHICmdList, const FViewInfo& View, const FInstanceCullingDrawParams* InstanceCullingDrawParams)"
  },
  {
    "label": "PostRenderBasePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRenderBasePass(FRHICommandList& RHICmdList, FViewInfo& View)"
  },
  {
    "label": "RenderMobileEditorPrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderMobileEditorPrimitives(FRHICommandList& RHICmdList, const FViewInfo& View, const FMeshPassProcessorRenderState& DrawRenderState, const FInstanceCullingDrawParams* InstanceCullingDrawParams)"
  },
  {
    "label": "RenderMobileDebugPrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderMobileDebugPrimitives(FRHICommandList& RHICmdList, const FViewInfo& View)"
  },
  {
    "label": "RenderMobileDebugView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderMobileDebugView(FRHICommandList& RHICmdList, const FViewInfo& View)"
  },
  {
    "label": "RenderModulatedShadowProjections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderModulatedShadowProjections(FRHICommandList& RHICmdList, int32 ViewIndex, const FViewInfo& View)"
  },
  {
    "label": "RenderOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderOcclusion(FRHICommandList& RHICmdList)"
  },
  {
    "label": "ShouldRenderHZB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderHZB(TArrayView<FViewInfo> InViews)"
  },
  {
    "label": "RenderHZB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderHZB(FRHICommandListImmediate& RHICmdList, const TRefCountPtr<IPooledRenderTarget>& SceneDepthZ)"
  },
  {
    "label": "RenderHZB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderHZB(FRDGBuilder& GraphBuilder, FRDGTextureRef SceneDepthTexture)"
  },
  {
    "label": "RenderDecals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDecals(FRHICommandList& RHICmdList, FViewInfo& View)"
  },
  {
    "label": "RenderDBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDBuffer(FRDGBuilder& GraphBuilder, FSceneTextures& SceneTextures, FDBufferTextures& DBufferTextures, FInstanceCullingManager& InstanceCullingManager)"
  },
  {
    "label": "RenderFog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderFog(FRHICommandList& RHICmdList, const FViewInfo& View)"
  },
  {
    "label": "RenderTranslucency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderTranslucency(FRHICommandList& RHICmdList, const FViewInfo& View)"
  },
  {
    "label": "PreTonemapMSAA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreTonemapMSAA(FRHICommandList& RHICmdList, const FMinimalSceneTextures& SceneTextures)"
  },
  {
    "label": "SetupMobileBasePassAfterShadowInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupMobileBasePassAfterShadowInit(FExclusiveDepthStencil::Type BasePassDepthStencilAccess, TArrayView<FViewCommands> ViewCommandsPerView, FInstanceCullingManager& InstanceCullingManager)"
  },
  {
    "label": "UpdateDirectionalLightUniformBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDirectionalLightUniformBuffers(FRDGBuilder& GraphBuilder, const FViewInfo& View)"
  },
  {
    "label": "UpdateSkyReflectionUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSkyReflectionUniformBuffer(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "BuildInstanceCullingDrawParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildInstanceCullingDrawParams(FRDGBuilder& GraphBuilder, FViewInfo& View, class FMobileRenderPassParameters* PassParameters)"
  },
  {
    "label": "RenderForward()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderForward(FRDGBuilder& GraphBuilder, FRDGTextureRef ViewFamilyTexture, FSceneTextures& SceneTextures, FDBufferTextures& DBufferTextures)"
  },
  {
    "label": "RenderForwardSinglePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderForwardSinglePass(FRDGBuilder& GraphBuilder, class FMobileRenderPassParameters* PassParameters, struct FRenderViewContext& ViewContext, FSceneTextures& SceneTextures)"
  },
  {
    "label": "RenderForwardMultiPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderForwardMultiPass(FRDGBuilder& GraphBuilder, class FMobileRenderPassParameters* PassParameters, struct FRenderViewContext& ViewContext, FSceneTextures& SceneTextures)"
  },
  {
    "label": "RenderDeferredSinglePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDeferredSinglePass(FRDGBuilder& GraphBuilder, FSceneTextures& SceneTextures, const FSortedLightSetSceneInfo& SortedLightSet)"
  },
  {
    "label": "RenderDeferredMultiPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDeferredMultiPass(FRDGBuilder& GraphBuilder, FSceneTextures& SceneTextures, const FSortedLightSetSceneInfo& SortedLightSet)"
  },
  {
    "label": "RenderAmbientOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderAmbientOcclusion(FRDGBuilder& GraphBuilder, FRDGTextureRef SceneDepthTexture, FRDGTextureRef AmbientOcclusionTexture)"
  },
  {
    "label": "RenderPixelProjectedReflection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderPixelProjectedReflection(FRDGBuilder& GraphBuilder, FRDGTextureRef SceneColorTexture, FRDGTextureRef SceneDepthTexture, FRDGTextureRef PixelProjectedReflectionTexture, const FPlanarReflectionSceneProxy* PlanarReflectionSceneProxy)"
  },
  {
    "label": "RenderMobileShadowProjections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderMobileShadowProjections(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "InitRenderTargetBindings_Deferred()",
    "kind": "Method",
    "detail": "Function (FRenderTargetBindingSlots)",
    "insertText": "InitRenderTargetBindings_Deferred(FSceneTextures& SceneTextures, FColorTargets& ColorTargets)"
  },
  {
    "label": "InitRenderTargetBindings_Forward()",
    "kind": "Method",
    "detail": "Function (FRenderTargetBindingSlots)",
    "insertText": "InitRenderTargetBindings_Forward(FRDGTextureRef ViewFamilyTexture, FSceneTextures& SceneTextures)"
  },
  {
    "label": "GetColorTargets_Deferred()",
    "kind": "Method",
    "detail": "Function (FColorTargets)",
    "insertText": "GetColorTargets_Deferred(FSceneTextures& SceneTextures)"
  },
  {
    "label": "UpdateNoiseTextureParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNoiseTextureParameters(FViewUniformShaderParameters& ViewUniformShaderParameters)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update()"
  },
  {
    "label": "OnCVarUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCVarUpdated()"
  },
  {
    "label": "OnSceneRenderTargetsAllocated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSceneRenderTargetsAllocated()"
  },
  {
    "label": "UpdateTextureFlagFromCVar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateTextureFlagFromCVar(TAutoConsoleVariable<int32>& CVar, ETextureCreateFlags& InOutValue)"
  },
  {
    "label": "UpdateBufferFlagFromCVar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateBufferFlagFromCVar(TAutoConsoleVariable<int32>& CVar, EBufferUsageFlags& InOutValue)"
  },
  {
    "label": "BeginShadowGatherDynamicMeshElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginShadowGatherDynamicMeshElements(FDynamicShadowsTaskData* TaskData)"
  },
  {
    "label": "UseCachedMeshDrawCommands()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseCachedMeshDrawCommands()"
  },
  {
    "label": "UseCachedMeshDrawCommands_AnyThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseCachedMeshDrawCommands_AnyThread()"
  },
  {
    "label": "IsDynamicInstancingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDynamicInstancingEnabled(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "AddResolveSceneColorPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddResolveSceneColorPass(FRDGBuilder& GraphBuilder, const FViewInfo& View, FRDGTextureMSAA SceneColor)"
  },
  {
    "label": "AddResolveSceneDepthPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddResolveSceneDepthPass(FRDGBuilder& GraphBuilder, const FViewInfo& View, FRDGTextureMSAA SceneDepth)"
  },
  {
    "label": "AddResolveSceneColorPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddResolveSceneColorPass(FRDGBuilder& GraphBuilder, TArrayView<const FViewInfo> Views, FRDGTextureMSAA SceneColor)"
  },
  {
    "label": "AddResolveSceneDepthPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddResolveSceneDepthPass(FRDGBuilder& GraphBuilder, TArrayView<const FViewInfo> Views, FRDGTextureMSAA SceneDepth)"
  },
  {
    "label": "VirtualTextureFeedbackBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VirtualTextureFeedbackBegin(FRDGBuilder& GraphBuilder, TArrayView<const FViewInfo> Views, FIntPoint SceneTextureExtent)"
  },
  {
    "label": "VirtualTextureFeedbackEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VirtualTextureFeedbackEnd(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "CreateHalfResolutionDepthCheckerboardMinMax()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "CreateHalfResolutionDepthCheckerboardMinMax(FRDGBuilder& GraphBuilder, TArrayView<const FViewInfo> Views, FRDGTextureRef SceneDepth)"
  },
  {
    "label": "CreateQuarterResolutionDepthMinAndMax()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "CreateQuarterResolutionDepthMinAndMax(FRDGBuilder& GraphBuilder, TArrayView<const FViewInfo> Views, FRDGTextureRef DepthTexture)"
  },
  {
    "label": "IsPrimitiveAlphaHoldoutEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPrimitiveAlphaHoldoutEnabled(EShadingPath ShadingPath)"
  },
  {
    "label": "IsPrimitiveAlphaHoldoutEnabledForAnyView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPrimitiveAlphaHoldoutEnabledForAnyView(TArrayView<FViewInfo> Views)"
  },
  {
    "label": "SceneCaptureRequiresAlphaChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SceneCaptureRequiresAlphaChannel(const FSceneView& View)"
  },
  {
    "label": "DoMaterialAndPrimitiveModifyMeshPosition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoMaterialAndPrimitiveModifyMeshPosition(const FMaterial& Material, const FPrimitiveSceneProxy* PrimitiveSceneProxy)"
  }
]