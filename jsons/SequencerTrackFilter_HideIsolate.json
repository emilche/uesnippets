[
  {
    "label": "FSequencerTrackFilter_HideIsolate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerTrackFilter_HideIsolate"
  },
  {
    "label": "FSequencerTrackFilter_HideIsolate()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Filters / SequencerTrackFilterBase . h \" class FSequencerTrackFilter_HideIsolate : public FSequencerTrackFilter { public :)",
    "insertText": "FSequencerTrackFilter_HideIsolate(ISequencerTrackFilters& InFilterInterface, TSharedPtr<FFilterCategory> InCategory = nullptr)"
  },
  {
    "label": "ResetFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetFilter()"
  },
  {
    "label": "GetHiddenTracks()",
    "kind": "Method",
    "detail": "Function (TSet<UE::Sequencer::TWeakViewModelPtr<UE::Sequencer::IOutlinerExtension>>)",
    "insertText": "GetHiddenTracks()"
  },
  {
    "label": "GetIsolatedTracks()",
    "kind": "Method",
    "detail": "Function (TSet<UE::Sequencer::TWeakViewModelPtr<UE::Sequencer::IOutlinerExtension>>)",
    "insertText": "GetIsolatedTracks()"
  },
  {
    "label": "HideTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideTracks(const TSet<UE::Sequencer::TWeakViewModelPtr<UE::Sequencer::IOutlinerExtension>>& InTracks, const bool bInAddToExisting)"
  },
  {
    "label": "UnhideTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnhideTracks(const TSet<UE::Sequencer::TWeakViewModelPtr<UE::Sequencer::IOutlinerExtension>>& InTracks)"
  },
  {
    "label": "IsolateTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IsolateTracks(const TSet<UE::Sequencer::TWeakViewModelPtr<UE::Sequencer::IOutlinerExtension>>& InTracks, const bool bInAddToExisting)"
  },
  {
    "label": "UnisolateTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnisolateTracks(const TSet<UE::Sequencer::TWeakViewModelPtr<UE::Sequencer::IOutlinerExtension>>& InTracks)"
  },
  {
    "label": "IsolateCategoryGroupTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IsolateCategoryGroupTracks(const TSet<UE::Sequencer::TWeakViewModelPtr<UE::Sequencer::IOutlinerExtension>>& InTracks , const TSet<FName>& InCategoryNames , const bool bInAddToExisting)"
  },
  {
    "label": "ShowAllTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowAllTracks()"
  },
  {
    "label": "HasHiddenTracks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasHiddenTracks()"
  },
  {
    "label": "HasIsolatedTracks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasIsolatedTracks()"
  },
  {
    "label": "HasHiddenOrIsolatedTracks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasHiddenOrIsolatedTracks()"
  },
  {
    "label": "IsTrackHidden()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTrackHidden(const UE::Sequencer::TViewModelPtr<UE::Sequencer::IOutlinerExtension>& InTrack)"
  },
  {
    "label": "IsTrackIsolated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTrackIsolated(const UE::Sequencer::TViewModelPtr<UE::Sequencer::IOutlinerExtension>& InTrack)"
  },
  {
    "label": "EmptyHiddenTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyHiddenTracks(const bool bInBroadcastChange = true)"
  },
  {
    "label": "EmptyIsolatedTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyIsolatedTracks(const bool bInBroadcastChange = true)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText()"
  },
  {
    "label": "GetIcon()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetIcon()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetName()"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesFilter(FSequencerTrackFilterType InItem)"
  },
  {
    "label": "IsActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActive()"
  }
]