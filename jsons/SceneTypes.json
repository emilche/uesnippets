[
  {
    "label": "FLightMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightMap"
  },
  {
    "label": "FSceneViewStateInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewStateInterface"
  },
  {
    "label": "FShadowMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShadowMap"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FCustomPrimitiveData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomPrimitiveData"
  },
  {
    "label": "FSceneViewStateReference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewStateReference"
  },
  {
    "label": "ELightComponentType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELightComponentType"
  },
  {
    "label": "ELightMapInteractionType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELightMapInteractionType"
  },
  {
    "label": "EShadowMapInteractionType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShadowMapInteractionType"
  },
  {
    "label": "EMaterialProperty",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMaterialProperty"
  },
  {
    "label": "ESimpleElementBlendMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESimpleElementBlendMode"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPrimitiveMaterialPropertyDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveMaterialPropertyDescriptor"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / ObjectMacros . h \" # include \" Templates / RefCounting . h \" # include \" Containers / List . h \" # include \" PrimitiveDirtyState . h \" # include \" PrimitiveComponentId . h \" # include \" LightDefinitions . h \" # include \" SceneTypes . generated . h \" class FLightMap ; class FSceneViewStateInterface ; class FShadowMap ; namespace ERHIFeatureLevel { enum Type : int ; } typedef TRefCountPtr<FLightMap> FLightMapRef ; typedef TRefCountPtr<FShadowMap> FShadowMapRef ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() inline bool operator==(const FCustomPrimitiveData& Other)"
  },
  {
    "label": "FSceneViewStateReference()",
    "kind": "Method",
    "detail": "Function (} ; class FSceneViewStateReference { public :)",
    "insertText": "FSceneViewStateReference() : Reference(nullptr), ShareOriginTarget(nullptr), ShareOriginRefCount(0)"
  },
  {
    "label": "FSceneViewStateReference()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSceneViewStateReference()"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Allocate(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "ShareOrigin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShareOrigin(FSceneViewStateReference* Target)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "GetReference()",
    "kind": "Method",
    "detail": "Function (FSceneViewStateInterface*)",
    "insertText": "GetReference()"
  },
  {
    "label": "AllocateInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateInternal(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (} ; enum ELightComponentType { LightType_Directional = LIGHT_TYPE_DIRECTIONAL,LightType_Point = LIGHT_TYPE_POINT,LightType_Spot = LIGHT_TYPE_SPOT,LightType_Rect = LIGHT_TYPE_RECT,LightType_MAX = LIGHT_TYPE_MAX,LightType_NumBits = 2 } ;)",
    "insertText": "static_assert(LightType_MAX <= (1 << LightType_NumBits), \"LightType_NumBits is not large enough to hold all possible light types\")"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (enum ELightMapInteractionType { LMIT_None = 0,LMIT_GlobalVolume = 1,LMIT_Texture = 2,LMIT_NumBits = 3 } ; enum EShadowMapInteractionType { SMIT_None = 0,SMIT_GlobalVolume = 1,SMIT_Texture = 2,SMIT_NumBits = 3 } ; namespace EMaterialQualityLevel { enum Type : uint8 { Low,High,Medium,Epic,Num } ; } FString)",
    "insertText": "LexToString(EMaterialQualityLevel::Type QualityLevel)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (MP_EmissiveColor = 0)",
    "insertText": "UMETA(DisplayName = \"Emissive\"), MP_Opacity UMETA(DisplayName = \"Opacity\"), MP_OpacityMask UMETA(DisplayName = \"Opacity Mask\"), MP_DiffuseColor UMETA(Hidden), MP_SpecularColor UMETA(Hidden), MP_BaseColor UMETA(DisplayName = \"Diffuse\"), MP_Metallic UMETA(DisplayName = \"Metallic\"), MP_Specular UMETA(DisplayName = \"Specular\"), MP_Roughness UMETA(DisplayName = \"Roughness \"), MP_Anisotropy UMETA(DisplayName = \"Anisotropy\"), MP_Normal UMETA(DisplayName = \"Normal\"), MP_Tangent UMETA(DisplayName = \"Tangent\"), MP_WorldPositionOffset UMETA(Hidden), MP_WorldDisplacement_DEPRECATED UMETA(Hidden), MP_TessellationMultiplier_DEPRECATED UMETA(Hidden), MP_SubsurfaceColor UMETA(DisplayName = \"Subsurface\"), MP_CustomData0 UMETA(Hidden), MP_CustomData1 UMETA(Hidden), MP_AmbientOcclusion UMETA(DisplayName = \"Ambient Occlusion\"), MP_Refraction UMETA(DisplayName = \"Refraction\"), MP_CustomizedUVs0 UMETA(Hidden), MP_CustomizedUVs1 UMETA(Hidden), MP_CustomizedUVs2 UMETA(Hidden), MP_CustomizedUVs3 UMETA(Hidden), MP_CustomizedUVs4 UMETA(Hidden), MP_CustomizedUVs5 UMETA(Hidden), MP_CustomizedUVs6 UMETA(Hidden), MP_CustomizedUVs7 UMETA(Hidden), MP_PixelDepthOffset UMETA(Hidden), MP_ShadingModel UMETA(Hidden), MP_FrontMaterial UMETA(DisplayName = \"Front Material\"), MP_SurfaceThickness UMETA(Hidden), MP_Displacement UMETA(Hidden), MP_MaterialAttributes UMETA(Hidden), MP_CustomOutput UMETA(Hidden), MP_MAX UMETA(DisplayName = \"None\")"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (enum ESimpleElementBlendMode : int { SE_BLEND_Opaque = 0,SE_BLEND_Masked,SE_BLEND_Translucent,SE_BLEND_Additive,SE_BLEND_Modulate,SE_BLEND_MaskedDistanceField,SE_BLEND_MaskedDistanceFieldShadowed,SE_BLEND_TranslucentDistanceField,SE_BLEND_TranslucentDistanceFieldShadowed,SE_BLEND_AlphaComposite,SE_BLEND_AlphaHoldout,SE_BLEND_AlphaBlend,SE_BLEND_TranslucentAlphaOnly,SE_BLEND_TranslucentAlphaOnlyWriteAlpha,SE_BLEND_RGBA_MASK_START,SE_BLEND_RGBA_MASK_END = SE_BLEND_RGBA_MASK_START + 3 1,SE_BLEND_MAX } ;)",
    "insertText": "UENUM()"
  }
]