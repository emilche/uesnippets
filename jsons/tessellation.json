[
  {
    "label": "Tessellation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Tessellation"
  },
  {
    "label": "Options",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Options"
  },
  {
    "label": "Options()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSUBDIV3_BFR_TESSELLATION_H # define OPENSUBDIV3_BFR_TESSELLATION_H # include \" . . / version . h \" # include \" . . / bfr / parameterization . h \" namespace OpenSubdiv { namespace OPENSUBDIV_VERSION { namespace Bfr { class Tessellation { public : class Options { public :)",
    "insertText": "Options() : _preserveQuads(false), _facetSize4(false), _coordStride(0), _facetStride(0)"
  },
  {
    "label": "PreserveQuads()",
    "kind": "Method",
    "detail": "Function (} Options&)",
    "insertText": "PreserveQuads(bool on)"
  },
  {
    "label": "PreserveQuads()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PreserveQuads()"
  },
  {
    "label": "GetFacetSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetFacetSize()"
  },
  {
    "label": "SetFacetStride()",
    "kind": "Method",
    "detail": "Function (} Options&)",
    "insertText": "SetFacetStride(int stride)"
  },
  {
    "label": "GetFacetStride()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetFacetStride()"
  },
  {
    "label": "GetCoordStride()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCoordStride()"
  },
  {
    "label": "Tessellation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tessellation(Parameterization const & p, int numRates, int const rates[], Options const & options = Options())"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "Tessellation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tessellation(Tessellation const &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Tessellation&)",
    "insertText": "operator(Tessellation const &)"
  },
  {
    "label": "Tessellation()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Tessellation()"
  },
  {
    "label": "GetParameterization()",
    "kind": "Method",
    "detail": "Function (Parameterization)",
    "insertText": "GetParameterization()"
  },
  {
    "label": "GetRates()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetRates(int rates[])"
  },
  {
    "label": "IsUniform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUniform()"
  },
  {
    "label": "GetBoundaryCoords()",
    "kind": "Method",
    "detail": "Function (template<REAL> int)",
    "insertText": "GetBoundaryCoords(REAL coordTuples[])"
  },
  {
    "label": "GetInteriorCoords()",
    "kind": "Method",
    "detail": "Function (template<REAL> int)",
    "insertText": "GetInteriorCoords(REAL coordTuples[])"
  },
  {
    "label": "GetVertexCoord()",
    "kind": "Method",
    "detail": "Function (template<REAL> int)",
    "insertText": "GetVertexCoord(int vertex, REAL coordTuples[])"
  },
  {
    "label": "GetEdgeCoords()",
    "kind": "Method",
    "detail": "Function (template<REAL> int)",
    "insertText": "GetEdgeCoords(int edge, REAL coordTuples[])"
  },
  {
    "label": "GetNumFacets()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetNumFacets()"
  },
  {
    "label": "TransformFacetCoordIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformFacetCoordIndices(int facetTuples[], int commonOffset)"
  },
  {
    "label": "TransformFacetCoordIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformFacetCoordIndices(int facetTuples[], int const boundaryIndices[], int interiorOffset)"
  },
  {
    "label": "TransformFacetCoordIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformFacetCoordIndices(int facetTuples[], int const boundaryIndices[], int const interiorIndices[])"
  },
  {
    "label": "validateArguments()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "validateArguments(Parameterization const & p, int nRates, int const rates[], Options const & options)"
  },
  {
    "label": "initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initialize(Parameterization const & p, int nRates, int const rates[], Options const & options)"
  },
  {
    "label": "initializeDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDefaults()"
  },
  {
    "label": "initializeRates()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "initializeRates(int nRates, int const rates[])"
  },
  {
    "label": "initializeInventoryForParamTri()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeInventoryForParamTri(int sumOfOuterRates)"
  },
  {
    "label": "initializeInventoryForParamQuad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeInventoryForParamQuad(int sumOfOuterRates)"
  },
  {
    "label": "initializeInventoryForParamQPoly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeInventoryForParamQPoly(int sumOfOuterRates)"
  },
  {
    "label": "SetFacetSize()",
    "kind": "Method",
    "detail": "Function (_preserveQuads = on ; return* this ; } Tessellation::Options& Tessellation::)",
    "insertText": "SetFacetSize(int numIndices)"
  },
  {
    "label": "_facetSize4()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_facetSize4(numIndices == 4)"
  },
  {
    "label": "_facetStride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_facetStride(short)"
  },
  {
    "label": "_coordStride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_coordStride(short)"
  },
  {
    "label": "GetVertexCoord()",
    "kind": "Method",
    "detail": "Function (_param .)",
    "insertText": "GetVertexCoord(vertex, coord)"
  },
  {
    "label": "GetBoundaryCoords()",
    "kind": "Method",
    "detail": "Function (int nCoords =)",
    "insertText": "GetBoundaryCoords(coordTuples)"
  },
  {
    "label": "GetInteriorCoords()",
    "kind": "Method",
    "detail": "Function (nCoords + =)",
    "insertText": "GetInteriorCoords(coordTuples + nCoords * _coordStride)"
  }
]