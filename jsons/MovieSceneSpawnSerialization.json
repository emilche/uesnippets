[
  {
    "label": "FSpawnFileHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpawnFileHeader"
  },
  {
    "label": "FSpawnProperty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpawnProperty"
  },
  {
    "label": "FSpawnFileHeader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / FrameRate . h \" # include \" UObject / UnrealType . h \" # include \" MovieSceneSectionSerialization . h \" struct FSpawnFileHeader { const int32 cVersion = 1 ;)",
    "insertText": "FSpawnFileHeader() : Version(cVersion)"
  },
  {
    "label": "FSpawnFileHeader()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSpawnFileHeader(FFrameRate &InTickResolution, const FName& InSerializedType, const FGuid& InGuid) : Version(cVersion) , SerializedType(InSerializedType) , Guid(InGuid) , TickResolution(InTickResolution)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FSpawnFileHeader& Header)"
  },
  {
    "label": "FSpawnProperty()",
    "kind": "Method",
    "detail": "Function (Ar<<Header . Version ; Ar<<Header . SerializedType ; Ar<<Header . Guid ; Ar<<Header . TickResolution . Numerator ; Ar<<Header . TickResolution . Denominator ; return Ar ; } int32 Version ; FName SerializedType ; FGuid Guid ; FFrameRate TickResolution ; } ; struct FSpawnProperty {)",
    "insertText": "FSpawnProperty()"
  },
  {
    "label": "FSpawnProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSpawnProperty(FFrameNumber InKeyTime, bool InVal)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Time = InKeyTime ; bVal = InVal ; } FArchive&)",
    "insertText": "operator(FArchive& Ar, FSpawnProperty& Property)"
  }
]