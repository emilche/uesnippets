[
  {
    "label": "FCurveOwnerInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveOwnerInterface"
  },
  {
    "label": "SCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditor"
  },
  {
    "label": "SMiniCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMiniCurveEditor"
  },
  {
    "label": "FTabId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTabId"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Framework / Docking / TabManager . h \" # include \" Subsystems / AssetEditorSubsystem . h \" class FCurveOwnerInterface ; class SCurveEditor ; class SMiniCurveEditor : public SCompoundWidget,public IAssetEditorInstance { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SMiniCurveEditor ) : _CurveOwner(nullptr) , _OwnerObject(nullptr)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FCurveOwnerInterface*, CurveOwner ) SLATE_ARGUMENT( UObject*, OwnerObject ) SLATE_ARGUMENT( TWeakPtr<SWindow>, ParentWindow ) SLATE_END_ARGS() UNREALED_API void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SMiniCurveEditor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SMiniCurveEditor()"
  },
  {
    "label": "GetEditorName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetEditorName()"
  },
  {
    "label": "FocusWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FocusWindow(UObject* ObjectToFocusOn)"
  },
  {
    "label": "CloseWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseWindow()"
  },
  {
    "label": "CloseWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseWindow(EAssetEditorCloseReason InCloseReason)"
  },
  {
    "label": "IsPrimaryEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPrimaryEditor()"
  },
  {
    "label": "GetAssociatedTabManager()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<class FTabManager>)",
    "insertText": "GetAssociatedTabManager()"
  },
  {
    "label": "GetLastActivationTime()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetLastActivationTime()"
  },
  {
    "label": "RemoveEditingAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEditingAsset(UObject* Asset)"
  },
  {
    "label": "GetViewMinInput()",
    "kind": "Method",
    "detail": "Function (private : bool bHasOwner = true ; float ViewMinInput = 0 . 0 f ; float ViewMaxInput = 1 . 0 f ; TSharedPtr<class SCurveEditor> TrackWidget ; float)",
    "insertText": "GetViewMinInput()"
  },
  {
    "label": "SetInputViewRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInputViewRange(float InViewMinInput, float InViewMaxInput)"
  }
]