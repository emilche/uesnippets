[
  {
    "label": "FAssetViewItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetViewItem"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FAssetViewCustomColumn",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetViewCustomColumn"
  },
  {
    "label": "CONTENTBROWSER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CONTENTBROWSER_API"
  },
  {
    "label": "FAssetViewSortManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / StringView . h \" # include \" ContentBrowserDelegates . h \" # include \" CoreMinimal . h \" # include \" Misc / AssertionMacros . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" Widgets / Views / SHeaderRow . h \" class FAssetViewItem ; class FString ; struct FAssetViewCustomColumn ; class FAssetViewSortManager { public :)",
    "insertText": "FAssetViewSortManager()"
  },
  {
    "label": "ResetSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSort()"
  },
  {
    "label": "SortList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortList(TArray<TSharedPtr<FAssetViewItem>>& AssetItems, const FName& MajorityAssetType, const TArray<FAssetViewCustomColumn>& CustomColumns)"
  },
  {
    "label": "ExportColumnsToCSV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportColumnsToCSV(TArray<TSharedPtr<FAssetViewItem>>& AssetItems, TArray<FName>& ColumnList, const TArray<FAssetViewCustomColumn>& CustomColumns, FString& OutString)"
  },
  {
    "label": "SetOrToggleSortColumn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetOrToggleSortColumn(const EColumnSortPriority::Type InSortPriority, const FName& InColumnId)"
  },
  {
    "label": "SetSortColumnId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSortColumnId(const EColumnSortPriority::Type InSortPriority, const FName& InColumnId)"
  },
  {
    "label": "SetSortMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSortMode(const EColumnSortPriority::Type InSortPriority, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "GetSortMode()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetSortMode(const EColumnSortPriority::Type InSortPriority)"
  }
]