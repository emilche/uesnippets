[
  {
    "label": "VP9_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9_COMP"
  },
  {
    "label": "ThreadData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ThreadData"
  },
  {
    "label": "EncWorkerData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EncWorkerData"
  },
  {
    "label": "VP9RowMTSyncData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9RowMTSyncData"
  },
  {
    "label": "VP9Common",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9Common"
  },
  {
    "label": "MAX_NUM_TILE_COLS()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_ENCODER_VP9_ETHREAD_H_ # define VPX_VP9_ENCODER_VP9_ETHREAD_H_ # ifdef __cplusplus \" C \" { # endif # define)",
    "insertText": "MAX_NUM_TILE_COLS(1 << 6)"
  },
  {
    "label": "vp9_encode_free_mt_data()",
    "kind": "Method",
    "detail": "Function (struct ThreadData ; typedef struct EncWorkerData { struct VP9_COMP* cpi ; struct ThreadData* td ; int start ; int thread_id ; int tile_completion_status [ MAX_NUM_TILE_COLS ] ; } EncWorkerData ; typedef struct VP9RowMTSyncData { # if CONFIG_MULTITHREAD pthread_mutex_t* mutex ; pthread_cond_t* cond ; # endif int* cur_col ; int sync_range ; int rows ; } VP9RowMTSync ; void)",
    "insertText": "vp9_encode_free_mt_data(struct VP9_COMP *cpi)"
  },
  {
    "label": "vp9_encode_tiles_mt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_encode_tiles_mt(struct VP9_COMP *cpi)"
  },
  {
    "label": "vp9_encode_tiles_row_mt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_encode_tiles_row_mt(struct VP9_COMP *cpi)"
  },
  {
    "label": "vp9_encode_fp_row_mt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_encode_fp_row_mt(struct VP9_COMP *cpi)"
  },
  {
    "label": "vp9_row_mt_sync_read()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_row_mt_sync_read(VP9RowMTSync *const row_mt_sync, int r, int c)"
  },
  {
    "label": "vp9_row_mt_sync_write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_row_mt_sync_write(VP9RowMTSync *const row_mt_sync, int r, int c, const int cols)"
  },
  {
    "label": "vp9_row_mt_sync_read_dummy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_row_mt_sync_read_dummy(VP9RowMTSync *const row_mt_sync, int r, int c)"
  },
  {
    "label": "vp9_row_mt_sync_write_dummy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_row_mt_sync_write_dummy(VP9RowMTSync *const row_mt_sync, int r, int c, const int cols)"
  },
  {
    "label": "vp9_row_mt_sync_mem_alloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_row_mt_sync_mem_alloc(VP9RowMTSync *row_mt_sync, struct VP9Common *cm, int rows)"
  },
  {
    "label": "vp9_row_mt_sync_mem_dealloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_row_mt_sync_mem_dealloc(VP9RowMTSync *row_mt_sync)"
  },
  {
    "label": "vp9_temporal_filter_row_mt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_temporal_filter_row_mt(struct VP9_COMP *cpi)"
  }
]