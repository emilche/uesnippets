[
  {
    "label": "ConfigureCollisionParams()",
    "kind": "Method",
    "detail": "Function (FCollisionQueryParams)",
    "insertText": "ConfigureCollisionParams(FName TraceTag, bool bTraceComplex, const TArray<AActor*>& ActorsToIgnore, bool bIgnoreSelf, const UObject* WorldContextObject)"
  },
  {
    "label": "ConfigureCollisionObjectParams()",
    "kind": "Method",
    "detail": "Function (FCollisionObjectQueryParams)",
    "insertText": "ConfigureCollisionObjectParams(const TArray<TEnumAsByte<EObjectTypeQuery> > & ObjectTypes)"
  },
  {
    "label": "DrawDebugSweptSphere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugSweptSphere(const UWorld* InWorld, FVector const& Start, FVector const& End, float Radius, FColor const& Color, bool bPersistentLines = false, float LifeTime = -1.f, uint8 DepthPriority = 0)"
  },
  {
    "label": "DrawDebugSweptBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugSweptBox(const UWorld* InWorld, FVector const& Start, FVector const& End, FRotator const & Orientation, FVector const & HalfSize, FColor const& Color, bool bPersistentLines = false, float LifeTime = -1.f, uint8 DepthPriority = 0)"
  },
  {
    "label": "DrawDebugLineTraceSingle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugLineTraceSingle(const UWorld* World, const FVector& Start, const FVector& End, EDrawDebugTrace::Type DrawDebugType, bool bHit, const FHitResult& OutHit, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime)"
  },
  {
    "label": "DrawDebugLineTraceMulti()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugLineTraceMulti(const UWorld* World, const FVector& Start, const FVector& End, EDrawDebugTrace::Type DrawDebugType, bool bHit, const TArray<FHitResult>& OutHits, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime)"
  },
  {
    "label": "DrawDebugBoxTraceSingle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugBoxTraceSingle(const UWorld* World, const FVector& Start, const FVector& End, const FVector HalfSize, const FRotator Orientation, EDrawDebugTrace::Type DrawDebugType, bool bHit, const FHitResult& OutHit, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime)"
  },
  {
    "label": "DrawDebugBoxTraceMulti()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugBoxTraceMulti(const UWorld* World, const FVector& Start, const FVector& End, const FVector HalfSize, const FRotator Orientation, EDrawDebugTrace::Type DrawDebugType, bool bHit, const TArray<FHitResult>& OutHits, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime)"
  },
  {
    "label": "DrawDebugSphereTraceSingle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugSphereTraceSingle(const UWorld* World, const FVector& Start, const FVector& End, float Radius, EDrawDebugTrace::Type DrawDebugType, bool bHit, const FHitResult& OutHit, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime)"
  },
  {
    "label": "DrawDebugSphereTraceMulti()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugSphereTraceMulti(const UWorld* World, const FVector& Start, const FVector& End, float Radius, EDrawDebugTrace::Type DrawDebugType, bool bHit, const TArray<FHitResult>& OutHits, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime)"
  },
  {
    "label": "DrawDebugCapsuleTraceSingle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugCapsuleTraceSingle(const UWorld* World, const FVector& Start, const FVector& End, float Radius, float HalfHeight, EDrawDebugTrace::Type DrawDebugType, bool bHit, const FHitResult& OutHit, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime)"
  },
  {
    "label": "DrawDebugCapsuleTraceMulti()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugCapsuleTraceMulti(const UWorld* World, const FVector& Start, const FVector& End, float Radius, float HalfHeight, EDrawDebugTrace::Type DrawDebugType, bool bHit, const TArray<FHitResult>& OutHits, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime)"
  },
  {
    "label": "DrawDebugCapsuleTraceSingle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugCapsuleTraceSingle(const UWorld* World, const FVector& Start, const FVector& End, float Radius, float HalfHeight, const FRotator& Orientation, EDrawDebugTrace::Type DrawDebugType, bool bHit, const FHitResult& OutHit, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime)"
  },
  {
    "label": "DrawDebugCapsuleTraceMulti()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugCapsuleTraceMulti(const UWorld* World, const FVector& Start, const FVector& End, float Radius, float HalfHeight, const FRotator& Orientation, EDrawDebugTrace::Type DrawDebugType, bool bHit, const TArray<FHitResult>& OutHits, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime)"
  }
]