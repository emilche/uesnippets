[
  {
    "label": "FAudioDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDevice"
  },
  {
    "label": "USoundWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWave"
  },
  {
    "label": "FActiveSound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveSound"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FSoundParseParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundParseParameters"
  },
  {
    "label": "FWaveInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWaveInstance"
  },
  {
    "label": "USoundNodeWavePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundNodeWavePlayer"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / SoftObjectPtr . h \" # include \" Sound / SoundNodeAssetReferencer . h \" # include \" SoundNodeWavePlayer . generated . h \" class FAudioDevice ; class USoundWave ; struct FActiveSound ; struct FPropertyChangedEvent ; struct FSoundParseParameters ; struct FWaveInstance ;)",
    "insertText": "UCLASS(hidecategories=Object, editinlinenew, MinimalAPI, meta=( DisplayName=\"Wave Player\" ))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() private: UPROPERTY(EditAnywhere, Category=WavePlayer, meta=(DisplayName=\"Sound Wave\"))"
  },
  {
    "label": "OnSoundWaveLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSoundWaveLoaded(const FName& PackageName, UPackage * Package, EAsyncLoadingResult::Type Result, bool bAddToRoot)"
  },
  {
    "label": "GetSoundWave()",
    "kind": "Method",
    "detail": "Function (private : FThreadSafeBool bAsyncLoadRequestPending ; public : USoundWave*)",
    "insertText": "GetSoundWave()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "GetMaxChildNodes()",
    "kind": "Method",
    "detail": "Function (# endif int32)",
    "insertText": "GetMaxChildNodes()"
  },
  {
    "label": "GetDuration()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDuration()"
  },
  {
    "label": "IsPlayWhenSilent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlayWhenSilent()"
  },
  {
    "label": "GetNumSounds()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumSounds(const UPTRINT NodeWaveInstanceHash, FActiveSound& ActiveSound)"
  },
  {
    "label": "GetTitle()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FText)",
    "insertText": "GetTitle()"
  },
  {
    "label": "LoadAsset()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "LoadAsset(bool bAddToRoot = false)"
  },
  {
    "label": "ClearAssetReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAssetReferences()"
  },
  {
    "label": "ContainsProceduralSoundReference()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsProceduralSoundReference()"
  },
  {
    "label": "IsCurrentlyAsyncLoadingAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCurrentlyAsyncLoadingAsset()"
  }
]