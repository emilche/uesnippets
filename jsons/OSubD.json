[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "Sample",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sample"
  },
  {
    "label": "OSubDSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OSubDSchema"
  },
  {
    "label": "OFaceSetSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OFaceSetSchema"
  },
  {
    "label": "ABC_GEOM_SUBD_NULL_INT_VALUE()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "ABC_GEOM_SUBD_NULL_INT_VALUE( -1073741824 )"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set( const Sample &iSamp )"
  },
  {
    "label": "setFromPrevious()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFromPrevious( )"
  },
  {
    "label": "setTimeSampling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeSampling( uint32_t iIndex )"
  },
  {
    "label": "setTimeSampling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeSampling( AbcA::TimeSamplingPtr iTime )"
  },
  {
    "label": "getFaceSetNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getFaceSetNames( std::vector <std::string> & oFaceSetNames )"
  },
  {
    "label": "getFaceSet()",
    "kind": "Method",
    "detail": "Function (OFaceSet)",
    "insertText": "getFaceSet( const std::string &iFaceSetName )"
  },
  {
    "label": "hasFaceSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasFaceSet( const std::string &iFaceSetName )"
  },
  {
    "label": "setUVSourceName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setUVSourceName(const std::string & iName)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init( uint32_t iTsIdx, bool isSparse )"
  },
  {
    "label": "selectiveSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "selectiveSet( const Sample &iSamp )"
  },
  {
    "label": "initCreases()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initCreases(uint32_t iNumSamples)"
  },
  {
    "label": "initCorners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initCorners(uint32_t iNumSamples)"
  },
  {
    "label": "initHoles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initHoles(uint32_t iNumSamples)"
  },
  {
    "label": "createSubDSchemeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createSubDSchemeProperty()"
  },
  {
    "label": "createFaceVaryingInterpolateBoundaryProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createFaceVaryingInterpolateBoundaryProperty()"
  },
  {
    "label": "createFaceVaryingPropagateCornersProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createFaceVaryingPropagateCornersProperty()"
  },
  {
    "label": "createInterpolateBoundaryProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createInterpolateBoundaryProperty()"
  },
  {
    "label": "createVelocitiesProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createVelocitiesProperty()"
  },
  {
    "label": "createUVsProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createUVsProperty( const Sample &iSamp )"
  },
  {
    "label": "createPositionsProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createPositionsProperty()"
  }
]