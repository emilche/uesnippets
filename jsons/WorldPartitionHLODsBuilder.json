[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UWorldPartitionHLODsBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionHLODsBuilder"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "FSourceControlHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSourceControlHelper"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / EnumClassFlags . h \" # include \" WorldPartition / WorldPartitionBuilder . h \" # include \" WorldPartition / WorldPartitionBuilderHelpers . h \" # include \" WorldPartitionHLODsBuilder . generated . h \" enum class EHLODBuildStep : uint8 { None = 0,HLOD_Setup = 1<<0,HLOD_Build = 1<<1,HLOD_Finalize = 1<<2,HLOD_Delete = 1<<3,HLOD_Stats = 1<<4 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(EHLODBuildStep)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UNREALED_API virtual bool RequiresCommandletRendering()"
  },
  {
    "label": "GetLoadingMode()",
    "kind": "Method",
    "detail": "Function (ELoadingMode)",
    "insertText": "GetLoadingMode()"
  },
  {
    "label": "RunInternal()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "RunInternal(UWorld* World, const FCellInfo& InCellInfo, FPackageSourceControlHelper& PackageHelper)"
  },
  {
    "label": "CanProcessNonPartitionedWorlds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanProcessNonPartitionedWorlds()"
  },
  {
    "label": "IsDistributedBuild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDistributedBuild()"
  },
  {
    "label": "ValidateParams()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ValidateParams()"
  },
  {
    "label": "SetupHLODActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupHLODActors()"
  },
  {
    "label": "BuildHLODActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildHLODActors()"
  },
  {
    "label": "DeleteHLODActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteHLODActors()"
  },
  {
    "label": "SubmitHLODActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SubmitHLODActors()"
  },
  {
    "label": "DumpStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DumpStats()"
  },
  {
    "label": "GenerateBuildManifest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateBuildManifest(TMap<FString, int32>& FilesToBuilderMap)"
  },
  {
    "label": "GetHLODActorsToBuild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHLODActorsToBuild(TArray<FGuid>& HLODActorsToBuild)"
  },
  {
    "label": "GetHLODWorkloads()",
    "kind": "Method",
    "detail": "Function (TArray<TArray<FGuid>>)",
    "insertText": "GetHLODWorkloads(int32 NumWorkloads)"
  },
  {
    "label": "ValidateWorkload()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateWorkload(const TArray<FGuid>& Workload)"
  },
  {
    "label": "CopyFilesToWorkingDir()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyFilesToWorkingDir(const FString& TargetDir, const FBuilderModifiedFiles& ModifiedFiles, TArray<FString>& BuildProducts)"
  },
  {
    "label": "CopyFilesFromWorkingDir()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyFilesFromWorkingDir(const FString& SourceDir)"
  },
  {
    "label": "ShouldRunStep()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRunStep(const EHLODBuildStep BuildStep)"
  },
  {
    "label": "AddBuildProducts()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddBuildProducts(const TArray<FString>& BuildProducts)"
  }
]