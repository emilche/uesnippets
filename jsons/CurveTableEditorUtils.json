[
  {
    "label": "UCurveTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveTable"
  },
  {
    "label": "FCurveTableEditorUtils",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveTableEditorUtils"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCurveTableEditorManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveTableEditorManager"
  },
  {
    "label": "ListenerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ListenerType"
  },
  {
    "label": "FCurveTableEditorManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / CurveTable . h \" # include \" Kismet2 / ListenerManager . h \" # include \" UObject / NameTypes . h \" class UCurveTable ; struct FCurveTableEditorUtils { enum class ECurveTableChangeInfo { RowData,RowList,} ; enum class ERowMoveDirection { Up,Down,} ; class FCurveTableEditorManager : public FListenerManager<UCurveTable,ECurveTableChangeInfo> {)",
    "insertText": "FCurveTableEditorManager()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} public : FCurveTableEditorManager&)",
    "insertText": "Get()"
  },
  {
    "label": "SelectionChange()",
    "kind": "Method",
    "detail": "Function (class ListenerType : public InnerListenerType<FCurveTableEditorManager> { public : void)",
    "insertText": "SelectionChange(const UCurveTable* CurveTable, FName RowName)"
  },
  {
    "label": "BroadcastPreChange()",
    "kind": "Method",
    "detail": "Function (} } ; } ; typedef FCurveTableEditorManager::ListenerType INotifyOnCurveTableChanged ; void)",
    "insertText": "BroadcastPreChange(UCurveTable* DataTable, ECurveTableChangeInfo Info)"
  },
  {
    "label": "BroadcastPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPostChange(UCurveTable* DataTable, ECurveTableChangeInfo Info)"
  }
]