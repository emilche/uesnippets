[
  {
    "label": "FJsonValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonValue"
  },
  {
    "label": "FPakPlatformFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPakPlatformFile"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FSearchEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSearchEntry"
  },
  {
    "label": "FPackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackData"
  },
  {
    "label": "FLocalizedTextArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalizedTextArray"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFeaturePackLevelSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFeaturePackLevelSet"
  },
  {
    "label": "FFeatureAdditionalFiles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFeatureAdditionalFiles"
  },
  {
    "label": "ADDCONTENTDIALOG_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ADDCONTENTDIALOG_API"
  },
  {
    "label": "FLocalizedTextArray()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Editor / AddContentDialog / Private / IContentSource . h \" # include \" HAL / PlatformCrt . h \" # include \" Internationalization / Text . h \" # include \" Misc / AssertionMacros . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / Class . h \" # include \" UObject / ObjectMacros . h \" # include \" FeaturePackContentSource . generated . h \" class FJsonValue ; class FPakPlatformFile ; class UObject ; struct FSearchEntry ; struct FPackData { FString PackSource ; FString PackName ; FString PackMap ; TArray<UObject*> ImportedObjects ; } ; class FLocalizedTextArray { public :)",
    "insertText": "FLocalizedTextArray()"
  },
  {
    "label": "FLocalizedTextArray()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLocalizedTextArray(FString InTwoLetterLanguage, FString InText)"
  },
  {
    "label": "ParseIntoArray()",
    "kind": "Method",
    "detail": "Function (TwoLetterLanguage = InTwoLetterLanguage ; TArray<FString> AsArray ; InText .)",
    "insertText": "ParseIntoArray(AsArray,TEXT(\",\"))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Tags .)",
    "insertText": "Add(FText::FromString(AsArray[iString]))"
  },
  {
    "label": "GetTwoLetterLanguage()",
    "kind": "Method",
    "detail": "Function (} } const FString&)",
    "insertText": "GetTwoLetterLanguage()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Standard,High,} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FFeaturePackLevelSet()"
  },
  {
    "label": "FFeaturePackLevelSet()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "FFeaturePackLevelSet(FString InMountName, TArray<EFeaturePackDetailLevel> InDetailLevels)"
  },
  {
    "label": "GetFeaturePackNameForLevel()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFeaturePackNameForLevel(EFeaturePackDetailLevel InLevel, bool bLevelRequired = false)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (int32 Index = DetailLevels .)",
    "insertText": "Find(InLevel)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FString DetailString ;)",
    "insertText": "if(Index != INDEX_NONE)"
  },
  {
    "label": "GetValueAsString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetValueAsString(TEXT(\"/Script/AddContentDialog.EFeaturePackDetailLevel\"), InLevel, DetailString)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "check(bLevelRequired==false)"
  },
  {
    "label": "GetValueAsString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetValueAsString(TEXT(\"/Script/AddContentDialog.EFeaturePackDetailLevel\"), DetailLevels[0], DetailString)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} FString NameString = MountName + DetailString +)",
    "insertText": "TEXT(\".upack\")"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FFeatureAdditionalFiles()"
  },
  {
    "label": "FFeaturePackContentSource()",
    "kind": "Method",
    "detail": "Function (} ; class FPakPlatformFile ; struct FSearchEntry ; class FFeaturePackContentSource : public IContentSource { public :)",
    "insertText": "FFeaturePackContentSource()"
  },
  {
    "label": "FFeaturePackContentSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFeaturePackContentSource(FString InFeaturePackPath)"
  },
  {
    "label": "GetLocalizedNames()",
    "kind": "Method",
    "detail": "Function (const TArray<FLocalizedText>&)",
    "insertText": "GetLocalizedNames()"
  },
  {
    "label": "GetLocalizedDescriptions()",
    "kind": "Method",
    "detail": "Function (const TArray<FLocalizedText>&)",
    "insertText": "GetLocalizedDescriptions()"
  },
  {
    "label": "GetCategories()",
    "kind": "Method",
    "detail": "Function (const TArray<EContentSourceCategory>&)",
    "insertText": "GetCategories()"
  },
  {
    "label": "GetLocalizedAssetTypes()",
    "kind": "Method",
    "detail": "Function (const TArray<FLocalizedText>&)",
    "insertText": "GetLocalizedAssetTypes()"
  },
  {
    "label": "GetSortKey()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetSortKey()"
  },
  {
    "label": "GetClassTypesUsed()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetClassTypesUsed()"
  },
  {
    "label": "GetIdent()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetIdent()"
  },
  {
    "label": "GetIconData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FImageData>)",
    "insertText": "GetIconData()"
  },
  {
    "label": "GetScreenshotData()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FImageData>>&)",
    "insertText": "GetScreenshotData()"
  },
  {
    "label": "GetFocusAssetName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetFocusAssetName()"
  },
  {
    "label": "InstallToProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InstallToProject(FString InstallPath)"
  },
  {
    "label": "InsertAdditionalFeaturePacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertAdditionalFeaturePacks()"
  },
  {
    "label": "InsertAdditionalResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InsertAdditionalResources(TArray<FFeaturePackLevelSet> InAdditionalFeaturePacks,EFeaturePackDetailLevel RequiredLevel, const FString& InDestinationFolder,TArray<FString>& InFilesCopied)"
  },
  {
    "label": "IsDataValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDataValid()"
  },
  {
    "label": "CopyAdditionalFilesToFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyAdditionalFilesToFolder(const FString& DestinationFolder, TArray<FString>& FilesCopied, bool &bHasSourceFiles, FString InGameFolder = FString())"
  },
  {
    "label": "GetAdditionalFilesForPack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAdditionalFilesForPack(TArray<FString>& FileList, bool& bContainsSource)"
  },
  {
    "label": "ImportPendingPacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportPendingPacks()"
  },
  {
    "label": "BuildListOfAdditionalFiles()",
    "kind": "Method",
    "detail": "Function (TArray<FString> ParseErrors ; void)",
    "insertText": "BuildListOfAdditionalFiles(TArray<FString>& AdditionalFileSourceList,TArray<FString>& FileList, bool& bContainsSourceFiles)"
  },
  {
    "label": "ParseAndImportPacks()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ParseAndImportPacks()"
  },
  {
    "label": "LoadPakFileToBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadPakFileToBuffer(FPakPlatformFile& PakPlatformFile, FString Path, TArray<uint8>& Buffer)"
  },
  {
    "label": "ExtractListOfAdditionalFiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExtractListOfAdditionalFiles(const FString& ConfigFile, TArray<FString>& FileList,bool& bContainsSource)"
  },
  {
    "label": "RecordAndLogError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordAndLogError(const FString& ErrorString)"
  },
  {
    "label": "LoadFeaturePackImageData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFeaturePackImageData()"
  },
  {
    "label": "LoadFeaturePackImageDataFromPackFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFeaturePackImageDataFromPackFile(FPakPlatformFile& PakPlatformFile)"
  },
  {
    "label": "ParseManifestString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseManifestString(const FString& ManifestString)"
  },
  {
    "label": "ChooseLocalizedTextArray()",
    "kind": "Method",
    "detail": "Function (FLocalizedTextArray)",
    "insertText": "ChooseLocalizedTextArray(TArray<FLocalizedTextArray> Choices, FString LanguageCode)"
  },
  {
    "label": "ChooseLocalizedText()",
    "kind": "Method",
    "detail": "Function (FLocalizedText)",
    "insertText": "ChooseLocalizedText(TArray<FLocalizedText> Choices, FString LanguageCode)"
  }
]