[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "FMovieSceneTangentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTangentData"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / EnumAsByte . h \" # include \" Curves / RichCurve . h \" # include \" KeyParams . h \" # include \" Misc / FrameNumber . h \" # include \" MovieSceneChannel . h \" # include \" MovieSceneChannelData . h \" # include \" MovieSceneChannelTraits . h \" # include \" UObject / Class . h \" # include \" UObject / ObjectMacros . h \" # include \" MovieSceneCurveChannelCommon . generated . h \" class FArchive ; template<T> struct TIsPODType ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneTangentData() : ArriveTangent(0.f) , LeaveTangent(0.f) , ArriveTangentWeight(0.f) , LeaveTangentWeight(0.f) , TangentWeightMode(RCTWM_WeightedNone)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FMovieSceneTangentData& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FMovieSceneTangentData& P)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (P .)",
    "insertText": "Serialize(Ar)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (uint8 UnserializedPaddingBytes [ 3 ] = { 0 } ; } ;)",
    "insertText": "static_assert(sizeof(FMovieSceneTangentData) == sizeof(FMovieSceneTangentData::ArriveTangent) + sizeof(FMovieSceneTangentData::LeaveTangent) + sizeof(FMovieSceneTangentData::ArriveTangentWeight) + sizeof(FMovieSceneTangentData::LeaveTangentWeight) + sizeof(FMovieSceneTangentData::TangentWeightMode) + sizeof(FMovieSceneTangentData::UnserializedPaddingBytes), \"Adjust padding size to avoid cooked build indeterminism with uninitialized padded data\")"
  }
]