[
  {
    "label": "PSH_GlobalsRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PSH_GlobalsRec_"
  },
  {
    "label": "PSH_Globals_FuncsRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PSH_Globals_FuncsRec_"
  },
  {
    "label": "T1_HintsRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "T1_HintsRec_"
  },
  {
    "label": "T1_Hints_FuncsRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "T1_Hints_FuncsRec_"
  },
  {
    "label": "T2_HintsRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "T2_HintsRec_"
  },
  {
    "label": "T2_Hints_FuncsRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "T2_Hints_FuncsRec_"
  },
  {
    "label": "PSHinter_Interface_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PSHinter_Interface_"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (# ifndef __PSHINTS_H__ # define __PSHINTS_H__ # include<ft2build . h> # include FT_FREETYPE_H # include FT_TYPE1_TABLES_H FT_BEGIN_HEADER typedef struct PSH_GlobalsRec_* PSH_Globals ; typedef)",
    "insertText": "FT_Error(*PSH_Globals_NewFunc)( FT_Memory memory, T1_Private* private_dict, PSH_Globals* aglobals)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*PSH_Globals_SetScaleFunc)( PSH_Globals globals, FT_Fixed x_scale, FT_Fixed y_scale, FT_Fixed x_delta, FT_Fixed y_delta)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PSH_Globals_DestroyFunc)( PSH_Globals globals)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef struct PSH_Globals_FuncsRec_ { PSH_Globals_NewFunc create ; PSH_Globals_SetScaleFunc set_scale ; PSH_Globals_DestroyFunc destroy ; } PSH_Globals_FuncsRec,* PSH_Globals_Funcs ; typedef struct T1_HintsRec_* T1_Hints ; typedef const struct T1_Hints_FuncsRec_* T1_Hints_Funcs ; typedef)",
    "insertText": "void(*T1_Hints_OpenFunc)( T1_Hints hints)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*T1_Hints_SetStemFunc)( T1_Hints hints, FT_UInt dimension, FT_Fixed* coords)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*T1_Hints_SetStem3Func)( T1_Hints hints, FT_UInt dimension, FT_Fixed* coords)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*T1_Hints_ResetFunc)( T1_Hints hints, FT_UInt end_point)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*T1_Hints_CloseFunc)( T1_Hints hints, FT_UInt end_point)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*T1_Hints_ApplyFunc)( T1_Hints hints, FT_Outline* outline, PSH_Globals globals, FT_Render_Mode hint_mode)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef struct T1_Hints_FuncsRec_ { T1_Hints hints ; T1_Hints_OpenFunc open ; T1_Hints_CloseFunc close ; T1_Hints_SetStemFunc stem ; T1_Hints_SetStem3Func stem3 ; T1_Hints_ResetFunc reset ; T1_Hints_ApplyFunc apply ; } T1_Hints_FuncsRec ; typedef struct T2_HintsRec_* T2_Hints ; typedef const struct T2_Hints_FuncsRec_* T2_Hints_Funcs ; typedef)",
    "insertText": "void(*T2_Hints_OpenFunc)( T2_Hints hints)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*T2_Hints_StemsFunc)( T2_Hints hints, FT_UInt dimension, FT_UInt count, FT_Fixed* coordinates)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*T2_Hints_MaskFunc)( T2_Hints hints, FT_UInt end_point, FT_UInt bit_count, const FT_Byte* bytes)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*T2_Hints_CounterFunc)( T2_Hints hints, FT_UInt bit_count, const FT_Byte* bytes)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*T2_Hints_CloseFunc)( T2_Hints hints, FT_UInt end_point)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*T2_Hints_ApplyFunc)( T2_Hints hints, FT_Outline* outline, PSH_Globals globals, FT_Render_Mode hint_mode)"
  },
  {
    "label": "PSH_Globals_Funcs()",
    "kind": "Method",
    "detail": "Function (typedef struct T2_Hints_FuncsRec_ { T2_Hints hints ; T2_Hints_OpenFunc open ; T2_Hints_CloseFunc close ; T2_Hints_StemsFunc stems ; T2_Hints_MaskFunc hintmask ; T2_Hints_CounterFunc counter ; T2_Hints_ApplyFunc apply ; } T2_Hints_FuncsRec ; typedef struct PSHinter_Interface_ {)",
    "insertText": "PSH_Globals_Funcs(*get_globals_funcs)( FT_Module module)"
  },
  {
    "label": "T1_Hints_Funcs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "T1_Hints_Funcs(*get_t1_funcs) ( FT_Module module)"
  },
  {
    "label": "T2_Hints_Funcs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "T2_Hints_Funcs(*get_t2_funcs) ( FT_Module module)"
  },
  {
    "label": "FT_DEFINE_PSHINTER_INTERFACE()",
    "kind": "Method",
    "detail": "Function (} PSHinter_Interface ; typedef PSHinter_Interface* PSHinter_Service ; # ifndef FT_CONFIG_OPTION_PIC # define)",
    "insertText": "FT_DEFINE_PSHINTER_INTERFACE(\\ class_, \\ get_globals_funcs_, \\ get_t1_funcs_, \\ get_t2_funcs_)"
  },
  {
    "label": "FT_DEFINE_PSHINTER_INTERFACE()",
    "kind": "Method",
    "detail": "Function (\\ get_globals_funcs_,\\ get_t1_funcs_,\\ get_t2_funcs_ \\ } ; # else # define)",
    "insertText": "FT_DEFINE_PSHINTER_INTERFACE(\\ class_, \\ get_globals_funcs_, \\ get_t1_funcs_, \\ get_t2_funcs_ ) \\ void \\ FT_Init_Class_ ## class_( FT_Library library, \\ PSHinter_Interface* clazz)"
  },
  {
    "label": "FT_UNUSED()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "FT_UNUSED(library)"
  }
]