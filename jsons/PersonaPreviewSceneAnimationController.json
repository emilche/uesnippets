[
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "UPersonaPreviewSceneAnimationController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPersonaPreviewSceneAnimationController"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" PersonaPreviewSceneController . h \" # include \" UObject / SoftObjectPtr . h \" # include \" PersonaPreviewSceneAnimationController . generated . h \" class UAnimationAsset ; class USkeleton ;)",
    "insertText": "UCLASS(DisplayName=\"Use Specific Animation\")"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category = \"Animation\", meta = (DisplayThumbnail = true))"
  },
  {
    "label": "InitializeView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeView(UPersonaPreviewSceneDescription* SceneDescription, IPersonaPreviewScene* PreviewScene)"
  },
  {
    "label": "UninitializeView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UninitializeView(UPersonaPreviewSceneDescription* SceneDescription, IPersonaPreviewScene* PreviewScene)"
  },
  {
    "label": "AddPreviewControllerPropertyToDetails()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddPreviewControllerPropertyToDetails(const TSharedRef<IPersonaToolkit>& PersonaToolkit, IDetailLayoutBuilder& DetailBuilder, IDetailCategoryBuilder& Category, const FProperty* Property, const EPropertyLocation::Type PropertyLocation)"
  },
  {
    "label": "HandleShouldFilterAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleShouldFilterAsset(const FAssetData& InAssetData, const USkeleton* InSkeleton)"
  }
]