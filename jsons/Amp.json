[
  {
    "label": "FWetDry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWetDry"
  },
  {
    "label": "FAmp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAmp"
  },
  {
    "label": "FAmp()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FAmp()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const int32 InVoiceId = INDEX_NONE, FModulationMatrix* ModMatrix = nullptr)"
  },
  {
    "label": "SetGainDb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGainDb(const float InGainDB)"
  },
  {
    "label": "SetGainModDb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGainModDb(const float InGainModDb)"
  },
  {
    "label": "SetGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGain(const float InGainLinear)"
  },
  {
    "label": "SetGainMod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGainMod(const float InBipolarGainModLinear)"
  },
  {
    "label": "SetGainEnv()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGainEnv(const float InGainEnv)"
  },
  {
    "label": "SetGainEnvDb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGainEnvDb(const float InGainEnvDb)"
  },
  {
    "label": "SetGainRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGainRange(const float InMin, const float InMax)"
  },
  {
    "label": "SetVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVelocity(const float InVelocity)"
  },
  {
    "label": "SetPan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPan(const float InPan)"
  },
  {
    "label": "SetPanModulator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPanModulator(const float InPanMod)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const float LeftIn, float* LeftOutput, float* RightOutput)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const float LeftIn, const float RightIn, float* LeftOutput, float* RightOutput)"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Generate(float& OutGainLeft, float& OutGainRight)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update()"
  }
]