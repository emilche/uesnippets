[
  {
    "label": "TRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRange"
  },
  {
    "label": "FMovieSceneTransformBreadcrumbs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTransformBreadcrumbs"
  },
  {
    "label": "FMovieSceneNestedSequenceTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneNestedSequenceTransform"
  },
  {
    "label": "FMovieSceneInverseNestedSequenceTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneInverseNestedSequenceTransform"
  },
  {
    "label": "FInverseTransformTimeParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInverseTransformTimeParams"
  },
  {
    "label": "FTransformTimeParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransformTimeParams"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMovieSceneTransformBreadcrumbs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTransformBreadcrumbs"
  },
  {
    "label": "FMovieSceneWarpCounter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneWarpCounter"
  },
  {
    "label": "FMovieSceneInverseNestedSequenceTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneInverseNestedSequenceTransform"
  },
  {
    "label": "FMovieSceneNestedSequenceTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneNestedSequenceTransform"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FMovieSceneSequenceTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceTransform"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "FMovieSceneInverseSequenceTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneInverseSequenceTransform"
  },
  {
    "label": "FMovieSceneWarpCounter()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FMovieSceneWarpCounter()"
  },
  {
    "label": "FMovieSceneWarpCounter()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FMovieSceneWarpCounter(const FMovieSceneWarpCounter&)"
  },
  {
    "label": "FMovieSceneWarpCounter()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FMovieSceneWarpCounter(FMovieSceneWarpCounter&&)"
  },
  {
    "label": "FMovieSceneNestedSequenceTransform()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FMovieSceneNestedSequenceTransform()"
  },
  {
    "label": "FMovieSceneNestedSequenceTransform()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FMovieSceneNestedSequenceTransform(const FMovieSceneNestedSequenceTransform&)"
  },
  {
    "label": "FMovieSceneNestedSequenceTransform()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FMovieSceneNestedSequenceTransform(FMovieSceneNestedSequenceTransform&&)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FMovieSceneTimeTransform InTransform)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FFrameTime InOffset, FMovieSceneTimeWarpVariant&& InTimeWarp)"
  },
  {
    "label": "AddLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLoop(FFrameNumber Start, FFrameNumber End)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(const FMovieSceneSequenceTransform& Tail)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(const FMovieSceneSequenceTransform& InTransform)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(const FMovieSceneWarpCounter& InCounter)"
  }
]