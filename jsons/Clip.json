[
  {
    "label": "MaskInteriorVoxels",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MaskInteriorVoxels"
  },
  {
    "label": "CopyLeafNodes",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CopyLeafNodes"
  },
  {
    "label": "BoolSampler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BoolSampler"
  },
  {
    "label": "TreeT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TreeT"
  },
  {
    "label": "ConvertGrid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConvertGrid"
  },
  {
    "label": "ConvertGrid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConvertGrid"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "clip()",
    "kind": "Method",
    "detail": "Function (GridType::Ptr)",
    "insertText": "clip(const GridType& grid, const BBoxd& bbox, bool keepInterior = true)"
  },
  {
    "label": "clip()",
    "kind": "Method",
    "detail": "Function (GridType::Ptr)",
    "insertText": "clip(const GridType& grid, const math::NonlinearFrustumMap& frustum, bool keepInterior = true)"
  },
  {
    "label": "clip()",
    "kind": "Method",
    "detail": "Function (GridType::Ptr)",
    "insertText": "clip(const GridType& grid, const Grid<MaskTreeType>& mask, bool keepInterior = true)"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "run(bool threaded = true)"
  },
  {
    "label": "acc()",
    "kind": "Method",
    "detail": "Function (tree::ValueAccessor<TreeT>)",
    "insertText": "acc(*mNewTree)"
  },
  {
    "label": "refAcc()",
    "kind": "Method",
    "detail": "Function (TreeT>)",
    "insertText": "refAcc(*mTree)"
  },
  {
    "label": "gridMask()",
    "kind": "Method",
    "detail": "Function (MaskTreeT)",
    "insertText": "gridMask(false)"
  },
  {
    "label": "leafNodes()",
    "kind": "Method",
    "detail": "Function (tree::LeafManager<MaskTreeT>)",
    "insertText": "leafNodes(gridMask)"
  },
  {
    "label": "acc()",
    "kind": "Method",
    "detail": "Function (TreeT>)",
    "insertText": "acc(tree)"
  },
  {
    "label": "iter()",
    "kind": "Method",
    "detail": "Function (MaskTreeT::ValueAllIter)",
    "insertText": "iter(gridMask)"
  },
  {
    "label": "leafNodes()",
    "kind": "Method",
    "detail": "Function (MaskTreeT>)",
    "insertText": "leafNodes(gridMask)"
  },
  {
    "label": "maskOp()",
    "kind": "Method",
    "detail": "Function (CopyLeafNodes<TreeT>)",
    "insertText": "maskOp(tree, leafNodes)"
  },
  {
    "label": "refAcc()",
    "kind": "Method",
    "detail": "Function (TreeT>)",
    "insertText": "refAcc(tree)"
  },
  {
    "label": "maskAcc()",
    "kind": "Method",
    "detail": "Function (MaskTreeT>)",
    "insertText": "maskAcc(gridMask)"
  },
  {
    "label": "clipMask()",
    "kind": "Method",
    "detail": "Function (MaskGridT)",
    "insertText": "clipMask(/*background=*/false)"
  }
]