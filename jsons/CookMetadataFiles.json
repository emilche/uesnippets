[
  {
    "label": "FAssetRegistryState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRegistryState"
  },
  {
    "label": "FCookedPackageStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookedPackageStore"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FCookMetadataState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookMetadataState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / EnumClassFlags . h \" class FAssetRegistryState ; class FCookedPackageStore ; class FString ; namespace UE::Cook { class FCookMetadataState ; } enum class ECookMetadataFiles { None = 0,AssetRegistry = 1,CookMetadata = 2,All = 4 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(ECookMetadataFiles)"
  },
  {
    "label": "FindAndLoadMetadataFiles()",
    "kind": "Method",
    "detail": "Function (ECookMetadataFiles)",
    "insertText": "FindAndLoadMetadataFiles(FCookedPackageStore* InPackageStore, const FString& InCookedDir, ECookMetadataFiles InRequiredFiles, FAssetRegistryState& OutAssetRegistry, FString* OutAssetRegistryFileName , UE::Cook::FCookMetadataState* OutCookMetadata, FString* OutCookMetadataFileName)"
  }
]