[
  {
    "label": "TAKE8_8()",
    "kind": "Method",
    "detail": "Function (# if MSGPACK_ENDIAN_LITTLE_BYTE # define)",
    "insertText": "TAKE8_8(d) ((uint8_t*)&d)[0] #define TAKE8_16(d) ((uint8_t*)&d)[0] #define TAKE8_32(d) ((uint8_t*)&d)[0] #define TAKE8_64(d) ((uint8_t*)&d)[0] #elif MSGPACK_ENDIAN_BIG_BYTE #define TAKE8_8(d) ((uint8_t*)&d)[0] #define TAKE8_16(d) ((uint8_t*)&d)[1] #define TAKE8_32(d) ((uint8_t*)&d)[3] #define TAKE8_64(d) ((uint8_t*)&d)[7] #else #error msgpack-c supports only big endian and little endian #endif #ifndef msgpack_pack_inline_func #error msgpack_pack_inline_func template is not defined #endif #ifndef msgpack_pack_user #error msgpack_pack_user type is not defined #endif #ifndef msgpack_pack_append_buffer #error msgpack_pack_append_buffer callback is not defined #endif #define msgpack_pack_real_uint8(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(d < (1<<7))"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (\\ \\)",
    "insertText": "msgpack_pack_append_buffer(x, &TAKE8_8(d), 1)"
  },
  {
    "label": "TAKE8_8()",
    "kind": "Method",
    "detail": "Function (\\ } else { \\ \\ unsigned char buf [ 2 ] = { 0 xcc,)",
    "insertText": "TAKE8_8(d)"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "msgpack_pack_append_buffer(x, buf, 2)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\ })",
    "insertText": "while(0) #define msgpack_pack_real_uint16(x, d)"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (\\ \\)",
    "insertText": "msgpack_pack_append_buffer(x, &TAKE8_16(d), 1)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } else)",
    "insertText": "if(d < (1<<8))"
  },
  {
    "label": "TAKE8_16()",
    "kind": "Method",
    "detail": "Function (\\ \\ unsigned char buf [ 2 ] = { 0 xcc,)",
    "insertText": "TAKE8_16(d)"
  },
  {
    "label": "_msgpack_store16()",
    "kind": "Method",
    "detail": "Function (\\ } else { \\ \\ unsigned char buf [ 3 ] ; \\ buf [ 0 ] = 0 xcd ;)",
    "insertText": "_msgpack_store16(&buf[1], (uint16_t)d)"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "msgpack_pack_append_buffer(x, buf, 3)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\ })",
    "insertText": "while(0) #define msgpack_pack_real_uint32(x, d)"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (\\ \\)",
    "insertText": "msgpack_pack_append_buffer(x, &TAKE8_32(d), 1)"
  },
  {
    "label": "TAKE8_32()",
    "kind": "Method",
    "detail": "Function (\\ } else { \\ \\ unsigned char buf [ 2 ] = { 0 xcc,)",
    "insertText": "TAKE8_32(d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } else { \\)",
    "insertText": "if(d < (1<<16))"
  },
  {
    "label": "_msgpack_store32()",
    "kind": "Method",
    "detail": "Function (\\ } else { \\ \\ unsigned char buf [ 5 ] ; \\ buf [ 0 ] = 0 xce ;)",
    "insertText": "_msgpack_store32(&buf[1], (uint32_t)d)"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "msgpack_pack_append_buffer(x, buf, 5)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ })",
    "insertText": "while(0) #define msgpack_pack_real_uint64(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(d < (1ULL<<8))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(d < (1ULL<<7))"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (\\ \\)",
    "insertText": "msgpack_pack_append_buffer(x, &TAKE8_64(d), 1)"
  },
  {
    "label": "TAKE8_64()",
    "kind": "Method",
    "detail": "Function (\\ } else { \\ \\ unsigned char buf [ 2 ] = { 0 xcc,)",
    "insertText": "TAKE8_64(d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } else { \\)",
    "insertText": "if(d < (1ULL<<16))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } else)",
    "insertText": "if(d < (1ULL<<32))"
  },
  {
    "label": "_msgpack_store64()",
    "kind": "Method",
    "detail": "Function (\\ } else { \\ \\ unsigned char buf [ 9 ] ; \\ buf [ 0 ] = 0 xcf ;)",
    "insertText": "_msgpack_store64(&buf[1], d)"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "msgpack_pack_append_buffer(x, buf, 9)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ })",
    "insertText": "while(0) #define msgpack_pack_real_int8(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(d < -(1<<5))"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\ })",
    "insertText": "while(0) #define msgpack_pack_real_int16(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(d < -(1<<7))"
  },
  {
    "label": "_msgpack_store16()",
    "kind": "Method",
    "detail": "Function (\\ \\ unsigned char buf [ 3 ] ; \\ buf [ 0 ] = 0 xd1 ;)",
    "insertText": "_msgpack_store16(&buf[1], (int16_t)d)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ })",
    "insertText": "while(0) #define msgpack_pack_real_int32(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(d < -(1<<15))"
  },
  {
    "label": "_msgpack_store32()",
    "kind": "Method",
    "detail": "Function (\\ \\ unsigned char buf [ 5 ] ; \\ buf [ 0 ] = 0 xd2 ;)",
    "insertText": "_msgpack_store32(&buf[1], (int32_t)d)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ })",
    "insertText": "while(0) #define msgpack_pack_real_int64(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(d < -(1LL<<5))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(d < -(1LL<<15))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(d < -(1LL<<31))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } else { \\)",
    "insertText": "if(d < (1LL<<16))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } else { \\)",
    "insertText": "if(d < (1LL<<32))"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ } \\ })",
    "insertText": "while(0) #ifdef msgpack_pack_inline_func_fixint msgpack_pack_inline_func_fixint(_uint8)(msgpack_pack_user x, uint8_t d)"
  },
  {
    "label": "msgpack_pack_inline_func_fixint()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func_fixint(_uint16)(msgpack_pack_user x, uint16_t d)"
  },
  {
    "label": "_msgpack_store16()",
    "kind": "Method",
    "detail": "Function (unsigned char buf [ 3 ] ; buf [ 0 ] = 0 xcd ;)",
    "insertText": "_msgpack_store16(&buf[1], d)"
  },
  {
    "label": "msgpack_pack_inline_func_fixint()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func_fixint(_uint32)(msgpack_pack_user x, uint32_t d)"
  },
  {
    "label": "_msgpack_store32()",
    "kind": "Method",
    "detail": "Function (unsigned char buf [ 5 ] ; buf [ 0 ] = 0 xce ;)",
    "insertText": "_msgpack_store32(&buf[1], d)"
  },
  {
    "label": "msgpack_pack_inline_func_fixint()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func_fixint(_uint64)(msgpack_pack_user x, uint64_t d)"
  },
  {
    "label": "msgpack_pack_inline_func_fixint()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func_fixint(_int8)(msgpack_pack_user x, int8_t d)"
  },
  {
    "label": "msgpack_pack_inline_func_fixint()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func_fixint(_int16)(msgpack_pack_user x, int16_t d)"
  },
  {
    "label": "msgpack_pack_inline_func_fixint()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func_fixint(_int32)(msgpack_pack_user x, int32_t d)"
  },
  {
    "label": "msgpack_pack_inline_func_fixint()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func_fixint(_int64)(msgpack_pack_user x, int64_t d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (} # undef msgpack_pack_inline_func_fixint # endif)",
    "insertText": "msgpack_pack_inline_func(_uint8)(msgpack_pack_user x, uint8_t d)"
  },
  {
    "label": "msgpack_pack_real_uint8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "msgpack_pack_real_uint8(x, d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_uint16)(msgpack_pack_user x, uint16_t d)"
  },
  {
    "label": "msgpack_pack_real_uint16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "msgpack_pack_real_uint16(x, d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_uint32)(msgpack_pack_user x, uint32_t d)"
  },
  {
    "label": "msgpack_pack_real_uint32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "msgpack_pack_real_uint32(x, d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_uint64)(msgpack_pack_user x, uint64_t d)"
  },
  {
    "label": "msgpack_pack_real_uint64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "msgpack_pack_real_uint64(x, d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_int8)(msgpack_pack_user x, int8_t d)"
  },
  {
    "label": "msgpack_pack_real_int8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "msgpack_pack_real_int8(x, d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_int16)(msgpack_pack_user x, int16_t d)"
  },
  {
    "label": "msgpack_pack_real_int16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "msgpack_pack_real_int16(x, d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_int32)(msgpack_pack_user x, int32_t d)"
  },
  {
    "label": "msgpack_pack_real_int32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "msgpack_pack_real_int32(x, d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_int64)(msgpack_pack_user x, int64_t d)"
  },
  {
    "label": "msgpack_pack_real_int64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "msgpack_pack_real_int64(x, d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_char)(msgpack_pack_user x, char d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(CHAR_MIN) #if CHAR_MIN < 0 msgpack_pack_real_int8(x, d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (# endif # else # error CHAR_MIN is not defined # endif })",
    "insertText": "msgpack_pack_inline_func(_signed_char)(msgpack_pack_user x, signed char d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_unsigned_char)(msgpack_pack_user x, unsigned char d)"
  },
  {
    "label": "msgpack_pack_inline_func_cint()",
    "kind": "Method",
    "detail": "Function (} # ifdef msgpack_pack_inline_func_cint)",
    "insertText": "msgpack_pack_inline_func_cint(_short)(msgpack_pack_user x, short d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(SIZEOF_SHORT) #if SIZEOF_SHORT == 2 msgpack_pack_real_int16(x, d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # elif)",
    "insertText": "defined(SHRT_MAX) #if SHRT_MAX == 0x7fff msgpack_pack_real_int16(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif # else)",
    "insertText": "if(sizeof(short) == 2)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(sizeof(short) == 4)"
  },
  {
    "label": "msgpack_pack_inline_func_cint()",
    "kind": "Method",
    "detail": "Function (} # endif })",
    "insertText": "msgpack_pack_inline_func_cint(_int)(msgpack_pack_user x, int d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(SIZEOF_INT) #if SIZEOF_INT == 2 msgpack_pack_real_int16(x, d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # elif)",
    "insertText": "defined(INT_MAX) #if INT_MAX == 0x7fff msgpack_pack_real_int16(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif # else)",
    "insertText": "if(sizeof(int) == 2)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(sizeof(int) == 4)"
  },
  {
    "label": "msgpack_pack_inline_func_cint()",
    "kind": "Method",
    "detail": "Function (} # endif })",
    "insertText": "msgpack_pack_inline_func_cint(_long)(msgpack_pack_user x, long d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(SIZEOF_LONG) #if SIZEOF_LONG == 2 msgpack_pack_real_int16(x, d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # elif)",
    "insertText": "defined(LONG_MAX) #if LONG_MAX == 0x7fffL msgpack_pack_real_int16(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif # else)",
    "insertText": "if(sizeof(long) == 2)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(sizeof(long) == 4)"
  },
  {
    "label": "msgpack_pack_inline_func_cint()",
    "kind": "Method",
    "detail": "Function (} # endif })",
    "insertText": "msgpack_pack_inline_func_cint(_long_long)(msgpack_pack_user x, long long d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(SIZEOF_LONG_LONG) #if SIZEOF_LONG_LONG == 2 msgpack_pack_real_int16(x, d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # elif)",
    "insertText": "defined(LLONG_MAX) #if LLONG_MAX == 0x7fffL msgpack_pack_real_int16(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif # else)",
    "insertText": "if(sizeof(long long) == 2)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(sizeof(long long) == 4)"
  },
  {
    "label": "msgpack_pack_inline_func_cint()",
    "kind": "Method",
    "detail": "Function (} # endif })",
    "insertText": "msgpack_pack_inline_func_cint(_unsigned_short)(msgpack_pack_user x, unsigned short d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(SIZEOF_SHORT) #if SIZEOF_SHORT == 2 msgpack_pack_real_uint16(x, d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # elif)",
    "insertText": "defined(USHRT_MAX) #if USHRT_MAX == 0xffffU msgpack_pack_real_uint16(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif # else)",
    "insertText": "if(sizeof(unsigned short) == 2)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(sizeof(unsigned short) == 4)"
  },
  {
    "label": "msgpack_pack_inline_func_cint()",
    "kind": "Method",
    "detail": "Function (} # endif })",
    "insertText": "msgpack_pack_inline_func_cint(_unsigned_int)(msgpack_pack_user x, unsigned int d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(SIZEOF_INT) #if SIZEOF_INT == 2 msgpack_pack_real_uint16(x, d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # elif)",
    "insertText": "defined(UINT_MAX) #if UINT_MAX == 0xffffU msgpack_pack_real_uint16(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif # else)",
    "insertText": "if(sizeof(unsigned int) == 2)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(sizeof(unsigned int) == 4)"
  },
  {
    "label": "msgpack_pack_inline_func_cint()",
    "kind": "Method",
    "detail": "Function (} # endif })",
    "insertText": "msgpack_pack_inline_func_cint(_unsigned_long)(msgpack_pack_user x, unsigned long d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(SIZEOF_LONG) #if SIZEOF_LONG == 2 msgpack_pack_real_uint16(x, d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # elif)",
    "insertText": "defined(ULONG_MAX) #if ULONG_MAX == 0xffffUL msgpack_pack_real_uint16(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif # else)",
    "insertText": "if(sizeof(unsigned long) == 2)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(sizeof(unsigned long) == 4)"
  },
  {
    "label": "msgpack_pack_inline_func_cint()",
    "kind": "Method",
    "detail": "Function (} # endif })",
    "insertText": "msgpack_pack_inline_func_cint(_unsigned_long_long)(msgpack_pack_user x, unsigned long long d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(SIZEOF_LONG_LONG) #if SIZEOF_LONG_LONG == 2 msgpack_pack_real_uint16(x, d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # elif)",
    "insertText": "defined(ULLONG_MAX) #if ULLONG_MAX == 0xffffUL msgpack_pack_real_uint16(x, d)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif # else)",
    "insertText": "if(sizeof(unsigned long long) == 2)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(sizeof(unsigned long long) == 4)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (} # endif } # undef msgpack_pack_inline_func_cint # endif)",
    "insertText": "msgpack_pack_inline_func(_float)(msgpack_pack_user x, float d)"
  },
  {
    "label": "_msgpack_store32()",
    "kind": "Method",
    "detail": "Function (unsigned char buf [ 5 ] ; union { float f ; uint32_t i ; } mem ; mem . f = d ; buf [ 0 ] = 0 xca ;)",
    "insertText": "_msgpack_store32(&buf[1], mem.i)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_double)(msgpack_pack_user x, double d)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (unsigned char buf [ 9 ] ; union { double f ; uint64_t i ; } mem ; mem . f = d ; buf [ 0 ] = 0 xcb ; # if)",
    "insertText": "defined(TARGET_OS_IPHONE) #elif defined(__arm__) && !(__ARM_EABI__) mem.i = (mem.i & 0xFFFFFFFFUL) << 32UL | (mem.i >> 32UL)"
  },
  {
    "label": "_msgpack_store64()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "_msgpack_store64(&buf[1], mem.i)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_nil)(msgpack_pack_user x)"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (const unsigned char d = 0 xc0 ;)",
    "insertText": "msgpack_pack_append_buffer(x, &d, 1)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_true)(msgpack_pack_user x)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_false)(msgpack_pack_user x)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_array)(msgpack_pack_user x, size_t n)"
  },
  {
    "label": "x90()",
    "kind": "Method",
    "detail": "Function (unsigned char d = 0)",
    "insertText": "x90(uint8_t)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(n < 65536)"
  },
  {
    "label": "_msgpack_store16()",
    "kind": "Method",
    "detail": "Function (unsigned char buf [ 3 ] ; buf [ 0 ] = 0 xdc ;)",
    "insertText": "_msgpack_store16(&buf[1], (uint16_t)n)"
  },
  {
    "label": "_msgpack_store32()",
    "kind": "Method",
    "detail": "Function (} else { unsigned char buf [ 5 ] ; buf [ 0 ] = 0 xdd ;)",
    "insertText": "_msgpack_store32(&buf[1], (uint32_t)n)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "msgpack_pack_inline_func(_map)(msgpack_pack_user x, size_t n)"
  },
  {
    "label": "x80()",
    "kind": "Method",
    "detail": "Function (unsigned char d = 0)",
    "insertText": "x80(uint8_t)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "msgpack_pack_inline_func(_str)(msgpack_pack_user x, size_t l)"
  },
  {
    "label": "xa0()",
    "kind": "Method",
    "detail": "Function (unsigned char d = 0)",
    "insertText": "xa0(uint8_t)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(l < 256)"
  },
  {
    "label": "buf()",
    "kind": "Method",
    "detail": "Function (unsigned char buf [ 2 ] ; buf [ 0 ] = 0 xd9 ;)",
    "insertText": "buf(uint8_t)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(l < 65536)"
  },
  {
    "label": "_msgpack_store16()",
    "kind": "Method",
    "detail": "Function (unsigned char buf [ 3 ] ; buf [ 0 ] = 0 xda ;)",
    "insertText": "_msgpack_store16(&buf[1], (uint16_t)l)"
  },
  {
    "label": "_msgpack_store32()",
    "kind": "Method",
    "detail": "Function (} else { unsigned char buf [ 5 ] ; buf [ 0 ] = 0 xdb ;)",
    "insertText": "_msgpack_store32(&buf[1], (uint32_t)l)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "msgpack_pack_inline_func(_str_body)(msgpack_pack_user x, const void* b, size_t l)"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "msgpack_pack_append_buffer(x, (const unsigned char*)b, l)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_v4raw)(msgpack_pack_user x, size_t l)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "msgpack_pack_inline_func(_v4raw_body)(msgpack_pack_user x, const void* b, size_t l)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_bin)(msgpack_pack_user x, size_t l)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "msgpack_pack_inline_func(_bin_body)(msgpack_pack_user x, const void* b, size_t l)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "msgpack_pack_inline_func(_ext)(msgpack_pack_user x, size_t l, int8_t type)"
  },
  {
    "label": "buf()",
    "kind": "Method",
    "detail": "Function (unsigned char buf [ 3 ] ; buf [ 0 ] = 0 xc7 ;)",
    "insertText": "buf(unsigned char)"
  },
  {
    "label": "_msgpack_store16()",
    "kind": "Method",
    "detail": "Function (unsigned char buf [ 4 ] ; buf [ 0 ] = 0 xc8 ;)",
    "insertText": "_msgpack_store16(&buf[1], l)"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (buf [ 3 ] = type ;)",
    "insertText": "msgpack_pack_append_buffer(x, buf, 4)"
  },
  {
    "label": "_msgpack_store32()",
    "kind": "Method",
    "detail": "Function (} else { unsigned char buf [ 6 ] ; buf [ 0 ] = 0 xc9 ;)",
    "insertText": "_msgpack_store32(&buf[1], l)"
  },
  {
    "label": "msgpack_pack_append_buffer()",
    "kind": "Method",
    "detail": "Function (buf [ 5 ] = type ;)",
    "insertText": "msgpack_pack_append_buffer(x, buf, 6)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (} break ; } })",
    "insertText": "msgpack_pack_inline_func(_ext_body)(msgpack_pack_user x, const void* b, size_t l)"
  }
]