[
  {
    "label": "CharSetUTF8Valid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetUTF8Valid"
  },
  {
    "label": "CharStep",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharStep"
  },
  {
    "label": "StrPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrPtr"
  },
  {
    "label": "StrBuf",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrBuf"
  },
  {
    "label": "StrDict",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrDict"
  },
  {
    "label": "CharSetCvtCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtCache"
  },
  {
    "label": "CharSetCvt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvt"
  },
  {
    "label": "Errors",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Errors"
  },
  {
    "label": "MapEnt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MapEnt"
  },
  {
    "label": "CharSetCvtFromUTF8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtFromUTF8"
  },
  {
    "label": "CharSetCvtUTF8UTF8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF8UTF8"
  },
  {
    "label": "CharSetCvtUTF16",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF16"
  },
  {
    "label": "CharSetCvtUTF816",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF816"
  },
  {
    "label": "CharSetCvtUTF168",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF168"
  },
  {
    "label": "CharSetCvtUTF832",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF832"
  },
  {
    "label": "CharSetCvtUTF328",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF328"
  },
  {
    "label": "CharSetCvtUTF8to8859_1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF8to8859_1"
  },
  {
    "label": "CharSetCvt8859_1toUTF8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvt8859_1toUTF8"
  },
  {
    "label": "CharSetCvtUTF8toShiftJis",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF8toShiftJis"
  },
  {
    "label": "CharSetCvtShiftJistoUTF8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtShiftJistoUTF8"
  },
  {
    "label": "CharSetCvtUTF8toEUCJP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF8toEUCJP"
  },
  {
    "label": "CharSetCvtEUCJPtoUTF8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtEUCJPtoUTF8"
  },
  {
    "label": "SimpleCharSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SimpleCharSet"
  },
  {
    "label": "CharSetCvtUTF8toSimple",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF8toSimple"
  },
  {
    "label": "CharSetCvtSimpletoUTF8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtSimpletoUTF8"
  },
  {
    "label": "CharSetCvtUTF8toCp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF8toCp"
  },
  {
    "label": "CharSetCvtUTF8toCp949",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF8toCp949"
  },
  {
    "label": "CharSetCvtUTF8toCp936",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF8toCp936"
  },
  {
    "label": "CharSetCvtUTF8toCp950",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtUTF8toCp950"
  },
  {
    "label": "CharSetCvtCptoUTF8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtCptoUTF8"
  },
  {
    "label": "CharSetCvtCp949toUTF8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtCp949toUTF8"
  },
  {
    "label": "CharSetCvtCp936toUTF8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtCp936toUTF8"
  },
  {
    "label": "CharSetCvtCp950toUTF8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharSetCvtCp950toUTF8"
  },
  {
    "label": "FindCvt()",
    "kind": "Method",
    "detail": "Function (class CharSetUTF8Valid ; class CharStep ; class StrPtr ; class StrBuf ; class StrDict ; class CharSetCvtCache ; class CharSetCvt : public CharSetApi { public : enum Errors { NONE = 0,NOMAPPING,PARTIALCHAR } ; CharSetCvt*)",
    "insertText": "FindCvt(CharSet from, CharSet to)"
  },
  {
    "label": "FindCachedCvt()",
    "kind": "Method",
    "detail": "Function (CharSetCvt*)",
    "insertText": "FindCachedCvt(CharSetCvtCache *gCharSetCvtCache, CharSet from, CharSet to)"
  },
  {
    "label": "CharSetCvt()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CharSetCvt()"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (CharSetCvt*)",
    "insertText": "Clone()"
  },
  {
    "label": "ReverseCvt()",
    "kind": "Method",
    "detail": "Function (CharSetCvt*)",
    "insertText": "ReverseCvt()"
  },
  {
    "label": "Cvt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Cvt(const char **sourcestart, const char *sourceend, char **targetstart, char *targetend)"
  },
  {
    "label": "LastErr()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "LastErr()"
  },
  {
    "label": "ResetErr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetErr()"
  },
  {
    "label": "CvtBuffer()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "CvtBuffer(const char *, int len, int *retlen = 0)"
  },
  {
    "label": "FastCvt()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "FastCvt(const char *, int len, int *retlen = 0)"
  },
  {
    "label": "FastCvtQues()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "FastCvtQues(const char *, int len, int *retlen = 0)"
  },
  {
    "label": "IgnoreBOM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IgnoreBOM()"
  },
  {
    "label": "ResetCnt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCnt()"
  },
  {
    "label": "LineCnt()",
    "kind": "Method",
    "detail": "Function (linecnt = 1 ; charcnt = 0 ; } int)",
    "insertText": "LineCnt()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (struct MapEnt { unsigned short cfrom,cto ; } ; char bytesFromUTF8 [ ] ; unsigned long offsetsFromUTF8 [ ] ; unsigned long minimumFromUTF8 [ ] ; void)",
    "insertText": "Init()"
  },
  {
    "label": "CharSetCvt()",
    "kind": "Method",
    "detail": "Function (protected : class CharSetCvtCache ;)",
    "insertText": "CharSetCvt() : lasterr(0), linecnt(1), charcnt(0), fastbuf(0), fastsize(0)"
  },
  {
    "label": "doverify()",
    "kind": "Method",
    "detail": "Function (} int lasterr ; int linecnt ; int charcnt ; void)",
    "insertText": "doverify(MapEnt *, int, MapEnt *, int)"
  },
  {
    "label": "dodump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dodump(MapEnt *, int)"
  },
  {
    "label": "printmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "printmap(unsigned short, unsigned short, unsigned short)"
  },
  {
    "label": "printmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "printmap(unsigned short, unsigned short)"
  },
  {
    "label": "FromCharStep()",
    "kind": "Method",
    "detail": "Function (CharStep*)",
    "insertText": "FromCharStep(char *)"
  },
  {
    "label": "MapThru()",
    "kind": "Method",
    "detail": "Function (unsigned short)",
    "insertText": "MapThru(unsigned short, const MapEnt *, int, unsigned short)"
  },
  {
    "label": "CharSetCvt()",
    "kind": "Method",
    "detail": "Function (private : char* fastbuf ; int fastsize ;)",
    "insertText": "CharSetCvt(const CharSetCvt &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const CharSetCvt &)"
  },
  {
    "label": "CharSetCvtCache()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtCache { public :)",
    "insertText": "CharSetCvtCache()"
  },
  {
    "label": "FindCvt()",
    "kind": "Method",
    "detail": "Function (CharSetCvt*)",
    "insertText": "FindCvt(CharSetCvt::CharSet from, CharSetCvt::CharSet to)"
  },
  {
    "label": "InsertCvt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertCvt(CharSetCvt::CharSet from, CharSetCvt::CharSet to, CharSetCvt * cvt)"
  },
  {
    "label": "CharSetCvtFromUTF8()",
    "kind": "Method",
    "detail": "Function (private : CharSetCvt** fromUtf8To ; CharSetCvt** toUtf8From ; } ; class CharSetCvtFromUTF8 : public CharSetCvt { protected :)",
    "insertText": "CharSetCvtFromUTF8() : checkBOM(0)"
  },
  {
    "label": "CharSetCvtUTF8UTF8()",
    "kind": "Method",
    "detail": "Function (int checkBOM ; } ; class CharSetCvtUTF8UTF8 : public CharSetCvtFromUTF8 { public :)",
    "insertText": "CharSetCvtUTF8UTF8(int dir, int f)"
  },
  {
    "label": "CharSetCvtUTF8UTF8()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CharSetCvtUTF8UTF8()"
  },
  {
    "label": "CharSetCvtUTF16()",
    "kind": "Method",
    "detail": "Function (private : int direction ; int flags ; CharSetUTF8Valid* validator ; } ; class CharSetCvtUTF16 : public CharSetCvtFromUTF8 { protected :)",
    "insertText": "CharSetCvtUTF16(int, int)"
  },
  {
    "label": "CharSetCvtUTF816()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtUTF816 : public CharSetCvtUTF16 { public :)",
    "insertText": "CharSetCvtUTF816(int i = -1, int b = 0) : CharSetCvtUTF16(i, b)"
  },
  {
    "label": "CharSetCvtUTF168()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtUTF168 : public CharSetCvtUTF16 { public :)",
    "insertText": "CharSetCvtUTF168(int i = -1, int b = 0) : CharSetCvtUTF16(i, b)"
  },
  {
    "label": "CharSetCvtUTF832()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtUTF832 : public CharSetCvtUTF16 { public :)",
    "insertText": "CharSetCvtUTF832(int i = -1, int b = 0) : CharSetCvtUTF16(i, b)"
  },
  {
    "label": "CharSetCvtUTF328()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtUTF328 : public CharSetCvtUTF16 { public :)",
    "insertText": "CharSetCvtUTF328(int i = -1, int b = 0) : CharSetCvtUTF16(i, b)"
  },
  {
    "label": "verifymaps()",
    "kind": "Method",
    "detail": "Function (private : MapEnt UCS2toShiftJis [ ] ; void)",
    "insertText": "verifymaps()"
  },
  {
    "label": "dumpmaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dumpmaps()"
  },
  {
    "label": "mapreport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mapreport(MapEnt *, int)"
  },
  {
    "label": "mapreport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mapreport()"
  },
  {
    "label": "MapCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "MapCount()"
  },
  {
    "label": "CharSetCvtUTF8toSimple()",
    "kind": "Method",
    "detail": "Function (} ; struct SimpleCharSet { const CharSetCvt::MapEnt* toMap ; int toMapSize ; const unsigned short* fromMap ; int fromOffset ; } ; class CharSetCvtUTF8toSimple : public CharSetCvtFromUTF8 { public :)",
    "insertText": "CharSetCvtUTF8toSimple(int)"
  },
  {
    "label": "CharSetCvtUTF8toSimple()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CharSetCvtUTF8toSimple(const SimpleCharSet *s) : charinfo(s)"
  },
  {
    "label": "CharSetCvtSimpletoUTF8()",
    "kind": "Method",
    "detail": "Function (private : const SimpleCharSet* charinfo ; } ; class CharSetCvtSimpletoUTF8 : public CharSetCvt { public :)",
    "insertText": "CharSetCvtSimpletoUTF8(int)"
  },
  {
    "label": "CharSetCvtSimpletoUTF8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CharSetCvtSimpletoUTF8(const SimpleCharSet *s) : charinfo(s)"
  },
  {
    "label": "CharSetCvtUTF8toCp()",
    "kind": "Method",
    "detail": "Function (private : const SimpleCharSet* charinfo ; } ; class CharSetCvtUTF8toCp : public CharSetCvtFromUTF8 { protected :)",
    "insertText": "CharSetCvtUTF8toCp(const MapEnt *tMap, int toSz ) : toMap(tMap), toMapSize(toSz)"
  },
  {
    "label": "CharSetCvtUTF8toCp949()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtUTF8toCp949 : public CharSetCvtUTF8toCp { public :)",
    "insertText": "CharSetCvtUTF8toCp949() : CharSetCvtUTF8toCp( UCS2toCp949, MapCount())"
  },
  {
    "label": "CharSetCvtUTF8toCp936()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtUTF8toCp936 : public CharSetCvtUTF8toCp { public :)",
    "insertText": "CharSetCvtUTF8toCp936() : CharSetCvtUTF8toCp( UCS2toCp936, MapCount())"
  },
  {
    "label": "CharSetCvtUTF8toCp950()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtUTF8toCp950 : public CharSetCvtUTF8toCp { public :)",
    "insertText": "CharSetCvtUTF8toCp950() : CharSetCvtUTF8toCp( UCS2toCp950, MapCount())"
  },
  {
    "label": "CharSetCvtCptoUTF8()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtCptoUTF8 : public CharSetCvt { protected :)",
    "insertText": "CharSetCvtCptoUTF8(const MapEnt *tMap, int toSz ) : toMap(tMap), toMapSize(toSz)"
  },
  {
    "label": "isDoubleByte()",
    "kind": "Method",
    "detail": "Function (private : const MapEnt* toMap ; int toMapSize ; int)",
    "insertText": "isDoubleByte(int leadByte)"
  },
  {
    "label": "CharSetCvtCp949toUTF8()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtCp949toUTF8 : public CharSetCvtCptoUTF8 { public :)",
    "insertText": "CharSetCvtCp949toUTF8() : CharSetCvtCptoUTF8( Cp949toUCS2, MapCount())"
  },
  {
    "label": "CharSetCvtCp936toUTF8()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtCp936toUTF8 : public CharSetCvtCptoUTF8 { public :)",
    "insertText": "CharSetCvtCp936toUTF8() : CharSetCvtCptoUTF8( Cp936toUCS2, MapCount())"
  },
  {
    "label": "CharSetCvtCp950toUTF8()",
    "kind": "Method",
    "detail": "Function (} ; class CharSetCvtCp950toUTF8 : public CharSetCvtCptoUTF8 { public :)",
    "insertText": "CharSetCvtCp950toUTF8() : CharSetCvtCptoUTF8( Cp950toUCS2, MapCount())"
  }
]