[
  {
    "label": "UCameraComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraComponent"
  },
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FSequencerThumbnailCaptureSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerThumbnailCaptureSettings"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" MovieScene . h \" # include \" Templates / FunctionFwd . h \" class UCameraComponent ; class FSequencer ; class UMovieScene ; class UObject ; struct FSequencerThumbnailCaptureSettings ; namespace UE::Sequencer { using FCaptureFrame = TFunctionRef<)",
    "insertText": "void(const FFrameNumber& Frame, UCameraComponent& Camera)"
  },
  {
    "label": "CaptureThumbnailForAssetBlocking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureThumbnailForAssetBlocking(UObject& Asset, FSequencer& Sequencer, const FSequencerThumbnailCaptureSettings& Settings)"
  },
  {
    "label": "CaptureThumbnailFromCameraCutBlocking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CaptureThumbnailFromCameraCutBlocking(UObject& Asset, FSequencer& Sequencer, const FSequencerThumbnailCaptureSettings& Settings)"
  },
  {
    "label": "CaptureThumbnailFromViewportBlocking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureThumbnailFromViewportBlocking(UObject& Asset)"
  },
  {
    "label": "SetAssetThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAssetThumbnail(UObject& Asset, const TArrayView64<FColor>& Bitmap)"
  }
]