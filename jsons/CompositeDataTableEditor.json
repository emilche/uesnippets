[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SRowEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SRowEditor"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UDataTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataTable"
  },
  {
    "label": "FCompositeDataTableEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompositeDataTableEditor"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "FCompositeDataTableEditor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DataTableEditor . h \" # include \" Templates / SharedPointer . h \" # include \" Toolkits / IToolkit . h \" class FName ; class FSpawnTabArgs ; class SDockTab ; class SRowEditor ; class SWidget ; class UDataTable ; class FCompositeDataTableEditor : public FDataTableEditor { public :)",
    "insertText": "FCompositeDataTableEditor()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "InitDataTableEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitDataTableEditor(const EToolkitMode::Type Mode, const TSharedPtr< class IToolkitHost >& InitToolkitHost, UDataTable* Table)"
  },
  {
    "label": "CanEditRows()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditRows()"
  },
  {
    "label": "SpawnTab_Properties()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Properties(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_Stack()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Stack(const FSpawnTabArgs& Args)"
  },
  {
    "label": "CreateAndRegisterRowEditorTab()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CreateAndRegisterRowEditorTab(const TSharedRef<class FTabManager>& InTabManager)"
  },
  {
    "label": "CreateAndRegisterPropertiesTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAndRegisterPropertiesTab(const TSharedRef<class FTabManager>& InTabManager)"
  },
  {
    "label": "CreateStackBox()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "CreateStackBox()"
  },
  {
    "label": "CreateRowEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SRowEditor>)",
    "insertText": "CreateRowEditor(UDataTable* Table)"
  }
]