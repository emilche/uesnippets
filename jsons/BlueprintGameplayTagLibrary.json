[
  {
    "label": "UBlueprintGameplayTagLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintGameplayTagLibrary"
  },
  {
    "label": "MatchesTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesTag(FGameplayTag TagOne, FGameplayTag TagTwo, bool bExactMatch)"
  },
  {
    "label": "MatchesAnyTags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesAnyTags(FGameplayTag TagOne, const FGameplayTagContainer& OtherContainer, bool bExactMatch)"
  },
  {
    "label": "EqualEqual_GameplayTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EqualEqual_GameplayTag( FGameplayTag A, FGameplayTag B )"
  },
  {
    "label": "NotEqual_GameplayTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotEqual_GameplayTag( FGameplayTag A, FGameplayTag B )"
  },
  {
    "label": "IsGameplayTagValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGameplayTagValid(FGameplayTag GameplayTag)"
  },
  {
    "label": "GetTagName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetTagName(const FGameplayTag& GameplayTag)"
  },
  {
    "label": "MakeLiteralGameplayTag()",
    "kind": "Method",
    "detail": "Function (FGameplayTag)",
    "insertText": "MakeLiteralGameplayTag(FGameplayTag Value)"
  },
  {
    "label": "GetNumGameplayTagsInContainer()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumGameplayTagsInContainer(const FGameplayTagContainer& TagContainer)"
  },
  {
    "label": "HasTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasTag(const FGameplayTagContainer& TagContainer, FGameplayTag Tag, bool bExactMatch)"
  },
  {
    "label": "HasAnyTags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAnyTags(const FGameplayTagContainer& TagContainer, const FGameplayTagContainer& OtherContainer, bool bExactMatch)"
  },
  {
    "label": "HasAllTags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAllTags(const FGameplayTagContainer& TagContainer, const FGameplayTagContainer& OtherContainer, bool bExactMatch)"
  },
  {
    "label": "IsTagQueryEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTagQueryEmpty(const FGameplayTagQuery& TagQuery)"
  },
  {
    "label": "DoesContainerMatchTagQuery()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesContainerMatchTagQuery(const FGameplayTagContainer& TagContainer, const FGameplayTagQuery& TagQuery)"
  },
  {
    "label": "GetAllActorsOfClassMatchingTagQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllActorsOfClassMatchingTagQuery(UObject* WorldContextObject, TSubclassOf<AActor> ActorClass, const FGameplayTagQuery& GameplayTagQuery, TArray<AActor*>& OutActors)"
  },
  {
    "label": "EqualEqual_GameplayTagContainer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EqualEqual_GameplayTagContainer( const FGameplayTagContainer& A, const FGameplayTagContainer& B )"
  },
  {
    "label": "NotEqual_GameplayTagContainer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotEqual_GameplayTagContainer( const FGameplayTagContainer& A, const FGameplayTagContainer& B )"
  },
  {
    "label": "MakeLiteralGameplayTagContainer()",
    "kind": "Method",
    "detail": "Function (FGameplayTagContainer)",
    "insertText": "MakeLiteralGameplayTagContainer(FGameplayTagContainer Value)"
  },
  {
    "label": "MakeGameplayTagContainerFromArray()",
    "kind": "Method",
    "detail": "Function (FGameplayTagContainer)",
    "insertText": "MakeGameplayTagContainerFromArray(const TArray<FGameplayTag>& GameplayTags)"
  },
  {
    "label": "MakeGameplayTagContainerFromTag()",
    "kind": "Method",
    "detail": "Function (FGameplayTagContainer)",
    "insertText": "MakeGameplayTagContainerFromTag(FGameplayTag SingleTag)"
  },
  {
    "label": "BreakGameplayTagContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakGameplayTagContainer(const FGameplayTagContainer& GameplayTagContainer, TArray<FGameplayTag>& GameplayTags)"
  },
  {
    "label": "MakeGameplayTagQuery()",
    "kind": "Method",
    "detail": "Function (FGameplayTagQuery)",
    "insertText": "MakeGameplayTagQuery(FGameplayTagQuery TagQuery)"
  },
  {
    "label": "MakeGameplayTagQuery_MatchAnyTags()",
    "kind": "Method",
    "detail": "Function (FGameplayTagQuery)",
    "insertText": "MakeGameplayTagQuery_MatchAnyTags(const FGameplayTagContainer& InTags)"
  },
  {
    "label": "MakeGameplayTagQuery_MatchAllTags()",
    "kind": "Method",
    "detail": "Function (FGameplayTagQuery)",
    "insertText": "MakeGameplayTagQuery_MatchAllTags(const FGameplayTagContainer& InTags)"
  },
  {
    "label": "MakeGameplayTagQuery_MatchNoTags()",
    "kind": "Method",
    "detail": "Function (FGameplayTagQuery)",
    "insertText": "MakeGameplayTagQuery_MatchNoTags(const FGameplayTagContainer& InTags)"
  },
  {
    "label": "HasAllMatchingGameplayTags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAllMatchingGameplayTags(TScriptInterface<IGameplayTagAssetInterface> TagContainerInterface, const FGameplayTagContainer& OtherContainer)"
  },
  {
    "label": "DoesTagAssetInterfaceHaveTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesTagAssetInterfaceHaveTag(TScriptInterface<IGameplayTagAssetInterface> TagContainerInterface, FGameplayTag Tag)"
  },
  {
    "label": "NotEqual_TagTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotEqual_TagTag(FGameplayTag A, FString B)"
  },
  {
    "label": "NotEqual_TagContainerTagContainer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotEqual_TagContainerTagContainer(FGameplayTagContainer A, FString B)"
  },
  {
    "label": "GetOwnedGameplayTags()",
    "kind": "Method",
    "detail": "Function (FGameplayTagContainer)",
    "insertText": "GetOwnedGameplayTags(TScriptInterface<IGameplayTagAssetInterface> TagContainerInterface)"
  },
  {
    "label": "Conv_ObjectToGameplayTagAssetInterface()",
    "kind": "Method",
    "detail": "Function (TScriptInterface<IGameplayTagAssetInterface>)",
    "insertText": "Conv_ObjectToGameplayTagAssetInterface(UObject* InObject)"
  },
  {
    "label": "GetDebugStringFromGameplayTagContainer()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugStringFromGameplayTagContainer(const FGameplayTagContainer& TagContainer)"
  },
  {
    "label": "GetDebugStringFromGameplayTag()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugStringFromGameplayTag(FGameplayTag GameplayTag)"
  }
]