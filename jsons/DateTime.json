[
  {
    "label": "_PyDateTime_HAS_TZINFO()",
    "kind": "Method",
    "detail": "Function (# ifndef Py_LIMITED_API # ifndef DATETIME_H # define DATETIME_H # ifdef __cplusplus \" C \" { # endif # define _PyDateTime_DATE_DATASIZE 4 # define _PyDateTime_TIME_DATASIZE 6 # define _PyDateTime_DATETIME_DATASIZE 1 0 typedef struct { PyObject_HEAD Py_hash_t hashcode ; int days ; int seconds ; int microseconds ; } PyDateTime_Delta ; typedef struct { PyObject_HEAD } PyDateTime_TZInfo ; # define _PyTZINFO_HEAD \\ PyObject_HEAD \\ Py_hash_t hashcode ; \\ char hastzinfo ; typedef struct { _PyTZINFO_HEAD } _PyDateTime_BaseTZInfo ; # define _PyDateTime_TIMEHEAD \\ _PyTZINFO_HEAD \\ unsigned char data [ _PyDateTime_TIME_DATASIZE ] ; typedef struct { _PyDateTime_TIMEHEAD } _PyDateTime_BaseTime ; typedef struct { _PyDateTime_TIMEHEAD unsigned char fold ; PyObject* tzinfo ; } PyDateTime_Time ; typedef struct { _PyTZINFO_HEAD unsigned char data [ _PyDateTime_DATE_DATASIZE ] ; } PyDateTime_Date ; # define _PyDateTime_DATETIMEHEAD \\ _PyTZINFO_HEAD \\ unsigned char data [ _PyDateTime_DATETIME_DATASIZE ] ; typedef struct { _PyDateTime_DATETIMEHEAD } _PyDateTime_BaseDateTime ; typedef struct { _PyDateTime_DATETIMEHEAD unsigned char fold ; PyObject* tzinfo ; } PyDateTime_DateTime ; # define)",
    "insertText": "_PyDateTime_HAS_TZINFO(o) (((_PyDateTime_BaseTZInfo *)(o))->hastzinfo) #define PyDateTime_GET_YEAR(o) ((((PyDateTime_Date*)o)->data[0] << 8) | \\ ((PyDateTime_Date*)o)->data[1]) #define PyDateTime_GET_MONTH(o) (((PyDateTime_Date*)o)->data[2]) #define PyDateTime_GET_DAY(o) (((PyDateTime_Date*)o)->data[3]) #define PyDateTime_DATE_GET_HOUR(o) (((PyDateTime_DateTime*)o)->data[4]) #define PyDateTime_DATE_GET_MINUTE(o) (((PyDateTime_DateTime*)o)->data[5]) #define PyDateTime_DATE_GET_SECOND(o) (((PyDateTime_DateTime*)o)->data[6]) #define PyDateTime_DATE_GET_MICROSECOND(o) \\ ((((PyDateTime_DateTime*)o)->data[7] << 16) | \\ (((PyDateTime_DateTime*)o)->data[8] << 8) | \\ ((PyDateTime_DateTime*)o)->data[9]) #define PyDateTime_DATE_GET_FOLD(o) (((PyDateTime_DateTime*)o)->fold) #define PyDateTime_DATE_GET_TZINFO(o) (_PyDateTime_HAS_TZINFO(o) ? \\ ((PyDateTime_DateTime *)(o))->tzinfo : Py_None) #define PyDateTime_TIME_GET_HOUR(o) (((PyDateTime_Time*)o)->data[0]) #define PyDateTime_TIME_GET_MINUTE(o) (((PyDateTime_Time*)o)->data[1]) #define PyDateTime_TIME_GET_SECOND(o) (((PyDateTime_Time*)o)->data[2]) #define PyDateTime_TIME_GET_MICROSECOND(o) \\ ((((PyDateTime_Time*)o)->data[3] << 16) | \\ (((PyDateTime_Time*)o)->data[4] << 8) | \\ ((PyDateTime_Time*)o)->data[5]) #define PyDateTime_TIME_GET_FOLD(o) (((PyDateTime_Time*)o)->fold) #define PyDateTime_TIME_GET_TZINFO(o) (_PyDateTime_HAS_TZINFO(o) ? \\ ((PyDateTime_Time *)(o))->tzinfo : Py_None) #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days) #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds) #define PyDateTime_DELTA_GET_MICROSECONDS(o) \\ (((PyDateTime_Delta*)o)->microseconds)"
  },
  {
    "label": "PyObject()",
    "kind": "Method",
    "detail": "Function (PyTypeObject* DateType ; PyTypeObject* DateTimeType ; PyTypeObject* TimeType ; PyTypeObject* DeltaType ; PyTypeObject* TZInfoType ; PyObject* TimeZone_UTC ;)",
    "insertText": "PyObject(*Date_FromDate)(int, int, int, PyTypeObject*)"
  },
  {
    "label": "PyObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyObject(*DateTime_FromDateAndTime)(int, int, int, int, int, int, int, PyObject*, PyTypeObject*)"
  },
  {
    "label": "PyObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyObject(*Time_FromTime)(int, int, int, int, PyObject*, PyTypeObject*)"
  },
  {
    "label": "PyObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyObject(*Delta_FromDelta)(int, int, int, int, PyTypeObject*)"
  },
  {
    "label": "PyObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyObject(*TimeZone_FromTimeZone)(PyObject *offset, PyObject *name)"
  },
  {
    "label": "PyObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyObject(*DateTime_FromTimestamp)(PyObject*, PyObject*, PyObject*)"
  },
  {
    "label": "PyObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyObject(*Date_FromTimestamp)(PyObject*, PyObject*)"
  },
  {
    "label": "PyObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyObject(*DateTime_FromDateAndTimeAndFold)(int, int, int, int, int, int, int, PyObject*, int, PyTypeObject*)"
  },
  {
    "label": "PyObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyObject(*Time_FromTimeAndFold)(int, int, int, int, PyObject*, int, PyTypeObject*)"
  }
]