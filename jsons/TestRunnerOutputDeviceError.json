[
  {
    "label": "FTestRunnerOutputDeviceError",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTestRunnerOutputDeviceError"
  },
  {
    "label": "FTestRunnerOutputDeviceError()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / OutputDeviceError . h \" namespace UE::LowLevelTests { class FTestRunnerOutputDeviceError : public FOutputDeviceError { public :)",
    "insertText": "FTestRunnerOutputDeviceError(FOutputDeviceError* Error) : DeviceError(Error)"
  },
  {
    "label": "FTestRunnerOutputDeviceError()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTestRunnerOutputDeviceError() : DeviceError(nullptr)"
  },
  {
    "label": "HandleError()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HandleError()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Serialize(const TCHAR* V, ELogVerbosity::Type Verbosity, const FName& Category)"
  },
  {
    "label": "SetDeviceError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDeviceError(FOutputDeviceError* Error)"
  },
  {
    "label": "GetDeviceError()",
    "kind": "Method",
    "detail": "Function (DeviceError = Error ; } FOutputDeviceError*)",
    "insertText": "GetDeviceError()"
  }
]