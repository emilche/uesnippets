[
  {
    "label": "VpProfileProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpProfileProperties"
  },
  {
    "label": "VpInstanceCreateFlagBits",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VpInstanceCreateFlagBits"
  },
  {
    "label": "VpInstanceCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpInstanceCreateInfo"
  },
  {
    "label": "VpDeviceCreateFlagBits",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VpDeviceCreateFlagBits"
  },
  {
    "label": "VpDeviceCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpDeviceCreateInfo"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef VULKAN_PROFILES_H_ # define VULKAN_PROFILES_H_ 1 # define VPAPI_ATTR # ifdef __cplusplus \" C \" { # endif # include<vulkan / vulkan . h> # if)",
    "insertText": "defined(VK_VERSION_1_0) && \\ defined(VK_EXT_swapchain_colorspace) && \\ defined(VK_GOOGLE_display_timing) && \\ defined(VK_KHR_android_surface) && \\ defined(VK_KHR_dedicated_allocation) && \\ defined(VK_KHR_descriptor_update_template) && \\ defined(VK_KHR_external_fence) && \\ defined(VK_KHR_external_fence_capabilities) && \\ defined(VK_KHR_external_fence_fd) && \\ defined(VK_KHR_external_memory) && \\ defined(VK_KHR_external_memory_capabilities) && \\ defined(VK_KHR_external_semaphore) && \\ defined(VK_KHR_external_semaphore_capabilities) && \\ defined(VK_KHR_external_semaphore_fd) && \\ defined(VK_KHR_get_memory_requirements2) && \\ defined(VK_KHR_get_physical_device_properties2) && \\ defined(VK_KHR_get_surface_capabilities2) && \\ defined(VK_KHR_incremental_present) && \\ defined(VK_KHR_maintenance1) && \\ defined(VK_KHR_storage_buffer_storage_class) && \\ defined(VK_KHR_surface) && \\ defined(VK_KHR_swapchain) && \\ defined(VK_KHR_variable_pointers) #define VP_ANDROID_baseline_2021 1 #define VP_ANDROID_BASELINE_2021_NAME \"VP_ANDROID_baseline_2021\" #define VP_ANDROID_BASELINE_2021_SPEC_VERSION 2 #define VP_ANDROID_BASELINE_2021_MIN_API_VERSION VK_MAKE_VERSION(1, 0, 68) #endif #if defined(VK_VERSION_1_1) && \\ defined(VK_ANDROID_external_memory_android_hardware_buffer) && \\ defined(VK_EXT_queue_family_foreign) && \\ defined(VK_EXT_swapchain_colorspace) && \\ defined(VK_GOOGLE_display_timing) && \\ defined(VK_KHR_android_surface) && \\ defined(VK_KHR_create_renderpass2) && \\ defined(VK_KHR_dedicated_allocation) && \\ defined(VK_KHR_descriptor_update_template) && \\ defined(VK_KHR_driver_properties) && \\ defined(VK_KHR_external_fence) && \\ defined(VK_KHR_external_fence_capabilities) && \\ defined(VK_KHR_external_fence_fd) && \\ defined(VK_KHR_external_memory) && \\ defined(VK_KHR_external_memory_capabilities) && \\ defined(VK_KHR_external_semaphore) && \\ defined(VK_KHR_external_semaphore_capabilities) && \\ defined(VK_KHR_external_semaphore_fd) && \\ defined(VK_KHR_get_memory_requirements2) && \\ defined(VK_KHR_get_physical_device_properties2) && \\ defined(VK_KHR_get_surface_capabilities2) && \\ defined(VK_KHR_incremental_present) && \\ defined(VK_KHR_maintenance1) && \\ defined(VK_KHR_sampler_mirror_clamp_to_edge) && \\ defined(VK_KHR_storage_buffer_storage_class) && \\ defined(VK_KHR_surface) && \\ defined(VK_KHR_swapchain) && \\ defined(VK_KHR_variable_pointers) #define VP_ANDROID_baseline_2022 1 #define VP_ANDROID_BASELINE_2022_NAME \"VP_ANDROID_baseline_2022\" #define VP_ANDROID_BASELINE_2022_SPEC_VERSION 1 #define VP_ANDROID_BASELINE_2022_MIN_API_VERSION VK_MAKE_VERSION(1, 1, 106) #endif #if defined(VK_VERSION_1_3) && \\ defined(VK_KHR_global_priority) #define VP_KHR_roadmap_2022 1 #define VP_KHR_ROADMAP_2022_NAME \"VP_KHR_roadmap_2022\" #define VP_KHR_ROADMAP_2022_SPEC_VERSION 1 #define VP_KHR_ROADMAP_2022_MIN_API_VERSION VK_MAKE_VERSION(1, 3, 204) #endif #if defined(VK_VERSION_1_1) && \\ defined(VK_EXT_descriptor_indexing) && \\ defined(VK_EXT_host_query_reset) && \\ defined(VK_EXT_inline_uniform_block) && \\ defined(VK_EXT_memory_budget) && \\ defined(VK_EXT_robustness2) && \\ defined(VK_EXT_scalar_block_layout) && \\ defined(VK_EXT_subgroup_size_control) && \\ defined(VK_EXT_texel_buffer_alignment) && \\ defined(VK_EXT_vertex_attribute_divisor) && \\ defined(VK_KHR_16bit_storage) && \\ defined(VK_KHR_8bit_storage) && \\ defined(VK_KHR_bind_memory2) && \\ defined(VK_KHR_create_renderpass2) && \\ defined(VK_KHR_dedicated_allocation) && \\ defined(VK_KHR_depth_stencil_resolve) && \\ defined(VK_KHR_descriptor_update_template) && \\ defined(VK_KHR_device_group) && \\ defined(VK_KHR_driver_properties) && \\ defined(VK_KHR_external_fence) && \\ defined(VK_KHR_external_memory) && \\ defined(VK_KHR_external_semaphore) && \\ defined(VK_KHR_get_memory_requirements2) && \\ defined(VK_KHR_image_format_list) && \\ defined(VK_KHR_maintenance1) && \\ defined(VK_KHR_maintenance2) && \\ defined(VK_KHR_maintenance3) && \\ defined(VK_KHR_multiview) && \\ defined(VK_KHR_relaxed_block_layout) && \\ defined(VK_KHR_sampler_mirror_clamp_to_edge) && \\ defined(VK_KHR_shader_draw_parameters) && \\ defined(VK_KHR_shader_float16_int8) && \\ defined(VK_KHR_storage_buffer_storage_class) && \\ defined(VK_KHR_swapchain) && \\ defined(VK_KHR_swapchain_mutable_format) && \\ defined(VK_KHR_timeline_semaphore) && \\ defined(VK_KHR_uniform_buffer_standard_layout) && \\ defined(VK_KHR_variable_pointers) #define VP_LUNARG_desktop_baseline_2022 1 #define VP_LUNARG_DESKTOP_BASELINE_2022_NAME \"VP_LUNARG_desktop_baseline_2022\" #define VP_LUNARG_DESKTOP_BASELINE_2022_SPEC_VERSION 1 #define VP_LUNARG_DESKTOP_BASELINE_2022_MIN_API_VERSION VK_MAKE_VERSION(1, 1, 139) #endif #if defined(VK_VERSION_1_2) && \\ defined(VK_EXT_descriptor_indexing) && \\ defined(VK_EXT_host_query_reset) && \\ defined(VK_EXT_image_robustness) && \\ defined(VK_EXT_inline_uniform_block) && \\ defined(VK_EXT_memory_budget) && \\ defined(VK_EXT_robustness2) && \\ defined(VK_EXT_subgroup_size_control) && \\ defined(VK_EXT_texel_buffer_alignment) && \\ defined(VK_EXT_vertex_attribute_divisor) && \\ defined(VK_KHR_16bit_storage) && \\ defined(VK_KHR_8bit_storage) && \\ defined(VK_KHR_bind_memory2) && \\ defined(VK_KHR_create_renderpass2) && \\ defined(VK_KHR_dedicated_allocation) && \\ defined(VK_KHR_depth_stencil_resolve) && \\ defined(VK_KHR_descriptor_update_template) && \\ defined(VK_KHR_device_group) && \\ defined(VK_KHR_driver_properties) && \\ defined(VK_KHR_external_fence) && \\ defined(VK_KHR_external_memory) && \\ defined(VK_KHR_external_semaphore) && \\ defined(VK_KHR_get_memory_requirements2) && \\ defined(VK_KHR_image_format_list) && \\ defined(VK_KHR_imageless_framebuffer) && \\ defined(VK_KHR_maintenance1) && \\ defined(VK_KHR_maintenance2) && \\ defined(VK_KHR_maintenance3) && \\ defined(VK_KHR_multiview) && \\ defined(VK_KHR_relaxed_block_layout) && \\ defined(VK_KHR_sampler_mirror_clamp_to_edge) && \\ defined(VK_KHR_separate_depth_stencil_layouts) && \\ defined(VK_KHR_shader_draw_parameters) && \\ defined(VK_KHR_shader_float16_int8) && \\ defined(VK_KHR_shader_float_controls) && \\ defined(VK_KHR_spirv_1_4) && \\ defined(VK_KHR_storage_buffer_storage_class) && \\ defined(VK_KHR_swapchain) && \\ defined(VK_KHR_swapchain_mutable_format) && \\ defined(VK_KHR_timeline_semaphore) && \\ defined(VK_KHR_uniform_buffer_standard_layout) && \\ defined(VK_KHR_variable_pointers) #define VP_LUNARG_desktop_baseline_2023 1 #define VP_LUNARG_DESKTOP_BASELINE_2023_NAME \"VP_LUNARG_desktop_baseline_2023\" #define VP_LUNARG_DESKTOP_BASELINE_2023_SPEC_VERSION 1 #define VP_LUNARG_DESKTOP_BASELINE_2023_MIN_API_VERSION VK_MAKE_VERSION(1, 2, 148) #endif #if defined(VK_VERSION_1_1) && \\ defined(VK_EXT_descriptor_indexing) && \\ defined(VK_EXT_host_query_reset) && \\ defined(VK_EXT_inline_uniform_block) && \\ defined(VK_EXT_memory_budget) && \\ defined(VK_EXT_robustness2) && \\ defined(VK_EXT_scalar_block_layout) && \\ defined(VK_EXT_subgroup_size_control) && \\ defined(VK_EXT_texel_buffer_alignment) && \\ defined(VK_EXT_vertex_attribute_divisor) && \\ defined(VK_KHR_16bit_storage) && \\ defined(VK_KHR_8bit_storage) && \\ defined(VK_KHR_bind_memory2) && \\ defined(VK_KHR_create_renderpass2) && \\ defined(VK_KHR_dedicated_allocation) && \\ defined(VK_KHR_depth_stencil_resolve) && \\ defined(VK_KHR_descriptor_update_template) && \\ defined(VK_KHR_device_group) && \\ defined(VK_KHR_driver_properties) && \\ defined(VK_KHR_external_fence) && \\ defined(VK_KHR_external_memory) && \\ defined(VK_KHR_external_semaphore) && \\ defined(VK_KHR_get_memory_requirements2) && \\ defined(VK_KHR_image_format_list) && \\ defined(VK_KHR_maintenance1) && \\ defined(VK_KHR_maintenance2) && \\ defined(VK_KHR_maintenance3) && \\ defined(VK_KHR_multiview) && \\ defined(VK_KHR_portability_enumeration) && \\ defined(VK_KHR_portability_subset) && \\ defined(VK_KHR_relaxed_block_layout) && \\ defined(VK_KHR_sampler_mirror_clamp_to_edge) && \\ defined(VK_KHR_shader_draw_parameters) && \\ defined(VK_KHR_shader_float16_int8) && \\ defined(VK_KHR_storage_buffer_storage_class) && \\ defined(VK_KHR_swapchain) && \\ defined(VK_KHR_swapchain_mutable_format) && \\ defined(VK_KHR_timeline_semaphore) && \\ defined(VK_KHR_uniform_buffer_standard_layout) && \\ defined(VK_KHR_variable_pointers) #define VP_LUNARG_desktop_portability_2022 1 #define VP_LUNARG_DESKTOP_PORTABILITY_2022_NAME \"VP_LUNARG_desktop_portability_2022\" #define VP_LUNARG_DESKTOP_PORTABILITY_2022_SPEC_VERSION 1 #define VP_LUNARG_DESKTOP_PORTABILITY_2022_MIN_API_VERSION VK_MAKE_VERSION(1, 1, 208)"
  },
  {
    "label": "vpGetProfiles()",
    "kind": "Method",
    "detail": "Function (char profileName [ VP_MAX_PROFILE_NAME_SIZE ] ; uint32_t specVersion ; } VpProfileProperties ; typedef enum VpInstanceCreateFlagBits { VP_INSTANCE_CREATE_MERGE_EXTENSIONS_BIT = 0 x00000001,VP_INSTANCE_CREATE_OVERRIDE_EXTENSIONS_BIT = 0 x00000002,VP_INSTANCE_CREATE_FLAG_BITS_MAX_ENUM = 0 x7FFFFFFF } VpInstanceCreateFlagBits ; typedef VkFlags VpInstanceCreateFlags ; typedef struct VpInstanceCreateInfo { const VkInstanceCreateInfo* pCreateInfo ; const VpProfileProperties* pProfile ; VpInstanceCreateFlags flags ; } VpInstanceCreateInfo ; typedef enum VpDeviceCreateFlagBits { VP_DEVICE_CREATE_MERGE_EXTENSIONS_BIT = 0 x00000001,VP_DEVICE_CREATE_OVERRIDE_EXTENSIONS_BIT = 0 x00000002,VP_DEVICE_CREATE_OVERRIDE_FEATURES_BIT = 0 x00000008,VP_DEVICE_CREATE_OVERRIDE_ALL_FEATURES_BIT = 0 x00000010,VP_DEVICE_CREATE_DISABLE_ROBUST_BUFFER_ACCESS_BIT = 0 x00000020,VP_DEVICE_CREATE_DISABLE_ROBUST_IMAGE_ACCESS_BIT = 0 x00000040,VP_DEVICE_CREATE_DISABLE_ROBUST_ACCESS = VP_DEVICE_CREATE_DISABLE_ROBUST_BUFFER_ACCESS_BIT | VP_DEVICE_CREATE_DISABLE_ROBUST_IMAGE_ACCESS_BIT,VP_DEVICE_CREATE_FLAG_BITS_MAX_ENUM = 0 x7FFFFFFF } VpDeviceCreateFlagBits ; typedef VkFlags VpDeviceCreateFlags ; typedef struct VpDeviceCreateInfo { const VkDeviceCreateInfo* pCreateInfo ; const VpProfileProperties* pProfile ; VpDeviceCreateFlags flags ; } VpDeviceCreateInfo ; VPAPI_ATTR VkResult)",
    "insertText": "vpGetProfiles(uint32_t *pPropertyCount, VpProfileProperties *pProperties)"
  },
  {
    "label": "vpGetProfileFallbacks()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetProfileFallbacks(const VpProfileProperties *pProfile, uint32_t *pPropertyCount, VpProfileProperties *pProperties)"
  },
  {
    "label": "vpGetInstanceProfileSupport()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetInstanceProfileSupport(const char *pLayerName, const VpProfileProperties *pProfile, VkBool32 *pSupported)"
  },
  {
    "label": "vpCreateInstance()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpCreateInstance(const VpInstanceCreateInfo *pCreateInfo, const VkAllocationCallbacks *pAllocator, VkInstance *pInstance)"
  },
  {
    "label": "vpGetPhysicalDeviceProfileSupport()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetPhysicalDeviceProfileSupport(VkInstance instance, VkPhysicalDevice physicalDevice, const VpProfileProperties *pProfile, VkBool32 *pSupported)"
  },
  {
    "label": "vpCreateDevice()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpCreateDevice(VkPhysicalDevice physicalDevice, const VpDeviceCreateInfo *pCreateInfo, const VkAllocationCallbacks *pAllocator, VkDevice *pDevice)"
  },
  {
    "label": "vpGetProfileInstanceExtensionProperties()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetProfileInstanceExtensionProperties(const VpProfileProperties *pProfile, uint32_t *pPropertyCount, VkExtensionProperties *pProperties)"
  },
  {
    "label": "vpGetProfileDeviceExtensionProperties()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetProfileDeviceExtensionProperties(const VpProfileProperties *pProfile, uint32_t *pPropertyCount, VkExtensionProperties *pProperties)"
  },
  {
    "label": "vpGetProfileFeatures()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR void)",
    "insertText": "vpGetProfileFeatures(const VpProfileProperties *pProfile, void *pNext)"
  },
  {
    "label": "vpGetProfileFeatureStructureTypes()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetProfileFeatureStructureTypes(const VpProfileProperties *pProfile, uint32_t *pStructureTypeCount, VkStructureType *pStructureTypes)"
  },
  {
    "label": "vpGetProfileProperties()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR void)",
    "insertText": "vpGetProfileProperties(const VpProfileProperties *pProfile, void *pNext)"
  },
  {
    "label": "vpGetProfilePropertyStructureTypes()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetProfilePropertyStructureTypes(const VpProfileProperties *pProfile, uint32_t *pStructureTypeCount, VkStructureType *pStructureTypes)"
  },
  {
    "label": "vpGetProfileQueueFamilyProperties()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetProfileQueueFamilyProperties(const VpProfileProperties *pProfile, uint32_t *pPropertyCount, VkQueueFamilyProperties2KHR *pProperties)"
  },
  {
    "label": "vpGetProfileQueueFamilyStructureTypes()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetProfileQueueFamilyStructureTypes(const VpProfileProperties *pProfile, uint32_t *pStructureTypeCount, VkStructureType *pStructureTypes)"
  },
  {
    "label": "vpGetProfileFormats()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetProfileFormats(const VpProfileProperties *pProfile, uint32_t *pFormatCount, VkFormat *pFormats)"
  },
  {
    "label": "vpGetProfileFormatProperties()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR void)",
    "insertText": "vpGetProfileFormatProperties(const VpProfileProperties *pProfile, VkFormat format, void *pNext)"
  },
  {
    "label": "vpGetProfileFormatStructureTypes()",
    "kind": "Method",
    "detail": "Function (VPAPI_ATTR VkResult)",
    "insertText": "vpGetProfileFormatStructureTypes(const VpProfileProperties *pProfile, uint32_t *pStructureTypeCount, VkStructureType *pStructureTypes)"
  }
]