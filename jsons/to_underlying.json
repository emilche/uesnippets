[
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___UTILITY_TO_UNDERLYING_H # define _LIBCPP___UTILITY_TO_UNDERLYING_H # include<__config> # include<type_traits> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD #ifndef _LIBCPP_CXX03_LANG template <class _Tp> _LIBCPP_INLINE_VISIBILITY constexpr typename underlying_type<_Tp>::type __to_underlying(_Tp __val)"
  },
  {
    "label": "to_underlying()",
    "kind": "Method",
    "detail": "Function (} # endif # if _LIBCPP_STD_VER> 2 0 template<class _Tp> _LIBCPP_NODISCARD_EXT _LIBCPP_INLINE_VISIBILITY underlying_type_t<_Tp>)",
    "insertText": "to_underlying(_Tp __val)"
  }
]