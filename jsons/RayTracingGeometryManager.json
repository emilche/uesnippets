[
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "FRayTracingGeometryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingGeometryManager"
  },
  {
    "label": "FBuildRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildRequest"
  },
  {
    "label": "FRayTracingGeometryGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingGeometryGroup"
  },
  {
    "label": "FRegisteredGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegisteredGeometry"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FStreamingRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamingRequest"
  },
  {
    "label": "FRayTracingGeometryManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RayTracingGeometryManagerInterface . h \" # include \" Containers / SparseArray . h \" # include \" Containers / Map . h \" # include \" IO / IoBuffer . h \" # include \" Serialization / BulkData . h \" # if RHI_RAYTRACING class FPrimitiveSceneProxy ; class UStaticMesh ; class FRayTracingGeometryManager : public IRayTracingGeometryManager { public :)",
    "insertText": "FRayTracingGeometryManager()"
  },
  {
    "label": "RequestBuildAccelerationStructure()",
    "kind": "Method",
    "detail": "Function (BuildRequestIndex)",
    "insertText": "RequestBuildAccelerationStructure(FRayTracingGeometry* InGeometry, ERTAccelerationStructureBuildPriority InPriority, EAccelerationStructureBuildMode InBuildMode)"
  },
  {
    "label": "RemoveBuildRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBuildRequest(BuildRequestIndex InRequestIndex)"
  },
  {
    "label": "BoostPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BoostPriority(BuildRequestIndex InRequestIndex, float InBoostValue)"
  },
  {
    "label": "ForceBuildIfPending()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceBuildIfPending(FRHIComputeCommandList& InCmdList, const TArrayView<const FRayTracingGeometry*> InGeometries)"
  },
  {
    "label": "ProcessBuildRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessBuildRequests(FRHIComputeCommandList& InCmdList, bool bInBuildAll = false)"
  },
  {
    "label": "RegisterRayTracingGeometry()",
    "kind": "Method",
    "detail": "Function (RayTracingGeometryHandle)",
    "insertText": "RegisterRayTracingGeometry(FRayTracingGeometry* InGeometry)"
  },
  {
    "label": "ReleaseRayTracingGeometryHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRayTracingGeometryHandle(RayTracingGeometryHandle Handle)"
  },
  {
    "label": "RegisterRayTracingGeometryGroup()",
    "kind": "Method",
    "detail": "Function (RayTracing::GeometryGroupHandle)",
    "insertText": "RegisterRayTracingGeometryGroup(uint32 NumLODs, uint32 CurrentFirstLODIdx = 0)"
  },
  {
    "label": "ReleaseRayTracingGeometryGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRayTracingGeometryGroup(RayTracing::GeometryGroupHandle Handle)"
  },
  {
    "label": "RefreshRegisteredGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshRegisteredGeometry(RayTracingGeometryHandle Handle)"
  },
  {
    "label": "SetRayTracingGeometryStreamingData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRayTracingGeometryStreamingData(const FRayTracingGeometry* Geometry, FByteBulkData& BulkData, uint32 Offset, uint32 Size)"
  },
  {
    "label": "SetRayTracingGeometryGroupCurrentFirstLODIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRayTracingGeometryGroupCurrentFirstLODIndex(FRHICommandListBase& RHICmdList, RayTracing::GeometryGroupHandle Handle, uint8 CurrentFirstLODIdx)"
  },
  {
    "label": "PreRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreRender()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(FRHICommandList& RHICmdList)"
  },
  {
    "label": "RegisterProxyWithCachedRayTracingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterProxyWithCachedRayTracingState(FPrimitiveSceneProxy* Proxy, RayTracing::GeometryGroupHandle InRayTracingGeometryGroupHandle)"
  },
  {
    "label": "UnregisterProxyWithCachedRayTracingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterProxyWithCachedRayTracingState(FPrimitiveSceneProxy* Proxy, RayTracing::GeometryGroupHandle InRayTracingGeometryGroupHandle)"
  },
  {
    "label": "RequestUpdateCachedRenderState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestUpdateCachedRenderState(RayTracing::GeometryGroupHandle InRayTracingGeometryGroupHandle)"
  },
  {
    "label": "AddReferencedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedGeometry(const FRayTracingGeometry* Geometry)"
  },
  {
    "label": "AddReferencedGeometryGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedGeometryGroups(const TSet<RayTracing::GeometryGroupHandle>& GeometryGroups)"
  },
  {
    "label": "IsGeometryReferenced()",
    "kind": "Method",
    "detail": "Function (# if DO_CHECK bool)",
    "insertText": "IsGeometryReferenced(const FRayTracingGeometry* Geometry)"
  },
  {
    "label": "IsGeometryGroupReferenced()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGeometryGroupReferenced(RayTracing::GeometryGroupHandle GeometryGroup)"
  },
  {
    "label": "SetupBuildParams()",
    "kind": "Method",
    "detail": "Function (# endif private : struct FBuildRequest { BuildRequestIndex RequestIndex = INDEX_NONE ; float BuildPriority = 0 . 0 f ; FRayTracingGeometry* Owner ; EAccelerationStructureBuildMode BuildMode ; } ; void)",
    "insertText": "SetupBuildParams(const FBuildRequest& InBuildRequest, TArray<FRayTracingGeometryBuildParams>& InBuildParams, bool bRemoveFromRequestArray = true)"
  },
  {
    "label": "ReleaseRayTracingGeometryGroupReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRayTracingGeometryGroupReference(RayTracing::GeometryGroupHandle Handle)"
  },
  {
    "label": "RequestRayTracingGeometryStreamIn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestRayTracingGeometryStreamIn(FRHICommandList& RHICmdList, RayTracingGeometryHandle GeometryHandle)"
  },
  {
    "label": "ProcessCompletedStreamingRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCompletedStreamingRequests(FRHICommandList& RHICmdList)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (FCriticalSection RequestCS ; TSparseArray<FBuildRequest> GeometryBuildRequests ; TArray<FBuildRequest> SortedRequests ; TArray<FRayTracingGeometryBuildParams> BuildParams ; FCriticalSection MainCS ; struct FRayTracingGeometryGroup { TArray<RayTracingGeometryHandle> GeometryHandles ; TSet<FPrimitiveSceneProxy*> ProxiesWithCachedRayTracingState ; uint8 CurrentFirstLODIdx = INDEX_NONE ; uint32 NumReferences = 0 ; } ; struct FRegisteredGeometry { FRayTracingGeometry* Geometry = nullptr ; uint64 LastReferencedFrame = 0 ; uint32 Size = 0 ; FByteBulkData* StreamableData = nullptr ; uint32 StreamableDataOffset = 0 ; uint32 StreamableDataSize = 0 ; int16 StreamingRequestIndex = INDEX_NONE ; enum class FStatus : uint8 { StreamedOut,Streaming,StreamedIn,} ; FStatus Status = FStatus::StreamedOut ; } ; struct FStreamingRequest { FIoBuffer RequestBuffer ; FBulkDataBatchRequest Request ; RayTracingGeometryHandle GeometryHandle ; bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (GeometryHandle = INDEX_NONE ;)",
    "insertText": "if(Request.IsPending())"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (Request .)",
    "insertText": "Cancel()"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (Request .)",
    "insertText": "Wait()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} Request .)",
    "insertText": "Reset()"
  }
]