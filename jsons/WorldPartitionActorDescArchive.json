[
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "FWorldPartitionAssetDataPatcher",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionAssetDataPatcher"
  },
  {
    "label": "FActorDescArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorDescArchive"
  },
  {
    "label": "TDeltaSerializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TDeltaSerializer"
  },
  {
    "label": "FActorDescArchivePatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorDescArchivePatcher"
  },
  {
    "label": "FActorDescArchive()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" Serialization / Archive . h \" # include \" UObject / TopLevelAssetPath . h \" # include \" UObject / FortniteMainBranchObjectVersion . h \" class FWorldPartitionActorDesc ; struct FWorldPartitionAssetDataPatcher ; class FActorDescArchive : public FArchiveProxy { public :)",
    "insertText": "FActorDescArchive(FArchive& InArchive, FWorldPartitionActorDesc* InActorDesc, const FWorldPartitionActorDesc* InBaseActorDesc = nullptr)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FTopLevelAssetPath InClassPath = FTopLevelAssetPath())"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FName& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(Value)"
  },
  {
    "label": "unimplemented()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unimplemented()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FWeakObjectPtr& Value)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (template<DestPropertyType,SourcePropertyType> struct TDeltaSerializer { using FDeprecateFunction = TFunction<)",
    "insertText": "void(DestPropertyType&, const SourcePropertyType&)"
  },
  {
    "label": "TDeltaSerializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TDeltaSerializer(DestPropertyType& InValue) : Value(InValue)"
  },
  {
    "label": "TDeltaSerializer()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TDeltaSerializer(DestPropertyType& InValue, FDeprecateFunction InFunc) : Value(InValue) , Func(InFunc)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, const TDeltaSerializer<DestPropertyType, SourcePropertyType>& V)"
  },
  {
    "label": "ActorDescAr()",
    "kind": "Method",
    "detail": "Function (FActorDescArchive&)",
    "insertText": "ActorDescAr(FActorDescArchive&)"
  },
  {
    "label": "UsingCustomVersion()",
    "kind": "Method",
    "detail": "Function (Ar .)",
    "insertText": "UsingCustomVersion(FFortniteMainBranchObjectVersion::GUID)"
  },
  {
    "label": "ActorDescAr()",
    "kind": "Method",
    "detail": "Function (const DestPropertyType*)",
    "insertText": "ActorDescAr()"
  },
  {
    "label": "PropertyOffset()",
    "kind": "Method",
    "detail": "Function (const UPTRINT)",
    "insertText": "PropertyOffset(UPTRINT)&V.Value - *(UPTRINT*)"
  },
  {
    "label": "RefValue()",
    "kind": "Method",
    "detail": "Function (const DestPropertyType*)",
    "insertText": "RefValue(const DestPropertyType*)(*(UPTRINT*)&ActorDescAr.BaseDesc + PropertyOffset)"
  },
  {
    "label": "GetBaseDefaultValue()",
    "kind": "Method",
    "detail": "Function (const DestPropertyType* BaseDefaultValue =)",
    "insertText": "GetBaseDefaultValue()"
  },
  {
    "label": "bSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bSerialize(V.Value != *BaseDefaultValue)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} } Ar<<bSerialize ; })",
    "insertText": "if(bSerialize)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (Ar<<V . Value ; } else {)",
    "insertText": "check(Ar.IsLoading())"
  },
  {
    "label": "Func()",
    "kind": "Method",
    "detail": "Function (SourcePropertyType SourceValue ; Ar<<SourceValue ; V .)",
    "insertText": "Func(V.Value, SourceValue)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} } else)",
    "insertText": "if(Ar.IsLoading())"
  },
  {
    "label": "FActorDescArchivePatcher()",
    "kind": "Method",
    "detail": "Function (V . Value =* BaseDefaultValue ; } } return Ar ; } DestPropertyType& Value ; FDeprecateFunction Func ; } ; FWorldPartitionActorDesc* ActorDesc ; const FWorldPartitionActorDesc* BaseDesc ; uint32 BaseDescSizeof ; bool bIsMissingBaseDesc ; } ; class FActorDescArchivePatcher : public FActorDescArchive { public :)",
    "insertText": "FActorDescArchivePatcher(FArchive& InArchive, FWorldPartitionActorDesc* InActorDesc, FArchive& OutArchive, FWorldPartitionAssetDataPatcher* InAssetDataPatcher) : FActorDescArchive(InArchive, InActorDesc) , OutAr(OutArchive) , AssetDataPatcher(InAssetDataPatcher) , bIsPatching(false)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FSoftObjectPath& Value)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(void* V, int64 Length)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FTopLevelAssetPath& Value)"
  }
]