[
  {
    "label": "PccNetworkController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PccNetworkController"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "PccNetworkController()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_CONGESTION_CONTROLLER_PCC_PCC_NETWORK_CONTROLLER_H_ # define MODULES_CONGESTION_CONTROLLER_PCC_PCC_NETWORK_CONTROLLER_H_ # include<stddef . h> # include<stdint . h> # include<deque> # include<vector> # include \" api / transport / network_control . h \" # include \" api / transport / network_types . h \" # include \" api / units / data_rate . h \" # include \" api / units / time_delta . h \" # include \" api / units / timestamp . h \" # include \" modules / congestion_controller / pcc / bitrate_controller . h \" # include \" modules / congestion_controller / pcc / monitor_interval . h \" # include \" modules / congestion_controller / pcc / rtt_tracker . h \" # include \" rtc_base / random . h \" namespace webrtc { namespace pcc { class PccNetworkController : public NetworkControllerInterface { public : enum class Mode { kStartup,kSlowStart,kOnlineLearning,kDoubleCheck } ; enum class MonitorIntervalLengthStrategy { kAdaptive,kFixed } ;)",
    "insertText": "PccNetworkController(NetworkControllerConfig config)"
  },
  {
    "label": "PccNetworkController()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "PccNetworkController()"
  },
  {
    "label": "OnNetworkAvailability()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnNetworkAvailability(NetworkAvailability msg)"
  },
  {
    "label": "OnNetworkRouteChange()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnNetworkRouteChange(NetworkRouteChange msg)"
  },
  {
    "label": "OnProcessInterval()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnProcessInterval(ProcessInterval msg)"
  },
  {
    "label": "OnSentPacket()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnSentPacket(SentPacket msg)"
  },
  {
    "label": "OnTargetRateConstraints()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnTargetRateConstraints(TargetRateConstraints msg)"
  },
  {
    "label": "OnTransportPacketsFeedback()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnTransportPacketsFeedback(TransportPacketsFeedback msg)"
  },
  {
    "label": "OnStreamsConfig()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnStreamsConfig(StreamsConfig msg)"
  },
  {
    "label": "OnRemoteBitrateReport()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnRemoteBitrateReport(RemoteBitrateReport msg)"
  },
  {
    "label": "OnRoundTripTimeUpdate()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnRoundTripTimeUpdate(RoundTripTimeUpdate msg)"
  },
  {
    "label": "OnTransportLossReport()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnTransportLossReport(TransportLossReport msg)"
  },
  {
    "label": "OnReceivedPacket()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnReceivedPacket(ReceivedPacket msg)"
  },
  {
    "label": "OnNetworkStateEstimate()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "OnNetworkStateEstimate(NetworkStateEstimate msg)"
  },
  {
    "label": "UpdateSendingRateAndMode()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateSendingRateAndMode()"
  },
  {
    "label": "CreateRateUpdate()",
    "kind": "Method",
    "detail": "Function (NetworkControlUpdate)",
    "insertText": "CreateRateUpdate(Timestamp at_time)"
  },
  {
    "label": "ComputeMonitorIntervalsDuration()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "ComputeMonitorIntervalsDuration()"
  },
  {
    "label": "NeedDoubleCheckMeasurments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedDoubleCheckMeasurments()"
  },
  {
    "label": "IsTimeoutExpired()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTimeoutExpired(Timestamp current_time)"
  },
  {
    "label": "IsFeedbackCollectionDone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFeedbackCollectionDone()"
  }
]