[
  {
    "label": "SInputKeySelector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInputKeySelector"
  },
  {
    "label": "FButtonStyle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FButtonStyle"
  },
  {
    "label": "UInputKeySelector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputKeySelector"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Framework / Commands / InputChord . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Layout / Margin . h \" # include \" Widgets / SWidget . h \" # include \" Components / Widget . h \" # include \" Styling / SlateTypes . h \" # include \" Layout / Visibility . h \" # include \" InputKeySelector . generated . h \" class SInputKeySelector ; struct FButtonStyle ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam( FOnKeySelected, FInputChord, SelectedKey)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE(FOnIsSelectingKeyChanged)"
  },
  {
    "label": "GetSelectedKey()",
    "kind": "Method",
    "detail": "Function (FInputChord)",
    "insertText": "GetSelectedKey()"
  },
  {
    "label": "GetKeySelectionText()",
    "kind": "Method",
    "detail": "Function (const FText&)",
    "insertText": "GetKeySelectionText()"
  },
  {
    "label": "GetNoKeySpecifiedText()",
    "kind": "Method",
    "detail": "Function (const FText&)",
    "insertText": "GetNoKeySpecifiedText()"
  },
  {
    "label": "AllowModifierKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowModifierKeys()"
  },
  {
    "label": "AllowGamepadKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowGamepadKeys()"
  },
  {
    "label": "SetButtonStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetButtonStyle(const FButtonStyle& ButtonStyle)"
  },
  {
    "label": "GetButtonStyle()",
    "kind": "Method",
    "detail": "Function (const FButtonStyle&)",
    "insertText": "GetButtonStyle()"
  },
  {
    "label": "SetTextStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextStyle(const FTextBlockStyle& InTextStyle)"
  },
  {
    "label": "GetTextStyle()",
    "kind": "Method",
    "detail": "Function (const FTextBlockStyle&)",
    "insertText": "GetTextStyle()"
  },
  {
    "label": "SetMargin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMargin(const FMargin& InMargin)"
  },
  {
    "label": "GetMargin()",
    "kind": "Method",
    "detail": "Function (const FMargin&)",
    "insertText": "GetMargin()"
  },
  {
    "label": "GetPaletteCategory()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR const FText)",
    "insertText": "GetPaletteCategory()"
  },
  {
    "label": "SynchronizeProperties()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "SynchronizeProperties()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "RebuildWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "RebuildWidget()"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "HandleKeySelected()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleKeySelected(const FInputChord& InSelectedKey)"
  },
  {
    "label": "HandleIsSelectingKeyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleIsSelectingKeyChanged()"
  }
]