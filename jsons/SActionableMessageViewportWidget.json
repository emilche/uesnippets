[
  {
    "label": "ACTIONABLEMESSAGE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ACTIONABLEMESSAGE_API"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ActionableMessageSubsystem . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / SListView . h \" class SActionableMessageEntry : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SActionableMessageEntry)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FActionableMessage>, ActionableMessage) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SetActionableMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActionableMessage(TSharedPtr<FActionableMessage> InActionableMessage)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<FActionableMessage> ActionableMessage ; FOnClicked OnClicked ; } ; class SActionableMessageViewportWidget : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SActionableMessageViewportWidget)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetVisibility()"
  },
  {
    "label": "OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRow(TSharedPtr<FActionableMessage> InActionableMessage, const TSharedRef<STableViewBase>& OwnerTable)"
  }
]