[
  {
    "label": "UAudioAnalyzerNRTSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAudioAnalyzerNRTSettings"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UAudioAnalyzerNRT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAudioAnalyzerNRT"
  },
  {
    "label": "ResultType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ResultType"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IAudioAnalyzerNRTInterface . h \" # include \" AudioAnalyzerAsset . h \" # include \" Sound / SoundWave . h \" # include \" AudioAnalyzerNRT . generated . h \")",
    "insertText": "UCLASS(Abstract, EditInlineNew, BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent & PropertyChangedEvent)"
  },
  {
    "label": "ShouldEventTriggerAnalysis()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldEventTriggerAnalysis(struct FPropertyChangedEvent & PropertyChangeEvent)"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (template<class ResultType> TSharedPtr<ResultType,ESPMode::ThreadSafe>)",
    "insertText": "GetResult()"
  },
  {
    "label": "ResultLock()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ResultType,ESPMode::ThreadSafe> ReturnedResult ; { FScopeLock)",
    "insertText": "ResultLock(&ResultCriticalSection)"
  },
  {
    "label": "GetSettings()",
    "kind": "Method",
    "detail": "Function (} return ReturnedResult ; } TUniquePtr<Audio::IAnalyzerNRTSettings>)",
    "insertText": "GetSettings(const float InSampleRate, const int32 InNumChannels)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "SetResult()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetResult(FResultSharedPtr NewResult)"
  },
  {
    "label": "SetResultIfLatest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResultIfLatest(FResultSharedPtr NewResult, FResultId InResultId)"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditChange(FProperty* PropertyAboutToChange)"
  },
  {
    "label": "SetSettingsDelegate()",
    "kind": "Method",
    "detail": "Function (# endif protected : # if WITH_EDITOR void)",
    "insertText": "SetSettingsDelegate(UAudioAnalyzerNRTSettings* InSettings)"
  },
  {
    "label": "RemoveSettingsDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSettingsDelegate(UAudioAnalyzerNRTSettings* InSettings)"
  },
  {
    "label": "GetAnalyzerNRTFactoryName()",
    "kind": "Method",
    "detail": "Function (# endif FName)",
    "insertText": "GetAnalyzerNRTFactoryName() const PURE_VIRTUAL(UAudioAnalyzerNRT::GetAnalyzerNRTFactoryName, return FName();)"
  },
  {
    "label": "GetSettingsFromProperty()",
    "kind": "Method",
    "detail": "Function (private : UAudioAnalyzerNRTSettings*)",
    "insertText": "GetSettingsFromProperty(FProperty* Property)"
  }
]