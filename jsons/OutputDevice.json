[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FLogRecord",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogRecord"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "SET_WARN_COLOR()",
    "kind": "Method",
    "detail": "Function (this:)",
    "insertText": "SET_WARN_COLOR(COLOR_YELLOW)"
  },
  {
    "label": "FOutputDevice()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FOutputDevice()"
  },
  {
    "label": "FOutputDevice()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FOutputDevice(FOutputDevice&&)"
  },
  {
    "label": "FOutputDevice()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FOutputDevice(const FOutputDevice&)"
  },
  {
    "label": "SerializeRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeRecord(const UE::FLogRecord& Record)"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log( const TCHAR* S )"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log( ELogVerbosity::Type Verbosity, const TCHAR* S )"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log( const FName& Category, ELogVerbosity::Type Verbosity, const TCHAR* Str )"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log( const FString& S )"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log( const FText& S )"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log( ELogVerbosity::Type Verbosity, const FString& S )"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log( const FName& Category, ELogVerbosity::Type Verbosity, const FString& S )"
  },
  {
    "label": "LogfImpl()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "LogfImpl(const TCHAR* Fmt, ...)"
  },
  {
    "label": "LogfImpl()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "LogfImpl(ELogVerbosity::Type Verbosity, const TCHAR* Fmt, ...)"
  },
  {
    "label": "CategorizedLogfImpl()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "CategorizedLogfImpl(const FName& Category, ELogVerbosity::Type Verbosity, const TCHAR* Fmt, ...)"
  }
]