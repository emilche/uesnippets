[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FRenderTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderTarget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UThumbnailRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UThumbnailRenderer"
  },
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FGameTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameTime"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" ThumbnailRenderer . generated . h \" class FCanvas ; class FRenderTarget ; enum class EThumbnailRenderFrequency : uint8 { Realtime,OnPropertyChange,OnAssetSave,Once,} ;)",
    "insertText": "UCLASS(abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual bool CanVisualizeAsset(UObject* Object)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(Object, X, Y, Width, Height, Viewport, Canvas, false)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Draw(UObject* Object, int32 X, int32 Y, uint32 Width, uint32 Height, FRenderTarget* Viewport, FCanvas* Canvas, bool bAdditionalViewFamily) PURE_VIRTUAL(UThumbnailRenderer::Draw,)"
  },
  {
    "label": "GetTime()",
    "kind": "Method",
    "detail": "Function (struct FGameTime)",
    "insertText": "GetTime()"
  }
]