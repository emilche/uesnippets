[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "SGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphPin"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UK2Node_AnimNodeReference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_AnimNodeReference"
  },
  {
    "label": "FMargin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMargin"
  },
  {
    "label": "SAnimNodeReference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimNodeReference"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" KismetNodes / SGraphNodeK2Var . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" class FText ; class SGraphPin ; class SWidget ; class UEdGraphPin ; class UK2Node_AnimNodeReference ; struct FMargin ; class SAnimNodeReference : public SGraphNodeK2Var { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimNodeReference)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: void Construct(const FArguments& InArgs, UK2Node_AnimNodeReference* InNode)"
  },
  {
    "label": "CreatePinWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SGraphPin>)",
    "insertText": "CreatePinWidget(UEdGraphPin* Pin)"
  },
  {
    "label": "UpdateTitleWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "UpdateTitleWidget(FText InTitleText, TSharedPtr<SWidget> InTitleWidget, EHorizontalAlignment& InOutTitleHAlign, FMargin& InOutTitleMargin)"
  }
]