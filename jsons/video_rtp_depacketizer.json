[
  {
    "label": "VideoRtpDepacketizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoRtpDepacketizer"
  },
  {
    "label": "ParsedRtpPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ParsedRtpPayload"
  },
  {
    "label": "VideoRtpDepacketizer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_VIDEO_RTP_DEPACKETIZER_H_ # define MODULES_RTP_RTCP_SOURCE_VIDEO_RTP_DEPACKETIZER_H_ # include<stdint . h> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" api / scoped_refptr . h \" # include \" api / video / encoded_image . h \" # include \" modules / rtp_rtcp / source / rtp_video_header . h \" # include \" rtc_base / copy_on_write_buffer . h \" namespace webrtc { class VideoRtpDepacketizer { public : struct ParsedRtpPayload { RTPVideoHeader video_header ; rtc::CopyOnWriteBuffer video_payload ; } ; ~)",
    "insertText": "VideoRtpDepacketizer()"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (absl::optional<ParsedRtpPayload>)",
    "insertText": "Parse(rtc::CopyOnWriteBuffer rtp_payload)"
  },
  {
    "label": "AssembleFrame()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<EncodedImageBuffer>)",
    "insertText": "AssembleFrame(rtc::ArrayView<const rtc::ArrayView<const uint8_t>> rtp_payloads)"
  }
]