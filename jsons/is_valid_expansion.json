[
  {
    "label": "_Templ",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Templ"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___TYPE_TRAITS_IS_VALID_EXPANSION_H # define _LIBCPP___TYPE_TRAITS_IS_VALID_EXPANSION_H # include<__config> # include<__type_traits / integral_constant . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <template <class...> class _Templ, class ..._Args, class = _Templ<_Args...> > true_type __sfinae_test_impl(int)"
  },
  {
    "label": "__sfinae_test_impl()",
    "kind": "Method",
    "detail": "Function (template<template<class . . .> class,class . . .> false_type)",
    "insertText": "__sfinae_test_impl(...)"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (template<template<class . . .> class _Templ,class . . . _Args> using _IsValidExpansion _LIBCPP_NODEBUG =)",
    "insertText": "decltype(__sfinae_test_impl<_Templ, _Args...>(0))"
  }
]