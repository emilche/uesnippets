[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SFxWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFxWidget"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FArrangedChildren ; class FPaintArgs ; class FSlateWindowElementList ; class SFxWidget : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SFxWidget ) : _RenderScale( 1.0f ) , _RenderScaleOrigin( FVector2D::ZeroVector ) , _LayoutScale( 1.0f ) , _VisualOffset( FVector2D::ZeroVector ) , _IgnoreClipping( true ) , _ColorAndOpacity( FLinearColor::White ) , _HAlign( HAlign_Center ) , _VAlign( VAlign_Center ) , _Content()"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(float, RenderScale ) SLATE_ATTRIBUTE( FVector2D, RenderScaleOrigin ) SLATE_ATTRIBUTE( float, LayoutScale ) SLATE_ATTRIBUTE( FVector2D, VisualOffset ) SLATE_ATTRIBUTE( bool, IgnoreClipping ) SLATE_ATTRIBUTE( FLinearColor, ColorAndOpacity ) SLATE_ARGUMENT( EHorizontalAlignment, HAlign ) SLATE_ARGUMENT( EVerticalAlignment, VAlign ) SLATE_DEFAULT_SLOT( FArguments, Content ) SLATE_END_ARGS() SLATE_API SFxWidget()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "SetVisualOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisualOffset(TAttribute<FVector2D> InOffset)"
  },
  {
    "label": "SetVisualOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisualOffset(FVector InOffset)"
  },
  {
    "label": "SetRenderScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderScale(TAttribute<float> InScale)"
  },
  {
    "label": "SetRenderScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderScale(float InScale)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (protected : int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  }
]