[
  {
    "label": "FAndroidApplicationMisc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAndroidApplicationMisc"
  },
  {
    "label": "FFeedbackContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFeedbackContext"
  },
  {
    "label": "FOutputDeviceError",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDeviceError"
  },
  {
    "label": "GenericApplication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GenericApplication"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "LoadPreInitModules()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / GenericPlatformApplicationMisc . h \" struct FAndroidApplicationMisc : public FGenericPlatformApplicationMisc { void)",
    "insertText": "LoadPreInitModules()"
  },
  {
    "label": "GetFeedbackContext()",
    "kind": "Method",
    "detail": "Function (class FFeedbackContext*)",
    "insertText": "GetFeedbackContext()"
  },
  {
    "label": "GetErrorOutputDevice()",
    "kind": "Method",
    "detail": "Function (class FOutputDeviceError*)",
    "insertText": "GetErrorOutputDevice()"
  },
  {
    "label": "CreateApplication()",
    "kind": "Method",
    "detail": "Function (class GenericApplication*)",
    "insertText": "CreateApplication()"
  },
  {
    "label": "RequestMinimize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestMinimize()"
  },
  {
    "label": "IsScreensaverEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsScreensaverEnabled()"
  },
  {
    "label": "ControlScreensaver()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ControlScreensaver(EScreenSaverAction Action)"
  },
  {
    "label": "SetGamepadsAllowed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGamepadsAllowed(bool bAllowed)"
  },
  {
    "label": "SetGamepadsBlockDeviceFeedback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGamepadsBlockDeviceFeedback(bool bBlock)"
  },
  {
    "label": "ResetGamepadAssignments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetGamepadAssignments()"
  },
  {
    "label": "ResetGamepadAssignmentToController()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetGamepadAssignmentToController(int32 ControllerId)"
  },
  {
    "label": "IsControllerAssignedToGamepad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsControllerAssignedToGamepad(int32 ControllerId)"
  },
  {
    "label": "GetGamepadControllerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetGamepadControllerName(int32 ControllerId)"
  },
  {
    "label": "ClipboardCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClipboardCopy(const TCHAR* Str)"
  },
  {
    "label": "ClipboardPaste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClipboardPaste(class FString& Dest)"
  },
  {
    "label": "ComputePhysicalScreenDensity()",
    "kind": "Method",
    "detail": "Function (EScreenPhysicalAccuracy)",
    "insertText": "ComputePhysicalScreenDensity(int32& OutScreenDensity)"
  },
  {
    "label": "EnableMotionData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableMotionData(bool bEnable)"
  }
]