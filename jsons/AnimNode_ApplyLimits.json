[
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FAngularRangeLimit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAngularRangeLimit"
  },
  {
    "label": "FAnimNode_ApplyLimits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_ApplyLimits"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" BoneContainer . h \" # include \" BonePose . h \" # include \" BoneControllers / AnimNode_SkeletalControlBase . h \" # include \" AnimNode_ApplyLimits . generated . h \" class USkeletalMeshComponent ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FAngularRangeLimit() : LimitMin(-180, -180, -180) , LimitMax(+180, +180, +180)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "FAnimNode_ApplyLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimNode_ApplyLimits()"
  },
  {
    "label": "RecalcLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecalcLimits()"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "OnInitializeAnimInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInitializeAnimInstance(const FAnimInstanceProxy* InProxy, const UAnimInstance* InAnimInstance)"
  },
  {
    "label": "NeedsOnInitializeAnimInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsOnInitializeAnimInstance()"
  },
  {
    "label": "IsValidToEvaluate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidToEvaluate(const USkeleton* Skeleton, const FBoneContainer& RequiredBones)"
  },
  {
    "label": "InitializeBoneReferences()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InitializeBoneReferences(const FBoneContainer& RequiredBones)"
  }
]