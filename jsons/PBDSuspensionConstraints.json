[
  {
    "label": "FSolverBody",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSolverBody"
  },
  {
    "label": "FPBDSuspensionConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDSuspensionConstraints"
  },
  {
    "label": "FPBDCollisionSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionSolver"
  },
  {
    "label": "FPBDCollisionSolverManifoldPoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionSolverManifoldPoint"
  },
  {
    "label": "FPBDSuspensionConstraintHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDSuspensionConstraintHandle"
  },
  {
    "label": "FPBDSuspensionConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDSuspensionConstraints"
  },
  {
    "label": "SetSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSettings(const FPBDSuspensionSettings& Settings)"
  },
  {
    "label": "RemoveConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveConstraint(int ConstraintIndex)"
  },
  {
    "label": "NumConstraints()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NumConstraints()"
  },
  {
    "label": "AddBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBodies(FSolverBodyContainer& SolverBodyContainer)"
  },
  {
    "label": "GatherInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherInput(const FReal Dt)"
  },
  {
    "label": "ScatterOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScatterOutput(const FReal Dt)"
  },
  {
    "label": "ApplyPositionConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPositionConstraints(const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "ApplyVelocityConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVelocityConstraints(const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "AddBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBodies(const TArrayView<int32>& ConstraintIndices, FSolverBodyContainer& SolverBodyContainer)"
  },
  {
    "label": "GatherInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherInput(const TArrayView<int32>& ConstraintIndices, const FReal Dt)"
  },
  {
    "label": "ScatterOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScatterOutput(const TArrayView<int32>& ConstraintIndices, const FReal Dt)"
  },
  {
    "label": "ApplyPositionConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPositionConstraints(const TArrayView<int32>& ConstraintIndices, const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "ApplyVelocityConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVelocityConstraints(const TArrayView<int32>& ConstraintIndices, const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "AddBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBodies(const int32 ConstraintIndex, FSolverBodyContainer& SolverBodyContainer)"
  },
  {
    "label": "GatherInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherInput(const int32 ConstraintIndex, FReal Dt)"
  },
  {
    "label": "ScatterOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScatterOutput(const int32 ConstraintIndex, FReal Dt)"
  },
  {
    "label": "ApplyPositionConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPositionConstraint(const int32 ConstraintIndex, const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "ApplyVelocityConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVelocityConstraint(const int32 ConstraintIndex, const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "ApplySingle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySingle(int32 ConstraintIndex, const FReal Dt)"
  }
]