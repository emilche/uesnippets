[
  {
    "label": "THashingArchiveProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "THashingArchiveProxy"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Serialization / ArchiveProxy . h \" # include \" Templates / UnrealTemplate . h \" namespace UE { template<HashBuilderType> class THashingArchiveProxy : public FArchiveProxy { public : using FArchiveProxy::FArchiveProxy ; void)",
    "insertText": "Serialize(void* V, int64 Length)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(V, Length)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (HashBuilder .)",
    "insertText": "Update(V, uint64(Length))"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Seek(int64 InPos)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Seek(InPos)"
  },
  {
    "label": "GetHash()",
    "kind": "Method",
    "detail": "Function (} auto)",
    "insertText": "GetHash() -> decltype(DeclVal<HashBuilderType>().Finalize())"
  }
]