[
  {
    "label": "FAppleHttpRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAppleHttpRequest"
  },
  {
    "label": "FAppleHttpResponse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAppleHttpResponse"
  },
  {
    "label": "FAppleHttpStreamFactory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAppleHttpStreamFactory"
  },
  {
    "label": "FAppleHttpResponseDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAppleHttpResponseDelegate"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GenericPlatform / HttpResponseCommon . h \" # include \" GenericPlatform / HttpRequestCommon . h \" # include \" PlatformHttp . h \" # include \" HttpPackage . h \" # include \" Misc / TVariant . h \")",
    "insertText": "DECLARE_DELEGATE(FNewAppleHttpEventDelegate)"
  },
  {
    "label": "GetURL()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS class FAppleHttpRequest : public FHttpRequestCommon PRAGMA_ENABLE_DEPRECATION_WARNINGS { public : class FAppleHttpResponse ; FString)",
    "insertText": "GetURL()"
  },
  {
    "label": "GetHeader()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetHeader(const FString& HeaderName)"
  },
  {
    "label": "GetAllHeaders()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetAllHeaders()"
  },
  {
    "label": "GetContentType()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetContentType()"
  },
  {
    "label": "GetContentLength()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetContentLength()"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (const TArray<uint8>&)",
    "insertText": "GetContent()"
  },
  {
    "label": "GetVerb()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetVerb()"
  },
  {
    "label": "SetVerb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVerb(const FString& Verb)"
  },
  {
    "label": "SetURL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetURL(const FString& URL)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(const TArray<uint8>& ContentPayload)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(TArray<uint8>&& ContentPayload)"
  },
  {
    "label": "SetContentAsString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContentAsString(const FString& ContentString)"
  },
  {
    "label": "SetContentAsStreamedFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetContentAsStreamedFile(const FString& Filename)"
  },
  {
    "label": "SetContentFromStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetContentFromStream(TSharedRef<FArchive> Stream)"
  },
  {
    "label": "SetHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeader(const FString& HeaderName, const FString& HeaderValue)"
  },
  {
    "label": "AppendToHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendToHeader(const FString& HeaderName, const FString& AdditionalHeaderValue)"
  },
  {
    "label": "ProcessRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessRequest()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds)"
  },
  {
    "label": "StartThreadedRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartThreadedRequest()"
  },
  {
    "label": "FinishRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishRequest()"
  },
  {
    "label": "IsThreadedRequestComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsThreadedRequestComplete()"
  },
  {
    "label": "TickThreadedRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickThreadedRequest(float DeltaSeconds)"
  },
  {
    "label": "FAppleHttpRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAppleHttpRequest(NSURLSession* InSession)"
  },
  {
    "label": "FAppleHttpRequest()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FAppleHttpRequest()"
  },
  {
    "label": "IsInitializedWithValidStream()",
    "kind": "Method",
    "detail": "Function (PACKAGE_SCOPE : PRAGMA_DISABLE_DEPRECATION_WARNINGS using FHttpRequestCommon::StartProcessTime ; using FHttpRequestCommon::ConnectTime ; using FHttpRequestCommon::BroadcastResponseHeadersReceived ; using FHttpRequestCommon::StartActivityTimeoutTimer ; using FHttpRequestCommon::ResetActivityTimeoutTimer ; using FHttpRequestCommon::StopActivityTimeoutTimer ; using FHttpRequestCommon::HandleStatusCodeReceived ; using FHttpRequestCommon::SetEffectiveURL ; using FHttpRequestCommon::PassReceivedDataToStream ; PRAGMA_ENABLE_DEPRECATION_WARNINGS bool)",
    "insertText": "IsInitializedWithValidStream()"
  },
  {
    "label": "CheckProgressDelegate()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CheckProgressDelegate()"
  },
  {
    "label": "SetupRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupRequest()"
  },
  {
    "label": "CreateResponse()",
    "kind": "Method",
    "detail": "Function (FHttpResponsePtr)",
    "insertText": "CreateResponse()"
  },
  {
    "label": "MockResponseData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MockResponseData()"
  },
  {
    "label": "AbortRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortRequest()"
  },
  {
    "label": "CleanupRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupRequest()"
  },
  {
    "label": "GetContentAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetContentAsString()"
  },
  {
    "label": "IsReady()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReady()"
  },
  {
    "label": "GetNumBytesReceived()",
    "kind": "Method",
    "detail": "Function (const uint64)",
    "insertText": "GetNumBytesReceived()"
  },
  {
    "label": "GetNumBytesWritten()",
    "kind": "Method",
    "detail": "Function (const uint64)",
    "insertText": "GetNumBytesWritten()"
  },
  {
    "label": "CleanSharedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanSharedObjects()"
  },
  {
    "label": "SetNewAppleHttpEventDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNewAppleHttpEventDelegate(FNewAppleHttpEventDelegate&& Delegate)"
  },
  {
    "label": "FAppleHttpResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAppleHttpResponse(FAppleHttpRequest& InRequest)"
  },
  {
    "label": "FAppleHttpResponse()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FAppleHttpResponse()"
  },
  {
    "label": "GetStatusFromDelegate()",
    "kind": "Method",
    "detail": "Function (private : class FAppleHttpRequest ; EHttpRequestStatus::Type)",
    "insertText": "GetStatusFromDelegate()"
  },
  {
    "label": "GetFailureReasonFromDelegate()",
    "kind": "Method",
    "detail": "Function (EHttpFailureReason)",
    "insertText": "GetFailureReasonFromDelegate()"
  }
]