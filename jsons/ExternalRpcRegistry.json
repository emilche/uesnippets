[
  {
    "label": "FExternalRpcArgumentDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExternalRpcArgumentDesc"
  },
  {
    "label": "FExternalRouteInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExternalRouteInfo"
  },
  {
    "label": "FExternalRouteDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExternalRouteDesc"
  },
  {
    "label": "FRpcLedgerEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRpcLedgerEntry"
  },
  {
    "label": "UExternalRpcRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalRpcRegistry"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" HttpPath . h \" # include \" HttpRequestHandler . h \" # include \" HttpResultCallback . h \" # include \" HttpRouteHandle . h \" # include \" HttpServerRequest . h \" # include \" IHttpRouter . h \" # include \" Logging / LogMacros . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" ExternalRpcRegistry . generated . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogExternalRpcRegistry, Log, All)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "FExternalRpcArgumentDesc()",
    "kind": "Method",
    "detail": "Function (FString Type ; FString Desc ; bool bIsOptional = false ;)",
    "insertText": "FExternalRpcArgumentDesc()"
  },
  {
    "label": "FExternalRpcArgumentDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FExternalRpcArgumentDesc(FString InName, FString InType, FString InDesc, bool bInIsOptional = false)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Name = InName ; Type = InType ; Desc = InDesc ; bIsOptional = bInIsOptional ; } bool)",
    "insertText": "operator(const FExternalRpcArgumentDesc& Other)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (FHttpPath RoutePath ; EHttpServerRequestVerbs RequestVerbs = EHttpServerRequestVerbs::VERB_NONE ; FString InputContentType ; TArray<FExternalRpcArgumentDesc> ExpectedArguments ; FString RpcCategory =)",
    "insertText": "TEXT(\"Unknown\")"
  },
  {
    "label": "FExternalRouteInfo()",
    "kind": "Method",
    "detail": "Function (bool bAlwaysOn = false ;)",
    "insertText": "FExternalRouteInfo()"
  },
  {
    "label": "FExternalRouteInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FExternalRouteInfo(FName InRouteName, FHttpPath InRoutePath, EHttpServerRequestVerbs InRequestVerbs, FString InCategory = TEXT(\"Unknown\"), bool bInAlwaysOn = false, FString InContentType = {}, TArray<FExternalRpcArgumentDesc> InArguments = TArray<FExternalRpcArgumentDesc>())"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RouteName = InRouteName ; RoutePath = InRoutePath ; RequestVerbs = InRequestVerbs ; InputContentType = InContentType ; ExpectedArguments = InArguments ; RpcCategory = InCategory ; bAlwaysOn = false ; } bool)",
    "insertText": "operator(const FExternalRouteInfo& Other)"
  },
  {
    "label": "FExternalRouteDesc()",
    "kind": "Method",
    "detail": "Function (FString InputContentType ; FString RpcCategory ; TArray<FExternalRpcArgumentDesc> ExpectedArguments ;)",
    "insertText": "FExternalRouteDesc()"
  },
  {
    "label": "FExternalRouteDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FExternalRouteDesc(FHttpRouteHandle InHandle, FString InContentType, TArray<FExternalRpcArgumentDesc> InArguments, FString InCategory = \"\")"
  },
  {
    "label": "FRpcLedgerEntry()",
    "kind": "Method",
    "detail": "Function (FString RequestBody ; FDateTime RequestTime ;)",
    "insertText": "FRpcLedgerEntry()"
  },
  {
    "label": "FRpcLedgerEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRpcLedgerEntry(FString InName, FString InBody)"
  },
  {
    "label": "UtcNow()",
    "kind": "Method",
    "detail": "Function (RpcName = InName ; RequestBody = InBody ; RequestTime =)",
    "insertText": "UtcNow()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GetInstance()",
    "kind": "Method",
    "detail": "Function (TMap<FName,FExternalRouteDesc> RegisteredRoutes ; TArray<FString> ActiveRpcCategories ; TArray<FRpcLedgerEntry> RequestLedger ; public : UExternalRpcRegistry*)",
    "insertText": "GetInstance()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "UExternalRpcRegistry()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UExternalRpcRegistry()"
  },
  {
    "label": "IsActiveRpcCategory()",
    "kind": "Method",
    "detail": "Function (int PortToUse = 1 1 2 2 3 ; int RequestLedgerCapacity = 1 0 ; bool)",
    "insertText": "IsActiveRpcCategory(FString InCategory)"
  },
  {
    "label": "GetRegisteredRoute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRegisteredRoute(FName RouteName, FExternalRouteInfo& OutRouteInfo)"
  },
  {
    "label": "RegisterNewRoute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNewRoute(FExternalRouteInfo InRouteInfo, const FHttpRequestHandler& Handler, bool bOverrideIfBound = false)"
  },
  {
    "label": "RegisterNewRouteWithArguments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNewRouteWithArguments(FName RouteName, const FHttpPath& HttpPath, const EHttpServerRequestVerbs& RequestVerbs, const FHttpRequestHandler& Handler, TArray<FExternalRpcArgumentDesc> InArguments, bool bOverrideIfBound = false, bool bIsAlwaysOn = false, FString OptionalCategory = TEXT(\"Unknown\"), FString OptionalContentType = {})"
  },
  {
    "label": "RegisterNewRoute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNewRoute(FName RouteName, const FHttpPath& HttpPath, const EHttpServerRequestVerbs& RequestVerbs, const FHttpRequestHandler& Handler, bool bOverrideIfBound = false, bool bIsAlwaysOn = false, FString OptionalCategory = TEXT(\"Unknown\"), FString OptionalContentType = {}, FString OptionalExpectedFormat = {})"
  },
  {
    "label": "CleanUpAllRoutes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpAllRoutes()"
  },
  {
    "label": "CleanUpRoute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpRoute(FName RouteName, bool bFailIfUnbound = false)"
  },
  {
    "label": "HttpListOpenRoutes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HttpListOpenRoutes(const FHttpServerRequest& Request, const FHttpResultCallback& OnComplete)"
  },
  {
    "label": "AddRequestToLedger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequestToLedger(const FHttpServerRequest& Request)"
  },
  {
    "label": "HttpPrintRequestLedger()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HttpPrintRequestLedger(const FHttpServerRequest& Request, const FHttpResultCallback& OnComplete)"
  },
  {
    "label": "HttpListOASv3JSONRoutes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HttpListOASv3JSONRoutes(const FHttpServerRequest& Request, const FHttpResultCallback& OnComplete)"
  }
]