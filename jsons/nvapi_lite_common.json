[
  {
    "label": "_NV_RECT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_NV_RECT"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "name"
  },
  {
    "label": "_NvAPI_Status",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_NvAPI_Status"
  },
  {
    "label": "index",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "index"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (GPU)",
    "insertText": "NV_DECLARE_HANDLE(NvDisplayHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (handle)",
    "insertText": "NV_DECLARE_HANDLE(NvUnAttachedDisplayHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (Device)",
    "insertText": "NV_DECLARE_HANDLE(NvEventHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (instance)",
    "insertText": "NV_DECLARE_HANDLE(NvHICHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (Card)",
    "insertText": "NV_DECLARE_HANDLE(NvGSyncDeviceHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (device)",
    "insertText": "NV_DECLARE_HANDLE(NvVioHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (device)",
    "insertText": "NV_DECLARE_HANDLE(NvTransitionHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (request)",
    "insertText": "NV_DECLARE_HANDLE(NvAudioHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (Device)",
    "insertText": "NV_DECLARE_HANDLE(Nv3DVPContextHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (context)",
    "insertText": "NV_DECLARE_HANDLE(Nv3DVPTransceiverHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (transceiver)",
    "insertText": "NV_DECLARE_HANDLE(Nv3DVPGlassesHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (glasses)",
    "insertText": "NV_DECLARE_HANDLE(NvPcfClientHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (interface)",
    "insertText": "NV_DECLARE_HANDLE(NvSourceHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (system)",
    "insertText": "NV_DECLARE_HANDLE(NvTargetHandle)"
  },
  {
    "label": "NV_DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (system)",
    "insertText": "NV_DECLARE_HANDLE(NVDX_SwapChainHandle)"
  },
  {
    "label": "NvAPI_SYS_GetDriverAndBranchVersion()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_SYS_GetDriverAndBranchVersion(NvU32* pDriverVersion, NvAPI_ShortString szBuildBranchString)"
  },
  {
    "label": "NvAPI_GPU_GetMemoryInfo()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetMemoryInfo(NvPhysicalGpuHandle hPhysicalGpu, NV_DISPLAY_DRIVER_MEMORY_INFO *pMemoryInfo)"
  },
  {
    "label": "NvAPI_GPU_GetMemoryInfoEx()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_GPU_GetMemoryInfoEx(NvPhysicalGpuHandle hPhysicalGpu, NV_GPU_MEMORY_INFO_EX *pMemoryInfo)"
  },
  {
    "label": "NvAPI_EnumPhysicalGPUs()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_EnumPhysicalGPUs(NvPhysicalGpuHandle nvGPUHandle[NVAPI_MAX_PHYSICAL_GPUS], NvU32 *pGpuCount)"
  },
  {
    "label": "NvAPI_D3D_GetObjectHandleForResource()",
    "kind": "Method",
    "detail": "Function (NVAPI_INTERFACE)",
    "insertText": "NvAPI_D3D_GetObjectHandleForResource(\n    IUnknown *pDevice,\n    IUnknown *pResource,\n    NVDX_ObjectHandle *pHandle)"
  }
]