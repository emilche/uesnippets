[
  {
    "label": "IElementLocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IElementLocator"
  },
  {
    "label": "FAsyncAutomationDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncAutomationDriver"
  },
  {
    "label": "IAsyncDriverElementCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncDriverElementCollection"
  },
  {
    "label": "IAsyncDriverElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncDriverElement"
  },
  {
    "label": "FAsyncDriverElementCollectionFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncDriverElementCollectionFactory"
  },
  {
    "label": "FAsyncDriverElementFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncDriverElementFactory"
  },
  {
    "label": "FAutomationDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationDriver"
  },
  {
    "label": "IDriverElementCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDriverElementCollection"
  },
  {
    "label": "IDriverElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDriverElement"
  },
  {
    "label": "FDriverElementCollectionFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDriverElementCollectionFactory"
  },
  {
    "label": "FDriverElementFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDriverElementFactory"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class IElementLocator ; class FAsyncAutomationDriver ; class IAsyncDriverElementCollection ; class IAsyncDriverElement ; class FAsyncDriverElementCollectionFactory { public : TSharedRef<IAsyncDriverElementCollection,ESPMode::ThreadSafe>)",
    "insertText": "Create(const TSharedRef<FAsyncAutomationDriver, ESPMode::ThreadSafe>& AsyncDriver, const TSharedRef<IElementLocator, ESPMode::ThreadSafe>& ElementLocator)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FAutomationDriver ; class IDriverElementCollection ; class IDriverElement ; class FDriverElementCollectionFactory { public : TSharedRef<IDriverElementCollection,ESPMode::ThreadSafe>)",
    "insertText": "Create(const TSharedRef<FAutomationDriver, ESPMode::ThreadSafe>& Driver, const TSharedRef<IElementLocator, ESPMode::ThreadSafe>& ElementLocator)"
  }
]