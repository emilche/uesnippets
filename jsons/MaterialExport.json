[
  {
    "label": "FMaterialFileHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialFileHeader"
  },
  {
    "label": "FBaseMaterialData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBaseMaterialData"
  },
  {
    "label": "EBlendMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlendMode"
  },
  {
    "label": "FMaterialData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialData"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" CoreMinimal . h \" # include \" Misc / Guid . h \" namespace Lightmass { # if ! PLATFORM_MAC&& ! PLATFORM_LINUX # pragma)",
    "insertText": "pack(push, 1)"
  },
  {
    "label": "FMaterialData()",
    "kind": "Method",
    "detail": "Function (uint32 Cookie ; FGuid FormatVersion ; } ; struct FBaseMaterialData { FGuid Guid ; } ; enum EBlendMode { BLEND_Opaque = 0,BLEND_Masked = 1,BLEND_Translucent = 2,BLEND_Additive = 3,BLEND_Modulate = 4,BLEND_AlphaComposite = 5,BLEND_AlphaHoldout = 6,BLEND_TranslucentColoredTransmittance = 7,BLEND_MAX = 8,BLEND_TranslucentGreyTransmittance = BLEND_Translucent,BLEND_ColoredTransmittanceOnly = BLEND_Modulate,} ; struct FMaterialData { EBlendMode BlendMode ; uint32 bTwoSided : 1 ; uint32 bIsThinSurface : 1 ; uint32 bCastShadowAsMasked : 1 ; uint32 bSurfaceDomain : 1 ; float EmissiveBoost ; float DiffuseBoost ; float OpacityMaskClipValue ; int32 EmissiveSize ; int32 DiffuseSize ; int32 TransmissionSize ; int32 NormalSize ;)",
    "insertText": "FMaterialData() : EmissiveBoost(1.0f) , DiffuseBoost(1.0f) , EmissiveSize(0) , DiffuseSize(0) , TransmissionSize(0) , NormalSize(0)"
  }
]