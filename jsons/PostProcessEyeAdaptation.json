[
  {
    "label": "FLocalExposureParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalExposureParameters"
  },
  {
    "label": "FUsePrecalculatedLuminanceDim",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUsePrecalculatedLuminanceDim"
  },
  {
    "label": "FUseApproxIlluminanceDim",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUseApproxIlluminanceDim"
  },
  {
    "label": "FUseDebugOutputDim",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUseDebugOutputDim"
  },
  {
    "label": "FTranslucencyLightingVolumeTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTranslucencyLightingVolumeTextures"
  },
  {
    "label": "ShouldCompileCommonPermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompileCommonPermutation(const FCommonDomain& PermutationVector)"
  },
  {
    "label": "BuildCommonPermutationDomain()",
    "kind": "Method",
    "detail": "Function (FCommonDomain)",
    "insertText": "BuildCommonPermutationDomain()"
  },
  {
    "label": "CalculateEyeAdaptationParameterExposureConversion()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateEyeAdaptationParameterExposureConversion(const FPostProcessSettings& Settings, const bool bExtendedLuminanceRange)"
  },
  {
    "label": "LuminanceMaxFromLensAttenuation()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "LuminanceMaxFromLensAttenuation()"
  },
  {
    "label": "IsAutoExposureMethodSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutoExposureMethodSupported(ERHIFeatureLevel::Type FeatureLevel, EAutoExposureMethod AutoExposureMethodId)"
  },
  {
    "label": "IsAutoExposureDebugMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutoExposureDebugMode(const FViewInfo& View)"
  },
  {
    "label": "CalculateFixedAutoExposure()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateFixedAutoExposure(const FViewInfo& View)"
  },
  {
    "label": "CalculateManualAutoExposure()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateManualAutoExposure(const FViewInfo& View, bool bForceDisablePhysicalCamera)"
  },
  {
    "label": "GetAutoExposureCompensationFromSettings()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAutoExposureCompensationFromSettings(const FViewInfo& View)"
  },
  {
    "label": "IsExtendLuminanceRangeEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExtendLuminanceRangeEnabled()"
  },
  {
    "label": "IsAutoExposureUsingIlluminanceEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutoExposureUsingIlluminanceEnabled(const FViewInfo& View)"
  },
  {
    "label": "GetAutoExposureIlluminanceDownscaleFactor()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAutoExposureIlluminanceDownscaleFactor()"
  },
  {
    "label": "GetAutoExposureMethod()",
    "kind": "Method",
    "detail": "Function (EAutoExposureMethod)",
    "insertText": "GetAutoExposureMethod(const FViewInfo& View)"
  },
  {
    "label": "GetEyeAdaptationParameters()",
    "kind": "Method",
    "detail": "Function (FEyeAdaptationParameters)",
    "insertText": "GetEyeAdaptationParameters(const FViewInfo& ViewInfo)"
  },
  {
    "label": "GetEyeAdaptationFixedExposure()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetEyeAdaptationFixedExposure(const FViewInfo& View)"
  },
  {
    "label": "AddSetupExposureIlluminancePass()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "AddSetupExposureIlluminancePass(\n\tFRDGBuilder& GraphBuilder,\n\tTArrayView<const FViewInfo> Views,\n\tconst FSceneTextures& SceneTextures)"
  },
  {
    "label": "AddCalculateExposureIlluminancePass()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "AddCalculateExposureIlluminancePass(\n\tFRDGBuilder& GraphBuilder,\n\tTArrayView<const FViewInfo> Views,\n\tconst FSceneTextures& SceneTextures,\n\tconst struct FTranslucencyLightingVolumeTextures& TranslucencyLightingVolumeTextures,\n\tFRDGTextureRef ExposureIlluminanceSetup)"
  },
  {
    "label": "AddHistogramEyeAdaptationPass()",
    "kind": "Method",
    "detail": "Function (FRDGBufferRef)",
    "insertText": "AddHistogramEyeAdaptationPass(\n\tFRDGBuilder& GraphBuilder,\n\tconst FViewInfo& View,\n\tconst FEyeAdaptationParameters& EyeAdaptationParameters,\n\tconst FLocalExposureParameters& LocalExposureParameters,\n\tFRDGTextureRef HistogramTexture,\n\tbool bComputeAverageLocalExposure)"
  },
  {
    "label": "AddBasicEyeAdaptationSetupPass()",
    "kind": "Method",
    "detail": "Function (FScreenPassTexture)",
    "insertText": "AddBasicEyeAdaptationSetupPass(\n\tFRDGBuilder& GraphBuilder,\n\tconst FViewInfo& View,\n\tconst FEyeAdaptationParameters& EyeAdaptationParameters,\n\tFScreenPassTexture SceneColor)"
  },
  {
    "label": "AddBasicEyeAdaptationPass()",
    "kind": "Method",
    "detail": "Function (FRDGBufferRef)",
    "insertText": "AddBasicEyeAdaptationPass(\n\tFRDGBuilder& GraphBuilder,\n\tconst FViewInfo& View,\n\tconst FEyeAdaptationParameters& EyeAdaptationParameters,\n\tconst FLocalExposureParameters& LocalExposureParameters,\n\tFScreenPassTextureSlice SceneColor,\n\tFRDGBufferRef EyeAdaptationBuffer,\n\tbool bComputeAverageLocalExposure)"
  },
  {
    "label": "AddCopyEyeAdaptationDataToTexturePass()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "AddCopyEyeAdaptationDataToTexturePass(FRDGBuilder& GraphBuilder, const FViewInfo& View)"
  }
]