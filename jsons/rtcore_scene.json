[
  {
    "label": "RTCRayHit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHit"
  },
  {
    "label": "RTCRayHit4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHit4"
  },
  {
    "label": "RTCRayHit8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHit8"
  },
  {
    "label": "RTCRayHit16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHit16"
  },
  {
    "label": "RTCRayHitNp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHitNp"
  },
  {
    "label": "RTCSceneFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCSceneFlags"
  },
  {
    "label": "RTCBuildQuality",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBuildQuality"
  },
  {
    "label": "RTCBounds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCBounds"
  },
  {
    "label": "RTCLinearBounds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCLinearBounds"
  },
  {
    "label": "RTCPointQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCPointQuery"
  },
  {
    "label": "RTCPointQueryContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCPointQueryContext"
  },
  {
    "label": "RTCPointQuery4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCPointQuery4"
  },
  {
    "label": "RTCPointQuery8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCPointQuery8"
  },
  {
    "label": "RTCPointQuery16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCPointQuery16"
  },
  {
    "label": "RTCIntersectContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCIntersectContext"
  },
  {
    "label": "RTCRayHitN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHitN"
  },
  {
    "label": "RTCRay",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRay"
  },
  {
    "label": "RTCRay4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRay4"
  },
  {
    "label": "RTCRay8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRay8"
  },
  {
    "label": "RTCRay16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRay16"
  },
  {
    "label": "RTCRayN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayN"
  },
  {
    "label": "RTCRayNp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayNp"
  },
  {
    "label": "RTCCollision",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCCollision"
  },
  {
    "label": "RTC_SCENE_FLAG_DYNAMIC()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" rtcore_device . h \" RTC_NAMESPACE_BEGIN struct RTCRayHit ; struct RTCRayHit4 ; struct RTCRayHit8 ; struct RTCRayHit16 ; struct RTCRayHitNp ; enum RTCSceneFlags { RTC_SCENE_FLAG_NONE = 0,)",
    "insertText": "RTC_SCENE_FLAG_DYNAMIC(1 << 0), RTC_SCENE_FLAG_COMPACT = (1 << 1), RTC_SCENE_FLAG_ROBUST = (1 << 2), RTC_SCENE_FLAG_CONTEXT_FILTER_FUNCTION = (1 << 3)"
  },
  {
    "label": "rtcNewScene()",
    "kind": "Method",
    "detail": "Function (RTCScene)",
    "insertText": "rtcNewScene(RTCDevice device)"
  },
  {
    "label": "rtcGetSceneDevice()",
    "kind": "Method",
    "detail": "Function (RTCDevice)",
    "insertText": "rtcGetSceneDevice(RTCScene hscene)"
  },
  {
    "label": "rtcRetainScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcRetainScene(RTCScene scene)"
  },
  {
    "label": "rtcReleaseScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcReleaseScene(RTCScene scene)"
  },
  {
    "label": "rtcAttachGeometry()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "rtcAttachGeometry(RTCScene scene, RTCGeometry geometry)"
  },
  {
    "label": "rtcAttachGeometryByID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcAttachGeometryByID(RTCScene scene, RTCGeometry geometry, unsigned int geomID)"
  },
  {
    "label": "rtcDetachGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcDetachGeometry(RTCScene scene, unsigned int geomID)"
  },
  {
    "label": "rtcGetGeometry()",
    "kind": "Method",
    "detail": "Function (RTCGeometry)",
    "insertText": "rtcGetGeometry(RTCScene scene, unsigned int geomID)"
  },
  {
    "label": "rtcCommitScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcCommitScene(RTCScene scene)"
  },
  {
    "label": "rtcJoinCommitScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcJoinCommitScene(RTCScene scene)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "bool(*RTCProgressMonitorFunction)(void* ptr, double n)"
  },
  {
    "label": "rtcSetSceneProgressMonitorFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetSceneProgressMonitorFunction(RTCScene scene, RTCProgressMonitorFunction progress, void* ptr)"
  },
  {
    "label": "rtcSetSceneBuildQuality()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetSceneBuildQuality(RTCScene scene, enum RTCBuildQuality quality)"
  },
  {
    "label": "rtcSetSceneFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetSceneFlags(RTCScene scene, enum RTCSceneFlags flags)"
  },
  {
    "label": "rtcGetSceneFlags()",
    "kind": "Method",
    "detail": "Function (enum RTCSceneFlags)",
    "insertText": "rtcGetSceneFlags(RTCScene scene)"
  },
  {
    "label": "rtcGetSceneBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcGetSceneBounds(RTCScene scene, struct RTCBounds* bounds_o)"
  },
  {
    "label": "rtcGetSceneLinearBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcGetSceneLinearBounds(RTCScene scene, struct RTCLinearBounds* bounds_o)"
  },
  {
    "label": "rtcPointQuery()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "rtcPointQuery(RTCScene scene, struct RTCPointQuery* query, struct RTCPointQueryContext* context, RTCPointQueryFunction queryFunc, void* userPtr)"
  },
  {
    "label": "rtcPointQuery4()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "rtcPointQuery4(const int* valid, RTCScene scene, struct RTCPointQuery4* query, struct RTCPointQueryContext* context, RTCPointQueryFunction queryFunc, void** userPtr)"
  },
  {
    "label": "rtcPointQuery8()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "rtcPointQuery8(const int* valid, RTCScene scene, struct RTCPointQuery8* query, struct RTCPointQueryContext* context, RTCPointQueryFunction queryFunc, void** userPtr)"
  },
  {
    "label": "rtcPointQuery16()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "rtcPointQuery16(const int* valid, RTCScene scene, struct RTCPointQuery16* query, struct RTCPointQueryContext* context, RTCPointQueryFunction queryFunc, void** userPtr)"
  },
  {
    "label": "rtcIntersect1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcIntersect1(RTCScene scene, struct RTCIntersectContext* context, struct RTCRayHit* rayhit)"
  },
  {
    "label": "rtcIntersect4()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcIntersect4(const int* valid, RTCScene scene, struct RTCIntersectContext* context, struct RTCRayHit4* rayhit)"
  },
  {
    "label": "rtcIntersect8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcIntersect8(const int* valid, RTCScene scene, struct RTCIntersectContext* context, struct RTCRayHit8* rayhit)"
  },
  {
    "label": "rtcIntersect16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcIntersect16(const int* valid, RTCScene scene, struct RTCIntersectContext* context, struct RTCRayHit16* rayhit)"
  },
  {
    "label": "rtcIntersect1M()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcIntersect1M(RTCScene scene, struct RTCIntersectContext* context, struct RTCRayHit* rayhit, unsigned int M, size_t byteStride)"
  },
  {
    "label": "rtcIntersect1Mp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcIntersect1Mp(RTCScene scene, struct RTCIntersectContext* context, struct RTCRayHit** rayhit, unsigned int M)"
  },
  {
    "label": "rtcIntersectNM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcIntersectNM(RTCScene scene, struct RTCIntersectContext* context, struct RTCRayHitN* rayhit, unsigned int N, unsigned int M, size_t byteStride)"
  },
  {
    "label": "rtcIntersectNp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcIntersectNp(RTCScene scene, struct RTCIntersectContext* context, const struct RTCRayHitNp* rayhit, unsigned int N)"
  },
  {
    "label": "rtcOccluded1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcOccluded1(RTCScene scene, struct RTCIntersectContext* context, struct RTCRay* ray)"
  },
  {
    "label": "rtcOccluded4()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcOccluded4(const int* valid, RTCScene scene, struct RTCIntersectContext* context, struct RTCRay4* ray)"
  },
  {
    "label": "rtcOccluded8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcOccluded8(const int* valid, RTCScene scene, struct RTCIntersectContext* context, struct RTCRay8* ray)"
  },
  {
    "label": "rtcOccluded16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcOccluded16(const int* valid, RTCScene scene, struct RTCIntersectContext* context, struct RTCRay16* ray)"
  },
  {
    "label": "rtcOccluded1M()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcOccluded1M(RTCScene scene, struct RTCIntersectContext* context, struct RTCRay* ray, unsigned int M, size_t byteStride)"
  },
  {
    "label": "rtcOccluded1Mp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcOccluded1Mp(RTCScene scene, struct RTCIntersectContext* context, struct RTCRay** ray, unsigned int M)"
  },
  {
    "label": "rtcOccludedNM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcOccludedNM(RTCScene scene, struct RTCIntersectContext* context, struct RTCRayN* ray, unsigned int N, unsigned int M, size_t byteStride)"
  },
  {
    "label": "rtcOccludedNp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcOccludedNp(RTCScene scene, struct RTCIntersectContext* context, const struct RTCRayNp* ray, unsigned int N)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (struct RTCCollision { unsigned int geomID0 ; unsigned int primID0 ; unsigned int geomID1 ; unsigned int primID1 ; } ; typedef)",
    "insertText": "void(*RTCCollideFunc) (void* userPtr, struct RTCCollision* collisions, unsigned int num_collisions)"
  },
  {
    "label": "rtcCollide()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcCollide(RTCScene scene0, RTCScene scene1, RTCCollideFunc callback, void* userPtr)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) inline RTCSceneFlags operator|(RTCSceneFlags a, RTCSceneFlags b)"
  }
]