[
  {
    "label": "GLVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GLVertexBuffer"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSUBDIV3_OSD_GL_VERTEX_BUFFER_H # define OPENSUBDIV3_OSD_GL_VERTEX_BUFFER_H # include \" . . / version . h \" # include \" . . / osd / opengl . h \" # include<cstddef> namespace OpenSubdiv { namespace OPENSUBDIV_VERSION { namespace Osd { class GLVertexBuffer { public : GLVertexBuffer*)",
    "insertText": "Create(int numElements, int numVertices, void *deviceContext = NULL)"
  },
  {
    "label": "GLVertexBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "GLVertexBuffer()"
  },
  {
    "label": "UpdateData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateData(const float *src, int startVertex, int numVertices, void *deviceContext = NULL)"
  },
  {
    "label": "GetNumElements()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetNumElements()"
  },
  {
    "label": "GetNumVertices()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetNumVertices()"
  },
  {
    "label": "BindVBO()",
    "kind": "Method",
    "detail": "Function (GLuint)",
    "insertText": "BindVBO(void *deviceContext = NULL)"
  },
  {
    "label": "GLVertexBuffer()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "GLVertexBuffer(int numElements, int numVertices)"
  },
  {
    "label": "allocate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "allocate()"
  }
]