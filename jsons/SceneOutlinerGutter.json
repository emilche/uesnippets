[
  {
    "label": "ISceneOutliner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneOutliner"
  },
  {
    "label": "STableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableRow"
  },
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "FSceneOutlinerGutter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / SHeaderRow . h \" # include \" Widgets / Images / SImage . h \" # include \" SceneOutlinerPublicTypes . h \" # include \" ScopedTransaction . h \" # include \" ISceneOutlinerColumn . h \" # include \" ISceneOutlinerTreeItem . h \" class ISceneOutliner ; template<ItemType> class STableRow ; class FSceneOutlinerGutter : public ISceneOutlinerColumn { public :)",
    "insertText": "FSceneOutlinerGutter(ISceneOutliner& Outliner)"
  },
  {
    "label": "FSceneOutlinerGutter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSceneOutlinerGutter()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetID()"
  },
  {
    "label": "GetColumnID()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetColumnID()"
  },
  {
    "label": "ConstructHeaderRowColumn()",
    "kind": "Method",
    "detail": "Function (SHeaderRow::FColumn::FArguments)",
    "insertText": "ConstructHeaderRowColumn()"
  },
  {
    "label": "ConstructRowWidget()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<SWidget>)",
    "insertText": "ConstructRowWidget(FSceneOutlinerTreeItemRef TreeItem, const STableRow<FSceneOutlinerTreeItemPtr>& Row)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "SupportsSorting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsSorting()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} protected : TWeakPtr<ISceneOutliner> WeakOutliner ; FSceneOutlinerVisibilityCache VisibilityCache ; } ; class SVisibilityWidget : public SImage { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SVisibilityWidget)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TWeakPtr<FSceneOutlinerGutter> InWeakColumn, TWeakPtr<ISceneOutliner> InWeakOutliner, TWeakPtr<ISceneOutlinerTreeItem> InWeakTreeItem, const STableRow<FSceneOutlinerTreeItemPtr>* InRow)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "OnDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragDetected(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragEnter(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "HandleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleClick()"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDoubleClick(const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseCaptureLost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseCaptureLost(const FCaptureLostEvent& CaptureLostEvent)"
  },
  {
    "label": "OnSetItemVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetItemVisibility(ISceneOutlinerTreeItem& Item, const bool bNewVisibility)"
  },
  {
    "label": "ShouldPropagateVisibilityChangeOnChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldPropagateVisibilityChangeOnChildren()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible(const FSceneOutlinerTreeItemPtr& Item, const TSharedPtr<FSceneOutlinerGutter>& Column)"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "SetIsVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsVisible(const bool bVisible)"
  }
]