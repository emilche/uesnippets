[
  {
    "label": "FCharacterGroundConstraintContainerSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCharacterGroundConstraintContainerSolver"
  },
  {
    "label": "FCharacterGroundConstraintContainerSolver()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Evolution / SolverConstraintContainer . h \" # include \" Chaos / Character / CharacterGroundConstraintContainer . h \" # include \" CharacterGroundConstraintSolver . h \" namespace Chaos { namespace Private { class FCharacterGroundConstraintContainerSolver : public FConstraintContainerSolver { public :)",
    "insertText": "FCharacterGroundConstraintContainerSolver(FCharacterGroundConstraintContainer& InConstraintContainer, const int32 InPriority)"
  },
  {
    "label": "FCharacterGroundConstraintContainerSolver()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCharacterGroundConstraintContainerSolver()"
  },
  {
    "label": "GetNumConstraints()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumConstraints()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset(const int32 InMaxConstraints)"
  },
  {
    "label": "AddConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraints()"
  },
  {
    "label": "AddConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraints(const TArrayView<Private::FPBDIslandConstraint*>& IslandConstraints)"
  },
  {
    "label": "AddBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBodies(FSolverBodyContainer& SolverBodyContainer)"
  },
  {
    "label": "GatherInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherInput(const FReal Dt)"
  },
  {
    "label": "GatherInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherInput(const FReal Dt, const int32 BeginIndex, const int32 EndIndex)"
  },
  {
    "label": "ScatterOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScatterOutput(const FReal Dt)"
  },
  {
    "label": "ScatterOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScatterOutput(const FReal Dt, const int32 BeginIndex, const int32 EndIndex)"
  },
  {
    "label": "ApplyPositionConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPositionConstraints(const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "ApplyVelocityConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVelocityConstraints(const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "ApplyProjectionConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyProjectionConstraints(const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "AddConstraint()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddConstraint(FCharacterGroundConstraintHandle* Constraint)"
  }
]