[
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "ULightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULightComponent"
  },
  {
    "label": "ULocalLightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalLightComponent"
  },
  {
    "label": "FLightComponentDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightComponentDetails"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IDetailCustomization . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class IDetailLayoutBuilder ; class IPropertyHandle ; class ULightComponent ; class ULocalLightComponent ; class FLightComponentDetails : public IDetailCustomization { public : TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(const TSharedPtr<IDetailLayoutBuilder>& DetailBuilder)"
  },
  {
    "label": "SetComponentIntensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponentIntensity(ULightComponent* Component, float InIntensity)"
  },
  {
    "label": "IsLightBrightnessEnabled()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsLightBrightnessEnabled()"
  },
  {
    "label": "IsUseIESBrightnessEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUseIESBrightnessEnabled()"
  },
  {
    "label": "IsIESBrightnessScaleEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIESBrightnessScaleEnabled()"
  },
  {
    "label": "ResetIntensityToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetIntensityToDefault(TSharedPtr<IPropertyHandle> PropertyHandle, TWeakObjectPtr<ULightComponent> Component)"
  },
  {
    "label": "IsIntensityResetToDefaultVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIntensityResetToDefaultVisible(TSharedPtr<IPropertyHandle> PropertyHandle, TWeakObjectPtr<ULightComponent> Component)"
  },
  {
    "label": "ResetIntensityUnitsToDefault()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<IPropertyHandle> IESBrightnessTextureProperty ; TSharedPtr<IPropertyHandle> IESBrightnessEnabledProperty ; TSharedPtr<IPropertyHandle> IESBrightnessScaleProperty ; TSharedPtr<IPropertyHandle> LightIntensityProperty ; TSharedPtr<IPropertyHandle> IntensityUnitsProperty ; TWeakPtr<IDetailLayoutBuilder> CachedDetailBuilder ; void)",
    "insertText": "ResetIntensityUnitsToDefault(TSharedPtr<IPropertyHandle> PropertyHandle, ULocalLightComponent* Component)"
  },
  {
    "label": "IsIntensityUnitsResetToDefaultVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIntensityUnitsResetToDefaultVisible(TSharedPtr<IPropertyHandle> PropertyHandle, ULocalLightComponent* Component)"
  },
  {
    "label": "OnIntensityUnitsPreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnIntensityUnitsPreChange(ULocalLightComponent* Component)"
  },
  {
    "label": "OnIntensityUnitsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnIntensityUnitsChanged(ULocalLightComponent* Component)"
  },
  {
    "label": "AddLocalLightIntensityWithUnit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLocalLightIntensityWithUnit(IDetailLayoutBuilder& DetailBuilder, ULocalLightComponent* Component)"
  }
]