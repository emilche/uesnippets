[
  {
    "label": "FbxScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxScene"
  },
  {
    "label": "FbxStatus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxStatus"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "ECheckMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECheckMode"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FbxSceneCheckUtility()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_SCENE_CHECK_UTILITY_H_ # define _FBXSDK_SCENE_CHECK_UTILITY_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / base / fbxarray . h> # include<fbxsdk / core / base / fbxstring . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxScene ; class FbxStatus ; class FBXSDK_DLL FbxSceneCheckUtility { public : enum ECheckMode { eCheckCycles = 0 x01,eCheckAnimationData = 0 x06,eCheckAnimationEmptyLayers = 0 x02,eCheckAnimatioCurveData = 0 x04,eCheckGeometryData = 0 x7FFF8,eCheckPolyVertex = 0 x00008,eCheckLayerElems = 0 x0FFF0,eCheckOtherData = 0 xF0000,eCheckSkin = 0 x00010000,eCheckCluster = 0 x00020000,eCheckShape = 0 x00040000,eSelectionNode = 0 x00080000,eCkeckData = 0 x7FFFE } ;)",
    "insertText": "FbxSceneCheckUtility(const FbxScene* pScene, FbxStatus* pStatus=NULL, FbxArray<FbxString*>* pDetails = NULL)"
  },
  {
    "label": "FbxSceneCheckUtility()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FbxSceneCheckUtility()"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Validate(ECheckMode pCheckMode=eCheckCycles, bool pTryToRemoveBadData=false)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS bool)",
    "insertText": "Validate(FbxGeometry* pGeom, int pCheckMode = eCheckGeometryData)"
  },
  {
    "label": "ValidateArray()",
    "kind": "Method",
    "detail": "Function (template<T> bool)",
    "insertText": "ValidateArray(T* pData, int pNbItems, T pMinVal, T pMaxVal, T* pFixVal = nullptr)"
  },
  {
    "label": "ValidateMappingMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMappingMode(FbxLayerElement::EMappingMode pMappingMode)"
  },
  {
    "label": "ValidateReferenceMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateReferenceMode(FbxLayerElement::EReferenceMode pReferenceMode)"
  },
  {
    "label": "ValidateSurfaceMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateSurfaceMode(FbxGeometry::ESurfaceMode pSurfaceMode)"
  },
  {
    "label": "ExpectedNbItems()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ExpectedNbItems(const FbxGeometryBase* pGeom, FbxLayerElement::EMappingMode pMappingMode)"
  },
  {
    "label": "ValidateObjectData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateObjectData(const FbxNurbs* pNurbs)"
  },
  {
    "label": "ValidateObjectData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateObjectData(const FbxNurbsCurve* pNurbs)"
  },
  {
    "label": "ValidateObjectData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateObjectData(const FbxNurbsSurface* pNurbs)"
  },
  {
    "label": "HaveCycles()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "HaveCycles()"
  },
  {
    "label": "HaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HaveInvalidData(int pCheckMode)"
  },
  {
    "label": "FbxSceneCheckUtility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxSceneCheckUtility(const FbxSceneCheckUtility& pOther)"
  },
  {
    "label": "CheckMappingMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckMappingMode(FbxLayerElement::EMappingMode pMappingMode, const FbxString& pPrefix)"
  },
  {
    "label": "CheckReferenceMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckReferenceMode(FbxLayerElement::EReferenceMode pReferenceMode, const FbxString& pPrefix)"
  },
  {
    "label": "CheckSurfaceMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckSurfaceMode(FbxGeometry::ESurfaceMode pSurfaceMode, const FbxString& pPrefix)"
  },
  {
    "label": "CheckSurfaceType()",
    "kind": "Method",
    "detail": "Function (template<class T> bool)",
    "insertText": "CheckSurfaceType(T pSurfaceType, const FbxString& pPrefix, const char* pDir)"
  },
  {
    "label": "ResetLayerElement()",
    "kind": "Method",
    "detail": "Function (enum { eNoRestriction,eDirectOnly,eIndexOnly,} ; template<class T> bool)",
    "insertText": "ResetLayerElement(FbxLayerElementTemplate<T>* pLET, FbxString& pMsg)"
  },
  {
    "label": "CheckLayerElement()",
    "kind": "Method",
    "detail": "Function (template<class T> bool)",
    "insertText": "CheckLayerElement(FbxLayerElementTemplate<T>* pLET, int pMaxCount, const char* pId, const FbxString& pPrefix, int pRestriction = eNoRestriction)"
  },
  {
    "label": "MeshHaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MeshHaveInvalidData(int pCheckMode, FbxGeometry* pGeom, const FbxString& pName)"
  },
  {
    "label": "NurbsHaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NurbsHaveInvalidData(int pCheckMode, FbxGeometry* pGeom, const FbxString& pName)"
  },
  {
    "label": "LineHaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LineHaveInvalidData(int pCheckMode, FbxGeometry* pGeom, const FbxString& pName)"
  },
  {
    "label": "GeometryHaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GeometryHaveInvalidData(int pCheckMode, FbxGeometry* pGeom, const FbxString& pBase)"
  },
  {
    "label": "LayersHaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LayersHaveInvalidData(FbxGeometryBase* pGeom, const FbxString& pBase, int pNbConnectedMaterials=0)"
  },
  {
    "label": "ClusterHaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClusterHaveInvalidData(FbxCluster* pCluster, const FbxString& pBase, int lMaxValue=-1)"
  },
  {
    "label": "ShapeHaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShapeHaveInvalidData()"
  },
  {
    "label": "SelectionNodeHaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectionNodeHaveInvalidData()"
  },
  {
    "label": "GlobalSettingsHaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GlobalSettingsHaveInvalidData()"
  },
  {
    "label": "AnimationHaveInvalidData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnimationHaveInvalidData(int pCheckMode)"
  },
  {
    "label": "AnimationHaveEmptyLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnimationHaveEmptyLayers()"
  },
  {
    "label": "AnimationHaveInvalidCurveData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnimationHaveInvalidCurveData()"
  }
]