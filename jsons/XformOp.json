[
  {
    "label": "MatrixHint",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "MatrixHint"
  },
  {
    "label": "RotateHint",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RotateHint"
  },
  {
    "label": "ScaleHint",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ScaleHint"
  },
  {
    "label": "TranslateHint",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TranslateHint"
  },
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "IXformSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXformSchema"
  },
  {
    "label": "XformOp()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcGeom_XformOp_h # define Alembic_AbcGeom_XformOp_h # include<Alembic / Util / Export . h> # include<Alembic / AbcGeom / Foundation . h> # include<set> namespace Alembic { namespace AbcGeom { namespace ALEMBIC_VERSION_NS { enum MatrixHint { kMatrixHint = 0,kMayaShearHint = 1 } ; enum RotateHint { kRotateHint = 0,kRotateOrientationHint = 1 } ; enum ScaleHint { kScaleHint = 0 } ; enum TranslateHint { kTranslateHint = 0,kScalePivotPointHint = 1,kScalePivotTranslationHint = 2,kRotatePivotPointHint = 3,kRotatePivotTranslationHint = 4 } ; class ALEMBIC_EXPORT XformOp { public :)",
    "insertText": "XformOp()"
  },
  {
    "label": "XformOp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "XformOp(const XformOperationType iType, const Alembic::Util::uint8_t iHint = 0)"
  },
  {
    "label": "XformOp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "XformOp(const Alembic::Util::uint8_t iEncodedOp)"
  },
  {
    "label": "getType()",
    "kind": "Method",
    "detail": "Function (XformOperationType)",
    "insertText": "getType()"
  },
  {
    "label": "setType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setType(const XformOperationType iType)"
  },
  {
    "label": "getHint()",
    "kind": "Method",
    "detail": "Function (Alembic::Util::uint8_t)",
    "insertText": "getHint()"
  },
  {
    "label": "setHint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setHint(const Alembic::Util::uint8_t iHint)"
  },
  {
    "label": "isXAnimated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isXAnimated()"
  },
  {
    "label": "isYAnimated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isYAnimated()"
  },
  {
    "label": "isZAnimated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isZAnimated()"
  },
  {
    "label": "isAngleAnimated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isAngleAnimated()"
  },
  {
    "label": "isChannelAnimated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isChannelAnimated(std::size_t iIndex)"
  },
  {
    "label": "getNumChannels()",
    "kind": "Method",
    "detail": "Function (std::size_t)",
    "insertText": "getNumChannels()"
  },
  {
    "label": "setChannelValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setChannelValue(std::size_t iIndex, double iVal)"
  },
  {
    "label": "setVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setVector(const Abc::V3d &iVec)"
  },
  {
    "label": "setTranslate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTranslate(const Abc::V3d &iTrans)"
  },
  {
    "label": "setScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setScale(const Abc::V3d &iScale)"
  },
  {
    "label": "setAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setAxis(const Abc::V3d &iAxis)"
  },
  {
    "label": "setAngle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setAngle(const double iAngle)"
  },
  {
    "label": "setMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMatrix(const Abc::M44d &iMatrix)"
  },
  {
    "label": "setXRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setXRotation(const double iAngle)"
  },
  {
    "label": "setYRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setYRotation(const double iAngle)"
  },
  {
    "label": "setZRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setZRotation(const double iAngle)"
  },
  {
    "label": "getVector()",
    "kind": "Method",
    "detail": "Function (Abc::V3d)",
    "insertText": "getVector()"
  },
  {
    "label": "getTranslate()",
    "kind": "Method",
    "detail": "Function (Abc::V3d)",
    "insertText": "getTranslate()"
  },
  {
    "label": "getScale()",
    "kind": "Method",
    "detail": "Function (Abc::V3d)",
    "insertText": "getScale()"
  },
  {
    "label": "getAxis()",
    "kind": "Method",
    "detail": "Function (Abc::V3d)",
    "insertText": "getAxis()"
  },
  {
    "label": "getMatrix()",
    "kind": "Method",
    "detail": "Function (Abc::M44d)",
    "insertText": "getMatrix()"
  },
  {
    "label": "isTranslateOp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isTranslateOp()"
  },
  {
    "label": "isScaleOp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isScaleOp()"
  },
  {
    "label": "isRotateOp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isRotateOp()"
  },
  {
    "label": "isMatrixOp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isMatrixOp()"
  },
  {
    "label": "isRotateXOp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isRotateXOp()"
  },
  {
    "label": "isRotateYOp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isRotateYOp()"
  },
  {
    "label": "isRotateZOp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isRotateZOp()"
  },
  {
    "label": "getOpEncoding()",
    "kind": "Method",
    "detail": "Function (Alembic::Util::uint8_t)",
    "insertText": "getOpEncoding()"
  }
]