[
  {
    "label": "PA_COMPONENT_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PA_COMPONENT_EXPORT"
  },
  {
    "label": "PA_COMPONENT_EXPORT()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_PARTITION_ALLOCATOR_PARTITION_ALLOC_HOOKS_H_ # define BASE_ALLOCATOR_PARTITION_ALLOCATOR_PARTITION_ALLOC_HOOKS_H_ # include<atomic> # include<cstddef> # include \" base / allocator / partition_allocator / partition_alloc_base / component_export . h \" namespace partition_alloc { class)",
    "insertText": "PA_COMPONENT_EXPORT(PARTITION_ALLOC)"
  },
  {
    "label": "AllocationObserverHook()",
    "kind": "Method",
    "detail": "Function (public : typedef void)",
    "insertText": "AllocationObserverHook(void* address, size_t size, const char* type_name)"
  },
  {
    "label": "FreeObserverHook()",
    "kind": "Method",
    "detail": "Function (typedef void)",
    "insertText": "FreeObserverHook(void* address)"
  },
  {
    "label": "AllocationOverrideHook()",
    "kind": "Method",
    "detail": "Function (typedef bool)",
    "insertText": "AllocationOverrideHook(void** out, unsigned int flags, size_t size, const char* type_name)"
  },
  {
    "label": "FreeOverrideHook()",
    "kind": "Method",
    "detail": "Function (typedef bool)",
    "insertText": "FreeOverrideHook(void* address)"
  },
  {
    "label": "ReallocOverrideHook()",
    "kind": "Method",
    "detail": "Function (typedef bool)",
    "insertText": "ReallocOverrideHook(size_t* out, void* address)"
  },
  {
    "label": "SetObserverHooks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObserverHooks(AllocationObserverHook* alloc_hook, FreeObserverHook* free_hook)"
  },
  {
    "label": "SetOverrideHooks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOverrideHooks(AllocationOverrideHook* alloc_hook, FreeOverrideHook* free_hook, ReallocOverrideHook realloc_hook)"
  },
  {
    "label": "AreHooksEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreHooksEnabled()"
  },
  {
    "label": "AllocationObserverHookIfEnabled()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AllocationObserverHookIfEnabled(void* address, size_t size, const char* type_name)"
  },
  {
    "label": "AllocationOverrideHookIfEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocationOverrideHookIfEnabled(void** out, unsigned int flags, size_t size, const char* type_name)"
  },
  {
    "label": "FreeObserverHookIfEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeObserverHookIfEnabled(void* address)"
  },
  {
    "label": "FreeOverrideHookIfEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FreeOverrideHookIfEnabled(void* address)"
  },
  {
    "label": "ReallocObserverHookIfEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReallocObserverHookIfEnabled(void* old_address, void* new_address, size_t size, const char* type_name)"
  },
  {
    "label": "ReallocOverrideHookIfEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReallocOverrideHookIfEnabled(size_t* out, void* address)"
  }
]