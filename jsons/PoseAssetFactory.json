[
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "SMultiLineEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableTextBox"
  },
  {
    "label": "UPoseAssetFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseAssetFactory"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Factories / Factory . h \" # include \" PoseAssetFactory . generated . h \" struct FAssetData ; class SWindow ; class SMultiLineEditableTextBox ;)",
    "insertText": "UCLASS(HideCategories=Object,MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(BlueprintReadWrite, EditAnywhere, Category = \"PoseAssetFactory\")"
  },
  {
    "label": "ConfigureProperties()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConfigureProperties()"
  },
  {
    "label": "FactoryCreateNew()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn)"
  },
  {
    "label": "OnWindowUserActionDelegate()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnWindowUserActionDelegate(bool bCreate, UAnimSequence* InSequence, const TArray<FString>& InPoseNames)"
  }
]