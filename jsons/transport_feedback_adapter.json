[
  {
    "label": "PacketFeedback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PacketFeedback"
  },
  {
    "label": "InFlightBytesTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InFlightBytesTracker"
  },
  {
    "label": "NetworkRouteComparator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NetworkRouteComparator"
  },
  {
    "label": "TransportFeedbackAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransportFeedbackAdapter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AddInFlightPacketBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInFlightPacketBytes(const PacketFeedback& packet)"
  },
  {
    "label": "RemoveInFlightPacketBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInFlightPacketBytes(const PacketFeedback& packet)"
  },
  {
    "label": "TransportFeedbackAdapter()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "TransportFeedbackAdapter()"
  },
  {
    "label": "AddPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPacket(const RtpPacketSendInfo& packet_info,\n                 size_t overhead_bytes,\n                 Timestamp creation_time)"
  },
  {
    "label": "ProcessSentPacket()",
    "kind": "Method",
    "detail": "Function (absl::optional<SentPacket>)",
    "insertText": "ProcessSentPacket(\n      const rtc::SentPacket& sent_packet)"
  },
  {
    "label": "ProcessTransportFeedback()",
    "kind": "Method",
    "detail": "Function (absl::optional<TransportPacketsFeedback>)",
    "insertText": "ProcessTransportFeedback(\n      const rtcp::TransportFeedback& feedback,\n      Timestamp feedback_receive_time)"
  },
  {
    "label": "SetNetworkRoute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetworkRoute(const rtc::NetworkRoute& network_route)"
  },
  {
    "label": "ProcessTransportFeedbackInner()",
    "kind": "Method",
    "detail": "Function (std::vector<PacketResult>)",
    "insertText": "ProcessTransportFeedbackInner(\n      const rtcp::TransportFeedback& feedback,\n      Timestamp feedback_receive_time)"
  }
]