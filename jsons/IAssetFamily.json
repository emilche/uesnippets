[
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "IAssetFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetFamily"
  },
  {
    "label": "IAssetFamily()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AssetRegistry / AssetData . h \" # include \" Styling / SlateColor . h \" struct FSlateBrush ; class IAssetFamily { public : ~)",
    "insertText": "IAssetFamily()"
  },
  {
    "label": "GetAssetTypes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetAssetTypes(TArray<UClass*>& OutAssetTypes)"
  },
  {
    "label": "FindAssetOfType()",
    "kind": "Method",
    "detail": "Function (FAssetData)",
    "insertText": "FindAssetOfType(UClass* AssetType)"
  },
  {
    "label": "GetAsset()",
    "kind": "Method",
    "detail": "Function (template<AssetType> FAssetData)",
    "insertText": "GetAsset()"
  },
  {
    "label": "FindAssetsOfType()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FindAssetsOfType(UClass* AssetType, TArray<FAssetData>& OutAssets)"
  },
  {
    "label": "GetAssets()",
    "kind": "Method",
    "detail": "Function (template<AssetType> void)",
    "insertText": "GetAssets(TArray<FAssetData>& OutAssets)"
  },
  {
    "label": "FindAssetsOfType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAssetsOfType(AssetType::StaticClass(), OutAssets)"
  },
  {
    "label": "GetAssetTypeDisplayName()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetAssetTypeDisplayName(UClass* InAssetClass)"
  },
  {
    "label": "GetAssetTypeDisplayIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetAssetTypeDisplayIcon(UClass* InAssetClass)"
  },
  {
    "label": "GetAssetTypeDisplayTint()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetAssetTypeDisplayTint(UClass* InAssetClass)"
  },
  {
    "label": "IsAssetCompatible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetCompatible(const FAssetData& InAssetData)"
  },
  {
    "label": "GetAssetFamilyClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetAssetFamilyClass(UClass* InClass)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(IAssetFamily, FOnAssetOpened, UObject*) virtual FOnAssetOpened& GetOnAssetOpened()"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(IAssetFamily, FOnAssetFamilyChanged) virtual FOnAssetFamilyChanged& GetOnAssetFamilyChanged()"
  }
]