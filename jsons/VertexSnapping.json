[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FVertexSnappingArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVertexSnappingArgs"
  },
  {
    "label": "FSnappingVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSnappingVertex"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "FSnapActor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSnapActor"
  },
  {
    "label": "FVertexSnappingImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexSnappingImpl"
  },
  {
    "label": "FSnappingVertex()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / WeakObjectPtr . h \" class AActor ; class FLevelEditorViewportClient ; class FPrimitiveDrawInterface ; class FSceneView ; class UPrimitiveComponent ; struct FVertexSnappingArgs ; struct FSnappingVertex {)",
    "insertText": "FSnappingVertex(const FVector& InPosition, const FVector& InNormal ) : Position( InPosition ) , Normal( InNormal ) , FadeOutTime( 0 ) , FadeInTime( 0 ) , Distance( 0)"
  },
  {
    "label": "FSnappingVertex()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSnappingVertex(const FVector& InPosition ) : Position( InPosition ) , Normal( FVector::ZeroVector ) , FadeOutTime( 0 ) , FadeInTime( 0 ) , Distance( 0)"
  },
  {
    "label": "FSnappingVertex()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSnappingVertex() : Position() , Normal() , FadeOutTime( 0 ) , FadeInTime( 0 ) , Distance( 0)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FSnappingVertex& Vertex)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FSnappingVertex& Other)"
  },
  {
    "label": "FVertexSnappingImpl()",
    "kind": "Method",
    "detail": "Function (} AActor* Actor ; FBox AllowedSnappingBox ; } ; class FVertexSnappingImpl { public :)",
    "insertText": "FVertexSnappingImpl()"
  },
  {
    "label": "DrawSnappingHelpers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawSnappingHelpers(const FSceneView* View,FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "ClearSnappingHelpers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSnappingHelpers(bool bClearImmediately)"
  },
  {
    "label": "SnapDraggedActorsToNearestVertex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SnapDraggedActorsToNearestVertex(FVector& DragDelta, FLevelEditorViewportClient* ViewportClient)"
  },
  {
    "label": "SnapDragLocationToNearestVertex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SnapDragLocationToNearestVertex(const FVector& BaseLocation, FVector& DragDelta, FLevelEditorViewportClient* ViewportClient)"
  },
  {
    "label": "SnapLocationToNearestVertex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SnapLocationToNearestVertex(FVector& Location, const FVector2D& MouseLocation, FLevelEditorViewportClient* ViewportClient, FVector& OutVertexNormal, bool bDrawVertexHelpers)"
  },
  {
    "label": "GetClosestVertexOnComponent()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "GetClosestVertexOnComponent(const FSnapActor& SnapActor, UPrimitiveComponent* Component, const struct FVertexSnappingArgs& InArgs, FSnappingVertex& OutClosestLocation)"
  },
  {
    "label": "GetClosestVertex()",
    "kind": "Method",
    "detail": "Function (FSnappingVertex)",
    "insertText": "GetClosestVertex(const TArray<FSnapActor>& Actors, const struct FVertexSnappingArgs& InArgs)"
  },
  {
    "label": "GetPossibleSnapActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPossibleSnapActors(const FBox& AllowedBox, FIntPoint MouseLocation, FLevelEditorViewportClient* ViewportClient, const FSceneView* View, EAxisList::Type CurrentAxis, TSet< TWeakObjectPtr<AActor> >& ActorsToIgnore, TArray<FSnapActor>& OutSnapActors)"
  },
  {
    "label": "GetActorsInsideBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetActorsInsideBox(const FBox& Box, UWorld* World, TArray<FSnapActor>& OutActorsInBox, const TSet< TWeakObjectPtr<AActor> >& ActorsToIgnore, const FSceneView* View)"
  },
  {
    "label": "SnapDragDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapDragDelta(FVertexSnappingArgs& InArgs, const FVector& StartLocation, const FBox& AllowedSnappingBox, TSet< TWeakObjectPtr<AActor> >& ActorsToIgnore, FVector& DragDelta)"
  }
]