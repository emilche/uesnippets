[
  {
    "label": "ClientHandlerOsr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClientHandlerOsr"
  },
  {
    "label": "OsrDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OsrDelegate"
  },
  {
    "label": "OnAfterCreated()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_TESTS_CEFCLIENT_BROWSER_CLIENT_HANDLER_OSR_H_ # define CEF_TESTS_CEFCLIENT_BROWSER_CLIENT_HANDLER_OSR_H_ # pragma once # include \" tests / cefclient / browser / client_handler . h \" namespace client { class ClientHandlerOsr : public ClientHandler,public CefAccessibilityHandler,public CefRenderHandler { public : class OsrDelegate { public : void)",
    "insertText": "OnAfterCreated(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "OnBeforeClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeforeClose(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "GetRootScreenRect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRootScreenRect(CefRefPtr<CefBrowser> browser, CefRect& rect)"
  },
  {
    "label": "GetViewRect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetViewRect(CefRefPtr<CefBrowser> browser, CefRect& rect)"
  },
  {
    "label": "GetScreenPoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetScreenPoint(CefRefPtr<CefBrowser> browser, int viewX, int viewY, int& screenX, int& screenY)"
  },
  {
    "label": "GetScreenInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetScreenInfo(CefRefPtr<CefBrowser> browser, CefScreenInfo& screen_info)"
  },
  {
    "label": "OnPopupShow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPopupShow(CefRefPtr<CefBrowser> browser, bool show)"
  },
  {
    "label": "OnPopupSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPopupSize(CefRefPtr<CefBrowser> browser, const CefRect& rect)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPaint(CefRefPtr<CefBrowser> browser, CefRenderHandler::PaintElementType type, const CefRenderHandler::RectList& dirtyRects, const void* buffer, int width, int height)"
  },
  {
    "label": "OnAcceleratedPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAcceleratedPaint(CefRefPtr<CefBrowser> browser, CefRenderHandler::PaintElementType type, const CefRenderHandler::RectList& dirtyRects, void* share_handle)"
  },
  {
    "label": "StartDragging()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "StartDragging(CefRefPtr<CefBrowser> browser, CefRefPtr<CefDragData> drag_data, CefRenderHandler::DragOperationsMask allowed_ops, int x, int y)"
  },
  {
    "label": "UpdateDragCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDragCursor(CefRefPtr<CefBrowser> browser, CefRenderHandler::DragOperation operation)"
  },
  {
    "label": "OnImeCompositionRangeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnImeCompositionRangeChanged(CefRefPtr<CefBrowser> browser, const CefRange& selection_range, const CefRenderHandler::RectList& character_bounds)"
  },
  {
    "label": "OnCursorChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCursorChange(CefRefPtr<CefBrowser> browser, CefCursorHandle cursor, cef_cursor_type_t type, const CefCursorInfo& custom_cursor_info)"
  },
  {
    "label": "UpdateAccessibilityTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAccessibilityTree(CefRefPtr<CefValue> value)"
  },
  {
    "label": "UpdateAccessibilityLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAccessibilityLocation(CefRefPtr<CefValue> value)"
  },
  {
    "label": "OsrDelegate()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "OsrDelegate()"
  },
  {
    "label": "ClientHandlerOsr()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "ClientHandlerOsr(Delegate* delegate, OsrDelegate* osr_delegate, const std::string& startup_url)"
  },
  {
    "label": "DetachOsrDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachOsrDelegate()"
  },
  {
    "label": "GetRenderHandler()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefRenderHandler>)",
    "insertText": "GetRenderHandler()"
  },
  {
    "label": "OnAccessibilityTreeChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAccessibilityTreeChange(CefRefPtr<CefValue> value)"
  },
  {
    "label": "OnAccessibilityLocationChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAccessibilityLocationChange(CefRefPtr<CefValue> value)"
  },
  {
    "label": "IMPLEMENT_REFCOUNTING()",
    "kind": "Method",
    "detail": "Function (private : OsrDelegate* osr_delegate_ ;)",
    "insertText": "IMPLEMENT_REFCOUNTING(ClientHandlerOsr)"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(ClientHandlerOsr)"
  }
]