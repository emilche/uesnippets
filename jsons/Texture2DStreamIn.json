[
  {
    "label": "FTexture2DStreamIn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture2DStreamIn"
  },
  {
    "label": "FStreamMipData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamMipData"
  },
  {
    "label": "FTexture2DStreamIn()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Texture2DUpdate . h \" class FTexture2DStreamIn : public FTexture2DUpdate { public :)",
    "insertText": "FTexture2DStreamIn(UTexture2D* InTexture)"
  },
  {
    "label": "FTexture2DStreamIn()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTexture2DStreamIn()"
  },
  {
    "label": "DoAllocateNewMips()",
    "kind": "Method",
    "detail": "Function (protected : struct FStreamMipData { void* Data = nullptr ; uint32 Pitch = 0 ; } ; TArray<FStreamMipData,TInlineAllocator<MAX_TEXTURE_MIP_COUNT>> MipData ; void* InitialMipDataForAsyncCreate [ MAX_TEXTURE_MIP_COUNT ] ; void)",
    "insertText": "DoAllocateNewMips(const FContext& Context)"
  },
  {
    "label": "DoFreeNewMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoFreeNewMips(const FContext& Context)"
  },
  {
    "label": "DoLockNewMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoLockNewMips(const FContext& Context)"
  },
  {
    "label": "DoUnlockNewMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoUnlockNewMips(const FContext& Context)"
  },
  {
    "label": "DoCopySharedMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoCopySharedMips(const FContext& Context)"
  },
  {
    "label": "DoAsyncCreateWithNewMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoAsyncCreateWithNewMips(const FContext& Context)"
  }
]