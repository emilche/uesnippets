[
  {
    "label": "FJsonSerializerReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonSerializerReader"
  },
  {
    "label": "FJsonDataBag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FJsonDataBag"
  },
  {
    "label": "TPrettyJsonBag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPrettyJsonBag"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Serialization / JsonSerializable . h \" # include \" Misc / Optional . h \" class FJsonSerializerReader ; struct FJsonDataBag : public FJsonSerializable { void)",
    "insertText": "Serialize(FJsonSerializerBase& Serializer, bool bFlatObject)"
  },
  {
    "label": "GetDouble()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetDouble(const FString& Key)"
  },
  {
    "label": "GetString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetString(const FString& Key)"
  },
  {
    "label": "GetBool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetBool(const FString& Key)"
  },
  {
    "label": "GetField()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<const FJsonValue>)",
    "insertText": "GetField(const FString& Key)"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (template<JSON_TYPE,Arg> void)",
    "insertText": "SetField(const FString& Key, Arg&& Value)"
  },
  {
    "label": "SetFieldJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFieldJson(Key, MakeShared<JSON_TYPE>(Forward<Arg>(Value)))"
  },
  {
    "label": "SetFieldJson()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetFieldJson(const FString& Key, const TSharedPtr<FJsonValue>& Value)"
  },
  {
    "label": "TPrettyJsonBag()",
    "kind": "Method",
    "detail": "Function (public : TSharedPtr<FJsonObject> JsonObject ; TOptional<int32> NumPrintIndents ; } ; template<int32 PrintIndentCount> struct TPrettyJsonBag : public FJsonDataBag {)",
    "insertText": "TPrettyJsonBag() : FJsonDataBag()"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (NumPrintIndents .)",
    "insertText": "Emplace(PrintIndentCount)"
  }
]