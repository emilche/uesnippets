[
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "IAnimSequenceCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimSequenceCurveEditor"
  },
  {
    "label": "IAnimationSequenceBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimationSequenceBrowser"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "ITimeSliderController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITimeSliderController"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FToolMenuContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuContext"
  },
  {
    "label": "FAnimationEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationEditor"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "ISkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTree"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "IAnimationSequenceBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimationSequenceBrowser"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFactory"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "ISkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTree"
  },
  {
    "label": "IPersonaViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaViewport"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "IAnimationSequenceBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimationSequenceBrowser"
  },
  {
    "label": "InitAnimationEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAnimationEditor(const EToolkitMode::Type Mode, const TSharedPtr<class IToolkitHost>& InitToolkitHost, class UAnimationAsset* InAnimationAsset)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FAnimationEditor\")"
  },
  {
    "label": "HandleDetailsCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDetailsCreated(const TSharedRef<class IDetailsView>& InDetailsView)"
  },
  {
    "label": "HandleOpenNewAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOpenNewAsset(UObject* InNewAsset)"
  },
  {
    "label": "HandleAnimationSequenceBrowserCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAnimationSequenceBrowserCreated(const TSharedRef<class IAnimationSequenceBrowser>& InSequenceBrowser)"
  },
  {
    "label": "HandleSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSelectionChanged(const TArrayView<TSharedPtr<ISkeletonTreeItem>>& InSelectedItems, ESelectInfo::Type InSelectInfo)"
  },
  {
    "label": "HandleObjectSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleObjectSelected(UObject* InObject)"
  },
  {
    "label": "HandleObjectsSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleObjectsSelected(const TArray<UObject*>& InObjects)"
  },
  {
    "label": "HandleSectionsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSectionsChanged()"
  },
  {
    "label": "OnSetKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetKey()"
  },
  {
    "label": "OnReimportAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReimportAnimation(bool bWithDialog)"
  },
  {
    "label": "OnApplyCompression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApplyCompression()"
  },
  {
    "label": "OnExportToFBX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExportToFBX(const EExportSourceOption Option)"
  },
  {
    "label": "ExportToFBX()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportToFBX(const TArray<UObject*> NewAssets, bool bRecordAnimation)"
  },
  {
    "label": "OnAddLoopingInterpolation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddLoopingInterpolation()"
  },
  {
    "label": "OnRemoveBoneTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveBoneTrack()"
  },
  {
    "label": "ConditionalRefreshEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalRefreshEditor(UObject* InObject)"
  },
  {
    "label": "HandlePostReimport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePostReimport(UObject* InObject, bool bSuccess)"
  },
  {
    "label": "HandlePostImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePostImport(class UFactory* InFactory, UObject* InObject)"
  },
  {
    "label": "ExtendMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendMenu()"
  },
  {
    "label": "ExtendToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendToolbar()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "OpenNewAnimationDocumentTab()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "OpenNewAnimationDocumentTab(UAnimationAsset* InAnimAsset)"
  },
  {
    "label": "GetAnimationEditor()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FAnimationEditor>)",
    "insertText": "GetAnimationEditor(const FToolMenuContext& InMenuContext)"
  }
]