[
  {
    "label": "CommandLine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CommandLine"
  },
  {
    "label": "MultiProcessTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MultiProcessTest"
  },
  {
    "label": "SpawnMultiProcessTestChild()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_MULTIPROCESS_TEST_H_ # define BASE_TEST_MULTIPROCESS_TEST_H_ # include<string> # include \" base / process / launch . h \" # include \" base / process / process . h \" # include \" build / build_config . h \" # include \" testing / platform_test . h \" namespace base { class CommandLine ; Process)",
    "insertText": "SpawnMultiProcessTestChild(const std::string& procname, const CommandLine& command_line, const LaunchOptions& options)"
  },
  {
    "label": "GetMultiProcessTestChildBaseCommandLine()",
    "kind": "Method",
    "detail": "Function (CommandLine)",
    "insertText": "GetMultiProcessTestChildBaseCommandLine()"
  },
  {
    "label": "WaitForMultiprocessTestChildExit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitForMultiprocessTestChildExit(const Process& process, TimeDelta timeout, int* exit_code)"
  },
  {
    "label": "TerminateMultiProcessTestChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TerminateMultiProcessTestChild(const Process& process, int exit_code, bool wait)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_ANDROID) bool MultiProcessTestChildHasCleanExit(const Process& process)"
  },
  {
    "label": "MultiProcessTest()",
    "kind": "Method",
    "detail": "Function (# endif class MultiProcessTest : public PlatformTest { public :)",
    "insertText": "MultiProcessTest()"
  },
  {
    "label": "MultiProcessTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MultiProcessTest(const MultiProcessTest&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MultiProcessTest&)",
    "insertText": "operator(const MultiProcessTest&)"
  },
  {
    "label": "SpawnChild()",
    "kind": "Method",
    "detail": "Function (protected : Process)",
    "insertText": "SpawnChild(const std::string& procname)"
  },
  {
    "label": "SpawnChildWithOptions()",
    "kind": "Method",
    "detail": "Function (Process)",
    "insertText": "SpawnChildWithOptions(const std::string& procname, const LaunchOptions& options)"
  },
  {
    "label": "MakeCmdLine()",
    "kind": "Method",
    "detail": "Function (CommandLine)",
    "insertText": "MakeCmdLine(const std::string& procname)"
  }
]