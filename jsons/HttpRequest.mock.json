[
  {
    "label": "FMockHttpRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMockHttpRequest"
  },
  {
    "label": "GetURL()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Interfaces / IHttpRequest . h \" # include \" Tests / TestHelpers . h \" # if WITH_DEV_AUTOMATION_TESTS namespace BuildPatchServices { class FMockHttpRequest : public IHttpRequest { public : typedef TTuple<FString> FRxSetVerb ; typedef TTuple<FString> FRxSetURL ; public : FString)",
    "insertText": "GetURL()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetURL\")"
  },
  {
    "label": "OnRequestWillRetry()",
    "kind": "Method",
    "detail": "Function (} FHttpRequestWillRetryDelegate&)",
    "insertText": "OnRequestWillRetry()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::OnRequestWillRetry\")"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetURLParameter\")"
  },
  {
    "label": "GetHeader()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetHeader(const FString& HeaderName)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetHeader\")"
  },
  {
    "label": "GetAllHeaders()",
    "kind": "Method",
    "detail": "Function (} TArray<FString>)",
    "insertText": "GetAllHeaders()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetAllHeaders\")"
  },
  {
    "label": "GetContentType()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetContentType()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetContentType\")"
  },
  {
    "label": "GetContentLength()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "GetContentLength()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetContentLength\")"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (} const TArray<uint8>&)",
    "insertText": "GetContent()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetContent\")"
  },
  {
    "label": "GetVerb()",
    "kind": "Method",
    "detail": "Function (TArray<uint8> None ; return None ; } FString)",
    "insertText": "GetVerb()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetVerb\")"
  },
  {
    "label": "GetOption()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetOption(const FName Option)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetOption\")"
  },
  {
    "label": "SetVerb()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetVerb(const FString& Verb)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (RxSetVerb .)",
    "insertText": "Emplace(Verb)"
  },
  {
    "label": "SetURL()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetURL(const FString& URL)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (RxSetURL .)",
    "insertText": "Emplace(URL)"
  },
  {
    "label": "SetOption()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetOption(const FName Option, const FString& OptionValue)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::SetOption\")"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetContent(const TArray<uint8>& ContentPayload)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::SetContent\")"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetContent(TArray<uint8>&& ContentPayload)"
  },
  {
    "label": "SetContentAsString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetContentAsString(const FString& ContentString)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::SetContentAsString\")"
  },
  {
    "label": "SetContentAsStreamedFile()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetContentAsStreamedFile(const FString& Filename)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::SetContentAsStreamedFile\")"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::SetContentFromStream\")"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::SetResponseBodyReceiveStream\")"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::SetHeader\")"
  },
  {
    "label": "AppendToHeader()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AppendToHeader(const FString& HeaderName, const FString& AdditionalHeaderValue)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::AppendToHeader\")"
  },
  {
    "label": "SetTimeout()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetTimeout(float InTimeoutSecs)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::SetTimeout\")"
  },
  {
    "label": "ClearTimeout()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClearTimeout()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::ClearTimeout\")"
  },
  {
    "label": "ResetTimeoutStatus()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetTimeoutStatus()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::ResetTimeoutStatus\")"
  },
  {
    "label": "GetTimeout()",
    "kind": "Method",
    "detail": "Function (} TOptional<float>)",
    "insertText": "GetTimeout()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetTimeout\")"
  },
  {
    "label": "SetActivityTimeout()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetActivityTimeout(float InTimeoutSecs)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::SetActivityTimeout\")"
  },
  {
    "label": "ProcessRequestUntilComplete()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProcessRequestUntilComplete()"
  },
  {
    "label": "ProcessRequest()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ProcessRequest()"
  },
  {
    "label": "OnProcessRequestComplete()",
    "kind": "Method",
    "detail": "Function (+ + RxProcessRequest ; return true ; } FHttpRequestCompleteDelegate&)",
    "insertText": "OnProcessRequestComplete()"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (+ + RxCancelRequest ; } EHttpRequestStatus::Type)",
    "insertText": "GetStatus()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetStatus\")"
  },
  {
    "label": "GetFailureReason()",
    "kind": "Method",
    "detail": "Function (} EHttpFailureReason)",
    "insertText": "GetFailureReason()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetFailureReason\")"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetResponse\")"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Tick(float DeltaSeconds)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::Tick\")"
  },
  {
    "label": "GetElapsedTime()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetElapsedTime()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetElapsedTime\")"
  },
  {
    "label": "SetDelegateThreadPolicy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetDelegateThreadPolicy(EHttpRequestDelegateThreadPolicy InThreadPolicy)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::SetDelegateThreadPolicy\")"
  },
  {
    "label": "GetDelegateThreadPolicy()",
    "kind": "Method",
    "detail": "Function (} EHttpRequestDelegateThreadPolicy)",
    "insertText": "GetDelegateThreadPolicy()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetDelegateThreadPolicy\")"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetEffectiveURL\")"
  }
]