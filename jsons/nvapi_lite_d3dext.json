[
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" nvapi_lite_salstart . h \" # include \" nvapi_lite_common . h \" # pragma)",
    "insertText": "pack(push,8)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(__cplusplus) && (defined(__d3d10_h__) || defined(__d3d10_1_h__) || defined(__d3d11_h__))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (NVAPI_DEVICE_FEATURE_LEVEL_NULL = - 1,NVAPI_DEVICE_FEATURE_LEVEL_10_0 = 0,NVAPI_DEVICE_FEATURE_LEVEL_10_0_PLUS = 1,NVAPI_DEVICE_FEATURE_LEVEL_10_1 = 2,NVAPI_DEVICE_FEATURE_LEVEL_11_0 = 3,} NVAPI_DEVICE_FEATURE_LEVEL ; # endif # if)",
    "insertText": "defined(__cplusplus) && defined(__d3d11_h__) NVAPI_INTERFACE NvAPI_D3D11_CreateDevice(IDXGIAdapter* pAdapter, D3D_DRIVER_TYPE DriverType, HMODULE Software, UINT Flags, CONST D3D_FEATURE_LEVEL *pFeatureLevels, UINT FeatureLevels, UINT SDKVersion, ID3D11Device **ppDevice, D3D_FEATURE_LEVEL *pFeatureLevel, ID3D11DeviceContext **ppImmediateContext, NVAPI_DEVICE_FEATURE_LEVEL *pSupportedLevel)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(__cplusplus) && defined(__d3d11_h__) NVAPI_INTERFACE NvAPI_D3D11_CreateDeviceAndSwapChain(IDXGIAdapter* pAdapter, D3D_DRIVER_TYPE DriverType, HMODULE Software, UINT Flags, CONST D3D_FEATURE_LEVEL *pFeatureLevels, UINT FeatureLevels, UINT SDKVersion, CONST DXGI_SWAP_CHAIN_DESC *pSwapChainDesc, IDXGISwapChain **ppSwapChain, ID3D11Device **ppDevice, D3D_FEATURE_LEVEL *pFeatureLevel, ID3D11DeviceContext **ppImmediateContext, NVAPI_DEVICE_FEATURE_LEVEL *pSupportedLevel)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(__cplusplus) && defined(__d3d11_h__) NVAPI_INTERFACE NvAPI_D3D11_SetDepthBoundsTest(IUnknown* pDeviceOrContext, NvU32 bEnable, float fMinDepth, float fMaxDepth)"
  }
]