[
  {
    "label": "FGeometryCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollection"
  },
  {
    "label": "FGeometryCollectionProximityPropertiesInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionProximityPropertiesInterface"
  },
  {
    "label": "FProximityProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProximityProperties"
  },
  {
    "label": "FGeometryCollectionProximityPropertiesInterface()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GeometryCollection / ManagedArrayCollection . h \" # include \" GeometryCollection / GeometryCollectionProximityUtility . h \" class FGeometryCollection ; class FGeometryCollectionProximityPropertiesInterface : public FManagedArrayInterface { public : typedef FManagedArrayInterface Super ; using FManagedArrayInterface::ManagedCollection ; const FName ProximityPropertiesGroup ; const FName ProximityDetectionMethod ; const FName ProximityDistanceThreshold ; const FName ProximityAsConnectionGraph ; const FName ProximityConnectionGraphContactAreaMethod ; const FName ProximityRequireContactAmount ; const FName ProximityContactMethod ; struct FProximityProperties { EProximityMethod Method = EProximityMethod::Precise ; float DistanceThreshold = 1 . 0 f ; float RequireContactAmount = 0 . 0 f ; EProximityContactMethod ContactMethod = EProximityContactMethod::MinOverlapInProjectionToMajorAxes ; EConnectionContactMethod ContactAreaMethod = EConnectionContactMethod::None ; bool bUseAsConnectionGraph = false ; } ;)",
    "insertText": "FGeometryCollectionProximityPropertiesInterface(FGeometryCollection* InGeometryCollection)"
  },
  {
    "label": "InitializeInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeInterface()"
  },
  {
    "label": "CleanInterfaceForCook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanInterfaceForCook()"
  },
  {
    "label": "RemoveInterfaceAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInterfaceAttributes()"
  },
  {
    "label": "GetProximityProperties()",
    "kind": "Method",
    "detail": "Function (FProximityProperties)",
    "insertText": "GetProximityProperties()"
  },
  {
    "label": "SetProximityProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProximityProperties(const FProximityProperties&)"
  }
]