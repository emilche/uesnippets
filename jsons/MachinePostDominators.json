[
  {
    "label": "MachinePostDominatorTree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MachinePostDominatorTree"
  },
  {
    "label": "MachinePostDominatorTree()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_CODEGEN_MACHINEPOSTDOMINATORS_H # define LLVM_CODEGEN_MACHINEPOSTDOMINATORS_H # include \" llvm / CodeGen / MachineDominators . h \" # include \" llvm / CodeGen / MachineFunctionPass . h \" namespace llvm { struct MachinePostDominatorTree : public MachineFunctionPass { private : DominatorTreeBase<MachineBasicBlock>* DT ; public : char ID ;)",
    "insertText": "MachinePostDominatorTree()"
  },
  {
    "label": "createMachinePostDominatorTreePass()",
    "kind": "Method",
    "detail": "Function (FunctionPass*)",
    "insertText": "createMachinePostDominatorTreePass()"
  },
  {
    "label": "getRoots()",
    "kind": "Method",
    "detail": "Function (const std::vector<MachineBasicBlock*>&)",
    "insertText": "getRoots()"
  },
  {
    "label": "getRootNode()",
    "kind": "Method",
    "detail": "Function (} MachineDomTreeNode*)",
    "insertText": "getRootNode()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} MachineDomTreeNode*)",
    "insertText": "operator(MachineBasicBlock *BB)"
  },
  {
    "label": "getNode()",
    "kind": "Method",
    "detail": "Function (} MachineDomTreeNode*)",
    "insertText": "getNode(MachineBasicBlock *BB)"
  },
  {
    "label": "dominates()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "dominates(const MachineDomTreeNode *A, const MachineDomTreeNode *B)"
  },
  {
    "label": "dominates()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "dominates(const MachineBasicBlock *A, const MachineBasicBlock *B)"
  },
  {
    "label": "properlyDominates()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "properlyDominates(const MachineDomTreeNode *A, const MachineDomTreeNode *B)"
  },
  {
    "label": "properlyDominates()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "properlyDominates(const MachineBasicBlock *A, const MachineBasicBlock *B)"
  },
  {
    "label": "findNearestCommonDominator()",
    "kind": "Method",
    "detail": "Function (} MachineBasicBlock*)",
    "insertText": "findNearestCommonDominator(MachineBasicBlock *A, MachineBasicBlock *B)"
  },
  {
    "label": "runOnMachineFunction()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "runOnMachineFunction(MachineFunction &MF)"
  },
  {
    "label": "getAnalysisUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getAnalysisUsage(AnalysisUsage &AU)"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "print(llvm::raw_ostream &OS, const Module *M = nullptr)"
  }
]