[
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "FCpuTimingTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCpuTimingTrack"
  },
  {
    "label": "FGpuTimingTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGpuTimingTrack"
  },
  {
    "label": "STimingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingView"
  },
  {
    "label": "FThreadTimingSharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadTimingSharedState"
  },
  {
    "label": "FThreadGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadGroup"
  },
  {
    "label": "FThreadTimingSharedState()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FThreadTimingSharedState(STimingView* InTimingView)"
  },
  {
    "label": "GetCpuTrack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FCpuTimingTrack>)",
    "insertText": "GetCpuTrack(uint32 InThreadId)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "SetAllGpuTracksToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllGpuTracksToggle(bool bOnOff)"
  },
  {
    "label": "SetAllCpuTracksToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllCpuTracksToggle(bool bOnOff)"
  },
  {
    "label": "FindMaxEventInstance()",
    "kind": "Method",
    "detail": "Function (ITimingEvent>)",
    "insertText": "FindMaxEventInstance(uint32 TimerId, double StartTime, double EndTime)"
  },
  {
    "label": "FindMinEventInstance()",
    "kind": "Method",
    "detail": "Function (ITimingEvent>)",
    "insertText": "FindMinEventInstance(uint32 TimerId, double StartTime, double EndTime)"
  },
  {
    "label": "CreateThreadGroupsMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateThreadGroupsMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "ToggleTrackVisibilityByGroup_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleTrackVisibilityByGroup_Execute(const TCHAR* InGroupName)"
  }
]