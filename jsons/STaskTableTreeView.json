[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "STaskTableTreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STaskTableTreeView"
  },
  {
    "label": "FColumnConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColumnConfig"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "STaskTableTreeView()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Async / TaskTrace . h \" # include \" TraceServices / Model / TasksProfiler . h \" # include \" Insights / Table / Widgets / SSessionTableTreeView . h \" # include \" Insights / TaskGraphProfiler / ViewModels / TaskTable . h \" class FMenuBuilder ; namespace UE::Insights::TaskGraphProfiler { class STaskTableTreeView : public SSessionTableTreeView { private : struct FColumnConfig { const FName& ColumnId ; bool bIsVisible ; float Width ; } ; enum class ETimestampOptions : uint32 { Absolute,RelativeToPrevious,RelativeToCreated,} ; public :)",
    "insertText": "STaskTableTreeView()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(STaskTableTreeView)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedPtr<FTaskTable> InTablePtr)"
  },
  {
    "label": "ConstructHeaderArea()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructHeaderArea(TSharedRef<SVerticalBox> InWidgetContent)"
  },
  {
    "label": "ConstructFooter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "ConstructFooter()"
  },
  {
    "label": "GetTaskTable()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTaskTable>)",
    "insertText": "GetTaskTable()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "RebuildTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildTree(bool bResync)"
  },
  {
    "label": "IsRunning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRunning()"
  },
  {
    "label": "GetAllOperationsDuration()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetAllOperationsDuration()"
  },
  {
    "label": "GetCurrentOperationName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCurrentOperationName()"
  },
  {
    "label": "TreeView_OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeView_OnMouseButtonDoubleClick(FTableTreeNodePtr TreeNode)"
  },
  {
    "label": "SelectTaskEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectTaskEntry(TaskTrace::FId InId)"
  },
  {
    "label": "InternalCreateGroupings()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "InternalCreateGroupings()"
  },
  {
    "label": "ExtendMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "SearchForItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SearchForItem(TSharedPtr<FTableTaskCancellationToken> CancellationToken)"
  },
  {
    "label": "AddCommmands()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddCommmands()"
  },
  {
    "label": "GetAvailableTimestampOptions()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<ETimestampOptions>>*)",
    "insertText": "GetAvailableTimestampOptions()"
  },
  {
    "label": "TimestampOptions_OnGenerateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "TimestampOptions_OnGenerateWidget(TSharedPtr<ETimestampOptions> InOption)"
  },
  {
    "label": "TimestampOptions_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TimestampOptions_OnSelectionChanged(TSharedPtr<ETimestampOptions> InOption, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "TimestampOptions_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TimestampOptions_OnSelectionChanged(ETimestampOptions InOption)"
  },
  {
    "label": "TimestampOptions_GetSelectionText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "TimestampOptions_GetSelectionText()"
  },
  {
    "label": "TimestampOptions_GetText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "TimestampOptions_GetText(ETimestampOptions InOption)"
  },
  {
    "label": "TimestampOptions_IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TimestampOptions_IsEnabled()"
  },
  {
    "label": "GetAvailableTasksSelectionOptions()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<TraceServices::ETaskEnumerationOption>>*)",
    "insertText": "GetAvailableTasksSelectionOptions()"
  },
  {
    "label": "TasksSelectionOptions_OnGenerateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "TasksSelectionOptions_OnGenerateWidget(TSharedPtr<TraceServices::ETaskEnumerationOption> InOption)"
  },
  {
    "label": "TasksSelectionOptions_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TasksSelectionOptions_OnSelectionChanged(TSharedPtr<TraceServices::ETaskEnumerationOption> InOption, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "TasksSelectionOptions_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TasksSelectionOptions_OnSelectionChanged(TraceServices::ETaskEnumerationOption InOption)"
  },
  {
    "label": "TasksSelectionOptions_GetSelectionText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "TasksSelectionOptions_GetSelectionText()"
  },
  {
    "label": "TasksSelectionOptions_GetText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "TasksSelectionOptions_GetText(TraceServices::ETaskEnumerationOption InOption)"
  },
  {
    "label": "TasksSelectionOptions_IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TasksSelectionOptions_IsEnabled()"
  },
  {
    "label": "ContextMenu_GoToTask_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_GoToTask_CanExecute()"
  },
  {
    "label": "ContextMenu_GoToTask_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_GoToTask_Execute()"
  },
  {
    "label": "ContextMenu_OpenInIDE_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContextMenu_OpenInIDE_CanExecute()"
  },
  {
    "label": "ContextMenu_OpenInIDE_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenu_OpenInIDE_Execute()"
  },
  {
    "label": "GetSourceFileAndLineForSelectedTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSourceFileAndLineForSelectedTask(FString& OutFile, uint32& OutLine)"
  }
]