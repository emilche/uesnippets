[
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "UCameraProxyMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraProxyMeshComponent"
  },
  {
    "label": "UCameraComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraComponent"
  },
  {
    "label": "UDrawFrustumComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDrawFrustumComponent"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "FPostProcessSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPostProcessSettings"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ScriptInterface . h \" # include \" Components / SceneComponent . h \" # include \" Components / StaticMeshComponent . h \" # include \" Engine / BlendableInterface . h \" # include \" Engine / Scene . h \" # include \" Camera / CameraTypes . h \" # include \" CameraComponent . generated . h \" class UStaticMesh ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual FPrimitiveSceneProxy* CreateSceneProxy()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(HideCategories=(Mobility, Rendering, LOD), Blueprintable, ClassGroup=Camera, meta=(BlueprintSpawnableComponent), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(Interp, EditAnywhere, BlueprintReadWrite, Category = CameraSettings, meta = (UIMin = \"5.0\", UIMax = \"170\", ClampMin = \"0.001\", ClampMax = \"360.0\", Units = deg))"
  },
  {
    "label": "OnRegister()",
    "kind": "Method",
    "detail": "Function (PostProcessBlendWeight = InPostProcessBlendWeight ; } void)",
    "insertText": "OnRegister()"
  },
  {
    "label": "OnUpdateTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUpdateTransform(EUpdateTransformFlags UpdateTransformFlags, ETeleportType Teleport)"
  },
  {
    "label": "TickComponent()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction)"
  },
  {
    "label": "OnComponentDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnComponentDestroyed(bool bDestroyingHierarchy)"
  },
  {
    "label": "CheckForErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForErrors()"
  },
  {
    "label": "GetEditorPreviewInfo()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR bool)",
    "insertText": "GetEditorPreviewInfo(float DeltaTime, FMinimalViewInfo& ViewOut)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITORONLY_DATA void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "IsXRHeadTrackedCamera()",
    "kind": "Method",
    "detail": "Function (# endif protected : bool)",
    "insertText": "IsXRHeadTrackedCamera()"
  },
  {
    "label": "HandleXRCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleXRCamera(float DeltaTime)"
  },
  {
    "label": "AddBlendable()",
    "kind": "Method",
    "detail": "Function (PostProcessSettings .)",
    "insertText": "AddBlendable(InBlendableObject, InWeight)"
  },
  {
    "label": "RemoveBlendable()",
    "kind": "Method",
    "detail": "Function (PostProcessSettings .)",
    "insertText": "RemoveBlendable(InBlendableObject)"
  },
  {
    "label": "SetCameraMesh()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITORONLY_DATA void)",
    "insertText": "SetCameraMesh(UStaticMesh* Mesh)"
  },
  {
    "label": "ResetProxyMeshTransform()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<class UStaticMeshComponent> ProxyMeshComponent ; void)",
    "insertText": "ResetProxyMeshTransform()"
  },
  {
    "label": "UpdateProxyMeshTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateProxyMeshTransform()"
  },
  {
    "label": "UpdateDrawFrustum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDrawFrustum()"
  },
  {
    "label": "AddAdditiveOffset()",
    "kind": "Method",
    "detail": "Function (protected : float AdditiveFOVOffset ; TArray<FPostProcessSettings> ExtraPostProcessBlends ; TArray<float> ExtraPostProcessBlendWeights ; public : void)",
    "insertText": "AddAdditiveOffset(FTransform const& Transform, float FOV)"
  },
  {
    "label": "ClearAdditiveOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAdditiveOffset()"
  },
  {
    "label": "GetAdditiveOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAdditiveOffset(FTransform& OutAdditiveOffset, float& OutAdditiveFOVOffset)"
  },
  {
    "label": "AddExtraPostProcessBlend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExtraPostProcessBlend(FPostProcessSettings const& PPSettings, float PPBlendWeight)"
  },
  {
    "label": "ClearExtraPostProcessBlends()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearExtraPostProcessBlends()"
  },
  {
    "label": "GetExtraPostProcessBlends()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetExtraPostProcessBlends(TArray<FPostProcessSettings>& OutSettings, TArray<float>& OutWeights)"
  },
  {
    "label": "NotifyCameraCut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCameraCut()"
  },
  {
    "label": "RefreshVisualRepresentation()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "RefreshVisualRepresentation()"
  },
  {
    "label": "OverrideFrustumColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideFrustumColor(FColor OverrideColor)"
  },
  {
    "label": "RestoreFrustumColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreFrustumColor()"
  }
]