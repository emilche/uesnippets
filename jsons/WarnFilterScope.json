[
  {
    "label": "FFeedbackContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFeedbackContext"
  },
  {
    "label": "FFilterFeedback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFilterFeedback"
  },
  {
    "label": "FWarnFilterScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWarnFilterScope"
  },
  {
    "label": "FWarnFilterScope()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Templates / Function . h \" class FFeedbackContext ; struct FFilterFeedback ; struct FWarnFilterScope {)",
    "insertText": "FWarnFilterScope(TFunction<bool(const TCHAR* Message, ELogVerbosity::Type Verbosity, const FName& Category)> LogHandler)"
  },
  {
    "label": "FWarnFilterScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWarnFilterScope(const FWarnFilterScope&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWarnFilterScope&)",
    "insertText": "operator(const FWarnFilterScope&)"
  },
  {
    "label": "FWarnFilterScope()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FWarnFilterScope()"
  }
]