[
  {
    "label": "USparseVolumeTextureViewerComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USparseVolumeTextureViewerComponent"
  },
  {
    "label": "FTextureRenderResources",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureRenderResources"
  },
  {
    "label": "FSparseVolumeTextureViewerSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSparseVolumeTextureViewerSceneProxy"
  },
  {
    "label": "FSparseVolumeTextureViewerSceneProxy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" PrimitiveSceneProxy . h \" # include \" RendererInterface . h \" # include \" SceneViewExtension . h \" class USparseVolumeTextureViewerComponent ; namespace UE { namespace SVT { class FTextureRenderResources ; } } class FSparseVolumeTextureViewerSceneProxy : public FPrimitiveSceneProxy { public :)",
    "insertText": "FSparseVolumeTextureViewerSceneProxy(const USparseVolumeTextureViewerComponent* InComponent, FName ResourceName = NAME_None)"
  },
  {
    "label": "FSparseVolumeTextureViewerSceneProxy()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSparseVolumeTextureViewerSceneProxy()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (const UE::SVT::FTextureRenderResources* TextureRenderResources ; FTransform GlobalTransform ; FTransform FrameTransform ; FVector3f VolumeResolution ; int32 MipLevel ; uint32 ComponentToVisualize ; float Extinction ; float VoxelSizeFactor ; bool bPivotAtCentroid ; protected : SIZE_T)",
    "insertText": "GetTypeHash()"
  },
  {
    "label": "CreateRenderThreadResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRenderThreadResources(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "DestroyRenderThreadResources()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "DestroyRenderThreadResources()"
  },
  {
    "label": "GetDynamicMeshElements()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "GetDynamicMeshElements(const TArray<const FSceneView*>& Views, const FSceneViewFamily& ViewFamily, uint32 VisibilityMap, FMeshElementCollector& Collector)"
  },
  {
    "label": "GetViewRelevance()",
    "kind": "Method",
    "detail": "Function (FPrimitiveViewRelevance)",
    "insertText": "GetViewRelevance(const FSceneView* View)"
  },
  {
    "label": "GetMemoryFootprint()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetMemoryFootprint()"
  }
]