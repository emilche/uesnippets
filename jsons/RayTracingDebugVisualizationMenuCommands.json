[
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "UNREALED_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNREALED_API"
  },
  {
    "label": "FRayTracingDebugVisualizationRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingDebugVisualizationRecord"
  },
  {
    "label": "FRayTracingDebugVisualizationRecord()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" UObject / NameTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Framework / Commands / UICommandInfo . h \" # include \" Framework / MultiBox / MultiBoxBuilder . h \" # include \" Framework / Commands / Commands . h \" class FEditorViewportClient ; class FRayTracingDebugVisualizationMenuCommands : public TCommands<FRayTracingDebugVisualizationMenuCommands> { public : struct FRayTracingDebugVisualizationRecord { uint32 Index ; FName Name ; TSharedPtr<FUICommandInfo> Command ;)",
    "insertText": "FRayTracingDebugVisualizationRecord() : Index(0), Name(), Command()"
  },
  {
    "label": "FRayTracingDebugVisualizationMenuCommands()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "FRayTracingDebugVisualizationMenuCommands()"
  },
  {
    "label": "BuildVisualisationSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildVisualisationSubMenu(FMenuBuilder& Menu)"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCommands()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands(FUICommandList& CommandList, const TSharedPtr<FEditorViewportClient>& Client)"
  },
  {
    "label": "DebugModeShouldBeTonemapped()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DebugModeShouldBeTonemapped(const FName& RayTracingDebugModeName)"
  },
  {
    "label": "BuildCommandMap()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BuildCommandMap()"
  },
  {
    "label": "CreateRayTracingDebugVisualizationCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRayTracingDebugVisualizationCommands()"
  },
  {
    "label": "AddRayTracingDebugVisualizationCommandsToMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRayTracingDebugVisualizationCommandsToMenu(FMenuBuilder& menu)"
  },
  {
    "label": "ChangeRayTracingDebugVisualizationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeRayTracingDebugVisualizationMode(TWeakPtr<FEditorViewportClient> WeakClient, FName InName)"
  },
  {
    "label": "IsRayTracingDebugVisualizationModeSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRayTracingDebugVisualizationModeSelected(TWeakPtr<FEditorViewportClient> WeakClient, FName InName)"
  }
]