[
  {
    "label": "IDatasmithLightActorElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithLightActorElement"
  },
  {
    "label": "IDatasmithPointLightElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithPointLightElement"
  },
  {
    "label": "DATASMITHFACADE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHFACADE_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDatasmithFacadeActorLight()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DatasmithFacadeActor . h \" # include \" DatasmithFacadeMaterialID . h \" class IDatasmithLightActorElement ; class IDatasmithPointLightElement ; class FDatasmithFacadeActorLight : public FDatasmithFacadeActor { public : ~)",
    "insertText": "FDatasmithFacadeActorLight()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(bool bIsEnabled)"
  },
  {
    "label": "SetIntensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIntensity(double Intensity)"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetColor(uint8& OutR, uint8& OutG, uint8& OutB, uint8& OutA)"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetColor(float& OutR, float& OutG, float& OutB, float& OutA)"
  },
  {
    "label": "SetColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColor(uint8 InR, uint8 InG, uint8 InB, uint8 InA)"
  },
  {
    "label": "SetColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColor(float InR, float InG, float InB, float InA)"
  },
  {
    "label": "SetTemperature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTemperature(double Temperature)"
  },
  {
    "label": "GetUseTemperature()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseTemperature()"
  },
  {
    "label": "SetUseTemperature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseTemperature(bool bUseTemperature)"
  },
  {
    "label": "GetIesFile()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetIesFile()"
  },
  {
    "label": "WriteIESFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteIESFile(const TCHAR* InIESFileFolder, const TCHAR* InIESFileName, const TCHAR* InIESData)"
  },
  {
    "label": "SetIesFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIesFile(const TCHAR* IesFile)"
  },
  {
    "label": "GetUseIes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseIes()"
  },
  {
    "label": "SetUseIes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseIes(bool bUseIes)"
  },
  {
    "label": "SetIesBrightnessScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIesBrightnessScale(double IesBrightnessScale)"
  },
  {
    "label": "GetUseIesBrightness()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseIesBrightness()"
  },
  {
    "label": "SetUseIesBrightness()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseIesBrightness(bool bUseIesBrightness)"
  },
  {
    "label": "GetIesRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetIesRotation(float& OutX, float& OutY, float& OutZ, float& OutW)"
  },
  {
    "label": "GetIesRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetIesRotation(float& OutPitch, float& OutYaw, float& OutRoll)"
  },
  {
    "label": "SetIesRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIesRotation(float X, float Y, float Z, float W)"
  },
  {
    "label": "SetIesRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIesRotation(float Pitch, float Yaw, float Roll)"
  },
  {
    "label": "GetNewLightFunctionMaterial()",
    "kind": "Method",
    "detail": "Function (FDatasmithFacadeMaterialID*)",
    "insertText": "GetNewLightFunctionMaterial()"
  },
  {
    "label": "SetLightFunctionMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightFunctionMaterial(FDatasmithFacadeMaterialID& InMaterial)"
  },
  {
    "label": "SetLightFunctionMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightFunctionMaterial(const TCHAR* InMaterialName)"
  },
  {
    "label": "FDatasmithFacadeActorLight()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeActorLight(const TSharedRef<IDatasmithLightActorElement>& InInternalActor)"
  },
  {
    "label": "GetDatasmithLightActorElement()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDatasmithLightActorElement>)",
    "insertText": "GetDatasmithLightActorElement()"
  },
  {
    "label": "FDatasmithFacadePointLight()",
    "kind": "Method",
    "detail": "Function (} ; class FDatasmithFacadePointLight : public FDatasmithFacadeActorLight { public : enum class EPointLightIntensityUnit { Unitless,Candelas,Lumens } ;)",
    "insertText": "FDatasmithFacadePointLight(const TCHAR* InElementName)"
  },
  {
    "label": "FDatasmithFacadePointLight()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDatasmithFacadePointLight()"
  },
  {
    "label": "SetIntensityUnits()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetIntensityUnits(EPointLightIntensityUnit InUnits)"
  },
  {
    "label": "GetIntensityUnits()",
    "kind": "Method",
    "detail": "Function (EPointLightIntensityUnit)",
    "insertText": "GetIntensityUnits()"
  },
  {
    "label": "GetSourceRadius()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetSourceRadius()"
  },
  {
    "label": "SetSourceRadius()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceRadius(float SourceRadius)"
  },
  {
    "label": "GetSourceLength()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetSourceLength()"
  },
  {
    "label": "SetSourceLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceLength(float SourceLength)"
  },
  {
    "label": "GetAttenuationRadius()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAttenuationRadius()"
  },
  {
    "label": "SetAttenuationRadius()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAttenuationRadius(float AttenuationRadius)"
  },
  {
    "label": "FDatasmithFacadePointLight()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadePointLight(const TSharedRef<IDatasmithPointLightElement>& InInternalActor)"
  },
  {
    "label": "GetDatasmithPointLightElement()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<IDatasmithPointLightElement>)",
    "insertText": "GetDatasmithPointLightElement()"
  },
  {
    "label": "FDatasmithFacadeSpotLight()",
    "kind": "Method",
    "detail": "Function (} ; class FDatasmithFacadeSpotLight : public FDatasmithFacadePointLight { public :)",
    "insertText": "FDatasmithFacadeSpotLight(const TCHAR* InElementName)"
  },
  {
    "label": "FDatasmithFacadeSpotLight()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDatasmithFacadeSpotLight()"
  },
  {
    "label": "GetInnerConeAngle()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetInnerConeAngle()"
  },
  {
    "label": "SetInnerConeAngle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInnerConeAngle(float InnerConeAngle)"
  },
  {
    "label": "GetOuterConeAngle()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetOuterConeAngle()"
  },
  {
    "label": "SetOuterConeAngle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOuterConeAngle(float OuterConeAngle)"
  },
  {
    "label": "FDatasmithFacadeSpotLight()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeSpotLight(const TSharedRef<IDatasmithSpotLightElement>& InInternalActor)"
  },
  {
    "label": "GetDatasmithSpotLightElement()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<IDatasmithSpotLightElement>)",
    "insertText": "GetDatasmithSpotLightElement()"
  },
  {
    "label": "FDatasmithFacadeDirectionalLight()",
    "kind": "Method",
    "detail": "Function (} ; class FDatasmithFacadeDirectionalLight : public FDatasmithFacadeActorLight { public :)",
    "insertText": "FDatasmithFacadeDirectionalLight(const TCHAR* InElementName)"
  },
  {
    "label": "FDatasmithFacadeDirectionalLight()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDatasmithFacadeDirectionalLight()"
  },
  {
    "label": "FDatasmithFacadeDirectionalLight()",
    "kind": "Method",
    "detail": "Function (} # ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeDirectionalLight(const TSharedRef<IDatasmithDirectionalLightElement>& InInternalActor)"
  },
  {
    "label": "FDatasmithFacadeAreaLight()",
    "kind": "Method",
    "detail": "Function (} ; class FDatasmithFacadeAreaLight : public FDatasmithFacadeSpotLight { public :)",
    "insertText": "FDatasmithFacadeAreaLight(const TCHAR* InElementName)"
  },
  {
    "label": "FDatasmithFacadeAreaLight()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDatasmithFacadeAreaLight()"
  },
  {
    "label": "GetLightShape()",
    "kind": "Method",
    "detail": "Function (} enum class EAreaLightShape : uint8 { Rectangle,Disc,Sphere,Cylinder,None } ; enum class EAreaLightType { Point,Spot,IES_DEPRECATED,Rect } ; EAreaLightShape)",
    "insertText": "GetLightShape()"
  },
  {
    "label": "SetLightShape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightShape(EAreaLightShape Shape)"
  },
  {
    "label": "SetLightType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightType(EAreaLightType LightType)"
  },
  {
    "label": "GetLightType()",
    "kind": "Method",
    "detail": "Function (EAreaLightType)",
    "insertText": "GetLightType()"
  },
  {
    "label": "SetWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWidth(float InWidth)"
  },
  {
    "label": "GetWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetWidth()"
  },
  {
    "label": "SetLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLength(float InLength)"
  },
  {
    "label": "GetLength()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetLength()"
  },
  {
    "label": "FDatasmithFacadeAreaLight()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeAreaLight(const TSharedRef<IDatasmithAreaLightElement>& InInternalActor)"
  },
  {
    "label": "GetDatasmithAreaLightElement()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDatasmithAreaLightElement>)",
    "insertText": "GetDatasmithAreaLightElement()"
  },
  {
    "label": "FDatasmithFacadeLightmassPortal()",
    "kind": "Method",
    "detail": "Function (} ; class FDatasmithFacadeLightmassPortal : public FDatasmithFacadePointLight { public :)",
    "insertText": "FDatasmithFacadeLightmassPortal(const TCHAR* InElementName)"
  },
  {
    "label": "FDatasmithFacadeLightmassPortal()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDatasmithFacadeLightmassPortal()"
  },
  {
    "label": "FDatasmithFacadeLightmassPortal()",
    "kind": "Method",
    "detail": "Function (} # ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeLightmassPortal(const TSharedRef<IDatasmithLightmassPortalElement>& InInternalActor)"
  }
]