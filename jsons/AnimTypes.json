[
  {
    "label": "FMarkerPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarkerPair"
  },
  {
    "label": "FMarkerSyncAnimPosition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarkerSyncAnimPosition"
  },
  {
    "label": "FPassedMarker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPassedMarker"
  },
  {
    "label": "FMemoryReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryReader"
  },
  {
    "label": "FMemoryWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryWriter"
  },
  {
    "label": "UMirrorDataTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMirrorDataTable"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EBoneAxis",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBoneAxis"
  },
  {
    "label": "EBoneControlSpace",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBoneControlSpace"
  },
  {
    "label": "EBoneRotationSource",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBoneRotationSource"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FPerBoneBlendWeight",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerBoneBlendWeight"
  },
  {
    "label": "FPerBoneBlendWeights",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerBoneBlendWeights"
  },
  {
    "label": "FGraphTraversalCounter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphTraversalCounter"
  },
  {
    "label": "FAnimNotifyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyEvent"
  },
  {
    "label": "UAnimNotify",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimNotify"
  },
  {
    "label": "UAnimNotifyState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimNotifyState"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FAnimSyncMarker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimSyncMarker"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FAnimNotifyTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyTrack"
  },
  {
    "label": "EAdditiveAnimationType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAdditiveAnimationType"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FSlotNodeWeightInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlotNodeWeightInfo"
  },
  {
    "label": "FMarkerSyncData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarkerSyncData"
  },
  {
    "label": "FAnimWeight",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimWeight"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAnimKeyHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimKeyHelper"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FAxisOption",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAxisOption"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FTrackToSkeletonMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrackToSkeletonMap"
  },
  {
    "label": "FRawAnimSequenceTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRawAnimSequenceTrack"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "URawAnimSequenceTrackExtensions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URawAnimSequenceTrackExtensions"
  },
  {
    "label": "FBoneData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBoneData"
  },
  {
    "label": "GetTriggerTimeOffsetForType()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTriggerTimeOffsetForType(EAnimEventTriggerOffsets::Type OffsetType)"
  },
  {
    "label": "IsSynchronized_Counter()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsSynchronized_Counter(InMasterCounter)"
  },
  {
    "label": "WasSynchronizedCounter()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "WasSynchronizedCounter(InMasterCounter)"
  },
  {
    "label": "TestCounter()",
    "kind": "Method",
    "detail": "Function (FGraphTraversalCounter)",
    "insertText": "TestCounter(*this)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "RefreshTriggerOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshTriggerOffset(EAnimEventTriggerOffsets::Type PredictedOffsetType)"
  },
  {
    "label": "RefreshEndTriggerOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshEndTriggerOffset(EAnimEventTriggerOffsets::Type PredictedOffsetType)"
  },
  {
    "label": "SetDuration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDuration(float NewDuration)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "CollectUniqueNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectUniqueNames()"
  },
  {
    "label": "CollectMarkersInRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectMarkersInRange(float PrevPosition, float NewPosition, TArray<FPassedMarker>& OutMarkersPassedThisTick, float TotalDeltaMove)"
  },
  {
    "label": "GetAxisVector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetAxisVector(InAxis, FVector::ForwardVector)"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVector(FloatKey)"
  },
  {
    "label": "FQuat()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FQuat(FloatKey)"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVector(FloatKey)"
  },
  {
    "label": "Guid()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "Guid(Hash[0] ^ Hash[4], Hash[1], Hash[2], Hash[3])"
  },
  {
    "label": "DebugLogArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugLogArray(const TArray<FRawAnimSequenceTrack>& RawData)"
  }
]