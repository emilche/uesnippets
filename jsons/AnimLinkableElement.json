[
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "FAnimSegment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimSegment"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FAnimLinkableElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimLinkableElement"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" AnimLinkableElement . generated . h \" class UAnimMontage ; class UAnimSequenceBase ; struct FAnimSegment ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Absolute,Relative,Proportional } ; })",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FAnimLinkableElement() : LinkedMontage(nullptr) , SlotIndex(0) , SegmentIndex(INDEX_NONE) , LinkMethod(EAnimLinkMethod::Absolute) , CachedLinkMethod(LinkMethod) , SegmentBeginTime(0.f) , SegmentLength(0.f) , LinkValue(0.f) , LinkedSequence(nullptr)"
  },
  {
    "label": "FAnimLinkableElement()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FAnimLinkableElement()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Update()"
  },
  {
    "label": "Link()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Link(UAnimSequenceBase* AnimSequenceBase, float AbsTime, int32 InSlotIndex = 0)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "OnChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChanged(float NewMontageTime)"
  },
  {
    "label": "GetTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTime(EAnimLinkMethod::Type ReferenceFrame = EAnimLinkMethod::Absolute)"
  },
  {
    "label": "SetTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTime(float NewTime, EAnimLinkMethod::Type ReferenceFrame = EAnimLinkMethod::Absolute)"
  },
  {
    "label": "GetLinkedSequence()",
    "kind": "Method",
    "detail": "Function (const UAnimSequenceBase*)",
    "insertText": "GetLinkedSequence()"
  },
  {
    "label": "ChangeSlotIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeSlotIndex(int32 NewSlotIndex)"
  },
  {
    "label": "GetLinkMethod()",
    "kind": "Method",
    "detail": "Function (EAnimLinkMethod::Type)",
    "insertText": "GetLinkMethod()"
  },
  {
    "label": "ConditionalRelink()",
    "kind": "Method",
    "detail": "Function (SegmentIndex = NewSegmentIndex ; } bool)",
    "insertText": "ConditionalRelink()"
  },
  {
    "label": "RefreshSegmentOnLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSegmentOnLoad()"
  },
  {
    "label": "GetSegmentAtCurrentTime()",
    "kind": "Method",
    "detail": "Function (protected : FAnimSegment*)",
    "insertText": "GetSegmentAtCurrentTime()"
  },
  {
    "label": "GetTimeFromAbsolute()",
    "kind": "Method",
    "detail": "Function (private : float)",
    "insertText": "GetTimeFromAbsolute(EAnimLinkMethod::Type ReferenceFrame)"
  },
  {
    "label": "GetTimeFromRelative()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTimeFromRelative(EAnimLinkMethod::Type ReferenceFrame)"
  },
  {
    "label": "GetTimeFromProportional()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTimeFromProportional(EAnimLinkMethod::Type ReferenceFrame)"
  },
  {
    "label": "SetTimeFromAbsolute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeFromAbsolute(float NewTime, EAnimLinkMethod::Type ReferenceFrame)"
  },
  {
    "label": "SetTimeFromRelative()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeFromRelative(float NewTime, EAnimLinkMethod::Type ReferenceFrame)"
  },
  {
    "label": "SetTimeFromProportional()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeFromProportional(float NewTime, EAnimLinkMethod::Type ReferenceFrame)"
  },
  {
    "label": "SetTime_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTime_Internal(float NewTime, EAnimLinkMethod::Type ReferenceFrame = EAnimLinkMethod::Absolute)"
  }
]