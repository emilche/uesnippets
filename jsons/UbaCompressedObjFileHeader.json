[
  {
    "label": "CompressedObjFileHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CompressedObjFileHeader"
  },
  {
    "label": "CompressedObjFileHeader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UbaHash . h \" namespace uba { struct CompressedObjFileHeader { u8 Magic [ ] = { ' U ',' B ',' A ',0 x01 } ;)",
    "insertText": "CompressedObjFileHeader(const CasKey& key) : casKey(key)"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memcpy(&magic, Magic, sizeof(magic))"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (} u8 magic [)",
    "insertText": "sizeof(Magic)"
  }
]