[
  {
    "label": "dtNavMeshQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtNavMeshQuery"
  },
  {
    "label": "dtQueryFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtQueryFilter"
  },
  {
    "label": "dtQuerySpecialLinkFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtQuerySpecialLinkFilter"
  },
  {
    "label": "dtPathQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtPathQueue"
  },
  {
    "label": "PathQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PathQuery"
  },
  {
    "label": "purge()",
    "kind": "Method",
    "detail": "Function (# ifndef DETOURPATHQUEUE_H # define DETOURPATHQUEUE_H # include \" CoreMinimal . h \" # include \" Detour / DetourLargeWorldCoordinates . h \" # include \" Detour / DetourNavMesh . h \" # include \" Detour / DetourNavMeshQuery . h \" # include \" Detour / DetourStatus . h \" # include \" Templates / SharedPointer . h \" class dtNavMeshQuery ; class dtQueryFilter ; struct dtQuerySpecialLinkFilter ; const unsigned int DT_PATHQ_INVALID = 0 ; typedef unsigned int dtPathQueueRef ; class dtPathQueue { struct PathQuery { dtPathQueueRef ref ; dtReal startPos [ 3 ],endPos [ 3 ] ; dtPolyRef startRef,endRef ; dtReal costLimit ; unsigned char requireNavigableEndLocation : 1 ; dtPolyRef* path ; const dtQueryFilter* filter ; TSharedPtr<dtQuerySpecialLinkFilter> linkFilter ; int npath ; dtStatus status ; int keepAlive ; } ; const int MAX_QUEUE = 8 ; PathQuery m_queue [ MAX_QUEUE ] ; dtNavMeshQuery* m_navquery ; dtPathQueueRef m_nextHandle ; int m_maxPathSize ; int m_queueHead ; void)",
    "insertText": "purge()"
  },
  {
    "label": "dtPathQueue()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "dtPathQueue()"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "init(const int maxPathSize, const int maxSearchNodeCount, dtNavMesh* nav)"
  },
  {
    "label": "update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "update(const int maxIters)"
  },
  {
    "label": "request()",
    "kind": "Method",
    "detail": "Function (dtPathQueueRef)",
    "insertText": "request(dtPolyRef startRef, dtPolyRef endRef, const dtReal* startPos, const dtReal* endPos, const dtReal costLimit, const bool requireNavigableEndLocation, const dtQueryFilter* filter, TSharedPtr<dtQuerySpecialLinkFilter> linkFilter)"
  },
  {
    "label": "getRequestStatus()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "getRequestStatus(dtPathQueueRef ref)"
  },
  {
    "label": "getPathResult()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "getPathResult(dtPathQueueRef ref, dtPolyRef* path, int* pathSize, const int maxPath)"
  },
  {
    "label": "getNavQuery()",
    "kind": "Method",
    "detail": "Function (const dtNavMeshQuery*)",
    "insertText": "getNavQuery()"
  }
]