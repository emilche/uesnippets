[
  {
    "label": "FScopedVirtualMallocTimer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedVirtualMallocTimer"
  },
  {
    "label": "IndexType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IndexType"
  },
  {
    "label": "PlatormIndexType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PlatormIndexType"
  },
  {
    "label": "FScopedVirtualMallocTimer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" HAL / CriticalSection . h \" # include \" HAL / PlatformTime . h \" # ifndef UE_TIME_VIRTUALMALLOC # define UE_TIME_VIRTUALMALLOC 0 # endif struct FScopedVirtualMallocTimer { enum IndexType : int32 { Reserve,Commit,Combined,DeCommit,Free,Max } ; enum PlatormIndexType : int32 { OrdinaryCPU,GPU_WriteCombine,GPU_Cacheable,GPU_WriteCombineRenderTarget,PlatormIndexTypeMax } ; # if UE_TIME_VIRTUALMALLOC uint64 GTotalCycles [ IndexType::Max ] [ PlatormIndexType::PlatormIndexTypeMax ] ; uint64 GTotalCounts [ IndexType::Max ] [ PlatormIndexType::PlatormIndexTypeMax ] ; int32 Index ; int32 PlatformTypeIndex ; uint64 Cycles ;)",
    "insertText": "FScopedVirtualMallocTimer(int32 InIndex = 0, int32 InPlatformTypeIndex = 0) : Index(InIndex) , PlatformTypeIndex(InPlatformTypeIndex) , Cycles(FPlatformTime::Cycles64())"
  },
  {
    "label": "InterlockedIncrement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InterlockedIncrement((volatile int64*)&GTotalCounts[InIndex][InPlatformTypeIndex])"
  },
  {
    "label": "FScopedVirtualMallocTimer()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FScopedVirtualMallocTimer()"
  },
  {
    "label": "uint64()",
    "kind": "Method",
    "detail": "Function (uint64 Add =)",
    "insertText": "uint64(FPlatformTime::Cycles64() - Cycles)"
  },
  {
    "label": "InterlockedAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InterlockedAdd((volatile int64*)&GTotalCycles[Index][PlatformTypeIndex], Add)"
  },
  {
    "label": "UpdateStats()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateStats()"
  },
  {
    "label": "FScopedVirtualMallocTimer()",
    "kind": "Method",
    "detail": "Function (# else)",
    "insertText": "FScopedVirtualMallocTimer(int32 InIndex = 0, int32 InPlatformTypeIndex = 0)"
  }
]