[
  {
    "label": "EPixelFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPixelFormat"
  },
  {
    "label": "TextureGroup",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureGroup"
  },
  {
    "label": "TextureMipGenSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureMipGenSettings"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ETextureLossyCompressionAmount",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureLossyCompressionAmount"
  },
  {
    "label": "ECompositeTextureMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECompositeTextureMode"
  },
  {
    "label": "ETextureSourceCompressionFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureSourceCompressionFormat"
  },
  {
    "label": "ETextureSourceFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureSourceFormat"
  },
  {
    "label": "FTextureSourceFormatInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureSourceFormatInfo"
  },
  {
    "label": "TextureCompressionSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureCompressionSettings"
  },
  {
    "label": "TextureCookPlatformTilingSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureCookPlatformTilingSettings"
  },
  {
    "label": "TextureFilter",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureFilter"
  },
  {
    "label": "TextureAddress",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureAddress"
  },
  {
    "label": "ETextureMipCount",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureMipCount"
  },
  {
    "label": "ETextureCompressionQuality",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETextureCompressionQuality"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # if WITH_ENGINE # include \" TextureDefines . generated . h \" # endif enum EPixelFormat : uint8 ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TEXTUREGROUP_World)",
    "insertText": "UMETA(DisplayName=\"ini:World\"), TEXTUREGROUP_WorldNormalMap UMETA(DisplayName=\"ini:WorldNormalMap\"), TEXTUREGROUP_WorldSpecular UMETA(DisplayName=\"ini:WorldSpecular\"), TEXTUREGROUP_Character UMETA(DisplayName=\"ini:Character\"), TEXTUREGROUP_CharacterNormalMap UMETA(DisplayName=\"ini:CharacterNormalMap\"), TEXTUREGROUP_CharacterSpecular UMETA(DisplayName=\"ini:CharacterSpecular\"), TEXTUREGROUP_Weapon UMETA(DisplayName=\"ini:Weapon\"), TEXTUREGROUP_WeaponNormalMap UMETA(DisplayName=\"ini:WeaponNormalMap\"), TEXTUREGROUP_WeaponSpecular UMETA(DisplayName=\"ini:WeaponSpecular\"), TEXTUREGROUP_Vehicle UMETA(DisplayName=\"ini:Vehicle\"), TEXTUREGROUP_VehicleNormalMap UMETA(DisplayName=\"ini:VehicleNormalMap\"), TEXTUREGROUP_VehicleSpecular UMETA(DisplayName=\"ini:VehicleSpecular\"), TEXTUREGROUP_Cinematic UMETA(DisplayName=\"ini:Cinematic\"), TEXTUREGROUP_Effects UMETA(DisplayName=\"ini:Effects\"), TEXTUREGROUP_EffectsNotFiltered UMETA(DisplayName=\"ini:EffectsNotFiltered\"), TEXTUREGROUP_Skybox UMETA(DisplayName=\"ini:Skybox\"), TEXTUREGROUP_UI UMETA(DisplayName=\"ini:UI\"), TEXTUREGROUP_Lightmap UMETA(DisplayName=\"ini:Lightmap\"), TEXTUREGROUP_RenderTarget UMETA(DisplayName=\"ini:RenderTarget\"), TEXTUREGROUP_MobileFlattened UMETA(DisplayName=\"ini:MobileFlattened\"), TEXTUREGROUP_ProcBuilding_Face UMETA(DisplayName=\"ini:ProcBuilding_Face\"), TEXTUREGROUP_ProcBuilding_LightMap UMETA(DisplayName=\"ini:ProcBuilding_LightMap\"), TEXTUREGROUP_Shadowmap UMETA(DisplayName=\"ini:Shadowmap\"), TEXTUREGROUP_ColorLookupTable UMETA(DisplayName=\"ini:ColorLookupTable\"), TEXTUREGROUP_Terrain_Heightmap UMETA(DisplayName=\"ini:Terrain_Heightmap\"), TEXTUREGROUP_Terrain_Weightmap UMETA(DisplayName=\"ini:Terrain_Weightmap\"), TEXTUREGROUP_Bokeh UMETA(DisplayName=\"ini:Bokeh\"), TEXTUREGROUP_IESLightProfile UMETA(DisplayName=\"ini:IESLightProfile\"), TEXTUREGROUP_Pixels2D UMETA(DisplayName=\"ini:2D Pixels (unfiltered)\"), TEXTUREGROUP_HierarchicalLOD UMETA(DisplayName=\"ini:Hierarchical LOD\"), TEXTUREGROUP_Impostor UMETA(DisplayName=\"ini:Impostor Color\"), TEXTUREGROUP_ImpostorNormalDepth UMETA(DisplayName=\"ini:Impostor Normal and Depth\"), TEXTUREGROUP_8BitData UMETA(DisplayName=\"ini:8 Bit Data\"), TEXTUREGROUP_16BitData UMETA(DisplayName=\"ini:16 Bit Data\"), TEXTUREGROUP_Project01 UMETA(DisplayName=\"ini:Project Group 01\"), TEXTUREGROUP_Project02 UMETA(DisplayName=\"ini:Project Group 02\"), TEXTUREGROUP_Project03 UMETA(DisplayName=\"ini:Project Group 03\"), TEXTUREGROUP_Project04 UMETA(DisplayName=\"ini:Project Group 04\"), TEXTUREGROUP_Project05 UMETA(DisplayName=\"ini:Project Group 05\"), TEXTUREGROUP_Project06 UMETA(DisplayName=\"ini:Project Group 06\"), TEXTUREGROUP_Project07 UMETA(DisplayName=\"ini:Project Group 07\"), TEXTUREGROUP_Project08 UMETA(DisplayName=\"ini:Project Group 08\"), TEXTUREGROUP_Project09 UMETA(DisplayName=\"ini:Project Group 09\"), TEXTUREGROUP_Project10 UMETA(DisplayName=\"ini:Project Group 10\"), TEXTUREGROUP_Project11 UMETA(DisplayName=\"ini:Project Group 11\"), TEXTUREGROUP_Project12 UMETA(DisplayName=\"ini:Project Group 12\"), TEXTUREGROUP_Project13 UMETA(DisplayName=\"ini:Project Group 13\"), TEXTUREGROUP_Project14 UMETA(DisplayName=\"ini:Project Group 14\"), TEXTUREGROUP_Project15 UMETA(DisplayName=\"ini:Project Group 15\"), TEXTUREGROUP_Project16 UMETA(DisplayName=\"ini:Project Group 16\"), TEXTUREGROUP_Project17 UMETA(DisplayName=\"ini:Project Group 17\"), TEXTUREGROUP_Project18 UMETA(DisplayName=\"ini:Project Group 18\"), TEXTUREGROUP_Project19 UMETA(DisplayName=\"ini:Project Group 19\"), TEXTUREGROUP_Project20 UMETA(DisplayName=\"ini:Project Group 20\"), TEXTUREGROUP_Project21 UMETA(DisplayName=\"ini:Project Group 21\"), TEXTUREGROUP_Project22 UMETA(DisplayName=\"ini:Project Group 22\"), TEXTUREGROUP_Project23 UMETA(DisplayName=\"ini:Project Group 23\"), TEXTUREGROUP_Project24 UMETA(DisplayName=\"ini:Project Group 24\"), TEXTUREGROUP_Project25 UMETA(DisplayName=\"ini:Project Group 25\"), TEXTUREGROUP_Project26 UMETA(DisplayName=\"ini:Project Group 26\"), TEXTUREGROUP_Project27 UMETA(DisplayName=\"ini:Project Group 27\"), TEXTUREGROUP_Project28 UMETA(DisplayName=\"ini:Project Group 28\"), TEXTUREGROUP_Project29 UMETA(DisplayName=\"ini:Project Group 29\"), TEXTUREGROUP_Project30 UMETA(DisplayName=\"ini:Project Group 30\"), TEXTUREGROUP_Project31 UMETA(DisplayName=\"ini:Project Group 31\"), TEXTUREGROUP_Project32 UMETA(DisplayName=\"ini:Project Group 32\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TMGS_FromTextureGroup)",
    "insertText": "UMETA(DisplayName=\"FromTextureGroup\"), TMGS_SimpleAverage UMETA(DisplayName=\"SimpleAverage\"), TMGS_Sharpen0 UMETA(DisplayName=\"Sharpen0\"), TMGS_Sharpen1 UMETA(DisplayName=\"Sharpen1\"), TMGS_Sharpen2 UMETA(DisplayName=\"Sharpen2\"), TMGS_Sharpen3 UMETA(DisplayName=\"Sharpen3\"), TMGS_Sharpen4 UMETA(DisplayName=\"Sharpen4\"), TMGS_Sharpen5 UMETA(DisplayName=\"Sharpen5\"), TMGS_Sharpen6 UMETA(DisplayName=\"Sharpen6\"), TMGS_Sharpen7 UMETA(DisplayName=\"Sharpen7\"), TMGS_Sharpen8 UMETA(DisplayName=\"Sharpen8\"), TMGS_Sharpen9 UMETA(DisplayName=\"Sharpen9\"), TMGS_Sharpen10 UMETA(DisplayName=\"Sharpen10\"), TMGS_NoMipmaps UMETA(DisplayName=\"NoMipmaps\"), TMGS_LeaveExistingMips UMETA(DisplayName=\"LeaveExistingMips\"), TMGS_Blur1 UMETA(DisplayName=\"Blur1\"), TMGS_Blur2 UMETA(DisplayName=\"Blur2\"), TMGS_Blur3 UMETA(DisplayName=\"Blur3\"), TMGS_Blur4 UMETA(DisplayName=\"Blur4\"), TMGS_Blur5 UMETA(DisplayName = \"Blur5\"), TMGS_Unfiltered UMETA(DisplayName = \"Unfiltered\"), TMGS_Angular UMETA(DisplayName = \"Angular\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TLCA_Default)",
    "insertText": "UMETA(DisplayName = \"Default\"), TLCA_None UMETA(DisplayName = \"No lossy compression (Oodle RDO disabled)\"), TLCA_Lowest UMETA(DisplayName = \"Lowest (Best image quality, largest filesize) (Oodle RDO 1)\"), TLCA_Low UMETA(DisplayName = \"Low (Oodle RDO 10)\"), TLCA_Medium UMETA(DisplayName = \"Medium (Oodle RDO 20)\"), TLCA_High UMETA(DisplayName = \"High (Oodle RDO 30)\"), TLCA_Highest UMETA(DisplayName = \"Highest (Worst image quality, smallest filesize) (Oodle RDO 40)\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (CTM_Disabled)",
    "insertText": "UMETA(DisplayName=\"Disabled\"), CTM_NormalRoughnessToRed UMETA(DisplayName=\"Add Normal Roughness To Red\"), CTM_NormalRoughnessToGreen UMETA(DisplayName=\"Add Normal Roughness To Green\"), CTM_NormalRoughnessToBlue UMETA(DisplayName=\"Add Normal Roughness To Blue\"), CTM_NormalRoughnessToAlpha UMETA(DisplayName=\"Add Normal Roughness To Alpha\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TSCF_None)",
    "insertText": "UMETA(DisplayName = \"None\"), TSCF_PNG UMETA(DisplayName = \"PNG\"), TSCF_JPEG UMETA(DisplayName = \"JPEG\"), TSCF_UEJPEG UMETA(DisplayName = \"UE JPEG\"), TSCF_UEDELTA UMETA(DisplayName = \"UE Delta\")"
  },
  {
    "label": "FTextureSourceFormatInfo()",
    "kind": "Method",
    "detail": "Function (TSF_Invalid,TSF_G8,TSF_BGRA8,TSF_BGRE8,TSF_RGBA16,TSF_RGBA16F,TSF_RGBA8_DEPRECATED,TSF_RGBE8_DEPRECATED,TSF_G16,TSF_RGBA32F,TSF_R16F,TSF_R32F,TSF_MAX } ; struct FTextureSourceFormatInfo {)",
    "insertText": "FTextureSourceFormatInfo()"
  },
  {
    "label": "FTextureSourceFormatInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTextureSourceFormatInfo(ETextureSourceFormat InTextureSourceFormat, EPixelFormat InPixelFormat, const TCHAR* InName, int32 InNumComponents, int32 InBytesPerPixel)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TC_Default)",
    "insertText": "UMETA(DisplayName = \"Default (BC1 or BC3 with A)\"), TC_Normalmap UMETA(DisplayName = \"Normalmap (BC5)\"), TC_Masks UMETA(DisplayName = \"Masks (no sRGB)\"), TC_Grayscale UMETA(DisplayName = \"Grayscale (G8/16, RGB8 sRGB)\"), TC_Displacementmap UMETA(DisplayName = \"Displacementmap (G8/16)\"), TC_VectorDisplacementmap UMETA(DisplayName = \"VectorDisplacementmap (RGBA8)\"), TC_HDR UMETA(DisplayName = \"HDR (RGBA16F, no sRGB)\"), TC_EditorIcon UMETA(DisplayName = \"UserInterface2D (RGBA8)\"), TC_Alpha UMETA(DisplayName = \"Alpha (no sRGB, BC4)\"), TC_DistanceFieldFont UMETA(DisplayName = \"DistanceFieldFont (G8)\"), TC_HDR_Compressed UMETA(DisplayName = \"HDR Compressed (RGB, BC6H)\"), TC_BC7 UMETA(DisplayName = \"BC7 (RGBA)\"), TC_HalfFloat UMETA(DisplayName = \"Half Float (R16F)\"), TC_LQ UMETA(Hidden, DisplayName = \"Low Quality (BGR565/BGR555A1)\", ToolTip = \"BGR565/BGR555A1, fallback to DXT1/DXT5 on Mac platform\"), TC_EncodedReflectionCapture UMETA(Hidden), TC_SingleFloat UMETA(DisplayName = \"Single Float (R32F)\"), TC_HDR_F32 UMETA(DisplayName = \"HDR High Precision (RGBA32F)\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TSE_None = 0)",
    "insertText": "UMETA(DisplayName = \"Default\", ToolTip = \"The source encoding is not overridden.\"), TSE_Linear = 1 UMETA(DisplayName = \"Linear\", ToolTip = \"The source encoding is considered linear (before optional sRGB encoding is applied).\"), TSE_sRGB = 2 UMETA(DisplayName = \"sRGB\", ToolTip = \"sRGB source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_ST2084 = 3 UMETA(DisplayName = \"ST 2084/PQ\", ToolTip = \"SMPTE ST 2084/PQ source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_Gamma22 = 4 UMETA(DisplayName = \"Gamma 2.2\", ToolTip = \"Gamma 2.2 source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_BT1886 = 5 UMETA(DisplayName = \"BT1886/Gamma 2.4\", ToolTip = \"BT1886/Gamma 2.4 source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_Gamma26 = 6 UMETA(DisplayName = \"Gamma 2.6\", ToolTip = \"Gamma 2.6 source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_Cineon = 7 UMETA(DisplayName = \"Cineon\", ToolTip = \"Cineon source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_REDLog = 8 UMETA(DisplayName = \"REDLog\", ToolTip = \"RED Log source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_REDLog3G10 = 9 UMETA(DisplayName = \"REDLog3G10\", ToolTip = \"RED Log3G10 source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_SLog1 = 10 UMETA(DisplayName = \"SLog1\", ToolTip = \"Sony SLog1 source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_SLog2 = 11 UMETA(DisplayName = \"SLog2\", ToolTip = \"Sony SLog2 source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_SLog3 = 12 UMETA(DisplayName = \"SLog3\", ToolTip = \"Sony SLog3 source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_AlexaV3LogC = 13 UMETA(DisplayName = \"AlexaV3LogC\", ToolTip = \"ARRI Alexa V3 LogC source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_CanonLog = 14 UMETA(DisplayName = \"CanonLog\", ToolTip = \"Canon Log source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_ProTune = 15 UMETA(DisplayName = \"ProTune\", ToolTip = \"GoPro ProTune source encoding to be linearized (before optional sRGB encoding is applied).\"), TSE_VLog = 16 UMETA(DisplayName = \"V-Log\", ToolTip = \"Panasonic V-Log source encoding to be linearized (before optional sRGB encoding is applied).\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TCS_None = 0)",
    "insertText": "UMETA(DisplayName = \"None\", ToolTip = \"No explicit color space definition.\"), TCS_sRGB = 1 UMETA(DisplayName = \"sRGB / Rec709\", ToolTip = \"sRGB / Rec709 (BT.709) color primaries, with D65 white point.\"), TCS_Rec2020 = 2 UMETA(DisplayName = \"Rec2020\", ToolTip = \"Rec2020 (BT.2020) primaries with D65 white point.\"), TCS_ACESAP0 = 3 UMETA(DIsplayName = \"ACES AP0\", ToolTip = \"ACES AP0 wide gamut primaries, with D60 white point.\"), TCS_ACESAP1 = 4 UMETA(DIsplayName = \"ACES AP1 / ACEScg\", ToolTip = \"ACES AP1 / ACEScg wide gamut primaries, with D60 white point.\"), TCS_P3DCI = 5 UMETA(DisplayName = \"P3DCI\", ToolTip = \"P3 (Theater) primaries, with DCI Calibration white point.\"), TCS_P3D65 = 6 UMETA(DisplayName = \"P3D65\", ToolTip = \"P3 (Display) primaries, with D65 white point.\"), TCS_REDWideGamut = 7 UMETA(DisplayName = \"RED Wide Gamut\", ToolTip = \"RED Wide Gamut primaries, with D65 white point.\"), TCS_SonySGamut3 = 8 UMETA(DisplayName = \"Sony S-Gamut3\", ToolTip = \"Sony S-Gamut/S-Gamut3 primaries, with D65 white point.\"), TCS_SonySGamut3Cine = 9 UMETA(DisplayName = \"Sony S-Gamut3 Cine\", ToolTip = \"Sony S-Gamut3 Cine primaries, with D65 white point.\"), TCS_AlexaWideGamut = 10 UMETA(DisplayName = \"Alexa Wide Gamut\", ToolTip = \"Alexa Wide Gamut primaries, with D65 white point.\"), TCS_CanonCinemaGamut = 11 UMETA(DisplayName = \"Canon Cinema Gamut\", ToolTip = \"Canon Cinema Gamut primaries, with D65 white point.\"), TCS_GoProProtuneNative = 12 UMETA(DisplayName = \"GoPro Protune Native\", ToolTip = \"GoPro Protune Native primaries, with D65 white point.\"), TCS_PanasonicVGamut = 13 UMETA(DisplayName = \"Panasonic V-Gamut\", ToolTip = \"Panasonic V-Gamut primaries, with D65 white point.\"), TCS_Custom = 99 UMETA(DisplayName = \"Custom\", ToolTip = \"User defined color space and white point.\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TCPTS_FromTextureGroup)",
    "insertText": "UMETA(DisplayName = \"FromTextureGroup\"), TCPTS_Tile UMETA(DisplayName = \"Tile during cook\"), TCPTS_DoNotTile UMETA(DisplayName = \"Do not tile during cook\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TCAM_None = 0)",
    "insertText": "UMETA(DisplayName = \"None\", ToolTip = \"No chromatic adaptation is applied.\"), TCAM_Bradford = 1 UMETA(DisplayName = \"Bradford\", ToolTip = \"Chromatic adaptation is applied using the Bradford method.\"), TCAM_CAT02 = 2 UMETA(DisplayName = \"CAT02\", ToolTip = \"Chromatic adaptation is applied using the CAT02 method.\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TF_Nearest)",
    "insertText": "UMETA(DisplayName=\"Nearest\"), TF_Bilinear UMETA(DisplayName=\"Bi-linear\"), TF_Trilinear UMETA(DisplayName=\"Tri-linear\"), TF_Default UMETA(DisplayName=\"Default (from Texture Group)\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TA_Wrap)",
    "insertText": "UMETA(DisplayName=\"Wrap\"), TA_Clamp UMETA(DisplayName=\"Clamp\"), TA_Mirror UMETA(DisplayName=\"Mirror\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (TCQ_Default = 0)",
    "insertText": "UMETA(DisplayName=\"Default\"), TCQ_Lowest = 1 UMETA(DisplayName=\"Lowest (ASTC 12x12)\"), TCQ_Low = 2 UMETA(DisplayName=\"Low (ASTC 10x10)\"), TCQ_Medium = 3 UMETA(DisplayName=\"Medium (ASTC 8x8)\"), TCQ_High= 4 UMETA(DisplayName=\"High (ASTC 6x6)\"), TCQ_Highest = 5 UMETA(DisplayName=\"Highest (ASTC 4x4)\")"
  },
  {
    "label": "IsHDR()",
    "kind": "Method",
    "detail": "Function (namespace UE { namespace TextureDefines { bool)",
    "insertText": "IsHDR(ETextureSourceFormat Format)"
  },
  {
    "label": "IsHDR()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsHDR(TextureCompressionSettings CompressionSettings)"
  },
  {
    "label": "ShouldUseGreyScaleEditorVisualization()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldUseGreyScaleEditorVisualization(TextureCompressionSettings CompressionSettings)"
  }
]