[
  {
    "label": "SExpandableButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SExpandableButton"
  },
  {
    "label": "SLATE_DECLARE_WIDGET_API()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Framework / SlateDelegates . h \" # include \" Widgets / Layout / SBorder . h \" class SExpandableButton : public SBorder {)",
    "insertText": "SLATE_DECLARE_WIDGET_API(SExpandableButton, SBorder, SLATE_API) public: SLATE_BEGIN_ARGS( SExpandableButton ) : _IsExpanded( true)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FText, CollapsedText ) SLATE_ATTRIBUTE( FText, ExpandedText ) SLATE_NAMED_SLOT( FArguments, CollapsedButtonContent ) SLATE_NAMED_SLOT( FArguments, ExpandedButtonContent ) SLATE_NAMED_SLOT( FArguments, ExpandedChildContent ) SLATE_EVENT( FOnClicked, OnExpansionClicked ) SLATE_EVENT( FOnClicked, OnCloseClicked ) SLATE_ATTRIBUTE( bool, IsExpanded ) SLATE_END_ARGS() SLATE_API SExpandableButton()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetCollapsedVisibility()",
    "kind": "Method",
    "detail": "Function (protected : EVisibility)",
    "insertText": "GetCollapsedVisibility()"
  },
  {
    "label": "GetExpandedVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetExpandedVisibility()"
  },
  {
    "label": "UpdateVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisibility()"
  }
]