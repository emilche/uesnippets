[
  {
    "label": "UInputSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputSettings"
  },
  {
    "label": "FInputAxisConfigEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAxisConfigEntry"
  },
  {
    "label": "FInputActionKeyMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputActionKeyMapping"
  },
  {
    "label": "FInputAxisKeyMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAxisKeyMapping"
  },
  {
    "label": "FInputActionSpeechMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputActionSpeechMapping"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "FPropertyChangedChainEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedChainEvent"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FHardwareDeviceIdentifier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHardwareDeviceIdentifier"
  },
  {
    "label": "UInputPlatformSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputPlatformSettings"
  },
  {
    "label": "RemoveInvalidKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInvalidKeys()"
  },
  {
    "label": "AddActionMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActionMapping(const FInputActionKeyMapping& KeyMapping, bool bForceRebuildKeymaps = true)"
  },
  {
    "label": "RemoveActionMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActionMapping(const FInputActionKeyMapping& KeyMapping, bool bForceRebuildKeymaps = true)"
  },
  {
    "label": "AddAxisMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAxisMapping(const FInputAxisKeyMapping& KeyMapping, bool bForceRebuildKeymaps = true)"
  },
  {
    "label": "RemoveAxisMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAxisMapping(const FInputAxisKeyMapping& KeyMapping, bool bForceRebuildKeymaps = true)"
  },
  {
    "label": "SaveKeyMappings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveKeyMappings()"
  },
  {
    "label": "ForceRebuildKeymaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRebuildKeymaps()"
  },
  {
    "label": "GetUniqueActionName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetUniqueActionName(const FName BaseActionMappingName)"
  },
  {
    "label": "GetUniqueAxisName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetUniqueAxisName(const FName BaseAxisMappingName)"
  },
  {
    "label": "AddActionMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActionMapping(FInputActionKeyMapping& NewMapping)"
  },
  {
    "label": "AddAxisMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAxisMapping(FInputAxisKeyMapping& NewMapping)"
  },
  {
    "label": "DoesActionExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesActionExist(const FName InActionName)"
  },
  {
    "label": "DoesAxisExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesAxisExist(const FName InAxisName)"
  },
  {
    "label": "DoesSpeechExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesSpeechExist(const FName InSpeechName)"
  },
  {
    "label": "GetActionMappingsPropertyName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetActionMappingsPropertyName()"
  },
  {
    "label": "GetAxisMappingsPropertyName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetAxisMappingsPropertyName()"
  },
  {
    "label": "SetDefaultPlayerInputClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultPlayerInputClass(TSubclassOf<UPlayerInput> NewDefaultPlayerInputClass)"
  },
  {
    "label": "SetDefaultInputComponentClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultInputComponentClass(TSubclassOf<UInputComponent> NewDefaultInputComponentClass)"
  },
  {
    "label": "PopulateAxisConfigs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateAxisConfigs()"
  },
  {
    "label": "AddInternationalConsoleKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInternationalConsoleKey()"
  },
  {
    "label": "FHardwareDeviceIdentifier()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FHardwareDeviceIdentifier()"
  },
  {
    "label": "FHardwareDeviceIdentifier()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FHardwareDeviceIdentifier(\n\t\tconst FName InClassName,\n\t\tconst FName InHardwareDeviceIdentifier,\n\t\tEHardwareDevicePrimaryType InPrimaryType = EHardwareDevicePrimaryType::Unspecified,\n\t\tEHardwareDeviceSupportedFeatures::Type Flags = EHardwareDeviceSupportedFeatures::Unspecified)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FHardwareDeviceIdentifier& InDevice)"
  },
  {
    "label": "UInputPlatformSettings()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "UInputPlatformSettings()"
  },
  {
    "label": "AddHardwareDeviceIdentifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHardwareDeviceIdentifier(const FHardwareDeviceIdentifier& InHardwareDevice)"
  }
]