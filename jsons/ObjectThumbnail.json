[
  {
    "label": "FThumbnailCompressionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThumbnailCompressionInterface"
  },
  {
    "label": "FObjectThumbnail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectThumbnail"
  },
  {
    "label": "FObjectFullNameAndThumbnail",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectFullNameAndThumbnail"
  },
  {
    "label": "CompressImage()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" CoreTypes . h \" # include \" Serialization / Archive . h \" # include \" Serialization / StructuredArchive . h \" # include \" UObject / NameTypes . h \" class FThumbnailCompressionInterface { public : bool)",
    "insertText": "CompressImage(const TArray< uint8 >& InUncompressedData, const int32 InWidth, const int32 InHeight, TArray< uint8 >& OutCompressedData)"
  },
  {
    "label": "DecompressImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DecompressImage(const TArray< uint8 >& InCompressedData, const int32 InWidth, const int32 InHeight, TArray< uint8 >& OutUncompressedData)"
  },
  {
    "label": "GetThumbnailCompressorName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetThumbnailCompressorName()"
  },
  {
    "label": "IsLosslessCompression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLosslessCompression()"
  },
  {
    "label": "SetThumbnailCompressors()",
    "kind": "Method",
    "detail": "Function (} ; class FObjectThumbnail { public : void)",
    "insertText": "SetThumbnailCompressors(FThumbnailCompressionInterface* InPNGThumbnailCompressor, FThumbnailCompressionInterface* InJPEGThumbnailCompressor)"
  },
  {
    "label": "FObjectThumbnail()",
    "kind": "Method",
    "detail": "Function (PNGThumbnailCompressor = InPNGThumbnailCompressor ; JPEGThumbnailCompressor = InJPEGThumbnailCompressor ; } private : FThumbnailCompressionInterface* PNGThumbnailCompressor ; FThumbnailCompressionInterface* JPEGThumbnailCompressor ; public :)",
    "insertText": "FObjectThumbnail()"
  },
  {
    "label": "GetImageWidth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetImageWidth()"
  },
  {
    "label": "SetImageSize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetImageSize(int32 InWidth, int32 InHeight)"
  },
  {
    "label": "IsLoadedFromDisk()",
    "kind": "Method",
    "detail": "Function (ImageWidth = InWidth ; ImageHeight = InHeight ; } bool)",
    "insertText": "IsLoadedFromDisk(void)"
  },
  {
    "label": "IsDirty()",
    "kind": "Method",
    "detail": "Function (bCreatedAfterCustomThumbForSharedTypesEnabled = true ; } bool)",
    "insertText": "IsDirty()"
  },
  {
    "label": "AccessImageData()",
    "kind": "Method",
    "detail": "Function (bIsDirty = true ; } TArray<uint8>&)",
    "insertText": "AccessImageData()"
  },
  {
    "label": "ChooseNewCompressor()",
    "kind": "Method",
    "detail": "Function (FThumbnailCompressionInterface*)",
    "insertText": "ChooseNewCompressor()"
  },
  {
    "label": "GetUncompressedImageData()",
    "kind": "Method",
    "detail": "Function (const TArray<uint8>&)",
    "insertText": "GetUncompressedImageData()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "CompressImageData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompressImageData()"
  },
  {
    "label": "DecompressImageData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecompressImageData()"
  },
  {
    "label": "CountBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountBytes(FArchive& Ar)"
  },
  {
    "label": "CountImageBytes_Compressed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountImageBytes_Compressed(FArchive& Ar)"
  },
  {
    "label": "CountImageBytes_Uncompressed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountImageBytes_Uncompressed(FArchive& Ar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FObjectThumbnail& Thumb)"
  },
  {
    "label": "CountBytes()",
    "kind": "Method",
    "detail": "Function (Thumb .)",
    "insertText": "CountBytes(Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} else { Thumb .)",
    "insertText": "Serialize(Ar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} return Ar ; } FArchive&)",
    "insertText": "operator(FArchive& Ar, const FObjectThumbnail& Thumb)"
  },
  {
    "label": "FObjectFullNameAndThumbnail()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FObjectFullNameAndThumbnail(const FName InFullName, const FObjectThumbnail* InThumbnail ) : ObjectFullName( InFullName ), ObjectThumbnail( InThumbnail ), FileOffset( 0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FObjectFullNameAndThumbnail& NameThumbPair)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} else { Ar<<NameThumbPair . ObjectFullName<<NameThumbPair . FileOffset ; } return Ar ; } FArchive&)",
    "insertText": "operator(FArchive& Ar, const FObjectFullNameAndThumbnail& NameThumbPair)"
  }
]