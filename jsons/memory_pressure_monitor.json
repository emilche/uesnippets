[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_MEMORY_MEMORY_PRESSURE_MONITOR_H_ # define BASE_MEMORY_MEMORY_PRESSURE_MONITOR_H_ # include \" base / base_export . h \" # include \" base / callback . h \" # include \" base / memory / memory_pressure_listener . h \" # include \" base / time / time . h \" namespace base { class BASE_EXPORT MemoryPressureMonitor { public : using MemoryPressureLevel = base::MemoryPressureListener::MemoryPressureLevel ; using DispatchCallback = base::RepeatingCallback<)",
    "insertText": "void(MemoryPressureLevel level)"
  },
  {
    "label": "MemoryPressureMonitor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MemoryPressureMonitor(const MemoryPressureMonitor&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MemoryPressureMonitor&)",
    "insertText": "operator(const MemoryPressureMonitor&)"
  },
  {
    "label": "MemoryPressureMonitor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "MemoryPressureMonitor()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (MemoryPressureMonitor*)",
    "insertText": "Get()"
  },
  {
    "label": "GetCurrentPressureLevel()",
    "kind": "Method",
    "detail": "Function (MemoryPressureLevel)",
    "insertText": "GetCurrentPressureLevel()"
  },
  {
    "label": "SetDispatchCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDispatchCallback(const DispatchCallback& callback)"
  }
]