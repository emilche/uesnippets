[
  {
    "label": "WatchableIOMessagePumpPosix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WatchableIOMessagePumpPosix"
  },
  {
    "label": "FdWatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FdWatcher"
  },
  {
    "label": "FdWatchControllerInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FdWatchControllerInterface"
  },
  {
    "label": "Mode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Mode"
  },
  {
    "label": "OnFileCanReadWithoutBlocking()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_MESSAGE_LOOP_WATCHABLE_IO_MESSAGE_PUMP_POSIX_H_ # define BASE_MESSAGE_LOOP_WATCHABLE_IO_MESSAGE_PUMP_POSIX_H_ # include \" base / location . h \" namespace base { class WatchableIOMessagePumpPosix { public : class FdWatcher { public : void)",
    "insertText": "OnFileCanReadWithoutBlocking(int fd)"
  },
  {
    "label": "OnFileCanWriteWithoutBlocking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFileCanWriteWithoutBlocking(int fd)"
  },
  {
    "label": "FdWatcher()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "FdWatcher()"
  },
  {
    "label": "FdWatchControllerInterface()",
    "kind": "Method",
    "detail": "Function (} ; class FdWatchControllerInterface { public :)",
    "insertText": "FdWatchControllerInterface(const Location& from_here)"
  },
  {
    "label": "FdWatchControllerInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FdWatchControllerInterface(const FdWatchControllerInterface&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FdWatchControllerInterface&)",
    "insertText": "operator(const FdWatchControllerInterface&)"
  },
  {
    "label": "FdWatchControllerInterface()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FdWatchControllerInterface()"
  },
  {
    "label": "StopWatchingFileDescriptor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StopWatchingFileDescriptor()"
  },
  {
    "label": "created_from_location()",
    "kind": "Method",
    "detail": "Function (const Location&)",
    "insertText": "created_from_location()"
  }
]