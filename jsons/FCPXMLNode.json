[
  {
    "label": "FXmlNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmlNode"
  },
  {
    "label": "FFCPXMLFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLFile"
  },
  {
    "label": "FFCPXMLNodeVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLNodeVisitor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFCPXMLAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLAttribute"
  },
  {
    "label": "FFCPXMLNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLNode"
  },
  {
    "label": "FFCPXMLBasicNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLBasicNode"
  },
  {
    "label": "FFCPXMLXmemlNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLXmemlNode"
  },
  {
    "label": "FFCPXMLSequenceNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLSequenceNode"
  },
  {
    "label": "FFCPXMLVideoNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLVideoNode"
  },
  {
    "label": "FFCPXMLAudioNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLAudioNode"
  },
  {
    "label": "FFCPXMLTrackNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLTrackNode"
  },
  {
    "label": "FFCPXMLClipNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLClipNode"
  },
  {
    "label": "FFCPXMLClipItemNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLClipItemNode"
  },
  {
    "label": "FFCPXMLFileNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLFileNode"
  },
  {
    "label": "FFCPXMLAttribute()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" # include \" Templates / SharedPointer . h \" class FXmlNode ; class FFCPXMLFile ; class FFCPXMLNodeVisitor ; enum class ENodeInherit : uint8 { NoInherit,CheckInherit } ; enum class ENodeReference : uint8 { NoReferences,CheckReferences } ; class FFCPXMLAttribute { public :)",
    "insertText": "FFCPXMLAttribute(const FString& InTag, const FString& InValue) : Tag(InTag), Value(InValue)"
  },
  {
    "label": "GetTag()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetTag()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetValue()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetValue(FString& OutValue)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetValue(float& OutValue)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetValue(int32& OutValue)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetValue(bool& OutValue)"
  },
  {
    "label": "FFCPXMLNode()",
    "kind": "Method",
    "detail": "Function (private : FString Tag ; FString Value ; } ; class FFCPXMLNode : public TSharedFromThis<FFCPXMLNode> { class FFCPXMLNodeVisitor ; public :)",
    "insertText": "FFCPXMLNode(const FString InTag, TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "FFCPXMLNode()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FFCPXMLNode()"
  },
  {
    "label": "FFCPXMLNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FFCPXMLNode(const FFCPXMLNode& rhs)"
  },
  {
    "label": "CreateFFCPXMLNode()",
    "kind": "Method",
    "detail": "Function (} public : TSharedRef<FFCPXMLNode>)",
    "insertText": "CreateFFCPXMLNode(FString tag, TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFrom(FXmlNode* InNode)"
  },
  {
    "label": "GetXmlBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetXmlBuffer(const FString& Indent, FString& Output)"
  },
  {
    "label": "Accept()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Accept(FFCPXMLNodeVisitor& NodeVisitor)"
  },
  {
    "label": "VisitChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitChildren(FFCPXMLNodeVisitor& NodeVisitor, bool VisitRefNodeChildren = false)"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetContent()"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetContent(FString& OutValue)"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetContent(float& OutValue)"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetContent(int32& OutValue)"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetContent(bool& OutValue)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(const FString& InContent)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(float InContent)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(int32 InContent)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(bool InContent)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(FString(InContent))"
  },
  {
    "label": "GetChildNodes()",
    "kind": "Method",
    "detail": "Function (} const TArray<TSharedRef<FFCPXMLNode>>&)",
    "insertText": "GetChildNodes()"
  },
  {
    "label": "GetChildCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetChildCount()"
  },
  {
    "label": "AppendChildNode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AppendChildNode(TSharedRef<FFCPXMLNode> InNode)"
  },
  {
    "label": "CreateChildNode()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FFCPXMLNode>)",
    "insertText": "CreateChildNode(const FString& InTag)"
  },
  {
    "label": "GetChildValue()",
    "kind": "Method",
    "detail": "Function (template<T> bool)",
    "insertText": "GetChildValue(const FString& InElement, T& OutValue, ENodeInherit CheckInherit = ENodeInherit::CheckInherit, ENodeReference CheckRefIds = ENodeReference::CheckReferences)"
  },
  {
    "label": "GetChildSubValue()",
    "kind": "Method",
    "detail": "Function (template<T> bool)",
    "insertText": "GetChildSubValue(const FString& InElement, const FString& InSubElement, T& OutValue, ENodeInherit CheckInherit = ENodeInherit::CheckInherit, ENodeReference CheckRefIds = ENodeReference::CheckReferences)"
  },
  {
    "label": "GetChildNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetChildNode(const FString& InElement, ENodeInherit CheckInherit = ENodeInherit::CheckInherit, ENodeReference CheckRefIds = ENodeReference::CheckReferences)"
  },
  {
    "label": "GetChildNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetChildNode(const FString& InElement, const FString& InSubElement, ENodeInherit CheckInherit = ENodeInherit::CheckInherit, ENodeReference CheckRefIds = ENodeReference::CheckReferences)"
  },
  {
    "label": "AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAttribute(const FString &InTag, const FString &InValue)"
  },
  {
    "label": "GetAttributes()",
    "kind": "Method",
    "detail": "Function (const TArray<FFCPXMLAttribute>&)",
    "insertText": "GetAttributes()"
  },
  {
    "label": "GetAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAttribute(const FString& InTag, FFCPXMLAttribute& OutAttr)"
  },
  {
    "label": "GetAttributeValue()",
    "kind": "Method",
    "detail": "Function (template<T> bool)",
    "insertText": "GetAttributeValue(const FString& InTag, T& OutValue)"
  },
  {
    "label": "AddReference()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "AddReference(const FString& InElement, const FString &InId, TSharedPtr<FFCPXMLNode> InNode)"
  },
  {
    "label": "GetReference()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetReference(const FString &InElement, const FString &InId)"
  },
  {
    "label": "GetChildNodeOnly()",
    "kind": "Method",
    "detail": "Function (protected : TArray<TSharedRef<FFCPXMLNode>> Children ; TArray<FFCPXMLAttribute> Attributes ; TWeakPtr<FFCPXMLNode> Parent ; TWeakPtr<FFCPXMLFile> ContainingFile ; FString Tag ; FString Content ; private : TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetChildNodeOnly(const FString& InElement)"
  },
  {
    "label": "GetChildNodeOnly()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetChildNodeOnly(const FString& InElement, const FString& InSubElement)"
  },
  {
    "label": "GetChildNodeReference()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetChildNodeReference(const FString& InElement)"
  },
  {
    "label": "GetChildNodeReference()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetChildNodeReference(const FString& InElement, const FString& InSubElement)"
  },
  {
    "label": "GetChildNodeInherit()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetChildNodeInherit(const FString& InElement)"
  },
  {
    "label": "GetChildNodeInherit()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetChildNodeInherit(const FString& InElement, const FString& InSubElement)"
  },
  {
    "label": "GetReferenceNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetReferenceNode()"
  },
  {
    "label": "DoAccept()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoAccept(FFCPXMLNodeVisitor& NodeVisitor)"
  },
  {
    "label": "GetChildValue()",
    "kind": "Method",
    "detail": "Function (} ; template<T> bool)",
    "insertText": "GetChildValue(const FString& InElement, T& OutValue, ENodeInherit CheckInherit, ENodeReference CheckRefIds)"
  },
  {
    "label": "GetChildNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode> Node =)",
    "insertText": "GetChildNode(InElement, CheckInherit, CheckRefIds)"
  },
  {
    "label": "GetChildSubValue()",
    "kind": "Method",
    "detail": "Function (} return false ; } template<T> bool)",
    "insertText": "GetChildSubValue(const FString& InElement, const FString& InSubElement, T& OutValue, ENodeInherit CheckInherit, ENodeReference CheckRefIds)"
  },
  {
    "label": "GetChildNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode> Node =)",
    "insertText": "GetChildNode(InElement, InSubElement, CheckInherit, CheckRefIds)"
  },
  {
    "label": "FFCPXMLBasicNode()",
    "kind": "Method",
    "detail": "Function (} } return false ; } class FFCPXMLBasicNode : public FFCPXMLNode { public :)",
    "insertText": "FFCPXMLBasicNode(FString InTag, TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "FFCPXMLXmemlNode()",
    "kind": "Method",
    "detail": "Function (} ; class FFCPXMLXmemlNode : public FFCPXMLNode { public :)",
    "insertText": "FFCPXMLXmemlNode(TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "FFCPXMLSequenceNode()",
    "kind": "Method",
    "detail": "Function (} ; class FFCPXMLSequenceNode : public FFCPXMLNode { public :)",
    "insertText": "FFCPXMLSequenceNode(TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "FFCPXMLVideoNode()",
    "kind": "Method",
    "detail": "Function (} ; class FFCPXMLVideoNode : public FFCPXMLNode { public :)",
    "insertText": "FFCPXMLVideoNode(TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "FFCPXMLAudioNode()",
    "kind": "Method",
    "detail": "Function (} ; class FFCPXMLAudioNode : public FFCPXMLNode { public :)",
    "insertText": "FFCPXMLAudioNode(TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "FFCPXMLTrackNode()",
    "kind": "Method",
    "detail": "Function (} ; class FFCPXMLTrackNode : public FFCPXMLNode { public :)",
    "insertText": "FFCPXMLTrackNode(TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "FFCPXMLClipNode()",
    "kind": "Method",
    "detail": "Function (} ; class FFCPXMLClipNode : public FFCPXMLNode { public :)",
    "insertText": "FFCPXMLClipNode(TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "FFCPXMLClipItemNode()",
    "kind": "Method",
    "detail": "Function (} ; class FFCPXMLClipItemNode : public FFCPXMLNode { public :)",
    "insertText": "FFCPXMLClipItemNode(TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "FFCPXMLFileNode()",
    "kind": "Method",
    "detail": "Function (} ; class FFCPXMLFileNode : public FFCPXMLNode { public :)",
    "insertText": "FFCPXMLFileNode(TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "FFCPXMLNodeVisitor()",
    "kind": "Method",
    "detail": "Function (} ; class FFCPXMLNodeVisitor { public :)",
    "insertText": "FFCPXMLNodeVisitor()"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (} ; public : bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLBasicNode> Node)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLXmemlNode> Node)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLSequenceNode> Node)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLVideoNode> Node)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLAudioNode> Node)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLTrackNode> Node)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLClipNode> Node)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLClipItemNode> Node)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLFileNode> Node)"
  }
]