[
  {
    "label": "FXmlNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmlNode"
  },
  {
    "label": "represents",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "represents"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FFCPXMLFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLFile"
  },
  {
    "label": "FFCPXMLNodeVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLNodeVisitor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFCPXMLAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLAttribute"
  },
  {
    "label": "FFCPXMLNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLNode"
  },
  {
    "label": "FFCPXMLNodeVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLNodeVisitor"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FFCPXMLBasicNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLBasicNode"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FFCPXMLXmemlNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLXmemlNode"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FFCPXMLSequenceNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLSequenceNode"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FFCPXMLVideoNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLVideoNode"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FFCPXMLAudioNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLAudioNode"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FFCPXMLTrackNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLTrackNode"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FFCPXMLClipNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLClipNode"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FFCPXMLClipItemNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLClipItemNode"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FFCPXMLFileNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLFileNode"
  },
  {
    "label": "FFCPXMLNodeVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLNodeVisitor"
  },
  {
    "label": "CreateFFCPXMLNode()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FFCPXMLNode>)",
    "insertText": "CreateFFCPXMLNode(FString tag, TSharedPtr<FFCPXMLNode> InParent, TSharedPtr<FFCPXMLFile> InFile)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFrom(FXmlNode* InNode)"
  },
  {
    "label": "Accept()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Accept(FFCPXMLNodeVisitor& NodeVisitor)"
  },
  {
    "label": "VisitChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitChildren(FFCPXMLNodeVisitor& NodeVisitor, bool VisitRefNodeChildren = false)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(const FString& InContent)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(float InContent)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(int32 InContent)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(bool InContent)"
  },
  {
    "label": "AppendChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendChildNode(TSharedRef<FFCPXMLNode> InNode)"
  },
  {
    "label": "CreateChildNode()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FFCPXMLNode>)",
    "insertText": "CreateChildNode(const FString& InTag)"
  },
  {
    "label": "AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAttribute(const FString &InTag, const FString &InValue)"
  },
  {
    "label": "AddReference()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddReference(const FString& InElement, const FString &InId, TSharedPtr<FFCPXMLNode> InNode)"
  }
]