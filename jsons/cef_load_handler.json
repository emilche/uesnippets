[
  {
    "label": "CefLoadHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefLoadHandler"
  },
  {
    "label": "OnLoadingStateChange()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_LOAD_HANDLER_H_ # define CEF_INCLUDE_CEF_LOAD_HANDLER_H_ # pragma once # include \" include / cef_base . h \" # include \" include / cef_browser . h \" # include \" include / cef_frame . h \" class CefLoadHandler : public CefBaseRefCounted { public : typedef cef_errorcode_t ErrorCode ; typedef cef_transition_type_t TransitionType ; void)",
    "insertText": "OnLoadingStateChange(CefRefPtr<CefBrowser> browser, bool isLoading, bool canGoBack, bool canGoForward)"
  },
  {
    "label": "OnLoadStart()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnLoadStart(CefRefPtr<CefBrowser> browser, CefRefPtr<CefFrame> frame, TransitionType transition_type)"
  },
  {
    "label": "OnLoadEnd()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnLoadEnd(CefRefPtr<CefBrowser> browser, CefRefPtr<CefFrame> frame, int httpStatusCode)"
  },
  {
    "label": "OnLoadError()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnLoadError(CefRefPtr<CefBrowser> browser, CefRefPtr<CefFrame> frame, ErrorCode errorCode, const CefString& errorText, const CefString& failedUrl)"
  }
]