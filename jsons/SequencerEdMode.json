[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FEditorViewportSelectability",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportSelectability"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "HMovieSceneKeyProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HMovieSceneKeyProxy"
  },
  {
    "label": "UMovieScene3DTransformSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene3DTransformSection"
  },
  {
    "label": "UMovieScene3DTransformTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene3DTransformTrack"
  },
  {
    "label": "FMovieSceneEvaluationTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationTrack"
  },
  {
    "label": "FMovieSceneInterrogationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneInterrogationData"
  },
  {
    "label": "USequencerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USequencerSettings"
  },
  {
    "label": "FSequencerSelectabilityTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerSelectabilityTool"
  },
  {
    "label": "wraps",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "wraps"
  },
  {
    "label": "FMarqueeDragTool",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarqueeDragTool"
  },
  {
    "label": "FMeshTrailData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshTrailData"
  },
  {
    "label": "UMovieScene3DTransformTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene3DTransformTrack"
  },
  {
    "label": "ASequencerMeshTrail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ASequencerMeshTrail"
  },
  {
    "label": "UMovieScene3DTransformTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene3DTransformTrack"
  },
  {
    "label": "ASequencerMeshTrail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ASequencerMeshTrail"
  },
  {
    "label": "FSequencerEdMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerEdMode"
  },
  {
    "label": "ASequencerKeyActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ASequencerKeyActor"
  },
  {
    "label": "FSequencerEdModeTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerEdModeTool"
  },
  {
    "label": "FSequencerEdModeTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerEdModeTool"
  },
  {
    "label": "StartTracking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartTracking(FEditorViewportClient* InViewportClient, FViewport* InViewport)"
  },
  {
    "label": "EndTracking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndTracking(FEditorViewportClient* InViewportClient, FViewport* InViewport)"
  },
  {
    "label": "MakeDragTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeDragTool(FEditorViewportClient* InViewportClient)"
  },
  {
    "label": "InputDelta()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputDelta(FEditorViewportClient* InViewportClient, FViewport* InViewport, FVector& InDrag, FRotator& InRot, FVector& InScale)"
  },
  {
    "label": "Render3DDragTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render3DDragTool(const FSceneView* View, FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "RenderDragTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDragTool(const FSceneView* View, FCanvas* Canvas)"
  },
  {
    "label": "FSequencerEdMode()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSequencerEdMode()"
  },
  {
    "label": "OnKeySelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnKeySelected(FViewport* Viewport, HMovieSceneKeyProxy* KeyProxy)"
  },
  {
    "label": "DrawMeshTransformTrailFromKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawMeshTransformTrailFromKey(const class ASequencerKeyActor* KeyActor)"
  },
  {
    "label": "CleanUpMeshTrails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpMeshTrails()"
  },
  {
    "label": "EnableSelectabilityTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableSelectabilityTool(const bool bInEnabled)"
  },
  {
    "label": "DrawTracks3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawTracks3D(FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "DrawTransformTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawTransformTrack(const TSharedPtr<ISequencer>& Sequencer, FPrimitiveDrawInterface* PDI, UMovieScene3DTransformTrack* TransformTrack, TArrayView<const TWeakObjectPtr<>> BoundObjects, const bool bIsSelected)"
  },
  {
    "label": "DrawAudioTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawAudioTracks(FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "FSequencerEdModeTool()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSequencerEdModeTool(FSequencerEdMode* InSequencerEdMode)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"Sequencer Edit\")"
  }
]