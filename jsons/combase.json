[
  {
    "label": "hierarchy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "hierarchy"
  },
  {
    "label": "knows",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "knows"
  },
  {
    "label": "factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "factory"
  },
  {
    "label": "id",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "id"
  },
  {
    "label": "definition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "definition"
  },
  {
    "label": "derived",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "derived"
  },
  {
    "label": "definition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "definition"
  },
  {
    "label": "a",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "a"
  },
  {
    "label": "as",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "as"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "_AMOVIESETUP_FILTER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_AMOVIESETUP_FILTER"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "derivation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "derivation"
  },
  {
    "label": "CBaseObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CBaseObject"
  },
  {
    "label": "AM_NOVTABLE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AM_NOVTABLE"
  },
  {
    "label": "factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "factory"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "factory"
  },
  {
    "label": "CFactoryTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CFactoryTemplate"
  },
  {
    "label": "supports",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "supports"
  },
  {
    "label": "CBaseObject()",
    "kind": "Method",
    "detail": "Function (UNICODE)",
    "insertText": "CBaseObject(__in_opt LPCSTR pName)"
  },
  {
    "label": "CUnknown()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "CUnknown(__in_opt LPCTSTR pName, __in_opt LPUNKNOWN pUnk)"
  },
  {
    "label": "CUnknown()",
    "kind": "Method",
    "detail": "Function (anyway)",
    "insertText": "CUnknown(__in_opt LPCTSTR Name, __in_opt LPUNKNOWN pUnk, __inout_opt HRESULT *phr)"
  },
  {
    "label": "CUnknown()",
    "kind": "Method",
    "detail": "Function (UNICODE)",
    "insertText": "CUnknown(__in_opt LPCSTR pName, __in_opt LPUNKNOWN pUnk)"
  },
  {
    "label": "NonDelegatingQueryInterface()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "NonDelegatingQueryInterface(REFIID, __deref_out void **)"
  },
  {
    "label": "GetInterface()",
    "kind": "Method",
    "detail": "Function (STDAPI)",
    "insertText": "GetInterface(LPUNKNOWN pUnk, __out void **ppv)"
  },
  {
    "label": "m_lpfnNew()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "m_lpfnNew(pUnk, phr)"
  },
  {
    "label": "LoadOLEAut32()",
    "kind": "Method",
    "detail": "Function (HINSTANCE)",
    "insertText": "LoadOLEAut32()"
  }
]