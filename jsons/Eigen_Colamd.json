[
  {
    "label": "KnobsStatsIndex",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "KnobsStatsIndex"
  },
  {
    "label": "Status",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Status"
  },
  {
    "label": "RowColumnStatus",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RowColumnStatus"
  },
  {
    "label": "ColumnStatus",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ColumnStatus"
  },
  {
    "label": "ColStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ColStructure"
  },
  {
    "label": "RowStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RowStructure"
  },
  {
    "label": "init_rows_cols()",
    "kind": "Method",
    "detail": "Function (IndexType)",
    "insertText": "init_rows_cols(IndexType n_row, IndexType n_col, RowStructure<IndexType> Row [], ColStructure<IndexType> col [], IndexType A [], IndexType p [], IndexType stats[NStats] )"
  },
  {
    "label": "init_scoring()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init_scoring(IndexType n_row, IndexType n_col, RowStructure<IndexType> Row [], ColStructure<IndexType> Col [], IndexType A [], IndexType head [], double knobs[NKnobs], IndexType *p_n_row2, IndexType *p_n_col2, IndexType *p_max_deg)"
  },
  {
    "label": "find_ordering()",
    "kind": "Method",
    "detail": "Function (IndexType)",
    "insertText": "find_ordering(IndexType n_row, IndexType n_col, IndexType Alen, RowStructure<IndexType> Row [], ColStructure<IndexType> Col [], IndexType A [], IndexType head [], IndexType n_col2, IndexType max_deg, IndexType pfree)"
  },
  {
    "label": "order_children()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "order_children(IndexType n_col, ColStructure<IndexType> Col [], IndexType p [])"
  },
  {
    "label": "detect_super_cols()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "detect_super_cols(ColStructure<IndexType> Col [], IndexType A [], IndexType head [], IndexType row_start, IndexType row_length )"
  },
  {
    "label": "garbage_collection()",
    "kind": "Method",
    "detail": "Function (IndexType)",
    "insertText": "garbage_collection(IndexType n_row, IndexType n_col, RowStructure<IndexType> Row [], ColStructure<IndexType> Col [], IndexType A [], IndexType *pfree)"
  },
  {
    "label": "clear_mark()",
    "kind": "Method",
    "detail": "Function (IndexType)",
    "insertText": "clear_mark(IndexType n_row, RowStructure<IndexType> Row [] )"
  },
  {
    "label": "COLAMD_DEBUG0()",
    "kind": "Method",
    "detail": "Function (define)",
    "insertText": "COLAMD_DEBUG0(params)"
  },
  {
    "label": "COLAMD_DEBUG1()",
    "kind": "Method",
    "detail": "Function (define)",
    "insertText": "COLAMD_DEBUG1(params)"
  },
  {
    "label": "COLAMD_DEBUG2()",
    "kind": "Method",
    "detail": "Function (define)",
    "insertText": "COLAMD_DEBUG2(params)"
  },
  {
    "label": "COLAMD_DEBUG3()",
    "kind": "Method",
    "detail": "Function (define)",
    "insertText": "COLAMD_DEBUG3(params)"
  },
  {
    "label": "COLAMD_DEBUG4()",
    "kind": "Method",
    "detail": "Function (define)",
    "insertText": "COLAMD_DEBUG4(params)"
  }
]