[
  {
    "label": "cef_string_list_alloc()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_INTERNAL_CEF_STRING_LIST_H_ # define CEF_INCLUDE_INTERNAL_CEF_STRING_LIST_H_ # pragma once # include \" include / internal / cef_export . h \" # include \" include / internal / cef_string . h \" # ifdef __cplusplus \" C \" { # endif typedef void* cef_string_list_t ; CEF_EXPORT cef_string_list_t)",
    "insertText": "cef_string_list_alloc()"
  },
  {
    "label": "cef_string_list_size()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT size_t)",
    "insertText": "cef_string_list_size(cef_string_list_t list)"
  },
  {
    "label": "cef_string_list_value()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_list_value(cef_string_list_t list, size_t index, cef_string_t* value)"
  },
  {
    "label": "cef_string_list_append()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_string_list_append(cef_string_list_t list, const cef_string_t* value)"
  },
  {
    "label": "cef_string_list_clear()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_string_list_clear(cef_string_list_t list)"
  },
  {
    "label": "cef_string_list_free()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_string_list_free(cef_string_list_t list)"
  },
  {
    "label": "cef_string_list_copy()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_string_list_t)",
    "insertText": "cef_string_list_copy(cef_string_list_t list)"
  }
]