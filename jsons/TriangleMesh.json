[
  {
    "label": "THierarchicalSpatialHash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "THierarchicalSpatialHash"
  },
  {
    "label": "TTriangleCollisionPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TTriangleCollisionPoint"
  },
  {
    "label": "FPBDFlatWeightMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDFlatWeightMap"
  },
  {
    "label": "FTriangleMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriangleMesh"
  },
  {
    "label": "FTriangleMesh()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FTriangleMesh()"
  },
  {
    "label": "FTriangleMesh()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FTriangleMesh(TArray<TVec3<int32>>&& Elements, const int32 StartIdx = 0, const int32 EndIdx = -1, const bool CullDegenerateElements=true)"
  },
  {
    "label": "FTriangleMesh()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FTriangleMesh(FTriangleMesh&& Other)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(TArray<TVec3<int32>>&& Elements, const int32 StartIdx = 0, const int32 EndIdx = -1, const bool CullDegenerateElements=true)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const TArray<TVec3<int32>>& Elements, const int32 StartIdx = 0, const int32 EndIdx = -1, const bool CullDegenerateElements=true)"
  },
  {
    "label": "ResetAuxiliaryStructures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAuxiliaryStructures()"
  },
  {
    "label": "TriMesh()",
    "kind": "Method",
    "detail": "Function (FTriangleMesh)",
    "insertText": "TriMesh(Triangles)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(MElements)"
  },
  {
    "label": "TriMesh()",
    "kind": "Method",
    "detail": "Function (FTriangleMesh)",
    "insertText": "TriMesh(Triangles)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(MElements)"
  },
  {
    "label": "GetPointNormals()",
    "kind": "Method",
    "detail": "Function (TArray<FVec3>)",
    "insertText": "GetPointNormals(const TConstArrayView<FVec3>& points, const bool ReturnEmptyOnError = true, const bool bUseGlobalArray=false)"
  },
  {
    "label": "GetPointNormals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPointNormals(TArrayView<FVec3> PointNormals, const TConstArrayView<FVec3>& FaceNormals, const bool bUseGlobalArray)"
  },
  {
    "label": "GetConvexHullFromParticles()",
    "kind": "Method",
    "detail": "Function (FTriangleMesh)",
    "insertText": "GetConvexHullFromParticles(const TConstArrayView<FVec3>& points)"
  },
  {
    "label": "GetCurvatureOnEdges()",
    "kind": "Method",
    "detail": "Function (TArray<FReal>)",
    "insertText": "GetCurvatureOnEdges(const TArray<FVec3>& faceNormals)"
  },
  {
    "label": "GetCurvatureOnEdges()",
    "kind": "Method",
    "detail": "Function (TArray<FReal>)",
    "insertText": "GetCurvatureOnEdges(const TConstArrayView<FVec3>& points)"
  },
  {
    "label": "GetCurvatureOnPoints()",
    "kind": "Method",
    "detail": "Function (TArray<FReal>)",
    "insertText": "GetCurvatureOnPoints(const TArray<FReal>& edgeCurvatures)"
  },
  {
    "label": "GetCurvatureOnPoints()",
    "kind": "Method",
    "detail": "Function (TArray<FReal>)",
    "insertText": "GetCurvatureOnPoints(const TConstArrayView<FVec3>& points)"
  },
  {
    "label": "GetBoundaryPoints()",
    "kind": "Method",
    "detail": "Function (TSet<int32>)",
    "insertText": "GetBoundaryPoints()"
  },
  {
    "label": "FindCoincidentVertexRemappings()",
    "kind": "Method",
    "detail": "Function (int32>)",
    "insertText": "FindCoincidentVertexRemappings(\n\t\t\tconst TArray<int32>& TestIndices,\n\t\t\tconst TConstArrayView<FVec3>& Points)"
  },
  {
    "label": "GetVertexImportanceOrdering()",
    "kind": "Method",
    "detail": "Function (TArray<int32>)",
    "insertText": "GetVertexImportanceOrdering(\n\t\t    const TConstArrayView<FVec3>& Points,\n\t\t    const TArray<FReal>& PointCurvatures,\n\t\t    TArray<int32>* CoincidentVertices = nullptr,\n\t\t    const bool RestrictToLocalIndexRange = false)"
  },
  {
    "label": "GetVertexImportanceOrdering()",
    "kind": "Method",
    "detail": "Function (TArray<int32>)",
    "insertText": "GetVertexImportanceOrdering(\n\t\t    const TConstArrayView<FVec3>& Points,\n\t\t    TArray<int32>* CoincidentVertices = nullptr,\n\t\t    const bool RestrictToLocalIndexRange = false)"
  },
  {
    "label": "RemapVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemapVertices(const TArray<int32>& Order)"
  },
  {
    "label": "RemapVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemapVertices(const TMap<int32, int32>& Remapping)"
  },
  {
    "label": "RemoveDuplicateElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDuplicateElements()"
  },
  {
    "label": "RemoveDegenerateElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDegenerateElements()"
  },
  {
    "label": "InitHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitHelper(const int32 StartIdx, const int32 EndIdx, const bool CullDegenerateElements=true)"
  }
]