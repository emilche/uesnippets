[
  {
    "label": "FBVHCluster",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBVHCluster"
  },
  {
    "label": "FRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRange"
  },
  {
    "label": "FBVHCluster()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FBVHCluster( uint32 InNumElements, uint32 InMinPartitionSize, uint32 InMaxPartitionSize )"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build( const FGetBounds& GetBounds )"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build( uint32 Offset, uint32 Num, const FGetBounds& GetBounds )"
  },
  {
    "label": "Split()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Split( uint32 Offset, uint32 Num, const FGetBounds& GetBounds )"
  },
  {
    "label": "Sort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sort( uint32* RESTRICT Dst, uint32* RESTRICT Src, uint32 Num, int32 Dim, const FGetBounds& GetBounds )"
  },
  {
    "label": "LeastCost()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "LeastCost( MAX_flt )"
  },
  {
    "label": "LeastCostSplit()",
    "kind": "Method",
    "detail": "Function (FIntVector)",
    "insertText": "LeastCostSplit( -1 )"
  }
]