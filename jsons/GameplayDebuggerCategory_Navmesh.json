[
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "UNavigationSystemV1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationSystemV1"
  },
  {
    "label": "FGameplayDebuggerCategory_Navmesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerCategory_Navmesh"
  },
  {
    "label": "FRepData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGameplayDebuggerCategory_Navmesh()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if WITH_GAMEPLAY_DEBUGGER_MENU # include \" GameplayDebuggerCategory . h \" # include \" NavMesh / NavMeshRenderingComponent . h \" class APlayerController ; class UNavigationSystemV1 ; class FGameplayDebuggerCategory_Navmesh : public FGameplayDebuggerCategory { public :)",
    "insertText": "FGameplayDebuggerCategory_Navmesh()"
  },
  {
    "label": "CollectData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectData(APlayerController* OwnerPC, AActor* DebugActor)"
  },
  {
    "label": "DrawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawData(APlayerController* OwnerPC, FGameplayDebuggerCanvasContext& CanvasContext)"
  },
  {
    "label": "CreateDebugSceneProxy()",
    "kind": "Method",
    "detail": "Function (FDebugRenderSceneProxy*)",
    "insertText": "CreateDebugSceneProxy(const UPrimitiveComponent* InComponent, FDebugDrawDelegateHelper*& OutDelegateHelper)"
  },
  {
    "label": "OnDataPackReplicated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDataPackReplicated(int32 DataPackId)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FGameplayDebuggerCategory>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CycleNavData()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CycleNavData()"
  },
  {
    "label": "CycleActorReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CycleActorReference()"
  },
  {
    "label": "ToggleLockedReferenceLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleLockedReferenceLocation()"
  },
  {
    "label": "CollectNavigationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectNavigationData(const UNavigationSystemV1* NavSys, const ANavigationData* NavData, const APawn* RefPawn)"
  },
  {
    "label": "CollectNavigationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectNavigationData(const UNavigationSystemV1* NavSys, const ANavigationData* NavData, const FVector& RefLocation)"
  },
  {
    "label": "RetrieveRelativeTilesToDisplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetrieveRelativeTilesToDisplay(TArray<FIntPoint>& OutTileDelta)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (struct FRepData { void)",
    "insertText": "Serialize(FArchive& Ar)"
  }
]