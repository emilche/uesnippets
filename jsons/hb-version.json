[
  {
    "label": "HB_VERSION_ATLEAST()",
    "kind": "Method",
    "detail": "Function (# ifndef HB_H_IN # error \" Include<hb . h> instead . \" # endif # ifndef HB_VERSION_H # define HB_VERSION_H # include \" hb - common . h \" HB_BEGIN_DECLS # define HB_VERSION_MAJOR 2 # define HB_VERSION_MINOR 4 # define HB_VERSION_MICRO 0 # define HB_VERSION_STRING \" 2 . 4 . 0 \" # define)",
    "insertText": "HB_VERSION_ATLEAST(major,minor,micro) \\ ((major)*10000+(minor)*100+(micro) <= \\ HB_VERSION_MAJOR*10000+HB_VERSION_MINOR*100+HB_VERSION_MICRO) HB_EXTERN void hb_version (unsigned int *major, unsigned int *minor, unsigned int *micro)"
  },
  {
    "label": "hb_version_string()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN const char*)",
    "insertText": "hb_version_string(void)"
  },
  {
    "label": "hb_version_atleast()",
    "kind": "Method",
    "detail": "Function (HB_EXTERN hb_bool_t)",
    "insertText": "hb_version_atleast(unsigned int major, unsigned int minor, unsigned int micro)"
  }
]