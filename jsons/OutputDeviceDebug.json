[
  {
    "label": "FOutputDeviceDebug",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDeviceDebug"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Logging / LogVerbosity . h \" # include \" Misc / OutputDevice . h \" # include \" UObject / NameTypes . h \" # include<atomic> class FOutputDeviceDebug : public FOutputDevice { public : void)",
    "insertText": "Serialize(const TCHAR* Data, ELogVerbosity::Type Verbosity, const FName& Category, double Time)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* Data, ELogVerbosity::Type Verbosity, const FName& Category)"
  },
  {
    "label": "SerializeRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeRecord(const UE::FLogRecord& Record)"
  },
  {
    "label": "CanBeUsedOnAnyThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeUsedOnAnyThread()"
  },
  {
    "label": "CanBeUsedOnPanicThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeUsedOnPanicThread()"
  },
  {
    "label": "TickAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickAsync()"
  }
]