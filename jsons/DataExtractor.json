[
  {
    "label": "DataExtractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataExtractor"
  },
  {
    "label": "DataExtractor()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_DATAEXTRACTOR_H # define LLVM_SUPPORT_DATAEXTRACTOR_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / Support / DataTypes . h \" namespace llvm { class DataExtractor { StringRef Data ; uint8_t IsLittleEndian ; uint8_t AddressSize ; public :)",
    "insertText": "DataExtractor(StringRef Data, bool IsLittleEndian, uint8_t AddressSize) : Data(Data), IsLittleEndian(IsLittleEndian), AddressSize(AddressSize)"
  },
  {
    "label": "getData()",
    "kind": "Method",
    "detail": "Function (} StringRef)",
    "insertText": "getData()"
  },
  {
    "label": "getCStr()",
    "kind": "Method",
    "detail": "Function (AddressSize = Size ; } const char*)",
    "insertText": "getCStr(uint32_t *offset_ptr)"
  },
  {
    "label": "getUnsigned()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getUnsigned(uint32_t *offset_ptr, uint32_t byte_size)"
  },
  {
    "label": "getSigned()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "getSigned(uint32_t *offset_ptr, uint32_t size)"
  },
  {
    "label": "getAddress()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getAddress(uint32_t *offset_ptr)"
  },
  {
    "label": "getU8()",
    "kind": "Method",
    "detail": "Function (} uint8_t)",
    "insertText": "getU8(uint32_t *offset_ptr)"
  },
  {
    "label": "getU8()",
    "kind": "Method",
    "detail": "Function (uint8_t*)",
    "insertText": "getU8(uint32_t *offset_ptr, uint8_t *dst, uint32_t count)"
  },
  {
    "label": "getU16()",
    "kind": "Method",
    "detail": "Function (uint16_t)",
    "insertText": "getU16(uint32_t *offset_ptr)"
  },
  {
    "label": "getU16()",
    "kind": "Method",
    "detail": "Function (uint16_t*)",
    "insertText": "getU16(uint32_t *offset_ptr, uint16_t *dst, uint32_t count)"
  },
  {
    "label": "getU32()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "getU32(uint32_t *offset_ptr)"
  },
  {
    "label": "getU32()",
    "kind": "Method",
    "detail": "Function (uint32_t*)",
    "insertText": "getU32(uint32_t *offset_ptr, uint32_t *dst, uint32_t count)"
  },
  {
    "label": "getU64()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getU64(uint32_t *offset_ptr)"
  },
  {
    "label": "getU64()",
    "kind": "Method",
    "detail": "Function (uint64_t*)",
    "insertText": "getU64(uint32_t *offset_ptr, uint64_t *dst, uint32_t count)"
  },
  {
    "label": "getSLEB128()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "getSLEB128(uint32_t *offset_ptr)"
  },
  {
    "label": "getULEB128()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getULEB128(uint32_t *offset_ptr)"
  },
  {
    "label": "isValidOffset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValidOffset(uint32_t offset)"
  },
  {
    "label": "isValidOffsetForDataOfSize()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isValidOffsetForDataOfSize(uint32_t offset, uint32_t length)"
  },
  {
    "label": "isValidOffsetForAddress()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isValidOffsetForAddress(uint32_t offset)"
  }
]