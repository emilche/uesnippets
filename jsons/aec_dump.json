[
  {
    "label": "InternalAPMConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InternalAPMConfig"
  },
  {
    "label": "AecDump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AecDump"
  },
  {
    "label": "AudioProcessingState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AudioProcessingState"
  },
  {
    "label": "InternalAPMConfig()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_INCLUDE_AEC_DUMP_H_ # define MODULES_AUDIO_PROCESSING_INCLUDE_AEC_DUMP_H_ # include<stdint . h> # include<string> # include \" absl / base / attributes . h \" # include \" absl / types / optional . h \" # include \" modules / audio_processing / include / audio_frame_view . h \" # include \" modules / audio_processing / include / audio_processing . h \" namespace webrtc { struct InternalAPMConfig {)",
    "insertText": "InternalAPMConfig()"
  },
  {
    "label": "InternalAPMConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalAPMConfig(const InternalAPMConfig&)"
  },
  {
    "label": "InternalAPMConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalAPMConfig(InternalAPMConfig&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InternalAPMConfig&)",
    "insertText": "operator(const InternalAPMConfig&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InternalAPMConfig&)",
    "insertText": "operator(InternalAPMConfig&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const InternalAPMConfig& other)"
  },
  {
    "label": "AecDump()",
    "kind": "Method",
    "detail": "Function (bool aec_enabled = false ; bool aec_delay_agnostic_enabled = false ; bool aec_drift_compensation_enabled = false ; bool aec_extended_filter_enabled = false ; int aec_suppression_level = 0 ; bool aecm_enabled = false ; bool aecm_comfort_noise_enabled = false ; int aecm_routing_mode = 0 ; bool agc_enabled = false ; int agc_mode = 0 ; bool agc_limiter_enabled = false ; bool hpf_enabled = false ; bool ns_enabled = false ; int ns_level = 0 ; bool transient_suppression_enabled = false ; bool noise_robust_agc_enabled = false ; bool pre_amplifier_enabled = false ; float pre_amplifier_fixed_gain_factor = 1 . f ; std::string experiments_description = \" \" ; } ; class AecDump { public : struct AudioProcessingState { int delay ; int drift ; absl::optional<int> applied_input_volume ; bool keypress ; } ; ~)",
    "insertText": "AecDump()"
  },
  {
    "label": "WriteInitMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteInitMessage(const ProcessingConfig& api_format, int64_t time_now_ms)"
  },
  {
    "label": "ABSL_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ABSL_DEPRECATED(\"\") void WriteInitMessage(const ProcessingConfig& api_format)"
  },
  {
    "label": "WriteInitMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteInitMessage(api_format, 0)"
  },
  {
    "label": "AddCaptureStreamInput()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddCaptureStreamInput(const AudioFrameView<const float>& src)"
  },
  {
    "label": "AddCaptureStreamOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCaptureStreamOutput(const AudioFrameView<const float>& src)"
  },
  {
    "label": "AddCaptureStreamInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCaptureStreamInput(const int16_t* const data, int num_channels, int samples_per_channel)"
  },
  {
    "label": "AddCaptureStreamOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCaptureStreamOutput(const int16_t* const data, int num_channels, int samples_per_channel)"
  },
  {
    "label": "AddAudioProcessingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAudioProcessingState(const AudioProcessingState& state)"
  },
  {
    "label": "WriteCaptureStreamMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteCaptureStreamMessage()"
  },
  {
    "label": "WriteRenderStreamMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteRenderStreamMessage(const int16_t* const data, int num_channels, int samples_per_channel)"
  },
  {
    "label": "WriteRenderStreamMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteRenderStreamMessage(const AudioFrameView<const float>& src)"
  },
  {
    "label": "WriteRuntimeSetting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteRuntimeSetting(const AudioProcessing::RuntimeSetting& runtime_setting)"
  },
  {
    "label": "WriteConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteConfig(const InternalAPMConfig& config)"
  }
]