[
  {
    "label": "SUniformGridPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SUniformGridPanel"
  },
  {
    "label": "SApexClothingOptionWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SApexClothingOptionWindow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Input / Reply . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SWindow . h \" class SUniformGridPanel ; class SApexClothingOptionWindow : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SApexClothingOptionWindow ) : _WidgetWindow() , _NumLODs() , _ApexDetails()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<SWindow>, WidgetWindow ) SLATE_ARGUMENT( int32, NumLODs ) SLATE_ARGUMENT(TSharedPtr<SUniformGridPanel>, ApexDetails ) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnImport()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnImport()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bCanImport = true ;)",
    "insertText": "if(WidgetWindow.IsValid())"
  },
  {
    "label": "Pin()",
    "kind": "Method",
    "detail": "Function (WidgetWindow .)",
    "insertText": "Pin()->RequestDestroyWindow()"
  },
  {
    "label": "Handled()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Handled()"
  },
  {
    "label": "OnCancel()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnCancel()"
  },
  {
    "label": "IsCheckedLOD()",
    "kind": "Method",
    "detail": "Function (} ECheckBoxState)",
    "insertText": "IsCheckedLOD()"
  },
  {
    "label": "bUseLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bUseLOD(CheckState == ECheckBoxState::Checked)"
  },
  {
    "label": "CanImport()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanImport()"
  }
]