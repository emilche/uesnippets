[
  {
    "label": "FNotifyHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNotifyHook"
  },
  {
    "label": "FObjectPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPropertyNode"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "SPropertyNameWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyNameWidget"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "SPropertyValueWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyValueWidget"
  },
  {
    "label": "SEditConditionWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditConditionWidget"
  },
  {
    "label": "property",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "property"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "property",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "property"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs, TSharedPtr<FPropertyEditor> PropertyEditor )"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs, TSharedPtr<FPropertyEditor> InPropertyEditor, TSharedPtr<IPropertyUtilities> InPropertyUtilities )"
  },
  {
    "label": "ConstructPropertyEditorWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructPropertyEditorWidget( TSharedPtr<FPropertyEditor>& PropertyEditor, TSharedPtr<IPropertyUtilities> InPropertyUtilities )"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& Args )"
  },
  {
    "label": "OnEditConditionCheckChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditConditionCheckChanged( ECheckBoxState CheckState )"
  },
  {
    "label": "ShouldBeVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldBeVisible(const FPropertyNode& InParentNode, const FProperty* Property)"
  },
  {
    "label": "IsBuiltInStructProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBuiltInStructProperty( const FProperty* Property )"
  },
  {
    "label": "IsChildOfArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildOfArray( const FPropertyNode& InPropertyNode )"
  },
  {
    "label": "IsChildOfSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildOfSet( const FPropertyNode& InPropertyNode )"
  },
  {
    "label": "IsChildOfMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildOfMap( const FPropertyNode& InPropertyNode )"
  },
  {
    "label": "IsStaticArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStaticArray( const FPropertyNode& InPropertyNode )"
  },
  {
    "label": "IsDynamicArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDynamicArray( const FPropertyNode& InPropertyNode )"
  },
  {
    "label": "IsOptionalProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOptionalProperty(const FPropertyNode& InPropertyNode)"
  },
  {
    "label": "IsSoftObjectPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSoftObjectPath(const FProperty* Property)"
  },
  {
    "label": "IsSoftClassPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSoftClassPath(const FProperty* Property)"
  },
  {
    "label": "IsEditInlineClassAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditInlineClassAllowed( UClass* CheckClass, bool bAllowAbstract )"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText( const FProperty* const Property )"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationLink( const FProperty* const Property )"
  },
  {
    "label": "GetEnumDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEnumDocumentationLink(const FProperty* const Property)"
  },
  {
    "label": "GetDocumentationExcerptName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationExcerptName( const FProperty* const Property )"
  },
  {
    "label": "GetPropertyHandle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle>)",
    "insertText": "GetPropertyHandle( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "GetRequiredPropertyButtons()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRequiredPropertyButtons( TSharedRef<FPropertyNode> PropertyNode, TArray<EPropertyButton::Type>& OutRequiredButtons, bool bUsingAssetPicker = true )"
  },
  {
    "label": "MakePropertyButton()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakePropertyButton( const EPropertyButton::Type ButtonType, const TSharedRef< FPropertyEditor >& PropertyEditor )"
  },
  {
    "label": "MakePropertyReorderHandle()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakePropertyReorderHandle(TSharedPtr<SDetailSingleItemRow> InParentRow, TAttribute<bool> InEnabledAttr)"
  },
  {
    "label": "CollectObjectNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectObjectNodes( TSharedPtr<FPropertyNode> StartNode, TArray<FObjectPropertyNode*>& OutObjectNodes )"
  },
  {
    "label": "GetValidEnumsFromPropertyOverride()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetValidEnumsFromPropertyOverride(const FProperty* Property, const UEnum* InEnum)"
  },
  {
    "label": "GetInvalidEnumsFromPropertyOverride()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetInvalidEnumsFromPropertyOverride(const FProperty* Property, const UEnum* InEnum)"
  },
  {
    "label": "GetRestrictedEnumsFromPropertyOverride()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetRestrictedEnumsFromPropertyOverride(TArrayView<UObject*> ObjectList, const FProperty* Property, const UEnum* InEnum)"
  },
  {
    "label": "GetEnumValueDisplayNamesFromPropertyOverride()",
    "kind": "Method",
    "detail": "Function (FText>)",
    "insertText": "GetEnumValueDisplayNamesFromPropertyOverride(const FProperty* Property, const UEnum* InEnum)"
  },
  {
    "label": "IsCategoryHiddenByClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCategoryHiddenByClass(const TSharedPtr<FComplexPropertyNode>& InRootNode, FName CategoryName)"
  },
  {
    "label": "IsVisibleStandaloneProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisibleStandaloneProperty(const FPropertyNode& PropertyNode, const FPropertyNode& ParentNode)"
  },
  {
    "label": "OrderPropertiesFromMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OrderPropertiesFromMetadata(TArray<FProperty*>& Properties)"
  },
  {
    "label": "GetPropertyOptionsMetaDataKey()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetPropertyOptionsMetaDataKey(const FProperty* Property)"
  }
]