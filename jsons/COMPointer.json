[
  {
    "label": "TComPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TComPtr"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / AssertionMacros . h \" # include<Unknwn . h> # ifdef TEXT_PASTE # undef TEXT # define)",
    "insertText": "TEXT(x) TEXT_PASTE(x)"
  },
  {
    "label": "TComPtr()",
    "kind": "Method",
    "detail": "Function (public : typedef T PointerType ; public :)",
    "insertText": "TComPtr() : RawPointer(NULL)"
  },
  {
    "label": "TComPtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TComPtr(PointerType* const Object) : RawPointer(Object)"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (RawPointer ->)",
    "insertText": "AddRef()"
  },
  {
    "label": "TComPtr()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "TComPtr(const TComPtr<PointerType>& Other) : RawPointer(Other.RawPointer)"
  },
  {
    "label": "TComPtr()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "TComPtr(TComPtr<PointerType>&& Other) : RawPointer(Other.RawPointer)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Other . RawPointer = NULL ; } TComPtr<PointerType>&)",
    "insertText": "operator(PointerType* const Object)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(RawPointer)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (RawPointer ->)",
    "insertText": "Release()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} RawPointer = Object ; } return* this ; } TComPtr<PointerType>&)",
    "insertText": "operator(const TComPtr<PointerType>& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} RawPointer = Other . RawPointer ; } return* this ; } TComPtr<PointerType>&)",
    "insertText": "operator(TComPtr<PointerType>&& Other)"
  },
  {
    "label": "TComPtr()",
    "kind": "Method",
    "detail": "Function (} RawPointer = Other . RawPointer ; Other . RawPointer = NULL ; } return* this ; } ~)",
    "insertText": "TComPtr()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } public : PointerType**)",
    "insertText": "operator()"
  },
  {
    "label": "Detach()",
    "kind": "Method",
    "detail": "Function (} RawPointer = Object ; } void)",
    "insertText": "Detach()"
  },
  {
    "label": "FromQueryInterface()",
    "kind": "Method",
    "detail": "Function (RawPointer = NULL ; } HRESULT)",
    "insertText": "FromQueryInterface(REFIID Riid, IUnknown* Unknown)"
  },
  {
    "label": "QueryInterface()",
    "kind": "Method",
    "detail": "Function (RawPointer = NULL ; } return Unknown ->)",
    "insertText": "QueryInterface(Riid, reinterpret_cast<void**>(&(RawPointer)))"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} PointerType*)",
    "insertText": "Get()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (RawPointer = NULL ; } } private : PointerType* RawPointer ; uint32)",
    "insertText": "GetTypeHash(const TComPtr<T>& InObjectPtr)"
  }
]