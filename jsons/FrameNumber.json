[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "TNumericLimits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TNumericLimits"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "FFrameNumber()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Math / NumericLimits . h \" # include \" Math / UnrealMathUtility . h \" # include \" Templates / EnableIf . h \" # include \" Templates / UnrealTypeTraits . h \" class FArchive ; template<NumericType> struct TNumericLimits ; struct FFrameNumber {)",
    "insertText": "FFrameNumber() : Value(0)"
  },
  {
    "label": "FFrameNumber()",
    "kind": "Method",
    "detail": "Function (} template<T,U = TEnableIf<std::is_same_v<T,int32>>::Type>)",
    "insertText": "FFrameNumber(T InValue) : Value(InValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FFrameNumber& FrameNumber)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FFrameNumber&)",
    "insertText": "operator(FFrameNumber RHS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Value % = RHS . Value ; return* this ; } FFrameNumber&)",
    "insertText": "operator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (- - Value ; return* this ; } FFrameNumber)",
    "insertText": "operator(int32)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FFrameNumber Ret =* this ; - - Value ; return Ret ; } bool)",
    "insertText": "operator(FFrameNumber A, FFrameNumber B)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FFrameNumber)",
    "insertText": "operator(FFrameNumber A)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FFrameNumber)",
    "insertText": "operator(FFrameNumber A, float Scalar)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(FFrameNumber A)"
  }
]