[
  {
    "label": "CD3DX12FeatureSupport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CD3DX12FeatureSupport"
  },
  {
    "label": "ProtectedResourceSessionTypesLocal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProtectedResourceSessionTypesLocal"
  },
  {
    "label": "CD3DX12FeatureSupport()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # ifndef __cplusplus # error D3DX12 requires C + + # endif # include \" d3d12 . h \" # include<vector> class CD3DX12FeatureSupport { public :)",
    "insertText": "CD3DX12FeatureSupport()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Init(ID3D12Device* pDevice)"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "GetStatus()"
  },
  {
    "label": "OutputMergerLogicOp()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "OutputMergerLogicOp()"
  },
  {
    "label": "MinPrecisionSupport()",
    "kind": "Method",
    "detail": "Function (D3D12_SHADER_MIN_PRECISION_SUPPORT)",
    "insertText": "MinPrecisionSupport()"
  },
  {
    "label": "TiledResourcesTier()",
    "kind": "Method",
    "detail": "Function (D3D12_TILED_RESOURCES_TIER)",
    "insertText": "TiledResourcesTier()"
  },
  {
    "label": "ResourceBindingTier()",
    "kind": "Method",
    "detail": "Function (D3D12_RESOURCE_BINDING_TIER)",
    "insertText": "ResourceBindingTier()"
  },
  {
    "label": "PSSpecifiedStencilRefSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "PSSpecifiedStencilRefSupported()"
  },
  {
    "label": "TypedUAVLoadAdditionalFormats()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "TypedUAVLoadAdditionalFormats()"
  },
  {
    "label": "ROVsSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "ROVsSupported()"
  },
  {
    "label": "ConservativeRasterizationTier()",
    "kind": "Method",
    "detail": "Function (D3D12_CONSERVATIVE_RASTERIZATION_TIER)",
    "insertText": "ConservativeRasterizationTier()"
  },
  {
    "label": "StandardSwizzle64KBSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "StandardSwizzle64KBSupported()"
  },
  {
    "label": "CrossAdapterRowMajorTextureSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "CrossAdapterRowMajorTextureSupported()"
  },
  {
    "label": "VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation()"
  },
  {
    "label": "ResourceHeapTier()",
    "kind": "Method",
    "detail": "Function (D3D12_RESOURCE_HEAP_TIER)",
    "insertText": "ResourceHeapTier()"
  },
  {
    "label": "CrossNodeSharingTier()",
    "kind": "Method",
    "detail": "Function (D3D12_CROSS_NODE_SHARING_TIER)",
    "insertText": "CrossNodeSharingTier()"
  },
  {
    "label": "MaxGPUVirtualAddressBitsPerResource()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "MaxGPUVirtualAddressBitsPerResource()"
  },
  {
    "label": "MaxSupportedFeatureLevel()",
    "kind": "Method",
    "detail": "Function (D3D_FEATURE_LEVEL)",
    "insertText": "MaxSupportedFeatureLevel()"
  },
  {
    "label": "FormatSupport()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "FormatSupport(DXGI_FORMAT Format, D3D12_FORMAT_SUPPORT1& Support1, D3D12_FORMAT_SUPPORT2& Support2)"
  },
  {
    "label": "MultisampleQualityLevels()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "MultisampleQualityLevels(DXGI_FORMAT Format, UINT SampleCount, D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS Flags, UINT& NumQualityLevels)"
  },
  {
    "label": "FormatInfo()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "FormatInfo(DXGI_FORMAT Format, UINT8& PlaneCount)"
  },
  {
    "label": "MaxGPUVirtualAddressBitsPerProcess()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "MaxGPUVirtualAddressBitsPerProcess()"
  },
  {
    "label": "HighestShaderModel()",
    "kind": "Method",
    "detail": "Function (D3D_SHADER_MODEL)",
    "insertText": "HighestShaderModel()"
  },
  {
    "label": "WaveOps()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "WaveOps()"
  },
  {
    "label": "WaveLaneCountMin()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "WaveLaneCountMin()"
  },
  {
    "label": "WaveLaneCountMax()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "WaveLaneCountMax()"
  },
  {
    "label": "TotalLaneCount()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "TotalLaneCount()"
  },
  {
    "label": "ExpandedComputeResourceStates()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "ExpandedComputeResourceStates()"
  },
  {
    "label": "Int64ShaderOps()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "Int64ShaderOps()"
  },
  {
    "label": "ProtectedResourceSessionSupport()",
    "kind": "Method",
    "detail": "Function (D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS)",
    "insertText": "ProtectedResourceSessionSupport(UINT NodeIndex = 0)"
  },
  {
    "label": "HighestRootSignatureVersion()",
    "kind": "Method",
    "detail": "Function (D3D_ROOT_SIGNATURE_VERSION)",
    "insertText": "HighestRootSignatureVersion()"
  },
  {
    "label": "TileBasedRenderer()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "TileBasedRenderer(UINT NodeIndex = 0)"
  },
  {
    "label": "UMA()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "UMA(UINT NodeIndex = 0)"
  },
  {
    "label": "CacheCoherentUMA()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "CacheCoherentUMA(UINT NodeIndex = 0)"
  },
  {
    "label": "IsolatedMMU()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "IsolatedMMU(UINT NodeIndex = 0)"
  },
  {
    "label": "DepthBoundsTestSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "DepthBoundsTestSupported()"
  },
  {
    "label": "ProgrammableSamplePositionsTier()",
    "kind": "Method",
    "detail": "Function (D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER)",
    "insertText": "ProgrammableSamplePositionsTier()"
  },
  {
    "label": "ShaderCacheSupportFlags()",
    "kind": "Method",
    "detail": "Function (D3D12_SHADER_CACHE_SUPPORT_FLAGS)",
    "insertText": "ShaderCacheSupportFlags()"
  },
  {
    "label": "CommandQueuePrioritySupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "CommandQueuePrioritySupported(D3D12_COMMAND_LIST_TYPE CommandListType, UINT Priority)"
  },
  {
    "label": "CopyQueueTimestampQueriesSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "CopyQueueTimestampQueriesSupported()"
  },
  {
    "label": "CastingFullyTypedFormatSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "CastingFullyTypedFormatSupported()"
  },
  {
    "label": "WriteBufferImmediateSupportFlags()",
    "kind": "Method",
    "detail": "Function (D3D12_COMMAND_LIST_SUPPORT_FLAGS)",
    "insertText": "WriteBufferImmediateSupportFlags()"
  },
  {
    "label": "ViewInstancingTier()",
    "kind": "Method",
    "detail": "Function (D3D12_VIEW_INSTANCING_TIER)",
    "insertText": "ViewInstancingTier()"
  },
  {
    "label": "BarycentricsSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "BarycentricsSupported()"
  },
  {
    "label": "ExistingHeapsSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "ExistingHeapsSupported()"
  },
  {
    "label": "MSAA64KBAlignedTextureSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "MSAA64KBAlignedTextureSupported()"
  },
  {
    "label": "SharedResourceCompatibilityTier()",
    "kind": "Method",
    "detail": "Function (D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER)",
    "insertText": "SharedResourceCompatibilityTier()"
  },
  {
    "label": "Native16BitShaderOpsSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "Native16BitShaderOpsSupported()"
  },
  {
    "label": "HeapSerializationTier()",
    "kind": "Method",
    "detail": "Function (D3D12_HEAP_SERIALIZATION_TIER)",
    "insertText": "HeapSerializationTier(UINT NodeIndex = 0)"
  },
  {
    "label": "CrossNodeAtomicShaderInstructions()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "CrossNodeAtomicShaderInstructions()"
  },
  {
    "label": "SRVOnlyTiledResourceTier3()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "SRVOnlyTiledResourceTier3()"
  },
  {
    "label": "RenderPassesTier()",
    "kind": "Method",
    "detail": "Function (D3D12_RENDER_PASS_TIER)",
    "insertText": "RenderPassesTier()"
  },
  {
    "label": "RaytracingTier()",
    "kind": "Method",
    "detail": "Function (D3D12_RAYTRACING_TIER)",
    "insertText": "RaytracingTier()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 4) BOOL DisplayableTexture()"
  },
  {
    "label": "AdditionalShadingRatesSupported()",
    "kind": "Method",
    "detail": "Function (# endif BOOL)",
    "insertText": "AdditionalShadingRatesSupported()"
  },
  {
    "label": "PerPrimitiveShadingRateSupportedWithViewportIndexing()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "PerPrimitiveShadingRateSupportedWithViewportIndexing()"
  },
  {
    "label": "VariableShadingRateTier()",
    "kind": "Method",
    "detail": "Function (D3D12_VARIABLE_SHADING_RATE_TIER)",
    "insertText": "VariableShadingRateTier()"
  },
  {
    "label": "ShadingRateImageTileSize()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "ShadingRateImageTileSize()"
  },
  {
    "label": "BackgroundProcessingSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "BackgroundProcessingSupported()"
  },
  {
    "label": "QueryMetaCommand()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "QueryMetaCommand(D3D12_FEATURE_DATA_QUERY_META_COMMAND& dQueryMetaCommand)"
  },
  {
    "label": "MeshShaderTier()",
    "kind": "Method",
    "detail": "Function (D3D12_MESH_SHADER_TIER)",
    "insertText": "MeshShaderTier()"
  },
  {
    "label": "SamplerFeedbackTier()",
    "kind": "Method",
    "detail": "Function (D3D12_SAMPLER_FEEDBACK_TIER)",
    "insertText": "SamplerFeedbackTier()"
  },
  {
    "label": "ProtectedResourceSessionTypeCount()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "ProtectedResourceSessionTypeCount(UINT NodeIndex = 0)"
  },
  {
    "label": "ProtectedResourceSessionTypes()",
    "kind": "Method",
    "detail": "Function (std::vector<GUID>)",
    "insertText": "ProtectedResourceSessionTypes(UINT NodeIndex = 0)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 3) BOOL UnalignedBlockTexturesSupported()"
  },
  {
    "label": "MeshShaderPipelineStatsSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "MeshShaderPipelineStatsSupported()"
  },
  {
    "label": "MeshShaderSupportsFullRangeRenderTargetArrayIndex()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "MeshShaderSupportsFullRangeRenderTargetArrayIndex()"
  },
  {
    "label": "AtomicInt64OnTypedResourceSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "AtomicInt64OnTypedResourceSupported()"
  },
  {
    "label": "AtomicInt64OnGroupSharedSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "AtomicInt64OnGroupSharedSupported()"
  },
  {
    "label": "DerivativesInMeshAndAmplificationShadersSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "DerivativesInMeshAndAmplificationShadersSupported()"
  },
  {
    "label": "WaveMMATier()",
    "kind": "Method",
    "detail": "Function (D3D12_WAVE_MMA_TIER)",
    "insertText": "WaveMMATier()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 4) BOOL VariableRateShadingSumCombinerSupported()"
  },
  {
    "label": "MeshShaderPerPrimitiveShadingRateSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "MeshShaderPerPrimitiveShadingRateSupported()"
  },
  {
    "label": "AtomicInt64OnDescriptorHeapResourceSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "AtomicInt64OnDescriptorHeapResourceSupported()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 600) D3D12_TRI_STATE MSPrimitivesPipelineStatisticIncludesCulledPrimitives()"
  },
  {
    "label": "EnhancedBarriersSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "EnhancedBarriersSupported()"
  },
  {
    "label": "RelaxedFormatCastingSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "RelaxedFormatCastingSupported()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 602) BOOL UnrestrictedBufferTextureCopyPitchSupported()"
  },
  {
    "label": "UnrestrictedVertexElementAlignmentSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "UnrestrictedVertexElementAlignmentSupported()"
  },
  {
    "label": "InvertedViewportHeightFlipsYSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "InvertedViewportHeightFlipsYSupported()"
  },
  {
    "label": "InvertedViewportDepthFlipsZSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "InvertedViewportDepthFlipsZSupported()"
  },
  {
    "label": "TextureCopyBetweenDimensionsSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "TextureCopyBetweenDimensionsSupported()"
  },
  {
    "label": "AlphaBlendFactorSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "AlphaBlendFactorSupported()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 606) BOOL AdvancedTextureOpsSupported()"
  },
  {
    "label": "WriteableMSAATexturesSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "WriteableMSAATexturesSupported()"
  },
  {
    "label": "IndependentFrontAndBackStencilRefMaskSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "IndependentFrontAndBackStencilRefMaskSupported()"
  },
  {
    "label": "TriangleFanSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "TriangleFanSupported()"
  },
  {
    "label": "DynamicIndexBufferStripCutSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "DynamicIndexBufferStripCutSupported()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 608) BOOL DynamicDepthBiasSupported()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 609) BOOL GPUUploadHeapSupported()"
  },
  {
    "label": "NonNormalizedCoordinateSamplersSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "NonNormalizedCoordinateSamplersSupported()"
  },
  {
    "label": "ManualWriteTrackingResourceSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "ManualWriteTrackingResourceSupported()"
  },
  {
    "label": "RenderPassesValid()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "RenderPassesValid()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 610) BOOL MismatchingOutputDimensionsSupported()"
  },
  {
    "label": "SupportedSampleCountsWithNoOutputs()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "SupportedSampleCountsWithNoOutputs()"
  },
  {
    "label": "PointSamplingAddressesNeverRoundUp()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "PointSamplingAddressesNeverRoundUp()"
  },
  {
    "label": "RasterizerDesc2Supported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "RasterizerDesc2Supported()"
  },
  {
    "label": "NarrowQuadrilateralLinesSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "NarrowQuadrilateralLinesSupported()"
  },
  {
    "label": "AnisoFilterWithPointMipSupported()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "AnisoFilterWithPointMipSupported()"
  },
  {
    "label": "MaxSamplerDescriptorHeapSize()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "MaxSamplerDescriptorHeapSize()"
  },
  {
    "label": "MaxSamplerDescriptorHeapSizeWithStaticSamplers()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "MaxSamplerDescriptorHeapSizeWithStaticSamplers()"
  },
  {
    "label": "MaxViewDescriptorHeapSize()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "MaxViewDescriptorHeapSize()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 611) BOOL ComputeOnlyWriteWatchSupported()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 612) D3D12_EXECUTE_INDIRECT_TIER ExecuteIndirectTier()"
  },
  {
    "label": "WorkGraphsTier()",
    "kind": "Method",
    "detail": "Function (D3D12_WORK_GRAPHS_TIER)",
    "insertText": "WorkGraphsTier()"
  },
  {
    "label": "QueryHighestShaderModel()",
    "kind": "Method",
    "detail": "Function (# endif private : struct ProtectedResourceSessionTypesLocal : D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES { std::vector<GUID> TypeVec ; } ; HRESULT)",
    "insertText": "QueryHighestShaderModel()"
  },
  {
    "label": "QueryHighestRootSignatureVersion()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "QueryHighestRootSignatureVersion()"
  },
  {
    "label": "QueryHighestFeatureLevel()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "QueryHighestFeatureLevel()"
  },
  {
    "label": "QueryProtectedResourceSessionTypes()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "QueryProtectedResourceSessionTypes(UINT NodeIndex, UINT Count)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (private : ID3D12Device* m_pDevice ; HRESULT m_hStatus ; D3D12_FEATURE_DATA_D3D12_OPTIONS m_dOptions ; D3D_FEATURE_LEVEL m_eMaxFeatureLevel ; D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT m_dGPUVASupport ; D3D12_FEATURE_DATA_SHADER_MODEL m_dShaderModel ; D3D12_FEATURE_DATA_D3D12_OPTIONS1 m_dOptions1 ; std::vector<D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT> m_dProtectedResourceSessionSupport ; D3D12_FEATURE_DATA_ROOT_SIGNATURE m_dRootSignature ; std::vector<D3D12_FEATURE_DATA_ARCHITECTURE1> m_dArchitecture1 ; D3D12_FEATURE_DATA_D3D12_OPTIONS2 m_dOptions2 ; D3D12_FEATURE_DATA_SHADER_CACHE m_dShaderCache ; D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY m_dCommandQueuePriority ; D3D12_FEATURE_DATA_D3D12_OPTIONS3 m_dOptions3 ; D3D12_FEATURE_DATA_EXISTING_HEAPS m_dExistingHeaps ; D3D12_FEATURE_DATA_D3D12_OPTIONS4 m_dOptions4 ; std::vector<D3D12_FEATURE_DATA_SERIALIZATION> m_dSerialization ; D3D12_FEATURE_DATA_CROSS_NODE m_dCrossNode ; D3D12_FEATURE_DATA_D3D12_OPTIONS5 m_dOptions5 ; # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 4)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif D3D12_FEATURE_DATA_D3D12_OPTIONS6 m_dOptions6 ; D3D12_FEATURE_DATA_D3D12_OPTIONS7 m_dOptions7 ; std::vector<D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT> m_dProtectedResourceSessionTypeCount ; std::vector<ProtectedResourceSessionTypesLocal> m_dProtectedResourceSessionTypes ; # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 3)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D12_FEATURE_DATA_D3D12_OPTIONS11 m_dOptions11 ; # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 600)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 602)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 606)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D12_FEATURE_DATA_D3D12_OPTIONS15 m_dOptions15 ; # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 608)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 609)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 610)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 611)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 612)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (# endif } ; # define)",
    "insertText": "FEATURE_SUPPORT_GET(RETTYPE,FEATURE,OPTION) \\ inline RETTYPE CD3DX12FeatureSupport::OPTION()"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NAME()",
    "kind": "Method",
    "detail": "Function (\\ return FEATURE . OPTION ; \\ } # define)",
    "insertText": "FEATURE_SUPPORT_GET_NAME(RETTYPE,FEATURE,OPTION,NAME) \\ inline RETTYPE CD3DX12FeatureSupport::NAME()"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NODE_INDEXED()",
    "kind": "Method",
    "detail": "Function (\\ return FEATURE . OPTION ; \\ } # define)",
    "insertText": "FEATURE_SUPPORT_GET_NODE_INDEXED(RETTYPE,FEATURE,OPTION) \\ inline RETTYPE CD3DX12FeatureSupport::OPTION(UINT NodeIndex)"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NODE_INDEXED_NAME()",
    "kind": "Method",
    "detail": "Function (\\ return FEATURE [ NodeIndex ] . OPTION ; \\ } # define)",
    "insertText": "FEATURE_SUPPORT_GET_NODE_INDEXED_NAME(RETTYPE,FEATURE,OPTION,NAME) \\ inline RETTYPE CD3DX12FeatureSupport::NAME(UINT NodeIndex)"
  },
  {
    "label": "CD3DX12FeatureSupport()",
    "kind": "Method",
    "detail": "Function (\\ return FEATURE [ NodeIndex ] . OPTION ; \\ })",
    "insertText": "CD3DX12FeatureSupport() noexcept : m_pDevice(nullptr) , m_hStatus(E_INVALIDARG)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_hStatus = E_INVALIDARG ; return m_hStatus ; } m_pDevice = pDevice ;)",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS, &m_dOptions, sizeof(m_dOptions))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dOptions = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT, &m_dGPUVASupport, sizeof(m_dGPUVASupport))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dGPUVASupport = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS1, &m_dOptions1, sizeof(m_dOptions1))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dOptions1 = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS2, &m_dOptions2, sizeof(m_dOptions2))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dOptions2 = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_SHADER_CACHE, &m_dShaderCache, sizeof(m_dShaderCache))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dShaderCache = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS3, &m_dOptions3, sizeof(m_dOptions3))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dOptions3 = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_EXISTING_HEAPS, &m_dExistingHeaps, sizeof(m_dExistingHeaps))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dExistingHeaps = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS4, &m_dOptions4, sizeof(m_dOptions4))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dOptions4 = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_CROSS_NODE, &m_dCrossNode, sizeof(m_dCrossNode))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dCrossNode = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS5, &m_dOptions5, sizeof(m_dOptions5))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions5 = { } ; } # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 4) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_DISPLAYABLE, &m_dDisplayable, sizeof(m_dDisplayable))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dDisplayable = { } ; } # endif)",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS6, &m_dOptions6, sizeof(m_dOptions6))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dOptions6 = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS7, &m_dOptions7, sizeof(m_dOptions7))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions7 = { } ; } # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 3) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS8, &m_dOptions8, sizeof(m_dOptions8))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dOptions8 = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS9, &m_dOptions9, sizeof(m_dOptions9))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions9 = { } ; } # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 4) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS10, &m_dOptions10, sizeof(m_dOptions10))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dOptions10 = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS11, &m_dOptions11, sizeof(m_dOptions11))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions11 = { } ; } # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 600) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS12, &m_dOptions12, sizeof(m_dOptions12))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions12 = { } ; m_dOptions12 . MSPrimitivesPipelineStatisticIncludesCulledPrimitives = D3D12_TRI_STATE::D3D12_TRI_STATE_UNKNOWN ; } # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 602) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS13, &m_dOptions13, sizeof(m_dOptions13))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions13 = { } ; } # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 606) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS14, &m_dOptions14, sizeof(m_dOptions14))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dOptions14 = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS15, &m_dOptions15, sizeof(m_dOptions15))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions15 = { } ; } # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 608) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS16, &m_dOptions16, sizeof(m_dOptions16))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions16 = { } ; } # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 609) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS17, &m_dOptions17, sizeof(m_dOptions17))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dOptions17 = { } ; })",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS18, &m_dOptions18, sizeof(m_dOptions18))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions18 . RenderPassesValid = false ; } # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 610) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS19, &m_dOptions19, sizeof(m_dOptions19))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions19 = { } ; m_dOptions19 . SupportedSampleCountsWithNoOutputs = 1 ; m_dOptions19 . MaxSamplerDescriptorHeapSize = D3D12_MAX_SHADER_VISIBLE_SAMPLER_HEAP_SIZE ; m_dOptions19 . MaxSamplerDescriptorHeapSizeWithStaticSamplers = D3D12_MAX_SHADER_VISIBLE_SAMPLER_HEAP_SIZE ; m_dOptions19 . MaxViewDescriptorHeapSize = D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_1 ; } # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 611) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS20, &m_dOptions20, sizeof(m_dOptions20))))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (m_dOptions20 = { } ; } # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 612) if (FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS21, &m_dOptions21, sizeof(m_dOptions21))))"
  },
  {
    "label": "GetNodeCount()",
    "kind": "Method",
    "detail": "Function (m_dOptions21 = { } ; } # endif const UINT uNodeCount = m_pDevice ->)",
    "insertText": "GetNodeCount()"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (m_dProtectedResourceSessionSupport .)",
    "insertText": "resize(uNodeCount)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dProtectedResourceSessionSupport [ NodeIndex ] . NodeIndex = NodeIndex ;)",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT, &m_dProtectedResourceSessionSupport[NodeIndex], sizeof(m_dProtectedResourceSessionSupport[NodeIndex]))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dProtectedResourceSessionSupport [ NodeIndex ] . Support = D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_NONE ; } m_dArchitecture1 [ NodeIndex ] . NodeIndex = NodeIndex ;)",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_ARCHITECTURE1, &m_dArchitecture1[NodeIndex], sizeof(m_dArchitecture1[NodeIndex]))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (D3D12_FEATURE_DATA_ARCHITECTURE dArchLocal = { } ; dArchLocal . NodeIndex = NodeIndex ;)",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_ARCHITECTURE, &dArchLocal, sizeof(dArchLocal))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (dArchLocal . TileBasedRenderer = false ; dArchLocal . UMA = false ; dArchLocal . CacheCoherentUMA = false ; } m_dArchitecture1 [ NodeIndex ] . TileBasedRenderer = dArchLocal . TileBasedRenderer ; m_dArchitecture1 [ NodeIndex ] . UMA = dArchLocal . UMA ; m_dArchitecture1 [ NodeIndex ] . CacheCoherentUMA = dArchLocal . CacheCoherentUMA ; m_dArchitecture1 [ NodeIndex ] . IsolatedMMU = false ; } m_dSerialization [ NodeIndex ] . NodeIndex = NodeIndex ;)",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_SERIALIZATION, &m_dSerialization[NodeIndex], sizeof(m_dSerialization[NodeIndex]))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dSerialization [ NodeIndex ] . HeapSerializationTier = D3D12_HEAP_SERIALIZATION_TIER_0 ; } m_dProtectedResourceSessionTypeCount [ NodeIndex ] . NodeIndex = NodeIndex ;)",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT, &m_dProtectedResourceSessionTypeCount[NodeIndex], sizeof(m_dProtectedResourceSessionTypeCount[NodeIndex]))))"
  },
  {
    "label": "QueryProtectedResourceSessionTypes()",
    "kind": "Method",
    "detail": "Function (m_dProtectedResourceSessionTypeCount [ NodeIndex ] . Count = 0 ; })",
    "insertText": "QueryProtectedResourceSessionTypes(NodeIndex, m_dProtectedResourceSessionTypeCount[NodeIndex].Count)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(FAILED(m_hStatus = QueryHighestShaderModel()))"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions, OutputMergerLogicOp)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_SHADER_MIN_PRECISION_SUPPORT, m_dOptions, MinPrecisionSupport)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_TILED_RESOURCES_TIER, m_dOptions, TiledResourcesTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_RESOURCE_BINDING_TIER, m_dOptions, ResourceBindingTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions, PSSpecifiedStencilRefSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions, TypedUAVLoadAdditionalFormats)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions, ROVsSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_CONSERVATIVE_RASTERIZATION_TIER, m_dOptions, ConservativeRasterizationTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions, StandardSwizzle64KBSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions, CrossAdapterRowMajorTextureSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions, VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_RESOURCE_HEAP_TIER, m_dOptions, ResourceHeapTier)"
  },
  {
    "label": "CheckFeatureSupport()",
    "kind": "Method",
    "detail": "Function (D3D12_FEATURE_DATA_FORMAT_SUPPORT dFormatSupport ; dFormatSupport . Format = Format ; HRESULT result = m_pDevice ->)",
    "insertText": "CheckFeatureSupport(D3D12_FEATURE_FORMAT_SUPPORT, &dFormatSupport, sizeof(D3D12_FEATURE_DATA_FORMAT_SUPPORT))"
  },
  {
    "label": "CheckFeatureSupport()",
    "kind": "Method",
    "detail": "Function (D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS dMultisampleQualityLevels ; dMultisampleQualityLevels . Format = Format ; dMultisampleQualityLevels . SampleCount = SampleCount ; dMultisampleQualityLevels . Flags = Flags ; HRESULT result = m_pDevice ->)",
    "insertText": "CheckFeatureSupport(D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS, &dMultisampleQualityLevels, sizeof(D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS))"
  },
  {
    "label": "CheckFeatureSupport()",
    "kind": "Method",
    "detail": "Function (D3D12_FEATURE_DATA_FORMAT_INFO dFormatInfo ; dFormatInfo . Format = Format ; HRESULT result = m_pDevice ->)",
    "insertText": "CheckFeatureSupport(D3D12_FEATURE_FORMAT_INFO, &dFormatInfo, sizeof(D3D12_FEATURE_DATA_FORMAT_INFO))"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (PlaneCount = 0 ; } else { PlaneCount = dFormatInfo . PlaneCount ; } return result ; })",
    "insertText": "FEATURE_SUPPORT_GET(UINT, m_dGPUVASupport, MaxGPUVirtualAddressBitsPerProcess)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(UINT, m_dOptions1, WaveLaneCountMin)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(UINT, m_dOptions1, WaveLaneCountMax)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(UINT, m_dOptions1, TotalLaneCount)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions1, ExpandedComputeResourceStates)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions1, Int64ShaderOps)"
  },
  {
    "label": "ProtectedResourceSessionSupport()",
    "kind": "Method",
    "detail": "Function (D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS)",
    "insertText": "ProtectedResourceSessionSupport(UINT NodeIndex)"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NODE_INDEXED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET_NODE_INDEXED(BOOL, m_dArchitecture1, UMA)"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NODE_INDEXED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET_NODE_INDEXED(BOOL, m_dArchitecture1, CacheCoherentUMA)"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NODE_INDEXED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET_NODE_INDEXED(BOOL, m_dArchitecture1, IsolatedMMU)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions2, DepthBoundsTestSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER, m_dOptions2, ProgrammableSamplePositionsTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET_NAME(D3D12_SHADER_CACHE_SUPPORT_FLAGS, m_dShaderCache, SupportFlags, ShaderCacheSupportFlags)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_dCommandQueuePriority . CommandListType = CommandListType ; m_dCommandQueuePriority . Priority = Priority ;)",
    "insertText": "if(FAILED(m_pDevice->CheckFeatureSupport(D3D12_FEATURE_COMMAND_QUEUE_PRIORITY, &m_dCommandQueuePriority, sizeof(D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY))))"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions3, CastingFullyTypedFormatSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_COMMAND_LIST_SUPPORT_FLAGS, m_dOptions3, WriteBufferImmediateSupportFlags)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_VIEW_INSTANCING_TIER, m_dOptions3, ViewInstancingTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions3, BarycentricsSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET_NAME(BOOL, m_dExistingHeaps, Supported, ExistingHeapsSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions4, MSAA64KBAlignedTextureSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER, m_dOptions4, SharedResourceCompatibilityTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions4, Native16BitShaderOpsSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NODE_INDEXED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET_NODE_INDEXED(D3D12_HEAP_SERIALIZATION_TIER, m_dSerialization, HeapSerializationTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET_NAME(BOOL, m_dCrossNode, AtomicShaderInstructions, CrossNodeAtomicShaderInstructions)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions5, SRVOnlyTiledResourceTier3)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_RENDER_PASS_TIER, m_dOptions5, RenderPassesTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_RAYTRACING_TIER, m_dOptions5, RaytracingTier)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 4) FEATURE_SUPPORT_GET(BOOL, m_dDisplayable, DisplayableTexture)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions6, AdditionalShadingRatesSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions6, PerPrimitiveShadingRateSupportedWithViewportIndexing)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_VARIABLE_SHADING_RATE_TIER, m_dOptions6, VariableShadingRateTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(UINT, m_dOptions6, ShadingRateImageTileSize)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions6, BackgroundProcessingSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_MESH_SHADER_TIER, m_dOptions7, MeshShaderTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_SAMPLER_FEEDBACK_TIER, m_dOptions7, SamplerFeedbackTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NODE_INDEXED_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET_NODE_INDEXED_NAME(UINT, m_dProtectedResourceSessionTypeCount, Count, ProtectedResourceSessionTypeCount)"
  },
  {
    "label": "FEATURE_SUPPORT_GET_NODE_INDEXED_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET_NODE_INDEXED_NAME(std::vector<GUID>, m_dProtectedResourceSessionTypes, TypeVec, ProtectedResourceSessionTypes)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 3) FEATURE_SUPPORT_GET(BOOL, m_dOptions8, UnalignedBlockTexturesSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions9, MeshShaderPipelineStatsSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions9, MeshShaderSupportsFullRangeRenderTargetArrayIndex)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions9, AtomicInt64OnTypedResourceSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions9, AtomicInt64OnGroupSharedSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions9, DerivativesInMeshAndAmplificationShadersSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_WAVE_MMA_TIER, m_dOptions9, WaveMMATier)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 4) FEATURE_SUPPORT_GET(BOOL, m_dOptions10, VariableRateShadingSumCombinerSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions10, MeshShaderPerPrimitiveShadingRateSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions11, AtomicInt64OnDescriptorHeapResourceSupported)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 600) FEATURE_SUPPORT_GET(D3D12_TRI_STATE, m_dOptions12, MSPrimitivesPipelineStatisticIncludesCulledPrimitives)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions12, EnhancedBarriersSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions12, RelaxedFormatCastingSupported)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 602) FEATURE_SUPPORT_GET(BOOL, m_dOptions13, UnrestrictedBufferTextureCopyPitchSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions13, UnrestrictedVertexElementAlignmentSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions13, InvertedViewportHeightFlipsYSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions13, InvertedViewportDepthFlipsZSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions13, TextureCopyBetweenDimensionsSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions13, AlphaBlendFactorSupported)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 606) FEATURE_SUPPORT_GET(BOOL, m_dOptions14, AdvancedTextureOpsSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions14, WriteableMSAATexturesSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions14, IndependentFrontAndBackStencilRefMaskSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions15, TriangleFanSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions15, DynamicIndexBufferStripCutSupported)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 608) FEATURE_SUPPORT_GET(BOOL, m_dOptions16, DynamicDepthBiasSupported)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 609) FEATURE_SUPPORT_GET(BOOL, m_dOptions16, GPUUploadHeapSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions17, NonNormalizedCoordinateSamplersSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions17, ManualWriteTrackingResourceSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions18, RenderPassesValid)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 610) FEATURE_SUPPORT_GET(BOOL, m_dOptions19, MismatchingOutputDimensionsSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(UINT, m_dOptions19, SupportedSampleCountsWithNoOutputs)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions19, PointSamplingAddressesNeverRoundUp)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions19, RasterizerDesc2Supported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions19, NarrowQuadrilateralLinesSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(BOOL, m_dOptions19, AnisoFilterWithPointMipSupported)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(UINT, m_dOptions19, MaxSamplerDescriptorHeapSize)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(UINT, m_dOptions19, MaxSamplerDescriptorHeapSizeWithStaticSamplers)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(UINT, m_dOptions19, MaxViewDescriptorHeapSize)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 611) FEATURE_SUPPORT_GET(BOOL, m_dOptions20, ComputeOnlyWriteWatchSupported)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 612) FEATURE_SUPPORT_GET(D3D12_EXECUTE_INDIRECT_TIER, m_dOptions21, ExecuteIndirectTier)"
  },
  {
    "label": "FEATURE_SUPPORT_GET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEATURE_SUPPORT_GET(D3D12_WORK_GRAPHS_TIER, m_dOptions21, WorkGraphsTier)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (HRESULT result ; const D3D_SHADER_MODEL allModelVersions [ ] = { # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 612) D3D_SHADER_MODEL_6_9, #endif #if defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 606) D3D_SHADER_MODEL_6_8, #endif #if defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 3)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (size_t numModelVersions =)",
    "insertText": "sizeof(allModelVersions) / sizeof(D3D_SHADER_MODEL)"
  },
  {
    "label": "CheckFeatureSupport()",
    "kind": "Method",
    "detail": "Function (m_dShaderModel . HighestShaderModel = allModelVersions [ i ] ; result = m_pDevice ->)",
    "insertText": "CheckFeatureSupport(D3D12_FEATURE_SHADER_MODEL, &m_dShaderModel, sizeof(D3D12_FEATURE_DATA_SHADER_MODEL))"
  },
  {
    "label": "D3D_SHADER_MODEL()",
    "kind": "Method",
    "detail": "Function (m_dShaderModel . HighestShaderModel = static_cast<)",
    "insertText": "D3D_SHADER_MODEL(0)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (size_t numRootSignatureVersions =)",
    "insertText": "sizeof(allRootSignatureVersions) / sizeof(D3D_ROOT_SIGNATURE_VERSION)"
  },
  {
    "label": "CheckFeatureSupport()",
    "kind": "Method",
    "detail": "Function (m_dRootSignature . HighestVersion = allRootSignatureVersions [ i ] ; result = m_pDevice ->)",
    "insertText": "CheckFeatureSupport(D3D12_FEATURE_ROOT_SIGNATURE, &m_dRootSignature, sizeof(D3D12_FEATURE_DATA_ROOT_SIGNATURE))"
  },
  {
    "label": "D3D_ROOT_SIGNATURE_VERSION()",
    "kind": "Method",
    "detail": "Function (m_dRootSignature . HighestVersion = static_cast<)",
    "insertText": "D3D_ROOT_SIGNATURE_VERSION(0)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (HRESULT result ; const D3D_FEATURE_LEVEL allLevels [ ] = { # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 3) D3D_FEATURE_LEVEL_12_2, #endif D3D_FEATURE_LEVEL_12_1, D3D_FEATURE_LEVEL_12_0, D3D_FEATURE_LEVEL_11_1, D3D_FEATURE_LEVEL_11_0, D3D_FEATURE_LEVEL_10_1, D3D_FEATURE_LEVEL_10_0, D3D_FEATURE_LEVEL_9_3, D3D_FEATURE_LEVEL_9_2, D3D_FEATURE_LEVEL_9_1, #if defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 5) D3D_FEATURE_LEVEL_1_0_CORE, #endif #if defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 611)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (D3D12_FEATURE_DATA_FEATURE_LEVELS dFeatureLevel ; dFeatureLevel . NumFeatureLevels = static_cast<)",
    "insertText": "UINT(sizeof(allLevels) / sizeof(D3D_FEATURE_LEVEL))"
  },
  {
    "label": "CheckFeatureSupport()",
    "kind": "Method",
    "detail": "Function (dFeatureLevel . pFeatureLevelsRequested = allLevels ; result = m_pDevice ->)",
    "insertText": "CheckFeatureSupport(D3D12_FEATURE_FEATURE_LEVELS, &dFeatureLevel, sizeof(D3D12_FEATURE_DATA_FEATURE_LEVELS))"
  },
  {
    "label": "D3D_FEATURE_LEVEL()",
    "kind": "Method",
    "detail": "Function (m_eMaxFeatureLevel = dFeatureLevel . MaxSupportedFeatureLevel ; } else { m_eMaxFeatureLevel = static_cast<)",
    "insertText": "D3D_FEATURE_LEVEL(0)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (auto& CurrentPRSTypes = m_dProtectedResourceSessionTypes [ NodeIndex ] ; CurrentPRSTypes . NodeIndex = NodeIndex ; CurrentPRSTypes . Count = Count ; CurrentPRSTypes . TypeVec .)",
    "insertText": "resize(CurrentPRSTypes.Count)"
  },
  {
    "label": "data()",
    "kind": "Method",
    "detail": "Function (CurrentPRSTypes . pTypes = CurrentPRSTypes . TypeVec .)",
    "insertText": "data()"
  },
  {
    "label": "CheckFeatureSupport()",
    "kind": "Method",
    "detail": "Function (HRESULT result = m_pDevice ->)",
    "insertText": "CheckFeatureSupport(D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES, &m_dProtectedResourceSessionTypes[NodeIndex], sizeof(D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES))"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (CurrentPRSTypes . TypeVec .)",
    "insertText": "clear()"
  }
]