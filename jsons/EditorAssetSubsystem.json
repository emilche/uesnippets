[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UEditorAssetSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorAssetSubsystem"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "types"
  },
  {
    "label": "UEditorAssetSubsystem()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "UEditorAssetSubsystem()"
  },
  {
    "label": "GetPathNameForLoadedAsset()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPathNameForLoadedAsset(UObject* LoadedAsset)"
  },
  {
    "label": "FindAssetData()",
    "kind": "Method",
    "detail": "Function (FAssetData)",
    "insertText": "FindAssetData(const FString& AssetPath)"
  },
  {
    "label": "DoesAssetExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesAssetExist(const FString& AssetPath)"
  },
  {
    "label": "DoAssetsExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoAssetsExist(const TArray<FString>& AssetPaths)"
  },
  {
    "label": "FindPackageReferencersForAsset()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "FindPackageReferencersForAsset(const FString& AssetPath, bool bLoadAssetsToConfirm = false)"
  },
  {
    "label": "ConsolidateAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConsolidateAssets(UObject* AssetToConsolidateTo, const TArray<UObject*>& AssetsToConsolidate)"
  },
  {
    "label": "DeleteLoadedAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteLoadedAsset(UObject* AssetToDelete)"
  },
  {
    "label": "DeleteLoadedAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteLoadedAssets(const TArray<UObject*>& AssetsToDelete)"
  },
  {
    "label": "DeleteAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteAsset(const FString& AssetPathToDelete)"
  },
  {
    "label": "DeleteDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteDirectory(const FString& DirectoryPath)"
  },
  {
    "label": "DuplicateDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DuplicateDirectory(const FString& SourceDirectoryPath, const FString& DestinationDirectoryPath)"
  },
  {
    "label": "RenameLoadedAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameLoadedAsset(UObject* SourceAsset, const FString& DestinationAssetPath)"
  },
  {
    "label": "RenameAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameAsset(const FString& SourceAssetPath, const FString& DestinationAssetPath)"
  },
  {
    "label": "RenameDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameDirectory(const FString& SourceDirectoryPath, const FString& DestinationDirectoryPath)"
  },
  {
    "label": "SetDirtyFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDirtyFlag(UObject* Object, const bool bDirtyState)"
  },
  {
    "label": "CheckoutLoadedAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckoutLoadedAsset(UObject* AssetToCheckout)"
  },
  {
    "label": "CheckoutLoadedAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckoutLoadedAssets(const TArray<UObject*>& AssetsToCheckout)"
  },
  {
    "label": "CheckoutAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckoutAsset(const FString& AssetToCheckout)"
  },
  {
    "label": "CheckoutDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckoutDirectory(const FString& DirectoryPath, bool bRecursive = true)"
  },
  {
    "label": "SaveLoadedAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveLoadedAsset(UObject* AssetToSave, bool bOnlyIfIsDirty = true)"
  },
  {
    "label": "SaveLoadedAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveLoadedAssets(const TArray<UObject*>& AssetsToSave, bool bOnlyIfIsDirty = true)"
  },
  {
    "label": "SaveAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveAsset(const FString& AssetToSave, bool bOnlyIfIsDirty = true)"
  },
  {
    "label": "GetAssetFilenameLengthForCooking()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAssetFilenameLengthForCooking(const FString& AssetPath)"
  },
  {
    "label": "GetLoadedAssetFilenameLengthForCooking()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLoadedAssetFilenameLengthForCooking(const UObject* Asset)"
  },
  {
    "label": "SaveDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveDirectory(const FString& DirectoryPath, bool bOnlyIfIsDirty = true, bool bRecursive = true)"
  },
  {
    "label": "DoesDirectoryExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesDirectoryExist(const FString& DirectoryPath)"
  },
  {
    "label": "DoesDirectoryContainAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesDirectoryContainAssets(const FString& DirectoryPath, bool bRecursive = true)"
  },
  {
    "label": "MakeDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MakeDirectory(const FString& DirectoryPath)"
  },
  {
    "label": "ListAssets()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "ListAssets(const FString& DirectoryPath, bool bRecursive = true, bool bIncludeFolder = false)"
  },
  {
    "label": "ListAssetsByTagValue()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "ListAssetsByTagValue(FName TagName, const FString& TagValue)"
  },
  {
    "label": "GetTagValues()",
    "kind": "Method",
    "detail": "Function (FString>)",
    "insertText": "GetTagValues(const FString& AssetPath)"
  },
  {
    "label": "GetMetadataTagValues()",
    "kind": "Method",
    "detail": "Function (FString>)",
    "insertText": "GetMetadataTagValues(UObject* Object)"
  },
  {
    "label": "GetMetadataTag()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetMetadataTag(UObject* Object, FName Tag)"
  },
  {
    "label": "SetMetadataTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMetadataTag(UObject* Object, FName Tag, const FString& Value)"
  },
  {
    "label": "RemoveMetadataTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMetadataTag(UObject* Object, FName Tag)"
  },
  {
    "label": "AddOnExtractAssetFromFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOnExtractAssetFromFile(FOnExtractAssetFromFileDynamic Delegate)"
  },
  {
    "label": "RemoveOnExtractAssetFromFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveOnExtractAssetFromFile(FOnExtractAssetFromFileDynamic Delegate)"
  },
  {
    "label": "GetAllAssetsByMetaDataTags()",
    "kind": "Method",
    "detail": "Function (TArray<FAssetData>)",
    "insertText": "GetAllAssetsByMetaDataTags(const TSet<FName>& RequiredTags, const TSet<UClass*>& AllowedClasses)"
  },
  {
    "label": "CallOnExtractAssetFromFileDynamicArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallOnExtractAssetFromFileDynamicArray(const TArray<FString>& Files,\n\t\tTArray<FAssetData>& InAssetDataArray)"
  }
]