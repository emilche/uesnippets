[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UEditorAssetSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorAssetSubsystem"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AssetRegistry / AssetData . h \" # include \" EditorSubsystem . h \" # include \" EditorAssetSubsystem . generated . h \")",
    "insertText": "UENUM(BlueprintType, DisplayName = \"Sort Order\")"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (Ascending,Descending } ;)",
    "insertText": "UENUM(BlueprintType, DisplayName = \"Meta Data Sort Type\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (String,Numeric,DateTime } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UNREALED_API UEditorAssetSubsystem()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSubsystemCollectionBase& Collection)"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnExtractAssetFromFile, const TArray<FString>& Files, TArray<FAssetData>& AssetDataArray)"
  },
  {
    "label": "DECLARE_DYNAMIC_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_DELEGATE_TwoParams(FOnExtractAssetFromFileDynamic, const TArray<FString>&, Files, TArray<FAssetData>&, AssetDataArray)"
  },
  {
    "label": "GetOnExtractAssetFromFile()",
    "kind": "Method",
    "detail": "Function (FOnExtractAssetFromFile&)",
    "insertText": "GetOnExtractAssetFromFile()"
  },
  {
    "label": "CallOnExtractAssetFromFileDynamicArray()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CallOnExtractAssetFromFileDynamicArray(const TArray<FString>& Files, TArray<FAssetData>& InAssetDataArray)"
  }
]