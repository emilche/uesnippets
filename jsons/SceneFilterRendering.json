[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTesselatedScreenRectangleIndexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTesselatedScreenRectangleIndexBuffer"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RenderResource . h \" # include \" RendererInterface . h \" # include \" ShaderParameters . h \" # include \" Shader . h \" # include \" PostProcess / SceneRenderTargets . h \" # include \" ShaderParameterUtils . h \" # include \" SceneRenderTargetParameters . h \" enum class EStereoscopicPass ;)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FDrawRectangleParameters, ) SHADER_PARAMETER( FVector4f, PosScaleBias ) SHADER_PARAMETER( FVector4f, UVScaleBias ) SHADER_PARAMETER( FVector4f, InvTargetSizeAndTextureSize ) END_GLOBAL_SHADER_PARAMETER_STRUCT() extern RENDERER_API void DrawRectangle( FRHICommandList& RHICmdList, float X, float Y, float SizeX, float SizeY, float U, float V, float SizeU, float SizeV, FIntPoint TargetSize, FIntPoint TextureSize, const TShaderRef<FShader>& VertexShader, EDrawRectangleFlags Flags = EDRF_Default, uint32 InstanceCount = 1)"
  },
  {
    "label": "DrawTransformedRectangle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawTransformedRectangle(FRHICommandList& RHICmdList, float X, float Y, float SizeX, float SizeY, const FMatrix& PosTransform, float U, float V, float SizeU, float SizeV, const FMatrix& TexTransform, FIntPoint TargetSize, FIntPoint TextureSize)"
  },
  {
    "label": "DrawHmdMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawHmdMesh(FRHICommandList& RHICmdList, float X, float Y, float SizeX, float SizeY, float U, float V, float SizeU, float SizeV, FIntPoint TargetSize, FIntPoint TextureSize, EStereoscopicPass StereoView, const TShaderRef<FShader>& VertexShader, int32 InstanceCount = 1)"
  },
  {
    "label": "DrawPostProcessPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawPostProcessPass(FRHICommandList& RHICmdList, float X, float Y, float SizeX, float SizeY, float U, float V, float SizeU, float SizeV, FIntPoint TargetSize, FIntPoint TextureSize, const TShaderRef<FShader>& VertexShader, int32 StereoViewIndex, bool bHasCustomMesh, EDrawRectangleFlags Flags = EDRF_Default, int32 InstanceCount = 1)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (class FTesselatedScreenRectangleIndexBuffer : public FIndexBuffer { public : const uint32 Width = 3 2 ; const uint32 Height = 2 0 ; void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "NumVertices()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "NumVertices()"
  },
  {
    "label": "NumPrimitives()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "NumPrimitives()"
  }
]