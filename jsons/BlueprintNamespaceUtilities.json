[
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "GetAssetNamespace()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" Misc / CoreMiscDefines . h \" # include \" UObject / SoftObjectPath . h \" class FProperty ; class UBlueprint ; class UObject ; class UStruct ; struct FAssetData ; enum class EDefaultBlueprintNamespaceType { DefaultToGlobalNamespace,UsePackagePathAsDefaultNamespace,} ; struct FBlueprintNamespaceUtilities { public : FString)",
    "insertText": "GetAssetNamespace(const FAssetData& InAssetData)"
  },
  {
    "label": "GetObjectNamespace()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetObjectNamespace(const UObject* InObject)"
  },
  {
    "label": "GetObjectNamespace()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetObjectNamespace(const FSoftObjectPath& InObjectPath)"
  },
  {
    "label": "GetPropertyValueNamespaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPropertyValueNamespaces(const FProperty* InProperty, const void* InContainer, TSet<FString>& OutNamespaces)"
  },
  {
    "label": "GetPropertyValueNamespaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPropertyValueNamespaces(InProperty, InContainer, OutNamespaces)"
  },
  {
    "label": "GetSharedGlobalImports()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetSharedGlobalImports(TSet<FString>& OutNamespaces)"
  },
  {
    "label": "GetDefaultImportsForObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDefaultImportsForObject(const UObject* InObject, TSet<FString>& OutNamespaces)"
  },
  {
    "label": "SetDefaultBlueprintNamespaceType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultBlueprintNamespaceType(EDefaultBlueprintNamespaceType InType)"
  },
  {
    "label": "GetDefaultBlueprintNamespaceType()",
    "kind": "Method",
    "detail": "Function (EDefaultBlueprintNamespaceType)",
    "insertText": "GetDefaultBlueprintNamespaceType()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnDefaultBlueprintNamespaceTypeChanged)"
  },
  {
    "label": "OnDefaultBlueprintNamespaceTypeChanged()",
    "kind": "Method",
    "detail": "Function (FOnDefaultBlueprintNamespaceTypeChanged&)",
    "insertText": "OnDefaultBlueprintNamespaceTypeChanged()"
  },
  {
    "label": "RefreshBlueprintEditorFeatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshBlueprintEditorFeatures()"
  },
  {
    "label": "ConvertPackagePathToNamespacePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertPackagePathToNamespacePath(const FString& InPackagePath, FString& OutNamespacePath)"
  }
]