[
  {
    "label": "FProceduralFoliageBroadphase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProceduralFoliageBroadphase"
  },
  {
    "label": "FProceduralFoliageBroadphase()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ProceduralFoliageInstance . h \" # include \" GenericQuadTree . h \" class FProceduralFoliageBroadphase { public :)",
    "insertText": "FProceduralFoliageBroadphase(float TileSize = 0.f, float MinimumQuadTreeSize = 100.f)"
  },
  {
    "label": "FProceduralFoliageBroadphase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FProceduralFoliageBroadphase(const FProceduralFoliageBroadphase& OtherBroadphase)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FProceduralFoliageBroadphase&)",
    "insertText": "operator(const FProceduralFoliageBroadphase& OtherBroadphase)"
  },
  {
    "label": "TestAgainstAABB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestAgainstAABB(FProceduralFoliageInstance* Instance)"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Insert(FProceduralFoliageInstance* Instance)"
  },
  {
    "label": "GetOverlaps()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetOverlaps(FProceduralFoliageInstance* Instance, TArray<FProceduralFoliageOverlap>& Overlaps)"
  },
  {
    "label": "GetInstancesInBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstancesInBox(const FBox2D& Box, TArray<FProceduralFoliageInstance*>& Instances)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FProceduralFoliageInstance* Instance)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  }
]