[
  {
    "label": "SYMS_CoffHeaderBigObj",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_CoffHeaderBigObj"
  },
  {
    "label": "SYMS_CoffSymbol16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_CoffSymbol16"
  },
  {
    "label": "SYMS_CoffSymbol32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_CoffSymbol32"
  },
  {
    "label": "SYMS_CoffReloc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_CoffReloc"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# ifndef SYMS_COFF_H # define SYMS_COFF_H # include \" syms / core / generated / syms_meta_coff . h \" # define SYMS_COFF_MIN_BIG_OBJ_VERSION 2 SYMS_GLOBAL SYMS_U8 syms_coff_big_obj_magic [ ] = { 0 xC7,0 xA1,0 xBA,0 xD1,0 xEE,0 xBA,0 xA9,0 x4B,0 xAF,0 x20,0 xFA,0 xF6,0 x6A,0 xA4,0 xDC,0 xB8,} ; typedef struct SYMS_CoffHeaderBigObj { SYMS_U16 sig1 ; SYMS_U16 sig2 ; SYMS_U16 version ; SYMS_U16 machine ; SYMS_U32 time_stamp ; SYMS_U8 magic [ 1 6 ] ; SYMS_U32 unused [ 4 ] ; SYMS_U32 section_count ; SYMS_U32 pointer_to_symbol_table ; SYMS_U32 number_of_symbols ; } SYMS_CoffHeaderBigObj ; # pragma)",
    "insertText": "pack(push, 1) #define SYMS_COFF_SYMBOL_UNDEFINED_SECTION 0 #define SYMS_COFF_SYMBOL_ABS_SECTION ((SYMS_U32)-1) #define SYMS_COFF_SYMBOL_DEBUG_SECTION ((SYMS_U32)-2) #define SYMS_COFF_SYMBOL_ABS_SECTION_16 ((SYMS_U16)-1) #define SYMS_COFF_SYMBOL_DEBUG_SECTION_16 ((SYMS_U16)-2)"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (SYMS_U8 short_name [ 8 ] ; struct { SYMS_U32 zeroes ; SYMS_U32 string_table_offset ; } long_name ; } SYMS_CoffSymbolName ; typedef struct SYMS_CoffSymbol16 { SYMS_CoffSymbolName name ; SYMS_U32 value ; SYMS_U16 section_number ; union { struct { SYMS_CoffSymDType msb ; SYMS_CoffSymType lsb ; } u ; SYMS_U16 v ; } type ; SYMS_CoffSymStorageClass storage_class ; SYMS_U8 aux_symbol_count ; } SYMS_CoffSymbol16 ; typedef struct SYMS_CoffSymbol32 { SYMS_CoffSymbolName name ; SYMS_U32 value ; SYMS_U32 section_number ; union { struct { SYMS_CoffSymDType msb ; SYMS_CoffSymType lsb ; } u ; SYMS_U16 v ; } type ; SYMS_CoffSymStorageClass storage_class ; SYMS_U8 aux_symbol_count ; } SYMS_CoffSymbol32 ; typedef struct SYMS_CoffReloc { SYMS_U32 apply_off ; SYMS_U32 isymbol ; SYMS_U16 type ; } SYMS_CoffReloc ; # pragma)",
    "insertText": "pack(pop) SYMS_API void syms_coff_symbol32_from_coff_symbol16(SYMS_CoffSymbol32 *sym32, SYMS_CoffSymbol16 *sym16)"
  }
]