[
  {
    "label": "IDocumentationPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDocumentationPage"
  },
  {
    "label": "SBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBox"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "DOCUMENTATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DOCUMENTATION_API"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Margin . h \" # include \" Math / Color . h \" # include \" Misc / Attribute . h \" # include \" Styling / SlateColor . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SBoxPanel . h \" class IDocumentationPage ; class SBox ; class SVerticalBox ; class SWidget ; struct FGeometry ; class SDocumentationToolTip : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SDocumentationToolTip ) : _Text() , _Shortcut() , _Style( TEXT(\"Documentation.SDocumentationTooltip\") ) , _SubduedStyle( TEXT(\"Documentation.SDocumentationTooltipSubdued\") ) , _HyperlinkTextStyle( TEXT(\"Documentation.SDocumentationTooltipHyperlinkText\") ) , _HyperlinkButtonStyle( TEXT(\"Documentation.SDocumentationTooltipHyperlinkButton\") ) , _ColorAndOpacity( FLinearColor::Black ) , _AddDocumentation( true ) , _DocumentationMargin(0) , _OverrideExtendedToolTipContent(nullptr) , _Content()"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FText, Text ) SLATE_ATTRIBUTE(FText, Shortcut) SLATE_ARGUMENT( FName, Style ) SLATE_ARGUMENT( FName, SubduedStyle ) SLATE_ARGUMENT( FName, HyperlinkTextStyle ) SLATE_ARGUMENT( FName, HyperlinkButtonStyle ) SLATE_ATTRIBUTE( FSlateColor, ColorAndOpacity ) SLATE_ARGUMENT( bool, AddDocumentation ) SLATE_ARGUMENT( FMargin, DocumentationMargin ) SLATE_ARGUMENT( FString, DocumentationLink ) SLATE_ARGUMENT( FString, ExcerptName ) SLATE_ARGUMENT(TSharedPtr<SWidget>, OverrideExtendedToolTipContent) SLATE_DEFAULT_SLOT( FArguments, Content ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "IsInteractive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInteractive()"
  },
  {
    "label": "GetTextTooltip()",
    "kind": "Method",
    "detail": "Function (const FText&)",
    "insertText": "GetTextTooltip()"
  },
  {
    "label": "AddDocumentation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddDocumentation(TSharedPtr< SVerticalBox > VerticalBox)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float LayoutScaleMultiplier)"
  },
  {
    "label": "GetOverriddenFullToolTipVisibility()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "GetOverriddenFullToolTipVisibility()"
  },
  {
    "label": "ConstructSimpleTipContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructSimpleTipContent()"
  },
  {
    "label": "ConstructFullTipContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructFullTipContent()"
  },
  {
    "label": "ReloadDocumentation()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ReloadDocumentation()"
  },
  {
    "label": "CreateExcerpt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateExcerpt(FString FileSource, FString ExcerptName)"
  },
  {
    "label": "GetFullTipVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFullTipVisibility()"
  },
  {
    "label": "GetPromptVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetPromptVisibility()"
  },
  {
    "label": "GetControlVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetControlVisibility()"
  },
  {
    "label": "GetShortcutVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetShortcutVisibility()"
  },
  {
    "label": "GetSimpleTipBorderStyle()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetSimpleTipBorderStyle()"
  }
]