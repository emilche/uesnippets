[
  {
    "label": "InitChunkConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InitChunkConfig"
  },
  {
    "label": "InitChunk",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InitChunk"
  },
  {
    "label": "InitChunk()",
    "kind": "Method",
    "detail": "Function (# ifndef NET_DCSCTP_PACKET_CHUNK_INIT_CHUNK_H_ # define NET_DCSCTP_PACKET_CHUNK_INIT_CHUNK_H_ # include<stddef . h> # include<stdint . h> # include<string> # include<utility> # include<vector> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" # include \" net / dcsctp / packet / chunk / chunk . h \" # include \" net / dcsctp / packet / parameter / parameter . h \" # include \" net / dcsctp / packet / tlv_trait . h \" namespace dcsctp { struct InitChunkConfig : ChunkConfig { int kType = 1 ; size_t kHeaderSize = 2 0 ; size_t kVariableLengthAlignment = 1 ; } ; class InitChunk : public Chunk,public TLVTrait<InitChunkConfig> { public : int kType = InitChunkConfig::kType ;)",
    "insertText": "InitChunk(VerificationTag initiate_tag, uint32_t a_rwnd, uint16_t nbr_outbound_streams, uint16_t nbr_inbound_streams, TSN initial_tsn, Parameters parameters) : initiate_tag_(initiate_tag), a_rwnd_(a_rwnd), nbr_outbound_streams_(nbr_outbound_streams), nbr_inbound_streams_(nbr_inbound_streams), initial_tsn_(initial_tsn), parameters_(std::move(parameters))"
  },
  {
    "label": "InitChunk()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "InitChunk(InitChunk&& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InitChunk&)",
    "insertText": "operator(InitChunk&& other)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (absl::optional<InitChunk>)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data)"
  },
  {
    "label": "SerializeTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeTo(std::vector<uint8_t>& out)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "ToString()"
  },
  {
    "label": "initiate_tag()",
    "kind": "Method",
    "detail": "Function (VerificationTag)",
    "insertText": "initiate_tag()"
  }
]