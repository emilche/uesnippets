[
  {
    "label": "FAlignedBlockBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAlignedBlockBuffer"
  },
  {
    "label": "FAlignedBlockBuffer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BufferVectorOperations . h \" namespace Audio { class FAlignedBlockBuffer { public :)",
    "insertText": "FAlignedBlockBuffer(int32 InSampleCapacity=8192, int32 InMaxNumInspectSamples=1024, uint32 InByteAlignment=AUDIO_SIMD_BYTE_ALIGNMENT, uint32 InAllocByteAlignment=AUDIO_BUFFER_ALIGNMENT)"
  },
  {
    "label": "FAlignedBlockBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FAlignedBlockBuffer() throw()"
  },
  {
    "label": "GetSampleCapacity()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSampleCapacity()"
  },
  {
    "label": "GetNumAvailable()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumAvailable()"
  },
  {
    "label": "AddZeros()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddZeros(int32 InNum)"
  },
  {
    "label": "AddSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSamples(const float* InSamples, int32 InNum)"
  },
  {
    "label": "RemoveSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSamples(int32 InNum)"
  },
  {
    "label": "ClearSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSamples()"
  },
  {
    "label": "InspectSamples()",
    "kind": "Method",
    "detail": "Function (const float*)",
    "insertText": "InspectSamples(int32 InNum, int32 InOffset=0)"
  },
  {
    "label": "GetMaxNumInspectSamples()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxNumInspectSamples()"
  },
  {
    "label": "SetMaxNumInspectSamples()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SetMaxNumInspectSamples(int32 InMax)"
  },
  {
    "label": "AllocateAlignedFloatArray()",
    "kind": "Method",
    "detail": "Function (float*)",
    "insertText": "AllocateAlignedFloatArray(int32 InNum)"
  },
  {
    "label": "FreeFloatArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeFloatArray(float*& Array)"
  },
  {
    "label": "ZeroFloatArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ZeroFloatArray(float* InArray, int32 InNum)"
  },
  {
    "label": "CopyFloatArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFloatArray(float* ToArray, const float* FromArray, int32 InNum)"
  },
  {
    "label": "CheckNumAndIncrementWriteCount()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "CheckNumAndIncrementWriteCount(int32 InNum)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAlignedBlockBuffer&)",
    "insertText": "operator(const FAlignedBlockBuffer& rhs)"
  },
  {
    "label": "FAlignedBlockBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAlignedBlockBuffer(const FAlignedBlockBuffer& CopyBuff)"
  }
]