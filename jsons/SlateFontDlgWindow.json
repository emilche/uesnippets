[
  {
    "label": "FSlateFontDlgWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateFontDlgWindow"
  },
  {
    "label": "GetSampleFont()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ISlateFontDialogModule . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Widgets / Input / STextComboBox . h \" # include<fontconfig . h> # define LOCTEXT_NAMESPACE \" SlateFontDialogNamespace \" class FSlateFontDlgWindow { private : TSharedPtr<SWindow> Window ; TSharedPtr<FString> SelectedFont ; TArray<TSharedPtr<FString>> FontList ; TSharedPtr<FString> SelectedTypeface ; TArray<TSharedPtr<FString>> SelectedTypefaceList ; TMap<FString,TArray<TSharedPtr<FString>>> TypefaceList ; TSharedPtr<STextComboBox> TypefaceDropdown ; TSharedPtr<STextBlock> SampleTextBlock ; TSharedPtr<STextBlock> ColorIconText ; FTextBlockStyle SampleTextStyle ; const uint8 SampleTextSize = 3 6 ; uint8 FontSize = SampleTextSize ; FLinearColor FontColor = FLinearColor::White ; FcFontSet* FontSet ; FSlateFontInfo)",
    "insertText": "GetSampleFont()"
  },
  {
    "label": "LoadFonts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadFonts()"
  },
  {
    "label": "OpenColorPicker()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OpenColorPicker()"
  },
  {
    "label": "FSlateFontDlgWindow()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FSlateFontDlgWindow(bool& OutSuccess)"
  },
  {
    "label": "OpenFontWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenFontWindow(FString& OutFontName, float& OutHeight, EFontImportFlags& OutFlags, bool& OutSuccess)"
  }
]