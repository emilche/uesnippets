[
  {
    "label": "UBreakIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UBreakIterator"
  },
  {
    "label": "u_strlen()",
    "kind": "Method",
    "detail": "Function (# ifndef USTRING_H # define USTRING_H # include \" unicode / utypes . h \" # include \" unicode / putil . h \" # include \" unicode / uiter . h \" # ifndef UBRK_TYPEDEF_UBREAK_ITERATOR # define UBRK_TYPEDEF_UBREAK_ITERATOR typedef struct UBreakIterator UBreakIterator ; # endif U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strlen(const UChar *s)"
  },
  {
    "label": "u_countChar32()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_countChar32(const UChar *s, int32_t length)"
  },
  {
    "label": "u_strHasMoreChar32Than()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "u_strHasMoreChar32Than(const UChar *s, int32_t length, int32_t number)"
  },
  {
    "label": "u_strcat()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strcat(UChar *dst, const UChar *src)"
  },
  {
    "label": "u_strncat()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strncat(UChar *dst, const UChar *src, int32_t n)"
  },
  {
    "label": "u_strstr()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strstr(const UChar *s, const UChar *substring)"
  },
  {
    "label": "u_strFindFirst()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strFindFirst(const UChar *s, int32_t length, const UChar *substring, int32_t subLength)"
  },
  {
    "label": "u_strchr()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strchr(const UChar *s, UChar c)"
  },
  {
    "label": "u_strchr32()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strchr32(const UChar *s, UChar32 c)"
  },
  {
    "label": "u_strrstr()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strrstr(const UChar *s, const UChar *substring)"
  },
  {
    "label": "u_strFindLast()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strFindLast(const UChar *s, int32_t length, const UChar *substring, int32_t subLength)"
  },
  {
    "label": "u_strrchr()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strrchr(const UChar *s, UChar c)"
  },
  {
    "label": "u_strrchr32()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strrchr32(const UChar *s, UChar32 c)"
  },
  {
    "label": "u_strpbrk()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strpbrk(const UChar *string, const UChar *matchSet)"
  },
  {
    "label": "u_strcspn()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strcspn(const UChar *string, const UChar *matchSet)"
  },
  {
    "label": "u_strspn()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strspn(const UChar *string, const UChar *matchSet)"
  },
  {
    "label": "u_strtok_r()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strtok_r(UChar *src, const UChar *delim, UChar **saveState)"
  },
  {
    "label": "u_strcmp()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strcmp(const UChar *s1, const UChar *s2)"
  },
  {
    "label": "u_strcmpCodePointOrder()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strcmpCodePointOrder(const UChar *s1, const UChar *s2)"
  },
  {
    "label": "u_strCompare()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strCompare(const UChar *s1, int32_t length1, const UChar *s2, int32_t length2, UBool codePointOrder)"
  },
  {
    "label": "u_strCompareIter()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strCompareIter(UCharIterator *iter1, UCharIterator *iter2, UBool codePointOrder)"
  },
  {
    "label": "u_strCaseCompare()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strCaseCompare(const UChar *s1, int32_t length1, const UChar *s2, int32_t length2, uint32_t options, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strncmp()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strncmp(const UChar *ucs1, const UChar *ucs2, int32_t n)"
  },
  {
    "label": "u_strncmpCodePointOrder()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strncmpCodePointOrder(const UChar *s1, const UChar *s2, int32_t n)"
  },
  {
    "label": "u_strcasecmp()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strcasecmp(const UChar *s1, const UChar *s2, uint32_t options)"
  },
  {
    "label": "u_strncasecmp()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strncasecmp(const UChar *s1, const UChar *s2, int32_t n, uint32_t options)"
  },
  {
    "label": "u_memcasecmp()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_memcasecmp(const UChar *s1, const UChar *s2, int32_t length, uint32_t options)"
  },
  {
    "label": "u_strcpy()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strcpy(UChar *dst, const UChar *src)"
  },
  {
    "label": "u_strncpy()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strncpy(UChar *dst, const UChar *src, int32_t n)"
  },
  {
    "label": "u_uastrcpy()",
    "kind": "Method",
    "detail": "Function (# if ! UCONFIG_NO_CONVERSION U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_uastrcpy(UChar *dst, const char *src)"
  },
  {
    "label": "u_uastrncpy()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_uastrncpy(UChar *dst, const char *src, int32_t n)"
  },
  {
    "label": "u_austrcpy()",
    "kind": "Method",
    "detail": "Function (U_STABLE char* U_EXPORT2)",
    "insertText": "u_austrcpy(char *dst, const UChar *src)"
  },
  {
    "label": "u_austrncpy()",
    "kind": "Method",
    "detail": "Function (U_STABLE char* U_EXPORT2)",
    "insertText": "u_austrncpy(char *dst, const UChar *src, int32_t n)"
  },
  {
    "label": "u_memcpy()",
    "kind": "Method",
    "detail": "Function (# endif U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_memcpy(UChar *dest, const UChar *src, int32_t count)"
  },
  {
    "label": "u_memmove()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_memmove(UChar *dest, const UChar *src, int32_t count)"
  },
  {
    "label": "u_memset()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_memset(UChar *dest, UChar c, int32_t count)"
  },
  {
    "label": "u_memcmp()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_memcmp(const UChar *buf1, const UChar *buf2, int32_t count)"
  },
  {
    "label": "u_memcmpCodePointOrder()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_memcmpCodePointOrder(const UChar *s1, const UChar *s2, int32_t count)"
  },
  {
    "label": "u_memchr()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_memchr(const UChar *s, UChar c, int32_t count)"
  },
  {
    "label": "u_memchr32()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_memchr32(const UChar *s, UChar32 c, int32_t count)"
  },
  {
    "label": "u_memrchr()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_memrchr(const UChar *s, UChar c, int32_t count)"
  },
  {
    "label": "u_memrchr32()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_memrchr32(const UChar *s, UChar32 c, int32_t count)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(U_DECLARE_UTF16) # define U_STRING_DECL(var, cs, length) static const UChar *var=(const UChar *)U_DECLARE_UTF16(cs) # define U_STRING_INIT(var, cs, length) #elif U_SIZEOF_WCHAR_T==U_SIZEOF_UCHAR && (U_CHARSET_FAMILY==U_ASCII_FAMILY || (U_SIZEOF_UCHAR == 2 && defined(U_WCHAR_IS_UTF16))) # define U_STRING_DECL(var, cs, length) static const UChar var[(length)+1]=L ## cs # define U_STRING_INIT(var, cs, length) #elif U_SIZEOF_UCHAR==1 && U_CHARSET_FAMILY==U_ASCII_FAMILY # define U_STRING_DECL(var, cs, length) static const UChar var[(length)+1]=cs # define U_STRING_INIT(var, cs, length) #else # define U_STRING_DECL(var, cs, length) static UChar var[(length)+1] # define U_STRING_INIT(var, cs, length) u_charsToUChars(cs, var, length+1) #endif U_STABLE int32_t U_EXPORT2 u_unescape(const char *src, UChar *dest, int32_t destCapacity)"
  },
  {
    "label": "UChar()",
    "kind": "Method",
    "detail": "Function (U_CDECL_BEGIN typedef)",
    "insertText": "UChar(U_CALLCONV *UNESCAPE_CHAR_AT)(int32_t offset, void *context)"
  },
  {
    "label": "u_unescapeAt()",
    "kind": "Method",
    "detail": "Function (U_CDECL_END U_STABLE UChar32 U_EXPORT2)",
    "insertText": "u_unescapeAt(UNESCAPE_CHAR_AT charAt, int32_t *offset, int32_t length, void *context)"
  },
  {
    "label": "u_strToUpper()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strToUpper(UChar *dest, int32_t destCapacity, const UChar *src, int32_t srcLength, const char *locale, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToLower()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strToLower(UChar *dest, int32_t destCapacity, const UChar *src, int32_t srcLength, const char *locale, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToTitle()",
    "kind": "Method",
    "detail": "Function (# if ! UCONFIG_NO_BREAK_ITERATION U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strToTitle(UChar *dest, int32_t destCapacity, const UChar *src, int32_t srcLength, UBreakIterator *titleIter, const char *locale, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFoldCase()",
    "kind": "Method",
    "detail": "Function (# endif U_STABLE int32_t U_EXPORT2)",
    "insertText": "u_strFoldCase(UChar *dest, int32_t destCapacity, const UChar *src, int32_t srcLength, uint32_t options, UErrorCode *pErrorCode)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(U_WCHAR_IS_UTF16) || defined(U_WCHAR_IS_UTF32) || !UCONFIG_NO_CONVERSION U_STABLE wchar_t* U_EXPORT2 u_strToWCS(wchar_t *dest, int32_t destCapacity, int32_t *pDestLength, const UChar *src, int32_t srcLength, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromWCS()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strFromWCS(UChar *dest, int32_t destCapacity, int32_t *pDestLength, const wchar_t *src, int32_t srcLength, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToUTF8()",
    "kind": "Method",
    "detail": "Function (# endif U_STABLE char* U_EXPORT2)",
    "insertText": "u_strToUTF8(char *dest, int32_t destCapacity, int32_t *pDestLength, const UChar *src, int32_t srcLength, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromUTF8()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strFromUTF8(UChar *dest, int32_t destCapacity, int32_t *pDestLength, const char *src, int32_t srcLength, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToUTF8WithSub()",
    "kind": "Method",
    "detail": "Function (U_STABLE char* U_EXPORT2)",
    "insertText": "u_strToUTF8WithSub(char *dest, int32_t destCapacity, int32_t *pDestLength, const UChar *src, int32_t srcLength, UChar32 subchar, int32_t *pNumSubstitutions, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromUTF8WithSub()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strFromUTF8WithSub(UChar *dest, int32_t destCapacity, int32_t *pDestLength, const char *src, int32_t srcLength, UChar32 subchar, int32_t *pNumSubstitutions, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromUTF8Lenient()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strFromUTF8Lenient(UChar *dest, int32_t destCapacity, int32_t *pDestLength, const char *src, int32_t srcLength, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToUTF32()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar32* U_EXPORT2)",
    "insertText": "u_strToUTF32(UChar32 *dest, int32_t destCapacity, int32_t *pDestLength, const UChar *src, int32_t srcLength, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromUTF32()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strFromUTF32(UChar *dest, int32_t destCapacity, int32_t *pDestLength, const UChar32 *src, int32_t srcLength, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToUTF32WithSub()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar32* U_EXPORT2)",
    "insertText": "u_strToUTF32WithSub(UChar32 *dest, int32_t destCapacity, int32_t *pDestLength, const UChar *src, int32_t srcLength, UChar32 subchar, int32_t *pNumSubstitutions, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromUTF32WithSub()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strFromUTF32WithSub(UChar *dest, int32_t destCapacity, int32_t *pDestLength, const UChar32 *src, int32_t srcLength, UChar32 subchar, int32_t *pNumSubstitutions, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToJavaModifiedUTF8()",
    "kind": "Method",
    "detail": "Function (U_STABLE char* U_EXPORT2)",
    "insertText": "u_strToJavaModifiedUTF8(char *dest, int32_t destCapacity, int32_t *pDestLength, const UChar *src, int32_t srcLength, UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromJavaModifiedUTF8WithSub()",
    "kind": "Method",
    "detail": "Function (U_STABLE UChar* U_EXPORT2)",
    "insertText": "u_strFromJavaModifiedUTF8WithSub(UChar *dest, int32_t destCapacity, int32_t *pDestLength, const char *src, int32_t srcLength, UChar32 subchar, int32_t *pNumSubstitutions, UErrorCode *pErrorCode)"
  }
]