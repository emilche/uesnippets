[
  {
    "label": "UBreakIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UBreakIterator"
  },
  {
    "label": "u_strlen()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strlen(const UChar *s)"
  },
  {
    "label": "u_countChar32()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_countChar32(const UChar *s, int32_t length)"
  },
  {
    "label": "u_strHasMoreChar32Than()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strHasMoreChar32Than(const UChar *s, int32_t length, int32_t number)"
  },
  {
    "label": "u_strcat()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strcat(UChar     *dst, \n    const UChar     *src)"
  },
  {
    "label": "u_strncat()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strncat(UChar     *dst, \n     const UChar     *src, \n     int32_t     n)"
  },
  {
    "label": "u_strstr()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strstr(const UChar *s, const UChar *substring)"
  },
  {
    "label": "u_strFindFirst()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strFindFirst(const UChar *s, int32_t length, const UChar *substring, int32_t subLength)"
  },
  {
    "label": "u_strchr()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strchr(const UChar *s, UChar c)"
  },
  {
    "label": "u_strchr32()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strchr32(const UChar *s, UChar32 c)"
  },
  {
    "label": "u_strrstr()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strrstr(const UChar *s, const UChar *substring)"
  },
  {
    "label": "u_strFindLast()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strFindLast(const UChar *s, int32_t length, const UChar *substring, int32_t subLength)"
  },
  {
    "label": "u_strrchr()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strrchr(const UChar *s, UChar c)"
  },
  {
    "label": "u_strrchr32()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strrchr32(const UChar *s, UChar32 c)"
  },
  {
    "label": "u_strpbrk()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strpbrk(const UChar *string, const UChar *matchSet)"
  },
  {
    "label": "u_strcspn()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strcspn(const UChar *string, const UChar *matchSet)"
  },
  {
    "label": "u_strspn()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strspn(const UChar *string, const UChar *matchSet)"
  },
  {
    "label": "u_strtok_r()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strtok_r(UChar    *src, \n     const UChar    *delim,\n           UChar   **saveState)"
  },
  {
    "label": "u_strcmp()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strcmp(const UChar     *s1, \n         const UChar     *s2)"
  },
  {
    "label": "u_strcmpCodePointOrder()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strcmpCodePointOrder(const UChar *s1, const UChar *s2)"
  },
  {
    "label": "u_strCompare()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strCompare(const UChar *s1, int32_t length1,\n             const UChar *s2, int32_t length2,\n             UBool codePointOrder)"
  },
  {
    "label": "u_strCompareIter()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strCompareIter(UCharIterator *iter1, UCharIterator *iter2, UBool codePointOrder)"
  },
  {
    "label": "u_strCaseCompare()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strCaseCompare(const UChar *s1, int32_t length1,\n                 const UChar *s2, int32_t length2,\n                 uint32_t options,\n                 UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strncmp()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strncmp(const UChar     *ucs1, \n     const UChar     *ucs2, \n     int32_t     n)"
  },
  {
    "label": "u_strncmpCodePointOrder()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strncmpCodePointOrder(const UChar *s1, const UChar *s2, int32_t n)"
  },
  {
    "label": "u_strcasecmp()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strcasecmp(const UChar *s1, const UChar *s2, uint32_t options)"
  },
  {
    "label": "u_strncasecmp()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strncasecmp(const UChar *s1, const UChar *s2, int32_t n, uint32_t options)"
  },
  {
    "label": "u_memcasecmp()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_memcasecmp(const UChar *s1, const UChar *s2, int32_t length, uint32_t options)"
  },
  {
    "label": "u_strcpy()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strcpy(UChar     *dst, \n    const UChar     *src)"
  },
  {
    "label": "u_strncpy()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strncpy(UChar     *dst, \n     const UChar     *src, \n     int32_t     n)"
  },
  {
    "label": "u_uastrcpy()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_uastrcpy(UChar *dst,\n               const char *src )"
  },
  {
    "label": "u_uastrncpy()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_uastrncpy(UChar *dst,\n            const char *src,\n            int32_t n)"
  },
  {
    "label": "u_austrcpy()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_austrcpy(char *dst,\n            const UChar *src )"
  },
  {
    "label": "u_austrncpy()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_austrncpy(char *dst,\n            const UChar *src,\n            int32_t n )"
  },
  {
    "label": "u_memcpy()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_memcpy(UChar *dest, const UChar *src, int32_t count)"
  },
  {
    "label": "u_memmove()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_memmove(UChar *dest, const UChar *src, int32_t count)"
  },
  {
    "label": "u_memset()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_memset(UChar *dest, UChar c, int32_t count)"
  },
  {
    "label": "u_memcmp()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_memcmp(const UChar *buf1, const UChar *buf2, int32_t count)"
  },
  {
    "label": "u_memcmpCodePointOrder()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_memcmpCodePointOrder(const UChar *s1, const UChar *s2, int32_t count)"
  },
  {
    "label": "u_memchr()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_memchr(const UChar *s, UChar c, int32_t count)"
  },
  {
    "label": "u_memchr32()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_memchr32(const UChar *s, UChar32 c, int32_t count)"
  },
  {
    "label": "u_memrchr()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_memrchr(const UChar *s, UChar c, int32_t count)"
  },
  {
    "label": "u_memrchr32()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_memrchr32(const UChar *s, UChar32 c, int32_t count)"
  },
  {
    "label": "u_strcmp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "u_strcmp(ustringVar1, ustringVar2)"
  },
  {
    "label": "u_unescape()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_unescape(const char *src,\n           UChar *dest, int32_t destCapacity)"
  },
  {
    "label": "u_unescapeAt()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_unescapeAt(UNESCAPE_CHAR_AT charAt,\n             int32_t *offset,\n             int32_t length,\n             void *context)"
  },
  {
    "label": "u_strToUpper()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strToUpper(UChar *dest, int32_t destCapacity,\n             const UChar *src, int32_t srcLength,\n             const char *locale,\n             UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToLower()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strToLower(UChar *dest, int32_t destCapacity,\n             const UChar *src, int32_t srcLength,\n             const char *locale,\n             UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToTitle()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strToTitle(UChar *dest, int32_t destCapacity,\n             const UChar *src, int32_t srcLength,\n             UBreakIterator *titleIter,\n             const char *locale,\n             UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFoldCase()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strFoldCase(UChar *dest, int32_t destCapacity,\n              const UChar *src, int32_t srcLength,\n              uint32_t options,\n              UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToWCS()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strToWCS(wchar_t *dest, \n           int32_t destCapacity,\n           int32_t *pDestLength,\n           const UChar *src, \n           int32_t srcLength,\n           UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromWCS()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strFromWCS(UChar   *dest,\n             int32_t destCapacity, \n             int32_t *pDestLength,\n             const wchar_t *src,\n             int32_t srcLength,\n             UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToUTF8()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strToUTF8(char *dest,           \n            int32_t destCapacity,\n            int32_t *pDestLength,\n            const UChar *src, \n            int32_t srcLength,\n            UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromUTF8()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strFromUTF8(UChar *dest,             \n              int32_t destCapacity,\n              int32_t *pDestLength,\n              const char *src, \n              int32_t srcLength,\n              UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToUTF8WithSub()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strToUTF8WithSub(char *dest,\n            int32_t destCapacity,\n            int32_t *pDestLength,\n            const UChar *src,\n            int32_t srcLength,\n            UChar32 subchar, int32_t *pNumSubstitutions,\n            UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromUTF8WithSub()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strFromUTF8WithSub(UChar *dest,\n              int32_t destCapacity,\n              int32_t *pDestLength,\n              const char *src,\n              int32_t srcLength,\n              UChar32 subchar, int32_t *pNumSubstitutions,\n              UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromUTF8Lenient()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strFromUTF8Lenient(UChar *dest,\n                     int32_t destCapacity,\n                     int32_t *pDestLength,\n                     const char *src,\n                     int32_t srcLength,\n                     UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToUTF32()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strToUTF32(UChar32 *dest, \n             int32_t  destCapacity,\n             int32_t  *pDestLength,\n             const UChar *src, \n             int32_t  srcLength,\n             UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromUTF32()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strFromUTF32(UChar   *dest,\n               int32_t destCapacity, \n               int32_t *pDestLength,\n               const UChar32 *src,\n               int32_t srcLength,\n               UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToUTF32WithSub()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strToUTF32WithSub(UChar32 *dest,\n             int32_t destCapacity,\n             int32_t *pDestLength,\n             const UChar *src,\n             int32_t srcLength,\n             UChar32 subchar, int32_t *pNumSubstitutions,\n             UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromUTF32WithSub()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strFromUTF32WithSub(UChar *dest,\n               int32_t destCapacity,\n               int32_t *pDestLength,\n               const UChar32 *src,\n               int32_t srcLength,\n               UChar32 subchar, int32_t *pNumSubstitutions,\n               UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strToJavaModifiedUTF8()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strToJavaModifiedUTF8(\n        char *dest,\n        int32_t destCapacity,\n        int32_t *pDestLength,\n        const UChar *src, \n        int32_t srcLength,\n        UErrorCode *pErrorCode)"
  },
  {
    "label": "u_strFromJavaModifiedUTF8WithSub()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "u_strFromJavaModifiedUTF8WithSub(\n        UChar *dest,\n        int32_t destCapacity,\n        int32_t *pDestLength,\n        const char *src,\n        int32_t srcLength,\n        UChar32 subchar, int32_t *pNumSubstitutions,\n        UErrorCode *pErrorCode)"
  }
]