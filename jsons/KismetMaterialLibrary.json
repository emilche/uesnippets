[
  {
    "label": "UMaterialParameterCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialParameterCollection"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UKismetMaterialLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UKismetMaterialLibrary"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / EnumClassFlags . h \" # include \" UObject / ObjectMacros . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" KismetMaterialLibrary . generated . h \" class UMaterialParameterCollection ;)",
    "insertText": "UENUM(BlueprintType, meta = (Bitflags, UseEnumValuesAsMaskValuesInEditor = \"true\"))"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (None)",
    "insertText": "UMETA(DisplayName = \"None\"), Transient = 1 << 0 UMETA(DisplayName = \"Transient\")"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(EMIDCreationFlags) UCLASS(MinimalAPI, meta=(ScriptName=\"MaterialLibrary\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintCallable, Category=\"Rendering|Material\", meta=(Keywords=\"SetFloatParameterValue\", WorldContext=\"WorldContextObject\", MaterialParameterCollectionFunction = \"true\")) static ENGINE_API void SetScalarParameterValue(UObject* WorldContextObject, UMaterialParameterCollection* Collection, FName ParameterName, float ParameterValue)"
  }
]