[
  {
    "label": "CADKERNEL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CADKERNEL_API"
  },
  {
    "label": "FBezierSurface()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Core / CADKernelArchive . h \" # include \" Geo / Surfaces / Surface . h \" namespace UE::CADKernel { class FBezierSurface : public FSurface { FEntity ; protected : int32 UDegre ; int32 VDegre ; int32 UPoleNum ; int32 VPoleNum ; TArray<FPoint> Poles ;)",
    "insertText": "FBezierSurface(const double InToleranceGeometric, int32 InUDegre, int32 InVDegre, const TArray<FPoint>& InPoles) : FSurface(InToleranceGeometric) , UDegre(InUDegre) , VDegre(InVDegre) , UPoleNum(InUDegre + 1) , VPoleNum(InVDegre + 1) , Poles(InPoles)"
  },
  {
    "label": "ComputeDefaultMinToleranceIso()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeDefaultMinToleranceIso()"
  },
  {
    "label": "FBezierSurface()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBezierSurface()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Serialize(FCADKernelArchive& Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (Ar<<UDegre ; Ar<<VDegre ; Ar<<UPoleNum ; Ar<<VPoleNum ; Ar .)",
    "insertText": "Serialize(Poles)"
  },
  {
    "label": "GetSurfaceType()",
    "kind": "Method",
    "detail": "Function (} ESurface)",
    "insertText": "GetSurfaceType()"
  },
  {
    "label": "EvaluatePoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluatePoint(const FPoint2D& InSurfacicCoordinate, FSurfacicPoint& OutPoint3D, int32 InDerivativeOrder = 0)"
  },
  {
    "label": "Presample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Presample(const FSurfacicBoundary& InBoundaries, FCoordinateGrid& OutCoordinates)"
  },
  {
    "label": "GetInfo()",
    "kind": "Method",
    "detail": "Function (# ifdef CADKERNEL_DEV FInfoEntity&)",
    "insertText": "GetInfo(FInfoEntity&)"
  }
]