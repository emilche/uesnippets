[
  {
    "label": "ThreadIsLoggingToLogSink()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_LOG_INTERNAL_LOG_SINK_SET_H_ # define ABSL_LOG_INTERNAL_LOG_SINK_SET_H_ # include \" absl / base / config . h \" # include \" absl / log / log_entry . h \" # include \" absl / log / log_sink . h \" # include \" absl / types / span . h \" namespace absl { ABSL_NAMESPACE_BEGIN namespace log_internal { bool)",
    "insertText": "ThreadIsLoggingToLogSink()"
  },
  {
    "label": "LogToSinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogToSinks(const absl::LogEntry& entry, absl::Span<absl::LogSink*> extra_sinks, bool extra_sinks_only)"
  },
  {
    "label": "AddLogSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLogSink(absl::LogSink* sink)"
  },
  {
    "label": "RemoveLogSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLogSink(absl::LogSink* sink)"
  },
  {
    "label": "FlushLogSinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushLogSinks()"
  }
]