[
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FOptionalSize",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionalSize"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FTableRowStyle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTableRowStyle"
  },
  {
    "label": "FEditorViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewModel"
  },
  {
    "label": "IOutlinerExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOutlinerExtension"
  },
  {
    "label": "IRenameableExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRenameableExtension"
  },
  {
    "label": "ISequencerTreeViewRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencerTreeViewRow"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SEQUENCERCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCERCORE_API"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( \n\t\t\tconst FArguments& InArgs, \n\t\t\tTWeakViewModelPtr<IOutlinerExtension> InWeakExtension,\n\t\t\tTWeakPtr<FEditorViewModel> InWeakEditor,\n\t\t\tconst TSharedRef<ISequencerTreeViewRow>& InTableRow )"
  },
  {
    "label": "OnNodeLabelTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNodeLabelTextCommitted(const FText& NewLabel, ETextCommit::Type CommitType)"
  }
]