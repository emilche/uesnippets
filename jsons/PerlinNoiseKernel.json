[
  {
    "label": "ST_DLL_LINK",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ST_DLL_LINK"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Core / ExportBegin . h \" # include \" Core / Array . h \" # include \" Core / Random . h \" # ifdef ST_SETS_PACKING_INTERNALLY # pragma)",
    "insertText": "pack(push, 4)"
  },
  {
    "label": "CPerlinNoiseKernel()",
    "kind": "Method",
    "detail": "Function (class ST_DLL_LINK CPerlinNoiseKernel { public :)",
    "insertText": "CPerlinNoiseKernel(st_int32 nSize = 256)"
  },
  {
    "label": "Kernel()",
    "kind": "Method",
    "detail": "Function (st_float32)",
    "insertText": "Kernel(st_int32 nCol, st_int32 nRow)"
  },
  {
    "label": "BilinearSample()",
    "kind": "Method",
    "detail": "Function (st_float32)",
    "insertText": "BilinearSample(st_float32 x, st_float32 y)"
  }
]