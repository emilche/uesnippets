[
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "UTransformProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTransformProxy"
  },
  {
    "label": "FRelativeObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRelativeObject"
  },
  {
    "label": "FTransformProxyChange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransformProxyChange"
  },
  {
    "label": "FTransformProxyChangeSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransformProxyChangeSource"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BaseGizmos / StateTargets . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" InteractiveToolChange . h \" # include \" Internationalization / Text . h \" # include \" Math / Transform . h \" # include \" Templates / Function . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" TransformProxy . generated . h \" class USceneComponent ;)",
    "insertText": "UCLASS(Transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: INTERACTIVETOOLSFRAMEWORK_API virtual void AddComponent(USceneComponent* Component, bool bModifyComponentOnTransform = true)"
  },
  {
    "label": "AddComponentCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddComponentCustom(USceneComponent* Component, TUniqueFunction<FTransform(void)> GetTransformFunc, TUniqueFunction<void(const FTransform&)> SetTransformFunc, int64 UserDefinedIndex = 0, bool bModifyComponentOnTransform = true)"
  },
  {
    "label": "GetTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetTransform()"
  },
  {
    "label": "SetTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransform(const FTransform& Transform)"
  },
  {
    "label": "BeginTransformEditSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTransformEditSequence()"
  },
  {
    "label": "EndTransformEditSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndTransformEditSequence()"
  },
  {
    "label": "BeginPivotEditSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPivotEditSequence()"
  },
  {
    "label": "EndPivotEditSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPivotEditSequence()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnTransformChanged, UTransformProxy*, FTransform)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnTransformChanged OnTransformChanged ; FOnTransformChanged OnTransformChangedUndoRedo ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnBeginTransformEdit, UTransformProxy*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnBeginTransformEdit OnBeginTransformEdit ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnEndTransformEdit, UTransformProxy*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (FOnEndTransformEdit OnEndTransformEdit ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnPivotChanged, UTransformProxy*, FTransform)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnPivotChanged OnPivotChanged ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnBeginPivotEdit, UTransformProxy*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnBeginPivotEdit OnBeginPivotEdit ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnEndPivotEdit, UTransformProxy*)"
  },
  {
    "label": "FTransform()",
    "kind": "Method",
    "detail": "Function (protected : struct FRelativeObject { TWeakObjectPtr<USceneComponent> Component ; bool bModifyComponentOnTransform ; int64 UserDefinedIndex ; TUniqueFunction<)",
    "insertText": "FTransform(void)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TUniqueFunction<)",
    "insertText": "void(const FTransform&)"
  },
  {
    "label": "UpdateSharedTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSharedTransform()"
  },
  {
    "label": "UpdateObjectTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateObjectTransforms()"
  },
  {
    "label": "UpdateObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateObjects()"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (} ; class FTransformProxyChange : public FToolCommandChange { public : FTransform From ; FTransform To ; bool bSetPivotMode = false ; void)",
    "insertText": "Apply(UObject* Object)"
  },
  {
    "label": "Revert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Revert(UObject* Object)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString()"
  },
  {
    "label": "FTransformProxyChangeSource()",
    "kind": "Method",
    "detail": "Function (} } ; class FTransformProxyChangeSource : public IToolCommandChangeSource { public :)",
    "insertText": "FTransformProxyChangeSource(UTransformProxy* ProxyIn)"
  },
  {
    "label": "FTransformProxyChangeSource()",
    "kind": "Method",
    "detail": "Function (Proxy = ProxyIn ; } ~)",
    "insertText": "FTransformProxyChangeSource()"
  },
  {
    "label": "BeginChange()",
    "kind": "Method",
    "detail": "Function (} TWeakObjectPtr<UTransformProxy> Proxy ; TUniquePtr<FTransformProxyChange> ActiveChange ; void)",
    "insertText": "BeginChange()"
  },
  {
    "label": "EndChange()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FToolCommandChange>)",
    "insertText": "EndChange()"
  },
  {
    "label": "GetChangeTarget()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetChangeTarget()"
  },
  {
    "label": "GetChangeDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetChangeDescription()"
  }
]