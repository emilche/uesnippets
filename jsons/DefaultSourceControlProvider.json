[
  {
    "label": "FDefaultSourceControlProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDefaultSourceControlProvider"
  },
  {
    "label": "ISourceControlLabel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlLabel"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ISourceControlOperation . h \" # include \" ISourceControlState . h \" # include \" ISourceControlProvider . h \" class FDefaultSourceControlProvider : public ISourceControlProvider { public : void)",
    "insertText": "Init(bool bForceConnection = true)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "GetStatusText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetStatusText()"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (TMap<EStatus,FString>)",
    "insertText": "GetStatus()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FName&)",
    "insertText": "GetName(void)"
  },
  {
    "label": "QueryStateBranchConfig()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QueryStateBranchConfig(const FString& ConfigSrc, const FString& ConfigDest)"
  },
  {
    "label": "GetStateBranchIndex()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetStateBranchIndex(const FString& BranchName)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "GetState(const TArray<FSourceControlChangelistRef>& InChangelists, TArray<FSourceControlChangelistStateRef>& OutState, EStateCacheUsage::Type InStateCacheUsage)"
  },
  {
    "label": "GetCachedStateByPredicate()",
    "kind": "Method",
    "detail": "Function (TArray<FSourceControlStateRef>)",
    "insertText": "GetCachedStateByPredicate(TFunctionRef<bool(const FSourceControlStateRef&)> Predicate)"
  },
  {
    "label": "RegisterSourceControlStateChanged_Handle()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "RegisterSourceControlStateChanged_Handle(const FSourceControlStateChanged::FDelegate& SourceControlStateChanged)"
  },
  {
    "label": "UnregisterSourceControlStateChanged_Handle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSourceControlStateChanged_Handle(FDelegateHandle Handle)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "Execute(const FSourceControlOperationRef& InOperation, FSourceControlChangelistPtr InChangelist, const TArray<FString>& InFiles, EConcurrency::Type InConcurrency = EConcurrency::Synchronous, const FSourceControlOperationComplete& InOperationCompleteDelegate = FSourceControlOperationComplete())"
  },
  {
    "label": "CanExecuteOperation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteOperation(const FSourceControlOperationRef& InOperation)"
  },
  {
    "label": "CanCancelOperation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCancelOperation(const FSourceControlOperationRef& InOperation)"
  },
  {
    "label": "CancelOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelOperation(const FSourceControlOperationRef& InOperation)"
  },
  {
    "label": "UsesLocalReadOnlyState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesLocalReadOnlyState()"
  },
  {
    "label": "UsesChangelists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesChangelists()"
  },
  {
    "label": "UsesUncontrolledChangelists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesUncontrolledChangelists()"
  },
  {
    "label": "UsesCheckout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesCheckout()"
  },
  {
    "label": "UsesFileRevisions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesFileRevisions()"
  },
  {
    "label": "UsesSnapshots()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesSnapshots()"
  },
  {
    "label": "AllowsDiffAgainstDepot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowsDiffAgainstDepot()"
  },
  {
    "label": "IsAtLatestRevision()",
    "kind": "Method",
    "detail": "Function (TOptional<bool>)",
    "insertText": "IsAtLatestRevision()"
  },
  {
    "label": "GetNumLocalChanges()",
    "kind": "Method",
    "detail": "Function (TOptional<int>)",
    "insertText": "GetNumLocalChanges()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "GetLabels()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<class ISourceControlLabel>>)",
    "insertText": "GetLabels(const FString& InMatchingSpec)"
  },
  {
    "label": "GetChangelists()",
    "kind": "Method",
    "detail": "Function (TArray<FSourceControlChangelistRef>)",
    "insertText": "GetChangelists(EStateCacheUsage::Type InStateCacheUsage)"
  },
  {
    "label": "MakeSettingsWidget()",
    "kind": "Method",
    "detail": "Function (# if SOURCE_CONTROL_WITH_SLATE TSharedRef<class SWidget>)",
    "insertText": "MakeSettingsWidget()"
  }
]