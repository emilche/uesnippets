[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IQueuedWorkInternalData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IQueuedWorkInternalData"
  },
  {
    "label": "IQueuedWork",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IQueuedWork"
  },
  {
    "label": "DoNotRunInsideBusyWait()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / RefCounting . h \" enum class EQueuedWorkFlags : uint8 { None,)",
    "insertText": "DoNotRunInsideBusyWait(1 << 0)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(EQueuedWorkFlags)"
  },
  {
    "label": "Retract()",
    "kind": "Method",
    "detail": "Function (class IQueuedWorkInternalData : public FThreadSafeRefCountedObject { public : bool)",
    "insertText": "Retract()"
  },
  {
    "label": "IQueuedWorkInternalData()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "IQueuedWorkInternalData()"
  },
  {
    "label": "DoThreadedWork()",
    "kind": "Method",
    "detail": "Function (} } ; class IQueuedWork { public : void)",
    "insertText": "DoThreadedWork()"
  },
  {
    "label": "Abandon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Abandon()"
  },
  {
    "label": "GetQueuedWorkFlags()",
    "kind": "Method",
    "detail": "Function (EQueuedWorkFlags)",
    "insertText": "GetQueuedWorkFlags()"
  }
]