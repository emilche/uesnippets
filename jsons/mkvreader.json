[
  {
    "label": "MkvReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MkvReader"
  },
  {
    "label": "MkvReader()",
    "kind": "Method",
    "detail": "Function (# ifndef MKVPARSER_MKVREADER_H_ # define MKVPARSER_MKVREADER_H_ # include<cstdio> # include \" mkvparser / mkvparser . h \" namespace mkvparser { class MkvReader : public IMkvReader { public :)",
    "insertText": "MkvReader()"
  },
  {
    "label": "MkvReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MkvReader(FILE* fp)"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Open(const char*)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Read(long long position, long length, unsigned char* buffer)"
  },
  {
    "label": "Length()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Length(long long* total, long long* available)"
  },
  {
    "label": "MkvReader()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "MkvReader(const MkvReader&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MkvReader&)",
    "insertText": "operator(const MkvReader&)"
  },
  {
    "label": "GetFileSize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFileSize()"
  }
]