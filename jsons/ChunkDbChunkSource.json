[
  {
    "label": "IBuildInstallerSharedContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildInstallerSharedContext"
  },
  {
    "label": "IPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPlatform"
  },
  {
    "label": "IFileSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileSystem"
  },
  {
    "label": "IChunkStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkStore"
  },
  {
    "label": "IChunkReferenceTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkReferenceTracker"
  },
  {
    "label": "IChunkDataSerialization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkDataSerialization"
  },
  {
    "label": "IMessagePump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessagePump"
  },
  {
    "label": "IInstallerError",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInstallerError"
  },
  {
    "label": "IChunkDbChunkSourceStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkDbChunkSourceStat"
  },
  {
    "label": "IChunkDbChunkSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkDbChunkSource"
  },
  {
    "label": "FChunkDbSourceConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChunkDbSourceConfig"
  },
  {
    "label": "FChunkDbChunkSourceFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChunkDbChunkSourceFactory"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IChunkDbChunkSource()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Installer / ChunkSource . h \" # include \" Installer / Controllable . h \" # include \" Containers / Set . h \" # include \" Common / SpeedRecorder . h \" class IBuildInstallerSharedContext ; namespace BuildPatchServices { class IPlatform ; class IFileSystem ; class IChunkStore ; class IChunkReferenceTracker ; class IChunkDataSerialization ; class IMessagePump ; class IInstallerError ; class IChunkDbChunkSourceStat ; class IChunkDbChunkSource : public IChunkSource,public IControllable { public : ~)",
    "insertText": "IChunkDbChunkSource()"
  },
  {
    "label": "GetAvailableChunks()",
    "kind": "Method",
    "detail": "Function (} const TSet<FGuid>&)",
    "insertText": "GetAvailableChunks()"
  },
  {
    "label": "GetChunkDbSizesAtIndexes()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetChunkDbSizesAtIndexes(const TArray<FString>& ChunkDbFiles, IFileSystem* FileSystem, const TArray<FGuid>& ChunkAccessOrderedList, const TArray<int32>& FileCompletionIndexes, TArray<uint64>& OutChunkDbSizesAtCompletion)"
  },
  {
    "label": "GetChunkDbSizesAtIndexes()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetChunkDbSizesAtIndexes(const TArray<int32>& FileCompletionIndexes, TArray<uint64>& OutChunkDbSizesAtCompletion)"
  },
  {
    "label": "FChunkDbSourceConfig()",
    "kind": "Method",
    "detail": "Function (} ; struct FChunkDbSourceConfig { TArray<FString> ChunkDbFiles ; int32 PreFetchMinimum = 1 0 ; int32 PreFetchMaximum = 4 0 ; float ChunkDbOpenRetryTime = 5 . 0 f ; bool bBeginLoadsOnFirstGet = true ; IBuildInstallerSharedContext* SharedContext = nullptr ; bool bDeleteChunkDBAfterUse = false ;)",
    "insertText": "FChunkDbSourceConfig(TArray<FString> InChunkDbFiles) : ChunkDbFiles(MoveTemp(InChunkDbFiles))"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} } ; class FChunkDbChunkSourceFactory { public : IChunkDbChunkSource*)",
    "insertText": "Create(FChunkDbSourceConfig Configuration, IPlatform* Platform, IFileSystem* FileSystem, IChunkStore* ChunkStore, IChunkReferenceTracker* ChunkReferenceTracker, IChunkDataSerialization* ChunkDataSerialization, IMessagePump* MessagePump, IInstallerError* InstallerError, IChunkDbChunkSourceStat* ChunkDbChunkSourceStat)"
  },
  {
    "label": "IChunkDbChunkSourceStat()",
    "kind": "Method",
    "detail": "Function (} ; class IChunkDbChunkSourceStat { public : enum class ELoadResult : uint8 { Success = 0,MissingHashInfo,HashCheckFailed,LocationOutOfBounds,SerializationError } ; public : ~)",
    "insertText": "IChunkDbChunkSourceStat()"
  },
  {
    "label": "OnBatchStarted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnBatchStarted(const TArray<FGuid>& ChunkIds)"
  },
  {
    "label": "OnLoadStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadStarted(const FGuid& ChunkId)"
  },
  {
    "label": "OnLoadComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadComplete(const FGuid& ChunkId, ELoadResult Result, const ISpeedRecorder::FRecord& Record)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} ; const TCHAR*)",
    "insertText": "ToString(const IChunkDbChunkSourceStat::ELoadResult& LoadResult)"
  }
]