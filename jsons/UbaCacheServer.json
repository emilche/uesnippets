[
  {
    "label": "NetworkServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkServer"
  },
  {
    "label": "StorageServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StorageServer"
  },
  {
    "label": "BinaryReader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BinaryReader"
  },
  {
    "label": "BinaryWriter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BinaryWriter"
  },
  {
    "label": "CacheEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CacheEntry"
  },
  {
    "label": "CacheEntries",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CacheEntries"
  },
  {
    "label": "ConnectionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConnectionInfo"
  },
  {
    "label": "CacheServerCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CacheServerCreateInfo"
  },
  {
    "label": "CacheServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CacheServer"
  },
  {
    "label": "Bucket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Bucket"
  },
  {
    "label": "LoadStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoadStats"
  },
  {
    "label": "Connection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Connection"
  },
  {
    "label": "ConnectionBucket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConnectionBucket"
  },
  {
    "label": "CacheServerCreateInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UbaHash . h \" # include \" UbaLogger . h \" # include \" UbaStringBuffer . h \" namespace uba { class NetworkServer ; class StorageServer ; struct BinaryReader ; struct BinaryWriter ; struct CacheEntry ; struct CacheEntries ; struct ConnectionInfo ; struct CacheServerCreateInfo {)",
    "insertText": "CacheServerCreateInfo(StorageServer& s, const tchar* rd, LogWriter& w = g_consoleLogWriter) : storage(s), rootDir(rd), logWriter(w)"
  },
  {
    "label": "CacheServer()",
    "kind": "Method",
    "detail": "Function (} StorageServer& storage ; const tchar* rootDir = nullptr ; LogWriter& logWriter ; bool checkInputsForDeletedCas = true ; u64 expirationTimeSeconds = 2* 2 4* 6 0* 6 0 ; u64 maintenanceReserveSize = 1 2 8 ull* 1 0 2 4* 1 0 2 4 ; u64 bucketCasTableMaxSize = 3 2 ull* 1 0 2 4* 1 0 2 4 ; } ; class CacheServer { public :)",
    "insertText": "CacheServer(const CacheServerCreateInfo& info)"
  },
  {
    "label": "CacheServer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CacheServer()"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Load()"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Save()"
  },
  {
    "label": "RunMaintenance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunMaintenance(bool force, const Function<bool()>& shouldExit)"
  },
  {
    "label": "ShouldShutdown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShutdown()"
  },
  {
    "label": "LoadBucket()",
    "kind": "Method",
    "detail": "Function (private : struct Bucket ; struct LoadStats ; bool)",
    "insertText": "LoadBucket(Bucket& bucket, BinaryReader& reader, u32 databaseVersion, LoadStats& outStats)"
  },
  {
    "label": "SaveBucket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveBucket(u64 bucketId, Bucket& bucket)"
  },
  {
    "label": "SaveNoLock()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveNoLock()"
  },
  {
    "label": "OnDisconnected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisconnected(u32 clientId)"
  },
  {
    "label": "GetConnectionBucket()",
    "kind": "Method",
    "detail": "Function (struct Connection ; struct ConnectionBucket ; ConnectionBucket&)",
    "insertText": "GetConnectionBucket(const ConnectionInfo& connectionInfo, BinaryReader& reader, u32* outClientVersion = nullptr)"
  },
  {
    "label": "GetBucket()",
    "kind": "Method",
    "detail": "Function (Bucket&)",
    "insertText": "GetBucket(BinaryReader& reader)"
  },
  {
    "label": "GetBucket()",
    "kind": "Method",
    "detail": "Function (Bucket&)",
    "insertText": "GetBucket(u64 id)"
  },
  {
    "label": "GetBucketWorkerCount()",
    "kind": "Method",
    "detail": "Function (u32)",
    "insertText": "GetBucketWorkerCount()"
  },
  {
    "label": "HandleMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleMessage(const ConnectionInfo& connectionInfo, u8 messageType, BinaryReader& reader, BinaryWriter& writer)"
  },
  {
    "label": "HandleStoreEntry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleStoreEntry(ConnectionBucket& bucket, BinaryReader& reader, BinaryWriter& writer, u32 clientVersion)"
  },
  {
    "label": "HandleFetchPathTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleFetchPathTable(BinaryReader& reader, BinaryWriter& writer)"
  },
  {
    "label": "HandleFetchCasTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleFetchCasTable(BinaryReader& reader, BinaryWriter& writer)"
  },
  {
    "label": "HandleFetchEntries()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleFetchEntries(BinaryReader& reader, BinaryWriter& writer, u32 clientVersion)"
  },
  {
    "label": "HandleReportUsedEntry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleReportUsedEntry(BinaryReader& reader, BinaryWriter& writer, u32 clientVersion)"
  },
  {
    "label": "HandleExecuteCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleExecuteCommand(BinaryReader& reader, BinaryWriter& writer)"
  },
  {
    "label": "CacheServer()",
    "kind": "Method",
    "detail": "Function (MutableLogger m_logger ; NetworkServer& m_server ; StorageServer& m_storage ; StringBuffer<MaxPath> m_rootDir ; Atomic<u32> m_addsSinceMaintenance ; Atomic<u64> m_cacheKeyFetchCount ; Atomic<u64> m_cacheKeyHitCount ; Atomic<bool> m_isRunningMaintenance ; ReaderWriterLock m_bucketsLock ; Map<u64,Bucket> m_buckets ; ReaderWriterLock m_connectionsLock ; Map<u32,Connection> m_connections ; Atomic<bool> m_shutdownRequested = false ; u64 m_maintenanceReserveSize = 0 ; u64 m_bucketCasTableMaxSize = 0 ; u64 m_creationTime = 0 ; u64 m_bootTime = 0 ; u64 m_lastMaintenance = 0 ; u64 m_longestMaintenance = 0 ; u64 m_expirationTimeSeconds = 0 ; bool m_dbfileDirty = false ; bool m_checkInputsForDeletedCas = true ; bool m_shouldWipe = false ; bool m_forceAllSteps = false ;)",
    "insertText": "CacheServer(const CacheServer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CacheServer&)",
    "insertText": "operator(const CacheServer&)"
  }
]