[
  {
    "label": "HttpAuthContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HttpAuthContext"
  },
  {
    "label": "ByteBufferReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ByteBufferReader"
  },
  {
    "label": "ByteBufferWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ByteBufferWriter"
  },
  {
    "label": "BufferedReadAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BufferedReadAdapter"
  },
  {
    "label": "AsyncSSLSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsyncSSLSocket"
  },
  {
    "label": "AsyncHttpsProxySocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsyncHttpsProxySocket"
  },
  {
    "label": "ProxyState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ProxyState"
  },
  {
    "label": "AsyncSocksProxySocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsyncSocksProxySocket"
  },
  {
    "label": "State",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "State"
  },
  {
    "label": "BufferedReadAdapter()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_SOCKET_ADAPTERS_H_ # define RTC_BASE_SOCKET_ADAPTERS_H_ # include<string> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" # include \" rtc_base / async_socket . h \" # include \" rtc_base / crypt_string . h \" namespace rtc { struct HttpAuthContext ; class ByteBufferReader ; class ByteBufferWriter ; class BufferedReadAdapter : public AsyncSocketAdapter { public :)",
    "insertText": "BufferedReadAdapter(Socket* socket, size_t buffer_size)"
  },
  {
    "label": "BufferedReadAdapter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "BufferedReadAdapter()"
  },
  {
    "label": "BufferedReadAdapter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferedReadAdapter(const BufferedReadAdapter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (BufferedReadAdapter&)",
    "insertText": "operator(const BufferedReadAdapter&)"
  },
  {
    "label": "Send()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Send(const void* pv, size_t cb)"
  },
  {
    "label": "Recv()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Recv(void* pv, size_t cb, int64_t* timestamp)"
  },
  {
    "label": "DirectSend()",
    "kind": "Method",
    "detail": "Function (protected : int)",
    "insertText": "DirectSend(const void* pv, size_t cb)"
  },
  {
    "label": "BufferInput()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BufferInput(bool on = true)"
  },
  {
    "label": "ProcessInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessInput(char* data, size_t* len)"
  },
  {
    "label": "OnReadEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReadEvent(Socket* socket)"
  },
  {
    "label": "SslClientHello()",
    "kind": "Method",
    "detail": "Function (private : char* buffer_ ; size_t buffer_size_,data_len_ ; bool buffering_ ; } ; class AsyncSSLSocket : public BufferedReadAdapter { public : ArrayView<const uint8_t>)",
    "insertText": "SslClientHello()"
  },
  {
    "label": "SslServerHello()",
    "kind": "Method",
    "detail": "Function (ArrayView<const uint8_t>)",
    "insertText": "SslServerHello()"
  },
  {
    "label": "AsyncSSLSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncSSLSocket(Socket* socket)"
  },
  {
    "label": "AsyncSSLSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncSSLSocket(const AsyncSSLSocket&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AsyncSSLSocket&)",
    "insertText": "operator(const AsyncSSLSocket&)"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Connect(const SocketAddress& addr)"
  },
  {
    "label": "OnConnectEvent()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnConnectEvent(Socket* socket)"
  },
  {
    "label": "AsyncHttpsProxySocket()",
    "kind": "Method",
    "detail": "Function (} ; class AsyncHttpsProxySocket : public BufferedReadAdapter { public :)",
    "insertText": "AsyncHttpsProxySocket(Socket* socket, absl::string_view user_agent, const SocketAddress& proxy, absl::string_view username, const CryptString& password)"
  },
  {
    "label": "AsyncHttpsProxySocket()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "AsyncHttpsProxySocket()"
  },
  {
    "label": "AsyncHttpsProxySocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncHttpsProxySocket(const AsyncHttpsProxySocket&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AsyncHttpsProxySocket&)",
    "insertText": "operator(const AsyncHttpsProxySocket&)"
  },
  {
    "label": "SetForceConnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForceConnect(bool force)"
  },
  {
    "label": "GetRemoteAddress()",
    "kind": "Method",
    "detail": "Function (SocketAddress)",
    "insertText": "GetRemoteAddress()"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Close()"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (ConnState)",
    "insertText": "GetState()"
  },
  {
    "label": "OnCloseEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCloseEvent(Socket* socket, int err)"
  },
  {
    "label": "ShouldIssueConnect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldIssueConnect()"
  },
  {
    "label": "SendRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRequest()"
  },
  {
    "label": "ProcessLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessLine(char* data, size_t len)"
  },
  {
    "label": "EndResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndResponse()"
  },
  {
    "label": "Error()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Error(int error)"
  },
  {
    "label": "AsyncSocksProxySocket()",
    "kind": "Method",
    "detail": "Function (private : SocketAddress proxy_,dest_ ; std::string agent_,user_,headers_ ; CryptString pass_ ; bool force_connect_ ; size_t content_length_ ; int defer_error_ ; bool expect_close_ ; enum ProxyState { PS_INIT,PS_LEADER,PS_AUTHENTICATE,PS_SKIP_HEADERS,PS_ERROR_HEADERS,PS_TUNNEL_HEADERS,PS_SKIP_BODY,PS_TUNNEL,PS_WAIT_CLOSE,PS_ERROR } state_ ; HttpAuthContext* context_ ; std::string unknown_mechanisms_ ; } ; class AsyncSocksProxySocket : public BufferedReadAdapter { public :)",
    "insertText": "AsyncSocksProxySocket(Socket* socket, const SocketAddress& proxy, absl::string_view username, const CryptString& password)"
  },
  {
    "label": "AsyncSocksProxySocket()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "AsyncSocksProxySocket()"
  },
  {
    "label": "AsyncSocksProxySocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncSocksProxySocket(const AsyncSocksProxySocket&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AsyncSocksProxySocket&)",
    "insertText": "operator(const AsyncSocksProxySocket&)"
  },
  {
    "label": "SendHello()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendHello()"
  },
  {
    "label": "SendConnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendConnect()"
  },
  {
    "label": "SendAuth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendAuth()"
  }
]