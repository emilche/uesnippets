[
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_MAC_BRIDGING_H_ # define BASE_MAC_BRIDGING_H_ # include<CoreText / CoreText . h> # import<Foundation / Foundation . h> # include \" base / base_export . h \" # include \" base / check . h \" # include \" build / build_config . h \" # if)",
    "insertText": "BUILDFLAG(IS_IOS) #import <UIKit/UIKit.h> #endif #if BUILDFLAG(IS_MAC) #import <AppKit/AppKit.h> #endif #if !defined(__has_feature) || !__has_feature(objc_arc) #error \"base/mac/bridging.h requires ARC.\" #endif #define CF_TO_NS_CAST_IMPL(TypeCF, TypeNS)"
  },
  {
    "label": "CFToNSOwnershipCast()",
    "kind": "Method",
    "detail": "Function (\\ BASE_EXPORT TypeNS* _Nullable)",
    "insertText": "CFToNSOwnershipCast(\\ TypeCF##Ref CF_CONSUMED _Nullable cf_val)"
  },
  {
    "label": "DCHECK()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "DCHECK(!cf_val || TypeCF##GetTypeID() == CFGetTypeID(cf_val))"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "return(__bridge_transfer TypeNS*)"
  },
  {
    "label": "NSToCFOwnershipCast()",
    "kind": "Method",
    "detail": "Function (\\ } \\ BASE_EXPORT CF_RETURNS_RETAINED \\ TypeCF # # Ref _Nullable)",
    "insertText": "NSToCFOwnershipCast(TypeNS* _Nullable ns_val)"
  },
  {
    "label": "cf_val()",
    "kind": "Method",
    "detail": "Function (\\ TypeCF # # Ref)",
    "insertText": "cf_val(__bridge_retained TypeCF##Ref)"
  },
  {
    "label": "CFToNSPtrCast()",
    "kind": "Method",
    "detail": "Function (\\ return cf_val ; \\ } \\ BASE_EXPORT TypeNS* _Nullable)",
    "insertText": "CFToNSPtrCast(\\ TypeCF##Ref _Nullable cf_val)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "return(__bridge TypeNS*)"
  },
  {
    "label": "NSToCFPtrCast()",
    "kind": "Method",
    "detail": "Function (\\ } \\ BASE_EXPORT TypeCF # # Ref _Nullable)",
    "insertText": "NSToCFPtrCast(\\ TypeNS* _Nullable ns_val)"
  },
  {
    "label": "cf_val()",
    "kind": "Method",
    "detail": "Function (\\ TypeCF # # Ref)",
    "insertText": "cf_val(__bridge TypeCF##Ref)"
  },
  {
    "label": "CF_TO_NS_MUTABLE_CAST_IMPL()",
    "kind": "Method",
    "detail": "Function (\\ return cf_val ; \\ } \\ } # define)",
    "insertText": "CF_TO_NS_MUTABLE_CAST_IMPL(name) \\ CF_TO_NS_CAST_IMPL(CF##name, NS##name)"
  },
  {
    "label": "CFToNSOwnershipCast()",
    "kind": "Method",
    "detail": "Function (\\ BASE_EXPORT NSMutable # # name* _Nullable)",
    "insertText": "CFToNSOwnershipCast(\\ CFMutable##name##Ref CF_CONSUMED _Nullable cf_val)"
  },
  {
    "label": "DCHECK()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "DCHECK(!cf_val || CF##name##GetTypeID() == CFGetTypeID(cf_val))"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "return(__bridge_transfer NSMutable##name*)"
  },
  {
    "label": "NSToCFOwnershipCast()",
    "kind": "Method",
    "detail": "Function (\\ } \\ BASE_EXPORT CF_RETURNS_RETAINED \\ CFMutable # # name # # Ref _Nullable)",
    "insertText": "NSToCFOwnershipCast(\\ NSMutable##name* _Nullable ns_val)"
  },
  {
    "label": "cf_val()",
    "kind": "Method",
    "detail": "Function (\\ CFMutable # # name # # Ref)",
    "insertText": "cf_val(__bridge_retained CFMutable##name##Ref)"
  },
  {
    "label": "CFToNSPtrCast()",
    "kind": "Method",
    "detail": "Function (\\ return cf_val ; \\ } \\ BASE_EXPORT NSMutable # # name* _Nullable)",
    "insertText": "CFToNSPtrCast(\\ CFMutable##name##Ref _Nullable cf_val)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "return(__bridge NSMutable##name*)"
  },
  {
    "label": "NSToCFPtrCast()",
    "kind": "Method",
    "detail": "Function (\\ } \\ BASE_EXPORT CFMutable # # name # # Ref _Nullable)",
    "insertText": "NSToCFPtrCast(\\ NSMutable##name* _Nullable ns_val)"
  },
  {
    "label": "cf_val()",
    "kind": "Method",
    "detail": "Function (\\ CFMutable # # name # # Ref)",
    "insertText": "cf_val(__bridge CFMutable##name##Ref)"
  },
  {
    "label": "CF_TO_NS_MUTABLE_CAST_IMPL()",
    "kind": "Method",
    "detail": "Function (\\ return cf_val ; \\ } \\ })",
    "insertText": "CF_TO_NS_MUTABLE_CAST_IMPL(Array) CF_TO_NS_MUTABLE_CAST_IMPL(AttributedString) CF_TO_NS_CAST_IMPL(CFCalendar, NSCalendar) CF_TO_NS_MUTABLE_CAST_IMPL(CharacterSet) CF_TO_NS_MUTABLE_CAST_IMPL(Data) CF_TO_NS_CAST_IMPL(CFDate, NSDate) CF_TO_NS_MUTABLE_CAST_IMPL(Dictionary) CF_TO_NS_CAST_IMPL(CFError, NSError) CF_TO_NS_CAST_IMPL(CFLocale, NSLocale) CF_TO_NS_CAST_IMPL(CFNumber, NSNumber) CF_TO_NS_CAST_IMPL(CFRunLoopTimer, NSTimer) CF_TO_NS_CAST_IMPL(CFTimeZone, NSTimeZone) CF_TO_NS_MUTABLE_CAST_IMPL(Set) CF_TO_NS_CAST_IMPL(CFReadStream, NSInputStream) CF_TO_NS_CAST_IMPL(CFWriteStream, NSOutputStream) CF_TO_NS_MUTABLE_CAST_IMPL(String) CF_TO_NS_CAST_IMPL(CFURL, NSURL) #if BUILDFLAG(IS_IOS) CF_TO_NS_CAST_IMPL(CTFont, UIFont)"
  },
  {
    "label": "_CFIsObjC()",
    "kind": "Method",
    "detail": "Function (Boolean)",
    "insertText": "_CFIsObjC(CFTypeID typeID, CFTypeRef obj)"
  },
  {
    "label": "CFToNSOwnershipCast()",
    "kind": "Method",
    "detail": "Function (} namespace base::mac { BASE_EXPORT NSFont* _Nullable)",
    "insertText": "CFToNSOwnershipCast(CTFontRef CF_CONSUMED _Nullable cf_val)"
  },
  {
    "label": "ns_val()",
    "kind": "Method",
    "detail": "Function (NSFont*)",
    "insertText": "ns_val(__bridge_transfer NSFont*)"
  },
  {
    "label": "DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DCHECK(!cf_val || CTFontGetTypeID() == CFGetTypeID(cf_val) || (_CFIsObjC(CTFontGetTypeID(), cf_val) && [ns_val isKindOfClass:[NSFont class]]))"
  },
  {
    "label": "cf_val()",
    "kind": "Method",
    "detail": "Function (CTFontRef)",
    "insertText": "cf_val(__bridge_retained CTFontRef)"
  },
  {
    "label": "DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DCHECK(!cf_val || CTFontGetTypeID() == CFGetTypeID(cf_val) || [ns_val isKindOfClass:[NSFont class]])"
  },
  {
    "label": "ns_val()",
    "kind": "Method",
    "detail": "Function (NSFont*)",
    "insertText": "ns_val(__bridge NSFont*)"
  },
  {
    "label": "cf_val()",
    "kind": "Method",
    "detail": "Function (CTFontRef)",
    "insertText": "cf_val(__bridge CTFontRef)"
  }
]