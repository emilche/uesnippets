[
  {
    "label": "FDatasmithFacadeKeyValueProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithFacadeKeyValueProperty"
  },
  {
    "label": "DATASMITHFACADE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHFACADE_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDatasmithFacadeScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithFacadeScene"
  },
  {
    "label": "GetDatasmithMaterialType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DatasmithFacadeElement . h \" # include \" DatasmithFacadeTexture . h \" class FDatasmithFacadeKeyValueProperty ; class FDatasmithFacadeBaseMaterial : public FDatasmithFacadeElement { public : enum class EDatasmithMaterialType { MaterialInstance,UEPbrMaterial,DecalMaterial,Unsupported,} ; EDatasmithMaterialType)",
    "insertText": "GetDatasmithMaterialType()"
  },
  {
    "label": "FDatasmithFacadeBaseMaterial()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeBaseMaterial(const TSharedRef<IDatasmithBaseMaterialElement>& BaseMaterialElement)"
  },
  {
    "label": "GetDatasmithMaterialType()",
    "kind": "Method",
    "detail": "Function (EDatasmithMaterialType)",
    "insertText": "GetDatasmithMaterialType(const TSharedRef<IDatasmithBaseMaterialElement>& InMaterial)"
  },
  {
    "label": "GetDatasmithBaseMaterial()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDatasmithBaseMaterialElement>)",
    "insertText": "GetDatasmithBaseMaterial()"
  },
  {
    "label": "GetNewFacadeBaseMaterialFromSharedPtr()",
    "kind": "Method",
    "detail": "Function (FDatasmithFacadeBaseMaterial*)",
    "insertText": "GetNewFacadeBaseMaterialFromSharedPtr(const TSharedPtr<IDatasmithBaseMaterialElement>& InMaterial)"
  },
  {
    "label": "FDatasmithFacadeMaterialInstance()",
    "kind": "Method",
    "detail": "Function (} ; class FDatasmithFacadeMaterialInstance : public FDatasmithFacadeBaseMaterial { class FDatasmithFacadeScene ; public : enum class EMaterialInstanceType { Auto,Opaque,Transparent,ClearCoat,Custom,CutOut,Emissive,Decal,Count } ; enum class EMaterialInstanceQuality : uint8 { High,Low,Count } ; public :)",
    "insertText": "FDatasmithFacadeMaterialInstance(const TCHAR* InElementName)"
  },
  {
    "label": "FDatasmithFacadeMaterialInstance()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDatasmithFacadeMaterialInstance()"
  },
  {
    "label": "GetMaterialType()",
    "kind": "Method",
    "detail": "Function (} EMaterialInstanceType)",
    "insertText": "GetMaterialType()"
  },
  {
    "label": "SetMaterialType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialType(EMaterialInstanceType InMaterialInstanceType)"
  },
  {
    "label": "GetQuality()",
    "kind": "Method",
    "detail": "Function (EMaterialInstanceQuality)",
    "insertText": "GetQuality()"
  },
  {
    "label": "SetQuality()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQuality(EMaterialInstanceQuality InQuality)"
  },
  {
    "label": "GetCustomMaterialPathName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetCustomMaterialPathName()"
  },
  {
    "label": "SetCustomMaterialPathName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomMaterialPathName(const TCHAR* InPathName)"
  },
  {
    "label": "AddColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColor(const TCHAR* InPropertyName, unsigned char InR, unsigned char InG, unsigned char InB, unsigned char InA)"
  },
  {
    "label": "AddColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColor(const TCHAR* InPropertyName, float InR, float InG, float InB, float InA)"
  },
  {
    "label": "AddTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTexture(const TCHAR* InPropertyName, const FDatasmithFacadeTexture* InTexture)"
  },
  {
    "label": "AddString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddString(const TCHAR* InPropertyName, const TCHAR* InPropertyValue)"
  },
  {
    "label": "AddFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFloat(const TCHAR* InPropertyName, float InPropertyValue)"
  },
  {
    "label": "AddBoolean()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBoolean(const TCHAR* InPropertyName, bool bInPropertyValue)"
  },
  {
    "label": "GetPropertiesCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPropertiesCount()"
  },
  {
    "label": "GetNewProperty()",
    "kind": "Method",
    "detail": "Function (FDatasmithFacadeKeyValueProperty*)",
    "insertText": "GetNewProperty(int32 PropertyIndex)"
  },
  {
    "label": "GetNewPropertyByName()",
    "kind": "Method",
    "detail": "Function (FDatasmithFacadeKeyValueProperty*)",
    "insertText": "GetNewPropertyByName(const TCHAR* PropertyName)"
  },
  {
    "label": "FDatasmithFacadeMaterialInstance()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeMaterialInstance(const TSharedRef<IDatasmithMaterialInstanceElement>& InMaterialRef)"
  },
  {
    "label": "GetDatasmithMaterialInstance()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDatasmithMaterialInstanceElement>)",
    "insertText": "GetDatasmithMaterialInstance()"
  }
]