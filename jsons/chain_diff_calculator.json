[
  {
    "label": "ChainDiffCalculator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ChainDiffCalculator"
  },
  {
    "label": "ChainDiffCalculator()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_CHAIN_DIFF_CALCULATOR_H_ # define MODULES_VIDEO_CODING_CHAIN_DIFF_CALCULATOR_H_ # include<stdint . h> # include<vector> # include \" absl / container / inlined_vector . h \" # include \" absl / types / optional . h \" namespace webrtc { class ChainDiffCalculator { public :)",
    "insertText": "ChainDiffCalculator()"
  },
  {
    "label": "ChainDiffCalculator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChainDiffCalculator(const ChainDiffCalculator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ChainDiffCalculator&)",
    "insertText": "operator(const ChainDiffCalculator&)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(const std::vector<bool>& chains)"
  },
  {
    "label": "From()",
    "kind": "Method",
    "detail": "Function (absl::InlinedVector<int,4>)",
    "insertText": "From(int64_t frame_id, const std::vector<bool>& chains)"
  },
  {
    "label": "ChainDiffs()",
    "kind": "Method",
    "detail": "Function (private : absl::InlinedVector<int,4>)",
    "insertText": "ChainDiffs(int64_t frame_id)"
  }
]