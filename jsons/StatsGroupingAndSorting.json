[
  {
    "label": "FStatsNodeSortingByStatsType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatsNodeSortingByStatsType"
  },
  {
    "label": "FStatsNodeSortingByDataType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatsNodeSortingByDataType"
  },
  {
    "label": "FStatsNodeSortingByCount",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatsNodeSortingByCount"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FStatsNodeSortingByStatsType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" InsightsCore / Table / ViewModels / TableColumn . h \" # include \" InsightsCore / Table / ViewModels / TableCellValueSorter . h \" # include \" InsightsCore / Table / ViewModels / TreeNodeGrouping . h \" # include \" Insights / TimingProfiler / ViewModels / StatsNode . h \" namespace UE::Insights::TimingProfiler { class FStatsNodeSortingByStatsType : public FTableCellValueSorter { public :)",
    "insertText": "FStatsNodeSortingByStatsType(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "Sort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sort(TArray<FBaseTreeNodePtr>& NodesToSort, ESortMode SortMode)"
  },
  {
    "label": "FStatsNodeSortingByDataType()",
    "kind": "Method",
    "detail": "Function (} ; class FStatsNodeSortingByDataType : public FTableCellValueSorter { public :)",
    "insertText": "FStatsNodeSortingByDataType(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FStatsNodeSortingByCount()",
    "kind": "Method",
    "detail": "Function (} ; class FStatsNodeSortingByCount : public FTableCellValueSorter { public :)",
    "insertText": "FStatsNodeSortingByCount(TSharedRef<FTableColumn> InColumnRef)"
  }
]