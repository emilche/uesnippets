[
  {
    "label": "RtcEventLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventLog"
  },
  {
    "label": "AudioEncoderMultiChannelOpusImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioEncoderMultiChannelOpusImpl"
  },
  {
    "label": "AudioEncoderMultiChannelOpus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AudioEncoderMultiChannelOpus"
  },
  {
    "label": "AudioEncoderMultiChannelOpusImpl()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "AudioEncoderMultiChannelOpusImpl(\n      const AudioEncoderMultiChannelOpusConfig& config,\n      int payload_type)"
  },
  {
    "label": "QueryAudioEncoder()",
    "kind": "Method",
    "detail": "Function (absl::optional<AudioCodecInfo>)",
    "insertText": "QueryAudioEncoder(\n      const SdpAudioFormat& format)"
  },
  {
    "label": "SdpToConfig()",
    "kind": "Method",
    "detail": "Function (absl::optional<AudioEncoderMultiChannelOpusConfig>)",
    "insertText": "SdpToConfig(\n      const SdpAudioFormat& format)"
  },
  {
    "label": "QueryAudioEncoder()",
    "kind": "Method",
    "detail": "Function (AudioCodecInfo)",
    "insertText": "QueryAudioEncoder(\n      const AudioEncoderMultiChannelOpusConfig& config)"
  },
  {
    "label": "MakeAudioEncoder()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<AudioEncoder>)",
    "insertText": "MakeAudioEncoder(\n      const AudioEncoderMultiChannelOpusConfig&,\n      int payload_type)"
  },
  {
    "label": "RecreateEncoderInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RecreateEncoderInstance(\n      const AudioEncoderMultiChannelOpusConfig& config)"
  },
  {
    "label": "SetFrameLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameLength(int frame_length_ms)"
  },
  {
    "label": "SetNumChannelsToEncode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumChannelsToEncode(size_t num_channels_to_encode)"
  },
  {
    "label": "SetProjectedPacketLossRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProjectedPacketLossRate(float fraction)"
  }
]