[
  {
    "label": "RTCFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCFormat"
  },
  {
    "label": "RTCBuildQuality",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBuildQuality"
  },
  {
    "label": "RTC_ALIGN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_ALIGN"
  },
  {
    "label": "RTCBounds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCBounds"
  },
  {
    "label": "RTCIntersectContextFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCIntersectContextFlags"
  },
  {
    "label": "RTCFilterFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCFilterFunctionNArguments"
  },
  {
    "label": "RTCIntersectContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCIntersectContext"
  },
  {
    "label": "RTCRayN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayN"
  },
  {
    "label": "RTCHitN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCHitN"
  },
  {
    "label": "RTCPointQueryN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCPointQueryN"
  },
  {
    "label": "RTCPointQueryContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCPointQueryContext"
  },
  {
    "label": "RTCPointQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCPointQuery"
  },
  {
    "label": "RTCPointQueryFunctionArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCPointQueryFunctionArguments"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<stddef . h> # include<sys / types . h> # include<stdbool . h> # include \" rtcore_config . h \" RTC_NAMESPACE_BEGIN # if)",
    "insertText": "defined(_WIN32) #if defined(_M_X64)"
  },
  {
    "label": "RTC_ALIGN()",
    "kind": "Method",
    "detail": "Function (# else typedef int ssize_t ; # endif # endif # ifdef _WIN32 # define)",
    "insertText": "RTC_ALIGN(...) __declspec(align(__VA_ARGS__)) #else # define RTC_ALIGN(...) __attribute__((aligned(__VA_ARGS__))) #endif #if !defined (RTC_DEPRECATED) #ifdef __GNUC__ #define RTC_DEPRECATED __attribute__((deprecated)) #elif defined(_MSC_VER) #define RTC_DEPRECATED __declspec(deprecated) #else #define RTC_DEPRECATED #endif #endif #if defined(_WIN32) # define RTC_FORCEINLINE __forceinline #else # define RTC_FORCEINLINE inline __attribute__((always_inline)) #endif #define RTC_INVALID_GEOMETRY_ID ((unsigned int)-1)"
  },
  {
    "label": "RTC_ALIGN()",
    "kind": "Method",
    "detail": "Function (RTC_FORMAT_UNDEFINED = 0,RTC_FORMAT_UCHAR = 0 x1001,RTC_FORMAT_UCHAR2,RTC_FORMAT_UCHAR3,RTC_FORMAT_UCHAR4,RTC_FORMAT_CHAR = 0 x2001,RTC_FORMAT_CHAR2,RTC_FORMAT_CHAR3,RTC_FORMAT_CHAR4,RTC_FORMAT_USHORT = 0 x3001,RTC_FORMAT_USHORT2,RTC_FORMAT_USHORT3,RTC_FORMAT_USHORT4,RTC_FORMAT_SHORT = 0 x4001,RTC_FORMAT_SHORT2,RTC_FORMAT_SHORT3,RTC_FORMAT_SHORT4,RTC_FORMAT_UINT = 0 x5001,RTC_FORMAT_UINT2,RTC_FORMAT_UINT3,RTC_FORMAT_UINT4,RTC_FORMAT_INT = 0 x6001,RTC_FORMAT_INT2,RTC_FORMAT_INT3,RTC_FORMAT_INT4,RTC_FORMAT_ULLONG = 0 x7001,RTC_FORMAT_ULLONG2,RTC_FORMAT_ULLONG3,RTC_FORMAT_ULLONG4,RTC_FORMAT_LLONG = 0 x8001,RTC_FORMAT_LLONG2,RTC_FORMAT_LLONG3,RTC_FORMAT_LLONG4,RTC_FORMAT_FLOAT = 0 x9001,RTC_FORMAT_FLOAT2,RTC_FORMAT_FLOAT3,RTC_FORMAT_FLOAT4,RTC_FORMAT_FLOAT5,RTC_FORMAT_FLOAT6,RTC_FORMAT_FLOAT7,RTC_FORMAT_FLOAT8,RTC_FORMAT_FLOAT9,RTC_FORMAT_FLOAT10,RTC_FORMAT_FLOAT11,RTC_FORMAT_FLOAT12,RTC_FORMAT_FLOAT13,RTC_FORMAT_FLOAT14,RTC_FORMAT_FLOAT15,RTC_FORMAT_FLOAT16,RTC_FORMAT_FLOAT2X2_ROW_MAJOR = 0 x9122,RTC_FORMAT_FLOAT2X3_ROW_MAJOR = 0 x9123,RTC_FORMAT_FLOAT2X4_ROW_MAJOR = 0 x9124,RTC_FORMAT_FLOAT3X2_ROW_MAJOR = 0 x9132,RTC_FORMAT_FLOAT3X3_ROW_MAJOR = 0 x9133,RTC_FORMAT_FLOAT3X4_ROW_MAJOR = 0 x9134,RTC_FORMAT_FLOAT4X2_ROW_MAJOR = 0 x9142,RTC_FORMAT_FLOAT4X3_ROW_MAJOR = 0 x9143,RTC_FORMAT_FLOAT4X4_ROW_MAJOR = 0 x9144,RTC_FORMAT_FLOAT2X2_COLUMN_MAJOR = 0 x9222,RTC_FORMAT_FLOAT2X3_COLUMN_MAJOR = 0 x9223,RTC_FORMAT_FLOAT2X4_COLUMN_MAJOR = 0 x9224,RTC_FORMAT_FLOAT3X2_COLUMN_MAJOR = 0 x9232,RTC_FORMAT_FLOAT3X3_COLUMN_MAJOR = 0 x9233,RTC_FORMAT_FLOAT3X4_COLUMN_MAJOR = 0 x9234,RTC_FORMAT_FLOAT4X2_COLUMN_MAJOR = 0 x9242,RTC_FORMAT_FLOAT4X3_COLUMN_MAJOR = 0 x9243,RTC_FORMAT_FLOAT4X4_COLUMN_MAJOR = 0 x9244,RTC_FORMAT_GRID = 0 xA001 } ; enum RTCBuildQuality { RTC_BUILD_QUALITY_LOW = 0,RTC_BUILD_QUALITY_MEDIUM = 1,RTC_BUILD_QUALITY_HIGH = 2,RTC_BUILD_QUALITY_REFIT = 3,} ; struct)",
    "insertText": "RTC_ALIGN(16)"
  },
  {
    "label": "RTC_INTERSECT_CONTEXT_FLAG_INCOHERENT()",
    "kind": "Method",
    "detail": "Function (struct RTCBounds bounds0 ; struct RTCBounds bounds1 ; } ; enum RTCIntersectContextFlags { RTC_INTERSECT_CONTEXT_FLAG_NONE = 0,)",
    "insertText": "RTC_INTERSECT_CONTEXT_FLAG_INCOHERENT(0 << 0), RTC_INTERSECT_CONTEXT_FLAG_COHERENT = (1 << 0)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (struct RTCFilterFunctionNArguments { int* valid ; void* geometryUserPtr ; struct RTCIntersectContext* context ; struct RTCRayN* ray ; struct RTCHitN* hit ; unsigned int N ; } ; typedef)",
    "insertText": "void(*RTCFilterFunctionN)(const struct RTCFilterFunctionNArguments* args)"
  },
  {
    "label": "rtcInitIntersectContext()",
    "kind": "Method",
    "detail": "Function (struct RTCIntersectContext { enum RTCIntersectContextFlags flags ; RTCFilterFunctionN filter ; # if RTC_MAX_INSTANCE_LEVEL_COUNT> 1 unsigned int instStackSize ; # endif unsigned int instID [ RTC_MAX_INSTANCE_LEVEL_COUNT ] ; # if RTC_MIN_WIDTH float minWidthDistanceFactor ; # endif } ; RTC_FORCEINLINE void)",
    "insertText": "rtcInitIntersectContext(struct RTCIntersectContext* context)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (instID[l] = RTC_INVALID_GEOMETRY_ID)",
    "insertText": "for(; l < RTC_MAX_INSTANCE_LEVEL_COUNT; ++l)"
  },
  {
    "label": "RTC_ALIGN()",
    "kind": "Method",
    "detail": "Function (float x [ 4 ] ; float y [ 4 ] ; float z [ 4 ] ; float time [ 4 ] ; float radius [ 4 ] ; } ; struct)",
    "insertText": "RTC_ALIGN(32)"
  },
  {
    "label": "RTC_ALIGN()",
    "kind": "Method",
    "detail": "Function (float x [ 8 ] ; float y [ 8 ] ; float z [ 8 ] ; float time [ 8 ] ; float radius [ 8 ] ; } ; struct)",
    "insertText": "RTC_ALIGN(64)"
  },
  {
    "label": "rtcInitPointQueryContext()",
    "kind": "Method",
    "detail": "Function (float world2inst [ RTC_MAX_INSTANCE_LEVEL_COUNT ] [ 1 6 ] ; float inst2world [ RTC_MAX_INSTANCE_LEVEL_COUNT ] [ 1 6 ] ; unsigned int instID [ RTC_MAX_INSTANCE_LEVEL_COUNT ] ; unsigned int instStackSize ; } ; RTC_FORCEINLINE void)",
    "insertText": "rtcInitPointQueryContext(struct RTCPointQueryContext* context)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (struct RTCPointQuery* query ; void* userPtr ; unsigned int primID ; unsigned int geomID ; struct RTCPointQueryContext* context ; float similarityScale ; } ; typedef)",
    "insertText": "bool(*RTCPointQueryFunction)(struct RTCPointQueryFunctionArguments* args)"
  }
]