[
  {
    "label": "UInputDeviceProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputDeviceProperty"
  },
  {
    "label": "FActivateDevicePropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActivateDevicePropertyParams"
  },
  {
    "label": "FActiveDeviceProperty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveDeviceProperty"
  },
  {
    "label": "UInputDeviceSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputDeviceSubsystem"
  },
  {
    "label": "FInputDeviceSubsystemProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInputDeviceSubsystemProcessor"
  },
  {
    "label": "FInputDeviceDebugTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInputDeviceDebugTools"
  },
  {
    "label": "FResetPIEData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResetPIEData"
  },
  {
    "label": "FLatestInputDeviceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLatestInputDeviceData"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" InputSettings . h \" # include \" GameFramework / InputDevicePropertyHandle . h \" # include \" Subsystems / EngineSubsystem . h \" # include \" Tickable . h \" # include \" Templates / SubclassOf . h \" # include \" InputDeviceSubsystem . generated . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogInputDeviceProperties, Log, All)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (class UInputDeviceProperty ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() ENGINE_API FActivateDevicePropertyParams()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() ENGINE_API FActiveDeviceProperty()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FActiveDeviceProperty& InProp)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FActiveDeviceProperty& ActiveProp, const FInputDevicePropertyHandle& Handle)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FActiveDeviceProperty& Other)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class FInputDeviceSubsystemProcessor ; class FInputDeviceDebugTools ;)",
    "insertText": "GENERATED_BODY() public: static ENGINE_API UInputDeviceSubsystem* Get()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSubsystemCollectionBase& Collection)"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "ShouldCreateSubsystem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCreateSubsystem(UObject* Outer)"
  },
  {
    "label": "GetTickableGameObjectWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetTickableGameObjectWorld()"
  },
  {
    "label": "GetTickableTickType()",
    "kind": "Method",
    "detail": "Function (ETickableTickType)",
    "insertText": "GetTickableTickType()"
  },
  {
    "label": "IsTickable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTickable()"
  },
  {
    "label": "IsTickableInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTickableInEditor()"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float InDeltaTime)"
  },
  {
    "label": "ActivateDeviceProperty()",
    "kind": "Method",
    "detail": "Function (FInputDevicePropertyHandle)",
    "insertText": "ActivateDeviceProperty(UInputDeviceProperty* Property, const FActivateDevicePropertyParams& Params)"
  },
  {
    "label": "SetMostRecentlyUsedHardwareDevice()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SetMostRecentlyUsedHardwareDevice(const FInputDeviceId InDeviceId, const FHardwareDeviceIdentifier& InHardwareId)"
  },
  {
    "label": "OnPrePIEStarted()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "OnPrePIEStarted(bool bSimulating)"
  },
  {
    "label": "OnPIEPaused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPIEPaused(bool bSimulating)"
  },
  {
    "label": "OnPIEResumed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPIEResumed(bool bSimulating)"
  },
  {
    "label": "OnPIEStopped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPIEStopped(bool bSimulating)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TMap<FInputDeviceId,FHardwareDeviceIdentifier> LatestInputDeviceIdentifiers ; struct FLatestInputDeviceData { FInputDeviceId LatestDeviceId = INPUTDEVICEID_NONE ; FHardwareDeviceIdentifier HardwareDeviceId = FHardwareDeviceIdentifier::Invalid ; bool)",
    "insertText": "operator(const FLatestInputDeviceData& Other)"
  }
]