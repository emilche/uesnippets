[
  {
    "label": "SimpleDateFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SimpleDateFormat"
  },
  {
    "label": "Hashtable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Hashtable"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "DtContextType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DtContextType"
  },
  {
    "label": "DtWidthType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DtWidthType"
  },
  {
    "label": "EMonthPatternType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMonthPatternType"
  },
  {
    "label": "ECapitalizationContextUsageType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECapitalizationContextUsageType"
  },
  {
    "label": "SimpleDateFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SimpleDateFormat"
  },
  {
    "label": "DateFormatSymbolsSingleSetter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateFormatSymbolsSingleSetter"
  },
  {
    "label": "setEras()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setEras(const UnicodeString* eras, int32_t count)"
  },
  {
    "label": "setEraNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setEraNames(const UnicodeString* eraNames, int32_t count)"
  },
  {
    "label": "setNarrowEras()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setNarrowEras(const UnicodeString* narrowEras, int32_t count)"
  },
  {
    "label": "setMonths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMonths(const UnicodeString* months, int32_t count)"
  },
  {
    "label": "setShortMonths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setShortMonths(const UnicodeString* shortMonths, int32_t count)"
  },
  {
    "label": "setMonths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMonths(const UnicodeString* months, int32_t count, DtContextType context, DtWidthType width)"
  },
  {
    "label": "setWeekdays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setWeekdays(const UnicodeString* weekdays, int32_t count)"
  },
  {
    "label": "setShortWeekdays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setShortWeekdays(const UnicodeString* abbrevWeekdays, int32_t count)"
  },
  {
    "label": "setWeekdays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setWeekdays(const UnicodeString* weekdays, int32_t count, DtContextType context, DtWidthType width)"
  },
  {
    "label": "setQuarters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setQuarters(const UnicodeString* quarters, int32_t count, DtContextType context, DtWidthType width)"
  },
  {
    "label": "setAmPmStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setAmPmStrings(const UnicodeString* ampms, int32_t count)"
  },
  {
    "label": "setTimeSeparatorString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeSeparatorString(const UnicodeString& newTimeSeparator)"
  },
  {
    "label": "setYearNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setYearNames(const UnicodeString* yearNames, int32_t count,\n                            DtContextType context, DtWidthType width)"
  },
  {
    "label": "setZodiacNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setZodiacNames(const UnicodeString* zodiacNames, int32_t count,\n                            DtContextType context, DtWidthType width)"
  },
  {
    "label": "setZoneStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setZoneStrings(const UnicodeString* const* strings, int32_t rowCount, int32_t columnCount)"
  },
  {
    "label": "getPatternUChars()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getPatternUChars(void)"
  },
  {
    "label": "setLocalPatternChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLocalPatternChars(const UnicodeString& newLocalPatternChars)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getStaticClassID()"
  },
  {
    "label": "initializeData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeData(const Locale& locale, const char *type, UErrorCode& status, UBool useLastResortData = FALSE)"
  },
  {
    "label": "assignArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assignArray(UnicodeString*& dstArray,\n                            int32_t& dstCount,\n                            const UnicodeString* srcArray,\n                            int32_t srcCount)"
  },
  {
    "label": "arrayCompare()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "arrayCompare(const UnicodeString* array1,\n                             const UnicodeString* array2,\n                             int32_t count)"
  },
  {
    "label": "createZoneStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createZoneStrings(const UnicodeString *const * otherStrings)"
  },
  {
    "label": "dispose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dispose(void)"
  },
  {
    "label": "copyData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyData(const DateFormatSymbols& other)"
  },
  {
    "label": "initZoneStringsArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initZoneStringsArray(void)"
  },
  {
    "label": "disposeZoneStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "disposeZoneStrings(void)"
  },
  {
    "label": "getPatternCharIndex()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getPatternCharIndex(char16_t c)"
  },
  {
    "label": "isNumericField()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "isNumericField(UDateFormatField f, int32_t count)"
  },
  {
    "label": "isNumericPatternChar()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "isNumericPatternChar(char16_t c, int32_t count)"
  },
  {
    "label": "createForLocale()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createForLocale(\n            const Locale &locale, UErrorCode &status)"
  }
]