[
  {
    "label": "VMapBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VMapBase"
  },
  {
    "label": "RangedForIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RangedForIterator"
  },
  {
    "label": "VMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VMap"
  },
  {
    "label": "VMutableMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VMutableMap"
  },
  {
    "label": "VMapBase()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "VMapBase(FAllocationContext Context, uint32 InitialCapacity, VEmergentType* Type)"
  },
  {
    "label": "VMapBase()",
    "kind": "Method",
    "detail": "Function (GetEntryByIndex>)",
    "insertText": "VMapBase(FAllocationContext Context, uint32 MaxNumEntries, const GetEntryByIndex& GetEntry, VEmergentType* Type)"
  },
  {
    "label": "AddWithoutLocking()",
    "kind": "Method",
    "detail": "Function (bool>)",
    "insertText": "AddWithoutLocking(FAllocationContext Context, uint32 KeyHash, VValue Key, VValue Value, bool bTransactional = false)"
  },
  {
    "label": "FindByHashWithSlot()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "FindByHashWithSlot(FAllocationContext Context, uint32 Hash, VValue Key, uint32* OutSlot)"
  },
  {
    "label": "FindByHashWithSlot()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindByHashWithSlot(Context, Hash, Key, OutSlot)"
  },
  {
    "label": "FindByHashWithSlot()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindByHashWithSlot(Context, Hash, Key, &Slot)"
  },
  {
    "label": "FindByHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindByHash(Context, Hash, Key)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FAllocationContext Context, VValue Key, VValue Value)"
  },
  {
    "label": "AddTransactionally()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTransactionally(FAllocationContext Context, VValue Key, VValue Value)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reserve(FAllocationContext Context, uint32 InCapacity)"
  },
  {
    "label": "GetPairTableSizeForCapacity()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetPairTableSizeForCapacity(Capacity)"
  },
  {
    "label": "GetSequenceTableSizeForCapacity()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetSequenceTableSizeForCapacity(Capacity)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(MapType*& This, FAllocationContext Context, FAbstractVisitor& Visitor)"
  },
  {
    "label": "FreezeMeltImpl()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "FreezeMeltImpl(FAllocationContext Context, TranslationFunc&& Func)"
  },
  {
    "label": "MeltImpl()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "MeltImpl(FAllocationContext Context)"
  },
  {
    "label": "GetTypeHashImpl()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHashImpl()"
  },
  {
    "label": "ToStringImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToStringImpl(FStringBuilderBase& Builder, FAllocationContext Context, const FCellFormatter& Formatter)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (RangedForIterator)",
    "insertText": "it(this, 0)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (RangedForIterator)",
    "insertText": "it(this, NumElements)"
  },
  {
    "label": "FreezeImpl()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "FreezeImpl(FAllocationContext Context)"
  }
]