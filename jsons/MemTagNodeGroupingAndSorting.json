[
  {
    "label": "FMemTagNodeSortingByType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemTagNodeSortingByType"
  },
  {
    "label": "FMemTagNodeSortingByTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemTagNodeSortingByTracker"
  },
  {
    "label": "FMemTagNodeSortingByInstanceCount",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemTagNodeSortingByInstanceCount"
  },
  {
    "label": "FMemTagNodeSortingByTotalInclusiveSize",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemTagNodeSortingByTotalInclusiveSize"
  },
  {
    "label": "FMemTagNodeSortingByTotalExclusiveSize",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemTagNodeSortingByTotalExclusiveSize"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMemTagNodeSortingByType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Templates / SharedPointer . h \" # include \" InsightsCore / Table / ViewModels / TableColumn . h \" # include \" InsightsCore / Table / ViewModels / TableCellValueSorter . h \" # include \" InsightsCore / Table / ViewModels / TreeNodeGrouping . h \" # include \" Insights / MemoryProfiler / ViewModels / MemTagNode . h \" namespace UE::Insights::MemoryProfiler { class FMemTagNodeSortingByType : public FTableCellValueSorter { public :)",
    "insertText": "FMemTagNodeSortingByType(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "Sort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sort(TArray<FBaseTreeNodePtr>& NodesToSort, ESortMode SortMode)"
  },
  {
    "label": "FMemTagNodeSortingByTracker()",
    "kind": "Method",
    "detail": "Function (} ; class FMemTagNodeSortingByTracker : public FTableCellValueSorter { public :)",
    "insertText": "FMemTagNodeSortingByTracker(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FMemTagNodeSortingByInstanceCount()",
    "kind": "Method",
    "detail": "Function (} ; class FMemTagNodeSortingByInstanceCount : public FTableCellValueSorter { public :)",
    "insertText": "FMemTagNodeSortingByInstanceCount(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FMemTagNodeSortingByTotalInclusiveSize()",
    "kind": "Method",
    "detail": "Function (} ; class FMemTagNodeSortingByTotalInclusiveSize : public FTableCellValueSorter { public :)",
    "insertText": "FMemTagNodeSortingByTotalInclusiveSize(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FMemTagNodeSortingByTotalExclusiveSize()",
    "kind": "Method",
    "detail": "Function (} ; class FMemTagNodeSortingByTotalExclusiveSize : public FTableCellValueSorter { public :)",
    "insertText": "FMemTagNodeSortingByTotalExclusiveSize(TSharedRef<FTableColumn> InColumnRef)"
  }
]