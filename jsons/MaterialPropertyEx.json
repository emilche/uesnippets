[
  {
    "label": "MATERIALBAKING_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MATERIALBAKING_API"
  },
  {
    "label": "FMaterialPropertyEx()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" # include \" SceneTypes . h \" # include \" Templates / TypeHash . h \" # include \" UObject / NameTypes . h \" # include \" UObject / UnrealNames . h \" struct FMaterialPropertyEx {)",
    "insertText": "FMaterialPropertyEx(EMaterialProperty Type = MP_MAX, const FName& CustomOutput = NAME_None) : Type(Type) , CustomOutput(CustomOutput)"
  },
  {
    "label": "FMaterialPropertyEx()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMaterialPropertyEx(const FName& CustomOutput) : Type(MP_CustomOutput) , CustomOutput(CustomOutput)"
  },
  {
    "label": "FMaterialPropertyEx()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMaterialPropertyEx(const TCHAR* CustomOutput) : Type(MP_CustomOutput) , CustomOutput(CustomOutput)"
  },
  {
    "label": "IsCustomOutput()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCustomOutput()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FMaterialPropertyEx& Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FMaterialPropertyEx& Other)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToString()"
  }
]