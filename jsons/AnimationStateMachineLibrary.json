[
  {
    "label": "FAnimNode_StateMachine",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_StateMachine"
  },
  {
    "label": "FAnimNode_StateResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_StateResult"
  },
  {
    "label": "FAnimationStateResultReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationStateResultReference"
  },
  {
    "label": "FAnimationStateMachineReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationStateMachineReference"
  },
  {
    "label": "UAnimationStateMachineLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationStateMachineLibrary"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Animation / AnimExecutionContext . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" Animation / AnimNodeReference . h \" # include \" Animation / AnimStateMachineTypes . h \" # include \" AnimationStateMachineLibrary . generated . h \" struct FAnimNode_StateMachine ; struct FAnimNode_StateResult ;)",
    "insertText": "USTRUCT(BlueprintType, DisplayName = \"Animation State Reference\")"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(BlueprintType, DisplayName = \"Animation State Machine\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Experimental, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintCallable, Category = \"State Machine\", meta=(BlueprintThreadSafe, DisplayName = \"Convert to Animation State\", ExpandEnumAsExecs = \"Result\")) static ANIMGRAPHRUNTIME_API void ConvertToAnimationStateResult(const FAnimNodeReference& Node, FAnimationStateResultReference& AnimationState, EAnimNodeReferenceConversionResult& Result)"
  },
  {
    "label": "ConvertToAnimationStateResult()",
    "kind": "Method",
    "detail": "Function (EAnimNodeReferenceConversionResult ConversionResult ;)",
    "insertText": "ConvertToAnimationStateResult(Node, AnimationState, ConversionResult)"
  },
  {
    "label": "Result()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Result(ConversionResult == EAnimNodeReferenceConversionResult::Succeeded)"
  },
  {
    "label": "ConvertToAnimationStateMachine()",
    "kind": "Method",
    "detail": "Function (EAnimNodeReferenceConversionResult ConversionResult ;)",
    "insertText": "ConvertToAnimationStateMachine(Node, AnimationState, ConversionResult)"
  }
]