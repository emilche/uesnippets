[
  {
    "label": "UNREALED_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UNREALED_API"
  },
  {
    "label": "UPanelExtensionSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPanelExtensionSubsystem"
  },
  {
    "label": "SExtensionPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SExtensionPanel"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EditorSubsystem . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" Templates / SubclassOf . h \" # include \" Containers / Queue . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" PanelExtensionSubsystem . generated . h \" PRAGMA_DISABLE_DEPRECATION_WARNINGS struct FPanelExtensionFactory { public : FName Identifier ; int32 SortWeight = 0 ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(TSharedRef<SWidget>, FCreateExtensionWidget, FWeakObjectPtr)"
  },
  {
    "label": "SExtensionPanel()",
    "kind": "Method",
    "detail": "Function (} ; PRAGMA_ENABLE_DEPRECATION_WARNINGS class SExtensionPanel : public SCompoundWidget { public : ~)",
    "insertText": "SExtensionPanel()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SExtensionPanel) : _ExtensionPanelID() , _DefaultWidget() , _ExtensionContext() , _WindowZoneOverride()"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FName, ExtensionPanelID) SLATE_ATTRIBUTE(TSharedPtr<SWidget>, DefaultWidget) SLATE_ATTRIBUTE(FWeakObjectPtr, ExtensionContext) SLATE_ATTRIBUTE(EWindowZone::Type, WindowZoneOverride) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetExtensionContext()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetExtensionContext()"
  },
  {
    "label": "GetWindowZoneOverride()",
    "kind": "Method",
    "detail": "Function (} EWindowZone::Type)",
    "insertText": "GetWindowZoneOverride()"
  },
  {
    "label": "RebuildWidget()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "RebuildWidget()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (FName ExtensionPanelID ; TSharedPtr<SWidget> DefaultWidget ; FWeakObjectPtr ExtensionContext ; TAttribute<EWindowZone::Type> WindowZoneOverride ; } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UNREALED_API UPanelExtensionSubsystem()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSubsystemCollectionBase& Collection)"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "RegisterPanelFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPanelFactory(FName ExtensionPanelID, const FPanelExtensionFactory& InPanelExtensionFactory)"
  },
  {
    "label": "UnregisterPanelFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterPanelFactory(FName Identifier, FName ExtensionPanelID = NAME_None)"
  },
  {
    "label": "IsPanelFactoryRegistered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPanelFactoryRegistered(FName Identifier, FName ExtensionPanelID = NAME_None)"
  },
  {
    "label": "CreateWidget()",
    "kind": "Method",
    "detail": "Function (protected : class SExtensionPanel ; TSharedRef<SWidget>)",
    "insertText": "CreateWidget(FName ExtensionPanelID, FWeakObjectPtr ExtensionContext)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FPanelFactoryRegistryChanged)"
  },
  {
    "label": "OnPanelFactoryRegistryChanged()",
    "kind": "Method",
    "detail": "Function (FPanelFactoryRegistryChanged&)",
    "insertText": "OnPanelFactoryRegistryChanged(FName ExtensionPanelID)"
  }
]