[
  {
    "label": "FEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEvent"
  },
  {
    "label": "FMixerNullCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerNullCallback"
  },
  {
    "label": "FMixerNullCallback()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GenericPlatform / GenericPlatformAffinity . h \" # include \" HAL / Platform . h \" # include \" HAL / Runnable . h \" # include \" HAL / RunnableThread . h \" # include \" Templates / Function . h \" # include \" Templates / UniquePtr . h \" # include<atomic> class FEvent ; namespace Audio { class FMixerNullCallback : protected FRunnable { public :)",
    "insertText": "FMixerNullCallback(float BufferDuration, TFunction<void()> InCallback, EThreadPriority ThreadPriority = TPri_TimeCritical, bool bStartedPaused = false)"
  },
  {
    "label": "FMixerNullCallback()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMixerNullCallback()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Run()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "Resume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resume(const TFunction<void()>& InCallback, float InBufferDuration)"
  },
  {
    "label": "Pause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pause()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TFunction<)",
    "insertText": "void()"
  }
]