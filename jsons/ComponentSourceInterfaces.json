[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FMeshDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDescription"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FComponentMaterialSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentMaterialSet"
  },
  {
    "label": "FPrimitiveComponentTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveComponentTarget"
  },
  {
    "label": "FCommitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommitParams"
  },
  {
    "label": "FComponentTargetFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentTargetFactory"
  },
  {
    "label": "FPrimitiveComponentTarget()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Math / UnrealMath . h \" # include \" Misc / Optional . h \" # include \" Templates / Function . h \" class AActor ; class UActorComponent ; class UPrimitiveComponent ; struct FMeshDescription ; class UMaterialInterface ; struct FHitResult ; struct FComponentMaterialSet ; class FPrimitiveComponentTarget { public : ~)",
    "insertText": "FPrimitiveComponentTarget()"
  },
  {
    "label": "FPrimitiveComponentTarget()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPrimitiveComponentTarget(UPrimitiveComponent* Component ): Component( Component)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetOwnerActor()",
    "kind": "Method",
    "detail": "Function (AActor*)",
    "insertText": "GetOwnerActor()"
  },
  {
    "label": "GetOwnerComponent()",
    "kind": "Method",
    "detail": "Function (UPrimitiveComponent*)",
    "insertText": "GetOwnerComponent()"
  },
  {
    "label": "GetNumMaterials()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumMaterials()"
  },
  {
    "label": "GetMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetMaterial(int32 MaterialIndex)"
  },
  {
    "label": "GetMaterialSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMaterialSet(FComponentMaterialSet& MaterialSetOut, bool bAssetMaterials = false)"
  },
  {
    "label": "GetWorldTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetWorldTransform()"
  },
  {
    "label": "HitTest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HitTest(const FRay& WorldRay, FHitResult& OutHit)"
  },
  {
    "label": "SetOwnerVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwnerVisibility(bool bVisible)"
  },
  {
    "label": "HasSameSourceData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSameSourceData(const FPrimitiveComponentTarget& OtherTarget)"
  },
  {
    "label": "CommitMaterialSetUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitMaterialSetUpdate(const FComponentMaterialSet& MaterialSet, bool bApplyToAsset)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (struct FCommitParams { FMeshDescription* MeshDescription { nullptr } ; } ; using FCommitter = TFunction<)",
    "insertText": "void(const FCommitParams&)"
  },
  {
    "label": "GetMesh()",
    "kind": "Method",
    "detail": "Function (FMeshDescription*)",
    "insertText": "GetMesh()"
  },
  {
    "label": "CommitMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitMesh(const FCommitter&)"
  },
  {
    "label": "FComponentTargetFactory()",
    "kind": "Method",
    "detail": "Function (UPrimitiveComponent* Component { } ; } ; class FComponentTargetFactory { public : ~)",
    "insertText": "FComponentTargetFactory()"
  },
  {
    "label": "CanBuild()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanBuild(UActorComponent* Candidate)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FPrimitiveComponentTarget>)",
    "insertText": "Build(UPrimitiveComponent* PrimitiveComponent)"
  },
  {
    "label": "AddComponentTargetFactory()",
    "kind": "Method",
    "detail": "Function (} ; int32)",
    "insertText": "AddComponentTargetFactory(TUniquePtr<FComponentTargetFactory> Factory)"
  },
  {
    "label": "FindComponentTargetFactoryByKey()",
    "kind": "Method",
    "detail": "Function (FComponentTargetFactory*)",
    "insertText": "FindComponentTargetFactoryByKey(int32 Key)"
  },
  {
    "label": "RemoveComponentTargetFactoryByKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveComponentTargetFactoryByKey(int32 Key)"
  },
  {
    "label": "RemoveAllComponentTargetFactoryies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllComponentTargetFactoryies()"
  },
  {
    "label": "MakeComponentTarget()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FPrimitiveComponentTarget>)",
    "insertText": "MakeComponentTarget(UPrimitiveComponent* Component)"
  },
  {
    "label": "CanMakeComponentTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMakeComponentTarget(UActorComponent* Component)"
  }
]