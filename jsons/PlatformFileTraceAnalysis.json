[
  {
    "label": "FTimeline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimeline"
  },
  {
    "label": "FFileActivityProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFileActivityProvider"
  },
  {
    "label": "FPlatformFileTraceAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlatformFileTraceAnalyzer"
  },
  {
    "label": "FPendingActivity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingActivity"
  },
  {
    "label": "FPlatformFileTraceAnalyzer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Trace / Analyzer . h \" # include \" Containers / Map . h \" # include \" TraceServices / Model / AnalysisSession . h \" namespace TraceServices { class FTimeline ; class FFileActivityProvider ; class FPlatformFileTraceAnalyzer : public UE::Trace::IAnalyzer { public :)",
    "insertText": "FPlatformFileTraceAnalyzer(IAnalysisSession& Session, FFileActivityProvider& FileActivityProvider)"
  },
  {
    "label": "OnAnalysisBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnalysisBegin(const FOnAnalysisContext& Context)"
  },
  {
    "label": "OnEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnEvent(uint16 RouteId, EStyle Style, const FOnEventContext& Context)"
  }
]