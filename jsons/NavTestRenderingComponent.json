[
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "ANavigationTestingActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANavigationTestingActor"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FMeshElementCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshElementCollector"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "UNavTestRenderingComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavTestRenderingComponent"
  },
  {
    "label": "FNodeDebugData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeDebugData"
  },
  {
    "label": "FNavTestSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNavTestSceneProxy"
  },
  {
    "label": "FNavTestDebugDrawDelegateHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNavTestDebugDrawDelegateHelper"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Debug / DebugDrawComponent . h \" # include \" AI / Navigation / NavigationTypes . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" PrimitiveViewRelevance . h \" # include \" DynamicMeshBuilder . h \" # include \" DebugRenderSceneProxy . h \" # endif # include \" NavTestRenderingComponent . generated . h \" # if UE_ENABLE_DEBUG_DRAWING class FPrimitiveSceneProxy ; class ANavigationTestingActor ; class APlayerController ; class FMeshElementCollector ; class UCanvas ; class UNavTestRenderingComponent ; struct FNodeDebugData ; class FNavTestSceneProxy final : public FDebugRenderSceneProxy { class FNavTestDebugDrawDelegateHelper ; public : SIZE_T)",
    "insertText": "GetTypeHash()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (struct FNodeDebugData { NavNodeRef PolyRef ; FVector Position ; FString Desc ; FSetElementId ParentId ; uint32 bClosedSet : 1 ; uint32 bBestPath : 1 ; uint32 bModified : 1 ; uint32 bOffMeshLink : 1 ; bool)",
    "insertText": "operator(const FNodeDebugData& Other)"
  },
  {
    "label": "FNavTestSceneProxy()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "FNavTestSceneProxy(const UNavTestRenderingComponent* InComponent)"
  },
  {
    "label": "GetDynamicMeshElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDynamicMeshElements(const TArray<const FSceneView*>& Views, const FSceneViewFamily& ViewFamily, uint32 VisibilityMap, FMeshElementCollector& Collector)"
  },
  {
    "label": "GatherPathPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherPathPoints()"
  },
  {
    "label": "GatherPathStep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherPathStep()"
  },
  {
    "label": "GetViewRelevance()",
    "kind": "Method",
    "detail": "Function (} FPrimitiveViewRelevance)",
    "insertText": "GetViewRelevance(const FSceneView* View)"
  },
  {
    "label": "GetMemoryFootprint()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetMemoryFootprint()"
  },
  {
    "label": "GetAllocatedSizeInternal()",
    "kind": "Method",
    "detail": "Function (} private : uint32)",
    "insertText": "GetAllocatedSizeInternal()"
  },
  {
    "label": "FNavTestDebugDrawDelegateHelper()",
    "kind": "Method",
    "detail": "Function (FVector3f NavMeshDrawOffset ; uint32 bShowBestPath : 1 ; uint32 bShowNodePool : 1 ; uint32 bShowDiff : 1 ; ANavigationTestingActor* NavTestActor ; TArray<FVector> PathPoints ; TArray<FString> PathPointFlags ; TArray<FDynamicMeshVertex> OpenSetVerts ; TArray<uint32> OpenSetIndices ; TArray<FDynamicMeshVertex> ClosedSetVerts ; TArray<uint32> ClosedSetIndices ; TSet<FNodeDebugData> NodeDebug ; FSetElementId BestNodeId ; FVector ClosestWallLocation ; } ; class FNavTestDebugDrawDelegateHelper : public FDebugDrawDelegateHelper { typedef FDebugDrawDelegateHelper Super ; public :)",
    "insertText": "FNavTestDebugDrawDelegateHelper(): bShowBestPath(false), bShowDiff(false)"
  },
  {
    "label": "SetupFromProxy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetupFromProxy(const FNavTestSceneProxy* InSceneProxy)"
  },
  {
    "label": "DrawDebugLabels()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "DrawDebugLabels(UCanvas* Canvas, APlayerController*)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (private : TSet<FNavTestSceneProxy::FNodeDebugData> NodeDebug ; ANavigationTestingActor* NavTestActor = nullptr ; TArray<FVector> PathPoints ; TArray<FString> PathPointFlags ; FSetElementId BestNodeId ; uint32 bShowBestPath : 1 ; uint32 bShowDiff : 1 ; } ; # endif)",
    "insertText": "UCLASS(ClassGroup = Debug)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: virtual FBoxSphereBounds CalcBounds(const FTransform &LocalToWorld)"
  },
  {
    "label": "CreateDebugSceneProxy()",
    "kind": "Method",
    "detail": "Function (# if UE_ENABLE_DEBUG_DRAWING FDebugRenderSceneProxy*)",
    "insertText": "CreateDebugSceneProxy()"
  },
  {
    "label": "GetDebugDrawDelegateHelper()",
    "kind": "Method",
    "detail": "Function (FDebugDrawDelegateHelper&)",
    "insertText": "GetDebugDrawDelegateHelper()"
  }
]