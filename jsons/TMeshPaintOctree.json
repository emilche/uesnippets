[
  {
    "label": "FMeshPaintTriangle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshPaintTriangle"
  },
  {
    "label": "FMeshPaintTriangleOctreeSemantics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshPaintTriangleOctreeSemantics"
  },
  {
    "label": "GetBoundingBox()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Math / GenericOctreePublic . h \" # include \" Math / GenericOctree . h \" struct FMeshPaintTriangle { uint32 Index ; FVector Vertices [ 3 ] ; FVector Normal ; FBoxCenterAndExtent BoxCenterAndExtent ; } ; struct FMeshPaintTriangleOctreeSemantics { enum { MaxElementsPerLeaf = 1 6 } ; enum { MinInclusiveElementsPerNode = 7 } ; enum { MaxNodeDepth = 1 2 } ; typedef TInlineAllocator<MaxElementsPerLeaf> ElementAllocator ; FBoxCenterAndExtent)",
    "insertText": "GetBoundingBox(const FMeshPaintTriangle& Element)"
  },
  {
    "label": "SetElementId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetElementId(const FMeshPaintTriangle& Element, FOctreeElementId2 Id)"
  }
]