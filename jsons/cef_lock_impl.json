[
  {
    "label": "LockImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LockImpl"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_BASE_INTERNAL_CEF_LOCK_IMPL_H_ # define CEF_INCLUDE_BASE_INTERNAL_CEF_LOCK_IMPL_H_ # include \" include / base / cef_build . h \" # if)",
    "insertText": "defined(OS_WIN) #include <windows.h> #elif defined(OS_POSIX)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (namespace cef_internal { class LockImpl { public : # if)",
    "insertText": "defined(OS_WIN)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# elif)",
    "insertText": "defined(OS_POSIX)"
  },
  {
    "label": "LockImpl()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "LockImpl()"
  },
  {
    "label": "Try()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Try()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Lock()"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlock()"
  },
  {
    "label": "native_handle()",
    "kind": "Method",
    "detail": "Function (NativeHandle*)",
    "insertText": "native_handle()"
  }
]