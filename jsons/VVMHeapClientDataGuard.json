[
  {
    "label": "FHeapClientDataGuard",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeapClientDataGuard"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "FHeapClientDataGuard()",
    "kind": "Method",
    "detail": "Function (struct FHeapClientDataGuard final {)",
    "insertText": "FHeapClientDataGuard(FHeapPageHeader* InHeader) : Header(InHeader) , ClientDataPtr(Header->LockClientData())"
  },
  {
    "label": "FHeapClientDataGuard()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FHeapClientDataGuard()"
  },
  {
    "label": "UnlockClientData()",
    "kind": "Method",
    "detail": "Function (Header ->)",
    "insertText": "UnlockClientData()"
  },
  {
    "label": "GetHeader()",
    "kind": "Method",
    "detail": "Function (} FHeapPageHeader*)",
    "insertText": "GetHeader()"
  }
]