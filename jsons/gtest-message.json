[
  {
    "label": "GTEST_API_",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GTEST_API_"
  },
  {
    "label": "GTEST_DISABLE_MSC_WARNINGS_PUSH_()",
    "kind": "Method",
    "detail": "Function (# ifndef GOOGLETEST_INCLUDE_GTEST_GTEST_MESSAGE_H_ # define GOOGLETEST_INCLUDE_GTEST_GTEST_MESSAGE_H_ # include<limits> # include<memory> # include<sstream> # include \" gtest / internal / gtest - port . h \")",
    "insertText": "GTEST_DISABLE_MSC_WARNINGS_PUSH_(4251 \\ ) void operator<<(const testing::internal::Secret&, int)"
  },
  {
    "label": "ostream()",
    "kind": "Method",
    "detail": "Function (namespace testing { class GTEST_API_ Message { private : typedef)",
    "insertText": "ostream(*BasicNarrowIoManip)(std::ostream&)"
  },
  {
    "label": "Message()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "Message()"
  },
  {
    "label": "Message()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Message(const Message& msg) : ss_(new ::std::stringstream)"
  },
  {
    "label": "GetString()",
    "kind": "Method",
    "detail": "Function (* ss_<<msg .)",
    "insertText": "GetString()"
  },
  {
    "label": "Message()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Message(const char* str) : ss_(new ::std::stringstream)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* ss_<<str ; } template<T> Message&)",
    "insertText": "operator(const T& val)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (using::operator<<;* ss_<<val ; return* this ; } template<T> Message&)",
    "insertText": "operator(T* const& pointer)"
  },
  {
    "label": "ss_()",
    "kind": "Method",
    "detail": "Function (*)",
    "insertText": "ss_(null)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} else {* ss_<<pointer ; } return* this ; } Message&)",
    "insertText": "operator(BasicNarrowIoManip val)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* ss_<<val ; return* this ; } Message&)",
    "insertText": "operator(bool b)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} Message&)",
    "insertText": "operator(const wchar_t* wide_c_str)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Message&)",
    "insertText": "operator(wchar_t* wide_c_str)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# if GTEST_HAS_STD_WSTRING Message&)",
    "insertText": "operator(const ::std::wstring& wstr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (private : const std::unique_ptr<::std::stringstream> ss_ ; void)",
    "insertText": "operator(const Message&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; std::ostream&)",
    "insertText": "operator(std::ostream& os, const Message& sb)"
  },
  {
    "label": "StreamableToString()",
    "kind": "Method",
    "detail": "Function (} namespace internal { template<T> std::string)",
    "insertText": "StreamableToString(const T& streamable)"
  }
]