[
  {
    "label": "IVoiceCapture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IVoiceCapture"
  },
  {
    "label": "IVoiceEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IVoiceEncoder"
  },
  {
    "label": "IVoiceDecoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IVoiceDecoder"
  },
  {
    "label": "FVoiceModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVoiceModule"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" Interfaces / VoiceCapture . h \" # include \" Interfaces / VoiceCodec . h \" # include \" Net / VoiceConfig . h \" # define DEFAULT_VOICE_SAMPLE_RATE 1 6 0 0 0 # define VOICE_SAMPLE_RATE DEFAULT_VOICE_SAMPLE_RATE class IVoiceCapture ; class IVoiceEncoder ; class IVoiceDecoder ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogVoice, Display, All)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogVoiceEncode, Display, All)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogVoiceDecode, Display, All)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogVoiceCapture, Warning, All)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (class FVoiceModule : public IModuleInterface { public : FVoiceModule&)",
    "insertText": "Get()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "CreateVoiceCapture()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<IVoiceCapture>)",
    "insertText": "CreateVoiceCapture(const FString& DeviceName, int32 SampleRate = UVOIPStatics::GetVoiceSampleRate(), int32 NumChannels = UVOIPStatics::GetVoiceNumChannels())"
  },
  {
    "label": "CreateVoiceEncoder()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IVoiceEncoder>)",
    "insertText": "CreateVoiceEncoder(int32 SampleRate = UVOIPStatics::GetVoiceSampleRate(), int32 NumChannels = UVOIPStatics::GetVoiceNumChannels(), EAudioEncodeHint EncodeHint = UVOIPStatics::GetAudioEncodingHint())"
  },
  {
    "label": "CreateVoiceDecoder()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IVoiceDecoder>)",
    "insertText": "CreateVoiceDecoder(int32 SampleRate = UVOIPStatics::GetVoiceSampleRate(), int32 NumChannels = UVOIPStatics::GetVoiceNumChannels())"
  },
  {
    "label": "DoesPlatformSupportVoiceCapture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesPlatformSupportVoiceCapture()"
  },
  {
    "label": "IsVoiceEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVoiceEnabled()"
  },
  {
    "label": "CreateVoiceDecoderObject()",
    "kind": "Method",
    "detail": "Function (IVoiceDecoder*)",
    "insertText": "CreateVoiceDecoderObject(int32 SampleRate, int32 NumChannels)"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  }
]