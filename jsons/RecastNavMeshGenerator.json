[
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "ARecastNavMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ARecastNavMesh"
  },
  {
    "label": "FNavigationOctree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNavigationOctree"
  },
  {
    "label": "FNavMeshBuildContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNavMeshBuildContext"
  },
  {
    "label": "FRecastNavMeshGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRecastNavMeshGenerator"
  },
  {
    "label": "FTileRasterizationContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileRasterizationContext"
  },
  {
    "label": "BuildContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BuildContext"
  },
  {
    "label": "dtTileCacheLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtTileCacheLayer"
  },
  {
    "label": "FKAggregateGeom",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKAggregateGeom"
  },
  {
    "label": "FTileCacheCompressor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileCacheCompressor"
  },
  {
    "label": "FTileCacheAllocator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileCacheAllocator"
  },
  {
    "label": "FTileGenerationContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileGenerationContext"
  },
  {
    "label": "dtLinkBuilderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtLinkBuilderData"
  },
  {
    "label": "FNavigationElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationElement"
  },
  {
    "label": "dtNavMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtNavMesh"
  },
  {
    "label": "FNavRegenTimeSliceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNavRegenTimeSliceManager"
  },
  {
    "label": "UNavigationSystemV1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationSystemV1"
  },
  {
    "label": "FRecastBuildConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecastBuildConfig"
  },
  {
    "label": "FRecastVoxelCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecastVoxelCache"
  },
  {
    "label": "FTileInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileInfo"
  },
  {
    "label": "FRecastGeometryCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecastGeometryCache"
  },
  {
    "label": "FHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeader"
  },
  {
    "label": "FWalkableSlopeOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWalkableSlopeOverride"
  },
  {
    "label": "FRecastRawGeometryElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecastRawGeometryElement"
  },
  {
    "label": "FRecastAreaNavModifierElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecastAreaNavModifierElement"
  },
  {
    "label": "FRcTileBox",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRcTileBox"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRecastTileTimeSliceSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecastTileTimeSliceSettings"
  },
  {
    "label": "FGeneratedNavigationLink",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeneratedNavigationLink"
  },
  {
    "label": "FRecastTileGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRecastTileGenerator"
  },
  {
    "label": "dtTileCacheAlloc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtTileCacheAlloc"
  },
  {
    "label": "dtTileCacheContourSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtTileCacheContourSet"
  },
  {
    "label": "rcHeightfield",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rcHeightfield"
  },
  {
    "label": "FTileCacheAllocator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileCacheAllocator"
  },
  {
    "label": "FTileGenerationContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileGenerationContext"
  },
  {
    "label": "FTileRasterizationContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileRasterizationContext"
  },
  {
    "label": "FRecastTileGeneratorWrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecastTileGeneratorWrapper"
  },
  {
    "label": "FPendingTileElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingTileElement"
  },
  {
    "label": "TRunningTileElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRunningTileElement"
  },
  {
    "label": "FTileTimestamp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileTimestamp"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRecastNavMeshGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRecastNavMeshGenerator"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FVisualLogEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualLogEntry"
  },
  {
    "label": "from",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "from"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "FNavigationDirtyAreaPerTileDebugInformation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationDirtyAreaPerTileDebugInformation"
  },
  {
    "label": "FSyncTimeSlicedData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSyncTimeSlicedData"
  },
  {
    "label": "FRecastGeometryCache()",
    "kind": "Method",
    "detail": "Function (NAVIGATIONSYSTEM_API)",
    "insertText": "FRecastGeometryCache(const uint8* Memory)"
  },
  {
    "label": "FRecastTileGenerator()",
    "kind": "Method",
    "detail": "Function (NAVIGATIONSYSTEM_API)",
    "insertText": "FRecastTileGenerator(FRecastNavMeshGenerator& ParentGenerator, const FIntPoint& Location, const double PendingTileCreationTime)"
  },
  {
    "label": "DoWorkTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "DoWorkTimeSliced()"
  },
  {
    "label": "DoWork()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoWork()"
  },
  {
    "label": "CalculateTileBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "CalculateTileBounds(int32 X, int32 Y, const FVector& RcNavMeshOrigin, const FBox& TotalNavBounds, FVector::FReal TileSizeInWorldUnits)"
  },
  {
    "label": "GenerateTileTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "GenerateTileTimeSliced()"
  },
  {
    "label": "GenerateTile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateTile()"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(const FRecastNavMeshGenerator& ParentGenerator, const TArray<FBox>& DirtyAreas)"
  },
  {
    "label": "SetupTileConfigFromHighestResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupTileConfigFromHighestResolution(const FRecastNavMeshGenerator& ParentGenerator)"
  },
  {
    "label": "GatherGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherGeometry(const FRecastNavMeshGenerator& ParentGenerator, bool bGeometryChanged)"
  },
  {
    "label": "PrepareGeometrySources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareGeometrySources(const FRecastNavMeshGenerator& ParentGenerator, bool bGeometryChanged)"
  },
  {
    "label": "GatherGeometryFromSources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherGeometryFromSources()"
  },
  {
    "label": "GatherGeometryFromSourcesTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "GatherGeometryFromSourcesTimeSliced()"
  },
  {
    "label": "GatherNavigationDataGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherNavigationDataGeometry(const TSharedRef<FNavigationRelevantData, ESPMode::ThreadSafe>& ElementData, UNavigationSystemV1& NavSys, const FNavDataConfig& OwnerNavDataConfig, bool bGeometryChanged)"
  },
  {
    "label": "CreateHeightField()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateHeightField(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "GenerateRecastFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateRecastFilter(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "GenerateRecastFilterTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "GenerateRecastFilterTimeSliced(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "BuildCompactHeightField()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildCompactHeightField(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "RecastErodeWalkable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RecastErodeWalkable(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "CreateHeightField()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateHeightField(FNavMeshBuildContext& BuildContext)"
  },
  {
    "label": "RasterizeTrianglesTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "RasterizeTrianglesTimeSliced(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "RasterizeTriangles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RasterizeTriangles(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "RasterizeGeometryRecastTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "RasterizeGeometryRecastTimeSliced(FNavMeshBuildContext& BuildContext, const TArray<FVector::FReal>& Coords, const TArray<int32>& Indices, const rcRasterizationFlags RasterizationFlags, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "RasterizeGeometryRecast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RasterizeGeometryRecast(FNavMeshBuildContext& BuildContext, const TArray<FVector::FReal>& Coords, const TArray<int32>& Indices, const rcRasterizationFlags RasterizationFlags, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "RasterizeGeometryTransformCoordsAndFlipIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RasterizeGeometryTransformCoordsAndFlipIndices(const TArray<FVector::FReal>& Coords, const TArray<int32>& Indices, const FTransform& LocalToWorld)"
  },
  {
    "label": "RasterizeGeometryTransformCoords()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RasterizeGeometryTransformCoords(const TArray<FVector::FReal>& Coords, const FTransform& LocalToWorld)"
  },
  {
    "label": "RasterizeGeometryTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "RasterizeGeometryTimeSliced(FNavMeshBuildContext& BuildContext, const TArray<FVector::FReal>& Coords, const TArray<int32>& Indices, const FTransform& LocalToWorld, const rcRasterizationFlags RasterizationFlags, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "RasterizeGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RasterizeGeometry(FNavMeshBuildContext& BuildContext, const TArray<FVector::FReal>& Coords, const TArray<int32>& Indices, const FTransform& LocalToWorld, const rcRasterizationFlags RasterizationFlags, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "GenerateRecastFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateRecastFilter(FNavMeshBuildContext& BuildContext)"
  },
  {
    "label": "GenerateRecastFilterTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "GenerateRecastFilterTimeSliced(FNavMeshBuildContext& BuildContext)"
  },
  {
    "label": "BuildCompactHeightField()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildCompactHeightField(FNavMeshBuildContext& BuildContext)"
  },
  {
    "label": "RecastErodeWalkable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RecastErodeWalkable(FNavMeshBuildContext& BuildContext)"
  },
  {
    "label": "RecastBuildLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RecastBuildLayers(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "RecastBuildTileCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RecastBuildTileCache(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "GenerateCompressedLayersTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "GenerateCompressedLayersTimeSliced(FNavMeshBuildContext& BuildContext)"
  },
  {
    "label": "GenerateCompressedLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateCompressedLayers(FNavMeshBuildContext& BuildContext)"
  },
  {
    "label": "GenerateNavigationDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateNavigationDataLayer(FNavMeshBuildContext& BuildContext, FTileCacheCompressor& TileCompressor, FTileCacheAllocator& GenNavAllocator, FTileGenerationContext& GenerationContext, int32 LayerIdx)"
  },
  {
    "label": "GenerateNavigationDataTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "GenerateNavigationDataTimeSliced(FNavMeshBuildContext& BuildContext)"
  },
  {
    "label": "GenerateNavigationData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateNavigationData(FNavMeshBuildContext& BuildContext)"
  },
  {
    "label": "GenerateCompressedLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateCompressedLayers(FNavMeshBuildContext& BuildContext, const dtLinkBuilderData& InLinkBuilderData)"
  },
  {
    "label": "GenerateNavigationDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateNavigationDataLayer(FNavMeshBuildContext& BuildContext, FTileCacheCompressor& TileCompressor, FTileCacheAllocator& GenNavAllocator, FTileGenerationContext& GenerationContext, const dtLinkBuilderData& InLinkBuilderData, int32 LayerIdx)"
  },
  {
    "label": "GenerateNavigationDataTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "GenerateNavigationDataTimeSliced(FNavMeshBuildContext& BuildContext, const dtLinkBuilderData& InLinkBuilderData)"
  },
  {
    "label": "GenerateNavigationData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateNavigationData(FNavMeshBuildContext& BuildContext, const dtLinkBuilderData& InLinkBuilderData)"
  },
  {
    "label": "ApplyVoxelFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVoxelFilter(struct rcHeightfield* SolidHF, FVector::FReal WalkableRadius)"
  },
  {
    "label": "InitRasterizationMaskArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRasterizationMaskArray(const rcHeightfield* InSolidHF, TInlineMaskArray& OutRasterizationMasks)"
  },
  {
    "label": "ComputeRasterizationMasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeRasterizationMasks(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext)"
  },
  {
    "label": "MarkRasterizationMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkRasterizationMask(rcContext* /*BuildContext*/, rcHeightfield* InSolidHF,\n\t\tconst FAreaNavModifier& Modifier, const FTransform& LocalToWorld, const int32 Mask, TInlineMaskArray& OutMaskArray)"
  },
  {
    "label": "MarkDynamicAreas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDynamicAreas(dtTileCacheLayer& Layer)"
  },
  {
    "label": "MarkDynamicArea()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDynamicArea(const FAreaNavModifier& Modifier, const FTransform& LocalToWorld, dtTileCacheLayer& Layer)"
  },
  {
    "label": "MarkDynamicArea()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDynamicArea(const FAreaNavModifier& Modifier, const FTransform& LocalToWorld, dtTileCacheLayer& Layer, const int32 AreaId, const int32* ReplaceAreaIdPtr)"
  },
  {
    "label": "AppendModifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendModifier(const FCompositeNavModifier& Modifier, const FNavDataPerInstanceTransformDelegate& InTransformsDelegate)"
  },
  {
    "label": "ValidateAndAppendGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateAndAppendGeometry(const FNavigationRelevantData& ElementData, const FCompositeNavModifier& InModifier)"
  },
  {
    "label": "ValidateAndAppendGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateAndAppendGeometry(const TSharedRef<FNavigationRelevantData, ESPMode::ThreadSafe>& ElementData, const FCompositeNavModifier& InModifier)"
  },
  {
    "label": "AppendGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendGeometry(const FNavigationRelevantData& ElementData, const FCompositeNavModifier& InModifier, const FNavDataPerInstanceTransformDelegate& InTransformsDelegate)"
  },
  {
    "label": "PrepareVoxelCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareVoxelCache(const TNavStatArray<uint8>& RawCollisionCache, const FCompositeNavModifier& InModifier, TNavStatArray<rcSpanCache>& SpanData)"
  },
  {
    "label": "DumpAsyncData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpAsyncData()"
  },
  {
    "label": "DumpSyncData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpSyncData()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Element.Coord)"
  },
  {
    "label": "FRecastNavMeshGenerator()",
    "kind": "Method",
    "detail": "Function (NAVIGATIONSYSTEM_API)",
    "insertText": "FRecastNavMeshGenerator(ARecastNavMesh& InDestNavMesh)"
  },
  {
    "label": "OnAreaAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAreaAdded(const UClass* AreaClass, int32 AreaID)"
  },
  {
    "label": "OnAreaRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAreaRemoved(const UClass* AreaClass)"
  },
  {
    "label": "ExportComponentGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportComponentGeometry(UActorComponent* InOutComponent, FNavigationRelevantData& OutData)"
  },
  {
    "label": "ExportRigidBodyGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportRigidBodyGeometry(\n\t\tUBodySetup& InOutBodySetup,\n\t\tTNavStatArray<FVector>& OutVertexBuffer,\n\t\tTNavStatArray<int32>& OutIndexBuffer,\n\t\tconst FTransform& LocalToWorld = FTransform::Identity)"
  },
  {
    "label": "ExportRigidBodyGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportRigidBodyGeometry(\n\t\tUBodySetup& InOutBodySetup,\n\t\tTNavStatArray<FVector>& OutTriMeshVertexBuffer,\n\t\tTNavStatArray<int32>& OutTriMeshIndexBuffer,\n\t\tTNavStatArray<FVector>& OutConvexVertexBuffer,\n\t\tTNavStatArray<int32>& OutConvexIndexBuffer,\n\t\tTNavStatArray<int32>& OutShapeBuffer,\n\t\tconst FTransform& LocalToWorld = FTransform::Identity)"
  },
  {
    "label": "ExportAggregatedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportAggregatedGeometry(\n\t\tconst FKAggregateGeom& AggGeom,\n\t\tTNavStatArray<FVector>& OutConvexVertexBuffer,\n\t\tTNavStatArray<int32>& OutConvexIndexBuffer,\n\t\tTNavStatArray<int32>& OutShapeBuffer,\n\t\tconst FTransform& LocalToWorld = FTransform::Identity)"
  },
  {
    "label": "ExportNavRelevantObjectGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportNavRelevantObjectGeometry(INavRelevantInterface& InOutNavRelevantInterface, FNavigationRelevantData& OutData)"
  },
  {
    "label": "ExportVertexSoupGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportVertexSoupGeometry(const TArray<FVector>& InVerts, FNavigationRelevantData& OutData)"
  },
  {
    "label": "ExportRigidBodyGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportRigidBodyGeometry(UBodySetup& InOutBodySetup,\n\t\tTNavStatArray<FVector>& OutVertexBuffer,\n\t\tTNavStatArray<int32>& OutIndexBuffer,\n\t\tFBox& OutBounds,\n\t\tconst FTransform& LocalToWorld = FTransform::Identity)"
  },
  {
    "label": "ExportRigidBodyGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportRigidBodyGeometry(\n\t\tUBodySetup& InOutBodySetup,\n\t\tTNavStatArray<FVector>& OutTriMeshVertexBuffer,\n\t\tTNavStatArray<int32>& OutTriMeshIndexBuffer,\n\t\tTNavStatArray<FVector>& OutConvexVertexBuffer,\n\t\tTNavStatArray<int32>& OutConvexIndexBuffer,\n\t\tTNavStatArray<int32>& OutShapeBuffer,\n\t\tFBox& OutBounds,\n\t\tconst FTransform& LocalToWorld = FTransform::Identity)"
  },
  {
    "label": "ExportAggregatedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportAggregatedGeometry(\n\t\tconst FKAggregateGeom& AggGeom,\n\t\tTNavStatArray<FVector>& OutConvexVertexBuffer,\n\t\tTNavStatArray<int32>& OutConvexIndexBuffer,\n\t\tTNavStatArray<int32>& OutShapeBuffer,\n\t\tFBox& OutBounds,\n\t\tconst FTransform& LocalToWorld = FTransform::Identity)"
  },
  {
    "label": "GetDebugGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDebugGeometry(const FNavigationRelevantData& EncodedData, FNavDebugMeshData& DebugMeshData)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "ConfigureBuildProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigureBuildProperties(FRecastBuildConfig& OutConfig)"
  },
  {
    "label": "UpdateNavigationBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNavigationBounds()"
  },
  {
    "label": "SortPendingBuildTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortPendingBuildTiles()"
  },
  {
    "label": "ConstructTiledNavMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructTiledNavMesh()"
  },
  {
    "label": "CalcNavMeshProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalcNavMeshProperties(int32& MaxTiles, int32& MaxPolys)"
  },
  {
    "label": "MarkDirtyTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDirtyTiles(const TArray<FNavigationDirtyArea>& DirtyAreas)"
  },
  {
    "label": "MarkNavBoundsDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MarkNavBoundsDirty()"
  },
  {
    "label": "RemoveLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLayers(const FIntPoint& Tile, TArray<FNavTileRef>& UpdatedTiles)"
  },
  {
    "label": "StoreCompressedTileCacheLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreCompressedTileCacheLayers(const FRecastTileGenerator& TileGenerator, int32 TileX, int32 TileY)"
  },
  {
    "label": "StoreDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreDebugData(const FRecastTileGenerator& TileGenerator, int32 TileX, int32 TileY)"
  },
  {
    "label": "ProcessTileTasksAsyncAndGetUpdatedTiles()",
    "kind": "Method",
    "detail": "Function (TArray<FNavTileRef>)",
    "insertText": "ProcessTileTasksAsyncAndGetUpdatedTiles(const int32 NumTasksToProcess)"
  },
  {
    "label": "CreateTileGeneratorFromPendingElement()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FRecastTileGenerator>)",
    "insertText": "CreateTileGeneratorFromPendingElement(FIntPoint &OutTileLocation, const int32 ForcedPendingTileIdx = INDEX_NONE)"
  },
  {
    "label": "ProcessTileTasksSyncTimeSlicedAndGetUpdatedTiles()",
    "kind": "Method",
    "detail": "Function (TArray<FNavTileRef>)",
    "insertText": "ProcessTileTasksSyncTimeSlicedAndGetUpdatedTiles()"
  },
  {
    "label": "ProcessTileTasksSyncAndGetUpdatedTiles()",
    "kind": "Method",
    "detail": "Function (TArray<FNavTileRef>)",
    "insertText": "ProcessTileTasksSyncAndGetUpdatedTiles(const int32 NumTasksToProcess)"
  },
  {
    "label": "ProcessTileTasksAndGetUpdatedTiles()",
    "kind": "Method",
    "detail": "Function (TArray<FNavTileRef>)",
    "insertText": "ProcessTileTasksAndGetUpdatedTiles(const int32 NumTasksToProcess)"
  },
  {
    "label": "ResetTimeSlicedTileGeneratorSync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetTimeSlicedTileGeneratorSync()"
  },
  {
    "label": "AddGeneratedTilesTimeSliced()",
    "kind": "Method",
    "detail": "Function (ETimeSliceWorkResult)",
    "insertText": "AddGeneratedTilesTimeSliced(FRecastTileGenerator& TileGenerator, TArray<FNavTileRef>& OutResultTileRefs)"
  },
  {
    "label": "AddGeneratedTilesAndGetUpdatedTiles()",
    "kind": "Method",
    "detail": "Function (TArray<FNavTileRef>)",
    "insertText": "AddGeneratedTilesAndGetUpdatedTiles(FRecastTileGenerator& TileGenerator)"
  },
  {
    "label": "RemoveTileLayersAndGetUpdatedTiles()",
    "kind": "Method",
    "detail": "Function (TArray<FNavTileRef>)",
    "insertText": "RemoveTileLayersAndGetUpdatedTiles(const int32 TileX, const int32 TileY, TMap<int32, dtPolyRef>* OldLayerTileIdMap = nullptr)"
  },
  {
    "label": "RemoveTileLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTileLayers(dtNavMesh* DetourMesh, const int32 TileX, const int32 TileY)"
  },
  {
    "label": "RemoveTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTiles(const TArray<FIntPoint>& Tiles)"
  },
  {
    "label": "ReAddTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReAddTiles(const TArray<FNavMeshDirtyTileElement>& Tiles)"
  },
  {
    "label": "CalcPolyRefBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalcPolyRefBits(ARecastNavMesh* NavMeshOwner, int32& MaxTileBits, int32& MaxPolyBits)"
  },
  {
    "label": "ResolveGeneratedLinkAreas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveGeneratedLinkAreas(FRecastBuildConfig& OutConfig)"
  },
  {
    "label": "RestrictBuildingToActiveTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestrictBuildingToActiveTiles(bool InRestrictBuildingToActiveTiles)"
  },
  {
    "label": "DiscardCurrentBuildingTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardCurrentBuildingTasks()"
  },
  {
    "label": "CreateTileGenerator()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FRecastTileGenerator>)",
    "insertText": "CreateTileGenerator(const FIntPoint& Coord, const TArray<FBox>& DirtyAreas, const double PendingTileCreationTime = 0.)"
  },
  {
    "label": "AddGeneratedTileLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGeneratedTileLayer(int32 LayerIndex, FRecastTileGenerator& TileGenerator, const TMap<int32, dtPolyRef>& OldLayerTileIdMap, TArray<FNavTileRef>& OutResultTileRefs)"
  }
]