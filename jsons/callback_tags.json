[
  {
    "label": "NullCallbackTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NullCallbackTag"
  },
  {
    "label": "WithSignature",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WithSignature"
  },
  {
    "label": "DoNothingCallbackTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DoNothingCallbackTag"
  },
  {
    "label": "WithBoundArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WithBoundArguments"
  },
  {
    "label": "WithBoundArguments()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FUNCTIONAL_CALLBACK_TAGS_H_ # define BASE_FUNCTIONAL_CALLBACK_TAGS_H_ namespace base::internal { struct NullCallbackTag { template<Signature> struct WithSignature { } ; } ; struct DoNothingCallbackTag { template<Signature> struct WithSignature { } ; template<. . . BoundArgs> struct WithBoundArguments { std::tuple<BoundArgs . . .> bound_args ;)",
    "insertText": "WithBoundArguments(BoundArgs... args) : bound_args(std::forward<BoundArgs>(args)...)"
  }
]