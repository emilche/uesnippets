[
  {
    "label": "INameValidatorInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INameValidatorInterface"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Rect"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "UEdGraphNode_Comment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode_Comment"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / EnumAsByte . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" EdGraph / EdGraphNodeUtils . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" Templates / SharedPointer . h \" # include \" Textures / SlateIcon . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" EdGraphNode_Comment . generated . h \" class INameValidatorInterface ; class UEdGraphPin ; class UObject ; struct FPropertyChangedEvent ; struct Rect ; typedef TArray<class UObject*> FCommentNodeSet ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (enum Type : int { GroupMovement)",
    "insertText": "UMETA(DisplayName=\"Group Movement\"), NoGroupMovement UMETA(DisplayName=\"Comment\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() public: UNREALED_API UEdGraphNode_Comment(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "IsSelectedInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSelectedInEditor()"
  },
  {
    "label": "AllocateDefaultPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateDefaultPins()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetNodeCommentColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeCommentColor()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "ShouldOverridePinNames()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldOverridePinNames()"
  },
  {
    "label": "ResizeNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeNode(const FVector2D& NewSize)"
  },
  {
    "label": "PostPlacedNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPlacedNewNode()"
  },
  {
    "label": "OnRenameNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameNode(const FString& NewName)"
  },
  {
    "label": "MakeNameValidator()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class INameValidatorInterface>)",
    "insertText": "MakeNameValidator()"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationLink()"
  },
  {
    "label": "GetDocumentationExcerptName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationExcerptName()"
  },
  {
    "label": "GetIconAndTint()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetIconAndTint(FLinearColor& OutColor)"
  },
  {
    "label": "AddNodeUnderComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNodeUnderComment(UObject* Object)"
  },
  {
    "label": "ClearNodesUnderComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearNodesUnderComment()"
  },
  {
    "label": "SetBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBounds(const class FSlateRect& Rect)"
  },
  {
    "label": "GetNodesUnderComment()",
    "kind": "Method",
    "detail": "Function (const FCommentNodeSet&)",
    "insertText": "GetNodesUnderComment()"
  },
  {
    "label": "GetFontSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetFontSize()"
  }
]