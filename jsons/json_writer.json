[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "Options",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Options"
  },
  {
    "label": "JSONWriter()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_JSON_JSON_WRITER_H_ # define BASE_JSON_JSON_WRITER_H_ # include<stddef . h> # include<string> # include \" base / base_export . h \" # include \" base / json / json_common . h \" # include \" base / memory / raw_ptr . h \" # include \" base / strings / string_piece . h \" # include \" base / values . h \" namespace base { class BASE_EXPORT JSONWriter { public : enum Options { OPTIONS_OMIT_BINARY_VALUES = 1<<0,OPTIONS_OMIT_DOUBLE_TYPE_PRESERVATION = 1<<1,OPTIONS_PRETTY_PRINT = 1<<2,} ;)",
    "insertText": "JSONWriter(const JSONWriter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (JSONWriter&)",
    "insertText": "operator(const JSONWriter&)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(ValueView node, std::string* json, size_t max_depth = internal::kAbsoluteMaxDepth)"
  },
  {
    "label": "WriteWithOptions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteWithOptions(ValueView node, int options, std::string* json, size_t max_depth = internal::kAbsoluteMaxDepth)"
  },
  {
    "label": "JSONWriter()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "JSONWriter(int options, std::string* json, size_t max_depth = internal::kAbsoluteMaxDepth)"
  },
  {
    "label": "BuildJSONString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildJSONString(absl::monostate node, size_t depth)"
  },
  {
    "label": "BuildJSONString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildJSONString(bool node, size_t depth)"
  },
  {
    "label": "BuildJSONString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildJSONString(int node, size_t depth)"
  },
  {
    "label": "BuildJSONString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildJSONString(double node, size_t depth)"
  },
  {
    "label": "BuildJSONString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildJSONString(StringPiece node, size_t depth)"
  },
  {
    "label": "BuildJSONString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildJSONString(const Value::BlobStorage& node, size_t depth)"
  },
  {
    "label": "BuildJSONString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildJSONString(const Value::Dict& node, size_t depth)"
  },
  {
    "label": "BuildJSONString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildJSONString(const Value::List& node, size_t depth)"
  },
  {
    "label": "IndentLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IndentLine(size_t depth)"
  }
]