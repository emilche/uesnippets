[
  {
    "label": "VideoFileType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VideoFileType"
  },
  {
    "label": "FileTypeDetectionBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FileTypeDetectionBuffer"
  },
  {
    "label": "VpxRational",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpxRational"
  },
  {
    "label": "VpxInputContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpxInputContext"
  },
  {
    "label": "FileTypeDetectionBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FileTypeDetectionBuffer"
  },
  {
    "label": "VideoFileType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VideoFileType"
  },
  {
    "label": "VpxRational",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpxRational"
  },
  {
    "label": "VpxRational",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpxRational"
  },
  {
    "label": "VpxInputContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpxInputContext"
  },
  {
    "label": "VpxInterface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpxInterface"
  },
  {
    "label": "VpxInputContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpxInputContext"
  },
  {
    "label": "VpxInputContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpxInputContext"
  },
  {
    "label": "VpxInputContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VpxInputContext"
  },
  {
    "label": "die_codec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "die_codec(vpx_codec_ctx_t *ctx, const char *s)"
  },
  {
    "label": "usage_exit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "usage_exit(void)"
  },
  {
    "label": "read_yuv_frame()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "read_yuv_frame(struct VpxInputContext *input_ctx, vpx_image_t *yuv_frame)"
  },
  {
    "label": "get_vpx_encoder_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "get_vpx_encoder_count(void)"
  },
  {
    "label": "get_vpx_decoder_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "get_vpx_decoder_count(void)"
  },
  {
    "label": "vpx_img_plane_width()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vpx_img_plane_width(const vpx_image_t *img, int plane)"
  },
  {
    "label": "vpx_img_plane_height()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vpx_img_plane_height(const vpx_image_t *img, int plane)"
  },
  {
    "label": "vpx_img_write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_img_write(const vpx_image_t *img, FILE *file)"
  },
  {
    "label": "vpx_img_read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vpx_img_read(vpx_image_t *img, FILE *file)"
  },
  {
    "label": "sse_to_psnr()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "sse_to_psnr(double samples, double peak, double mse)"
  },
  {
    "label": "read_frame()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "read_frame(struct VpxInputContext *input_ctx, vpx_image_t *img)"
  },
  {
    "label": "file_is_y4m()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "file_is_y4m(const char detect[4])"
  },
  {
    "label": "fourcc_is_ivf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fourcc_is_ivf(const char detect[4])"
  },
  {
    "label": "open_input_file()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "open_input_file(struct VpxInputContext *input)"
  },
  {
    "label": "close_input_file()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "close_input_file(struct VpxInputContext *input)"
  },
  {
    "label": "vpx_img_upshift()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_img_upshift(vpx_image_t *dst, vpx_image_t *src, int input_shift)"
  },
  {
    "label": "vpx_img_downshift()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_img_downshift(vpx_image_t *dst, vpx_image_t *src, int down_shift)"
  },
  {
    "label": "vpx_img_truncate_16_to_8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_img_truncate_16_to_8(vpx_image_t *dst, vpx_image_t *src)"
  },
  {
    "label": "compare_img()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "compare_img(const vpx_image_t *const img1, const vpx_image_t *const img2)"
  },
  {
    "label": "find_mismatch_high()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "find_mismatch_high(const vpx_image_t *const img1,\n                        const vpx_image_t *const img2, int yloc[4], int uloc[4],\n                        int vloc[4])"
  },
  {
    "label": "find_mismatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "find_mismatch(const vpx_image_t *const img1, const vpx_image_t *const img2,\n                   int yloc[4], int uloc[4], int vloc[4])"
  }
]