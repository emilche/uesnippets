[
  {
    "label": "seed_key_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "seed_key_st"
  },
  {
    "label": "SEED_set_key()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_SEED_H # define HEADER_SEED_H # include<openssl / opensslconf . h> # ifndef OPENSSL_NO_SEED # include<openssl / e_os2 . h> # include<openssl / crypto . h> # ifdef __cplusplus \" C \" { # endif # ifdef AES_LONG # ifndef SEED_LONG # define SEED_LONG 1 # endif # endif # include<sys / types . h> # define SEED_BLOCK_SIZE 1 6 # define SEED_KEY_LENGTH 1 6 typedef struct seed_key_st { # ifdef SEED_LONG unsigned long data [ 3 2 ] ; # else unsigned int data [ 3 2 ] ; # endif } SEED_KEY_SCHEDULE ; void)",
    "insertText": "SEED_set_key(const unsigned char rawkey[SEED_KEY_LENGTH], SEED_KEY_SCHEDULE *ks)"
  },
  {
    "label": "SEED_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SEED_encrypt(const unsigned char s[SEED_BLOCK_SIZE], unsigned char d[SEED_BLOCK_SIZE], const SEED_KEY_SCHEDULE *ks)"
  },
  {
    "label": "SEED_decrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SEED_decrypt(const unsigned char s[SEED_BLOCK_SIZE], unsigned char d[SEED_BLOCK_SIZE], const SEED_KEY_SCHEDULE *ks)"
  },
  {
    "label": "SEED_ecb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SEED_ecb_encrypt(const unsigned char *in, unsigned char *out, const SEED_KEY_SCHEDULE *ks, int enc)"
  },
  {
    "label": "SEED_cbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SEED_cbc_encrypt(const unsigned char *in, unsigned char *out, size_t len, const SEED_KEY_SCHEDULE *ks, unsigned char ivec[SEED_BLOCK_SIZE], int enc)"
  },
  {
    "label": "SEED_cfb128_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SEED_cfb128_encrypt(const unsigned char *in, unsigned char *out, size_t len, const SEED_KEY_SCHEDULE *ks, unsigned char ivec[SEED_BLOCK_SIZE], int *num, int enc)"
  },
  {
    "label": "SEED_ofb128_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SEED_ofb128_encrypt(const unsigned char *in, unsigned char *out, size_t len, const SEED_KEY_SCHEDULE *ks, unsigned char ivec[SEED_BLOCK_SIZE], int *num)"
  }
]