[
  {
    "label": "OCIOEXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OCIOEXPORT"
  },
  {
    "label": "Impl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Impl"
  },
  {
    "label": "Config",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Config"
  },
  {
    "label": "Processor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Processor"
  },
  {
    "label": "TextureType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureType"
  },
  {
    "label": "TextureDimensions",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureDimensions"
  },
  {
    "label": "UniformData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UniformData"
  },
  {
    "label": "VectorFloat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VectorFloat"
  },
  {
    "label": "VectorInt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VectorInt"
  },
  {
    "label": "warning()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_OCIO_OPENCOLORIO_H # define INCLUDED_OCIO_OPENCOLORIO_H # include<cstddef> # include<iosfwd> # include<limits> # include<stdexcept> # include<string> # include<fstream> # include<vector> # include \" OpenColorABI . h \" # include \" OpenColorTypes . h \" # include \" OpenColorTransforms . h \" # include \" OpenColorAppHelpers . h \" namespace OCIO_NAMESPACE { # ifdef _MSC_VER # pragma)",
    "insertText": "warning(push ) #pragma warning( disable : 4275)"
  },
  {
    "label": "Exception()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "Exception()"
  },
  {
    "label": "Exception()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exception(const char *)"
  },
  {
    "label": "Exception()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exception(const Exception &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Exception&)",
    "insertText": "operator(const Exception &)"
  },
  {
    "label": "ExceptionMissingFile()",
    "kind": "Method",
    "detail": "Function (} ; class OCIOEXPORT ExceptionMissingFile : public Exception { public :)",
    "insertText": "ExceptionMissingFile()"
  },
  {
    "label": "ExceptionMissingFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExceptionMissingFile(const char *)"
  },
  {
    "label": "ExceptionMissingFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExceptionMissingFile(const ExceptionMissingFile &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ExceptionMissingFile&)",
    "insertText": "operator(const ExceptionMissingFile &)"
  },
  {
    "label": "warning()",
    "kind": "Method",
    "detail": "Function (} ; # ifdef _MSC_VER # pragma)",
    "insertText": "warning(pop ) #endif extern OCIOEXPORT void ClearAllCaches()"
  },
  {
    "label": "GetVersion()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "GetVersion()"
  },
  {
    "label": "GetVersionHex()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT int)",
    "insertText": "GetVersionHex()"
  },
  {
    "label": "GetLoggingLevel()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT LoggingLevel)",
    "insertText": "GetLoggingLevel()"
  },
  {
    "label": "SetLoggingLevel()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "SetLoggingLevel(LoggingLevel level)"
  },
  {
    "label": "SetLoggingFunction()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "SetLoggingFunction(LoggingFunction logFunction)"
  },
  {
    "label": "ResetToDefaultLoggingFunction()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "ResetToDefaultLoggingFunction()"
  },
  {
    "label": "LogMessage()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "LogMessage(LoggingLevel level, const char * message)"
  },
  {
    "label": "SetComputeHashFunction()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "SetComputeHashFunction(ComputeHashFunction hashFunction)"
  },
  {
    "label": "ResetComputeHashFunction()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "ResetComputeHashFunction()"
  },
  {
    "label": "GetEnvVariable()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "GetEnvVariable(const char * name)"
  },
  {
    "label": "SetEnvVariable()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "SetEnvVariable(const char * name, const char * value)"
  },
  {
    "label": "UnsetEnvVariable()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "UnsetEnvVariable(const char * name)"
  },
  {
    "label": "IsEnvVariablePresent()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT bool)",
    "insertText": "IsEnvVariablePresent(const char * name)"
  },
  {
    "label": "GetCurrentConfig()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT ConstConfigRcPtr)",
    "insertText": "GetCurrentConfig()"
  },
  {
    "label": "SetCurrentConfig()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "SetCurrentConfig(const ConstConfigRcPtr & config)"
  },
  {
    "label": "ResolveConfigPath()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "ResolveConfigPath(const char * originalPath)"
  },
  {
    "label": "ExtractOCIOZArchive()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "ExtractOCIOZArchive(const char * archivePath, const char * destinationDir)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (class OCIOEXPORT Config { public : ConfigRcPtr)",
    "insertText": "Create()"
  },
  {
    "label": "CreateRaw()",
    "kind": "Method",
    "detail": "Function (ConstConfigRcPtr)",
    "insertText": "CreateRaw()"
  },
  {
    "label": "CreateFromEnv()",
    "kind": "Method",
    "detail": "Function (ConstConfigRcPtr)",
    "insertText": "CreateFromEnv()"
  },
  {
    "label": "CreateFromFile()",
    "kind": "Method",
    "detail": "Function (ConstConfigRcPtr)",
    "insertText": "CreateFromFile(const char * filename)"
  },
  {
    "label": "CreateFromStream()",
    "kind": "Method",
    "detail": "Function (ConstConfigRcPtr)",
    "insertText": "CreateFromStream(std::istream & istream)"
  },
  {
    "label": "CreateFromConfigIOProxy()",
    "kind": "Method",
    "detail": "Function (ConstConfigRcPtr)",
    "insertText": "CreateFromConfigIOProxy(ConfigIOProxyRcPtr ciop)"
  },
  {
    "label": "CreateFromBuiltinConfig()",
    "kind": "Method",
    "detail": "Function (ConstConfigRcPtr)",
    "insertText": "CreateFromBuiltinConfig(const char * configName)"
  },
  {
    "label": "createEditableCopy()",
    "kind": "Method",
    "detail": "Function (ConfigRcPtr)",
    "insertText": "createEditableCopy()"
  },
  {
    "label": "getMajorVersion()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "getMajorVersion()"
  },
  {
    "label": "setMajorVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMajorVersion(unsigned int major)"
  },
  {
    "label": "getMinorVersion()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "getMinorVersion()"
  },
  {
    "label": "setMinorVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMinorVersion(unsigned int minor)"
  },
  {
    "label": "setVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setVersion(unsigned int major, unsigned int minor)"
  },
  {
    "label": "upgradeToLatestVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "upgradeToLatestVersion()"
  },
  {
    "label": "validate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "validate()"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getName()"
  },
  {
    "label": "setName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setName(const char * name)"
  },
  {
    "label": "getFamilySeparator()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "getFamilySeparator()"
  },
  {
    "label": "GetDefaultFamilySeparator()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "GetDefaultFamilySeparator()"
  },
  {
    "label": "setFamilySeparator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFamilySeparator(char separator)"
  },
  {
    "label": "getDescription()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDescription()"
  },
  {
    "label": "setDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDescription(const char * description)"
  },
  {
    "label": "serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "serialize(std::ostream & os)"
  },
  {
    "label": "getCacheID()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getCacheID()"
  },
  {
    "label": "getCacheID()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getCacheID(const ConstContextRcPtr & context)"
  },
  {
    "label": "getCurrentContext()",
    "kind": "Method",
    "detail": "Function (ConstContextRcPtr)",
    "insertText": "getCurrentContext()"
  },
  {
    "label": "addEnvironmentVar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addEnvironmentVar(const char * name, const char * defaultValue)"
  },
  {
    "label": "getNumEnvironmentVars()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumEnvironmentVars()"
  },
  {
    "label": "getEnvironmentVarNameByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getEnvironmentVarNameByIndex(int index)"
  },
  {
    "label": "getEnvironmentVarDefault()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getEnvironmentVarDefault(const char * name)"
  },
  {
    "label": "clearEnvironmentVars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearEnvironmentVars()"
  },
  {
    "label": "setEnvironmentMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setEnvironmentMode(EnvironmentMode mode)"
  },
  {
    "label": "getEnvironmentMode()",
    "kind": "Method",
    "detail": "Function (EnvironmentMode)",
    "insertText": "getEnvironmentMode()"
  },
  {
    "label": "loadEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "loadEnvironment()"
  },
  {
    "label": "getSearchPath()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getSearchPath()"
  },
  {
    "label": "setSearchPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setSearchPath(const char * path)"
  },
  {
    "label": "getNumSearchPaths()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumSearchPaths()"
  },
  {
    "label": "getSearchPath()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getSearchPath(int index)"
  },
  {
    "label": "clearSearchPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearSearchPaths()"
  },
  {
    "label": "addSearchPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addSearchPath(const char * path)"
  },
  {
    "label": "getWorkingDir()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getWorkingDir()"
  },
  {
    "label": "setWorkingDir()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setWorkingDir(const char * dirname)"
  },
  {
    "label": "getColorSpaces()",
    "kind": "Method",
    "detail": "Function (ColorSpaceSetRcPtr)",
    "insertText": "getColorSpaces(const char * category)"
  },
  {
    "label": "getNumColorSpaces()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumColorSpaces(SearchReferenceSpaceType searchReferenceType, ColorSpaceVisibility visibility)"
  },
  {
    "label": "getColorSpaceNameByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getColorSpaceNameByIndex(SearchReferenceSpaceType searchReferenceType, ColorSpaceVisibility visibility, int index)"
  },
  {
    "label": "getNumColorSpaces()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumColorSpaces()"
  },
  {
    "label": "getColorSpaceNameByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getColorSpaceNameByIndex(int index)"
  },
  {
    "label": "getIndexForColorSpace()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getIndexForColorSpace(const char * name)"
  },
  {
    "label": "getColorSpace()",
    "kind": "Method",
    "detail": "Function (ConstColorSpaceRcPtr)",
    "insertText": "getColorSpace(const char * name)"
  },
  {
    "label": "getCanonicalName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getCanonicalName(const char * name)"
  },
  {
    "label": "addColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addColorSpace(const ConstColorSpaceRcPtr & cs)"
  },
  {
    "label": "removeColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeColorSpace(const char * name)"
  },
  {
    "label": "isColorSpaceUsed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isColorSpaceUsed(const char * name)"
  },
  {
    "label": "clearColorSpaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearColorSpaces()"
  },
  {
    "label": "setInactiveColorSpaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setInactiveColorSpaces(const char * inactiveColorSpaces)"
  },
  {
    "label": "getInactiveColorSpaces()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getInactiveColorSpaces()"
  },
  {
    "label": "isInactiveColorSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isInactiveColorSpace(const char * colorspace)"
  },
  {
    "label": "isColorSpaceLinear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isColorSpaceLinear(const char * colorSpace, ReferenceSpaceType referenceSpaceType)"
  },
  {
    "label": "IdentifyBuiltinColorSpace()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "IdentifyBuiltinColorSpace(const ConstConfigRcPtr & srcConfig, const ConstConfigRcPtr & builtinConfig, const char * builtinColorSpaceName)"
  },
  {
    "label": "IdentifyInterchangeSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IdentifyInterchangeSpace(const char ** srcInterchangeName, const char ** builtinInterchangeName, const ConstConfigRcPtr & srcConfig, const char * srcColorSpaceName, const ConstConfigRcPtr & builtinConfig, const char * builtinColorSpaceName)"
  },
  {
    "label": "setRole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setRole(const char * role, const char * colorSpaceName)"
  },
  {
    "label": "getNumRoles()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumRoles()"
  },
  {
    "label": "hasRole()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasRole(const char * role)"
  },
  {
    "label": "getRoleName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getRoleName(int index)"
  },
  {
    "label": "getRoleColorSpace()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getRoleColorSpace(int index)"
  },
  {
    "label": "getRoleColorSpace()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getRoleColorSpace(const char * roleName)"
  },
  {
    "label": "addSharedView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addSharedView(const char * view, const char * viewTransformName, const char * colorSpaceName, const char * looks, const char * ruleName, const char * description)"
  },
  {
    "label": "removeSharedView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeSharedView(const char * view)"
  },
  {
    "label": "getDefaultDisplay()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDefaultDisplay()"
  },
  {
    "label": "getNumDisplays()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumDisplays()"
  },
  {
    "label": "getDisplay()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDisplay(int index)"
  },
  {
    "label": "getDefaultView()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDefaultView(const char * display)"
  },
  {
    "label": "getDefaultView()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDefaultView(const char * display, const char * colorspaceName)"
  },
  {
    "label": "getNumViews()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumViews(const char * display)"
  },
  {
    "label": "getView()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getView(const char * display, int index)"
  },
  {
    "label": "getNumViews()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumViews(const char * display, const char * colorspaceName)"
  },
  {
    "label": "getView()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getView(const char * display, const char * colorspaceName, int index)"
  },
  {
    "label": "getDisplayViewTransformName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDisplayViewTransformName(const char * display, const char * view)"
  },
  {
    "label": "getDisplayViewColorSpaceName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDisplayViewColorSpaceName(const char * display, const char * view)"
  },
  {
    "label": "getDisplayViewLooks()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDisplayViewLooks(const char * display, const char * view)"
  },
  {
    "label": "getDisplayViewRule()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDisplayViewRule(const char * display, const char * view)"
  },
  {
    "label": "getDisplayViewDescription()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDisplayViewDescription(const char * display, const char * view)"
  },
  {
    "label": "addDisplayView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addDisplayView(const char * display, const char * view, const char * colorSpaceName, const char * looks)"
  },
  {
    "label": "addDisplayView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addDisplayView(const char * display, const char * view, const char * viewTransformName, const char * colorSpaceName, const char * looks, const char * ruleName, const char * description)"
  },
  {
    "label": "addDisplaySharedView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addDisplaySharedView(const char * display, const char * sharedView)"
  },
  {
    "label": "removeDisplayView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeDisplayView(const char * display, const char * view)"
  },
  {
    "label": "clearDisplays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearDisplays()"
  },
  {
    "label": "addVirtualDisplayView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addVirtualDisplayView(const char * view, const char * viewTransformName, const char * colorSpaceName, const char * looks, const char * ruleName, const char * description)"
  },
  {
    "label": "addVirtualDisplaySharedView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addVirtualDisplaySharedView(const char * sharedView)"
  },
  {
    "label": "getVirtualDisplayNumViews()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getVirtualDisplayNumViews(ViewType type)"
  },
  {
    "label": "getVirtualDisplayView()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getVirtualDisplayView(ViewType type, int index)"
  },
  {
    "label": "getVirtualDisplayViewTransformName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getVirtualDisplayViewTransformName(const char * view)"
  },
  {
    "label": "getVirtualDisplayViewColorSpaceName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getVirtualDisplayViewColorSpaceName(const char * view)"
  },
  {
    "label": "getVirtualDisplayViewLooks()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getVirtualDisplayViewLooks(const char * view)"
  },
  {
    "label": "getVirtualDisplayViewRule()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getVirtualDisplayViewRule(const char * view)"
  },
  {
    "label": "getVirtualDisplayViewDescription()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getVirtualDisplayViewDescription(const char * view)"
  },
  {
    "label": "removeVirtualDisplayView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeVirtualDisplayView(const char * view)"
  },
  {
    "label": "clearVirtualDisplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearVirtualDisplay()"
  },
  {
    "label": "instantiateDisplayFromMonitorName()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "instantiateDisplayFromMonitorName(const char * monitorName)"
  },
  {
    "label": "instantiateDisplayFromICCProfile()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "instantiateDisplayFromICCProfile(const char * ICCProfileFilepath)"
  },
  {
    "label": "setActiveDisplays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setActiveDisplays(const char * displays)"
  },
  {
    "label": "getActiveDisplays()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getActiveDisplays()"
  },
  {
    "label": "setActiveViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setActiveViews(const char * views)"
  },
  {
    "label": "getActiveViews()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getActiveViews()"
  },
  {
    "label": "getNumDisplaysAll()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumDisplaysAll()"
  },
  {
    "label": "getDisplayAll()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDisplayAll(int index)"
  },
  {
    "label": "getDisplayAllByName()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getDisplayAllByName(const char *)"
  },
  {
    "label": "isDisplayTemporary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isDisplayTemporary(int index)"
  },
  {
    "label": "getNumViews()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumViews(ViewType type, const char * display)"
  },
  {
    "label": "getView()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getView(ViewType type, const char * display, int index)"
  },
  {
    "label": "getViewingRules()",
    "kind": "Method",
    "detail": "Function (ConstViewingRulesRcPtr)",
    "insertText": "getViewingRules()"
  },
  {
    "label": "setViewingRules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setViewingRules(ConstViewingRulesRcPtr viewingRules)"
  },
  {
    "label": "getDefaultLumaCoefs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getDefaultLumaCoefs(double * rgb)"
  },
  {
    "label": "setDefaultLumaCoefs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDefaultLumaCoefs(const double * rgb)"
  },
  {
    "label": "getLook()",
    "kind": "Method",
    "detail": "Function (ConstLookRcPtr)",
    "insertText": "getLook(const char * name)"
  },
  {
    "label": "getNumLooks()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumLooks()"
  },
  {
    "label": "getLookNameByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getLookNameByIndex(int index)"
  },
  {
    "label": "addLook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addLook(const ConstLookRcPtr & look)"
  },
  {
    "label": "clearLooks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearLooks()"
  },
  {
    "label": "getNumViewTransforms()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumViewTransforms()"
  },
  {
    "label": "getViewTransform()",
    "kind": "Method",
    "detail": "Function (ConstViewTransformRcPtr)",
    "insertText": "getViewTransform(const char * name)"
  },
  {
    "label": "getViewTransformNameByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getViewTransformNameByIndex(int i)"
  },
  {
    "label": "addViewTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addViewTransform(const ConstViewTransformRcPtr & viewTransform)"
  },
  {
    "label": "getDefaultSceneToDisplayViewTransform()",
    "kind": "Method",
    "detail": "Function (ConstViewTransformRcPtr)",
    "insertText": "getDefaultSceneToDisplayViewTransform()"
  },
  {
    "label": "getDefaultViewTransformName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDefaultViewTransformName()"
  },
  {
    "label": "setDefaultViewTransformName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDefaultViewTransformName(const char * defaultName)"
  },
  {
    "label": "clearViewTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearViewTransforms()"
  },
  {
    "label": "getNumNamedTransforms()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumNamedTransforms(NamedTransformVisibility visibility)"
  },
  {
    "label": "getNamedTransformNameByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getNamedTransformNameByIndex(NamedTransformVisibility visibility, int index)"
  },
  {
    "label": "getNumNamedTransforms()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumNamedTransforms()"
  },
  {
    "label": "getNamedTransformNameByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getNamedTransformNameByIndex(int index)"
  },
  {
    "label": "getIndexForNamedTransform()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getIndexForNamedTransform(const char * name)"
  },
  {
    "label": "getNamedTransform()",
    "kind": "Method",
    "detail": "Function (ConstNamedTransformRcPtr)",
    "insertText": "getNamedTransform(const char * name)"
  },
  {
    "label": "addNamedTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addNamedTransform(const ConstNamedTransformRcPtr & namedTransform)"
  },
  {
    "label": "clearNamedTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearNamedTransforms()"
  },
  {
    "label": "getFileRules()",
    "kind": "Method",
    "detail": "Function (ConstFileRulesRcPtr)",
    "insertText": "getFileRules()"
  },
  {
    "label": "setFileRules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFileRules(ConstFileRulesRcPtr fileRules)"
  },
  {
    "label": "getColorSpaceFromFilepath()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getColorSpaceFromFilepath(const char * filePath)"
  },
  {
    "label": "getColorSpaceFromFilepath()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getColorSpaceFromFilepath(const char * filePath, size_t & ruleIndex)"
  },
  {
    "label": "filepathOnlyMatchesDefaultRule()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "filepathOnlyMatchesDefaultRule(const char * filePath)"
  },
  {
    "label": "OCIO_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OCIO_DEPRECATED(\"This was marked as deprecated starting in v2.0, please use Config::getColorSpaceFromFilepath().\") const char * parseColorSpaceFromString(const char * str)"
  },
  {
    "label": "isStrictParsingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isStrictParsingEnabled()"
  },
  {
    "label": "setStrictParsingEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setStrictParsingEnabled(bool enabled)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstContextRcPtr & context, const ConstColorSpaceRcPtr & srcColorSpace, const ConstColorSpaceRcPtr & dstColorSpace)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstColorSpaceRcPtr & srcColorSpace, const ConstColorSpaceRcPtr & dstColorSpace)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const char * srcColorSpaceName, const char * dstColorSpaceName)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstContextRcPtr & context, const char * srcColorSpaceName, const char * dstColorSpaceName)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const char * srcColorSpaceName, const char * display, const char * view, TransformDirection direction)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstContextRcPtr & context, const char * srcColorSpaceName, const char * display, const char * view, TransformDirection direction)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstNamedTransformRcPtr & namedTransform, TransformDirection direction)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstContextRcPtr & context, const ConstNamedTransformRcPtr & namedTransform, TransformDirection direction)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const char * namedTransformName, TransformDirection direction)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstContextRcPtr & context, const char * namedTransformName, TransformDirection direction)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstTransformRcPtr & transform)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstTransformRcPtr & transform, TransformDirection direction)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstContextRcPtr & context, const ConstTransformRcPtr & transform, TransformDirection direction)"
  },
  {
    "label": "GetProcessorToBuiltinColorSpace()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "GetProcessorToBuiltinColorSpace(ConstConfigRcPtr srcConfig, const char * srcColorSpaceName, const char * builtinColorSpaceName)"
  },
  {
    "label": "GetProcessorFromBuiltinColorSpace()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "GetProcessorFromBuiltinColorSpace(const char * builtinColorSpaceName, ConstConfigRcPtr srcConfig, const char * srcColorSpaceName)"
  },
  {
    "label": "GetProcessorFromConfigs()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "GetProcessorFromConfigs(const ConstConfigRcPtr & srcConfig, const char * srcColorSpaceName, const ConstConfigRcPtr & dstConfig, const char * dstColorSpaceName)"
  },
  {
    "label": "GetProcessorFromConfigs()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "GetProcessorFromConfigs(const ConstContextRcPtr & srcContext, const ConstConfigRcPtr & srcConfig, const char * srcColorSpaceName, const ConstContextRcPtr & dstContext, const ConstConfigRcPtr & dstConfig, const char * dstColorSpaceName)"
  },
  {
    "label": "GetProcessorFromConfigs()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "GetProcessorFromConfigs(const ConstConfigRcPtr & srcConfig, const char * srcColorSpaceName, const char * srcInterchangeName, const ConstConfigRcPtr & dstConfig, const char * dstColorSpaceName, const char * dstInterchangeName)"
  },
  {
    "label": "GetProcessorFromConfigs()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "GetProcessorFromConfigs(const ConstContextRcPtr & srcContext, const ConstConfigRcPtr & srcConfig, const char * srcColorSpaceName, const char * srcInterchangeName, const ConstContextRcPtr & dstContext, const ConstConfigRcPtr & dstConfig, const char * dstColorSpaceName, const char * dstInterchangeName)"
  },
  {
    "label": "GetProcessorFromConfigs()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "GetProcessorFromConfigs(const ConstConfigRcPtr & srcConfig, const char * srcColorSpaceName, const ConstConfigRcPtr & dstConfig, const char * dstDisplay, const char * dstView, TransformDirection direction)"
  },
  {
    "label": "GetProcessorFromConfigs()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "GetProcessorFromConfigs(const ConstContextRcPtr & srcContext, const ConstConfigRcPtr & srcConfig, const char * srcColorSpaceName, const ConstContextRcPtr & dstContext, const ConstConfigRcPtr & dstConfig, const char * dstDisplay, const char * dstView, TransformDirection direction)"
  },
  {
    "label": "GetProcessorFromConfigs()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "GetProcessorFromConfigs(const ConstConfigRcPtr & srcConfig, const char * srcColorSpaceName, const char * srcInterchangeName, const ConstConfigRcPtr & dstConfig, const char * dstDisplay, const char * dstView, const char * dstInterchangeName, TransformDirection direction)"
  },
  {
    "label": "GetProcessorFromConfigs()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "GetProcessorFromConfigs(const ConstContextRcPtr & srcContext, const ConstConfigRcPtr & srcConfig, const char * srcColorSpaceName, const char * srcInterchangeName, const ConstContextRcPtr & dstContext, const ConstConfigRcPtr & dstConfig, const char * dstDisplay, const char * dstView, const char * dstInterchangeName, TransformDirection direction)"
  },
  {
    "label": "getProcessorCacheFlags()",
    "kind": "Method",
    "detail": "Function (ProcessorCacheFlags)",
    "insertText": "getProcessorCacheFlags()"
  },
  {
    "label": "setProcessorCacheFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setProcessorCacheFlags(ProcessorCacheFlags flags)"
  },
  {
    "label": "clearProcessorCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearProcessorCache()"
  },
  {
    "label": "setConfigIOProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setConfigIOProxy(ConfigIOProxyRcPtr ciop)"
  },
  {
    "label": "getConfigIOProxy()",
    "kind": "Method",
    "detail": "Function (ConfigIOProxyRcPtr)",
    "insertText": "getConfigIOProxy()"
  },
  {
    "label": "isArchivable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isArchivable()"
  },
  {
    "label": "archive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "archive(std::ostream & ostream)"
  },
  {
    "label": "Config()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Config(const Config &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Config&)",
    "insertText": "operator(const Config &)"
  },
  {
    "label": "Config()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Config()"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(Config* c)"
  },
  {
    "label": "getImpl()",
    "kind": "Method",
    "detail": "Function (class Impl ; Impl* m_impl ; Impl*)",
    "insertText": "getImpl()"
  },
  {
    "label": "getNumEntries()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumEntries()"
  },
  {
    "label": "getIndexForRule()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getIndexForRule(const char * ruleName)"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getName(size_t ruleIndex)"
  },
  {
    "label": "getPattern()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getPattern(size_t ruleIndex)"
  },
  {
    "label": "setPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setPattern(size_t ruleIndex, const char * pattern)"
  },
  {
    "label": "getExtension()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getExtension(size_t ruleIndex)"
  },
  {
    "label": "setExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setExtension(size_t ruleIndex, const char * extension)"
  },
  {
    "label": "getRegex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getRegex(size_t ruleIndex)"
  },
  {
    "label": "setRegex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setRegex(size_t ruleIndex, const char * regex)"
  },
  {
    "label": "getColorSpace()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getColorSpace(size_t ruleIndex)"
  },
  {
    "label": "setColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setColorSpace(size_t ruleIndex, const char * colorSpace)"
  },
  {
    "label": "getNumCustomKeys()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumCustomKeys(size_t ruleIndex)"
  },
  {
    "label": "getCustomKeyName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getCustomKeyName(size_t ruleIndex, size_t key)"
  },
  {
    "label": "getCustomKeyValue()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getCustomKeyValue(size_t ruleIndex, size_t key)"
  },
  {
    "label": "setCustomKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setCustomKey(size_t ruleIndex, const char * key, const char * value)"
  },
  {
    "label": "insertRule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insertRule(size_t ruleIndex, const char * name, const char * colorSpace, const char * pattern, const char * extension)"
  },
  {
    "label": "insertRule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insertRule(size_t ruleIndex, const char * name, const char * colorSpace, const char * regex)"
  },
  {
    "label": "insertPathSearchRule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insertPathSearchRule(size_t ruleIndex)"
  },
  {
    "label": "setDefaultRuleColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDefaultRuleColorSpace(const char * colorSpace)"
  },
  {
    "label": "removeRule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeRule(size_t ruleIndex)"
  },
  {
    "label": "increaseRulePriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "increaseRulePriority(size_t ruleIndex)"
  },
  {
    "label": "decreaseRulePriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decreaseRulePriority(size_t ruleIndex)"
  },
  {
    "label": "isDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isDefault()"
  },
  {
    "label": "FileRules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FileRules(const FileRules &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FileRules&)",
    "insertText": "operator(const FileRules &)"
  },
  {
    "label": "FileRules()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FileRules()"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(FileRules* c)"
  },
  {
    "label": "getNumColorSpaces()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumColorSpaces(size_t ruleIndex)"
  },
  {
    "label": "getColorSpace()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getColorSpace(size_t ruleIndex, size_t colorSpaceIndex)"
  },
  {
    "label": "addColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addColorSpace(size_t ruleIndex, const char * colorSpace)"
  },
  {
    "label": "removeColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeColorSpace(size_t ruleIndex, size_t colorSpaceIndex)"
  },
  {
    "label": "getNumEncodings()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumEncodings(size_t ruleIndex)"
  },
  {
    "label": "getEncoding()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getEncoding(size_t ruleIndex, size_t encodingIndex)"
  },
  {
    "label": "addEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addEncoding(size_t ruleIndex, const char * encoding)"
  },
  {
    "label": "removeEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeEncoding(size_t ruleIndex, size_t encodingIndex)"
  },
  {
    "label": "getCustomKeyName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getCustomKeyName(size_t ruleIndex, size_t keyIndex)"
  },
  {
    "label": "getCustomKeyValue()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getCustomKeyValue(size_t ruleIndex, size_t keyIndex)"
  },
  {
    "label": "insertRule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "insertRule(size_t ruleIndex, const char * ruleName)"
  },
  {
    "label": "ViewingRules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ViewingRules(const ViewingRules &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ViewingRules&)",
    "insertText": "operator(const ViewingRules &)"
  },
  {
    "label": "ViewingRules()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ViewingRules()"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(ViewingRules* c)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (ColorSpaceRcPtr)",
    "insertText": "Create(ReferenceSpaceType referenceSpace)"
  },
  {
    "label": "getNumAliases()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumAliases()"
  },
  {
    "label": "getAlias()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getAlias(size_t idx)"
  },
  {
    "label": "addAlias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addAlias(const char * alias)"
  },
  {
    "label": "removeAlias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeAlias(const char * alias)"
  },
  {
    "label": "clearAliases()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearAliases()"
  },
  {
    "label": "getFamily()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getFamily()"
  },
  {
    "label": "setFamily()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFamily(const char * family)"
  },
  {
    "label": "getEqualityGroup()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getEqualityGroup()"
  },
  {
    "label": "setEqualityGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setEqualityGroup(const char * equalityGroup)"
  },
  {
    "label": "getBitDepth()",
    "kind": "Method",
    "detail": "Function (BitDepth)",
    "insertText": "getBitDepth()"
  },
  {
    "label": "setBitDepth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setBitDepth(BitDepth bitDepth)"
  },
  {
    "label": "getReferenceSpaceType()",
    "kind": "Method",
    "detail": "Function (ReferenceSpaceType)",
    "insertText": "getReferenceSpaceType()"
  },
  {
    "label": "hasCategory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasCategory(const char * category)"
  },
  {
    "label": "addCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addCategory(const char * category)"
  },
  {
    "label": "removeCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeCategory(const char * category)"
  },
  {
    "label": "getNumCategories()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumCategories()"
  },
  {
    "label": "getCategory()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getCategory(int index)"
  },
  {
    "label": "clearCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearCategories()"
  },
  {
    "label": "getEncoding()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getEncoding()"
  },
  {
    "label": "setEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setEncoding(const char * encoding)"
  },
  {
    "label": "isData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isData()"
  },
  {
    "label": "setIsData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setIsData(bool isData)"
  },
  {
    "label": "getAllocation()",
    "kind": "Method",
    "detail": "Function (Allocation)",
    "insertText": "getAllocation()"
  },
  {
    "label": "setAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setAllocation(Allocation allocation)"
  },
  {
    "label": "getAllocationNumVars()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getAllocationNumVars()"
  },
  {
    "label": "getAllocationVars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getAllocationVars(float * vars)"
  },
  {
    "label": "setAllocationVars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setAllocationVars(int numvars, const float * vars)"
  },
  {
    "label": "getTransform()",
    "kind": "Method",
    "detail": "Function (ConstTransformRcPtr)",
    "insertText": "getTransform(ColorSpaceDirection dir)"
  },
  {
    "label": "setTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTransform(const ConstTransformRcPtr & transform, ColorSpaceDirection dir)"
  },
  {
    "label": "ColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ColorSpace(const ColorSpace &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ColorSpace&)",
    "insertText": "operator(const ColorSpace &)"
  },
  {
    "label": "ColorSpace()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ColorSpace()"
  },
  {
    "label": "ColorSpace()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "ColorSpace(ReferenceSpaceType referenceSpace)"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(ColorSpace* c)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const ColorSpaceSet & css)"
  },
  {
    "label": "getColorSpaceByIndex()",
    "kind": "Method",
    "detail": "Function (ConstColorSpaceRcPtr)",
    "insertText": "getColorSpaceByIndex(int index)"
  },
  {
    "label": "getColorSpaceIndex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getColorSpaceIndex(const char * name)"
  },
  {
    "label": "hasColorSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasColorSpace(const char * name)"
  },
  {
    "label": "addColorSpaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addColorSpaces(const ConstColorSpaceSetRcPtr & cs)"
  },
  {
    "label": "removeColorSpaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeColorSpaces(const ConstColorSpaceSetRcPtr & cs)"
  },
  {
    "label": "ColorSpaceSet()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ColorSpaceSet()"
  },
  {
    "label": "ColorSpaceSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ColorSpaceSet(const ColorSpaceSet &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ColorSpaceSet&)",
    "insertText": "operator(const ColorSpaceSet &)"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(ColorSpaceSet * c)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT ConstColorSpaceSetRcPtr)",
    "insertText": "operator(const ConstColorSpaceSetRcPtr & lcss, const ConstColorSpaceSetRcPtr & rcss)"
  },
  {
    "label": "getProcessSpace()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getProcessSpace()"
  },
  {
    "label": "setProcessSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setProcessSpace(const char * processSpace)"
  },
  {
    "label": "getTransform()",
    "kind": "Method",
    "detail": "Function (ConstTransformRcPtr)",
    "insertText": "getTransform()"
  },
  {
    "label": "setTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTransform(const ConstTransformRcPtr & transform)"
  },
  {
    "label": "getInverseTransform()",
    "kind": "Method",
    "detail": "Function (ConstTransformRcPtr)",
    "insertText": "getInverseTransform()"
  },
  {
    "label": "setInverseTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setInverseTransform(const ConstTransformRcPtr & transform)"
  },
  {
    "label": "Look()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Look(const Look &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Look&)",
    "insertText": "operator(const Look &)"
  },
  {
    "label": "Look()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Look()"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(Look* c)"
  },
  {
    "label": "getTransform()",
    "kind": "Method",
    "detail": "Function (ConstTransformRcPtr)",
    "insertText": "getTransform(TransformDirection dir)"
  },
  {
    "label": "setTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTransform(const ConstTransformRcPtr & transform, TransformDirection dir)"
  },
  {
    "label": "GetTransform()",
    "kind": "Method",
    "detail": "Function (ConstTransformRcPtr)",
    "insertText": "GetTransform(const ConstNamedTransformRcPtr & nt, TransformDirection dir)"
  },
  {
    "label": "NamedTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NamedTransform(const NamedTransform &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (NamedTransform&)",
    "insertText": "operator(const NamedTransform &)"
  },
  {
    "label": "NamedTransform()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "NamedTransform()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; OCIOEXPORT std::ostream&)",
    "insertText": "operator(std::ostream &, const NamedTransform &)"
  },
  {
    "label": "getTransform()",
    "kind": "Method",
    "detail": "Function (ConstTransformRcPtr)",
    "insertText": "getTransform(ViewTransformDirection dir)"
  },
  {
    "label": "setTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTransform(const ConstTransformRcPtr & transform, ViewTransformDirection dir)"
  },
  {
    "label": "ViewTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ViewTransform(const ViewTransform &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ViewTransform&)",
    "insertText": "operator(const ViewTransform &)"
  },
  {
    "label": "ViewTransform()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ViewTransform()"
  },
  {
    "label": "ViewTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ViewTransform(ReferenceSpaceType referenceSpace)"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(ViewTransform * c)"
  },
  {
    "label": "isNoOp()",
    "kind": "Method",
    "detail": "Function (class OCIOEXPORT Processor { public : bool)",
    "insertText": "isNoOp()"
  },
  {
    "label": "hasChannelCrosstalk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasChannelCrosstalk()"
  },
  {
    "label": "getProcessorMetadata()",
    "kind": "Method",
    "detail": "Function (ConstProcessorMetadataRcPtr)",
    "insertText": "getProcessorMetadata()"
  },
  {
    "label": "getFormatMetadata()",
    "kind": "Method",
    "detail": "Function (const FormatMetadata&)",
    "insertText": "getFormatMetadata()"
  },
  {
    "label": "getNumTransforms()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumTransforms()"
  },
  {
    "label": "getTransformFormatMetadata()",
    "kind": "Method",
    "detail": "Function (const FormatMetadata&)",
    "insertText": "getTransformFormatMetadata(int index)"
  },
  {
    "label": "createGroupTransform()",
    "kind": "Method",
    "detail": "Function (GroupTransformRcPtr)",
    "insertText": "createGroupTransform()"
  },
  {
    "label": "getDynamicProperty()",
    "kind": "Method",
    "detail": "Function (DynamicPropertyRcPtr)",
    "insertText": "getDynamicProperty(DynamicPropertyType type)"
  },
  {
    "label": "hasDynamicProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasDynamicProperty(DynamicPropertyType type)"
  },
  {
    "label": "isDynamic()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isDynamic()"
  },
  {
    "label": "getOptimizedProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getOptimizedProcessor(OptimizationFlags oFlags)"
  },
  {
    "label": "getOptimizedProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getOptimizedProcessor(BitDepth inBD, BitDepth outBD, OptimizationFlags oFlags)"
  },
  {
    "label": "getDefaultGPUProcessor()",
    "kind": "Method",
    "detail": "Function (ConstGPUProcessorRcPtr)",
    "insertText": "getDefaultGPUProcessor()"
  },
  {
    "label": "getOptimizedGPUProcessor()",
    "kind": "Method",
    "detail": "Function (ConstGPUProcessorRcPtr)",
    "insertText": "getOptimizedGPUProcessor(OptimizationFlags oFlags)"
  },
  {
    "label": "getOptimizedLegacyGPUProcessor()",
    "kind": "Method",
    "detail": "Function (ConstGPUProcessorRcPtr)",
    "insertText": "getOptimizedLegacyGPUProcessor(OptimizationFlags oFlags, unsigned edgelen)"
  },
  {
    "label": "getDefaultCPUProcessor()",
    "kind": "Method",
    "detail": "Function (ConstCPUProcessorRcPtr)",
    "insertText": "getDefaultCPUProcessor()"
  },
  {
    "label": "getOptimizedCPUProcessor()",
    "kind": "Method",
    "detail": "Function (ConstCPUProcessorRcPtr)",
    "insertText": "getOptimizedCPUProcessor(OptimizationFlags oFlags)"
  },
  {
    "label": "getOptimizedCPUProcessor()",
    "kind": "Method",
    "detail": "Function (ConstCPUProcessorRcPtr)",
    "insertText": "getOptimizedCPUProcessor(BitDepth inBitDepth, BitDepth outBitDepth, OptimizationFlags oFlags)"
  },
  {
    "label": "Processor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Processor(const Processor &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Processor&)",
    "insertText": "operator(const Processor &)"
  },
  {
    "label": "Processor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Processor()"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(Processor* c)"
  },
  {
    "label": "isIdentity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isIdentity()"
  },
  {
    "label": "getInputBitDepth()",
    "kind": "Method",
    "detail": "Function (BitDepth)",
    "insertText": "getInputBitDepth()"
  },
  {
    "label": "getOutputBitDepth()",
    "kind": "Method",
    "detail": "Function (BitDepth)",
    "insertText": "getOutputBitDepth()"
  },
  {
    "label": "apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "apply(const ImageDesc & imgDesc)"
  },
  {
    "label": "apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "apply(const ImageDesc & srcImgDesc, ImageDesc & dstImgDesc)"
  },
  {
    "label": "applyRGB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyRGB(float * pixel)"
  },
  {
    "label": "applyRGBA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyRGBA(float * pixel)"
  },
  {
    "label": "CPUProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CPUProcessor(const CPUProcessor &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CPUProcessor&)",
    "insertText": "operator(const CPUProcessor &)"
  },
  {
    "label": "CPUProcessor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CPUProcessor()"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(CPUProcessor * c)"
  },
  {
    "label": "extractGpuShaderInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "extractGpuShaderInfo(GpuShaderDescRcPtr & shaderDesc)"
  },
  {
    "label": "extractGpuShaderInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "extractGpuShaderInfo(GpuShaderCreatorRcPtr & shaderCreator)"
  },
  {
    "label": "GPUProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GPUProcessor(const GPUProcessor &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (GPUProcessor&)",
    "insertText": "operator(const GPUProcessor &)"
  },
  {
    "label": "GPUProcessor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "GPUProcessor()"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(GPUProcessor * c)"
  },
  {
    "label": "getNumFiles()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumFiles()"
  },
  {
    "label": "getFile()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getFile(int index)"
  },
  {
    "label": "getLook()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getLook(int index)"
  },
  {
    "label": "addFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addFile(const char * fname)"
  },
  {
    "label": "addLook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addLook(const char * look)"
  },
  {
    "label": "ProcessorMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessorMetadata(const ProcessorMetadata &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ProcessorMetadata&)",
    "insertText": "operator(const ProcessorMetadata &)"
  },
  {
    "label": "ProcessorMetadata()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ProcessorMetadata()"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(ProcessorMetadata* c)"
  },
  {
    "label": "getConfig()",
    "kind": "Method",
    "detail": "Function (ConstConfigRcPtr)",
    "insertText": "getConfig()"
  },
  {
    "label": "setConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setConfig(const ConstConfigRcPtr & config)"
  },
  {
    "label": "getFormat()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getFormat()"
  },
  {
    "label": "setFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFormat(const char * formatName)"
  },
  {
    "label": "getInputSpace()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getInputSpace()"
  },
  {
    "label": "setInputSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setInputSpace(const char * inputSpace)"
  },
  {
    "label": "getShaperSpace()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getShaperSpace()"
  },
  {
    "label": "setShaperSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setShaperSpace(const char * shaperSpace)"
  },
  {
    "label": "getLooks()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getLooks()"
  },
  {
    "label": "setLooks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLooks(const char * looks)"
  },
  {
    "label": "getTargetSpace()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getTargetSpace()"
  },
  {
    "label": "setTargetSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTargetSpace(const char * targetSpace)"
  },
  {
    "label": "getDisplay()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDisplay()"
  },
  {
    "label": "getView()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getView()"
  },
  {
    "label": "setDisplayView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDisplayView(const char * display, const char * view)"
  },
  {
    "label": "getShaperSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getShaperSize()"
  },
  {
    "label": "setShaperSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setShaperSize(int shapersize)"
  },
  {
    "label": "getCubeSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getCubeSize()"
  },
  {
    "label": "setCubeSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setCubeSize(int cubesize)"
  },
  {
    "label": "bake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bake(std::ostream & os)"
  },
  {
    "label": "getNumFormats()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumFormats()"
  },
  {
    "label": "getFormatNameByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getFormatNameByIndex(int index)"
  },
  {
    "label": "getFormatExtensionByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getFormatExtensionByIndex(int index)"
  },
  {
    "label": "Baker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Baker(const Baker &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Baker&)",
    "insertText": "operator(const Baker &)"
  },
  {
    "label": "Baker()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Baker()"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(Baker* o)"
  },
  {
    "label": "ImageDesc()",
    "kind": "Method",
    "detail": "Function (class OCIOEXPORT ImageDesc { public :)",
    "insertText": "ImageDesc()"
  },
  {
    "label": "getRData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "getRData()"
  },
  {
    "label": "getGData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "getGData()"
  },
  {
    "label": "getBData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "getBData()"
  },
  {
    "label": "getAData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "getAData()"
  },
  {
    "label": "getWidth()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "getWidth()"
  },
  {
    "label": "getHeight()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "getHeight()"
  },
  {
    "label": "getXStrideBytes()",
    "kind": "Method",
    "detail": "Function (ptrdiff_t)",
    "insertText": "getXStrideBytes()"
  },
  {
    "label": "getYStrideBytes()",
    "kind": "Method",
    "detail": "Function (ptrdiff_t)",
    "insertText": "getYStrideBytes()"
  },
  {
    "label": "isRGBAPacked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isRGBAPacked()"
  },
  {
    "label": "isFloat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isFloat()"
  },
  {
    "label": "ImageDesc()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "ImageDesc(const ImageDesc &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ImageDesc&)",
    "insertText": "operator(const ImageDesc &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; OCIOEXPORT std::ostream&)",
    "insertText": "operator(std::ostream&, const ImageDesc&)"
  },
  {
    "label": "PackedImageDesc()",
    "kind": "Method",
    "detail": "Function (class OCIOEXPORT PackedImageDesc : public ImageDesc { public :)",
    "insertText": "PackedImageDesc(void * data, long width, long height, long numChannels)"
  },
  {
    "label": "PackedImageDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackedImageDesc(void * data, long width, long height, long numChannels, BitDepth bitDepth, ptrdiff_t chanStrideBytes, ptrdiff_t xStrideBytes, ptrdiff_t yStrideBytes)"
  },
  {
    "label": "PackedImageDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackedImageDesc(void * data, long width, long height, ChannelOrdering chanOrder)"
  },
  {
    "label": "PackedImageDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackedImageDesc(void * data, long width, long height, ChannelOrdering chanOrder, BitDepth bitDepth, ptrdiff_t chanStrideBytes, ptrdiff_t xStrideBytes, ptrdiff_t yStrideBytes)"
  },
  {
    "label": "PackedImageDesc()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "PackedImageDesc()"
  },
  {
    "label": "getChannelOrder()",
    "kind": "Method",
    "detail": "Function (ChannelOrdering)",
    "insertText": "getChannelOrder()"
  },
  {
    "label": "getData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "getData()"
  },
  {
    "label": "getNumChannels()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "getNumChannels()"
  },
  {
    "label": "getChanStrideBytes()",
    "kind": "Method",
    "detail": "Function (ptrdiff_t)",
    "insertText": "getChanStrideBytes()"
  },
  {
    "label": "PackedImageDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackedImageDesc(const PackedImageDesc &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (PackedImageDesc&)",
    "insertText": "operator(const PackedImageDesc &)"
  },
  {
    "label": "PlanarImageDesc()",
    "kind": "Method",
    "detail": "Function (} ; class OCIOEXPORT PlanarImageDesc : public ImageDesc { public :)",
    "insertText": "PlanarImageDesc(void * rData, void * gData, void * bData, void * aData, long width, long height)"
  },
  {
    "label": "PlanarImageDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlanarImageDesc(void * rData, void * gData, void * bData, void * aData, long width, long height, BitDepth bitDepth, ptrdiff_t xStrideBytes, ptrdiff_t yStrideBytes)"
  },
  {
    "label": "PlanarImageDesc()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "PlanarImageDesc()"
  },
  {
    "label": "PlanarImageDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlanarImageDesc(const PlanarImageDesc &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (PlanarImageDesc&)",
    "insertText": "operator(const PlanarImageDesc &)"
  },
  {
    "label": "clone()",
    "kind": "Method",
    "detail": "Function (} ; class OCIOEXPORT GpuShaderCreator { public : GpuShaderCreatorRcPtr)",
    "insertText": "clone()"
  },
  {
    "label": "getUniqueID()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getUniqueID()"
  },
  {
    "label": "setUniqueID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setUniqueID(const char * uid)"
  },
  {
    "label": "getLanguage()",
    "kind": "Method",
    "detail": "Function (GpuLanguage)",
    "insertText": "getLanguage()"
  },
  {
    "label": "setLanguage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLanguage(GpuLanguage lang)"
  },
  {
    "label": "getFunctionName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getFunctionName()"
  },
  {
    "label": "setFunctionName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFunctionName(const char * name)"
  },
  {
    "label": "getPixelName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getPixelName()"
  },
  {
    "label": "setPixelName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setPixelName(const char * name)"
  },
  {
    "label": "getResourcePrefix()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getResourcePrefix()"
  },
  {
    "label": "setResourcePrefix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setResourcePrefix(const char * prefix)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "begin(const char * uid)"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "end()"
  },
  {
    "label": "setTextureMaxWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTextureMaxWidth(unsigned maxWidth)"
  },
  {
    "label": "getTextureMaxWidth()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getTextureMaxWidth()"
  },
  {
    "label": "setAllowTexture1D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setAllowTexture1D(bool allowed)"
  },
  {
    "label": "getAllowTexture1D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getAllowTexture1D()"
  },
  {
    "label": "getNextResourceIndex()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getNextResourceIndex()"
  },
  {
    "label": "double()",
    "kind": "Method",
    "detail": "Function (typedef std::function<)",
    "insertText": "double()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (typedef std::function<)",
    "insertText": "bool()"
  },
  {
    "label": "Float3()",
    "kind": "Method",
    "detail": "Function (typedef std::function<const)",
    "insertText": "Float3()"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef std::function<)",
    "insertText": "int()"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (typedef std::function<const)",
    "insertText": "float()"
  },
  {
    "label": "addUniform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "addUniform(const char * name, const DoubleGetter & getDouble)"
  },
  {
    "label": "addUniform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "addUniform(const char * name, const BoolGetter & getBool)"
  },
  {
    "label": "addUniform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "addUniform(const char * name, const Float3Getter & getFloat3)"
  },
  {
    "label": "addUniform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "addUniform(const char * name, const SizeGetter & getSize, const VectorFloatGetter & getVectorFloat)"
  },
  {
    "label": "addUniform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "addUniform(const char * name, const SizeGetter & getSize, const VectorIntGetter & getVectorInt)"
  },
  {
    "label": "addDynamicProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addDynamicProperty(DynamicPropertyRcPtr & prop)"
  },
  {
    "label": "getNumDynamicProperties()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getNumDynamicProperties()"
  },
  {
    "label": "getDynamicProperty()",
    "kind": "Method",
    "detail": "Function (DynamicPropertyRcPtr)",
    "insertText": "getDynamicProperty(unsigned index)"
  },
  {
    "label": "addTexture()",
    "kind": "Method",
    "detail": "Function (enum TextureType { TEXTURE_RED_CHANNEL,TEXTURE_RGB_CHANNEL } ; enum TextureDimensions : uint8_t { TEXTURE_1D = 1,TEXTURE_2D = 2,} ; void)",
    "insertText": "addTexture(const char * textureName, const char * samplerName, unsigned width, unsigned height, TextureType channel, TextureDimensions dimensions, Interpolation interpolation, const float * values)"
  },
  {
    "label": "add3DTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "add3DTexture(const char * textureName, const char * samplerName, unsigned edgelen, Interpolation interpolation, const float * values)"
  },
  {
    "label": "addToDeclareShaderCode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addToDeclareShaderCode(const char * shaderCode)"
  },
  {
    "label": "addToHelperShaderCode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addToHelperShaderCode(const char * shaderCode)"
  },
  {
    "label": "addToFunctionHeaderShaderCode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addToFunctionHeaderShaderCode(const char * shaderCode)"
  },
  {
    "label": "addToFunctionShaderCode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addToFunctionShaderCode(const char * shaderCode)"
  },
  {
    "label": "addToFunctionFooterShaderCode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addToFunctionFooterShaderCode(const char * shaderCode)"
  },
  {
    "label": "createShaderText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createShaderText(const char * shaderDeclarations, const char * shaderHelperMethods, const char * shaderFunctionHeader, const char * shaderFunctionBody, const char * shaderFunctionFooter)"
  },
  {
    "label": "finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "finalize()"
  },
  {
    "label": "GpuShaderCreator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GpuShaderCreator(const GpuShaderCreator &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (GpuShaderCreator&)",
    "insertText": "operator(const GpuShaderCreator &)"
  },
  {
    "label": "GpuShaderCreator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "GpuShaderCreator()"
  },
  {
    "label": "getNumUniforms()",
    "kind": "Method",
    "detail": "Function (struct UniformData { UniformDataType m_type { UNIFORM_UNKNOWN } ; DoubleGetter m_getDouble { } ; BoolGetter m_getBool { } ; Float3Getter m_getFloat3 { } ; struct VectorFloat { SizeGetter m_getSize { } ; VectorFloatGetter m_getVector { } ; } m_vectorFloat { } ; struct VectorInt { SizeGetter m_getSize { } ; VectorIntGetter m_getVector { } ; } m_vectorInt { } ; } ; unsigned)",
    "insertText": "getNumUniforms()"
  },
  {
    "label": "getUniform()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getUniform(unsigned index, UniformData & data)"
  },
  {
    "label": "getNumTextures()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getNumTextures()"
  },
  {
    "label": "getTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getTexture(unsigned index, const char *& textureName, const char *& samplerName, unsigned & width, unsigned & height, TextureType & channel, TextureDimensions & dimensions, Interpolation & interpolation)"
  },
  {
    "label": "getTextureValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getTextureValues(unsigned index, const float *& values)"
  },
  {
    "label": "getNum3DTextures()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getNum3DTextures()"
  },
  {
    "label": "get3DTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "get3DTexture(unsigned index, const char *& textureName, const char *& samplerName, unsigned & edgelen, Interpolation & interpolation)"
  },
  {
    "label": "get3DTextureValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "get3DTextureValues(unsigned index, const float *& values)"
  },
  {
    "label": "getShaderText()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getShaderText()"
  },
  {
    "label": "GpuShaderDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GpuShaderDesc(const GpuShaderDesc &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (GpuShaderDesc&)",
    "insertText": "operator(const GpuShaderDesc &)"
  },
  {
    "label": "GpuShaderDesc()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "GpuShaderDesc()"
  },
  {
    "label": "setStringVar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setStringVar(const char * name, const char * value)"
  },
  {
    "label": "getStringVar()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getStringVar(const char * name)"
  },
  {
    "label": "getNumStringVars()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNumStringVars()"
  },
  {
    "label": "getStringVarNameByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getStringVarNameByIndex(int index)"
  },
  {
    "label": "getStringVarByIndex()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getStringVarByIndex(int index)"
  },
  {
    "label": "clearStringVars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearStringVars()"
  },
  {
    "label": "addStringVars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addStringVars(const ConstContextRcPtr & ctx)"
  },
  {
    "label": "resolveStringVar()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "resolveStringVar(const char * string)"
  },
  {
    "label": "resolveStringVar()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "resolveStringVar(const char * string, ContextRcPtr & usedContextVars)"
  },
  {
    "label": "resolveFileLocation()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "resolveFileLocation(const char * filename)"
  },
  {
    "label": "resolveFileLocation()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "resolveFileLocation(const char * filename, ContextRcPtr & usedContextVars)"
  },
  {
    "label": "Context()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Context(const Context &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Context&)",
    "insertText": "operator(const Context &)"
  },
  {
    "label": "Context()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Context()"
  },
  {
    "label": "deleter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleter(Context* c)"
  },
  {
    "label": "BuiltinTransformRegistry()",
    "kind": "Method",
    "detail": "Function (class OCIOEXPORT BuiltinTransformRegistry { public :)",
    "insertText": "BuiltinTransformRegistry(const BuiltinTransformRegistry &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (BuiltinTransformRegistry&)",
    "insertText": "operator(const BuiltinTransformRegistry &)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (ConstBuiltinTransformRegistryRcPtr)",
    "insertText": "Get()"
  },
  {
    "label": "getNumBuiltins()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumBuiltins()"
  },
  {
    "label": "getBuiltinStyle()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getBuiltinStyle(size_t index)"
  },
  {
    "label": "getBuiltinDescription()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getBuiltinDescription(size_t index)"
  },
  {
    "label": "BuiltinTransformRegistry()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "BuiltinTransformRegistry()"
  },
  {
    "label": "BuiltinConfigRegistry()",
    "kind": "Method",
    "detail": "Function (} ; class OCIOEXPORT BuiltinConfigRegistry { public :)",
    "insertText": "BuiltinConfigRegistry(const BuiltinConfigRegistry &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (BuiltinConfigRegistry&)",
    "insertText": "operator(const BuiltinConfigRegistry &)"
  },
  {
    "label": "getNumBuiltinConfigs()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumBuiltinConfigs()"
  },
  {
    "label": "getBuiltinConfigName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getBuiltinConfigName(size_t configIndex)"
  },
  {
    "label": "getBuiltinConfigUIName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getBuiltinConfigUIName(size_t configIndex)"
  },
  {
    "label": "getBuiltinConfig()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getBuiltinConfig(size_t configIndex)"
  },
  {
    "label": "getBuiltinConfigByName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getBuiltinConfigByName(const char * configName)"
  },
  {
    "label": "isBuiltinConfigRecommended()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isBuiltinConfigRecommended(size_t configIndex)"
  }
]