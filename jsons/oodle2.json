[
  {
    "label": "OodleLZ_Verbosity",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleLZ_Verbosity"
  },
  {
    "label": "OodleLZ_Compressor",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleLZ_Compressor"
  },
  {
    "label": "OodleLZ_PackedRawOverlap",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleLZ_PackedRawOverlap"
  },
  {
    "label": "OodleLZ_CheckCRC",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleLZ_CheckCRC"
  },
  {
    "label": "OodleLZ_Profile",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleLZ_Profile"
  },
  {
    "label": "OodleDecompressCallbackRet",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleDecompressCallbackRet"
  },
  {
    "label": "OodleLZ_CompressionLevel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleLZ_CompressionLevel"
  },
  {
    "label": "OodleLZ_Jobify",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleLZ_Jobify"
  },
  {
    "label": "OodleLZ_Decode_ThreadPhase",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleLZ_Decode_ThreadPhase"
  },
  {
    "label": "OodleLZ_FuzzSafe",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleLZ_FuzzSafe"
  },
  {
    "label": "OodleLZSeekTable_Flags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OodleLZSeekTable_Flags"
  },
  {
    "label": "Oodle_UsageWarnings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Oodle_UsageWarnings"
  },
  {
    "label": "_OodleLZDecoder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_OodleLZDecoder"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# ifndef __OODLE2_H_INCLUDED__ # define __OODLE2_H_INCLUDED__ # ifndef OODLE2_PUBLIC_HEADER # define OODLE2_PUBLIC_HEADER 1 # endif # ifndef __OODLE2BASE_H_INCLUDED__ # include \" oodle2base . h \" # endif # ifdef _MSC_VER # pragma)",
    "insertText": "pack(push, Oodle, 8) #pragma warning(push) #pragma warning(disable : 4127)"
  },
  {
    "label": "OO_COMPILER_ASSERT()",
    "kind": "Method",
    "detail": "Function (OodleLZ_Verbosity_None = 0,OodleLZ_Verbosity_Minimal = 1,OodleLZ_Verbosity_Some = 2,OodleLZ_Verbosity_Lots = 3,OodleLZ_Verbosity_Force32 = 0 x40000000 } OodleLZ_Verbosity ;)",
    "insertText": "OO_COMPILER_ASSERT(sizeof(OodleLZ_Verbosity) == 4)"
  },
  {
    "label": "OO_COMPILER_ASSERT()",
    "kind": "Method",
    "detail": "Function (typedef enum OodleLZ_Compressor { OodleLZ_Compressor_Invalid = - 1,OodleLZ_Compressor_None = 3,OodleLZ_Compressor_Kraken = 8,OodleLZ_Compressor_Leviathan = 1 3,OodleLZ_Compressor_Mermaid = 9,OodleLZ_Compressor_Selkie = 1 1,OodleLZ_Compressor_Hydra = 1 2,# ifdef OODLE_ALLOW_DEPRECATED_COMPRESSORS OodleLZ_Compressor_BitKnit = 1 0,OodleLZ_Compressor_LZB16 = 4,OodleLZ_Compressor_LZNA = 7,OodleLZ_Compressor_LZH = 0,OodleLZ_Compressor_LZHLW = 1,OodleLZ_Compressor_LZNIB = 2,OodleLZ_Compressor_LZBLW = 5,OodleLZ_Compressor_LZA = 6,# endif OodleLZ_Compressor_Count = 1 4,OodleLZ_Compressor_Force32 = 0 x40000000 } OodleLZ_Compressor ;)",
    "insertText": "OO_COMPILER_ASSERT(sizeof(OodleLZ_Compressor) == 4)"
  },
  {
    "label": "OodleLZ_Profile_Internal_Custom()",
    "kind": "Method",
    "detail": "Function (typedef enum OodleLZ_PackedRawOverlap { OodleLZ_PackedRawOverlap_No = 0,OodleLZ_PackedRawOverlap_Yes = 1,OodleLZ_PackedRawOverlap_Force32 = 0 x40000000 } OodleLZ_PackedRawOverlap ; typedef enum OodleLZ_CheckCRC { OodleLZ_CheckCRC_No = 0,OodleLZ_CheckCRC_Yes = 1,OodleLZ_CheckCRC_Force32 = 0 x40000000 } OodleLZ_CheckCRC ; typedef enum OodleLZ_Profile { OodleLZ_Profile_Main = 0,OodleLZ_Profile_Reduced = 1,OodleLZ_Profile_Force32 = 0 x40000000 } OodleLZ_Profile ; # define)",
    "insertText": "OodleLZ_Profile_Internal_Custom((OodleLZ_Profile)100) OO_COMPILER_ASSERT( sizeof(OodleLZ_Profile) == 4)"
  },
  {
    "label": "OodleDecompressCallbackRet()",
    "kind": "Method",
    "detail": "Function (typedef enum OodleDecompressCallbackRet { OodleDecompressCallbackRet_Continue = 0,OodleDecompressCallbackRet_Cancel = 1,OodleDecompressCallbackRet_Invalid = 2,OodleDecompressCallbackRet_Force32 = 0 x40000000 } OodleDecompressCallbackRet ; OODEFFUNC typedef)",
    "insertText": "OodleDecompressCallbackRet(OODLE_CALLBACK OodleDecompressCallback)(void * userdata, const OO_U8 * rawBuf,OO_SINTa rawLen,const OO_U8 * compBuf,OO_SINTa compBufferSize , OO_SINTa rawDone, OO_SINTa compUsed)"
  },
  {
    "label": "OO_COMPILER_ASSERT()",
    "kind": "Method",
    "detail": "Function (typedef enum OodleLZ_CompressionLevel { OodleLZ_CompressionLevel_None = 0,OodleLZ_CompressionLevel_SuperFast = 1,OodleLZ_CompressionLevel_VeryFast = 2,OodleLZ_CompressionLevel_Fast = 3,OodleLZ_CompressionLevel_Normal = 4,OodleLZ_CompressionLevel_Optimal1 = 5,OodleLZ_CompressionLevel_Optimal2 = 6,OodleLZ_CompressionLevel_Optimal3 = 7,OodleLZ_CompressionLevel_Optimal4 = 8,OodleLZ_CompressionLevel_Optimal5 = 9,OodleLZ_CompressionLevel_HyperFast1 = - 1,OodleLZ_CompressionLevel_HyperFast2 = - 2,OodleLZ_CompressionLevel_HyperFast3 = - 3,OodleLZ_CompressionLevel_HyperFast4 = - 4,OodleLZ_CompressionLevel_HyperFast = OodleLZ_CompressionLevel_HyperFast1,OodleLZ_CompressionLevel_Optimal = OodleLZ_CompressionLevel_Optimal2,OodleLZ_CompressionLevel_Max = OodleLZ_CompressionLevel_Optimal5,OodleLZ_CompressionLevel_Min = OodleLZ_CompressionLevel_HyperFast4,OodleLZ_CompressionLevel_Force32 = 0 x40000000,OodleLZ_CompressionLevel_Invalid = OodleLZ_CompressionLevel_Force32 } OodleLZ_CompressionLevel ;)",
    "insertText": "OO_COMPILER_ASSERT(sizeof(OodleLZ_CompressionLevel) == 4)"
  },
  {
    "label": "OODLELZ_LOCALDICTIONARYSIZE_MAX()",
    "kind": "Method",
    "detail": "Function (typedef enum OodleLZ_Jobify { OodleLZ_Jobify_Default = 0,OodleLZ_Jobify_Disable = 1,OodleLZ_Jobify_Normal = 2,OodleLZ_Jobify_Aggressive = 3,OodleLZ_Jobify_Count = 4,OodleLZ_Jobify_Force32 = 0 x40000000,} OodleLZ_Jobify ; # define)",
    "insertText": "OODLELZ_LOCALDICTIONARYSIZE_MAX(1<<30) #define OODLELZ_SPACESPEEDTRADEOFFBYTES_DEFAULT (256)"
  },
  {
    "label": "OODLELZ_BLOCK_LEN()",
    "kind": "Method",
    "detail": "Function (OO_U32 unused_was_verbosity ; OO_S32 minMatchLen ; OO_BOOL seekChunkReset ; OO_S32 seekChunkLen ; OodleLZ_Profile profile ; OO_S32 dictionarySize ; OO_S32 spaceSpeedTradeoffBytes ; OO_S32 unused_was_maxHuffmansPerChunk ; OO_BOOL sendQuantumCRCs ; OO_S32 maxLocalDictionarySize ; OO_BOOL makeLongRangeMatcher ; OO_S32 matchTableSizeLog2 ; OodleLZ_Jobify jobify ; void* jobifyUserPtr ; OO_S32 farMatchMinLen ; OO_S32 farMatchOffsetLog2 ; OO_U32 reserved [ 4 ] ; } OodleLZ_CompressOptions ; typedef enum OodleLZ_Decode_ThreadPhase { OodleLZ_Decode_ThreadPhase1 = 1,OodleLZ_Decode_ThreadPhase2 = 2,OodleLZ_Decode_ThreadPhaseAll = 3,OodleLZ_Decode_Unthreaded = OodleLZ_Decode_ThreadPhaseAll } OodleLZ_Decode_ThreadPhase ; typedef enum OodleLZ_FuzzSafe { OodleLZ_FuzzSafe_No = 0,OodleLZ_FuzzSafe_Yes = 1 } OodleLZ_FuzzSafe ; # define)",
    "insertText": "OODLELZ_BLOCK_LEN(1<<18) #define OODLELZ_BLOCK_MAXIMUM_EXPANSION (2) #define OODLELZ_BLOCK_MAX_COMPLEN (OODLELZ_BLOCK_LEN+OODLELZ_BLOCK_MAXIMUM_EXPANSION) #define OODLELZ_QUANTUM_LEN (1<<14) #define OODLELZ_QUANTUM_MAXIMUM_EXPANSION (5) #define OODLELZ_QUANTUM_MAX_COMPLEN (OODLELZ_QUANTUM_LEN+OODLELZ_QUANTUM_MAXIMUM_EXPANSION) #define OODLELZ_SEEKCHUNKLEN_MIN OODLELZ_BLOCK_LEN #define OODLELZ_SEEKCHUNKLEN_MAX (1<<29)"
  },
  {
    "label": "Oodle_GetConfigValues()",
    "kind": "Method",
    "detail": "Function (OO_S32 decodedCount ; OO_S32 compBufUsed ; OO_S32 curQuantumRawLen ; OO_S32 curQuantumCompLen ; } OodleLZ_DecodeSome_Out ; typedef OOSTRUCT OodleLZ_SeekTable { OodleLZ_Compressor compressor ; OO_BOOL seekChunksIndependent ; OO_S64 totalRawLen ; OO_S64 totalCompLen ; OO_S32 numSeekChunks ; OO_S32 seekChunkLen ; OO_U32* seekChunkCompLens ; OO_U32* rawCRCs ; } OodleLZ_SeekTable ; typedef enum OodleLZSeekTable_Flags { OodleLZSeekTable_Flags_None = 0,OodleLZSeekTable_Flags_MakeRawCRCs = 1,OodleLZSeekTable_Flags_Force32 = 0 x40000000 } OodleLZSeekTable_Flags ; typedef OOSTRUCT OodleConfigValues { OO_S32 m_OodleLZ_LW_LRM_step ; OO_S32 m_OodleLZ_LW_LRM_hashLength ; OO_S32 m_OodleLZ_LW_LRM_jumpbits ; OO_S32 m_OodleLZ_Decoder_Max_Stack_Size ; OO_S32 m_OodleLZ_Small_Buffer_LZ_Fallback_Size_Unused ; OO_S32 m_OodleLZ_BackwardsCompatible_MajorVersion ; OO_U32 m_oodle_header_version ; } OodleConfigValues ; OOFUNC1 void OOFUNC2)",
    "insertText": "Oodle_GetConfigValues(OodleConfigValues * ptr)"
  },
  {
    "label": "Oodle_SetConfigValues()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "Oodle_SetConfigValues(const OodleConfigValues * ptr)"
  },
  {
    "label": "Oodle_SetUsageWarnings()",
    "kind": "Method",
    "detail": "Function (typedef enum Oodle_UsageWarnings { Oodle_UsageWarnings_Enabled = 0,Oodle_UsageWarnings_Disabled = 1,Oodle_UsageWarnings_Force32 = 0 x40000000 } Oodle_UsageWarnings ; OOFUNC1 void OOFUNC2)",
    "insertText": "Oodle_SetUsageWarnings(Oodle_UsageWarnings state)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (OODEFFUNC typedef)",
    "insertText": "void(OODLE_CALLBACK t_fp_OodleCore_Plugin_MallocAligned)( OO_SINTa bytes, OO_S32 alignment)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (OODEFFUNC typedef)",
    "insertText": "void(OODLE_CALLBACK t_fp_OodleCore_Plugin_Free)( void * ptr)"
  },
  {
    "label": "OodleCore_Plugins_SetAllocators()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "OodleCore_Plugins_SetAllocators(t_fp_OodleCore_Plugin_MallocAligned * fp_OodleMallocAligned, t_fp_OodleCore_Plugin_Free * fp_OodleFree)"
  },
  {
    "label": "OO_U64()",
    "kind": "Method",
    "detail": "Function (OODEFFUNC typedef)",
    "insertText": "OO_U64(OODLE_CALLBACK t_fp_OodleCore_Plugin_RunJob)( t_fp_Oodle_Job * fp_job, void * job_data , OO_U64 * dependencies, int num_dependencies, void * user_ptr)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (OODEFFUNC typedef)",
    "insertText": "void(OODLE_CALLBACK t_fp_OodleCore_Plugin_WaitJob)( OO_U64 job_handle, void * user_ptr)"
  },
  {
    "label": "OodleCore_Plugins_SetJobSystem()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "OodleCore_Plugins_SetJobSystem(t_fp_OodleCore_Plugin_RunJob * fp_RunJob, t_fp_OodleCore_Plugin_WaitJob * fp_WaitJob)"
  },
  {
    "label": "OodleCore_Plugins_SetJobSystemAndCount()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "OodleCore_Plugins_SetJobSystemAndCount(t_fp_OodleCore_Plugin_RunJob * fp_RunJob, t_fp_OodleCore_Plugin_WaitJob * fp_WaitJob, int target_parallelism)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (OODEFFUNC typedef)",
    "insertText": "void(OODLE_CALLBACK t_fp_OodleCore_Plugin_Printf)(int verboseLevel,const char * file,int line,const char * fmt,...)"
  },
  {
    "label": "OodleCore_Plugins_SetPrintf()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 t_fp_OodleCore_Plugin_Printf* OOFUNC2)",
    "insertText": "OodleCore_Plugins_SetPrintf(t_fp_OodleCore_Plugin_Printf * fp_rrRawPrintf)"
  },
  {
    "label": "OO_BOOL()",
    "kind": "Method",
    "detail": "Function (OODEFFUNC typedef)",
    "insertText": "OO_BOOL(OODLE_CALLBACK t_fp_OodleCore_Plugin_DisplayAssertion)(const char * file,const int line,const char * function,const char * message)"
  },
  {
    "label": "OodleCore_Plugins_SetAssertion()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 t_fp_OodleCore_Plugin_DisplayAssertion* OOFUNC2)",
    "insertText": "OodleCore_Plugins_SetAssertion(t_fp_OodleCore_Plugin_DisplayAssertion * fp_rrDisplayAssertion)"
  },
  {
    "label": "OodleCore_Plugin_MallocAligned_Default()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void* OOFUNC2)",
    "insertText": "OodleCore_Plugin_MallocAligned_Default(OO_SINTa size,OO_S32 alignment)"
  },
  {
    "label": "OodleCore_Plugin_Free_Default()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "OodleCore_Plugin_Free_Default(void * ptr)"
  },
  {
    "label": "OodleCore_Plugin_Printf_Default()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "OodleCore_Plugin_Printf_Default(int verboseLevel,const char * file,int line,const char * fmt,...)"
  },
  {
    "label": "OodleCore_Plugin_Printf_Verbose()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "OodleCore_Plugin_Printf_Verbose(int verboseLevel,const char * file,int line,const char * fmt,...)"
  },
  {
    "label": "OodleCore_Plugin_DisplayAssertion_Default()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_BOOL OOFUNC2)",
    "insertText": "OodleCore_Plugin_DisplayAssertion_Default(const char * file,const int line,const char * function,const char * message)"
  },
  {
    "label": "OodleCore_Plugin_RunJob_Default()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_U64 OOFUNC2)",
    "insertText": "OodleCore_Plugin_RunJob_Default(t_fp_Oodle_Job * fp_job, void * job_data, OO_U64 * dependencies, int num_dependencies, void * user_ptr)"
  },
  {
    "label": "OodleCore_Plugin_WaitJob_Default()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "OodleCore_Plugin_WaitJob_Default(OO_U64 job_handle, void * user_ptr)"
  },
  {
    "label": "OODLELZ_FAILED()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "OODLELZ_FAILED(0) OOFUNC1 OO_SINTa OOFUNC2 OodleLZ_Compress(OodleLZ_Compressor compressor, const void * rawBuf,OO_SINTa rawLen,void * compBuf, OodleLZ_CompressionLevel level, const OodleLZ_CompressOptions * pOptions OODEFAULT(NULL), const void * dictionaryBase OODEFAULT(NULL), const void * lrm OODEFAULT(NULL), void * scratchMem OODEFAULT(NULL), OO_SINTa scratchSize OODEFAULT(0))"
  },
  {
    "label": "OodleLZ_Decompress()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_SINTa OOFUNC2)",
    "insertText": "OodleLZ_Decompress(const void * compBuf,OO_SINTa compBufSize,void * rawBuf,OO_SINTa rawLen, OodleLZ_FuzzSafe fuzzSafe OODEFAULT(OodleLZ_FuzzSafe_Yes), OodleLZ_CheckCRC checkCRC OODEFAULT(OodleLZ_CheckCRC_No), OodleLZ_Verbosity verbosity OODEFAULT(OodleLZ_Verbosity_None), void * decBufBase OODEFAULT(NULL), OO_SINTa decBufSize OODEFAULT(0), OodleDecompressCallback * fpCallback OODEFAULT(NULL), void * callbackUserData OODEFAULT(NULL), void * decoderMemory OODEFAULT(NULL), OO_SINTa decoderMemorySize OODEFAULT(0), OodleLZ_Decode_ThreadPhase threadPhase OODEFAULT(OodleLZ_Decode_Unthreaded))"
  },
  {
    "label": "OodleLZDecoder_Create()",
    "kind": "Method",
    "detail": "Function (struct _OodleLZDecoder ; typedef struct _OodleLZDecoder OodleLZDecoder ; OOFUNC1 OodleLZDecoder* OOFUNC2)",
    "insertText": "OodleLZDecoder_Create(OodleLZ_Compressor compressor,OO_S64 rawLen,void * memory, OO_SINTa memorySize)"
  },
  {
    "label": "OodleLZDecoder_MemorySizeNeeded()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_S32 OOFUNC2)",
    "insertText": "OodleLZDecoder_MemorySizeNeeded(OodleLZ_Compressor compressor OODEFAULT(OodleLZ_Compressor_Invalid), OO_SINTa rawLen OODEFAULT(-1))"
  },
  {
    "label": "OodleLZ_ThreadPhased_BlockDecoderMemorySizeNeeded()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_S32 OOFUNC2)",
    "insertText": "OodleLZ_ThreadPhased_BlockDecoderMemorySizeNeeded(void)"
  },
  {
    "label": "OodleLZDecoder_Destroy()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "OodleLZDecoder_Destroy(OodleLZDecoder * decoder)"
  },
  {
    "label": "OodleLZDecoder_Reset()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_BOOL OOFUNC2)",
    "insertText": "OodleLZDecoder_Reset(OodleLZDecoder * decoder, OO_SINTa decPos, OO_SINTa decLen OODEFAULT(0))"
  },
  {
    "label": "OodleLZDecoder_DecodeSome()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_BOOL OOFUNC2)",
    "insertText": "OodleLZDecoder_DecodeSome(OodleLZDecoder * decoder, OodleLZ_DecodeSome_Out * out, void * decBuf, OO_SINTa decBufPos, OO_SINTa decBufferSize, OO_SINTa decBufAvail, const void * compPtr, OO_SINTa compAvail, OodleLZ_FuzzSafe fuzzSafe OODEFAULT(OodleLZ_FuzzSafe_No), OodleLZ_CheckCRC checkCRC OODEFAULT(OodleLZ_CheckCRC_No), OodleLZ_Verbosity verbosity OODEFAULT(OodleLZ_Verbosity_None), OodleLZ_Decode_ThreadPhase threadPhase OODEFAULT(OodleLZ_Decode_Unthreaded))"
  },
  {
    "label": "OodleLZDecoder_MakeValidCircularWindowSize()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_S32 OOFUNC2)",
    "insertText": "OodleLZDecoder_MakeValidCircularWindowSize(OodleLZ_Compressor compressor,OO_S32 minWindowSize OODEFAULT(0))"
  },
  {
    "label": "OodleLZ_MakeSeekChunkLen()",
    "kind": "Method",
    "detail": "Function (# define OODLELZ_SEEKPOINTCOUNT_DEFAULT 1 6 OOFUNC1 OO_S32 OOFUNC2)",
    "insertText": "OodleLZ_MakeSeekChunkLen(OO_S64 rawLen, OO_S32 desiredSeekPointCount)"
  },
  {
    "label": "OodleLZ_GetNumSeekChunks()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_S32 OOFUNC2)",
    "insertText": "OodleLZ_GetNumSeekChunks(OO_S64 rawLen, OO_S32 seekChunkLen)"
  },
  {
    "label": "OodleLZ_GetSeekTableMemorySizeNeeded()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_SINTa OOFUNC2)",
    "insertText": "OodleLZ_GetSeekTableMemorySizeNeeded(OO_S32 numSeekChunks,OodleLZSeekTable_Flags flags)"
  },
  {
    "label": "OodleLZ_FillSeekTable()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_BOOL OOFUNC2)",
    "insertText": "OodleLZ_FillSeekTable(OodleLZ_SeekTable * pTable,OodleLZSeekTable_Flags flags,OO_S32 seekChunkLen,const void * rawBuf, OO_SINTa rawLen,const void * compBuf,OO_SINTa compLen)"
  },
  {
    "label": "OodleLZ_CreateSeekTable()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OodleLZ_SeekTable* OOFUNC2)",
    "insertText": "OodleLZ_CreateSeekTable(OodleLZSeekTable_Flags flags,OO_S32 seekChunkLen,const void * rawBuf, OO_SINTa rawLen,const void * compBuf,OO_SINTa compLen)"
  },
  {
    "label": "OodleLZ_FreeSeekTable()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "OodleLZ_FreeSeekTable(OodleLZ_SeekTable * pTable)"
  },
  {
    "label": "OodleLZ_CheckSeekTableCRCs()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_BOOL OOFUNC2)",
    "insertText": "OodleLZ_CheckSeekTableCRCs(const void * rawBuf,OO_SINTa rawLen, const OodleLZ_SeekTable * seekTable)"
  },
  {
    "label": "OodleLZ_FindSeekEntry()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_S32 OOFUNC2)",
    "insertText": "OodleLZ_FindSeekEntry(OO_S64 rawPos, const OodleLZ_SeekTable * seekTable)"
  },
  {
    "label": "OodleLZ_GetSeekEntryPackedPos()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_S64 OOFUNC2)",
    "insertText": "OodleLZ_GetSeekEntryPackedPos(OO_S32 seekI , const OodleLZ_SeekTable * seekTable)"
  },
  {
    "label": "OodleLZ_CompressionLevel_GetName()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 const char* OOFUNC2)",
    "insertText": "OodleLZ_CompressionLevel_GetName(OodleLZ_CompressionLevel compressSelect)"
  },
  {
    "label": "OodleLZ_Compressor_GetName()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 const char* OOFUNC2)",
    "insertText": "OodleLZ_Compressor_GetName(OodleLZ_Compressor compressor)"
  },
  {
    "label": "OodleLZ_Jobify_GetName()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 const char* OOFUNC2)",
    "insertText": "OodleLZ_Jobify_GetName(OodleLZ_Jobify jobify)"
  },
  {
    "label": "OodleLZ_CompressOptions_GetDefault()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 const OodleLZ_CompressOptions* OOFUNC2)",
    "insertText": "OodleLZ_CompressOptions_GetDefault(OodleLZ_Compressor compressor OODEFAULT(OodleLZ_Compressor_Invalid), OodleLZ_CompressionLevel lzLevel OODEFAULT(OodleLZ_CompressionLevel_Normal))"
  },
  {
    "label": "OodleLZ_CompressOptions_Validate()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "OodleLZ_CompressOptions_Validate(OodleLZ_CompressOptions * pOptions)"
  },
  {
    "label": "OodleLZ_Compressor_UsesWholeBlockQuantum()",
    "kind": "Method",
    "detail": "Function (OODEFSTART OO_BOOL)",
    "insertText": "OodleLZ_Compressor_UsesWholeBlockQuantum(OodleLZ_Compressor compressor)"
  },
  {
    "label": "OodleLZ_Compressor_UsesLargeWindow()",
    "kind": "Method",
    "detail": "Function (OO_BOOL)",
    "insertText": "OodleLZ_Compressor_UsesLargeWindow(OodleLZ_Compressor compressor)"
  },
  {
    "label": "OodleLZ_Compressor_CanDecodeInCircularWindow()",
    "kind": "Method",
    "detail": "Function (OO_BOOL)",
    "insertText": "OodleLZ_Compressor_CanDecodeInCircularWindow(OodleLZ_Compressor compressor)"
  },
  {
    "label": "OodleLZ_Compressor_CanDecodeThreadPhased()",
    "kind": "Method",
    "detail": "Function (OO_BOOL)",
    "insertText": "OodleLZ_Compressor_CanDecodeThreadPhased(OodleLZ_Compressor compressor)"
  },
  {
    "label": "OodleLZ_Compressor_CanDecodeInPlace()",
    "kind": "Method",
    "detail": "Function (OO_BOOL)",
    "insertText": "OodleLZ_Compressor_CanDecodeInPlace(OodleLZ_Compressor compressor)"
  },
  {
    "label": "OodleLZ_Compressor_MustDecodeWithoutResets()",
    "kind": "Method",
    "detail": "Function (OO_BOOL)",
    "insertText": "OodleLZ_Compressor_MustDecodeWithoutResets(OodleLZ_Compressor compressor)"
  },
  {
    "label": "OodleLZ_Compressor_CanDecodeFuzzSafe()",
    "kind": "Method",
    "detail": "Function (OO_BOOL)",
    "insertText": "OodleLZ_Compressor_CanDecodeFuzzSafe(OodleLZ_Compressor compressor)"
  },
  {
    "label": "OodleLZ_Compressor_RespectsDictionarySize()",
    "kind": "Method",
    "detail": "Function (OO_BOOL)",
    "insertText": "OodleLZ_Compressor_RespectsDictionarySize(OodleLZ_Compressor compressor)"
  },
  {
    "label": "OODLELZ_COMPRESSOR_MASK()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "OODLELZ_COMPRESSOR_MASK(c) (((OO_U32)1)<<((OO_S32)(c))) #define OODLELZ_COMPRESSOR_BOOLBIT(s,c) (((s)>>(OO_S32)(c))&1) OOINLINEFUNC OO_BOOL OodleLZ_Compressor_IsNewLZFamily(OodleLZ_Compressor compressor)"
  },
  {
    "label": "OODLELZ_COMPRESSOR_MASK()",
    "kind": "Method",
    "detail": "Function (const OO_U32 set =)",
    "insertText": "OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Kraken) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Leviathan) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Mermaid) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Selkie) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Hydra)"
  },
  {
    "label": "OODLELZ_COMPRESSOR_MASK()",
    "kind": "Method",
    "detail": "Function (# ifdef OODLE_ALLOW_DEPRECATED_COMPRESSORS const OO_U32 set =)",
    "insertText": "OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_None) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Kraken) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Leviathan) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Mermaid) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Selkie) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Hydra) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_BitKnit) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_LZB16)"
  },
  {
    "label": "OODLELZ_COMPRESSOR_MASK()",
    "kind": "Method",
    "detail": "Function (# ifdef OODLE_ALLOW_DEPRECATED_COMPRESSORS const OO_U32 set =)",
    "insertText": "OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_None) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Kraken) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Leviathan) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Mermaid) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Selkie) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_Hydra) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_LZNA) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_BitKnit)"
  },
  {
    "label": "OODLELZ_COMPRESSOR_MASK()",
    "kind": "Method",
    "detail": "Function (# ifdef OODLE_ALLOW_DEPRECATED_COMPRESSORS const OO_U32 set =)",
    "insertText": "OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_LZH) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_LZB16)"
  },
  {
    "label": "OODLELZ_COMPRESSOR_BOOLBIT()",
    "kind": "Method",
    "detail": "Function (# else const OO_U32 set = 0 ; # endif return)",
    "insertText": "OODLELZ_COMPRESSOR_BOOLBIT(set,compressor)"
  },
  {
    "label": "OODLELZ_COMPRESSOR_MASK()",
    "kind": "Method",
    "detail": "Function (# ifdef OODLE_ALLOW_DEPRECATED_COMPRESSORS const OO_U32 set =)",
    "insertText": "OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_BitKnit) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_LZA) | OODLELZ_COMPRESSOR_MASK(OodleLZ_Compressor_LZNA)"
  },
  {
    "label": "OODLELZ_SCRATCH_MEM_NO_BOUND()",
    "kind": "Method",
    "detail": "Function (} OODEFEND # define)",
    "insertText": "OODLELZ_SCRATCH_MEM_NO_BOUND(-1) OOFUNC1 OO_SINTa OOFUNC2 OodleLZ_GetCompressScratchMemBound( OodleLZ_Compressor compressor, OodleLZ_CompressionLevel level, OO_SINTa rawLen, const OodleLZ_CompressOptions * pOptions OODEFAULT(NULL))"
  },
  {
    "label": "OodleLZ_GetCompressedBufferSizeNeeded()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_SINTa OOFUNC2)",
    "insertText": "OodleLZ_GetCompressedBufferSizeNeeded(OodleLZ_Compressor compressor,OO_SINTa rawSize)"
  },
  {
    "label": "OodleLZ_GetDecodeBufferSize()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_SINTa OOFUNC2)",
    "insertText": "OodleLZ_GetDecodeBufferSize(OodleLZ_Compressor compressor,OO_SINTa rawSize,OO_BOOL corruptionPossible)"
  },
  {
    "label": "OodleLZ_GetInPlaceDecodeBufferSize()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_SINTa OOFUNC2)",
    "insertText": "OodleLZ_GetInPlaceDecodeBufferSize(OodleLZ_Compressor compressor,OO_SINTa compLen, OO_SINTa rawLen)"
  },
  {
    "label": "OodleLZ_GetCompressedStepForRawStep()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OO_SINTa OOFUNC2)",
    "insertText": "OodleLZ_GetCompressedStepForRawStep(const void * compPtr, OO_SINTa compAvail, OO_SINTa startRawPos, OO_SINTa rawSeekBytes, OO_SINTa * pEndRawPos OODEFAULT(NULL), OO_BOOL * pIndependent OODEFAULT(NULL))"
  },
  {
    "label": "OodleLZ_GetAllChunksCompressor()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OodleLZ_Compressor OOFUNC2)",
    "insertText": "OodleLZ_GetAllChunksCompressor(const void * compBuf,OO_SINTa compBufSize, OO_SINTa rawLen)"
  },
  {
    "label": "OodleLZ_GetFirstChunkCompressor()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OodleLZ_Compressor OOFUNC2)",
    "insertText": "OodleLZ_GetFirstChunkCompressor(const void * compChunkPtr, OO_SINTa compBufAvail, OO_BOOL * pIndependent)"
  },
  {
    "label": "OodleLZ_GetChunkCompressor()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 OodleLZ_Compressor OOFUNC2)",
    "insertText": "OodleLZ_GetChunkCompressor(const void * compChunkPtr, OO_SINTa compBufAvail, OO_BOOL * pIndependent)"
  },
  {
    "label": "OODLE_HEADER_VERSION()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "OODLE_HEADER_VERSION((46<<24)|(OODLE2_VERSION_MAJOR<<16)|(OODLE2_VERSION_MINOR<<8)|(OO_U32)sizeof(OodleLZ_SeekTable)) OOFUNC1 OO_BOOL OOFUNC2 Oodle_CheckVersion(OO_U32 oodle_header_version, OO_U32 * pOodleLibVersion OODEFAULT(NULL))"
  },
  {
    "label": "Oodle_LogHeader()",
    "kind": "Method",
    "detail": "Function (OOFUNC1 void OOFUNC2)",
    "insertText": "Oodle_LogHeader(void)"
  }
]