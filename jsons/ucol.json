[
  {
    "label": "UCollator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UCollator"
  },
  {
    "label": "UCollator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UCollator"
  },
  {
    "label": "LocalUCollatorPointer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LocalUCollatorPointer"
  },
  {
    "label": "that",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "that"
  },
  {
    "label": "ucol_open()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_open(const char *loc, UErrorCode *status)"
  },
  {
    "label": "ucol_openRules()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_openRules( const UChar        *rules,\n                int32_t            rulesLength,\n                UColAttributeValue normalizationMode,\n                UCollationStrength strength,\n                UParseError        *parseError,\n                UErrorCode         *status)"
  },
  {
    "label": "ucol_openFromShortString()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_openFromShortString( const char *definition,\n                          UBool forceDefaults,\n                          UParseError *parseError,\n                          UErrorCode *status)"
  },
  {
    "label": "ucol_getContractions()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getContractions( const UCollator *coll,\n                  USet *conts,\n                  UErrorCode *status)"
  },
  {
    "label": "ucol_getContractionsAndExpansions()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getContractionsAndExpansions( const UCollator *coll,\n                  USet *contractions, USet *expansions,\n                  UBool addPrefixes, UErrorCode *status)"
  },
  {
    "label": "ucol_close()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_close(UCollator *coll)"
  },
  {
    "label": "ucol_strcoll()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_strcoll(    const    UCollator    *coll,\n        const    UChar        *source,\n        int32_t            sourceLength,\n        const    UChar        *target,\n        int32_t            targetLength)"
  },
  {
    "label": "ucol_strcollUTF8()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_strcollUTF8(\n        const UCollator *coll,\n        const char      *source,\n        int32_t         sourceLength,\n        const char      *target,\n        int32_t         targetLength,\n        UErrorCode      *status)"
  },
  {
    "label": "ucol_greater()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_greater(const UCollator *coll,\n             const UChar     *source, int32_t sourceLength,\n             const UChar     *target, int32_t targetLength)"
  },
  {
    "label": "ucol_greaterOrEqual()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_greaterOrEqual(const UCollator *coll,\n                    const UChar     *source, int32_t sourceLength,\n                    const UChar     *target, int32_t targetLength)"
  },
  {
    "label": "ucol_equal()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_equal(const UCollator *coll,\n           const UChar     *source, int32_t sourceLength,\n           const UChar     *target, int32_t targetLength)"
  },
  {
    "label": "ucol_strcollIter()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_strcollIter(  const    UCollator    *coll,\n                  UCharIterator *sIter,\n                  UCharIterator *tIter,\n                  UErrorCode *status)"
  },
  {
    "label": "ucol_getStrength()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getStrength(const UCollator *coll)"
  },
  {
    "label": "ucol_setStrength()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_setStrength(UCollator *coll,\n                 UCollationStrength strength)"
  },
  {
    "label": "ucol_getReorderCodes()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getReorderCodes(const UCollator* coll,\n                    int32_t* dest,\n                    int32_t destCapacity,\n                    UErrorCode *pErrorCode)"
  },
  {
    "label": "ucol_setReorderCodes()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_setReorderCodes(UCollator* coll,\n                    const int32_t* reorderCodes,\n                    int32_t reorderCodesLength,\n                    UErrorCode *pErrorCode)"
  },
  {
    "label": "ucol_getEquivalentReorderCodes()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getEquivalentReorderCodes(int32_t reorderCode,\n                    int32_t* dest,\n                    int32_t destCapacity,\n                    UErrorCode *pErrorCode)"
  },
  {
    "label": "ucol_getDisplayName()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getDisplayName(    const    char        *objLoc,\n            const    char        *dispLoc,\n            UChar             *result,\n            int32_t         resultLength,\n            UErrorCode        *status)"
  },
  {
    "label": "ucol_getAvailable()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getAvailable(int32_t localeIndex)"
  },
  {
    "label": "ucol_countAvailable()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_countAvailable(void)"
  },
  {
    "label": "ucol_openAvailableLocales()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_openAvailableLocales(UErrorCode *status)"
  },
  {
    "label": "ucol_getKeywords()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getKeywords(UErrorCode *status)"
  },
  {
    "label": "ucol_getKeywordValues()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getKeywordValues(const char *keyword, UErrorCode *status)"
  },
  {
    "label": "ucol_getKeywordValuesForLocale()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getKeywordValuesForLocale(const char* key,\n                               const char* locale,\n                               UBool commonlyUsed,\n                               UErrorCode* status)"
  },
  {
    "label": "ucol_getFunctionalEquivalent()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getFunctionalEquivalent(char* result, int32_t resultCapacity,\n                             const char* keyword, const char* locale,\n                             UBool* isAvailable, UErrorCode* status)"
  },
  {
    "label": "ucol_getRules()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getRules(    const    UCollator    *coll, \n        int32_t            *length)"
  },
  {
    "label": "ucol_getShortDefinitionString()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getShortDefinitionString(const UCollator *coll,\n                              const char *locale,\n                              char *buffer,\n                              int32_t capacity,\n                              UErrorCode *status)"
  },
  {
    "label": "ucol_normalizeShortDefinitionString()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_normalizeShortDefinitionString(const char *source,\n                                    char *destination,\n                                    int32_t capacity,\n                                    UParseError *parseError,\n                                    UErrorCode *status)"
  },
  {
    "label": "ucol_getSortKey()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getSortKey(const    UCollator    *coll,\n        const    UChar        *source,\n        int32_t        sourceLength,\n        uint8_t        *result,\n        int32_t        resultLength)"
  },
  {
    "label": "ucol_nextSortKeyPart()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_nextSortKeyPart(const UCollator *coll,\n                     UCharIterator *iter,\n                     uint32_t state[2],\n                     uint8_t *dest, int32_t count,\n                     UErrorCode *status)"
  },
  {
    "label": "ucol_getBound()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getBound(const uint8_t       *source,\n        int32_t             sourceLength,\n        UColBoundMode       boundType,\n        uint32_t            noOfLevels,\n        uint8_t             *result,\n        int32_t             resultLength,\n        UErrorCode          *status)"
  },
  {
    "label": "ucol_getVersion()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getVersion(const UCollator* coll, UVersionInfo info)"
  },
  {
    "label": "ucol_getUCAVersion()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getUCAVersion(const UCollator* coll, UVersionInfo info)"
  },
  {
    "label": "ucol_mergeSortkeys()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_mergeSortkeys(const uint8_t *src1, int32_t src1Length,\n                   const uint8_t *src2, int32_t src2Length,\n                   uint8_t *dest, int32_t destCapacity)"
  },
  {
    "label": "ucol_setAttribute()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_setAttribute(UCollator *coll, UColAttribute attr, UColAttributeValue value, UErrorCode *status)"
  },
  {
    "label": "ucol_getAttribute()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getAttribute(const UCollator *coll, UColAttribute attr, UErrorCode *status)"
  },
  {
    "label": "ucol_setMaxVariable()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_setMaxVariable(UCollator *coll, UColReorderCode group, UErrorCode *pErrorCode)"
  },
  {
    "label": "ucol_getMaxVariable()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getMaxVariable(const UCollator *coll)"
  },
  {
    "label": "ucol_setVariableTop()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_setVariableTop(UCollator *coll, \n                    const UChar *varTop, int32_t len, \n                    UErrorCode *status)"
  },
  {
    "label": "ucol_getVariableTop()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getVariableTop(const UCollator *coll, UErrorCode *status)"
  },
  {
    "label": "ucol_restoreVariableTop()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_restoreVariableTop(UCollator *coll, const uint32_t varTop, UErrorCode *status)"
  },
  {
    "label": "ucol_safeClone()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_safeClone(const UCollator *coll,\n               void            *stackBuffer,\n               int32_t         *pBufferSize,\n               UErrorCode      *status)"
  },
  {
    "label": "ucol_getRulesEx()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getRulesEx(const UCollator *coll, UColRuleOption delta, UChar *buffer, int32_t bufferLen)"
  },
  {
    "label": "ucol_getLocale()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getLocale(const UCollator *coll, ULocDataLocaleType type, UErrorCode *status)"
  },
  {
    "label": "ucol_getLocaleByType()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getLocaleByType(const UCollator *coll, ULocDataLocaleType type, UErrorCode *status)"
  },
  {
    "label": "ucol_getTailoredSet()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getTailoredSet(const UCollator *coll, UErrorCode *status)"
  },
  {
    "label": "ucol_getUnsafeSet()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_getUnsafeSet( const UCollator *coll,\n                  USet *unsafe,\n                  UErrorCode *status)"
  },
  {
    "label": "ucol_prepareShortStringOpen()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_prepareShortStringOpen( const char *definition,\n                          UBool forceDefaults,\n                          UParseError *parseError,\n                          UErrorCode *status)"
  },
  {
    "label": "ucol_cloneBinary()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_cloneBinary(const UCollator *coll,\n                 uint8_t *buffer, int32_t capacity,\n                 UErrorCode *status)"
  },
  {
    "label": "ucol_openBinary()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucol_openBinary(const uint8_t *bin, int32_t length, \n                const UCollator *base, \n                UErrorCode *status)"
  }
]