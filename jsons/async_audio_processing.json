[
  {
    "label": "AudioFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioFrame"
  },
  {
    "label": "TaskQueueFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskQueueFactory"
  },
  {
    "label": "AsyncAudioProcessing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsyncAudioProcessing"
  },
  {
    "label": "Factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Factory"
  },
  {
    "label": "Factory()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_ASYNC_AUDIO_PROCESSING_ASYNC_AUDIO_PROCESSING_H_ # define MODULES_ASYNC_AUDIO_PROCESSING_ASYNC_AUDIO_PROCESSING_H_ # include<memory> # include \" api / audio / audio_frame_processor . h \" # include \" rtc_base / ref_count . h \" # include \" rtc_base / task_queue . h \" namespace webrtc { class AudioFrame ; class TaskQueueFactory ; class AsyncAudioProcessing final { public : class Factory : public rtc::RefCountInterface { public :)",
    "insertText": "Factory(const Factory&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Factory&)",
    "insertText": "operator(const Factory&)"
  },
  {
    "label": "Factory()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Factory()"
  },
  {
    "label": "Factory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Factory(AudioFrameProcessor& frame_processor, TaskQueueFactory& task_queue_factory)"
  },
  {
    "label": "CreateAsyncAudioProcessing()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<AsyncAudioProcessing>)",
    "insertText": "CreateAsyncAudioProcessing(AudioFrameProcessor::OnAudioFrameCallback on_frame_processed_callback)"
  },
  {
    "label": "AsyncAudioProcessing()",
    "kind": "Method",
    "detail": "Function (private : AudioFrameProcessor& frame_processor_ ; TaskQueueFactory& task_queue_factory_ ; } ;)",
    "insertText": "AsyncAudioProcessing(const AsyncAudioProcessing&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AsyncAudioProcessing&)",
    "insertText": "operator(const AsyncAudioProcessing&)"
  },
  {
    "label": "AsyncAudioProcessing()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "AsyncAudioProcessing()"
  },
  {
    "label": "AsyncAudioProcessing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncAudioProcessing(AudioFrameProcessor& frame_processor, TaskQueueFactory& task_queue_factory, AudioFrameProcessor::OnAudioFrameCallback on_frame_processed_callback)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Process(std::unique_ptr<AudioFrame> frame)"
  }
]