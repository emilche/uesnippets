[
  {
    "label": "UActorBrowsingModeSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorBrowsingModeSettings"
  },
  {
    "label": "IWorldPartitionEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionEditorModule"
  },
  {
    "label": "FWorldPartitionActorDescInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDescInstance"
  },
  {
    "label": "FActorBrowsingMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorBrowsingMode"
  },
  {
    "label": "FActorBrowsingModeConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorBrowsingModeConfig"
  },
  {
    "label": "FActorBrowsingMode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ActorModeInteractive . h \" # include \" WorldPartition / WorldPartitionHandle . h \" class UActorBrowsingModeSettings ; class IWorldPartitionEditorModule ; class FWorldPartitionActorDescInstance ; class FActorBrowsingMode : public FActorModeInteractive { public :)",
    "insertText": "FActorBrowsingMode(SSceneOutliner* InSceneOutliner, TWeakObjectPtr<UWorld> InSpecifiedWorldToDisplay = nullptr)"
  },
  {
    "label": "FActorBrowsingMode()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FActorBrowsingMode()"
  },
  {
    "label": "Rebuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rebuild()"
  },
  {
    "label": "CreateFolderPickerMode()",
    "kind": "Method",
    "detail": "Function (FCreateSceneOutlinerMode)",
    "insertText": "CreateFolderPickerMode(const FFolder::FRootObject& InRootObject = FFolder::GetInvalidRootObject())"
  },
  {
    "label": "InitializeViewMenuExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeViewMenuExtender(TSharedPtr<FExtender> Extender)"
  },
  {
    "label": "CreateContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateContextMenu()"
  },
  {
    "label": "OnItemAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemAdded(FSceneOutlinerTreeItemPtr Item)"
  },
  {
    "label": "OnItemRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemRemoved(FSceneOutlinerTreeItemPtr Item)"
  },
  {
    "label": "OnItemSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemSelectionChanged(FSceneOutlinerTreeItemPtr Item, ESelectInfo::Type SelectionType, const FSceneOutlinerItemSelection& Selection)"
  },
  {
    "label": "OnItemDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemDoubleClick(FSceneOutlinerTreeItemPtr Item)"
  },
  {
    "label": "OnFilterTextCommited()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommited(FSceneOutlinerItemSelection& Selection, ETextCommit::Type CommitType)"
  },
  {
    "label": "OnItemPassesFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemPassesFilters(const ISceneOutlinerTreeItem& Item)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnDuplicateSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDuplicateSelected()"
  },
  {
    "label": "HasCustomFolderDoubleClick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCustomFolderDoubleClick()"
  },
  {
    "label": "CanRenameItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameItem(const ISceneOutlinerTreeItem& Item)"
  },
  {
    "label": "GetStatusText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetStatusText()"
  },
  {
    "label": "GetStatusTextColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetStatusTextColor()"
  },
  {
    "label": "GetSelectionMode()",
    "kind": "Method",
    "detail": "Function (ESelectionMode::Type)",
    "insertText": "GetSelectionMode()"
  },
  {
    "label": "CanRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRename()"
  },
  {
    "label": "CanCut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCut()"
  },
  {
    "label": "CanCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCopy()"
  },
  {
    "label": "CanPaste()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPaste()"
  },
  {
    "label": "CanSupportDragAndDrop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSupportDragAndDrop()"
  },
  {
    "label": "GetErrorsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetErrorsText()"
  },
  {
    "label": "RepairErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepairErrors()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands(const TSharedRef<FUICommandList>& OutCommandList)"
  },
  {
    "label": "CreateNewFolder()",
    "kind": "Method",
    "detail": "Function (FFolder)",
    "insertText": "CreateNewFolder()"
  },
  {
    "label": "GetFolder()",
    "kind": "Method",
    "detail": "Function (FFolder)",
    "insertText": "GetFolder(const FFolder& ParentPath, const FName& LeafName)"
  },
  {
    "label": "CreateFolder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateFolder(const FFolder& NewFolder)"
  },
  {
    "label": "ReparentItemToFolder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReparentItemToFolder(const FFolder& FolderPath, const FSceneOutlinerTreeItemPtr& Item)"
  },
  {
    "label": "SelectFoldersDescendants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectFoldersDescendants(const TArray<FFolderTreeItem*>& FolderItems, bool bSelectImmediateChildrenOnly)"
  },
  {
    "label": "PinItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PinItems(const TArray<FSceneOutlinerTreeItemPtr>& InItems)"
  },
  {
    "label": "UnpinItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnpinItems(const TArray<FSceneOutlinerTreeItemPtr>& InItems)"
  },
  {
    "label": "CanPinItems()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPinItems(const TArray<FSceneOutlinerTreeItemPtr>& InItems)"
  },
  {
    "label": "CanUnpinItems()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUnpinItems(const TArray<FSceneOutlinerTreeItemPtr>& InItems)"
  },
  {
    "label": "SynchronizeSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SynchronizeSelection()"
  },
  {
    "label": "OnComponentsUpdated()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnComponentsUpdated()"
  },
  {
    "label": "OnLevelActorDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorDeleted(AActor* Actor)"
  },
  {
    "label": "OnSelectUnloadedActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectUnloadedActors(const TArray<FGuid>& ActorGuids)"
  },
  {
    "label": "OnActorDescInstanceRemoved()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnActorDescInstanceRemoved(FWorldPartitionActorDescInstance* InActorDescInstance)"
  },
  {
    "label": "OnEditCutActorsBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditCutActorsBegin()"
  },
  {
    "label": "OnEditCutActorsEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditCutActorsEnd()"
  },
  {
    "label": "OnEditCopyActorsBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditCopyActorsBegin()"
  },
  {
    "label": "OnEditCopyActorsEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditCopyActorsEnd()"
  },
  {
    "label": "OnEditPasteActorsBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditPasteActorsBegin()"
  },
  {
    "label": "OnEditPasteActorsEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditPasteActorsEnd()"
  },
  {
    "label": "OnDuplicateActorsBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDuplicateActorsBegin()"
  },
  {
    "label": "OnDuplicateActorsEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDuplicateActorsEnd()"
  },
  {
    "label": "OnDeleteActorsBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteActorsBegin()"
  },
  {
    "label": "OnDeleteActorsEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteActorsEnd()"
  },
  {
    "label": "CompareItemWithClassName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompareItemWithClassName(SceneOutliner::FilterBarType InItem, const TSet<FTopLevelAssetPath>&)"
  },
  {
    "label": "BuildContextMenu()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<SWidget>)",
    "insertText": "BuildContextMenu()"
  },
  {
    "label": "RegisterContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterContextMenu()"
  },
  {
    "label": "FillDefaultContextBaseMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillDefaultContextBaseMenu(UToolMenu* InMenu)"
  },
  {
    "label": "CanPasteFoldersOnlyFromClipboard()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPasteFoldersOnlyFromClipboard()"
  },
  {
    "label": "OnExecuteDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExecuteDelete()"
  },
  {
    "label": "OnExecuteRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExecuteRefresh()"
  },
  {
    "label": "OnExecuteRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExecuteRename()"
  },
  {
    "label": "CanExecuteRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteRename()"
  },
  {
    "label": "SynchronizeSelectedActorDescs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SynchronizeSelectedActorDescs()"
  },
  {
    "label": "OnActorEditorContextSubsystemChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorEditorContextSubsystemChanged()"
  },
  {
    "label": "CreateShowOnlySelectedActorsFilter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSceneOutlinerFilter>)",
    "insertText": "CreateShowOnlySelectedActorsFilter()"
  },
  {
    "label": "CreateIsInCurrentLevelFilter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSceneOutlinerFilter>)",
    "insertText": "CreateIsInCurrentLevelFilter()"
  },
  {
    "label": "CreateIsInCurrentDataLayersFilter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSceneOutlinerFilter>)",
    "insertText": "CreateIsInCurrentDataLayersFilter()"
  },
  {
    "label": "CreateHideComponentsFilter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSceneOutlinerFilter>)",
    "insertText": "CreateHideComponentsFilter()"
  },
  {
    "label": "CreateHideUnloadedActorsFilter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSceneOutlinerFilter>)",
    "insertText": "CreateHideUnloadedActorsFilter()"
  },
  {
    "label": "CreateHideEmptyFoldersFilter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSceneOutlinerFilter>)",
    "insertText": "CreateHideEmptyFoldersFilter()"
  },
  {
    "label": "CreateIsInCurrentContentBundleFilter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSceneOutlinerFilter>)",
    "insertText": "CreateIsInCurrentContentBundleFilter()"
  },
  {
    "label": "OnToggleAlwaysFrameSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleAlwaysFrameSelection()"
  },
  {
    "label": "ShouldAlwaysFrameSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldAlwaysFrameSelection()"
  },
  {
    "label": "OnToggleHideTemporaryActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleHideTemporaryActors()"
  },
  {
    "label": "ShouldHideTemporaryActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldHideTemporaryActors()"
  },
  {
    "label": "OnToggleHideLevelInstanceHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleHideLevelInstanceHierarchy()"
  },
  {
    "label": "ShouldHideLevelInstanceHierarchy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldHideLevelInstanceHierarchy()"
  },
  {
    "label": "OnToggleFolderDoubleClickMarkCurrentFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleFolderDoubleClickMarkCurrentFolder()"
  },
  {
    "label": "DoesFolderDoubleClickMarkCurrentFolder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesFolderDoubleClickMarkCurrentFolder()"
  },
  {
    "label": "OnToggleShouldUpdateContentWhileInPIEFocused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleShouldUpdateContentWhileInPIEFocused()"
  },
  {
    "label": "ShouldUpdateContentWhileInPIEFocused()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldUpdateContentWhileInPIEFocused()"
  },
  {
    "label": "GetMutableConfig()",
    "kind": "Method",
    "detail": "Function (struct FActorBrowsingModeConfig*)",
    "insertText": "GetMutableConfig()"
  },
  {
    "label": "GetConstConfig()",
    "kind": "Method",
    "detail": "Function (const FActorBrowsingModeConfig*)",
    "insertText": "GetConstConfig()"
  },
  {
    "label": "SaveConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveConfig()"
  }
]