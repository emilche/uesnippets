[
  {
    "label": "FBTAuxiliaryMemory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBTAuxiliaryMemory"
  },
  {
    "label": "UBTAuxiliaryNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTAuxiliaryNode"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BehaviorTree / BTNode . h \" # include \" BTAuxiliaryNode . generated . h \" struct FBTAuxiliaryMemory : public FBTInstancedNodeMemory { float NextTickRemainingTime ; float AccumulatedDeltaTime ; } ;)",
    "insertText": "UCLASS(Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() AIMODULE_API void WrappedOnBecomeRelevant(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "WrappedOnCeaseRelevant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WrappedOnCeaseRelevant(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "WrappedTickNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WrappedTickNode(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds, float& NextNeededDeltaTime)"
  },
  {
    "label": "DescribeRuntimeValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DescribeRuntimeValues(const UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTDescriptionVerbosity::Type Verbosity, TArray<FString>& Values)"
  },
  {
    "label": "GetSpecialMemorySize()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetSpecialMemorySize()"
  },
  {
    "label": "InitializeParentLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeParentLink(uint8 InChildIndex)"
  },
  {
    "label": "GetMyNode()",
    "kind": "Method",
    "detail": "Function (const UBTNode*)",
    "insertText": "GetMyNode()"
  },
  {
    "label": "GetChildIndex()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "GetChildIndex()"
  },
  {
    "label": "GetNextNeededDeltaTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetNextNeededDeltaTime(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "OnBecomeRelevant()",
    "kind": "Method",
    "detail": "Function (protected : uint8 bNotifyBecomeRelevant : 1 ; uint8 bNotifyCeaseRelevant : 1 ; uint8 bNotifyTick : 1 ; uint8 bTickIntervals : 1 ; uint8 ChildIndex ; void)",
    "insertText": "OnBecomeRelevant(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "OnCeaseRelevant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCeaseRelevant(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "TickNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickNode(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds)"
  },
  {
    "label": "SetNextTickTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNextTickTime(uint8* NodeMemory, float RemainingTime)"
  },
  {
    "label": "GetNextTickRemainingTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetNextTickRemainingTime(uint8* NodeMemory)"
  },
  {
    "label": "InitNotifyFlags()",
    "kind": "Method",
    "detail": "Function (template<TickNode,OnBecomeRelevant,OnCeaseRelevant> void)",
    "insertText": "InitNotifyFlags(TickNode, OnBecomeRelevant, OnCeaseRelevant)"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (bNotifyTick = ! std::is_same_v<)",
    "insertText": "decltype(&UBTAuxiliaryNode::TickNode)"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (bNotifyBecomeRelevant = ! std::is_same_v<)",
    "insertText": "decltype(&UBTAuxiliaryNode::OnBecomeRelevant)"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (bNotifyCeaseRelevant = ! std::is_same_v<)",
    "insertText": "decltype(&UBTAuxiliaryNode::OnCeaseRelevant)"
  },
  {
    "label": "INIT_AUXILIARY_NODE_NOTIFY_FLAGS()",
    "kind": "Method",
    "detail": "Function (} } ; # define)",
    "insertText": "INIT_AUXILIARY_NODE_NOTIFY_FLAGS()"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (\\ using NodeType = TRemovePointer<)",
    "insertText": "decltype(this)"
  },
  {
    "label": "InitNotifyFlags()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "InitNotifyFlags(&NodeType::TickNode, &NodeType::OnBecomeRelevant, &NodeType::OnCeaseRelevant)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(false) FORCEINLINE uint8 UBTAuxiliaryNode::GetChildIndex()"
  }
]