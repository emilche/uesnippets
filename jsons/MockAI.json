[
  {
    "label": "UAIPerceptionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIPerceptionComponent"
  },
  {
    "label": "UBlackboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardComponent"
  },
  {
    "label": "UBrainComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBrainComponent"
  },
  {
    "label": "UMockAI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMockAI"
  },
  {
    "label": "FTestTickHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTestTickHelper"
  },
  {
    "label": "FTestTickHelper()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" UObject / Object . h \" # include \" AITestsCommon . h \" # include \" Tickable . h \" # include \" MockAI . generated . h \" class UAIPerceptionComponent ; class UBlackboardComponent ; class UBrainComponent ; class UMockAI ; struct FTestTickHelper : FTickableGameObject { TWeakObjectPtr<class UMockAI> Owner ;)",
    "insertText": "FTestTickHelper() : Owner(nullptr)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "IsTickable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTickable()"
  },
  {
    "label": "IsTickableInEditor()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsTickableInEditor()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() virtual ~UMockAI()"
  },
  {
    "label": "UseBrainComponent()",
    "kind": "Method",
    "detail": "Function (template<TBrainClass> void)",
    "insertText": "UseBrainComponent()"
  },
  {
    "label": "TBrainClass()",
    "kind": "Method",
    "detail": "Function (BrainComp = NewObject<)",
    "insertText": "TBrainClass(Actor)"
  },
  {
    "label": "UseBlackboardComponent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UseBlackboardComponent()"
  },
  {
    "label": "UsePerceptionComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UsePerceptionComponent()"
  },
  {
    "label": "SetEnableTicking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableTicking(bool bShouldTick)"
  },
  {
    "label": "TickMe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickMe(float DeltaTime)"
  }
]