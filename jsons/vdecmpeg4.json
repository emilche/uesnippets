[
  {
    "label": "VID_DECODER_INIT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VID_DECODER_INIT"
  },
  {
    "label": "VIDFrameType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VIDFrameType"
  },
  {
    "label": "VIDStreamIO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VIDStreamIO"
  },
  {
    "label": "VIDStreamEvents",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VIDStreamEvents"
  },
  {
    "label": "VID_IMAGEINFO_FRAMETYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VID_IMAGEINFO_FRAMETYPE"
  },
  {
    "label": "VIDImageMacroblockInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VIDImageMacroblockInfo"
  },
  {
    "label": "VIDImageInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VIDImageInfo"
  },
  {
    "label": "VID_DECODER_VID_BUFFERS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" vdecmpeg4_Build . h \" # include \" vdecmpeg4_Platform . h \" # include \" vdecmpeg4_ErrorCodes . h \" # include \" vdecmpeg4_Image . h \" namespace vdecmpeg4 { enum VID_DECODER_INIT {)",
    "insertText": "VID_DECODER_VID_BUFFERS(1<<0)"
  },
  {
    "label": "VIDCreateDecoder()",
    "kind": "Method",
    "detail": "Function (enum VIDFrameType { VID_FT_ERROR = - 1,VID_FT_I_FRAME = 0,VID_FT_P_FRAME,VID_FT_B_FRAME,VID_FT_S_FRAME } ; class VIDStreamIO ; class VIDStreamEvents ; enum VID_IMAGEINFO_FRAMETYPE { VID_IMAGEINFO_FRAMETYPE_UNKNOWN,VID_IMAGEINFO_FRAMETYPE_I,VID_IMAGEINFO_FRAMETYPE_P,VID_IMAGEINFO_FRAMETYPE_B,VID_IMAGEINFO_FRAMETYPE_S,} ; struct VIDImageMacroblockInfo { uint16 mNumMBinter ; uint16 mNumMBintra ; uint16 mNumMBinterpolated ; uint16 mNumMBnotCoded ; } ; struct VIDImageInfo { VID_IMAGEINFO_FRAMETYPE mFrameType ; uint32 mFrameNumber ; float mDecodeTimeMs ; uint32 mFrameBytes ; VIDImageMacroblockInfo mMacroblockInfo ; } ; VIDError)",
    "insertText": "VIDCreateDecoder(const VIDDecoderSetup* setup, VIDDecoder* pNewDecoder)"
  },
  {
    "label": "VIDDestroyDecoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VIDDestroyDecoder(VIDDecoder decoder)"
  },
  {
    "label": "VIDGetFrameInfo()",
    "kind": "Method",
    "detail": "Function (const VIDImageInfo*)",
    "insertText": "VIDGetFrameInfo(const VIDImage* pImage)"
  },
  {
    "label": "VIDDebugVideoOutToBMP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VIDDebugVideoOutToBMP(VIDDecoder decoder, const char *pBaseName)"
  },
  {
    "label": "VIDStreamSet()",
    "kind": "Method",
    "detail": "Function (VIDError)",
    "insertText": "VIDStreamSet(VIDDecoder decoder, VIDStreamIO* pStream, VIDStreamEvents* pEvents)"
  },
  {
    "label": "VIDStreamDecode()",
    "kind": "Method",
    "detail": "Function (VIDError)",
    "insertText": "VIDStreamDecode(VIDDecoder decoder, float time, const VIDImage** result)"
  },
  {
    "label": "VIDStreamEventsSet()",
    "kind": "Method",
    "detail": "Function (VIDError)",
    "insertText": "VIDStreamEventsSet(VIDDecoder decoder, VIDStreamEvents* pEvents)"
  },
  {
    "label": "VIDStreamSeekNotify()",
    "kind": "Method",
    "detail": "Function (VIDError)",
    "insertText": "VIDStreamSeekNotify(VIDDecoder decoder)"
  }
]