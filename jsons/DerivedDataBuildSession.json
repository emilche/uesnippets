[
  {
    "label": "FBuildAction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildAction"
  },
  {
    "label": "FBuildDefinition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildDefinition"
  },
  {
    "label": "FBuildSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildSession"
  },
  {
    "label": "FOptionalBuildInputs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOptionalBuildInputs"
  },
  {
    "label": "IRequestOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRequestOwner"
  },
  {
    "label": "FBuildKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildKey"
  },
  {
    "label": "IBuildSessionInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildSessionInternal"
  },
  {
    "label": "FOptionalBuildSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOptionalBuildSession"
  },
  {
    "label": "IBuildSessionInternal()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" # include \" CoreTypes . h \" # include \" DerivedDataBuildTypes . h \" # include \" Templates / Function . h \" # include \" Templates / UniquePtr . h \" # include \" Templates / UnrealTemplate . h \" namespace UE::DerivedData { class FBuildAction ; } namespace UE::DerivedData { class FBuildDefinition ; } namespace UE::DerivedData { class FBuildSession ; } namespace UE::DerivedData { class FOptionalBuildInputs ; } namespace UE::DerivedData { class IRequestOwner ; } namespace UE::DerivedData { struct FBuildKey ; } namespace UE::DerivedData::Private { class IBuildSessionInternal { public : ~)",
    "insertText": "IBuildSessionInternal()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FSharedString&)",
    "insertText": "GetName()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build(const FBuildKey& Key, const FBuildPolicy& Policy, IRequestOwner& Owner, FOnBuildComplete&& OnComplete)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build(const FBuildDefinition& Definition, const FOptionalBuildInputs& Inputs, const FBuildPolicy& Policy, IRequestOwner& Owner, FOnBuildComplete&& OnComplete)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build(const FBuildAction& Action, const FOptionalBuildInputs& Inputs, const FBuildPolicy& Policy, IRequestOwner& Owner, FOnBuildComplete&& OnComplete)"
  },
  {
    "label": "CreateBuildSession()",
    "kind": "Method",
    "detail": "Function (} ; FBuildSession)",
    "insertText": "CreateBuildSession(IBuildSessionInternal* Session)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (Session ->)",
    "insertText": "Build(Key, Policy, Owner, MoveTemp(OnComplete))"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (Session ->)",
    "insertText": "Build(Definition, Inputs, Policy, Owner, MoveTemp(OnComplete))"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (Session ->)",
    "insertText": "Build(Action, Inputs, Policy, Owner, MoveTemp(OnComplete))"
  },
  {
    "label": "CreateBuildSession()",
    "kind": "Method",
    "detail": "Function (} private : class FOptionalBuildSession ; FBuildSession)",
    "insertText": "CreateBuildSession(Private::IBuildSessionInternal* Session)"
  },
  {
    "label": "FBuildSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBuildSession(Private::IBuildSessionInternal* InSession) : Session(InSession)"
  },
  {
    "label": "FOptionalBuildSession()",
    "kind": "Method",
    "detail": "Function (} TUniquePtr<Private::IBuildSessionInternal> Session ; } ; class FOptionalBuildSession : private FBuildSession { public :)",
    "insertText": "FOptionalBuildSession() : FBuildSession(nullptr)"
  },
  {
    "label": "FOptionalBuildSession()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FOptionalBuildSession(FBuildSession&& InSession) : FBuildSession(MoveTemp(InSession))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FOptionalBuildSession&)",
    "insertText": "operator(FBuildSession&& InSession)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(MoveTemp(InSession))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FOptionalBuildSession&)",
    "insertText": "operator(const FBuildSession& InSession)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FBuildSession&)",
    "insertText": "Get()"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNull()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "FOptionalBuildSession()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "FOptionalBuildSession()"
  }
]