[
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "IntervalPatternIndex",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IntervalPatternIndex"
  },
  {
    "label": "DateIntervalFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateIntervalFormat"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "DateIntervalSink",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DateIntervalSink"
  },
  {
    "label": "IntervalPatternIndex",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IntervalPatternIndex"
  },
  {
    "label": "DateIntervalInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateIntervalInfo"
  },
  {
    "label": "DateIntervalInfo()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "DateIntervalInfo()"
  },
  {
    "label": "setIntervalPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setIntervalPattern(const UnicodeString& skeleton,\n                            UCalendarDateFields lrgDiffCalUnit,\n                            const UnicodeString& intervalPattern,\n                            UErrorCode& status)"
  },
  {
    "label": "setFallbackIntervalPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFallbackIntervalPattern(const UnicodeString& fallbackPattern,\n                                    UErrorCode& status)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getStaticClassID()"
  },
  {
    "label": "initializeData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeData(const Locale& locale, UErrorCode& status)"
  },
  {
    "label": "setIntervalPatternInternally()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setIntervalPatternInternally(const UnicodeString& skeleton,\n                                      UCalendarDateFields lrgDiffCalUnit,\n                                      const UnicodeString& intervalPattern,\n                                      UErrorCode& status)"
  },
  {
    "label": "parseSkeleton()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "parseSkeleton(const UnicodeString& skeleton,\n                                        int32_t* skeletonFieldWidth)"
  },
  {
    "label": "stringNumeric()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "stringNumeric(int32_t fieldWidth,\n                                         int32_t anotherFieldWidth,\n                                         char patternLetter)"
  },
  {
    "label": "calendarFieldToIntervalIndex()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "calendarFieldToIntervalIndex(\n                                                      UCalendarDateFields field,\n                                                      UErrorCode& status)"
  },
  {
    "label": "deleteHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleteHash(Hashtable* hTable)"
  },
  {
    "label": "copyHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyHash(const Hashtable* source, Hashtable* target, UErrorCode& status)"
  }
]