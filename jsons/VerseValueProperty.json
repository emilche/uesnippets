[
  {
    "label": "TProperty_Verse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TProperty_Verse"
  },
  {
    "label": "FVValueProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVValueProperty"
  },
  {
    "label": "FVRestValueProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVRestValueProperty"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__) #include \"HAL/Platform.h\" #include \"UObject/UnrealType.h\" #include \"UObject/VerseTypes.h\" template<> FORCEINLINE TCHAR const* TPropertyTypeFundamentals<Verse::TWriteBarrier<Verse::VValue>>::GetTypeName()"
  },
  {
    "label": "GetTypeName()",
    "kind": "Method",
    "detail": "Function (} template<> TCHAR const* TPropertyTypeFundamentals<Verse::VRestValue)",
    "insertText": "GetTypeName()"
  },
  {
    "label": "GetDefaultPropertyValue()",
    "kind": "Method",
    "detail": "Function (} template<> Verse::VRestValue TPropertyTypeFundamentals<Verse::VRestValue)",
    "insertText": "GetDefaultPropertyValue()"
  },
  {
    "label": "InitializePropertyValue()",
    "kind": "Method",
    "detail": "Function (} template<> Verse::VRestValue* TPropertyTypeFundamentals<Verse::VRestValue)",
    "insertText": "InitializePropertyValue(void* A)"
  },
  {
    "label": "TProperty_Verse()",
    "kind": "Method",
    "detail": "Function (} template<InTCppType> class TProperty_Verse : public TProperty<InTCppType,FProperty> { public : using Super = TProperty<InTCppType,FProperty> ; using TCppType = InTCppType ;)",
    "insertText": "TProperty_Verse(EInternal InInternal, FFieldClass* InClass) : Super(EC_InternalUseOnlyConstructor, InClass)"
  },
  {
    "label": "TProperty_Verse()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TProperty_Verse(FFieldVariant InOwner, const FName& InName, EObjectFlags InObjectFlags) : Super(InOwner, InName, InObjectFlags)"
  },
  {
    "label": "TProperty_Verse()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TProperty_Verse(FFieldVariant InOwner, const UECodeGen_Private::FVerseValuePropertyParams& Prop) : Super(InOwner, reinterpret_cast<const UECodeGen_Private::FPropertyParamsBaseWithOffset&>(Prop))"
  },
  {
    "label": "TProperty_Verse()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITORONLY_DATA)",
    "insertText": "TProperty_Verse(UField* InField) : Super(InField)"
  },
  {
    "label": "GetCPPMacroType()",
    "kind": "Method",
    "detail": "Function (} # endif FString)",
    "insertText": "GetCPPMacroType(FString& ExtendedTypeText)"
  },
  {
    "label": "Identical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Identical(const void* A, const void* B, uint32 PortFlags)"
  },
  {
    "label": "SerializeItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeItem(FStructuredArchive::FSlot Slot, void* Value, void const* Defaults)"
  },
  {
    "label": "ExportText_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportText_Internal(FString& ValueStr, const void* PropertyValueOrContainer, EPropertyPointerType PointerType, const void* DefaultValue, UObject* Parent, int32 PortFlags, UObject* ExportRootScope)"
  },
  {
    "label": "ImportText_Internal()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "ImportText_Internal(const TCHAR* Buffer, void* ContainerOrPropertyPtr, EPropertyPointerType PropertyPointerType, UObject* OwnerObject, int32 PortFlags, FOutputDevice* ErrorText)"
  },
  {
    "label": "ContainsObjectReference()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsObjectReference(TArray<const FStructProperty*>& EncounteredStructProps, EPropertyObjectReferenceType InReferenceType = EPropertyObjectReferenceType::Strong)"
  },
  {
    "label": "EmitReferenceInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitReferenceInfo(UE::GC::FSchemaBuilder& Schema, int32 BaseOffset, TArray<const FStructProperty*>& EncounteredStructProps, UE::GC::FPropertyStack& DebugPath)"
  },
  {
    "label": "HasIntrusiveUnsetOptionalState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasIntrusiveUnsetOptionalState()"
  },
  {
    "label": "FVValueProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVValueProperty(FFieldVariant InOwner, const UECodeGen_Private::FVerseValuePropertyParams& Prop)"
  },
  {
    "label": "DECLARE_FIELD_API()",
    "kind": "Method",
    "detail": "Function (} ; class FVRestValueProperty : public TProperty_Verse<Verse::VRestValue> {)",
    "insertText": "DECLARE_FIELD_API(FVRestValueProperty, TProperty_Verse<Verse::VRestValue>, CASTCLASS_FVRestValueProperty, COREUOBJECT_API) public: COREUOBJECT_API FVRestValueProperty(FFieldVariant InOwner, const FName& InName, EObjectFlags InObjectFlags)"
  },
  {
    "label": "FVRestValueProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVRestValueProperty(FFieldVariant InOwner, const UECodeGen_Private::FVerseValuePropertyParams& Prop)"
  }
]