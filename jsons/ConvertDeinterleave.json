[
  {
    "label": "FConvertDeinterleaveParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConvertDeinterleaveParams"
  },
  {
    "label": "IConvertDeinterleave",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IConvertDeinterleave"
  },
  {
    "label": "IConvertDeinterleave()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DSP / ChannelMap . h \" # include \" DSP / MultichannelBuffer . h \" # include \" Containers / ArrayView . h \" # include \" Templates / UniquePtr . h \" namespace Audio { struct FConvertDeinterleaveParams { int32 NumInputChannels = 0 ; int32 NumOutputChannels = 0 ; EChannelMapMonoUpmixMethod MonoUpmixMethod = EChannelMapMonoUpmixMethod::EqualPower ; } ; struct IConvertDeinterleave { ~)",
    "insertText": "IConvertDeinterleave()"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(TArrayView<const float> InSamples, FMultichannelBuffer& OutSamples)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<IConvertDeinterleave>)",
    "insertText": "Create(const FConvertDeinterleaveParams& InParams)"
  }
]