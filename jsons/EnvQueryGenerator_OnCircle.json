[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UEnvQueryGenerator_OnCircle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryGenerator_OnCircle"
  },
  {
    "label": "UEnvQueryContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryContext"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Templates / SubclassOf . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_2 # include \" AI / Navigation / NavigationTypes . h \" # endif # include \" EnvironmentQuery / EnvQueryTypes . h \" # include \" DataProviders / AIDataProvider . h \" # include \" EnvironmentQuery / Generators / EnvQueryGenerator_ProjectedPoints . h \" # include \" EnvQueryGenerator_OnCircle . generated . h \" class AActor ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (BySpaceBetween,ByNumberOfPoints } ;)",
    "insertText": "UCLASS(meta = (DisplayName = \"Points: Circle\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditDefaultsOnly, Category=Generator)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "GenerateItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateItems(FEnvQueryInstance& QueryInstance)"
  },
  {
    "label": "GetDescriptionTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDescriptionTitle()"
  },
  {
    "label": "GetDescriptionDetails()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDescriptionDetails()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "CalcDirection()",
    "kind": "Method",
    "detail": "Function (# endif protected : FVector)",
    "insertText": "CalcDirection(FEnvQueryInstance& QueryInstance)"
  },
  {
    "label": "GenerateItemsForCircle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateItemsForCircle(uint8* ContextRawData, UEnvQueryItemType* ContextItemType, const FVector& CenterLocation, const FVector& StartDirection, const TArray<AActor*>& IgnoredActors, int32 StepsCount, float AngleStep, FEnvQueryInstance& OutQueryInstance)"
  },
  {
    "label": "AddItemDataForCircle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddItemDataForCircle(uint8* ContextRawData, UEnvQueryItemType* ContextItemType, const TArray<FNavLocation>& Locations, FEnvQueryInstance& OutQueryInstance)"
  }
]