[
  {
    "label": "FGPUSortBuffers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUSortBuffers"
  },
  {
    "label": "FParticleSortBuffers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleSortBuffers"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGPUSortManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSortManager"
  },
  {
    "label": "FAllocationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocationInfo"
  },
  {
    "label": "FKeyGenInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyGenInfo"
  },
  {
    "label": "FCallbackInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCallbackInfo"
  },
  {
    "label": "FSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSettings"
  },
  {
    "label": "FValueBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FValueBuffer"
  },
  {
    "label": "FDynamicValueBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicValueBuffer"
  },
  {
    "label": "FSortBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortBatch"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "CopyUIntBufferToTargets()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Templates / RefCounting . h \" # include \" RHI . h \" # include \" RenderResource . h \" void)",
    "insertText": "CopyUIntBufferToTargets(FRHICommandList& RHICmdList, ERHIFeatureLevel::Type FeatureLevel, FRHIShaderResourceView* SourceSRV, FRHIUnorderedAccessView*const* TargetUAVs, int32* TargetSizes, int32 StartingOffset, int32 NumTargets)"
  },
  {
    "label": "SetBufferSize()",
    "kind": "Method",
    "detail": "Function (struct FGPUSortBuffers ; class FParticleSortBuffers : public FRenderResource { public : void)",
    "insertText": "SetBufferSize(int32 InBufferSize)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (BufferSize = InBufferSize ; } void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "GetKeyBufferUAV()",
    "kind": "Method",
    "detail": "Function (FRHIUnorderedAccessView*)",
    "insertText": "GetKeyBufferUAV(int32 BufferIndex)"
  },
  {
    "label": "GetSortedVertexBufferRHI()",
    "kind": "Method",
    "detail": "Function (FRHIBuffer*)",
    "insertText": "GetSortedVertexBufferRHI(int32 BufferIndex)"
  },
  {
    "label": "FKeyGenInfo()",
    "kind": "Method",
    "detail": "Function (class FGPUSortManager : public FRefCountedObject { public : struct FAllocationInfo { FShaderResourceViewRHIRef BufferSRV ; uint32 BufferOffset = INDEX_NONE ; int32 SortBatchId = INDEX_NONE ; int32 ElementIndex = INDEX_NONE ; } ; struct FKeyGenInfo {)",
    "insertText": "FKeyGenInfo(uint32 NumElements, bool bHighPrecisionKeys)"
  },
  {
    "label": "FValueBuffer()",
    "kind": "Method",
    "detail": "Function (uint32 ElementKeyMask ; uint32 ElementKeyShift ; uint32 SortKeyMask ; FUintVector4 SortKeyParams ; } ; private : struct FCallbackInfo { FGPUSortKeyGenDelegate Delegate ; EGPUSortFlags Flags = EGPUSortFlags::None ; FName Name ; } ; typedef TArray<FCallbackInfo> FCallbackArray ; struct FSettings { EGPUSortFlags AllowedFlags = EGPUSortFlags::None ; float BufferSlack = 2 . f ; int32 FrameCountBeforeShrinking = 1 0 0 ; int32 MinBufferSize = 8 1 9 2 ; } ; class FValueBuffer : public FVertexBuffer { public :)",
    "insertText": "FValueBuffer(FRHICommandListBase& RHICmdList, int32 InAllocatedCount, int32 InUsedCount, const FSettings& InSettings)"
  },
  {
    "label": "FValueBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FValueBuffer()"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (FShaderResourceViewRHIRef UInt32SRV ; FUnorderedAccessViewRHIRef UInt32UAV ; FShaderResourceViewRHIRef Int32SRV ; FUnorderedAccessViewRHIRef Int32UAV ; FShaderResourceViewRHIRef G16R16SRV ; FUnorderedAccessViewRHIRef G16R16UAV ; int32 AllocatedCount = 0 ; int32 UsedCount = 0 ; void)",
    "insertText": "Allocate(FAllocationInfo& OutInfo, int32 ValueCount, EGPUSortFlags Flags)"
  },
  {
    "label": "FDynamicValueBuffer()",
    "kind": "Method",
    "detail": "Function (} ; typedef TIndirectArray<FValueBuffer,TInlineAllocator<4>> FValueBufferArray ; struct FDynamicValueBuffer { ~)",
    "insertText": "FDynamicValueBuffer()"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (} FValueBufferArray ValueBuffers ; int32 NumFramesRequiringShrinking = 0 ; EGPUSortFlags LastSortBatchFlags = EGPUSortFlags::None ; int32 CurrentSortBatchId = INDEX_NONE ; void)",
    "insertText": "Allocate(FRHICommandListBase& RHICmdList, FAllocationInfo& OutInfo, const FSettings& InSettings, int32 ValueCount, EGPUSortFlags Flags)"
  },
  {
    "label": "SkrinkAndReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SkrinkAndReset(FRHICommandListBase& RHICmdList, const FSettings& InSettings)"
  },
  {
    "label": "GetAllocatedCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetAllocatedCount()"
  },
  {
    "label": "UpdateProcessingOrder()",
    "kind": "Method",
    "detail": "Function (} } ; typedef TIndirectArray<FDynamicValueBuffer,TInlineAllocator<4>> FDynamicValueBufferArray ; enum class ESortBatchProcessingOrder : uint32 { Undefined = 0,KeyGenAndSortAfterPreRender = 1,KeyGenAfterPreRenderAndSortAfterPostRenderOpaque = 2,KeyGenAndSortAfterPostRenderOpaque = 3,} ; struct FSortBatch { int32 Id = INDEX_NONE ; int32 NumElements = 0 ; EGPUSortFlags Flags = EGPUSortFlags::None ; FDynamicValueBuffer* DynamicValueBuffer = nullptr ; FParticleSortBuffers* SortBuffers = nullptr ; ESortBatchProcessingOrder ProcessingOrder = ESortBatchProcessingOrder::Undefined ; void)",
    "insertText": "UpdateProcessingOrder()"
  },
  {
    "label": "GenerateKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateKeys(FRHICommandListImmediate& RHICmdList, const FCallbackArray& InCallbacks, EGPUSortFlags KeyGenLocation)"
  },
  {
    "label": "SortAndResolve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortAndResolve(FRHICommandListImmediate& RHICmdList, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "GetAllocatedValueCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetAllocatedValueCount()"
  },
  {
    "label": "FGPUSortManager()",
    "kind": "Method",
    "detail": "Function (} } ; typedef TArray<FSortBatch,TInlineAllocator<4>> FSortBatchArray ; public :)",
    "insertText": "FGPUSortManager(ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "FGPUSortManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FGPUSortManager()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Register(const FGPUSortKeyGenDelegate& CallbackDelegate, EGPUSortFlags UsedFlags, const FName& InName)"
  },
  {
    "label": "AddTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddTask(FRHICommandListBase& RHICmdList, FAllocationInfo& OutInfo, int32 ValueCount, EGPUSortFlags TaskFlags)"
  },
  {
    "label": "OnPreRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreRender(class FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "OnPostRenderOpaque()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostRenderOpaque(class FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(FGPUSortManager, FPostPreRenderEvent, FRHICommandListImmediate&)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (FPostPreRenderEvent PostPreRenderEvent ;)",
    "insertText": "DECLARE_EVENT_OneParam(FGPUSortManager, FPostPostRenderEvent, FRHICommandListImmediate&)"
  },
  {
    "label": "HasEither()",
    "kind": "Method",
    "detail": "Function (FPostPreRenderEvent PostPostRenderEvent ; private : bool)",
    "insertText": "HasEither(EGPUSortFlags Flags, EGPUSortFlags A, EGPUSortFlags B)"
  },
  {
    "label": "GetBatchFlags()",
    "kind": "Method",
    "detail": "Function (EGPUSortFlags)",
    "insertText": "GetBatchFlags(EGPUSortFlags TaskFlags)"
  },
  {
    "label": "CombineBatchFlags()",
    "kind": "Method",
    "detail": "Function (EGPUSortFlags)",
    "insertText": "CombineBatchFlags(EGPUSortFlags BatchFlags, EGPUSortFlags TaskFlags)"
  },
  {
    "label": "TestBatchFlags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestBatchFlags(EGPUSortFlags BatchFlags, EGPUSortFlags TaskFlags)"
  },
  {
    "label": "GetPrecisionString()",
    "kind": "Method",
    "detail": "Function (auto)",
    "insertText": "GetPrecisionString(EGPUSortFlags BatchFlags) -> TCHAR const(*)"
  },
  {
    "label": "GetDynamicValueBufferFromPool()",
    "kind": "Method",
    "detail": "Function (FDynamicValueBuffer*)",
    "insertText": "GetDynamicValueBufferFromPool(EGPUSortFlags TaskFlags, int32 SortBatchId)"
  },
  {
    "label": "FinalizeSortBatches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeSortBatches()"
  },
  {
    "label": "UpdateSortBuffersPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSortBuffersPool(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ResetDynamicValuesBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDynamicValuesBuffers(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseSortBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSortBuffers()"
  }
]