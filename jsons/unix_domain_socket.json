[
  {
    "label": "Pickle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Pickle"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "CreateSocketPair()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT)",
    "insertText": "CreateSocketPair(ScopedFD* one, ScopedFD* two)"
  },
  {
    "label": "EnableReceiveProcessId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnableReceiveProcessId(int fd)"
  },
  {
    "label": "SendMsg()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendMsg(int fd,\n                      const void* msg,\n                      size_t length,\n                      const std::vector<int>& fds)"
  },
  {
    "label": "RecvMsg()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "RecvMsg(int fd,\n                         void* msg,\n                         size_t length,\n                         std::vector<ScopedFD>* fds)"
  },
  {
    "label": "RecvMsgWithPid()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "RecvMsgWithPid(int fd,\n                                void* msg,\n                                size_t length,\n                                std::vector<ScopedFD>* fds,\n                                ProcessId* pid)"
  },
  {
    "label": "SendRecvMsg()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "SendRecvMsg(int fd,\n                             uint8_t* reply,\n                             unsigned reply_len,\n                             int* result_fd,\n                             const Pickle& request)"
  },
  {
    "label": "SendRecvMsgWithFlags()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "SendRecvMsgWithFlags(int fd,\n                                      uint8_t* reply,\n                                      unsigned reply_len,\n                                      int recvmsg_flags,\n                                      int* result_fd,\n                                      const Pickle& request)"
  },
  {
    "label": "RecvMsgWithFlags()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "RecvMsgWithFlags(int fd,\n                                  void* msg,\n                                  size_t length,\n                                  int flags,\n                                  std::vector<ScopedFD>* fds,\n                                  ProcessId* pid)"
  }
]