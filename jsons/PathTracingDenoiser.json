[
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FRDGTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGTexture"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "IPathTracingDenoiser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPathTracingDenoiser"
  },
  {
    "label": "FInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputs"
  },
  {
    "label": "IPathTracingSpatialTemporalDenoiser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPathTracingSpatialTemporalDenoiser"
  },
  {
    "label": "IHistory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHistory"
  },
  {
    "label": "FMotionVectorInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMotionVectorInputs"
  },
  {
    "label": "FOutputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOutputs"
  },
  {
    "label": "IPathTracingDenoiser()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MultiGPU . h \" # include \" Templates / RefCounting . h \" # include \" Templates / UniquePtr . h \" class FSceneView ; class FRDGBuilder ; class FRDGTexture ; class FRHICommandListImmediate ; using FRDGTextureRef = FRDGTexture* ; namespace UE::Renderer::Private { class IPathTracingDenoiser { public : struct FInputs { FRDGTextureRef ColorTex ; FRDGTextureRef AlbedoTex ; FRDGTextureRef NormalTex ; FRDGTextureRef OutputTex ; } ; ~)",
    "insertText": "IPathTracingDenoiser()"
  },
  {
    "label": "NeedTextureCreateExtraFlags()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "NeedTextureCreateExtraFlags()"
  },
  {
    "label": "IHistory()",
    "kind": "Method",
    "detail": "Function (} ; class IPathTracingSpatialTemporalDenoiser { public : class IHistory : public FRefCountBase { public : ~)",
    "insertText": "IHistory()"
  },
  {
    "label": "GetDebugName()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "GetDebugName()"
  },
  {
    "label": "IPathTracingSpatialTemporalDenoiser()",
    "kind": "Method",
    "detail": "Function (} ; struct FInputs { FRDGTextureRef ColorTex ; FRDGTextureRef AlbedoTex ; FRDGTextureRef NormalTex ; FRDGTextureRef DepthTex ; FRDGTextureRef VarianceTex ; FRDGTextureRef OutputTex ; FRDGTextureRef FlowTex ; FRDGTextureRef PreviousOutputTex ; int DenoisingFrameId = - 1 ; bool bForceSpatialDenoiserOnly = false ; TRefCountPtr<IHistory> PrevHistory ; } ; struct FMotionVectorInputs { FRDGTextureRef InputFrameTex ; FRDGTextureRef ReferenceFrameTex ; FRDGTextureRef OutputTex ; float PreExposure = 1 . 0 f ; } ; struct FOutputs { TRefCountPtr<IHistory> NewHistory ; } ; ~)",
    "insertText": "IPathTracingSpatialTemporalDenoiser()"
  },
  {
    "label": "AddMotionVectorPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMotionVectorPass(FRDGBuilder& GraphBuilder, const FSceneView& View, const FMotionVectorInputs& Inputs)"
  },
  {
    "label": "RegisterSpatialDenoiser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterSpatialDenoiser(TUniquePtr<UE::Renderer::Private::IPathTracingDenoiser> PathTracingDenoiser, FString Name)"
  },
  {
    "label": "RegisterSpatialTemporalDenoiser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterSpatialTemporalDenoiser(TUniquePtr<UE::Renderer::Private::IPathTracingSpatialTemporalDenoiser> PathTracingDenoiser, FString Name)"
  },
  {
    "label": "UnregisterDenoiser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterDenoiser(FString Name)"
  },
  {
    "label": "HasTemporalDenoiser()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasTemporalDenoiser()"
  }
]