[
  {
    "label": "FbxStringListItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxStringListItem"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "FbxStringListT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxStringListT"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FbxStringListItem()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_BASE_STRING_LIST_H_ # define _FBXSDK_CORE_BASE_STRING_LIST_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / base / fbxarray . h> # include<fbxsdk / core / base / fbxstring . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxStringListItem { public :)",
    "insertText": "FbxStringListItem()"
  },
  {
    "label": "FbxStringListItem()",
    "kind": "Method",
    "detail": "Function (mReference = 0 ; })",
    "insertText": "FbxStringListItem(const char* pString, FbxHandle pRef=0)"
  },
  {
    "label": "FbxCompareStringListSort()",
    "kind": "Method",
    "detail": "Function (mString = pString ; mReference = pRef ; } FbxString mString ; FbxHandle mReference ; } ; int)",
    "insertText": "FbxCompareStringListSort(const void* E1, const void* E2)"
  },
  {
    "label": "FbxCompareStringListFindEqual()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "FbxCompareStringListFindEqual(const void* E1, const void* E2)"
  },
  {
    "label": "FbxCompareCaseSensitiveStringList()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "FbxCompareCaseSensitiveStringList(const void *E1,const void *E2)"
  },
  {
    "label": "AddItem()",
    "kind": "Method",
    "detail": "Function (} template<class Type> class FbxStringListT { protected : FbxArray<Type*> mList ; public : int)",
    "insertText": "AddItem(Type* pItem)"
  },
  {
    "label": "InsertItemAt()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "InsertItemAt(int pIndex, Type* pItem)"
  },
  {
    "label": "GetItemAt()",
    "kind": "Method",
    "detail": "Function (} Type*)",
    "insertText": "GetItemAt(int pIndex)"
  },
  {
    "label": "FbxStringListT()",
    "kind": "Method",
    "detail": "Function (} public :)",
    "insertText": "FbxStringListT()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "RemoveLast()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveLast()"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAt(mList.GetCount()-1)"
  },
  {
    "label": "GetCount()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetCount()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FbxString&)",
    "insertText": "operator(int pIndex)"
  },
  {
    "label": "GetStringAt()",
    "kind": "Method",
    "detail": "Function (mList [ pIndex ] -> mReference = pRef ; } char*)",
    "insertText": "GetStringAt(int pIndex)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (mList [ pIndex ] -> mString = pString ; return true ; } else return false ; } int)",
    "insertText": "Find(Type& pItem)"
  },
  {
    "label": "FindIndex()",
    "kind": "Method",
    "detail": "Function (int lIndex =)",
    "insertText": "FindIndex(pString)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (int lIndex =)",
    "insertText": "Find(pItem)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAt(lIndex)"
  },
  {
    "label": "qsort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "qsort(&(mList.GetArray()[0]),mList.GetCount(),sizeof(FbxStringListItem*),FbxCompareStringListSort)"
  },
  {
    "label": "FindEqual()",
    "kind": "Method",
    "detail": "Function (} void*)",
    "insertText": "FindEqual(const char* pString)"
  },
  {
    "label": "Key()",
    "kind": "Method",
    "detail": "Function (FbxStringListItem)",
    "insertText": "Key(pString)"
  },
  {
    "label": "FindCaseSensitive()",
    "kind": "Method",
    "detail": "Function (} else { return NULL ; } } void*)",
    "insertText": "FindCaseSensitive(const char* pString)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} else { return NULL ; } } int)",
    "insertText": "Add(const char* pString, FbxHandle pItem=0)"
  },
  {
    "label": "InsertAt()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "InsertAt(int pIndex, const char* pString, FbxHandle pItem=0)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveAt(int pIndex)"
  },
  {
    "label": "FbxDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxDelete(mList.RemoveAt(pIndex))"
  },
  {
    "label": "FbxArrayDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxArrayDelete(mList)"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetText(FbxString& pText)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (int lCount ;)",
    "insertText": "for(lCount=0; lCount<mList.GetCount(); lCount++)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (pText + = mList [ lCount ] -> mString ;)",
    "insertText": "if(lCount<mList.GetCount()-1)"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (pText + = \" ~ \" ; } } } int)",
    "insertText": "SetText(const char* pList)"
  },
  {
    "label": "Buffer()",
    "kind": "Method",
    "detail": "Function (lName .)",
    "insertText": "Buffer()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (lLastIndex =)",
    "insertText": "Add(lName.Buffer()+lOldPos)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (lOldPos = lPos + 1 ; } })",
    "insertText": "if(lOldPos != lPos)"
  },
  {
    "label": "FbxStringList()",
    "kind": "Method",
    "detail": "Function (} return lLastIndex ; } } ; class FBXSDK_DLL FbxStringList : public FbxStringListT<FbxStringListItem> { public :)",
    "insertText": "FbxStringList()"
  },
  {
    "label": "FbxStringList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxStringList(const FbxStringList& pOriginal)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFrom(const FbxStringList* pOriginal)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxStringList&)",
    "insertText": "operator(const FbxStringList& pOriginal)"
  }
]