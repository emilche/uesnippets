[
  {
    "label": "FChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChannel"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FWaitingScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWaitingScope"
  },
  {
    "label": "FTaskTimingEventScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTaskTimingEventScope"
  },
  {
    "label": "GenerateTaskId()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "GenerateTaskId()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Init()"
  },
  {
    "label": "Created()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Created(FId TaskId, uint64 TaskSize)"
  },
  {
    "label": "Launched()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Launched(FId TaskId, const TCHAR* DebugName, bool bTracked, ENamedThreads::Type ThreadToExecuteOn, uint64 TaskSize)"
  },
  {
    "label": "Scheduled()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Scheduled(FId TaskId)"
  },
  {
    "label": "SubsequentAdded()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "SubsequentAdded(FId TaskId, FId SubsequentId)"
  },
  {
    "label": "Started()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Started(FId TaskId)"
  },
  {
    "label": "Finished()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Finished(FId TaskId)"
  },
  {
    "label": "Completed()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Completed(FId TaskId)"
  },
  {
    "label": "Destroyed()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Destroyed(FId TaskId)"
  },
  {
    "label": "FWaitingScope()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FWaitingScope(const TArray<FId>& Tasks)"
  },
  {
    "label": "FWaitingScope()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FWaitingScope(FId TaskId)"
  },
  {
    "label": "FTaskTimingEventScope()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FTaskTimingEventScope(TaskTrace::FId InTaskId)"
  }
]