[
  {
    "label": "FWasapiCaptureRunnable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWasapiCaptureRunnable"
  },
  {
    "label": "FWasapiCaptureThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWasapiCaptureThread"
  },
  {
    "label": "FWasapiCaptureRunnable()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Runnable . h \" # include \" HAL / RunnableThread . h \" # include \" WasapiInputStream . h \" namespace Audio { class FWasapiCaptureRunnable : public FRunnable { public :)",
    "insertText": "FWasapiCaptureRunnable()"
  },
  {
    "label": "FWasapiCaptureRunnable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWasapiCaptureRunnable(FWasapiCaptureRunnable&& InOther)"
  },
  {
    "label": "FWasapiCaptureRunnable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWasapiCaptureRunnable(const FWasapiCaptureRunnable& InOther)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWasapiCaptureRunnable&)",
    "insertText": "operator(FWasapiCaptureRunnable&& InOther)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWasapiCaptureRunnable&)",
    "insertText": "operator(const FWasapiCaptureRunnable& InOther)"
  },
  {
    "label": "FWasapiCaptureRunnable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWasapiCaptureRunnable(TSharedPtr<FWasapiInputStream> InStream)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Run()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "FWasapiCaptureThread()",
    "kind": "Method",
    "detail": "Function (private : std::atomic<bool> bIsRunning ; uint32 InputStreamTimeoutsDetected = 0 ; uint32 InputStreamDeviceErrorsDetected = 0 ; TSharedPtr<FWasapiInputStream> InputStream ; } ; class FWasapiCaptureThread { public :)",
    "insertText": "FWasapiCaptureThread()"
  },
  {
    "label": "FWasapiCaptureThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWasapiCaptureThread(TSharedPtr<FWasapiInputStream> InStream)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Start()"
  },
  {
    "label": "Abort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Abort()"
  }
]