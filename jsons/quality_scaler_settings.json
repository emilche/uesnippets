[
  {
    "label": "QualityScalerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QualityScalerSettings"
  },
  {
    "label": "ParseFromFieldTrials()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_EXPERIMENTS_QUALITY_SCALER_SETTINGS_H_ # define RTC_BASE_EXPERIMENTS_QUALITY_SCALER_SETTINGS_H_ # include \" absl / types / optional . h \" # include \" api / field_trials_view . h \" # include \" rtc_base / experiments / field_trial_parser . h \" namespace webrtc { class QualityScalerSettings final { public : QualityScalerSettings)",
    "insertText": "ParseFromFieldTrials()"
  },
  {
    "label": "SamplingPeriodMs()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "SamplingPeriodMs()"
  },
  {
    "label": "AverageQpWindow()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "AverageQpWindow()"
  },
  {
    "label": "MinFrames()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "MinFrames()"
  },
  {
    "label": "InitialScaleFactor()",
    "kind": "Method",
    "detail": "Function (absl::optional<double>)",
    "insertText": "InitialScaleFactor()"
  },
  {
    "label": "ScaleFactor()",
    "kind": "Method",
    "detail": "Function (absl::optional<double>)",
    "insertText": "ScaleFactor()"
  },
  {
    "label": "InitialBitrateIntervalMs()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "InitialBitrateIntervalMs()"
  },
  {
    "label": "InitialBitrateFactor()",
    "kind": "Method",
    "detail": "Function (absl::optional<double>)",
    "insertText": "InitialBitrateFactor()"
  },
  {
    "label": "QualityScalerSettings()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "QualityScalerSettings(const FieldTrialsView* const key_value_config)"
  }
]