[
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "SSessionConsoleCommandBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSessionConsoleCommandBar"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class SButton ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSessionConsoleCommandSubmitted, const FString&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSessionConsoleCommandBar)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnSessionConsoleCommandSubmitted, OnCommandSubmitted) SLATE_EVENT(FOnSessionConsoleCommandSubmitted, OnPromoteToShortcutClicked) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SetNumSelectedInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumSelectedInstances(int Count)"
  },
  {
    "label": "SubmitCommand()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SubmitCommand(const FString& Command)"
  },
  {
    "label": "HandleInputTextChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleInputTextChanged(const FText& InText)"
  },
  {
    "label": "HandleInputTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleInputTextCommitted(const FText& InText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "HandleInputTextShowingHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleInputTextShowingHistory(TArray<FString>& OutHistory)"
  },
  {
    "label": "HandleInputTextShowingSuggestions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleInputTextShowingSuggestions(const FString& Text, TArray<FString>& OutSuggestions)"
  },
  {
    "label": "HandlePromoteToShortcutButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandlePromoteToShortcutButtonClicked()"
  },
  {
    "label": "HandleSendButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleSendButtonClicked()"
  }
]