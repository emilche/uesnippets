[
  {
    "label": "Resampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Resampler"
  },
  {
    "label": "ResamplerMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ResamplerMode"
  },
  {
    "label": "Resampler()",
    "kind": "Method",
    "detail": "Function (# ifndef COMMON_AUDIO_RESAMPLER_INCLUDE_RESAMPLER_H_ # define COMMON_AUDIO_RESAMPLER_INCLUDE_RESAMPLER_H_ # include<stddef . h> # include<stdint . h> namespace webrtc { class Resampler { public :)",
    "insertText": "Resampler()"
  },
  {
    "label": "Resampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resampler(int inFreq, int outFreq, size_t num_channels)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Reset(int inFreq, int outFreq, size_t num_channels)"
  },
  {
    "label": "ResetIfNeeded()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ResetIfNeeded(int inFreq, int outFreq, size_t num_channels)"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Push(const int16_t* samplesIn, size_t lengthIn, int16_t* samplesOut, size_t maxLen, size_t& outLen)"
  },
  {
    "label": "ComputeResamplerMode()",
    "kind": "Method",
    "detail": "Function (private : enum ResamplerMode { kResamplerMode1To1,kResamplerMode1To2,kResamplerMode1To3,kResamplerMode1To4,kResamplerMode1To6,kResamplerMode1To12,kResamplerMode2To3,kResamplerMode2To11,kResamplerMode4To11,kResamplerMode8To11,kResamplerMode11To16,kResamplerMode11To32,kResamplerMode2To1,kResamplerMode3To1,kResamplerMode4To1,kResamplerMode6To1,kResamplerMode12To1,kResamplerMode3To2,kResamplerMode11To2,kResamplerMode11To4,kResamplerMode11To8 } ; int)",
    "insertText": "ComputeResamplerMode(int in_freq_hz, int out_freq_hz, ResamplerMode* mode)"
  }
]