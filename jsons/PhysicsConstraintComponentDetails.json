[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailCategoryBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCategoryBuilder"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IPropertyTypeCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeCustomization"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "UPhysicsConstraintComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsConstraintComponent"
  },
  {
    "label": "UPhysicsConstraintTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsConstraintTemplate"
  },
  {
    "label": "FConstraintInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintInstance"
  },
  {
    "label": "TProxyProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TProxyProperty"
  },
  {
    "label": "TProxyValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TProxyValue"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FConstraintTransformCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstraintTransformCustomization"
  },
  {
    "label": "FPhysicsConstraintComponentDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsConstraintComponentDetails"
  },
  {
    "label": "EPropertyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EPropertyType"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FConstraintTransformCustomization()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / ChaosEngineInterface . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" Customizations / MathStructCustomizations . h \" # include \" IDetailCustomization . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Math / Rotator . h \" # include \" Math / Transform . h \" # include \" Math / UnrealMathSSE . h \" # include \" Math / Vector . h \" # include \" Misc / Optional . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class FDetailWidgetRow ; class IDetailCategoryBuilder ; class IDetailLayoutBuilder ; class IPropertyHandle ; class IPropertyTypeCustomization ; class SWidget ; class UObject ; class UPhysicsAsset ; class UPhysicsConstraintComponent ; class UPhysicsConstraintTemplate ; struct FConstraintInstance ; template<ObjectType,PropertyType> class TProxyProperty ; template<ObjectType> class TProxyValue ; enum class ECheckBoxState : uint8 ; enum class EConstraintTransformComponentFlags : uint8 ; class FConstraintTransformCustomization : public FMathStructCustomization { public :)",
    "insertText": "FConstraintTransformCustomization()"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "MakeRotationRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeRotationRow(TSharedRef<IPropertyHandle>& InPriAxisPropertyHandle, TSharedRef<IPropertyHandle>& InSecAxisPropertyHandle, FDetailWidgetRow& Row, TSharedRef<SWidget> EditSpaceToggleButtonWidget)"
  },
  {
    "label": "MakePositionRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakePositionRow(TSharedRef<IPropertyHandle>& InPositionPropertyHandle, FDetailWidgetRow& Row, TSharedRef<SWidget> EditSpaceToggleButtonWidget)"
  },
  {
    "label": "MakeNumericProxyWidget()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> TSharedRef<SWidget>)",
    "insertText": "MakeNumericProxyWidget(TSharedRef<IPropertyHandle>& PriAxisPropertyHandle, TSharedRef<IPropertyHandle>& SecAxisPropertyHandle, TSharedRef< TProxyProperty<ProxyType, NumericType> >& ProxyValue, const FText& Label, bool bRotationInDegrees, const FLinearColor& LabelBackgroundColor)"
  },
  {
    "label": "MakeNumericProxyWidget()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> TSharedRef<SWidget>)",
    "insertText": "MakeNumericProxyWidget(TSharedRef<IPropertyHandle>& PositionPropertyHandle, TSharedRef< TProxyProperty<ProxyType, NumericType> >& ProxyValue, const FText& Label, const FLinearColor& LabelBackgroundColor)"
  },
  {
    "label": "OnCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopy(TWeakPtr<IPropertyHandle> PositionPropertyHandlePtr, TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr)"
  },
  {
    "label": "OnCopyPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyPosition(TWeakPtr<IPropertyHandle> PositionPropertyHandlePtr)"
  },
  {
    "label": "OnCopyRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyRotation(TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr)"
  },
  {
    "label": "OnPaste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPaste(TWeakPtr<IPropertyHandle> PositionPropertyHandlePtr, TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr)"
  },
  {
    "label": "OnPastePosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPastePosition(TWeakPtr<IPropertyHandle> PositionPropertyHandlePtr)"
  },
  {
    "label": "OnPasteRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteRotation(TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr)"
  },
  {
    "label": "OnPasteFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteFromText(const FString& InTag, const FString& InText, const TOptional<FGuid>& InOperationId, TWeakPtr<IPropertyHandle> PositionPropertyHandlePtr, TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr)"
  },
  {
    "label": "IsRotationValueEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRotationValueEnabled(TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr)"
  },
  {
    "label": "OnGetRotationValue()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> TOptional<NumericType>)",
    "insertText": "OnGetRotationValue(TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr, TSharedRef< TProxyProperty<ProxyType, NumericType> > ProxyValue)"
  },
  {
    "label": "OnRotationValueCommitted()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> void)",
    "insertText": "OnRotationValueCommitted(NumericType NewValue, ETextCommit::Type CommitType, TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr, TSharedRef< TProxyProperty<ProxyType, NumericType> > ProxyValue)"
  },
  {
    "label": "OnRotationValueChanged()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> void)",
    "insertText": "OnRotationValueChanged(NumericType NewValue, TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr, TSharedRef< TProxyProperty<ProxyType, NumericType> > ProxyValue)"
  },
  {
    "label": "IsPositionValueEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPositionValueEnabled(TWeakPtr<IPropertyHandle> PositionWeakHandlePtr)"
  },
  {
    "label": "OnGetPositionValue()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> TOptional<NumericType>)",
    "insertText": "OnGetPositionValue(TWeakPtr<IPropertyHandle> PositionWeakHandlePtr, TSharedRef< TProxyProperty<ProxyType, NumericType> > ProxyValue)"
  },
  {
    "label": "OnPositionValueCommitted()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> void)",
    "insertText": "OnPositionValueCommitted(NumericType NewValue, ETextCommit::Type CommitType, TWeakPtr<IPropertyHandle> PositionWeakHandlePtr, TSharedRef< TProxyProperty<ProxyType, NumericType> > ProxyValue)"
  },
  {
    "label": "OnPositionValueChanged()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> void)",
    "insertText": "OnPositionValueChanged(NumericType NewValue, TWeakPtr<IPropertyHandle> PositionWeakHandlePtr, TSharedRef< TProxyProperty<ProxyType, NumericType> > ProxyValue)"
  },
  {
    "label": "SetFrameLabelText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameLabelText(const FText InText)"
  },
  {
    "label": "GetFrameLabelText()",
    "kind": "Method",
    "detail": "Function (FText&)",
    "insertText": "GetFrameLabelText()"
  },
  {
    "label": "GetPositionAsFormattedString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPositionAsFormattedString(FString& OutString)"
  },
  {
    "label": "GetRotationAsFormattedString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRotationAsFormattedString(FString& OutString)"
  },
  {
    "label": "GetValueAsFormattedString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetValueAsFormattedString(FString& OutString)"
  },
  {
    "label": "SetPositionFromFormattedString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPositionFromFormattedString(const FString& InString)"
  },
  {
    "label": "SetRotationFromFormattedString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRotationFromFormattedString(const FString& InString)"
  },
  {
    "label": "SetValueFromFormattedString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetValueFromFormattedString(const FString& InString)"
  },
  {
    "label": "CacheValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CacheValues(TWeakPtr<IPropertyHandle> PositionPropertyHandlePtr)"
  },
  {
    "label": "CacheValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CacheValues(TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr)"
  },
  {
    "label": "FlushValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FlushValues(TWeakPtr<IPropertyHandle> PositionPropertyHandlePtr)"
  },
  {
    "label": "FlushValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FlushValues(TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr)"
  },
  {
    "label": "GetDefaultTransform()",
    "kind": "Method",
    "detail": "Function (const FTransform&)",
    "insertText": "GetDefaultTransform()"
  },
  {
    "label": "SetPositionDisplayRelativeToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPositionDisplayRelativeToDefault(const bool bValue)"
  },
  {
    "label": "SetRotationDisplayRelativeToDefault()",
    "kind": "Method",
    "detail": "Function (bPositionDisplayRelativeToDefault = bValue ; } void)",
    "insertText": "SetRotationDisplayRelativeToDefault(const bool bValue)"
  },
  {
    "label": "OrthonormalVectorPairToDisplayedRotator()",
    "kind": "Method",
    "detail": "Function (bRotationDisplayRelativeToDefault = bValue ; } protected : void)",
    "insertText": "OrthonormalVectorPairToDisplayedRotator(const FVector& PriAxis, const FVector& SecAxis, FRotator& OutRotator)"
  },
  {
    "label": "DisplayedRotatorToOrthonormalVectorPair()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayedRotatorToOrthonormalVectorPair(const FRotator& InRotator, FVector& OutPriAxis, FVector& OutSecAxis)"
  },
  {
    "label": "OnPastePositionFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPastePositionFromText(const FString& InTag, const FString& InText, const TOptional<FGuid>& InOperationId, TWeakPtr<IPropertyHandle> PositionPropertyHandlePtr)"
  },
  {
    "label": "PastePositionFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PastePositionFromText(const FString& InTag, const FString& InText, TWeakPtr<IPropertyHandle> PositionPropertyHandlePtr)"
  },
  {
    "label": "OnPasteRotationFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteRotationFromText(const FString& InTag, const FString& InText, const TOptional<FGuid>& InOperationId, TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr)"
  },
  {
    "label": "PasteRotationFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteRotationFromText(const FString& InTag, const FString& InText, TWeakPtr<IPropertyHandle> PriAxisPropertyHandlePtr, TWeakPtr<IPropertyHandle> SecAxisPropertyHandlePtr)"
  },
  {
    "label": "FPhysicsConstraintComponentDetails()",
    "kind": "Method",
    "detail": "Function (TSharedRef<TProxyValue<FRotator>> CachedRotation ; TSharedRef<TProxyProperty<FRotator,FRotator::FReal>> CachedRotationYaw ; TSharedRef<TProxyProperty<FRotator,FRotator::FReal>> CachedRotationPitch ; TSharedRef<TProxyProperty<FRotator,FRotator::FReal>> CachedRotationRoll ; TSharedRef<TProxyValue<FVector>> CachedPosition ; TSharedRef<TProxyProperty<FVector,FRotator::FReal>> CachedPositionX ; TSharedRef<TProxyProperty<FVector,FRotator::FReal>> CachedPositionY ; TSharedRef<TProxyProperty<FVector,FRotator::FReal>> CachedPositionZ ; FTransform DefaultTransform ; FTransform InverseDefaultTransform ; bool bPositionDisplayRelativeToDefault ; bool bRotationDisplayRelativeToDefault ; FText FrameLabelText ; } ; class FPhysicsConstraintComponentDetails : public IDetailCustomization { public :)",
    "insertText": "FPhysicsConstraintComponentDetails()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "IsPropertyEnabled()",
    "kind": "Method",
    "detail": "Function (private : struct EPropertyType { enum Type { LinearXPositionDrive,LinearYPositionDrive,LinearZPositionDrive,LinearPositionDrive,LinearXVelocityDrive,LinearYVelocityDrive,LinearZVelocityDrive,LinearVelocityDrive,LinearDrive,AngularSwingLimit,AngularSwing1Limit,AngularSwing2Limit,AngularTwistLimit,AngularAnyLimit,} ; } ; bool)",
    "insertText": "IsPropertyEnabled(EPropertyType::Type Type)"
  },
  {
    "label": "IsLimitRadioChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsLimitRadioChecked(TSharedPtr<IPropertyHandle> Property, uint8 Value)"
  },
  {
    "label": "OnLimitRadioChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLimitRadioChanged(ECheckBoxState CheckType, TSharedPtr<IPropertyHandle> Property, uint8 Value)"
  },
  {
    "label": "AddConstraintProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraintProperties(IDetailLayoutBuilder& DetailBuilder, TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle, TArray<TWeakObjectPtr<UObject>>& Objects)"
  },
  {
    "label": "AddConstraintFrameTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraintFrameTransform(const EConstraintFrame::Type ConstraintFrameType, IDetailCategoryBuilder& ConstraintCat, TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle)"
  },
  {
    "label": "AddConstraintBehaviorProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraintBehaviorProperties(IDetailLayoutBuilder& DetailBuilder, TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle, TSharedPtr<IPropertyHandle> ProfileInstance)"
  },
  {
    "label": "AddLinearLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLinearLimits(IDetailLayoutBuilder& DetailBuilder, TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle, TSharedPtr<IPropertyHandle> ProfileInstance)"
  },
  {
    "label": "AddAngularLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAngularLimits(IDetailLayoutBuilder& DetailBuilder, TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle, TSharedPtr<IPropertyHandle> ProfileInstance)"
  },
  {
    "label": "AddLinearDrive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLinearDrive(IDetailLayoutBuilder& DetailBuilder, TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle, TSharedPtr<IPropertyHandle> ProfileInstance)"
  },
  {
    "label": "AddAngularDrive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAngularDrive(IDetailLayoutBuilder& DetailBuilder, TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle, TSharedPtr<IPropertyHandle> ProfileInstance)"
  },
  {
    "label": "OnCopyConstraintTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyConstraintTransform(TSharedPtr<IPropertyHandle> PositionPropertyHandle, TSharedPtr<IPropertyHandle> PriAxisPropertyHandle, TSharedPtr<IPropertyHandle> SecAxisPropertyHandle, TSharedPtr<FConstraintTransformCustomization> RotationProxy)"
  },
  {
    "label": "OnPasteConstraintTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteConstraintTransform(TSharedPtr<IPropertyHandle> PositionPropertyHandle, TSharedPtr<IPropertyHandle> PriAxisPropertyHandle, TSharedPtr<IPropertyHandle> SecAxisPropertyHandle, TSharedPtr<FConstraintTransformCustomization> RotationProxy)"
  },
  {
    "label": "IsSnapConstraintTransformComponentVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSnapConstraintTransformComponentVisible(TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle, const EConstraintTransformComponentFlags SnapFlags)"
  },
  {
    "label": "ToggleDisplayConstraintTransformComponentRelativeToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleDisplayConstraintTransformComponentRelativeToDefault(TSharedPtr<IPropertyHandle> ConstraintInstance, const EConstraintTransformComponentFlags ComponentFlags)"
  },
  {
    "label": "IsDisplayingConstraintTransformComponentRelativeToDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDisplayingConstraintTransformComponentRelativeToDefault(const EConstraintTransformComponentFlags ComponentFlags)"
  },
  {
    "label": "IsConstraintTransformComponentEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConstraintTransformComponentEnabled(const EConstraintTransformComponentFlags ComponentFlags)"
  },
  {
    "label": "GetConstraintTransformColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetConstraintTransformColorAndOpacity(const EConstraintTransformComponentFlags ComponentFlags)"
  },
  {
    "label": "OnPasteConstraintTransformFromText()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnPasteConstraintTransformFromText(const FString& InTag, const FString& InText, const TOptional<FGuid>& InOperationId, TSharedPtr<IPropertyHandle> PositionPropertyHandle, TSharedPtr<IPropertyHandle> PriAxisPropertyHandle, TSharedPtr<IPropertyHandle> SecAxisPropertyHandle, TSharedPtr<FConstraintTransformCustomization> TransformProxy)"
  },
  {
    "label": "PasteConstraintTransformFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteConstraintTransformFromText(const FString& InTag, const FString& InText, TSharedPtr<IPropertyHandle> PositionPropertyHandle, TSharedPtr<IPropertyHandle> PriAxisPropertyHandle, TSharedPtr<IPropertyHandle> SecAxisPropertyHandle, TSharedPtr<FConstraintTransformCustomization> TransformProxy)"
  },
  {
    "label": "MakeEditSpaceToggleButtonWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeEditSpaceToggleButtonWidget(TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle, const EConstraintTransformComponentFlags ComponentFlags)"
  },
  {
    "label": "SnapConstraintTransformComponentsToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapConstraintTransformComponentsToDefault(TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle, const EConstraintTransformComponentFlags SnapFlags)"
  },
  {
    "label": "UpdateTransformProxyDisplayRelativeToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTransformProxyDisplayRelativeToDefault(TSharedPtr<IPropertyHandle> ConstraintInstancePropertyHandle)"
  },
  {
    "label": "GetConstraintInstance()",
    "kind": "Method",
    "detail": "Function (FConstraintInstance*)",
    "insertText": "GetConstraintInstance()"
  }
]