[
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "FDrawToRenderTargetContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDrawToRenderTargetContext"
  },
  {
    "label": "UKismetRenderingLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UKismetRenderingLibrary"
  },
  {
    "label": "TextureCompressionSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureCompressionSettings"
  },
  {
    "label": "TextureMipGenSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureMipGenSettings"
  },
  {
    "label": "TextureCompressionSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureCompressionSettings"
  },
  {
    "label": "TextureMipGenSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureMipGenSettings"
  },
  {
    "label": "TextureCompressionSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureCompressionSettings"
  },
  {
    "label": "TextureMipGenSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureMipGenSettings"
  },
  {
    "label": "TextureCompressionSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureCompressionSettings"
  },
  {
    "label": "TextureMipGenSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureMipGenSettings"
  },
  {
    "label": "ReleaseRenderTarget2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRenderTarget2D(UTextureRenderTarget2D* TextureRenderTarget)"
  },
  {
    "label": "ResizeRenderTarget2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeRenderTarget2D(UTextureRenderTarget2D* TextureRenderTarget, int32 Width = 256, int32 Height = 256)"
  },
  {
    "label": "DrawMaterialToRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawMaterialToRenderTarget(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, UMaterialInterface* Material)"
  },
  {
    "label": "ConvertRenderTargetToTexture2DEditorOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertRenderTargetToTexture2DEditorOnly(UObject* WorldContextObject, UTextureRenderTarget2D* RenderTarget, UTexture2D* Texture)"
  },
  {
    "label": "ConvertRenderTargetToTexture2DArrayEditorOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertRenderTargetToTexture2DArrayEditorOnly(UObject* WorldContextObject, UTextureRenderTarget2DArray* RenderTarget, UTexture2DArray* Texture)"
  },
  {
    "label": "ConvertRenderTargetToTextureCubeEditorOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertRenderTargetToTextureCubeEditorOnly(UObject* WorldContextObject, UTextureRenderTargetCube* RenderTarget, UTextureCube* Texture)"
  },
  {
    "label": "ConvertRenderTargetToTextureVolumeEditorOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertRenderTargetToTextureVolumeEditorOnly(UObject* WorldContextObject, UTextureRenderTargetVolume* RenderTarget, UVolumeTexture* Texture)"
  },
  {
    "label": "ExportRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportRenderTarget(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, const FString& FilePath, const FString& FileName)"
  },
  {
    "label": "ReadRenderTargetPixel()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "ReadRenderTargetPixel(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, int32 X, int32 Y)"
  },
  {
    "label": "ReadRenderTargetUV()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "ReadRenderTargetUV(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, float U, float V)"
  },
  {
    "label": "ReadRenderTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadRenderTarget(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, TArray<FColor>& OutSamples, bool bNormalize = true)"
  },
  {
    "label": "ReadRenderTargetRawPixel()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "ReadRenderTargetRawPixel(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, int32 X, int32 Y, bool bNormalize = true)"
  },
  {
    "label": "ReadRenderTargetRawPixelArea()",
    "kind": "Method",
    "detail": "Function (TArray<FLinearColor>)",
    "insertText": "ReadRenderTargetRawPixelArea(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, int32 MinX, int32 MinY, int32 MaxX, int32 MaxY, bool bNormalize = true)"
  },
  {
    "label": "ReadRenderTargetRawUV()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "ReadRenderTargetRawUV(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, float U, float V, bool bNormalize = true)"
  },
  {
    "label": "ReadRenderTargetRaw()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadRenderTargetRaw(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, TArray<FLinearColor>& OutLinearSamples, bool bNormalize = true)"
  },
  {
    "label": "ReadRenderTargetRawUVArea()",
    "kind": "Method",
    "detail": "Function (TArray<FLinearColor>)",
    "insertText": "ReadRenderTargetRawUVArea(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, FBox2D Area, bool bNormalize = true)"
  },
  {
    "label": "ExportTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportTexture2D(UObject* WorldContextObject, UTexture2D* Texture, const FString& FilePath, const FString& FileName)"
  },
  {
    "label": "BeginDrawCanvasToRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDrawCanvasToRenderTarget(UObject* WorldContextObject, UTextureRenderTarget2D* TextureRenderTarget, UCanvas*& Canvas, FVector2D& Size, FDrawToRenderTargetContext& Context)"
  },
  {
    "label": "EndDrawCanvasToRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndDrawCanvasToRenderTarget(UObject* WorldContextObject, const FDrawToRenderTargetContext& Context)"
  },
  {
    "label": "MakeSkinWeightInfo()",
    "kind": "Method",
    "detail": "Function (FSkelMeshSkinWeightInfo)",
    "insertText": "MakeSkinWeightInfo(int32 Bone0, uint8 Weight0, int32 Bone1, uint8 Weight1, int32 Bone2, uint8 Weight2, int32 Bone3, uint8 Weight3)"
  },
  {
    "label": "BreakSkinWeightInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakSkinWeightInfo(FSkelMeshSkinWeightInfo InWeight, int32& Bone0, uint8& Weight0, int32& Bone1, uint8& Weight1, int32& Bone2, uint8& Weight2, int32& Bone3, uint8& Weight3)"
  },
  {
    "label": "SetCastInsetShadowForAllAttachments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCastInsetShadowForAllAttachments(UPrimitiveComponent* PrimitiveComponent, bool bCastInsetShadow, bool bLightAttachmentsAsGroup)"
  },
  {
    "label": "CalculateProjectionMatrix()",
    "kind": "Method",
    "detail": "Function (FMatrix)",
    "insertText": "CalculateProjectionMatrix(const FMinimalViewInfo& MinimalViewInfo)"
  },
  {
    "label": "EnablePathTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnablePathTracing(bool bEnablePathTracer)"
  },
  {
    "label": "RefreshPathTracingOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshPathTracingOutput()"
  }
]