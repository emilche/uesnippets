[
  {
    "label": "FDelinquencyNameTimePair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDelinquencyNameTimePair"
  },
  {
    "label": "FDelinquencyKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDelinquencyKeyFuncs"
  },
  {
    "label": "FDelinquencyAnalytics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDelinquencyAnalytics"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FNetAsyncLoadDelinquencyAnalytics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetAsyncLoadDelinquencyAnalytics"
  },
  {
    "label": "FNetQueuedActorDelinquencyAnalytics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetQueuedActorDelinquencyAnalytics"
  },
  {
    "label": "FNetConnectionSaturationAnalytics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetConnectionSaturationAnalytics"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "FNetConnectionPacketAnalytics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetConnectionPacketAnalytics"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "TPacketLossData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPacketLossData"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key.Name)"
  },
  {
    "label": "FDelinquencyAnalytics()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FDelinquencyAnalytics(const uint32 InNumberOfTopOffendersToTrack)"
  },
  {
    "label": "FDelinquencyAnalytics()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FDelinquencyAnalytics(FDelinquencyAnalytics&& Other)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FDelinquencyNameTimePair&& ToTrack)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "TrackFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackFrame(const bool bIsSaturated)"
  },
  {
    "label": "TrackReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackReplication(const bool bIsSaturated)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "TrackAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackAck(int32 PacketId)"
  },
  {
    "label": "TrackNak()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackNak(int32 PacketId)"
  },
  {
    "label": "TrackInPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackInPacket(uint32 InPacketId, uint32 NumberOfMissingPackets)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  }
]