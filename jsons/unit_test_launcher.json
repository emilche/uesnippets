[
  {
    "label": "UnitTestPlatformDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnitTestPlatformDelegate"
  },
  {
    "label": "DefaultUnitTestPlatformDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DefaultUnitTestPlatformDelegate"
  },
  {
    "label": "UnitTestLauncherDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnitTestLauncherDelegate"
  },
  {
    "label": "MergeTestFilterSwitchHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MergeTestFilterSwitchHandler"
  },
  {
    "label": "LaunchUnitTests()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "LaunchUnitTests(int argc,\n                    char** argv,\n                    RunTestSuiteCallback run_test_suite,\n                    size_t retry_limit = 1U)"
  },
  {
    "label": "LaunchUnitTestsSerially()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "LaunchUnitTestsSerially(int argc,\n                            char** argv,\n                            RunTestSuiteCallback run_test_suite)"
  },
  {
    "label": "LaunchUnitTestsWithOptions()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "LaunchUnitTestsWithOptions(int argc,\n                               char** argv,\n                               size_t parallel_jobs,\n                               int default_batch_limit,\n                               bool use_job_objects,\n                               RepeatingClosure timeout_callback,\n                               RunTestSuiteCallback run_test_suite)"
  },
  {
    "label": "LaunchUnitTests()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "LaunchUnitTests(int argc,\n                    wchar_t** argv,\n                    bool use_job_objects,\n                    RunTestSuiteCallback run_test_suite)"
  },
  {
    "label": "DefaultUnitTestPlatformDelegate()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DefaultUnitTestPlatformDelegate()"
  },
  {
    "label": "UnitTestLauncherDelegate()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UnitTestLauncherDelegate(UnitTestPlatformDelegate* delegate,\n                           size_t batch_limit,\n                           bool use_job_objects,\n                           RepeatingClosure timeout_callback)"
  }
]