[
  {
    "label": "FWidgetPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetPath"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFocusEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFocusEvent"
  },
  {
    "label": "FCaptureLostEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCaptureLostEvent"
  },
  {
    "label": "FVirtualPointerPosition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualPointerPosition"
  },
  {
    "label": "FInputEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputEvent"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FAnalogInputEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnalogInputEvent"
  },
  {
    "label": "FCharacterEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterEvent"
  },
  {
    "label": "FTouchKeySet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTouchKeySet"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FMotionEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMotionEvent"
  },
  {
    "label": "FNavigationEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationEvent"
  },
  {
    "label": "FWindowActivateEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindowActivateEvent"
  },
  {
    "label": "EActivationType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EActivationType"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Class . h \" # include \" InputCoreTypes . h \" # include \" Types / SlateEnums . h \" # include \" GenericPlatform / GenericApplication . h \" # include \" GenericPlatform / GenericPlatformInputDeviceMapper . h \" # include \" Layout / Geometry . h \" # include \" Types / SlateVector2 . h \" # include \" Events . generated . h \" class FWidgetPath ; class SWidget ; class SWindow ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Mouse,Navigation,SetDirectly,Cleared,OtherWidgetLostFocus,WindowActivate,} ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FFocusEvent() : Cause(EFocusCause::SetDirectly) , UserIndex(0)"
  },
  {
    "label": "FFocusEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FFocusEvent(const EFocusCause InCause, uint32 InUserIndex) : Cause(InCause) , UserIndex(InUserIndex)"
  },
  {
    "label": "GetCause()",
    "kind": "Method",
    "detail": "Function (} EFocusCause)",
    "insertText": "GetCause()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FCaptureLostEvent() : UserIndex(0) , PointerIndex(0)"
  },
  {
    "label": "FCaptureLostEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCaptureLostEvent(int32 InUserIndex, int32 InPointerIndex) : UserIndex(InUserIndex) , PointerIndex(InPointerIndex)"
  },
  {
    "label": "FVirtualPointerPosition()",
    "kind": "Method",
    "detail": "Function (} int32 UserIndex ; int32 PointerIndex ; } ; struct FVirtualPointerPosition {)",
    "insertText": "FVirtualPointerPosition() : CurrentCursorPosition(FVector2f::ZeroVector) , LastCursorPosition(FVector2f::ZeroVector)"
  },
  {
    "label": "FVirtualPointerPosition()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FVirtualPointerPosition(const UE::Slate::FDeprecateVector2DParameter& InCurrentCursorPosition, const UE::Slate::FDeprecateVector2DParameter& InLastCursorPosition) : CurrentCursorPosition(InCurrentCursorPosition) , LastCursorPosition(InLastCursorPosition)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FInputEvent() : ModifierKeys(FModifierKeysState()) , bIsRepeat(false) , UserIndex(0) , InputDeviceId(INPUTDEVICEID_NONE) , EventPath(nullptr)"
  },
  {
    "label": "FInputEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInputEvent(const FModifierKeysState& InModifierKeys, const int32 InUserIndex, const bool bInIsRepeat) : ModifierKeys(InModifierKeys) , bIsRepeat(bInIsRepeat) , UserIndex(InUserIndex) , InputDeviceId(FInputDeviceId::CreateFromInternalId(InUserIndex)) , EventPath(nullptr)"
  },
  {
    "label": "FInputEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInputEvent(const FModifierKeysState& InModifierKeys, const FInputDeviceId InDeviceId, const bool bInIsRepeat) : ModifierKeys(InModifierKeys) , bIsRepeat(bInIsRepeat) , InputDeviceId(InDeviceId) , EventPath(nullptr)"
  },
  {
    "label": "GetPlatformUserId()",
    "kind": "Method",
    "detail": "Function (UserIndex =)",
    "insertText": "GetPlatformUserId().GetInternalId()"
  },
  {
    "label": "FInputEvent()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FInputEvent()"
  },
  {
    "label": "IsRepeat()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "IsRepeat()"
  },
  {
    "label": "IsLeftShiftDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsLeftShiftDown()"
  },
  {
    "label": "IsRightShiftDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRightShiftDown()"
  },
  {
    "label": "IsControlDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsControlDown()"
  },
  {
    "label": "IsLeftControlDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsLeftControlDown()"
  },
  {
    "label": "IsRightControlDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRightControlDown()"
  },
  {
    "label": "IsAltDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAltDown()"
  },
  {
    "label": "IsLeftAltDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsLeftAltDown()"
  },
  {
    "label": "IsRightAltDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRightAltDown()"
  },
  {
    "label": "IsCommandDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCommandDown()"
  },
  {
    "label": "IsLeftCommandDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsLeftCommandDown()"
  },
  {
    "label": "IsRightCommandDown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRightCommandDown()"
  },
  {
    "label": "AreCapsLocked()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AreCapsLocked()"
  },
  {
    "label": "GetModifierKeys()",
    "kind": "Method",
    "detail": "Function (} const FModifierKeysState&)",
    "insertText": "GetModifierKeys()"
  },
  {
    "label": "FindGeometry()",
    "kind": "Method",
    "detail": "Function (} FGeometry)",
    "insertText": "FindGeometry(const TSharedRef<SWidget>& WidgetToFind)"
  },
  {
    "label": "GetWindow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWindow>)",
    "insertText": "GetWindow()"
  },
  {
    "label": "SetEventPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEventPath(const FWidgetPath& InEventPath)"
  },
  {
    "label": "GetEventPath()",
    "kind": "Method",
    "detail": "Function (EventPath =& InEventPath ; } const FWidgetPath*)",
    "insertText": "GetEventPath()"
  },
  {
    "label": "IsPointerEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPointerEvent()"
  },
  {
    "label": "IsKeyEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsKeyEvent()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FKeyEvent() : FInputEvent(FModifierKeysState(), 0, false) , Key() , CharacterCode(0) , KeyCode(0)"
  },
  {
    "label": "FKeyEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FKeyEvent(const FKey InKey, const FModifierKeysState& InModifierKeys, const uint32 InUserIndex, const bool bInIsRepeat, const uint32 InCharacterCode, const uint32 InKeyCode ) : FInputEvent(InModifierKeys, InUserIndex, bInIsRepeat) , Key(InKey) , CharacterCode(InCharacterCode) , KeyCode(InKeyCode)"
  },
  {
    "label": "FKeyEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FKeyEvent(const FKey InKey, const FModifierKeysState& InModifierKeys, const FInputDeviceId InDeviceId, const bool bInIsRepeat, const uint32 InCharacterCode, const uint32 InKeyCode, const TOptional<int32> InOptionalSlateUserIndex = TOptional<int32>() ) : FInputEvent(InModifierKeys, InDeviceId, bInIsRepeat) , Key(InKey) , CharacterCode(InCharacterCode) , KeyCode(InKeyCode)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (UserIndex = InOptionalSlateUserIndex .)",
    "insertText": "GetValue()"
  },
  {
    "label": "GetKey()",
    "kind": "Method",
    "detail": "Function (} } FKey)",
    "insertText": "GetKey()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FAnalogInputEvent() : FKeyEvent(FKey(), FModifierKeysState(), false, 0, 0, 0) , AnalogValue(0.0f)"
  },
  {
    "label": "FAnalogInputEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAnalogInputEvent(const FKey InKey, const FModifierKeysState& InModifierKeys, const uint32 InUserIndex, const bool bInIsRepeat, const uint32 InCharacterCode, const uint32 InKeyCode, const float InAnalogValue ) : FKeyEvent(InKey, InModifierKeys, InUserIndex, bInIsRepeat, InCharacterCode, InKeyCode) , AnalogValue(InAnalogValue)"
  },
  {
    "label": "FAnalogInputEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAnalogInputEvent(const FKey InKey, const FModifierKeysState& InModifierKeys, const FInputDeviceId InDeviceId, const bool bInIsRepeat, const uint32 InCharacterCode, const uint32 InKeyCode, const float InAnalogValue, const TOptional<int32> InOptionalSlateUserIndex = TOptional<int32>() ) : FKeyEvent(InKey, InModifierKeys, InDeviceId, bInIsRepeat, InCharacterCode, InKeyCode, InOptionalSlateUserIndex) , AnalogValue(InAnalogValue)"
  },
  {
    "label": "GetAnalogValue()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetAnalogValue()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FCharacterEvent() : FInputEvent(FModifierKeysState(), 0, false) , Character(0)"
  },
  {
    "label": "FCharacterEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCharacterEvent(const TCHAR InCharacter, const FModifierKeysState& InModifierKeys, const uint32 InUserIndex, const bool bInIsRepeat) : FInputEvent(InModifierKeys, InUserIndex, bInIsRepeat) , Character(InCharacter)"
  },
  {
    "label": "FCharacterEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCharacterEvent(const TCHAR InCharacter, const FModifierKeysState& InModifierKeys, const FInputDeviceId InDeviceId, const bool bInIsRepeat) : FInputEvent(InModifierKeys, InDeviceId, bInIsRepeat) , Character(InCharacter)"
  },
  {
    "label": "GetCharacter()",
    "kind": "Method",
    "detail": "Function (} TCHAR)",
    "insertText": "GetCharacter()"
  },
  {
    "label": "FTouchKeySet()",
    "kind": "Method",
    "detail": "Function (private : TCHAR Character ; } ; template<> struct TStructOpsTypeTraits<FCharacterEvent> : public TStructOpsTypeTraitsBase2<FCharacterEvent> { enum { WithCopy = true,} ; } ; class FTouchKeySet : public TSet<FKey> { public :)",
    "insertText": "FTouchKeySet(FKey Key)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (this ->)",
    "insertText": "Add(Key)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FPointerEvent() : ScreenSpacePosition(FVector2f(0.f, 0.f)) , LastScreenSpacePosition(FVector2f(0.f, 0.f)) , CursorDelta(FVector2f(0.f, 0.f)) , PressedButtons(&FTouchKeySet::EmptySet) , EffectingButton() , PointerIndex(0) , TouchpadIndex(0) , Force(1.0f) , bIsTouchEvent(false) , GestureType(EGestureEvent::None) , WheelOrGestureDelta(0.0f, 0) , bIsDirectionInvertedFromDevice(false) , bIsTouchForceChanged(false) , bIsTouchFirstMove(false)"
  },
  {
    "label": "FPointerEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPointerEvent(uint32 InPointerIndex, const UE::Slate::FDeprecateVector2DParameter& InScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InLastScreenSpacePosition, const TSet<FKey>& InPressedButtons, FKey InEffectingButton, float InWheelDelta, const FModifierKeysState& InModifierKeys ) : FInputEvent(InModifierKeys, 0, false) , ScreenSpacePosition(InScreenSpacePosition) , LastScreenSpacePosition(InLastScreenSpacePosition) , CursorDelta(FVector2f(InScreenSpacePosition) - FVector2f(InLastScreenSpacePosition)) , PressedButtons(&InPressedButtons) , EffectingButton(InEffectingButton) , PointerIndex(InPointerIndex) , TouchpadIndex(0) , Force(1.0f) , bIsTouchEvent(false) , GestureType(EGestureEvent::None) , WheelOrGestureDelta(0.0f, InWheelDelta) , bIsDirectionInvertedFromDevice(false) , bIsTouchForceChanged(false) , bIsTouchFirstMove(false)"
  },
  {
    "label": "FPointerEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPointerEvent(uint32 InUserIndex, uint32 InPointerIndex, const UE::Slate::FDeprecateVector2DParameter& InScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InLastScreenSpacePosition, const TSet<FKey>& InPressedButtons, FKey InEffectingButton, float InWheelDelta, const FModifierKeysState& InModifierKeys ) : FInputEvent(InModifierKeys, InUserIndex, false) , ScreenSpacePosition(InScreenSpacePosition) , LastScreenSpacePosition(InLastScreenSpacePosition) , CursorDelta(FVector2f(InScreenSpacePosition) - FVector2f(InLastScreenSpacePosition)) , PressedButtons(&InPressedButtons) , EffectingButton(InEffectingButton) , PointerIndex(InPointerIndex) , TouchpadIndex(0) , Force(1.0f) , bIsTouchEvent(false) , GestureType(EGestureEvent::None) , WheelOrGestureDelta(0.0f, InWheelDelta) , bIsDirectionInvertedFromDevice(false) , bIsTouchForceChanged(false) , bIsTouchFirstMove(false)"
  },
  {
    "label": "FPointerEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPointerEvent(FInputDeviceId InDeviceId, uint32 InPointerIndex, const UE::Slate::FDeprecateVector2DParameter& InScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InLastScreenSpacePosition, const TSet<FKey>& InPressedButtons, FKey InEffectingButton, float InWheelDelta, const FModifierKeysState& InModifierKeys, const TOptional<int32> InOptionalSlateUserIndex = TOptional<int32>() ) : FInputEvent(InModifierKeys, InDeviceId, false) , ScreenSpacePosition(InScreenSpacePosition) , LastScreenSpacePosition(InLastScreenSpacePosition) , CursorDelta(FVector2f(InScreenSpacePosition) - FVector2f(InLastScreenSpacePosition)) , PressedButtons(&InPressedButtons) , EffectingButton(InEffectingButton) , PointerIndex(InPointerIndex) , TouchpadIndex(0) , Force(1.0f) , bIsTouchEvent(false) , GestureType(EGestureEvent::None) , WheelOrGestureDelta(0.0f, InWheelDelta) , bIsDirectionInvertedFromDevice(false) , bIsTouchForceChanged(false) , bIsTouchFirstMove(false)"
  },
  {
    "label": "FPointerEvent()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "FPointerEvent(uint32 InUserIndex, uint32 InPointerIndex, const UE::Slate::FDeprecateVector2DParameter& InScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InLastScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InDelta, const TSet<FKey>& InPressedButtons, const FModifierKeysState& InModifierKeys ) : FInputEvent(InModifierKeys, InUserIndex, false) , ScreenSpacePosition(InScreenSpacePosition) , LastScreenSpacePosition(InLastScreenSpacePosition) , CursorDelta(InDelta) , PressedButtons(&InPressedButtons) , PointerIndex(InPointerIndex) , TouchpadIndex(0) , Force(1.0f) , bIsTouchEvent(false) , GestureType(EGestureEvent::None) , WheelOrGestureDelta(0.0f, 0.0f) , bIsDirectionInvertedFromDevice(false) , bIsTouchForceChanged(false) , bIsTouchFirstMove(false)"
  },
  {
    "label": "FPointerEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPointerEvent(uint32 InPointerIndex, const UE::Slate::FDeprecateVector2DParameter& InScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InLastScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InDelta, const TSet<FKey>& InPressedButtons, const FModifierKeysState& InModifierKeys ) : FInputEvent(InModifierKeys, 0, false) , ScreenSpacePosition(InScreenSpacePosition) , LastScreenSpacePosition(InLastScreenSpacePosition) , CursorDelta(InDelta) , PressedButtons(&InPressedButtons) , PointerIndex(InPointerIndex) , TouchpadIndex(0) , Force(1.0f) , bIsTouchEvent(false) , GestureType(EGestureEvent::None) , WheelOrGestureDelta(0.0f, 0.0f) , bIsDirectionInvertedFromDevice(false) , bIsTouchForceChanged(false) , bIsTouchFirstMove(false)"
  },
  {
    "label": "FPointerEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPointerEvent(uint32 InUserIndex, uint32 InPointerIndex, const UE::Slate::FDeprecateVector2DParameter& InScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InLastScreenSpacePosition, float InForce, bool bPressLeftMouseButton, bool bInIsForceChanged = false, bool bInIsFirstMove = false, const FModifierKeysState& InModifierKeys = FModifierKeysState(), uint32 InTouchpadIndex=0 ) : FInputEvent(InModifierKeys, InUserIndex, false) , ScreenSpacePosition(InScreenSpacePosition) , LastScreenSpacePosition(InLastScreenSpacePosition) , CursorDelta(FVector2f(InScreenSpacePosition) - FVector2f(InLastScreenSpacePosition)) , PressedButtons(bPressLeftMouseButton ? &FTouchKeySet::StandardSet : &FTouchKeySet::EmptySet) , EffectingButton(EKeys::LeftMouseButton) , PointerIndex(InPointerIndex) , TouchpadIndex(InTouchpadIndex) , Force(InForce) , bIsTouchEvent(true) , GestureType(EGestureEvent::None) , WheelOrGestureDelta(0.0f, 0.0f) , bIsDirectionInvertedFromDevice(false) , bIsTouchForceChanged(bInIsForceChanged) , bIsTouchFirstMove(bInIsFirstMove)"
  },
  {
    "label": "FPointerEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPointerEvent(FInputDeviceId InDeviceId, uint32 InPointerIndex, const UE::Slate::FDeprecateVector2DParameter& InScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InLastScreenSpacePosition, float InForce, bool bPressLeftMouseButton, bool bInIsForceChanged = false, bool bInIsFirstMove = false, const FModifierKeysState& InModifierKeys = FModifierKeysState(), uint32 InTouchpadIndex=0, const TOptional<int32> InOptionalSlateUserIndex = TOptional<int32>() ) : FInputEvent(InModifierKeys, InDeviceId, false) , ScreenSpacePosition(InScreenSpacePosition) , LastScreenSpacePosition(InLastScreenSpacePosition) , CursorDelta(FVector2f(InScreenSpacePosition) - FVector2f(InLastScreenSpacePosition)) , PressedButtons(bPressLeftMouseButton ? &FTouchKeySet::StandardSet : &FTouchKeySet::EmptySet) , EffectingButton(EKeys::LeftMouseButton) , PointerIndex(InPointerIndex) , TouchpadIndex(InTouchpadIndex) , Force(InForce) , bIsTouchEvent(true) , GestureType(EGestureEvent::None) , WheelOrGestureDelta(0.0f, 0.0f) , bIsDirectionInvertedFromDevice(false) , bIsTouchForceChanged(bInIsForceChanged) , bIsTouchFirstMove(bInIsFirstMove)"
  },
  {
    "label": "FPointerEvent()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "FPointerEvent(const UE::Slate::FDeprecateVector2DParameter& InScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InLastScreenSpacePosition, const TSet<FKey>& InPressedButtons, const FModifierKeysState& InModifierKeys, EGestureEvent InGestureType, const UE::Slate::FDeprecateVector2DParameter& InGestureDelta, bool bInIsDirectionInvertedFromDevice ) : FInputEvent(InModifierKeys, 0, false) , ScreenSpacePosition(InScreenSpacePosition) , LastScreenSpacePosition(InLastScreenSpacePosition) , CursorDelta(FVector2f(LastScreenSpacePosition) - FVector2f(ScreenSpacePosition)) , PressedButtons(&InPressedButtons) , PointerIndex(0) , TouchpadIndex(0) , Force(1.0f) , bIsTouchEvent(false) , GestureType(InGestureType) , WheelOrGestureDelta(InGestureDelta) , bIsDirectionInvertedFromDevice(bInIsDirectionInvertedFromDevice) , bIsTouchForceChanged(false) , bIsTouchFirstMove(false)"
  },
  {
    "label": "FPointerEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPointerEvent(const FPointerEvent& Other, const UE::Slate::FDeprecateVector2DParameter& InScreenSpacePosition, const UE::Slate::FDeprecateVector2DParameter& InLastScreenSpacePosition)"
  },
  {
    "label": "GetScreenSpacePosition()",
    "kind": "Method",
    "detail": "Function (* this = Other ; ScreenSpacePosition = InScreenSpacePosition ; LastScreenSpacePosition = InLastScreenSpacePosition ; } public : const UE::Slate::FDeprecateVector2DResult&)",
    "insertText": "GetScreenSpacePosition()"
  },
  {
    "label": "GetEffectingButton()",
    "kind": "Method",
    "detail": "Function (} FKey)",
    "insertText": "GetEffectingButton()"
  },
  {
    "label": "GetUserIndex()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetUserIndex()"
  },
  {
    "label": "MakeTranslatedEvent()",
    "kind": "Method",
    "detail": "Function (template<PointerEventType> PointerEventType)",
    "insertText": "MakeTranslatedEvent(const PointerEventType& InPointerEvent, const FVirtualPointerPosition& VirtualPosition)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FMotionEvent() : Tilt(FVector(0, 0, 0)) , RotationRate(FVector(0, 0, 0)) , Gravity(FVector(0, 0, 0)) , Acceleration(FVector(0, 0, 0))"
  },
  {
    "label": "FMotionEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMotionEvent(uint32 InUserIndex, const FVector& InTilt, const FVector& InRotationRate, const FVector& InGravity, const FVector& InAcceleration ) : FInputEvent(FModifierKeysState(), InUserIndex, false) , Tilt(InTilt) , RotationRate(InRotationRate) , Gravity(InGravity) , Acceleration(InAcceleration)"
  },
  {
    "label": "FMotionEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMotionEvent(const FInputDeviceId InDeviceId, const FVector& InTilt, const FVector& InRotationRate, const FVector& InGravity, const FVector& InAcceleration ) : FInputEvent(FModifierKeysState(), InDeviceId, false) , Tilt(InTilt) , RotationRate(InRotationRate) , Gravity(InGravity) , Acceleration(InAcceleration)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FNavigationEvent() : NavigationType(EUINavigation::Invalid) , NavigationGenesis(ENavigationGenesis::User)"
  },
  {
    "label": "FNavigationEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNavigationEvent(const FModifierKeysState& InModifierKeys, const int32 InUserIndex, EUINavigation InNavigationType, ENavigationGenesis InNavigationGenesis) : FInputEvent(InModifierKeys, InUserIndex, false) , NavigationType(InNavigationType) , NavigationGenesis(InNavigationGenesis)"
  },
  {
    "label": "FNavigationEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNavigationEvent(const FModifierKeysState& InModifierKeys, const FInputDeviceId InDeviceId, EUINavigation InNavigationType, ENavigationGenesis InNavigationGenesis) : FInputEvent(InModifierKeys, InDeviceId, false) , NavigationType(InNavigationType) , NavigationGenesis(InNavigationGenesis)"
  },
  {
    "label": "GetNavigationType()",
    "kind": "Method",
    "detail": "Function (} public : EUINavigation)",
    "insertText": "GetNavigationType()"
  },
  {
    "label": "GetActivationType()",
    "kind": "Method",
    "detail": "Function (} public : EActivationType)",
    "insertText": "GetActivationType()"
  }
]