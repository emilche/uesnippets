[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "ESnapOnFrameMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESnapOnFrameMode"
  },
  {
    "label": "FbxWriterFbx6",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxWriterFbx6"
  },
  {
    "label": "FBXSDK_OBJECT_DECLARE()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_FILEIO_GLOBAL_SETTINGS_H_ # define _FBXSDK_FILEIO_GLOBAL_SETTINGS_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / fbxobject . h> # include<fbxsdk / core / base / fbxstatus . h> # include<fbxsdk / scene / fbxaxissystem . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxGlobalSettings : public FbxObject {)",
    "insertText": "FBXSDK_OBJECT_DECLARE(FbxGlobalSettings, FbxObject)"
  },
  {
    "label": "SetAxisSystem()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetAxisSystem(const FbxAxisSystem& pAxisSystem)"
  },
  {
    "label": "GetAxisSystem()",
    "kind": "Method",
    "detail": "Function (FbxAxisSystem)",
    "insertText": "GetAxisSystem()"
  },
  {
    "label": "SetOriginalUpAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOriginalUpAxis(const FbxAxisSystem& pAxisSystem)"
  },
  {
    "label": "GetOriginalUpAxis()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetOriginalUpAxis()"
  },
  {
    "label": "SetSystemUnit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSystemUnit(const FbxSystemUnit& pOther)"
  },
  {
    "label": "GetSystemUnit()",
    "kind": "Method",
    "detail": "Function (FbxSystemUnit)",
    "insertText": "GetSystemUnit()"
  },
  {
    "label": "SetOriginalSystemUnit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOriginalSystemUnit(const FbxSystemUnit& pOther)"
  },
  {
    "label": "GetOriginalSystemUnit()",
    "kind": "Method",
    "detail": "Function (FbxSystemUnit)",
    "insertText": "GetOriginalSystemUnit()"
  },
  {
    "label": "SetAmbientColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAmbientColor(FbxColor pAmbientColor)"
  },
  {
    "label": "GetAmbientColor()",
    "kind": "Method",
    "detail": "Function (FbxColor)",
    "insertText": "GetAmbientColor()"
  },
  {
    "label": "SetDefaultCamera()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDefaultCamera(const char* pCameraName)"
  },
  {
    "label": "GetDefaultCamera()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetDefaultCamera()"
  },
  {
    "label": "SetTimeMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeMode(FbxTime::EMode pTimeMode)"
  },
  {
    "label": "GetTimeMode()",
    "kind": "Method",
    "detail": "Function (FbxTime::EMode)",
    "insertText": "GetTimeMode()"
  },
  {
    "label": "SetTimeProtocol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeProtocol(FbxTime::EProtocol pTimeProtocol)"
  },
  {
    "label": "GetTimeProtocol()",
    "kind": "Method",
    "detail": "Function (FbxTime::EProtocol)",
    "insertText": "GetTimeProtocol()"
  },
  {
    "label": "SetSnapOnFrameMode()",
    "kind": "Method",
    "detail": "Function (enum ESnapOnFrameMode { eNoSnap,eSnapOnFrame,ePlayOnFrame,eSnapAndPlayOnFrame } ; void)",
    "insertText": "SetSnapOnFrameMode(ESnapOnFrameMode pSnapOnFrameMode)"
  },
  {
    "label": "GetSnapOnFrameMode()",
    "kind": "Method",
    "detail": "Function (ESnapOnFrameMode)",
    "insertText": "GetSnapOnFrameMode()"
  },
  {
    "label": "SetTimelineDefaultTimeSpan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineDefaultTimeSpan(const FbxTimeSpan& pTimeSpan)"
  },
  {
    "label": "GetTimelineDefaultTimeSpan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTimelineDefaultTimeSpan(FbxTimeSpan& pTimeSpan)"
  },
  {
    "label": "SetCustomFrameRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomFrameRate(double pCustomFrameRate)"
  },
  {
    "label": "TimeMarker()",
    "kind": "Method",
    "detail": "Function (struct FBXSDK_DLL TimeMarker {)",
    "insertText": "TimeMarker()"
  },
  {
    "label": "TimeMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TimeMarker(const TimeMarker& pTimeMarker)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TimeMarker&)",
    "insertText": "operator(const TimeMarker& pTimeMarker)"
  },
  {
    "label": "GetTimeMarkerCount()",
    "kind": "Method",
    "detail": "Function (FbxString mName ; FbxTime mTime ; bool mLoop ; } ; int)",
    "insertText": "GetTimeMarkerCount()"
  },
  {
    "label": "GetTimeMarker()",
    "kind": "Method",
    "detail": "Function (TimeMarker)",
    "insertText": "GetTimeMarker(int pIndex, FbxStatus* pStatus=NULL)"
  },
  {
    "label": "AddTimeMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeMarker(const TimeMarker& pTimeMarker, FbxStatus* pStatus=NULL)"
  },
  {
    "label": "ReplaceTimeMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceTimeMarker(int pIndex, const TimeMarker& pTimeMarker, FbxStatus* pStatus=NULL)"
  },
  {
    "label": "RemoveAllTimeMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllTimeMarkers()"
  },
  {
    "label": "SetCurrentTimeMarker()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCurrentTimeMarker(int pIndex, FbxStatus* pStatus=NULL)"
  },
  {
    "label": "GetCurrentTimeMarker()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCurrentTimeMarker()"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS FbxObject&)",
    "insertText": "Copy(const FbxObject& pObject)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (protected : FbxPropertyT<FbxInt> UpAxis ; FbxPropertyT<FbxInt> UpAxisSign ; FbxPropertyT<FbxInt> FrontAxis ; FbxPropertyT<FbxInt> FrontAxisSign ; FbxPropertyT<FbxInt> CoordAxis ; FbxPropertyT<FbxInt> CoordAxisSign ; FbxPropertyT<FbxInt> OriginalUpAxis ; FbxPropertyT<FbxInt> OriginalUpAxisSign ; FbxPropertyT<FbxDouble> UnitScaleFactor ; FbxPropertyT<FbxDouble> OriginalUnitScaleFactor ; FbxPropertyT<FbxDouble3> AmbientColor ; FbxPropertyT<FbxString> DefaultCamera ; FbxPropertyT<FbxEnum> TimeMode ; FbxPropertyT<FbxEnum> TimeProtocol ; FbxPropertyT<FbxEnum> SnapOnFrameMode ; FbxPropertyT<FbxTime> TimeSpanStart ; FbxPropertyT<FbxTime> TimeSpanStop ; FbxPropertyT<FbxDouble> CustomFrameRate ; protected : void)",
    "insertText": "Construct(const FbxObject* pFrom)"
  },
  {
    "label": "ConstructProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructProperties(bool pForceSet)"
  },
  {
    "label": "AxisSystemToProperties()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AxisSystemToProperties()"
  },
  {
    "label": "PropertiesToAxisSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropertiesToAxisSystem()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "AddSetTimeMarker()",
    "kind": "Method",
    "detail": "Function (FbxAxisSystem mAxisSystem ; int mNbTimeMarkers ; class FbxWriterFbx6 ; FbxProperty mTimeMarkers ; FbxPropertyT<FbxInt> mCurrentTimeMarker ; void)",
    "insertText": "AddSetTimeMarker(int pIndex, const TimeMarker& pTimeMarker, FbxStatus* pStatus, bool pAdd)"
  },
  {
    "label": "FbxTypeOf()",
    "kind": "Method",
    "detail": "Function (# endif } ; EFbxType)",
    "insertText": "FbxTypeOf(const FbxTime::EMode&)"
  }
]