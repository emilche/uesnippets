[
  {
    "label": "FDependsNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDependsNode"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FSaveScratch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSaveScratch"
  },
  {
    "label": "FSortInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortInfo"
  },
  {
    "label": "FLoadScratch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLoadScratch"
  },
  {
    "label": "FDependsNode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Algo / BinarySearch . h \" # include \" AssetRegistry / AssetData . h \" # include \" AssetRegistry / IAssetRegistry . h \" # include \" Containers / BitArray . h \" # include \" Misc / AssetRegistryInterface . h \" # include \" PropertyCombinationSet . h \" class FDependsNode { public : typedef TArray<FDependsNode*> FDependsNodeList ; uint32 PackageFlagWidth = 3 ; uint32 SearchableNameFlagWidth = 0 ; uint32 ManageFlagWidth = 1 ; typedef TPropertyCombinationSet<PackageFlagWidth> FPackageFlagSet ; uint32 PackageFlagSetWidth = FPackageFlagSet::StorageBitCount ; uint32 SearchableNameFlagSetWidth = 0 ; uint32 ManageFlagSetWidth = TPropertyCombinationSet<ManageFlagWidth>::StorageBitCount ; public :)",
    "insertText": "FDependsNode()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct()"
  },
  {
    "label": "FDependsNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDependsNode(const FAssetIdentifier& InIdentifier) : Identifier(InIdentifier)"
  },
  {
    "label": "PrintNode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PrintNode()"
  },
  {
    "label": "PrintDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintDependencies()"
  },
  {
    "label": "PrintReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintReferencers()"
  },
  {
    "label": "GetDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDependencies(TArray<FDependsNode*>& OutDependencies, UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All, const UE::AssetRegistry::FDependencyQuery& Flags = UE::AssetRegistry::FDependencyQuery())"
  },
  {
    "label": "GetDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDependencies(TArray<FAssetIdentifier>& OutDependencies, UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All, const UE::AssetRegistry::FDependencyQuery& Flags = UE::AssetRegistry::FDependencyQuery())"
  },
  {
    "label": "GetDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDependencies(TArray<FAssetDependency>& OutDependencies, UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All, const UE::AssetRegistry::FDependencyQuery& Flags = UE::AssetRegistry::FDependencyQuery())"
  },
  {
    "label": "GetReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReferencers(TArray<FDependsNode*>& OutReferencers, UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All, const UE::AssetRegistry::FDependencyQuery& Flags = UE::AssetRegistry::FDependencyQuery())"
  },
  {
    "label": "GetReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReferencers(TArray<FAssetDependency>& OutReferencers, UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All, const UE::AssetRegistry::FDependencyQuery& Flags = UE::AssetRegistry::FDependencyQuery())"
  },
  {
    "label": "GetPackageName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetPackageName()"
  },
  {
    "label": "FAssetIdentifier()",
    "kind": "Method",
    "detail": "Function (Identifier =)",
    "insertText": "FAssetIdentifier(InName)"
  },
  {
    "label": "GetIdentifier()",
    "kind": "Method",
    "detail": "Function (} const FAssetIdentifier&)",
    "insertText": "GetIdentifier()"
  },
  {
    "label": "AddDependency()",
    "kind": "Method",
    "detail": "Function (Identifier = InIdentifier ; } void)",
    "insertText": "AddDependency(FDependsNode* InDependency, UE::AssetRegistry::EDependencyCategory InDependencyType, UE::AssetRegistry::EDependencyProperty InProperties)"
  },
  {
    "label": "GetPackageReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPackageReferencers(TArray<TPair<FAssetIdentifier, FPackageFlagSet>>& OutReferencers)"
  },
  {
    "label": "AddPackageDependencySet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPackageDependencySet(FDependsNode* InDependency, const FPackageFlagSet& PropertyCombinationSet)"
  },
  {
    "label": "AddReferencer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencer(FDependsNode* InReferencer)"
  },
  {
    "label": "RemoveDependency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDependency(FDependsNode* InDependency, UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All)"
  },
  {
    "label": "RemoveReferencer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReferencer(FDependsNode* InReferencer)"
  },
  {
    "label": "RefreshReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshReferencers()"
  },
  {
    "label": "ContainsDependency()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsDependency(FDependsNode* InDependency, UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All)"
  },
  {
    "label": "ClearDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDependencies(UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All)"
  },
  {
    "label": "ClearReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearReferencers()"
  },
  {
    "label": "RemoveManageReferencesToNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveManageReferencesToNode()"
  },
  {
    "label": "RemoveLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLinks(const TUniqueFunction<bool(const FDependsNode*)>& ShouldRemove)"
  },
  {
    "label": "GetConnectionCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetConnectionCount()"
  },
  {
    "label": "GetAllocatedSize()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetAllocatedSize(void)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef TUniqueFunction<)",
    "insertText": "void(FDependsNode* Dependency, UE::AssetRegistry::EDependencyCategory Category, UE::AssetRegistry::EDependencyProperty Properties, bool bDuplicate)"
  },
  {
    "label": "IterateOverDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateOverDependencies(const FIterateDependenciesCallback& InCallback, UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All, const UE::AssetRegistry::FDependencyQuery& Flags = UE::AssetRegistry::FDependencyQuery())"
  },
  {
    "label": "IterateOverDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateOverDependencies(const FIterateDependenciesCallback& InCallback, const FDependsNode* DependsNode, UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All, const UE::AssetRegistry::FDependencyQuery& Flags = UE::AssetRegistry::FDependencyQuery())"
  },
  {
    "label": "IterateOverReferencers()",
    "kind": "Method",
    "detail": "Function (template<class T> void)",
    "insertText": "IterateOverReferencers(const T& InCallback)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reserve(int32 InNumPackageDependencies, int32 InNumNameDependencies, int32 InNumManageDependencies, int32 InNumReferencers)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reserve(const FDependsNode* Other)"
  },
  {
    "label": "PackagePropertiesToByte()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "PackagePropertiesToByte(UE::AssetRegistry::EDependencyProperty Properties)"
  },
  {
    "label": "ByteToPackageProperties()",
    "kind": "Method",
    "detail": "Function (UE::AssetRegistry::EDependencyProperty)",
    "insertText": "ByteToPackageProperties(uint8 Bits)"
  },
  {
    "label": "ManagePropertiesToByte()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "ManagePropertiesToByte(UE::AssetRegistry::EDependencyProperty Properties)"
  },
  {
    "label": "ByteToManageProperties()",
    "kind": "Method",
    "detail": "Function (UE::AssetRegistry::EDependencyProperty)",
    "insertText": "ByteToManageProperties(uint8 Bits)"
  },
  {
    "label": "SerializeSave()",
    "kind": "Method",
    "detail": "Function (struct FSaveScratch { struct FSortInfo { int32 SerializeIndex ; int32 ListIndex ; } ; TArray<FSortInfo> SortInfos ; TArray<int32> OutDependencies ; TBitArray<> OutFlagBits ; } ; void)",
    "insertText": "SerializeSave(FArchive& Ar, const TUniqueFunction<int32(FDependsNode*, bool)>& GetSerializeIndexFromNode, FSaveScratch& Scratch, const FAssetRegistrySerializationOptions& Options)"
  },
  {
    "label": "SerializeLoad()",
    "kind": "Method",
    "detail": "Function (struct FLoadScratch { TArray<int32> InDependencies ; TArray<uint32> InFlagBits ; TArray<FDependsNode*> PointerDependencies ; TArray<int32> SortIndexes ; } ; void)",
    "insertText": "SerializeLoad(FArchive& Ar, const TUniqueFunction<FDependsNode*(int32)>& GetNodeFromSerializeIndex, FLoadScratch& Scratch)"
  },
  {
    "label": "SerializeLoad_BeforeFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeLoad_BeforeFlags(FArchive& Ar, FAssetRegistryVersion::Type Version, FDependsNode* PreallocatedDependsNodeDataBuffer, int32 NumDependsNodes, bool bSerializeDependencies, uint32 HardBits, uint32 SoftBits, uint32 HardManageBits, uint32 SoftManageBits)"
  },
  {
    "label": "GetPropertySetBits_BeforeFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPropertySetBits_BeforeFlags(uint32& HardBits, uint32& SoftBits, uint32& HardManageBits, uint32& SoftManageBits)"
  },
  {
    "label": "IsDependencyListSorted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDependencyListSorted(UE::AssetRegistry::EDependencyCategory Category)"
  },
  {
    "label": "SetIsDependencyListSorted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsDependencyListSorted(UE::AssetRegistry::EDependencyCategory Category, bool bValue)"
  },
  {
    "label": "IsReferencersSorted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReferencersSorted()"
  },
  {
    "label": "SetIsReferencersSorted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsReferencersSorted(bool bValue)"
  },
  {
    "label": "IsDependenciesInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDependenciesInitialized()"
  },
  {
    "label": "SetIsDependenciesInitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsDependenciesInitialized(bool bValue)"
  },
  {
    "label": "PrintDependenciesRecursive()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "PrintDependenciesRecursive(const FString& Indent, TSet<const FDependsNode*>& VisitedNodes)"
  },
  {
    "label": "PrintReferencersRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintReferencersRecursive(const FString& Indent, TSet<const FDependsNode*>& VisitedNodes)"
  },
  {
    "label": "InCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InCallback(Referencer)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (PackageDependencies .)",
    "insertText": "Reserve(InNumPackageDependencies)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (PackageFlags .)",
    "insertText": "Reserve(InNumPackageDependencies * PackageFlagSetWidth)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (NameDependencies .)",
    "insertText": "Reserve(InNumNameDependencies)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (ManageDependencies .)",
    "insertText": "Reserve(InNumManageDependencies)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (ManageFlags .)",
    "insertText": "Reserve(InNumManageDependencies * ManageFlagSetWidth)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (Referencers .)",
    "insertText": "Reserve(InNumReferencers)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reserve(Other->PackageDependencies.Num(), Other->NameDependencies.Num(), Other->ManageDependencies.Num(), Other->Referencers.Num())"
  }
]