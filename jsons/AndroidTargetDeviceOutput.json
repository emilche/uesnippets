[
  {
    "label": "FAndroidTargetDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAndroidTargetDevice"
  },
  {
    "label": "FAndroidDeviceOutputReaderRunnable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAndroidDeviceOutputReaderRunnable"
  },
  {
    "label": "FAndroidTargetDeviceOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAndroidTargetDeviceOutput"
  },
  {
    "label": "FAndroidDeviceOutputReaderRunnable()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" HAL / Runnable . h \" # include \" HAL / RunnableThread . h \" # include \" HAL / PlatformProcess . h \" # include \" Interfaces / ITargetDeviceOutput . h \" # include \" Misc / ConfigCacheIni . h \" # include \" HAL / ThreadSafeCounter . h \" class FAndroidTargetDevice ; class FAndroidDeviceOutputReaderRunnable : public FRunnable { public :)",
    "insertText": "FAndroidDeviceOutputReaderRunnable(const FString& AdbFilename, const FString& DeviceSerialNumber, FOutputDevice* Output)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init(void)"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exit(void)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop(void)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Run(void)"
  },
  {
    "label": "StartLogcatProcess()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "StartLogcatProcess(void)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (private : FThreadSafeCounter StopTaskCounter ; FString AdbFilename ; FString DeviceSerialNumber ; FOutputDevice* Output ; void* LogcatReadPipe ; void* LogcatWritePipe ; FProcHandle LogcatProcHandle ; } ; class FAndroidTargetDeviceOutput : public ITargetDeviceOutput { public : bool)",
    "insertText": "Init(const FAndroidTargetDevice& TargetDevice, FOutputDevice* Output)"
  }
]