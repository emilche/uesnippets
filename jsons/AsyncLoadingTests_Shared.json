[
  {
    "label": "UAsyncLoadingTests_Shared",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAsyncLoadingTests_Shared"
  },
  {
    "label": "FLoadingTestsScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoadingTestsScope"
  },
  {
    "label": "FLoadingTests_ZenLoaderOnly_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoadingTests_ZenLoaderOnly_Base"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / AutomationTest . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / ObjectMacros . h \" # include \" AsyncLoadingTests_Shared . generated . h \")",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (using FOnPostLoadDelegate = TDelegate<)",
    "insertText": "void(UAsyncLoadingTests_Shared*)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (FOnPostLoadDelegate OnPostLoad ; using FOnSerializeDelegate = TDelegate<)",
    "insertText": "void(FArchive& Ar, UAsyncLoadingTests_Shared*)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (FOnSerializeDelegate OnSerialize ; using FOnIsReadyForAsyncPostLoadDelegate = TDelegate<)",
    "insertText": "bool(const UAsyncLoadingTests_Shared*)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (FOnIsReadyForAsyncPostLoadDelegate OnIsPostLoadThreadSafe ; void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnPostLoad .)",
    "insertText": "ExecuteIfBound(this)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(Ar)"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnSerialize .)",
    "insertText": "ExecuteIfBound(Ar, this)"
  },
  {
    "label": "IsReadyForAsyncPostLoad()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsReadyForAsyncPostLoad()"
  },
  {
    "label": "IsPostLoadThreadSafe()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPostLoadThreadSafe()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} } ; # if WITH_DEV_AUTOMATION_TESTS class FLoadingTestsScope { private : FAutomationTestBase& AutomationTest ; TArray<FString> PackageNames ; std::atomic<uint32> PackageIndex ; public : const TCHAR* ObjectName =)",
    "insertText": "TEXT(\"TestObject\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* PackagePath1 =)",
    "insertText": "TEXT(\"/Engine/LoadingTestsScope_Package1\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* ObjectPath1 =)",
    "insertText": "TEXT(\"/Engine/LoadingTestsScope_Package1.TestObject\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* PackagePath2 =)",
    "insertText": "TEXT(\"/Engine/LoadingTestsScope_Package2\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* ObjectPath2 =)",
    "insertText": "TEXT(\"/Engine/LoadingTestsScope_Package2.TestObject\")"
  },
  {
    "label": "CreatePackage()",
    "kind": "Method",
    "detail": "Function (UPackage* Package1 = nullptr ; UPackage* Package2 = nullptr ; UAsyncLoadingTests_Shared* Object1 = nullptr ; UAsyncLoadingTests_Shared* Object2 = nullptr ; UPackage*)",
    "insertText": "CreatePackage()"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString PackageName =)",
    "insertText": "Printf(TEXT(\"/Engine/LoadingTestsScope_Package%u\"), ++PackageIndex)"
  },
  {
    "label": "CreatePackage()",
    "kind": "Method",
    "detail": "Function (UPackage* Package)",
    "insertText": "CreatePackage(*PackageName)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (PackageNames .)",
    "insertText": "Add(PackageName)"
  },
  {
    "label": "DefaultMutateObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefaultMutateObjects()"
  },
  {
    "label": "SavePackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePackages()"
  },
  {
    "label": "LoadObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadObjects()"
  },
  {
    "label": "CleanupObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupObjects()"
  },
  {
    "label": "GarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GarbageCollect()"
  },
  {
    "label": "GarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GarbageCollect(const TArray<FString>& PackageNames, FAutomationTestBase& AutomationTest)"
  },
  {
    "label": "FLoadingTestsScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLoadingTestsScope(FAutomationTestBase* InAutomationTest, TFunction<void (FLoadingTestsScope&)> InMutateObjects = nullptr) : AutomationTest(*InAutomationTest)"
  },
  {
    "label": "FlushAsyncLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAsyncLoading()"
  },
  {
    "label": "CreateObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateObjects()"
  },
  {
    "label": "InMutateObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InMutateObjects(*this)"
  },
  {
    "label": "FLoadingTestsScope()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FLoadingTestsScope()"
  },
  {
    "label": "CanRunInEnvironment()",
    "kind": "Method",
    "detail": "Function (} } ; class FLoadingTests_ZenLoaderOnly_Base : public FAutomationTestBase { public : using FAutomationTestBase::FAutomationTestBase ; protected : bool)",
    "insertText": "CanRunInEnvironment(const FString& TestParams, FString* OutReason, bool* OutWarn)"
  },
  {
    "label": "GetLoaderType()",
    "kind": "Method",
    "detail": "Function (ELoaderType LoaderType =)",
    "insertText": "GetLoaderType()"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (* OutReason =)",
    "insertText": "Printf(TEXT(\"Test %s is for ZenLoader only. Cannot run on non-compliant loader currently active: %s\"), *GetTestName(), LexToString(LoaderType))"
  },
  {
    "label": "IsAssetSuitableForTests()",
    "kind": "Method",
    "detail": "Function (} return false ; } return true ; } } ; # endif namespace LoadingTestsUtils { bool)",
    "insertText": "IsAssetSuitableForTests(const FAssetData& AssetData)"
  }
]