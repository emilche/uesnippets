[
  {
    "label": "FBasicRayTracingRay",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBasicRayTracingRay"
  },
  {
    "label": "FBasicRayTracingIntersectionResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBasicRayTracingIntersectionResult"
  },
  {
    "label": "FBasicOcclusionMainRGS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBasicOcclusionMainRGS"
  },
  {
    "label": "FBasicIntersectionMainRGS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBasicIntersectionMainRGS"
  },
  {
    "label": "FBasicIntersectionMainCHS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBasicIntersectionMainCHS"
  },
  {
    "label": "DECLARE_GLOBAL_SHADER()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BuiltInRayTracingShaders . h \" # if RHI_RAYTRACING # include \" RayTracingPayloadType . h \" struct FBasicRayTracingRay { float Origin [ 3 ] ; uint32 Mask ; float Direction [ 3 ] ; float TFar ; } ; struct FBasicRayTracingIntersectionResult { float HitT ; uint32 PrimitiveIndex ; uint32 InstanceIndex ; float Barycentrics [ 2 ] ; } ; class FBasicOcclusionMainRGS : public FBuiltInRayTracingShader {)",
    "insertText": "DECLARE_GLOBAL_SHADER(FBasicOcclusionMainRGS)"
  },
  {
    "label": "SHADER_USE_ROOT_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SHADER_USE_ROOT_PARAMETER_STRUCT(FBasicOcclusionMainRGS, FBuiltInRayTracingShader)"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FParameters, ) SHADER_PARAMETER_SRV(RaytracingAccelerationStructure, TLAS) SHADER_PARAMETER_SRV(StructuredBuffer<FBasicRayData>, Rays) SHADER_PARAMETER_UAV(RWStructuredBuffer<uint>, OcclusionOutput) END_SHADER_PARAMETER_STRUCT() static ERayTracingPayloadType GetRayTracingPayloadType(const int32 PermutationId)"
  },
  {
    "label": "SHADER_USE_ROOT_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SHADER_USE_ROOT_PARAMETER_STRUCT(FBasicIntersectionMainRGS, FBuiltInRayTracingShader)"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FParameters, ) SHADER_PARAMETER_SRV(RaytracingAccelerationStructure, TLAS) SHADER_PARAMETER_SRV(StructuredBuffer<FBasicRayData>, Rays) SHADER_PARAMETER_UAV(RWStructuredBuffer<FIntersectionPayload>, IntersectionOutput) END_SHADER_PARAMETER_STRUCT() static ERayTracingPayloadType GetRayTracingPayloadType(const int32 PermutationId)"
  },
  {
    "label": "FBasicIntersectionMainCHS()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FBasicIntersectionMainCHS()"
  },
  {
    "label": "FBasicIntersectionMainCHS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBasicIntersectionMainCHS(const ShaderMetaType::CompiledShaderInitializerType& Initializer) : FBuiltInRayTracingShader(Initializer)"
  },
  {
    "label": "GetRayTracingPayloadType()",
    "kind": "Method",
    "detail": "Function (} ERayTracingPayloadType)",
    "insertText": "GetRayTracingPayloadType(const int32 PermutationId)"
  },
  {
    "label": "DispatchBasicIntersectionRays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchBasicIntersectionRays(FRHICommandList& RHICmdList, FRHIShaderResourceView* SceneView, FRHIRayTracingGeometry* Geometry, FRHIShaderResourceView* RayBufferView, FRHIUnorderedAccessView* ResultView, uint32 NumRays)"
  }
]