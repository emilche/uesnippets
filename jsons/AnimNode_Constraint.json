[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FConstraint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraint"
  },
  {
    "label": "FAnimNode_Constraint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_Constraint"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BoneControllers / AnimNode_SkeletalControlBase . h \" # include \" Constraint . h \" # include \" EngineDefines . h \" # include \" AnimNode_Constraint . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (None,Offset_RefPose } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category = FConstraint)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (int32 ConstraintDataIndex ; void)",
    "insertText": "Initialize(const FBoneContainer& RequiredBones)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (TargetBone .)",
    "insertText": "Initialize(RequiredBones)"
  },
  {
    "label": "IsValidToEvaluate()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValidToEvaluate(const FBoneContainer& RequiredBones)"
  },
  {
    "label": "FConstraint()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FConstraint() : OffsetOption(EConstraintOffsetOption::Offset_RefPose) , TransformType(ETransformConstraintType::Translation) , ConstraintDataIndex(INDEX_NONE)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category = SkeletalControl)"
  },
  {
    "label": "FAnimNode_Constraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimNode_Constraint()"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "EvaluateSkeletalControl_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluateSkeletalControl_AnyThread(FComponentSpacePoseContext& Output, TArray<FBoneTransform>& OutBoneTransforms)"
  },
  {
    "label": "IsValidToEvaluate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidToEvaluate(const USkeleton* Skeleton, const FBoneContainer& RequiredBones)"
  },
  {
    "label": "ConditionalDebugDraw()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "ConditionalDebugDraw(FPrimitiveDrawInterface* PDI, USkeletalMeshComponent* MeshComp)"
  },
  {
    "label": "InitializeBoneReferences()",
    "kind": "Method",
    "detail": "Function (# endif private : void)",
    "insertText": "InitializeBoneReferences(const FBoneContainer& RequiredBones)"
  }
]