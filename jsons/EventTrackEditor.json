[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FEventTrackEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventTrackEditor"
  },
  {
    "label": "CreateTrackEditor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Guid . h \" # include \" Templates / SubclassOf . h \" # include \" ISequencer . h \" # include \" MovieSceneTrack . h \" # include \" ISequencerSection . h \" # include \" ISequencerTrackEditor . h \" # include \" MovieSceneTrackEditor . h \" class FMenuBuilder ; class FEventTrackEditor : public FMovieSceneTrackEditor { public : TSharedRef<ISequencerTrackEditor>)",
    "insertText": "CreateTrackEditor(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "FEventTrackEditor()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FEventTrackEditor(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "BuildAddTrackMenu()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "BuildAddTrackMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "BuildObjectBindingTrackMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildObjectBindingTrackMenu(FMenuBuilder& MenuBuilder, const TArray<FGuid>& ObjectBindings, const UClass* ObjectClass)"
  },
  {
    "label": "SupportsType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsType(TSubclassOf<UMovieSceneTrack> Type)"
  },
  {
    "label": "SupportsSequence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsSequence(UMovieSceneSequence* InSequence)"
  },
  {
    "label": "GetIconBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetIconBrush()"
  },
  {
    "label": "BuildTrackContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTrackContextMenu(FMenuBuilder& MenuBuilder, UMovieSceneTrack* Track)"
  },
  {
    "label": "BuildOutlinerEditWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "BuildOutlinerEditWidget(const FGuid& ObjectBinding, UMovieSceneTrack* Track, const FBuildEditWidgetParams& Params)"
  },
  {
    "label": "MakeSectionInterface()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISequencerSection>)",
    "insertText": "MakeSectionInterface(UMovieSceneSection& SectionObject, UMovieSceneTrack& Track, FGuid ObjectBinding)"
  },
  {
    "label": "AddEventSubMenu()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddEventSubMenu(FMenuBuilder& MenuBuilder, TArray<FGuid>)"
  },
  {
    "label": "HandleAddEventTrackMenuEntryExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAddEventTrackMenuEntryExecute(TArray<FGuid> InObjectBindingIDs, UClass* SectionType)"
  },
  {
    "label": "CreateNewSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewSection(UMovieSceneTrack* Track, int32 RowIndex, UClass* SectionType, bool bSelect)"
  }
]