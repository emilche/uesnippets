[
  {
    "label": "TaskEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TaskEvent"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "SequencedTaskTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SequencedTaskTracker"
  },
  {
    "label": "RefCountedThreadSafe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RefCountedThreadSafe"
  },
  {
    "label": "SequencedTaskRunnerTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SequencedTaskRunnerTest"
  },
  {
    "label": "SequencedTaskTracker()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SequencedTaskTracker()"
  },
  {
    "label": "PostWrappedNonNestableTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostWrappedNonNestableTask(SequencedTaskRunner* task_runner,\n                                  OnceClosure task)"
  },
  {
    "label": "PostWrappedNestableTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostWrappedNestableTask(SequencedTaskRunner* task_runner,\n                               OnceClosure task)"
  },
  {
    "label": "PostWrappedDelayedNonNestableTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostWrappedDelayedNonNestableTask(SequencedTaskRunner* task_runner,\n                                         OnceClosure task,\n                                         TimeDelta delay)"
  },
  {
    "label": "PostNonNestableTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostNonNestableTasks(SequencedTaskRunner* task_runner, int task_count)"
  },
  {
    "label": "WaitForCompletedTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForCompletedTasks(int count)"
  },
  {
    "label": "RunTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunTask(OnceClosure task, int task_i)"
  },
  {
    "label": "TaskPosted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskPosted(int i)"
  },
  {
    "label": "TaskStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskStarted(int i)"
  },
  {
    "label": "TaskEnded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskEnded(int i)"
  },
  {
    "label": "PrintTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintTo(const TaskEvent& event, std::ostream* os)"
  },
  {
    "label": "CheckNonNestableInvariants()",
    "kind": "Method",
    "detail": "Function (testing::AssertionResult)",
    "insertText": "CheckNonNestableInvariants(\n    const std::vector<TaskEvent>& events,\n    int task_count)"
  }
]