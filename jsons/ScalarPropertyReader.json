[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "ScalarPropertyReader()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcCoreAbstract_ScalarPropertyReader_h # define Alembic_AbcCoreAbstract_ScalarPropertyReader_h # include<Alembic / Util / Export . h> # include<Alembic / AbcCoreAbstract / Foundation . h> # include<Alembic / AbcCoreAbstract / BasePropertyReader . h> namespace Alembic { namespace AbcCoreAbstract { namespace ALEMBIC_VERSION_NS { class ALEMBIC_EXPORT ScalarPropertyReader : public BasePropertyReader { public : ~)",
    "insertText": "ScalarPropertyReader()"
  },
  {
    "label": "getNumSamples()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumSamples()"
  },
  {
    "label": "isConstant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isConstant()"
  },
  {
    "label": "getSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getSample(index_t iSample, void *iIntoLocation)"
  },
  {
    "label": "getFloorIndex()",
    "kind": "Method",
    "detail": "Function (std::pair<index_t,chrono_t>)",
    "insertText": "getFloorIndex(chrono_t iTime)"
  },
  {
    "label": "getCeilIndex()",
    "kind": "Method",
    "detail": "Function (std::pair<index_t,chrono_t>)",
    "insertText": "getCeilIndex(chrono_t iTime)"
  },
  {
    "label": "getNearIndex()",
    "kind": "Method",
    "detail": "Function (std::pair<index_t,chrono_t>)",
    "insertText": "getNearIndex(chrono_t iTime)"
  }
]