[
  {
    "label": "FMeshingTolerances",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshingTolerances"
  },
  {
    "label": "FMeshingTolerances()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Core / Types . h \" namespace UE::CADKernel { namespace MeshConst { double MinCurvature = 0 . 0 0 1 ; double GeometricToMeshingToleranceFactor = 1 0 . ; double ElementRatioVsThickness = 2 0 . ; } class FMeshingTolerances { public : const double GeometricTolerance ; const double GeometricToleranceSqrt2 ; const double SquareGeometricTolerance ; const double SquareGeometricTolerance2 ; const double MeshingTolerance ; const double SquareMeshingTolerance ;)",
    "insertText": "FMeshingTolerances(double InGeometricTolerance3D) : GeometricTolerance(InGeometricTolerance3D) , GeometricToleranceSqrt2(InGeometricTolerance3D * UE_DOUBLE_SQRT_2) , SquareGeometricTolerance(FMath::Square(GeometricTolerance)) , SquareGeometricTolerance2(2. * SquareGeometricTolerance) , MeshingTolerance(GeometricTolerance * MeshConst::GeometricToMeshingToleranceFactor) , SquareMeshingTolerance(FMath::Square(MeshingTolerance))"
  }
]