[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraph"
  },
  {
    "label": "FRenderingParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderingParameters"
  },
  {
    "label": "IDataflowConstructionViewMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDataflowConstructionViewMode"
  },
  {
    "label": "FRenderingFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderingFacade"
  },
  {
    "label": "UDataflowEdNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataflowEdNode"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Dataflow / DataflowCore . h \" # include \" EdGraph / EdGraph . h \" # include \" EdGraph / EdGraphNode . h \" # include \" GeometryCollection / GeometryCollection . h \" # include \" Internationalization / Text . h \" # include \" Misc / Build . h \" # include \" Misc / Guid . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" DataflowEdNode . generated . h \" class FArchive ; class UEdGraphPin ; class UObject ; namespace UE::Dataflow { class FGraph ; class FRenderingParameters ; class IDataflowConstructionViewMode ; } namespace GeometryCollection::Facades { class FRenderingFacade ; })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "AllocateDefaultPins()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<UE::Dataflow::FGraph> DataflowGraph ; public : void)",
    "insertText": "AllocateDefaultPins()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "WITH_EDITOR()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "WITH_EDITOR(UE_BUILD_SHIPPING || UE_BUILD_TEST) DATAFLOWENGINE_API virtual void PinConnectionListChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "GetIconAndTint()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR FSlateIcon)",
    "insertText": "GetIconAndTint(FLinearColor& OutColor)"
  },
  {
    "label": "ShowPaletteIconOnNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShowPaletteIconOnNode()"
  },
  {
    "label": "GetNodeTitleColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeTitleColor()"
  },
  {
    "label": "GetNodeBodyTintColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeBodyTintColor()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetPinHoverText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPinHoverText(const UEdGraphPin& Pin, FString& HoverTextOut)"
  },
  {
    "label": "GetPinDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPinDisplayName(const UEdGraphPin* Pin)"
  },
  {
    "label": "AutowireNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutowireNewNode(UEdGraphPin* FromPin)"
  },
  {
    "label": "OnPinRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPinRemoved(UEdGraphPin* InRemovedPin)"
  },
  {
    "label": "ShouldDrawNodeAsControlPointOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldDrawNodeAsControlPointOnly(int32& OutInputPinIndex, int32& OutOutputPinIndex)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "IsBound()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBound()"
  },
  {
    "label": "GetDataflowGraph()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<UE::Dataflow::FGraph>)",
    "insertText": "GetDataflowGraph()"
  },
  {
    "label": "UpdatePinsFromDataflowNode()",
    "kind": "Method",
    "detail": "Function (DataflowGraph = InDataflowGraph ; } void)",
    "insertText": "UpdatePinsFromDataflowNode()"
  },
  {
    "label": "GetDataflowNodeGuid()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GetDataflowNodeGuid()"
  },
  {
    "label": "GetDataflowNode()",
    "kind": "Method",
    "detail": "Function (DataflowNodeGuid = InGuid ; } TSharedPtr<FDataflowNode>)",
    "insertText": "GetDataflowNode()"
  },
  {
    "label": "AddOptionPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOptionPin()"
  },
  {
    "label": "RemoveOptionPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveOptionPin()"
  },
  {
    "label": "PinIsCompatibleWithType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PinIsCompatibleWithType(const UEdGraphPin& Pin, const FEdGraphPinType& PinType)"
  },
  {
    "label": "HideAllInputPins()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "HideAllInputPins()"
  },
  {
    "label": "ShowAllInputPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowAllInputPins()"
  },
  {
    "label": "ToggleHideInputPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleHideInputPin(FName PinName)"
  },
  {
    "label": "CanToggleHideInputPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanToggleHideInputPin(FName PinName)"
  },
  {
    "label": "IsInputPinShown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInputPinShown(FName PinName)"
  },
  {
    "label": "SetShouldRenderNode()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "SetShouldRenderNode(bool bInRender)"
  },
  {
    "label": "ShouldRenderNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderNode()"
  },
  {
    "label": "ShouldWireframeRenderNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldWireframeRenderNode()"
  },
  {
    "label": "CanEnableWireframeRenderNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEnableWireframeRenderNode()"
  },
  {
    "label": "GetRenderParameters()",
    "kind": "Method",
    "detail": "Function (TArray<UE::Dataflow::FRenderingParameter>)",
    "insertText": "GetRenderParameters()"
  },
  {
    "label": "OnPinConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPinConnection(const UEdGraphPin& Pin, const FEdGraphPinType& Type)"
  },
  {
    "label": "OnPinDisconnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPinDisconnection(const UEdGraphPin& Pin)"
  },
  {
    "label": "SetAnyTypePinsToType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnyTypePinsToType(const FEdGraphPinType& Type)"
  }
]