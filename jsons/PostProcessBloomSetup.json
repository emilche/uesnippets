[
  {
    "label": "FSceneDownsampleChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneDownsampleChain"
  },
  {
    "label": "FEyeAdaptationParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEyeAdaptationParameters"
  },
  {
    "label": "FLocalExposureParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalExposureParameters"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FBloomSetupInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBloomSetupInputs"
  },
  {
    "label": "GetBloomQuality()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ScreenPass . h \" class FSceneDownsampleChain ; class FEyeAdaptationParameters ; class FLocalExposureParameters ; enum class EBloomQuality : uint32 { Disabled,Q1,Q2,Q3,Q4,Q5,MAX } ; EBloomQuality)",
    "insertText": "GetBloomQuality()"
  },
  {
    "label": "AddGaussianBloomPasses()",
    "kind": "Method",
    "detail": "Function (FScreenPassTexture)",
    "insertText": "AddGaussianBloomPasses(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FSceneDownsampleChain* SceneDownsampleChain)"
  },
  {
    "label": "AddBloomSetupPass()",
    "kind": "Method",
    "detail": "Function (struct FBloomSetupInputs { FScreenPassTextureSlice SceneColor ; FRDGBufferRef EyeAdaptationBuffer = nullptr ; float Threshold = 0 . 0 f ; const FEyeAdaptationParameters* EyeAdaptationParameters = nullptr ; const FLocalExposureParameters* LocalExposureParameters = nullptr ; FRDGTextureRef LocalExposureTexture = nullptr ; FRDGTextureRef BlurredLogLuminanceTexture = nullptr ; } ; FScreenPassTexture)",
    "insertText": "AddBloomSetupPass(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FBloomSetupInputs& Inputs)"
  }
]