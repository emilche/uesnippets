[
  {
    "label": "FBufferReaderBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBufferReaderBase"
  },
  {
    "label": "FBufferReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBufferReader"
  },
  {
    "label": "FBufferReaderBase()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" # include \" HAL / UnrealMemory . h \" # include \" Serialization / Archive . h \" # include \" Containers / UnrealString . h \" class FBufferReaderBase : public FArchive { public :)",
    "insertText": "FBufferReaderBase(void* Data, int64 Size, bool bInFreeOnClose, bool bIsPersistent = false) : ReaderData(Data) , ReaderPos(0) , ReaderSize(Size) , bFreeOnClose(bInFreeOnClose)"
  },
  {
    "label": "SetIsLoading()",
    "kind": "Method",
    "detail": "Function (this ->)",
    "insertText": "SetIsLoading(true)"
  },
  {
    "label": "SetIsPersistent()",
    "kind": "Method",
    "detail": "Function (this ->)",
    "insertText": "SetIsPersistent(bIsPersistent)"
  },
  {
    "label": "FBufferReaderBase()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FBufferReaderBase()"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Close()"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(ReaderData)"
  },
  {
    "label": "IsError()",
    "kind": "Method",
    "detail": "Function (ReaderData = nullptr ; } return !)",
    "insertText": "IsError()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(void* Data, int64 Num)"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memcpy(Data, (uint8*)ReaderData + ReaderPos, Num)"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (ReaderPos + = Num ; } int64)",
    "insertText": "Tell()"
  },
  {
    "label": "AtEnd()",
    "kind": "Method",
    "detail": "Function (ReaderPos = InPos ; } bool)",
    "insertText": "AtEnd()"
  },
  {
    "label": "FBufferReader()",
    "kind": "Method",
    "detail": "Function (} class FBufferReader final : public FBufferReaderBase { public :)",
    "insertText": "FBufferReader(void* Data, int64 Size, bool bInFreeOnClose, bool bIsPersistent = false ) : FBufferReaderBase(Data, Size, bInFreeOnClose, bIsPersistent)"
  },
  {
    "label": "FBufferReader()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FBufferReader()"
  },
  {
    "label": "GetArchiveName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetArchiveName()"
  }
]