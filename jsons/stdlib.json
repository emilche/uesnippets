[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__need_malloc_and_calloc) #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif #include_next <stdlib.h> #elif !defined(_LIBCPP_STDLIB_H) #define _LIBCPP_STDLIB_H #include <__config> #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifdef abs # undef abs # endif # ifdef labs # undef labs # endif # ifdef llabs # undef llabs # endif # if !)",
    "insertText": "defined(_LIBCPP_MSVCRT) && !defined(__sun__) inline _LIBCPP_INLINE_VISIBILITY long abs(long __x)"
  },
  {
    "label": "abs()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_INLINE_VISIBILITY long long)",
    "insertText": "abs(long long __x)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} # endif # if !)",
    "insertText": "defined(__sun__) inline _LIBCPP_INLINE_VISIBILITY float abs(float __lcpp_x)"
  },
  {
    "label": "abs()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_INLINE_VISIBILITY double)",
    "insertText": "abs(double __lcpp_x)"
  },
  {
    "label": "abs()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_INLINE_VISIBILITY long double)",
    "insertText": "abs(long double __lcpp_x)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} # endif # ifdef div # undef div # endif # ifdef ldiv # undef ldiv # endif # ifdef lldiv # undef lldiv # endif # if !)",
    "insertText": "defined(_LIBCPP_MSVCRT) && !defined(__sun__) inline _LIBCPP_INLINE_VISIBILITY ldiv_t div(long __x, long __y)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} #)",
    "insertText": "if(defined(__FreeBSD__) && !defined(__LONG_LONG_SUPPORTED)) inline _LIBCPP_INLINE_VISIBILITY lldiv_t div(long long __x, long long __y)"
  }
]