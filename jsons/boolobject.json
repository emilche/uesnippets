[
  {
    "label": "PyAPI_DATA()",
    "kind": "Method",
    "detail": "Function (# ifndef Py_BOOLOBJECT_H # define Py_BOOLOBJECT_H # ifdef __cplusplus \" C \" { # endif)",
    "insertText": "PyAPI_DATA(PyTypeObject)"
  },
  {
    "label": "PyBool_Check()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "PyBool_Check(x) Py_IS_TYPE(x, &PyBool_Type) PyAPI_DATA(PyLongObject)"
  },
  {
    "label": "PyAPI_DATA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_DATA(PyLongObject)"
  },
  {
    "label": "Py_False()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "Py_False((PyObject *) &_Py_FalseStruct) #define Py_True ((PyObject *) &_Py_TrueStruct) PyAPI_FUNC(int) Py_IsTrue(PyObject *x)"
  },
  {
    "label": "Py_IsTrue()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "Py_IsTrue(x) Py_Is((x), Py_True) PyAPI_FUNC(int) Py_IsFalse(PyObject *x)"
  },
  {
    "label": "Py_IsFalse()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "Py_IsFalse(x) Py_Is((x), Py_False) #define Py_RETURN_TRUE return Py_NewRef(Py_True) #define Py_RETURN_FALSE return Py_NewRef(Py_False) PyAPI_FUNC(PyObject *) PyBool_FromLong(long)"
  }
]