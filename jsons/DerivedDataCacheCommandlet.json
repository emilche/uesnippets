[
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UDerivedDataCacheCommandlet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDerivedDataCacheCommandlet"
  },
  {
    "label": "FCachingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachingData"
  },
  {
    "label": "FPackageListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageListener"
  },
  {
    "label": "FObjectReferencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectReferencer"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Commandlets / Commandlet . h \" # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" DerivedDataCacheCommandlet . generated . h \" class ITargetPlatform ; class UPackage ; class UWorld ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UDerivedDataCacheCommandlet(FVTableHelper& Helper)"
  },
  {
    "label": "UDerivedDataCacheCommandlet()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UDerivedDataCacheCommandlet()"
  },
  {
    "label": "Main()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Main(const FString& Params)"
  },
  {
    "label": "MaybeMarkPackageAsAlreadyLoaded()",
    "kind": "Method",
    "detail": "Function (struct FCachingData { TWeakObjectPtr<UObject> ObjectValidityReference ; TBitArray<> PlatformIsComplete ; double LastTimeTested = 0 . ; bool bFirstPlatformIsSolo = false ; } ; TMap<TObjectPtr<UObject>,FCachingData> CachingObjects ; TSet<FName> ProcessedPackages ; TSet<FName> PackagesToProcess ; TArray<const ITargetPlatform*> Platforms ; double FinishCacheTime = 0 . 0 ; double BeginCacheTime = 0 . 0 ; bool bSharedLinearTextureEncodingEnabled = false ; class FPackageListener ; TUniquePtr<FPackageListener> PackageListener ; class FObjectReferencer ; TUniquePtr<FObjectReferencer> ObjectReferencer ; void)",
    "insertText": "MaybeMarkPackageAsAlreadyLoaded(UPackage *Package)"
  },
  {
    "label": "CacheLoadedPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheLoadedPackages(UPackage* CurrentPackage, uint8 PackageFilter, TSet<FName>& OutNewProcessedPackages)"
  },
  {
    "label": "CacheWorldPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheWorldPackages(UWorld* World, uint8 PackageFilter, TSet<FName>& OutNewProcessedPackages)"
  },
  {
    "label": "ProcessCachingObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessCachingObjects()"
  },
  {
    "label": "FinishCachingObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCachingObjects()"
  }
]