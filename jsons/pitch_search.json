[
  {
    "label": "PitchEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PitchEstimator"
  },
  {
    "label": "PitchEstimator()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_PITCH_SEARCH_H_ # define MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_PITCH_SEARCH_H_ # include<memory> # include<vector> # include \" api / array_view . h \" # include \" modules / audio_processing / agc2 / cpu_features . h \" # include \" modules / audio_processing / agc2 / rnn_vad / auto_correlation . h \" # include \" modules / audio_processing / agc2 / rnn_vad / common . h \" # include \" modules / audio_processing / agc2 / rnn_vad / pitch_search_internal . h \" # include \" rtc_base / gtest_prod_util . h \" namespace webrtc { namespace rnn_vad { class PitchEstimator { public :)",
    "insertText": "PitchEstimator(const AvailableCpuFeatures& cpu_features)"
  },
  {
    "label": "PitchEstimator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PitchEstimator(const PitchEstimator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (PitchEstimator&)",
    "insertText": "operator(const PitchEstimator&)"
  },
  {
    "label": "PitchEstimator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "PitchEstimator()"
  },
  {
    "label": "Estimate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Estimate(rtc::ArrayView<const float, kBufSize24kHz> pitch_buffer)"
  },
  {
    "label": "FRIEND_TEST_ALL_PREFIXES()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FRIEND_TEST_ALL_PREFIXES(RnnVadTest, PitchSearchWithinTolerance)"
  },
  {
    "label": "GetLastPitchStrengthForTesting()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetLastPitchStrengthForTesting()"
  }
]