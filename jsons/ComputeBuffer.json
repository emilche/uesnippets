[
  {
    "label": "FHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeader"
  },
  {
    "label": "FComputeBufferDetail",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComputeBufferDetail"
  },
  {
    "label": "FComputeBufferReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComputeBufferReader"
  },
  {
    "label": "FComputeBufferWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComputeBufferWriter"
  },
  {
    "label": "FComputeBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComputeBuffer"
  },
  {
    "label": "FParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParams"
  },
  {
    "label": "FWorkerComputeSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkerComputeSocket"
  },
  {
    "label": "FComputeBufferReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComputeBufferReader"
  },
  {
    "label": "FReaderRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReaderRef"
  },
  {
    "label": "FComputeBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComputeBuffer"
  },
  {
    "label": "FWorkerComputeSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkerComputeSocket"
  },
  {
    "label": "FComputeBufferWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComputeBufferWriter"
  },
  {
    "label": "FComputeBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComputeBuffer"
  },
  {
    "label": "FWorkerComputeSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkerComputeSocket"
  },
  {
    "label": "FComputeBuffer()",
    "kind": "Method",
    "detail": "Function (HORDE_API)",
    "insertText": "FComputeBuffer()"
  },
  {
    "label": "FComputeBuffer()",
    "kind": "Method",
    "detail": "Function (HORDE_API)",
    "insertText": "FComputeBuffer(const FComputeBuffer& Other)"
  },
  {
    "label": "CreateNew()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateNew(const FParams& Params)"
  },
  {
    "label": "OpenExisting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenExisting(const char* Name)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "CreateReader()",
    "kind": "Method",
    "detail": "Function (FComputeBufferReader)",
    "insertText": "CreateReader()"
  },
  {
    "label": "CreateWriter()",
    "kind": "Method",
    "detail": "Function (FComputeBufferWriter)",
    "insertText": "CreateWriter()"
  },
  {
    "label": "FComputeBufferReader()",
    "kind": "Method",
    "detail": "Function (HORDE_API)",
    "insertText": "FComputeBufferReader()"
  },
  {
    "label": "FComputeBufferReader()",
    "kind": "Method",
    "detail": "Function (HORDE_API)",
    "insertText": "FComputeBufferReader(const FComputeBufferReader& Other)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "Detach()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Detach()"
  },
  {
    "label": "AdvanceReadPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceReadPosition(size_t Size)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Read(void* Buffer, size_t MaxSize, int TimeoutMs = -1)"
  },
  {
    "label": "FComputeBufferWriter()",
    "kind": "Method",
    "detail": "Function (HORDE_API)",
    "insertText": "FComputeBufferWriter()"
  },
  {
    "label": "FComputeBufferWriter()",
    "kind": "Method",
    "detail": "Function (HORDE_API)",
    "insertText": "FComputeBufferWriter(const FComputeBufferWriter& Other)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "MarkComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkComplete()"
  },
  {
    "label": "AdvanceWritePosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceWritePosition(size_t Size)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Write(const void* Buffer, size_t MaxSize, int TimeoutMs = -1)"
  }
]