[
  {
    "label": "gc_generation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "gc_generation"
  },
  {
    "label": "gc_generation_stats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "gc_generation_stats"
  },
  {
    "label": "_gc_runtime_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_gc_runtime_state"
  },
  {
    "label": "_Py_AS_GC()",
    "kind": "Method",
    "detail": "Function (# ifndef Py_INTERNAL_GC_H # define Py_INTERNAL_GC_H # ifdef __cplusplus \" C \" { # endif # ifndef Py_BUILD_CORE # error \" this header requires Py_BUILD_CORE define \" # endif typedef struct { uintptr_t _gc_next ; uintptr_t _gc_prev ; } PyGC_Head ; # define)",
    "insertText": "_Py_AS_GC(o) ((PyGC_Head *)(o)-1) #define _PyGC_Head_UNUSED PyGC_Head #define _PyObject_GC_IS_TRACKED(o) (_Py_AS_GC(o)->_gc_next != 0) #define _PyObject_GC_MAY_BE_TRACKED(obj) \\ (PyObject_IS_GC(obj) && \\ (!PyTuple_CheckExact(obj) || _PyObject_GC_IS_TRACKED(obj))) #define _PyGC_PREV_MASK_FINALIZED (1) #define _PyGC_PREV_MASK_COLLECTING (2) #define _PyGC_PREV_SHIFT (2) #define _PyGC_PREV_MASK (((uintptr_t) -1) << _PyGC_PREV_SHIFT) #define _PyGCHead_NEXT(g) ((PyGC_Head*)(g)->_gc_next) #define _PyGCHead_SET_NEXT(g, p) _Py_RVALUE((g)->_gc_next = (uintptr_t)(p)) #define _PyGCHead_PREV(g) ((PyGC_Head*)((g)->_gc_prev & _PyGC_PREV_MASK)) #define _PyGCHead_SET_PREV(g, p)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "assert(((uintptr_t)p & ~_PyGC_PREV_MASK) == 0)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define _PyGCHead_FINALIZED(g) \\ (((g)->_gc_prev & _PyGC_PREV_MASK_FINALIZED) != 0) #define _PyGCHead_SET_FINALIZED(g) \\ _Py_RVALUE((g)->_gc_prev |= _PyGC_PREV_MASK_FINALIZED) #define _PyGC_FINALIZED(o) \\ _PyGCHead_FINALIZED(_Py_AS_GC(o)) #define _PyGC_SET_FINALIZED(o) \\ _PyGCHead_SET_FINALIZED(_Py_AS_GC(o))"
  },
  {
    "label": "_PyGC_InitState()",
    "kind": "Method",
    "detail": "Function (PyGC_Head head ; int threshold ; int count ; } ; struct gc_generation_stats { Py_ssize_t collections ; Py_ssize_t collected ; Py_ssize_t uncollectable ; } ; struct _gc_runtime_state { PyObject* trash_delete_later ; int trash_delete_nesting ; int enabled ; int debug ; struct gc_generation generations [ NUM_GENERATIONS ] ; PyGC_Head* generation0 ; struct gc_generation permanent_generation ; struct gc_generation_stats generation_stats [ NUM_GENERATIONS ] ; int collecting ; PyObject* garbage ; PyObject* callbacks ; Py_ssize_t long_lived_total ; Py_ssize_t long_lived_pending ; } ; void)",
    "insertText": "_PyGC_InitState(struct _gc_runtime_state *)"
  },
  {
    "label": "_PyGC_CollectNoFail()",
    "kind": "Method",
    "detail": "Function (Py_ssize_t)",
    "insertText": "_PyGC_CollectNoFail(PyThreadState *tstate)"
  },
  {
    "label": "_PyTuple_ClearFreeList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_PyTuple_ClearFreeList(PyInterpreterState *interp)"
  },
  {
    "label": "_PyFloat_ClearFreeList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_PyFloat_ClearFreeList(PyInterpreterState *interp)"
  },
  {
    "label": "_PyList_ClearFreeList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_PyList_ClearFreeList(PyInterpreterState *interp)"
  },
  {
    "label": "_PyDict_ClearFreeList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_PyDict_ClearFreeList(PyInterpreterState *interp)"
  },
  {
    "label": "_PyAsyncGen_ClearFreeLists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_PyAsyncGen_ClearFreeLists(PyInterpreterState *interp)"
  },
  {
    "label": "_PyContext_ClearFreeList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_PyContext_ClearFreeList(PyInterpreterState *interp)"
  }
]