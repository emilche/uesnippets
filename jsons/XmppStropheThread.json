[
  {
    "label": "FRunnableThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRunnableThread"
  },
  {
    "label": "FXmppConnectionStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppConnectionStrophe"
  },
  {
    "label": "FStropheStanza",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStropheStanza"
  },
  {
    "label": "FXmppStropheThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppStropheThread"
  },
  {
    "label": "FXmppStropheThread()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" XmppConnection . h \" # include \" XmppStrophe / StropheConnection . h \" # include \" HAL / ThreadSafeBool . h \" # include \" HAL / Runnable . h \" # include \" Containers / Queue . h \" # if WITH_XMPP_STROPHE class FRunnableThread ; class FXmppConnectionStrophe ; class FStropheStanza ; class FXmppStropheThread : public FRunnable { public :)",
    "insertText": "FXmppStropheThread(FXmppConnectionStrophe& InConnectionManager, const FXmppUserJid& InUser, const FString& InAuth, const FXmppServer& InServerConfiguration)"
  },
  {
    "label": "FXmppStropheThread()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FXmppStropheThread()"
  },
  {
    "label": "SendStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendStanza(FStropheStanza&& Stanza)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Run()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exit()"
  },
  {
    "label": "SendQueuedStanza()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SendQueuedStanza()"
  }
]