[
  {
    "label": "exception_context",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "exception_context"
  },
  {
    "label": "define_exception_type()",
    "kind": "Method",
    "detail": "Function (# ifndef CEXCEPT_H # define CEXCEPT_H # include<setjmp . h> # define)",
    "insertText": "define_exception_type(etype)"
  },
  {
    "label": "init_exception_context()",
    "kind": "Method",
    "detail": "Function (\\ jmp_buf* penv ; \\ int caught ; \\ volatile struct { etype etmp ; } v ; \\ } # define)",
    "insertText": "init_exception_context(ec) ((void)((ec)->penv = 0))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ jmp_buf* exception__prev,exception__env ; \\ exception__prev = the_exception_context -> penv ; \\ the_exception_context -> penv =& exception__env ; \\)",
    "insertText": "if(setjmp(exception__env) == 0)"
  },
  {
    "label": "exception__catch()",
    "kind": "Method",
    "detail": "Function (\\ do # define)",
    "insertText": "exception__catch(action) \\ while (the_exception_context->caught = 0, \\ the_exception_context->caught)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } \\ else { \\ the_exception_context -> caught = 1 ; \\ } \\ the_exception_context -> penv = exception__prev ; \\ } \\)",
    "insertText": "if(!the_exception_context->caught || action)"
  }
]