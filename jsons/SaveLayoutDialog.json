[
  {
    "label": "FSaveLayoutDialogParams",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSaveLayoutDialogParams"
  },
  {
    "label": "FSaveLayoutDialogUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSaveLayoutDialogUtils"
  },
  {
    "label": "FSaveLayoutDialogParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" class FSaveLayoutDialogParams { public :)",
    "insertText": "FSaveLayoutDialogParams(const FString& InDefaultDirectory, const FString& InFileExtension, const TArray<FText>& LayoutNames = TArray<FText>(), const TArray<FText>& LayoutDescriptions = TArray<FText>())"
  },
  {
    "label": "SanitizeText()",
    "kind": "Method",
    "detail": "Function (const FString DefaultDirectory ; const FString FileExtension ; bool bWereFilesSelected ; TArray<FString> LayoutFilePaths ; TArray<FText> LayoutNames ; TArray<FText> LayoutDescriptions ; } ; class FSaveLayoutDialogUtils { public : void)",
    "insertText": "SanitizeText(FString& InOutString)"
  },
  {
    "label": "OverrideLayoutDialog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OverrideLayoutDialog(const FString& LayoutIniFileName)"
  },
  {
    "label": "CreateSaveLayoutAsDialogInStandaloneWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateSaveLayoutAsDialogInStandaloneWindow(const TSharedRef<FSaveLayoutDialogParams>& InSaveLayoutDialogParams)"
  }
]