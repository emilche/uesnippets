[
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "types"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "FAllocatedPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocatedPayload"
  },
  {
    "label": "FDebuggableFragmentType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebuggableFragmentType"
  },
  {
    "label": "FDebuggableFragment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebuggableFragment"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "FUniversalObjectLocatorEmptyPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniversalObjectLocatorEmptyPayload"
  },
  {
    "label": "TUniversalObjectLocatorFragment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TUniversalObjectLocatorFragment"
  },
  {
    "label": "FUniversalObjectLocatorFragment()",
    "kind": "Method",
    "detail": "Function (ArgTypes>)",
    "insertText": "FUniversalObjectLocatorFragment(UE::UniversalObjectLocator::TFragmentTypeHandle<T> InHandle, ArgTypes&& ...InArgs)"
  },
  {
    "label": "FUniversalObjectLocatorFragment()",
    "kind": "Method",
    "detail": "Function (UNIVERSALOBJECTLOCATOR_API)",
    "insertText": "FUniversalObjectLocatorFragment(const UE::UniversalObjectLocator::FFragmentType& InFragmentType)"
  },
  {
    "label": "FUniversalObjectLocatorFragment()",
    "kind": "Method",
    "detail": "Function (UNIVERSALOBJECTLOCATOR_API)",
    "insertText": "FUniversalObjectLocatorFragment(const UObject* InObject, UObject* Context)"
  },
  {
    "label": "FUniversalObjectLocatorFragment()",
    "kind": "Method",
    "detail": "Function (UNIVERSALOBJECTLOCATOR_API)",
    "insertText": "FUniversalObjectLocatorFragment()"
  },
  {
    "label": "FUniversalObjectLocatorFragment()",
    "kind": "Method",
    "detail": "Function (UNIVERSALOBJECTLOCATOR_API)",
    "insertText": "FUniversalObjectLocatorFragment(const FUniversalObjectLocatorFragment& RHS)"
  },
  {
    "label": "FUniversalObjectLocatorFragment()",
    "kind": "Method",
    "detail": "Function (UNIVERSALOBJECTLOCATOR_API)",
    "insertText": "FUniversalObjectLocatorFragment(FUniversalObjectLocatorFragment&& RHS)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FUniversalObjectLocatorFragment& Fragment)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(const UObject* InObject, UObject* Context)"
  },
  {
    "label": "TryParseString()",
    "kind": "Method",
    "detail": "Function (FParseStringResult)",
    "insertText": "TryParseString(FStringView InString, const FParseStringParams& InParams)"
  },
  {
    "label": "TryParseFragmentType()",
    "kind": "Method",
    "detail": "Function (FParseStringResult)",
    "insertText": "TryParseFragmentType(FStringView InString, const FParseStringParams& InParams)"
  },
  {
    "label": "TryParseFragmentPayload()",
    "kind": "Method",
    "detail": "Function (FParseStringResult)",
    "insertText": "TryParseFragmentPayload(FStringView InString, const FParseStringParams& InParams)"
  },
  {
    "label": "TryGetPayloadAs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetPayloadAs(UE::UniversalObjectLocator::TFragmentTypeHandle<T> InType, T*& OutData)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "AddStructReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStructReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "ImportTextItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportTextItem(const TCHAR*& Buffer, int32 PortFlags, UObject* Parent, FOutputDevice* ErrorText, FArchive* InSerializingArchive = nullptr)"
  },
  {
    "label": "SerializeFromMismatchedTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeFromMismatchedTag(const FPropertyTag& Tag, FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "GetPreloadDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPreloadDependencies(TArray<UObject*>& OutDeps)"
  },
  {
    "label": "AllocatePayload()",
    "kind": "Method",
    "detail": "Function (FAllocatedPayload)",
    "insertText": "AllocatePayload(size_t Size, size_t Alignment)"
  },
  {
    "label": "DefaultConstructPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefaultConstructPayload(const UE::UniversalObjectLocator::FFragmentType& InFragmentType)"
  },
  {
    "label": "DestroyPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPayload()"
  }
]