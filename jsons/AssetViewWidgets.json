[
  {
    "label": "FAssetViewItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetViewItem"
  },
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "IToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolTip"
  },
  {
    "label": "SAssetListItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetListItem"
  },
  {
    "label": "SAssetTileItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetTileItem"
  },
  {
    "label": "SInlineEditableTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInlineEditableTextBlock"
  },
  {
    "label": "SLayeredImage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLayeredImage"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "SListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SListView"
  },
  {
    "label": "FAssetViewItemHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetViewItemHelper"
  },
  {
    "label": "SAssetTileView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetTileView"
  },
  {
    "label": "SAssetListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetListView"
  },
  {
    "label": "SAssetColumnView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetColumnView"
  },
  {
    "label": "SAssetViewItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetViewItem"
  },
  {
    "label": "SAssetViewItemToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetViewItemToolTip"
  },
  {
    "label": "ISourceControlProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlProvider"
  },
  {
    "label": "FTagDisplayItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTagDisplayItem"
  },
  {
    "label": "SAssetListViewRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetListViewRow"
  },
  {
    "label": "SAssetColumnItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetColumnItem"
  },
  {
    "label": "SAssetColumnViewRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetColumnViewRow"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / AssetData . h \" # include \" AssetThumbnail . h \" # include \" AssetViewSortManager . h \" # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" ContentBrowserDelegates . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Framework / SlateDelegates . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / Reply . h \" # include \" Internationalization / Internationalization . h \" # include \" Internationalization / Text . h \" # include \" Layout / Geometry . h \" # include \" Layout / Visibility . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / Attribute . h \" # include \" Misc / Optional . h \" # include \" SlateFwd . h \" # include \" Styling / AppStyle . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" Textures / SlateIcon . h \" # include \" Types / SlateEnums . h \" # include \" Types / SlateStructs . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SBoxPanel . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STileView . h \" class FAssetViewItem ; class FDragDropEvent ; class FSlateRect ; class FString ; class IToolTip ; class SAssetListItem ; class SAssetTileItem ; class SInlineEditableTextBlock ; class SLayeredImage ; class SVerticalBox ; struct FKeyEvent ; struct FPointerEvent ; struct FSlateBrush ; template<ItemType> class SListView ;)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FOnRenameBegin, const TSharedPtr<FAssetViewItem>& , const FString& , const FSlateRect& ) DECLARE_DELEGATE_FourParams( FOnRenameCommit, const TSharedPtr<FAssetViewItem>& , const FString& , const FSlateRect& , ETextCommit::Type ) DECLARE_DELEGATE_RetVal_FourParams( bool, FOnVerifyRenameCommit, const TSharedPtr<FAssetViewItem>& , const FText& , const FSlateRect& , FText& ) DECLARE_DELEGATE_OneParam( FOnItemDestroyed, const TSharedPtr<FAssetViewItem>&)"
  },
  {
    "label": "CreateListItemContents()",
    "kind": "Method",
    "detail": "Function (class SAssetListItem ; class SAssetTileItem ; struct FAssetViewItemHelper { public : TSharedRef<SWidget>)",
    "insertText": "CreateListItemContents(SAssetListItem* const InListItem, const TSharedRef<SWidget>& InThumbnail, FName& OutItemShadowBorder)"
  },
  {
    "label": "CreateTileItemContents()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateTileItemContents(SAssetTileItem* const InTileItem, const TSharedRef<SWidget>& InThumbnail, FName& OutItemShadowBorder)"
  },
  {
    "label": "CreateListTileItemContents()",
    "kind": "Method",
    "detail": "Function (private : template<T> TSharedRef<SWidget>)",
    "insertText": "CreateListTileItemContents(T* const InTileOrListItem, const TSharedRef<SWidget>& InThumbnail, FName& OutItemShadowBorder)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (} ; class SAssetTileView : public STileView<TSharedPtr<FAssetViewItem>> { public : bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} ; class SAssetViewItem : public SCompoundWidget { class SAssetViewItemToolTip ; public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAssetViewItem ) : _ShouldAllowToolTip(true) , _ThumbnailEditMode(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FAssetViewItem>, AssetItem) SLATE_EVENT(FOnRenameBegin, OnRenameBegin) SLATE_EVENT(FOnRenameCommit, OnRenameCommit) SLATE_EVENT(FOnVerifyRenameCommit, OnVerifyRenameCommit) SLATE_EVENT(FOnItemDestroyed, OnItemDestroyed) SLATE_ATTRIBUTE(bool, ShouldAllowToolTip) SLATE_ATTRIBUTE(bool, ThumbnailEditMode) SLATE_ATTRIBUTE(FText, HighlightText) SLATE_EVENT(FOnIsAssetValidForCustomToolTip, OnIsAssetValidForCustomToolTip) SLATE_EVENT(FOnGetCustomAssetToolTip, OnGetCustomAssetToolTip) SLATE_EVENT(FOnVisualizeAssetToolTip, OnVisualizeAssetToolTip) SLATE_EVENT(FOnAssetToolTipClosing, OnAssetToolTipClosing) SLATE_ARGUMENT(FIsSelected, IsSelected) SLATE_END_ARGS() virtual ~SAssetViewItem()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "GetToolTip()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IToolTip>)",
    "insertText": "GetToolTip()"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragEnter(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragOver()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragOver(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDrop(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDrop(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent, const TSharedRef<SWidget>& InParentWidget)"
  },
  {
    "label": "OnVisualizeTooltip()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnVisualizeTooltip(const TSharedPtr<SWidget>& TooltipContent)"
  },
  {
    "label": "OnToolTipClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolTipClosing()"
  },
  {
    "label": "GetAssetColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetAssetColor()"
  },
  {
    "label": "GetBorderImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBorderImage()"
  },
  {
    "label": "GetNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNameText()"
  },
  {
    "label": "IsNameReadOnly()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "IsNameReadOnly()"
  },
  {
    "label": "HandleBeginNameChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBeginNameChange(const FText& OriginalText)"
  },
  {
    "label": "HandleNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNameCommitted(const FText& NewText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "HandleVerifyNameChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleVerifyNameChanged(const FText& NewText, FText& OutErrorMessage)"
  },
  {
    "label": "OnAssetDataChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetDataChanged()"
  },
  {
    "label": "DirtyStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DirtyStateChanged()"
  },
  {
    "label": "GetAssetClassText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetClassText()"
  },
  {
    "label": "GetDirtyImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetDirtyImage()"
  },
  {
    "label": "GenerateSourceControlIconWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateSourceControlIconWidget()"
  },
  {
    "label": "GenerateExtraStateIconWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateExtraStateIconWidget(TAttribute<float> InMaxExtraStateIconWidth)"
  },
  {
    "label": "GenerateExtraStateTooltipWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateExtraStateTooltipWidget()"
  },
  {
    "label": "GetThumbnailEditModeUIVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetThumbnailEditModeUIVisibility()"
  },
  {
    "label": "CreateToolTipWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateToolTipWidget()"
  },
  {
    "label": "GetSourceControlTextVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSourceControlTextVisibility()"
  },
  {
    "label": "GetSourceControlText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSourceControlText()"
  },
  {
    "label": "GetExternalPackagesText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetExternalPackagesText()"
  },
  {
    "label": "GetAssetUserDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetUserDescription()"
  },
  {
    "label": "AddToToolTipInfoBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToToolTipInfoBox(const TSharedRef<SVerticalBox>& InfoBox, const FText& Key, const FText& Value, bool bImportant)"
  },
  {
    "label": "UpdateDirtyState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDirtyState()"
  },
  {
    "label": "IsDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDirty()"
  },
  {
    "label": "UpdateSourceControlState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSourceControlState(float InDeltaTime)"
  },
  {
    "label": "CacheDisplayTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheDisplayTags()"
  },
  {
    "label": "IsFolder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFolder()"
  },
  {
    "label": "HandleSourceControlProviderChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSourceControlProviderChanged(class ISourceControlProvider& OldProvider, class ISourceControlProvider& NewProvider)"
  },
  {
    "label": "HandleSourceControlStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSourceControlStateChanged()"
  },
  {
    "label": "GetNameTextWrapWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetNameTextWrapWidth()"
  },
  {
    "label": "FTagDisplayItem()",
    "kind": "Method",
    "detail": "Function (protected : struct FTagDisplayItem {)",
    "insertText": "FTagDisplayItem(FName InTagKey, FText InDisplayKey, FText InDisplayValue, const bool InImportant) : TagKey(InTagKey) , DisplayKey(MoveTemp(InDisplayKey)) , DisplayValue(MoveTemp(InDisplayValue)) , bImportant(InImportant)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} FName TagKey ; FText DisplayKey ; FText DisplayValue ; bool bImportant ; } ; TSharedPtr<SInlineEditableTextBlock> InlineRenameWidget ; TSharedPtr<STextBlock> ClassTextWidget ; TSharedPtr<FAssetViewItem> AssetItem ; TArray<FTagDisplayItem> CachedDisplayTags ; FOnRenameBegin OnRenameBegin ; FOnRenameCommit OnRenameCommit ; FOnVerifyRenameCommit OnVerifyRenameCommit ; FOnItemDestroyed OnItemDestroyed ; FOnIsAssetValidForCustomToolTip OnIsAssetValidForCustomToolTip ; FOnGetCustomAssetToolTip OnGetCustomAssetToolTip ; FOnVisualizeAssetToolTip OnVisualizeAssetToolTip ; FOnAssetToolTipClosing OnAssetToolTipClosing ; FIsSelected IsSelected ; FGeometry LastGeometry ; TAttribute<bool> ShouldAllowToolTip ; TAttribute<bool> ThumbnailEditMode ; TAttribute<FText> HighlightText ; const FSlateBrush* AssetDirtyBrush ; bool bItemDirty ; bool bSourceControlStateRequested ; float SourceControlStateDelay ; bool bDraggedOver ; TSharedPtr<SLayeredImage> SCCStateWidget ; bool bHasCCStateBrush = false ; bool bShouldSaveExternalPackages = false ; FString CachedDirtyPackagesList ; FDelegateHandle SourceControlStateChangedDelegateHandle ; } ; class SAssetListItem : public SAssetViewItem { struct FAssetViewItemHelper ; public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAssetListItem ) : _ThumbnailPadding(0) , _ThumbnailLabel( EThumbnailLabel::ClassName ) , _ThumbnailHintColorAndOpacity( FLinearColor( 0.0f, 0.0f, 0.0f, 0.0f ) ) , _ItemHeight(16) , _ShouldAllowToolTip(true) , _ThumbnailEditMode(false) , _AllowThumbnailHintLabel(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FAssetThumbnail>, AssetThumbnail) SLATE_ARGUMENT( TSharedPtr<FAssetViewItem>, AssetItem ) SLATE_ARGUMENT( float, ThumbnailPadding ) SLATE_ARGUMENT( EThumbnailLabel::Type, ThumbnailLabel ) SLATE_ATTRIBUTE( FLinearColor, ThumbnailHintColorAndOpacity ) SLATE_ATTRIBUTE( float, ItemHeight ) SLATE_EVENT( FOnRenameBegin, OnRenameBegin ) SLATE_EVENT( FOnRenameCommit, OnRenameCommit ) SLATE_EVENT( FOnVerifyRenameCommit, OnVerifyRenameCommit ) SLATE_EVENT( FOnItemDestroyed, OnItemDestroyed ) SLATE_ATTRIBUTE( bool, ShouldAllowToolTip ) SLATE_ATTRIBUTE( FText, HighlightText ) SLATE_ATTRIBUTE( bool, ThumbnailEditMode ) SLATE_ARGUMENT( bool, AllowThumbnailHintLabel ) SLATE_ARGUMENT(FIsSelected, IsSelected) SLATE_ARGUMENT(FIsSelected, IsSelectedExclusively) SLATE_EVENT(FOnIsAssetValidForCustomToolTip, OnIsAssetValidForCustomToolTip) SLATE_EVENT(FOnGetCustomAssetToolTip, OnGetCustomAssetToolTip) SLATE_EVENT(FOnVisualizeAssetToolTip, OnVisualizeAssetToolTip) SLATE_EVENT( FOnAssetToolTipClosing, OnAssetToolTipClosing ) SLATE_END_ARGS() ~SAssetListItem()"
  },
  {
    "label": "OnMouseEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseEnter(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseLeave(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "CanDisplayPrimitiveTools()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDisplayPrimitiveTools()"
  },
  {
    "label": "GetExtraStateIconWidth()",
    "kind": "Method",
    "detail": "Function (private : float)",
    "insertText": "GetExtraStateIconWidth()"
  },
  {
    "label": "GetExtraStateIconMaxWidth()",
    "kind": "Method",
    "detail": "Function (FOptionalSize)",
    "insertText": "GetExtraStateIconMaxWidth()"
  },
  {
    "label": "GetStateIconImageSize()",
    "kind": "Method",
    "detail": "Function (FOptionalSize)",
    "insertText": "GetStateIconImageSize()"
  },
  {
    "label": "GetThumbnailBoxSize()",
    "kind": "Method",
    "detail": "Function (FOptionalSize)",
    "insertText": "GetThumbnailBoxSize()"
  },
  {
    "label": "GetColumnTextColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetColumnTextColor(FIsSelected InIsSelected)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<FAssetThumbnail> AssetThumbnail ; TAttribute<float> ItemHeight ; float ThumbnailPadding ; TSharedPtr<SWidget> ThumbnailWidget ; TAttribute<FText> HighlightText ; FIsSelected IsSelectedExclusively ; } ; class SAssetListViewRow : public SMultiColumnTableRow<TSharedPtr<FAssetViewItem>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAssetListViewRow)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnDragDetected, OnDragDetected ) SLATE_ARGUMENT( TSharedPtr<SAssetListItem>, AssetListItem ) SLATE_END_ARGS() void Construct( const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "ensure()",
    "kind": "Method",
    "detail": "Function (this -> AssetListItem = InArgs . _AssetListItem ;)",
    "insertText": "ensure(this->AssetListItem.IsValid())"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (SMultiColumnTableRow<TSharedPtr<FAssetViewItem>)",
    "insertText": "Construct(FSuperRowType::FArguments() .Style(FAppStyle::Get(), \"ContentBrowser.AssetListView.ColumnListTableRow\") .OnDragDetected(InArgs._OnDragDetected), InOwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (Content = this -> AssetListItem ; } TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "SNew(STextBlock) .Text( NSLOCTEXT(\"AssetView\", \"ListViewInvalidColumnId\", \"Invalid Column Item\"))"
  },
  {
    "label": "GetRowSizeForColumn()",
    "kind": "Method",
    "detail": "Function (} } FVector2D)",
    "insertText": "GetRowSizeForColumn(const FName& InColumnName)"
  },
  {
    "label": "GetWidgetFromColumnId()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<SWidget>* ColumnWidget =)",
    "insertText": "GetWidgetFromColumnId(InColumnName)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (this -> AssetListItem ->)",
    "insertText": "Tick(AllottedGeometry, InCurrentTime, InDeltaTime)"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (AssetListItem ->)",
    "insertText": "OnDragEnter(MyGeometry, DragDropEvent)"
  },
  {
    "label": "OnDragLeave()",
    "kind": "Method",
    "detail": "Function (AssetListItem ->)",
    "insertText": "OnDragLeave(DragDropEvent)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<SAssetListItem> AssetListItem ; } ; class SAssetTileItem : public SAssetViewItem { struct FAssetViewItemHelper ; public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAssetTileItem ) : _ThumbnailPadding(0) , _ThumbnailDimension(64) , _ThumbnailLabel( EThumbnailLabel::ClassName ) , _ThumbnailHintColorAndOpacity( FLinearColor( 0.0f, 0.0f, 0.0f, 0.0f ) ) , _AllowThumbnailHintLabel(true) , _CurrentThumbnailSize(EThumbnailSize::Medium) , _ItemWidth(16) , _ShouldAllowToolTip(true) , _ShowType(true) , _ThumbnailEditMode(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FAssetThumbnail>, AssetThumbnail) SLATE_ARGUMENT( TSharedPtr<FAssetViewItem>, AssetItem ) SLATE_ARGUMENT( float, ThumbnailPadding ) SLATE_ATTRIBUTE(float, ThumbnailDimension) SLATE_ARGUMENT( EThumbnailLabel::Type, ThumbnailLabel ) SLATE_ATTRIBUTE( FLinearColor, ThumbnailHintColorAndOpacity ) SLATE_ARGUMENT( bool, AllowThumbnailHintLabel ) SLATE_ATTRIBUTE(EThumbnailSize, CurrentThumbnailSize) SLATE_ATTRIBUTE( float, ItemWidth ) SLATE_EVENT( FOnRenameBegin, OnRenameBegin ) SLATE_EVENT( FOnRenameCommit, OnRenameCommit ) SLATE_EVENT( FOnVerifyRenameCommit, OnVerifyRenameCommit ) SLATE_EVENT( FOnItemDestroyed, OnItemDestroyed ) SLATE_ATTRIBUTE( bool, ShouldAllowToolTip ) SLATE_ARGUMENT( bool, ShowType ) SLATE_ATTRIBUTE( FText, HighlightText ) SLATE_ATTRIBUTE( bool, ThumbnailEditMode ) SLATE_ARGUMENT(FIsSelected, IsSelected) SLATE_ARGUMENT(FIsSelected, IsSelectedExclusively) SLATE_EVENT(FOnIsAssetValidForCustomToolTip, OnIsAssetValidForCustomToolTip) SLATE_EVENT(FOnGetCustomAssetToolTip, OnGetCustomAssetToolTip) SLATE_EVENT(FOnVisualizeAssetToolTip, OnVisualizeAssetToolTip) SLATE_EVENT( FOnAssetToolTipClosing, OnAssetToolTipClosing ) SLATE_END_ARGS() ~SAssetTileItem()"
  },
  {
    "label": "InitializeAssetNameHeights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeAssetNameHeights()"
  },
  {
    "label": "GetRegularFontHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetRegularFontHeight()"
  },
  {
    "label": "GetAssetClassLabelVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetAssetClassLabelVisibility()"
  },
  {
    "label": "GetAssetClassLabelTextColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetAssetClassLabelTextColor()"
  },
  {
    "label": "GetThumbnailFont()",
    "kind": "Method",
    "detail": "Function (FSlateFontInfo)",
    "insertText": "GetThumbnailFont()"
  },
  {
    "label": "GetMaxAssetNameHeight()",
    "kind": "Method",
    "detail": "Function (FOptionalSize)",
    "insertText": "GetMaxAssetNameHeight()"
  },
  {
    "label": "GetFolderBackgroundImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetFolderBackgroundImage()"
  },
  {
    "label": "GetFolderBackgroundShadowImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetFolderBackgroundShadowImage()"
  },
  {
    "label": "GetNameAreaBackgroundImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetNameAreaBackgroundImage()"
  },
  {
    "label": "GetAssetAreaOverlayBackgroundImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetAssetAreaOverlayBackgroundImage()"
  },
  {
    "label": "GetChipBackgroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetChipBackgroundColor()"
  },
  {
    "label": "GetNameAreaTextColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetNameAreaTextColor()"
  },
  {
    "label": "GetNameAreaMaxDesiredHeight()",
    "kind": "Method",
    "detail": "Function (FOptionalSize)",
    "insertText": "GetNameAreaMaxDesiredHeight()"
  },
  {
    "label": "GetGenericThumbnailSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetGenericThumbnailSize()"
  },
  {
    "label": "GetSCCIconVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSCCIconVisibility()"
  },
  {
    "label": "GetNameAreaVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetNameAreaVisibility()"
  },
  {
    "label": "GetSourceControlIconSize()",
    "kind": "Method",
    "detail": "Function (FOptionalSize)",
    "insertText": "GetSourceControlIconSize()"
  },
  {
    "label": "AssetNameHeights()",
    "kind": "Method",
    "detail": "Function (private : bool bShowType ; TSharedPtr<FAssetThumbnail> AssetThumbnail ; TAttribute<float> ItemWidth ; TAttribute<float> ThumbnailDimension ; float)",
    "insertText": "AssetNameHeights(int32)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (float RegularFontHeight ; float SmallFontHeight ; float ThumbnailPadding ; TAttribute<EThumbnailSize> CurrentThumbnailSize ; } ; class SAssetColumnItem : public SAssetViewItem { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAssetColumnItem)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FAssetViewItem>, AssetItem ) SLATE_EVENT( FOnRenameBegin, OnRenameBegin ) SLATE_EVENT( FOnRenameCommit, OnRenameCommit ) SLATE_EVENT( FOnVerifyRenameCommit, OnVerifyRenameCommit ) SLATE_EVENT( FOnItemDestroyed, OnItemDestroyed ) SLATE_ATTRIBUTE( FText, HighlightText ) SLATE_EVENT(FOnIsAssetValidForCustomToolTip, OnIsAssetValidForCustomToolTip) SLATE_EVENT( FOnGetCustomAssetToolTip, OnGetCustomAssetToolTip) SLATE_EVENT( FOnVisualizeAssetToolTip, OnVisualizeAssetToolTip) SLATE_EVENT( FOnAssetToolTipClosing, OnAssetToolTipClosing ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName, FIsSelected InIsSelected)"
  },
  {
    "label": "GetAssetPathText()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "GetAssetPathText()"
  },
  {
    "label": "GetAssetTagText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetTagText(FName Tag)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : TAttribute<FText> HighlightText ; TSharedPtr<STextBlock> ClassText ; TSharedPtr<STextBlock> PathText ; } ; class SAssetColumnViewRow : public SMultiColumnTableRow<TSharedPtr<FAssetViewItem>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAssetColumnViewRow)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnDragDetected, OnDragDetected ) SLATE_ARGUMENT( TSharedPtr<SAssetColumnItem>, AssetColumnItem ) SLATE_END_ARGS() void Construct( const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "ensure()",
    "kind": "Method",
    "detail": "Function (this -> AssetColumnItem = InArgs . _AssetColumnItem ;)",
    "insertText": "ensure(this->AssetColumnItem.IsValid())"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "SNew(STextBlock) .Text( NSLOCTEXT(\"AssetView\", \"InvalidColumnId\", \"Invalid Column Item\"))"
  }
]