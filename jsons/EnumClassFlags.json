[
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # define)",
    "insertText": "ENUM_CLASS_FLAGS(Enum) \\ inline Enum& operator|=(Enum& Lhs, Enum Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} \\ Enum&)",
    "insertText": "operator(Enum& Lhs, Enum Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} \\ Enum)",
    "insertText": "operator(Enum Lhs, Enum Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} \\ bool)",
    "insertText": "operator(Enum E)"
  },
  {
    "label": "FRIEND_ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} # define)",
    "insertText": "FRIEND_ENUM_CLASS_FLAGS(Enum) \\ friend Enum& operator|=(Enum& Lhs, Enum Rhs)"
  },
  {
    "label": "EnumHasAllFlags()",
    "kind": "Method",
    "detail": "Function (template<Enum> bool)",
    "insertText": "EnumHasAllFlags(Enum Flags, Enum Contains)"
  },
  {
    "label": "__underlying_type()",
    "kind": "Method",
    "detail": "Function (using UnderlyingType =)",
    "insertText": "__underlying_type(Enum)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (} template<Enum> bool)",
    "insertText": "EnumHasAnyFlags(Enum Flags, Enum Contains)"
  },
  {
    "label": "EnumAddFlags()",
    "kind": "Method",
    "detail": "Function (} template<Enum> void)",
    "insertText": "EnumAddFlags(Enum& Flags, Enum FlagsToAdd)"
  },
  {
    "label": "Flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flags(Enum)((UnderlyingType)Flags | (UnderlyingType)FlagsToAdd)"
  },
  {
    "label": "EnumRemoveFlags()",
    "kind": "Method",
    "detail": "Function (} template<Enum> void)",
    "insertText": "EnumRemoveFlags(Enum& Flags, Enum FlagsToRemove)"
  },
  {
    "label": "Flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flags(Enum)((UnderlyingType)Flags & ~(UnderlyingType)FlagsToRemove)"
  }
]