[
  {
    "label": "MockWavReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockWavReader"
  },
  {
    "label": "MockWavReader()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_TEST_CONVERSATIONAL_SPEECH_MOCK_WAVREADER_H_ # define MODULES_AUDIO_PROCESSING_TEST_CONVERSATIONAL_SPEECH_MOCK_WAVREADER_H_ # include<cstddef> # include<string> # include \" api / array_view . h \" # include \" modules / audio_processing / test / conversational_speech / wavreader_interface . h \" # include \" test / gmock . h \" namespace webrtc { namespace test { namespace conversational_speech { class MockWavReader : public WavReaderInterface { public :)",
    "insertText": "MockWavReader(int sample_rate, size_t num_channels, size_t num_samples)"
  },
  {
    "label": "MockWavReader()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "MockWavReader()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, ReadFloatSamples, (rtc::ArrayView<float>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, ReadInt16Samples, (rtc::ArrayView<int16_t>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, SampleRate, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, NumChannels, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, NumSamples, (), (const, override))"
  }
]