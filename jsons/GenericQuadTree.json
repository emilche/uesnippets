[
  {
    "label": "TQuadTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TQuadTree"
  },
  {
    "label": "QuadNames",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "QuadNames"
  },
  {
    "label": "FNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNode"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogQuadTree, Log, Warning)"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Insert(const ElementType& Element, const FBox2D& Box, const TCHAR* DebugContext = nullptr)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Remove(const ElementType& Instance, const FBox2D& Box)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "Split()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Split()"
  },
  {
    "label": "RemoveNodeForElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveNodeForElement(const ElementType& Element)"
  },
  {
    "label": "InsertElementRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertElementRecursive(const ElementType& Element, const FBox2D& Box, const TCHAR* DebugContext)"
  },
  {
    "label": "InsertElementRecursive()",
    "kind": "Method",
    "detail": "Function (UE_BUILD_SHIPPING)",
    "insertText": "InsertElementRecursive(Element, Box, DebugContext)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (leaves)",
    "insertText": "check(!bInternal)"
  },
  {
    "label": "Split()",
    "kind": "Method",
    "detail": "Function (again)",
    "insertText": "Split()"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (here)",
    "insertText": "check(bInternal)"
  },
  {
    "label": "GetIntersectingElements()",
    "kind": "Method",
    "detail": "Function (quad)",
    "insertText": "GetIntersectingElements(Box, ElementsOut)"
  }
]