[
  {
    "label": "MockDelayManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockDelayManager"
  },
  {
    "label": "MockDelayManager()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_MOCK_MOCK_DELAY_MANAGER_H_ # define MODULES_AUDIO_CODING_NETEQ_MOCK_MOCK_DELAY_MANAGER_H_ # include \" api / neteq / tick_timer . h \" # include \" modules / audio_coding / neteq / delay_manager . h \" # include \" test / gmock . h \" namespace webrtc { class MockDelayManager : public DelayManager { public :)",
    "insertText": "MockDelayManager(const MockDelayManager::Config& config, const TickTimer* tick_timer) : DelayManager(config, tick_timer)"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(int, TargetDelayMs, (), (const))"
  }
]