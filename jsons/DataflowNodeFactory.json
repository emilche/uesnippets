[
  {
    "label": "FDataflowNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowNode"
  },
  {
    "label": "FDataflowConnection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowConnection"
  },
  {
    "label": "FNewNodeParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNewNodeParameters"
  },
  {
    "label": "FFactoryParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFactoryParameters"
  },
  {
    "label": "FNodeFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNodeFactory"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FFactoryParameters()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Dataflow / DataflowGraph . h \" struct FDataflowNode ; struct FDataflowConnection ; namespace UE::Dataflow { struct FNewNodeParameters { FGuid Guid ; FName Type ; FName Name ; UObject* OwningObject = nullptr ; } ; struct FFactoryParameters {)",
    "insertText": "FFactoryParameters()"
  },
  {
    "label": "FFactoryParameters()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FFactoryParameters(FName InTypeName, FName InDisplayName, FName InCategory, FString InTags, FString InToolTip, bool bInIsDeprecated, bool bInIsExperimental, FName InNodeVersion) : TypeName(InTypeName), DisplayName(InDisplayName), Category(InCategory), Tags(InTags), ToolTip(InToolTip), bIsDeprecated(bInIsDeprecated), bIsExperimental(bInIsExperimental), NodeVersion(InNodeVersion)"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (} FName =)",
    "insertText": "FName(\"\")"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (FString Tags =)",
    "insertText": "FString(\"\")"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (bool bIsDeprecated = false ; bool bIsExperimental = false ; FName NodeVersion =)",
    "insertText": "FName(TEXT(\"v1\"))"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsDeprecated()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsDeprecated()"
  },
  {
    "label": "FNodeFactory()",
    "kind": "Method",
    "detail": "Function (TMap<FName,FNewNodeFunction> ClassMap ; TMap<FName,FFactoryParameters> ParametersMap ; TMap<FName,TArray<FName>> VersionMap ; FNodeFactory* Instance ;)",
    "insertText": "FNodeFactory()"
  },
  {
    "label": "GetInstance()",
    "kind": "Method",
    "detail": "Function (delete Instance ; } FNodeFactory*)",
    "insertText": "GetInstance()"
  },
  {
    "label": "RegisterDefaultNodes()",
    "kind": "Method",
    "detail": "Function (Instance ->)",
    "insertText": "RegisterDefaultNodes()"
  },
  {
    "label": "RegisterNodeFromType()",
    "kind": "Method",
    "detail": "Function (} return Instance ; } template<T> void)",
    "insertText": "RegisterNodeFromType()"
  },
  {
    "label": "StaticType()",
    "kind": "Method",
    "detail": "Function (FFactoryParameters FactoryParameters = {)",
    "insertText": "StaticType(), T::StaticDisplay(), T::StaticCategory(), T::StaticTags(), GetToolTipFromStruct(T::StaticStruct(), T::StaticType(), T::StaticDisplay()), IsNodeDeprecated(T::StaticStruct()), IsNodeExperimental(T::StaticStruct()), GetVersionFromTypeName(T::StaticType())"
  },
  {
    "label": "CreationFunction()",
    "kind": "Method",
    "detail": "Function (auto)",
    "insertText": "CreationFunction(const UE::Dataflow::FNewNodeParameters& InParam)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const FNodeParameters NodeParameters = { InParam . Name,InParam . OwningObject } ; TUniquePtr<T> Val = MakeUnique<)",
    "insertText": "T(NodeParameters, InParam.Guid)"
  },
  {
    "label": "ValidateProperties()",
    "kind": "Method",
    "detail": "Function (Val ->)",
    "insertText": "ValidateProperties()"
  },
  {
    "label": "ValidateConnections()",
    "kind": "Method",
    "detail": "Function (Val ->)",
    "insertText": "ValidateConnections()"
  },
  {
    "label": "GetParameters()",
    "kind": "Method",
    "detail": "Function (} const FFactoryParameters&)",
    "insertText": "GetParameters(FName InTypeName)"
  },
  {
    "label": "NewNodeFromRegisteredType()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FDataflowNode>)",
    "insertText": "NewNodeFromRegisteredType(FGraph& Graph, const FNewNodeParameters& Param)"
  },
  {
    "label": "RegisteredParameters()",
    "kind": "Method",
    "detail": "Function (TArray<FFactoryParameters>)",
    "insertText": "RegisteredParameters()"
  },
  {
    "label": "IsNodeDeprecated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodeDeprecated(const FName NodeType)"
  },
  {
    "label": "IsNodeExperimental()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodeExperimental(const FName NodeType)"
  },
  {
    "label": "RegisterNode()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RegisterNode(const FFactoryParameters& Parameters, FNewNodeFunction NewFunction)"
  },
  {
    "label": "GetVersionFromTypeName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetVersionFromTypeName(const FName& TypeName)"
  },
  {
    "label": "GetNumVersionFromVersion()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumVersionFromVersion(const FName& Version)"
  },
  {
    "label": "IsNodeDeprecated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodeDeprecated(const UStruct* Struct)"
  },
  {
    "label": "IsNodeExperimental()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodeExperimental(const UStruct* Struct)"
  },
  {
    "label": "GetTypeNameNoVersion()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetTypeNameNoVersion(const FName& TypeName)"
  },
  {
    "label": "GetDisplayNameNoVersion()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetDisplayNameNoVersion(const FName& DisplayName)"
  },
  {
    "label": "GetToolTipFromStruct()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetToolTipFromStruct(UScriptStruct* InStruct, const FName& InTypeName, const FName& InDisplayName)"
  },
  {
    "label": "NewNode()",
    "kind": "Method",
    "detail": "Function (template<class T> TSharedPtr<T>)",
    "insertText": "NewNode(FGraph& Graph, const FNewNodeParameters& Param)"
  }
]