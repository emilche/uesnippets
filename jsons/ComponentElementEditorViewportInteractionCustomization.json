[
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FComponentElementEditorViewportInteractionCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentElementEditorViewportInteractionCustomization"
  },
  {
    "label": "GetGizmoPivotLocation()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Elements / Framework / TypedElementViewportInteraction . h \" # include \" Elements / Framework / TypedElementAssetEditorToolkitHostMixin . h \" class FProperty ; class USceneComponent ; class FComponentElementEditorViewportInteractionCustomization : public FTypedElementViewportInteractionCustomization { public : bool)",
    "insertText": "GetGizmoPivotLocation(const TTypedElement<ITypedElementWorldInterface>& InElementWorldHandle, const UE::Widget::EWidgetMode InWidgetMode, FVector& OutPivotLocation)"
  },
  {
    "label": "GizmoManipulationDeltaUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GizmoManipulationDeltaUpdate(const TTypedElement<ITypedElementWorldInterface>& InElementWorldHandle, const UE::Widget::EWidgetMode InWidgetMode, const EAxisList::Type InDragAxis, const FInputDeviceState& InInputState, const FTransform& InDeltaTransform, const FVector& InPivotLocation)"
  },
  {
    "label": "GetFocusBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFocusBounds(const TTypedElement<ITypedElementWorldInterface>& InElementWorldHandle, FBoxSphereBounds& OutBounds)"
  },
  {
    "label": "ApplyDeltaToComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyDeltaToComponent(USceneComponent* InComponent, const bool InIsDelta, const FVector* InDeltaTranslationPtr, const FRotator* InDeltaRotationPtr, const FVector* InDeltaScalePtr, const FVector& InPivotLocation, const FInputDeviceState& InInputState)"
  }
]