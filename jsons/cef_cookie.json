[
  {
    "label": "CefCookieVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefCookieVisitor"
  },
  {
    "label": "CefSetCookieCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefSetCookieCallback"
  },
  {
    "label": "CefDeleteCookiesCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefDeleteCookiesCallback"
  },
  {
    "label": "CefCookieManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefCookieManager"
  },
  {
    "label": "GetGlobalManager()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_COOKIE_H_ # define CEF_INCLUDE_CEF_COOKIE_H_ # pragma once # include<vector> # include \" include / cef_base . h \" # include \" include / cef_callback . h \" class CefCookieVisitor ; class CefSetCookieCallback ; class CefDeleteCookiesCallback ; class CefCookieManager : public CefBaseRefCounted { public : CefRefPtr<CefCookieManager>)",
    "insertText": "GetGlobalManager(CefRefPtr<CefCompletionCallback> callback)"
  },
  {
    "label": "VisitAllCookies()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitAllCookies(CefRefPtr<CefCookieVisitor> visitor)"
  },
  {
    "label": "VisitUrlCookies()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitUrlCookies(const CefString& url, bool includeHttpOnly, CefRefPtr<CefCookieVisitor> visitor)"
  },
  {
    "label": "SetCookie()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCookie(const CefString& url, const CefCookie& cookie, CefRefPtr<CefSetCookieCallback> callback)"
  },
  {
    "label": "DeleteCookies()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteCookies(const CefString& url, const CefString& cookie_name, CefRefPtr<CefDeleteCookiesCallback> callback)"
  },
  {
    "label": "FlushStore()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FlushStore(CefRefPtr<CefCompletionCallback> callback)"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (} ; class CefCookieVisitor : public CefBaseRefCounted { public : bool)",
    "insertText": "Visit(const CefCookie& cookie, int count, int total, bool& deleteCookie)"
  },
  {
    "label": "OnComplete()",
    "kind": "Method",
    "detail": "Function (} ; class CefSetCookieCallback : public CefBaseRefCounted { public : void)",
    "insertText": "OnComplete(bool success)"
  },
  {
    "label": "OnComplete()",
    "kind": "Method",
    "detail": "Function (} ; class CefDeleteCookiesCallback : public CefBaseRefCounted { public : void)",
    "insertText": "OnComplete(int num_deleted)"
  }
]