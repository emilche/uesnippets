[
  {
    "label": "UMovieSceneChannelOverrideContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneChannelOverrideContainer"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "UMovieScenePropertyTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScenePropertyTrack"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "FMovieSceneChannel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannel"
  },
  {
    "label": "FMovieSceneEntityComponentFieldBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEntityComponentFieldBuilder"
  },
  {
    "label": "FMovieSceneEvaluationFieldEntityMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldEntityMetaData"
  },
  {
    "label": "TRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRange"
  },
  {
    "label": "TObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TObjectPtr"
  },
  {
    "label": "FEntityImportParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityImportParams"
  },
  {
    "label": "FImportedEntity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportedEntity"
  },
  {
    "label": "UMovieSceneSectionChannelOverrideRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSectionChannelOverrideRegistry"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" CoreMinimal . h \" # include \" Channels / MovieSceneChannel . h \" # include \" Channels / MovieSceneChannelOverrideContainer . h \" # include \" Channels / MovieSceneChannelProxy . h \" # include \" EntitySystem / IMovieSceneEntityProvider . h \" # include \" Evaluation / MovieSceneEvaluationField . h \" # include \" HAL / Platform . h \" # include \" MovieSceneSection . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneSectionChannelOverrideRegistry . generated . h \" class UMovieSceneChannelOverrideContainer ; class UMovieSceneEntitySystemLinker ; class UMovieScenePropertyTrack ; struct FFrameNumber ; struct FMovieSceneChannel ; struct FMovieSceneEntityComponentFieldBuilder ; struct FMovieSceneEvaluationFieldEntityMetaData ; template<ElementType> class TRange ; template<T> struct TObjectPtr ; namespace UE { namespace MovieScene { struct FEntityImportParams ; struct FImportedEntity ; } })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: MOVIESCENE_API UMovieSceneSectionChannelOverrideRegistry()"
  },
  {
    "label": "AddChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChannel(FName ChannelName, UMovieSceneChannelOverrideContainer* ChannelContainer)"
  },
  {
    "label": "ContainsChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsChannel(FName ChannelName)"
  },
  {
    "label": "NumChannels()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumChannels()"
  },
  {
    "label": "GetChannel()",
    "kind": "Method",
    "detail": "Function (UMovieSceneChannelOverrideContainer*)",
    "insertText": "GetChannel(FName ChannelName)"
  },
  {
    "label": "GetChannels()",
    "kind": "Method",
    "detail": "Function (template<ChannelContainerType> void)",
    "insertText": "GetChannels(TArray<ChannelContainerType*>& OutChannels)"
  },
  {
    "label": "ChannelContainerType()",
    "kind": "Method",
    "detail": "Function (ChannelContainerType* TypedContainer = Cast<)",
    "insertText": "ChannelContainerType(Pair.Value)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutChannels .)",
    "insertText": "Add(TypedContainer)"
  },
  {
    "label": "RemoveChannel()",
    "kind": "Method",
    "detail": "Function (} } } void)",
    "insertText": "RemoveChannel(FName ChannelName)"
  },
  {
    "label": "ImportEntityImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportEntityImpl(const UE::MovieScene::FChannelOverrideEntityImportParams& OverrideParams, const UE::MovieScene::FEntityImportParams& ImportParams, UE::MovieScene::FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "PopulateEvaluationFieldImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateEvaluationFieldImpl(const TRange<FFrameNumber>& EffectiveRange, const FMovieSceneEvaluationFieldEntityMetaData& InMetaData, FMovieSceneEntityComponentFieldBuilder* OutFieldBuilder, UMovieSceneSection& OwnerSection)"
  },
  {
    "label": "OnPostPaste()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "OnPostPaste()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "IsChannelOverriden()",
    "kind": "Method",
    "detail": "Function (} ; namespace UE { namespace MovieScene { bool)",
    "insertText": "IsChannelOverriden(const UMovieSceneSectionChannelOverrideRegistry* OverrideRegistry, FName ChannelName)"
  },
  {
    "label": "GetChannelOverride()",
    "kind": "Method",
    "detail": "Function (} UMovieSceneChannelOverrideContainer*)",
    "insertText": "GetChannelOverride(const UMovieSceneSectionChannelOverrideRegistry* OverrideRegistry, FName ChannelName)"
  },
  {
    "label": "AddChannelProxy()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR template<ChannelType,ExtendedEditorDataType> void)",
    "insertText": "AddChannelProxy(FMovieSceneChannelProxyData& ProxyData, const UMovieSceneSectionChannelOverrideRegistry* OverrideRegistry, FName ChannelName, ChannelType& DefaultChannel, const FMovieSceneChannelMetaData& InMetaData, ExtendedEditorDataType&& InExtendedEditorData)"
  },
  {
    "label": "GetChannelOverride()",
    "kind": "Method",
    "detail": "Function (UMovieSceneChannelOverrideContainer* OverrideContainer =)",
    "insertText": "GetChannelOverride(OverrideRegistry, ChannelName)"
  },
  {
    "label": "AddChannelProxy()",
    "kind": "Method",
    "detail": "Function (FMovieSceneChannelHandle ChannelHandle = OverrideContainer ->)",
    "insertText": "AddChannelProxy(ChannelName, ProxyData, InMetaData)"
  },
  {
    "label": "ChannelType()",
    "kind": "Method",
    "detail": "Function (ProxyData . SetExtendedEditorData<)",
    "insertText": "ChannelType(ChannelHandle, InExtendedEditorData)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} else { ProxyData .)",
    "insertText": "Add(DefaultChannel, InMetaData, InExtendedEditorData)"
  },
  {
    "label": "MakeChannelProxy()",
    "kind": "Method",
    "detail": "Function (} } template<ChannelType,ExtendedEditorDataType> TSharedPtr<FMovieSceneChannelProxy>)",
    "insertText": "MakeChannelProxy(const UMovieSceneSectionChannelOverrideRegistry* OverrideRegistry, ChannelType& DefaultChannel, const FMovieSceneChannelMetaData& InMetaData, ExtendedEditorDataType&& InExtendedEditorData)"
  },
  {
    "label": "ChannelName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "ChannelName(NAME_None)"
  },
  {
    "label": "FMovieSceneChannelProxy()",
    "kind": "Method",
    "detail": "Function (} return MakeShared<)",
    "insertText": "FMovieSceneChannelProxy(MoveTemp(ProxyData))"
  },
  {
    "label": "AddChannelProxy()",
    "kind": "Method",
    "detail": "Function (} # else template<ChannelType> void)",
    "insertText": "AddChannelProxy(FMovieSceneChannelProxyData& ProxyData, const UMovieSceneSectionChannelOverrideRegistry* OverrideRegistry, FName ChannelName, ChannelType& DefaultChannel)"
  },
  {
    "label": "AddChannelProxy()",
    "kind": "Method",
    "detail": "Function (OverrideContainer ->)",
    "insertText": "AddChannelProxy(ChannelName, ProxyData)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} else { ProxyData .)",
    "insertText": "Add(DefaultChannel)"
  },
  {
    "label": "MakeChannelProxy()",
    "kind": "Method",
    "detail": "Function (} } template<ChannelType> TSharedPtr<FMovieSceneChannelProxy>)",
    "insertText": "MakeChannelProxy(const UMovieSceneSectionChannelOverrideRegistry* OverrideRegistry, ChannelType& DefaultChannel)"
  }
]