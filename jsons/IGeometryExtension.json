[
  {
    "label": "FViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewModel"
  },
  {
    "label": "SEQUENCERCORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SEQUENCERCORE_API"
  },
  {
    "label": "FVirtualGeometry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / SharedPointer . h \" # include \" MVVM / ViewModelTypeID . h \" namespace UE { namespace Sequencer { class FViewModel ; struct FVirtualGeometry {)",
    "insertText": "FVirtualGeometry() : Top(0.f), Height(0.f), NestedBottom(0.f)"
  },
  {
    "label": "FVirtualGeometry()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FVirtualGeometry(float InTop, float InHeight, float InNestedBottom) : Top(InTop), Height(InHeight), NestedBottom(InNestedBottom)"
  },
  {
    "label": "GetTop()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetTop()"
  },
  {
    "label": "GetVirtualGeometry()",
    "kind": "Method",
    "detail": "Function (} FVirtualGeometry)",
    "insertText": "GetVirtualGeometry()"
  },
  {
    "label": "ReportVirtualGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportVirtualGeometry(const FVirtualGeometry& VirtualGeometry)"
  },
  {
    "label": "UpdateVirtualGeometry()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "UpdateVirtualGeometry(float InitialVirtualPosition, TSharedPtr<FViewModel> InInitialItem)"
  }
]