[
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "SChordEditBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SChordEditBox"
  },
  {
    "label": "SChordEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SChordEditor"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs, TSharedPtr<FUICommandInfo> InputCommand, EMultipleKeyBindingIndex ChordIndex )"
  },
  {
    "label": "OnChordEditorLostFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChordEditorLostFocus()"
  },
  {
    "label": "OnChordEditingStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChordEditingStarted()"
  },
  {
    "label": "OnChordEditingStopped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChordEditingStopped()"
  },
  {
    "label": "OnChordChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChordChanged()"
  },
  {
    "label": "OnChordRemoveButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnChordRemoveButtonClicked()"
  },
  {
    "label": "OnAcceptNewChordButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAcceptNewChordButtonClicked()"
  },
  {
    "label": "OnGetContentForConflictPopup()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGetContentForConflictPopup()"
  },
  {
    "label": "OnConflictPopupOpenChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConflictPopupOpenChanged(bool bIsOpen)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown( const FGeometry& MyGeometry, const FPointerEvent& InMouseEvent )"
  }
]