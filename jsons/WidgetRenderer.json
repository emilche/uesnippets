[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FHittestGrid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHittestGrid"
  },
  {
    "label": "FSlateDrawBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateDrawBuffer"
  },
  {
    "label": "ISlate3DRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlate3DRenderer"
  },
  {
    "label": "STooltipPresenter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STooltipPresenter"
  },
  {
    "label": "UTextureRenderTarget2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget2D"
  },
  {
    "label": "FRenderTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderTarget"
  },
  {
    "label": "FWidgetRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetRenderer"
  },
  {
    "label": "FWidgetRenderer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / SlateRect . h \" # include \" Layout / Geometry . h \" # include \" Input / PopupMethodReply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Rendering / DrawElements . h \" # include \" Engine / Texture . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_2 # include \" RenderingThread . h \" # endif # include \" RenderDeferredCleanup . h \" # include \" Widgets / SWindow . h \" # include \" Widgets / SVirtualWindow . h \" class FArrangedChildren ; class FHittestGrid ; class FSlateDrawBuffer ; class ISlate3DRenderer ; class STooltipPresenter ; class UTextureRenderTarget2D ; class FRenderTarget ; class FWidgetRenderer : public FDeferredCleanupInterface { public :)",
    "insertText": "FWidgetRenderer(bool bUseGammaCorrection = false, bool bInClearTarget = true)"
  },
  {
    "label": "FWidgetRenderer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FWidgetRenderer()"
  },
  {
    "label": "GetIsPrepassNeeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsPrepassNeeded()"
  },
  {
    "label": "GetClearHitTestGrid()",
    "kind": "Method",
    "detail": "Function (bPrepassNeeded = bInPrepassNeeded ; } bool)",
    "insertText": "GetClearHitTestGrid()"
  },
  {
    "label": "SetShouldClearTarget()",
    "kind": "Method",
    "detail": "Function (bClearHitTestGrid = bInClearHitTestGrid ; } void)",
    "insertText": "SetShouldClearTarget(bool bShouldClear)"
  },
  {
    "label": "GetUseGammaCorrection()",
    "kind": "Method",
    "detail": "Function (bClearTarget = bShouldClear ; } bool)",
    "insertText": "GetUseGammaCorrection()"
  },
  {
    "label": "SetApplyColorDeficiencyCorrection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetApplyColorDeficiencyCorrection(bool bInApplyColorCorrection)"
  },
  {
    "label": "GetSlateRenderer()",
    "kind": "Method",
    "detail": "Function (ISlate3DRenderer*)",
    "insertText": "GetSlateRenderer()"
  },
  {
    "label": "CreateTargetFor()",
    "kind": "Method",
    "detail": "Function (UTextureRenderTarget2D*)",
    "insertText": "CreateTargetFor(FVector2D DrawSize, TextureFilter InFilter, bool bUseGammaCorrection)"
  },
  {
    "label": "DrawWidget()",
    "kind": "Method",
    "detail": "Function (UTextureRenderTarget2D*)",
    "insertText": "DrawWidget(const TSharedRef<SWidget>& Widget, FVector2D DrawSize)"
  },
  {
    "label": "DrawWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWidget(FRenderTarget* RenderTarget, const TSharedRef<SWidget>& Widget, FVector2D DrawSize, float DeltaTime, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWidget(UTextureRenderTarget2D* RenderTarget, const TSharedRef<SWidget>& Widget, FVector2D DrawSize, float DeltaTime, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWidget(FRenderTarget* RenderTarget, const TSharedRef<SWidget>& Widget, float Scale, FVector2D DrawSize, float DeltaTime, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWidget(UTextureRenderTarget2D* RenderTarget, const TSharedRef<SWidget>& Widget, float Scale, FVector2D DrawSize, float DeltaTime, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWindow(FRenderTarget* RenderTarget, FHittestGrid& HitTestGrid, TSharedRef<SWindow> Window, float Scale, FVector2D DrawSize, float DeltaTime, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWindow(UTextureRenderTarget2D* RenderTarget, FHittestGrid& HitTestGrid, TSharedRef<SWindow> Window, float Scale, FVector2D DrawSize, float DeltaTime, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWindow(FRenderTarget* RenderTarget, FHittestGrid& HitTestGrid, TSharedRef<SWindow> Window, FGeometry WindowGeometry, FSlateRect WindowClipRect, float DeltaTime, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWindow(UTextureRenderTarget2D* RenderTarget, FHittestGrid& HitTestGrid, TSharedRef<SWindow> Window, FGeometry WindowGeometry, FSlateRect WindowClipRect, float DeltaTime, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWindow(const FPaintArgs& PaintArgs, FRenderTarget* RenderTarget, TSharedRef<SWindow> Window, FGeometry WindowGeometry, FSlateRect WindowClipRect, float DeltaTime, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWindow(const FPaintArgs& PaintArgs, UTextureRenderTarget2D* RenderTarget, TSharedRef<SWindow> Window, FGeometry WindowGeometry, FSlateRect WindowClipRect, float DeltaTime, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawInvalidationRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DrawInvalidationRoot(TSharedRef<SVirtualWindow>& VirtualWindow, UTextureRenderTarget2D* RenderTarget, FSlateInvalidationRoot& Root, const FSlateInvalidationContext& Context, bool bDeferRenderTargetUpdate = false)"
  },
  {
    "label": "DrawInvalidationRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DrawInvalidationRoot(TSharedRef<SVirtualWindow>& VirtualWindow, UTextureRenderTarget2D* RenderTarget, FPaintArgs PaintArgs, float DrawScale, FVector2D DrawSize, bool bDeferRenderTargetUpdate = false)"
  }
]