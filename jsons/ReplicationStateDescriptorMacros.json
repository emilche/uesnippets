[
  {
    "label": "CalculateWordCountForChangeMask()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Templates / UnrealTemplate . h \" # include \" Net / Core / NetBitArray . h \" # include \" Iris / ReplicationState / ReplicationStateUtil . h \" # include \" Iris / ReplicationState / ReplicationStateDescriptor . h \" namespace UE::Net::Private { template<T> uint32)",
    "insertText": "CalculateWordCountForChangeMask(const T& ChangeMaskDescriptors)"
  },
  {
    "label": "UE_ARRAY_COUNT()",
    "kind": "Method",
    "detail": "Function (const uint32 Index =)",
    "insertText": "UE_ARRAY_COUNT(ChangeMaskDescriptors)"
  },
  {
    "label": "IRIS_DECLARE_COMMON()",
    "kind": "Method",
    "detail": "Function (} } # define)",
    "insertText": "IRIS_DECLARE_COMMON()"
  },
  {
    "label": "CalculateWordCountForChangeMask()",
    "kind": "Method",
    "detail": "Function (\\ const UE::Net::FReplicationStateMemberDescriptor sReplicationStateDescriptorMemberDescriptors [ ] ; \\ const UE::Net::FReplicationStateMemberSerializerDescriptor sReplicationStateDescriptorMemberSerializerDescriptors [ ] ; \\ const UE::Net::FReplicationStateMemberTraitsDescriptor sReplicationStateDescriptorMemberTraitsDescriptors [ ] ; \\ const UE::Net::FReplicationStateMemberFunctionDescriptor sReplicationStateDescriptorMemberFunctionDescriptors [ ] ; \\ const UE::Net::FReplicationStateMemberTagDescriptor sReplicationStateDescriptorMemberTagDescriptors [ ] ; \\ const UE::Net::FReplicationStateMemberReferenceDescriptor sReplicationStateDescriptorMemberReferenceDescriptors [ ] ; \\ const UE::Net::FReplicationStateMemberDebugDescriptor sReplicationStateDescriptorMemberDebugDescriptors [ ] ; \\ UE::Net::FReplicationStateHeader InternalReplicationState ; \\ UE::Net::FNetBitArrayView::StorageWordType ChangeMask [ UE::Net::)",
    "insertText": "CalculateWordCountForChangeMask(sReplicationStateChangeMaskDescriptors)"
  },
  {
    "label": "SetDirty()",
    "kind": "Method",
    "detail": "Function (} ; \\ \\ \\ void)",
    "insertText": "SetDirty(const UE::Net::FReplicationStateMemberChangeMaskDescriptor& Bits)"
  },
  {
    "label": "Mask()",
    "kind": "Method",
    "detail": "Function (UE::Net::FNetBitArrayView)",
    "insertText": "Mask(&ChangeMask[0], sReplicationStateDescriptor.ChangeMaskBitCount)"
  },
  {
    "label": "MarkDirty()",
    "kind": "Method",
    "detail": "Function (UE::Net::)",
    "insertText": "MarkDirty(InternalReplicationState, Mask, Bits)"
  },
  {
    "label": "IsDirty()",
    "kind": "Method",
    "detail": "Function (} \\ bool)",
    "insertText": "IsDirty(const UE::Net::FReplicationStateMemberChangeMaskDescriptor& Bits)"
  },
  {
    "label": "Mask()",
    "kind": "Method",
    "detail": "Function (const UE::Net::FNetBitArrayView)",
    "insertText": "Mask(const_cast<UE::Net::FNetBitArrayView::StorageWordType*>(&ChangeMask[0]), sReplicationStateDescriptor.ChangeMaskBitCount)"
  },
  {
    "label": "GetReplicationStateDescriptor()",
    "kind": "Method",
    "detail": "Function (} \\ public : \\ const UE::Net::FReplicationStateDescriptor*)",
    "insertText": "GetReplicationStateDescriptor()"
  },
  {
    "label": "SetDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDirty(sReplicationStateChangeMaskDescriptors[MemberIndex])"
  },
  {
    "label": "MemberName()",
    "kind": "Method",
    "detail": "Function (} MemberName = Value ; } \\ MemberType Get # #)",
    "insertText": "MemberName()"
  },
  {
    "label": "IRIS_ACCESS_BY_REFERENCE()",
    "kind": "Method",
    "detail": "Function (} # define)",
    "insertText": "IRIS_ACCESS_BY_REFERENCE(MemberName, MemberType, MemberIndex) \\ void Set##MemberName(const MemberType& Value)"
  }
]