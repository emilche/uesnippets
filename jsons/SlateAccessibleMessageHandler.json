[
  {
    "label": "FSlateAccessibleWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleWidget"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FSlateAccessibleMessageHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleMessageHandler"
  },
  {
    "label": "when",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "when"
  },
  {
    "label": "FSlateWidgetAccessibleEventArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateWidgetAccessibleEventArgs"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FSlateAccessibleTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleTask"
  },
  {
    "label": "FWidgetAndParent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetAndParent"
  },
  {
    "label": "FSlateAccessibleMessageHandler()",
    "kind": "Method",
    "detail": "Function (SLATECORE_API)",
    "insertText": "FSlateAccessibleMessageHandler()"
  },
  {
    "label": "OnWidgetRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWidgetRemoved(SWidget* Widget)"
  },
  {
    "label": "OnWidgetEventRaised()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWidgetEventRaised(const FSlateWidgetAccessibleEventArgs& Args)"
  },
  {
    "label": "ProcessAccessibleTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAccessibleTasks()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "HandleAccessibleWidgetFocusChangeEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAccessibleWidgetFocusChangeEvent(const TSharedRef<IAccessibleWidget>& FocusWidget, bool bIsWidgetGainingFocus, FAccessibleUserIndex UserIndex)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (task)",
    "insertText": "check(Task)"
  },
  {
    "label": "EnqueueAccessibleTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueAccessibleTask(const FSlateAccessibleTask& InAccessibleTask)"
  }
]