[
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "IToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolTip"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPanel"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "FCreateWidgetForActionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateWidgetForActionData"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FGraphActionNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphActionNode"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FEdGraphSchemaAction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphSchemaAction"
  },
  {
    "label": "FGraphActionListBuilderBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphActionListBuilderBase"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "FCustomExpanderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomExpanderData"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" Framework / SlateDelegates . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Misc / Attribute . h \" # include \" Misc / Optional . h \" # include \" SlateFwd . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" Types / SlateConstants . h \" # include \" Types / SlateEnums . h \" # include \" UObject / GCObject . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / SExpanderArrow . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STreeView . h \" class FReferenceCollector ; class ITableRow ; class IToolTip ; class SEditableTextBox ; class SPanel ; class SSearchBox ; class SWidget ; class UEdGraph ; class UEdGraphPin ; struct FCreateWidgetForActionData ; struct FGeometry ; struct FGraphActionNode ; struct FKeyEvent ; struct FPointerEvent ; struct FEdGraphSchemaAction ; struct FGraphActionListBuilderBase ;)",
    "insertText": "DECLARE_DELEGATE(FOnRenameRequestActionNode)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FCreateWidgetMouseButtonDown, TWeakPtr<FEdGraphSchemaAction>)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SDefaultGraphActionWidget : public SCompoundWidget {)",
    "insertText": "SLATE_BEGIN_ARGS(SDefaultGraphActionWidget)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FText, HighlightText) SLATE_END_ARGS() void Construct(const FArguments& InArgs, const FCreateWidgetForActionData* InCreateData)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "FCreateWidgetForActionData()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<FEdGraphSchemaAction> ActionPtr ; FCreateWidgetMouseButtonDown MouseButtonDownDelegate ; } ; struct FCreateWidgetForActionData { bool bHandleMouseButtonDown ; FCreateWidgetMouseButtonDown MouseButtonDownDelegate ; TSharedPtr<FEdGraphSchemaAction> Action ; FIsSelected IsRowSelectedDelegate ; FOnRenameRequestActionNode* const OnRenameRequest ; TAttribute<FText> HighlightText ; bool bIsReadOnly ;)",
    "insertText": "FCreateWidgetForActionData(FOnRenameRequestActionNode* const InOnRenameRequest) : OnRenameRequest(InOnRenameRequest) , bIsReadOnly(false)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (} } ; struct FCustomExpanderData { TSharedPtr<ITableRow> TableRow ; TSharedPtr<FEdGraphSchemaAction> RowAction ; TSharedPtr<SPanel> WidgetContainer ; } ; class SGraphActionMenu : public SCompoundWidget,public FGCObject { public :)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(TSharedRef<SWidget>, FOnCreateWidgetForAction, FCreateWidgetForActionData* const)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(TSharedRef<SExpanderArrow>, FOnCreateCustomRowExpander, FCustomExpanderData const&)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnActionSelected, const TArray< TSharedPtr<FEdGraphSchemaAction> >&, ESelectInfo::Type)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnActionDoubleClicked, const TArray< TSharedPtr<FEdGraphSchemaAction> >&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(FReply, FOnActionDragged, const TArray< TSharedPtr<FEdGraphSchemaAction> >&, const FPointerEvent&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(FReply, FOnCategoryDragged, const FText&, const FPointerEvent&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnCollectAllActions, FGraphActionListBuilderBase&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnCollectStaticSections, TArray<int32>& ) DECLARE_DELEGATE_ThreeParams( FOnCategoryTextCommitted, const FText&, ETextCommit::Type, TWeakPtr< FGraphActionNode >)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FCanRenameSelectedAction, TWeakPtr< FGraphActionNode >)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(FText, FGetSectionTitle, int32)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(TSharedPtr<IToolTip>, FGetSectionToolTip, int32)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(TSharedRef<SWidget>, FGetSectionWidget, TSharedRef<SWidget>, int32)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(FText, FGetFilterText)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FOnActionMatchesName, FEdGraphSchemaAction*, const FName&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(TSharedRef<FGraphActionListBuilderBase>, FOnGetActionList)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SGraphActionMenu) : _AutoExpandActionMenu(false) , _AlphaSortItems(true) , _SortItemsRecursively(true) , _ShowFilterTextBox(true) , _UseSectionStyling(false) , _bAllowPreselectedItemActivation(false) , _DefaultRowExpanderBaseIndentLevel(0) , _GraphObj(nullptr) , _bAutomaticallySelectSingleAction(false)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnActionSelected, OnActionSelected ) SLATE_EVENT( FOnActionDoubleClicked, OnActionDoubleClicked ) SLATE_EVENT( FOnActionDragged, OnActionDragged ) SLATE_EVENT( FOnCategoryDragged, OnCategoryDragged ) SLATE_EVENT( FOnContextMenuOpening, OnContextMenuOpening ) SLATE_EVENT( FOnCreateWidgetForAction, OnCreateWidgetForAction ) SLATE_EVENT( FOnCreateCustomRowExpander, OnCreateCustomRowExpander ) SLATE_EVENT( FOnGetActionList, OnGetActionList ) SLATE_EVENT( FOnCollectAllActions, OnCollectAllActions ) SLATE_EVENT( FOnCollectStaticSections, OnCollectStaticSections ) SLATE_EVENT( FOnCategoryTextCommitted, OnCategoryTextCommitted ) SLATE_EVENT( FCanRenameSelectedAction, OnCanRenameSelectedAction ) SLATE_EVENT( FGetSectionTitle, OnGetSectionTitle ) SLATE_EVENT( FGetSectionToolTip, OnGetSectionToolTip ) SLATE_EVENT( FGetSectionWidget, OnGetSectionWidget ) SLATE_EVENT( FGetFilterText, OnGetFilterText ) SLATE_EVENT( FOnActionMatchesName, OnActionMatchesName ) SLATE_ARGUMENT( bool, AutoExpandActionMenu ) SLATE_ARGUMENT( bool, AlphaSortItems ) SLATE_ARGUMENT( bool, SortItemsRecursively ) SLATE_ARGUMENT( bool, ShowFilterTextBox ) SLATE_ARGUMENT( bool, UseSectionStyling ) SLATE_ARGUMENT( bool, bAllowPreselectedItemActivation ) SLATE_ARGUMENT( int32, DefaultRowExpanderBaseIndentLevel ) SLATE_ARGUMENT( TArray<UEdGraphPin*>, DraggedFromPins ) SLATE_ARGUMENT( UEdGraph*, GraphObj ) SLATE_ARGUMENT( bool, bAutomaticallySelectSingleAction ) SLATE_END_ARGS() void Construct( const FArguments& InArgs, bool bIsReadOnly = true)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "RefreshAllActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshAllActions(bool bPreserveExpansion, bool bHandleOnSelectionEvent = true)"
  },
  {
    "label": "GetSectionExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSectionExpansion(TMap<int32, bool>& SectionExpansion)"
  },
  {
    "label": "SetSectionExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSectionExpansion(const TMap<int32, bool>& SectionExpansion)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<STreeView<TSharedPtr<FGraphActionNode>>> TreeView ; TSharedPtr<SSearchBox> FilterTextBox ; TSharedPtr<FGraphActionListBuilderBase> AllActions ; TArray<TSharedPtr<FGraphActionNode>> FilteredActionNodes ; TSharedPtr<FGraphActionNode> FilteredRootAction ; float SelectedSuggestionScore ; int32 SelectedSuggestionSourceIndex ; TSharedPtr<FGraphActionNode> SelectedAction ; bool bIgnoreUIUpdate ; bool bAutoExpandActionMenu ; bool bShowFilterTextBox ; bool bAlphaSortItems ; bool bSortItemsRecursively ; bool bUseSectionStyling ; bool bIsKeyboardNavigating ; bool bAllowPreselectedItemActivation ; bool bAutomaticallySelectSingleAction ; int32 DefaultRowExpanderBaseIndentLevel ; int32 DisplayIndex ; FOnActionSelected OnActionSelected ; FOnActionDoubleClicked OnActionDoubleClicked ; FOnActionDragged OnActionDragged ; FOnCategoryDragged OnCategoryDragged ; FOnCreateWidgetForAction OnCreateWidgetForAction ; FOnCreateCustomRowExpander OnCreateCustomRowExpander ; FOnGetActionList OnGetActionList ; FOnCollectAllActions OnCollectAllActions ; FOnCollectStaticSections OnCollectStaticSections ; FOnCategoryTextCommitted OnCategoryTextCommitted ; FCanRenameSelectedAction OnCanRenameSelectedAction ; FGetSectionTitle OnGetSectionTitle ; FGetSectionToolTip OnGetSectionToolTip ; FGetSectionWidget OnGetSectionWidget ; FGetFilterText OnGetFilterText ; FOnActionMatchesName OnActionMatchesName ; public : FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& KeyEvent)"
  },
  {
    "label": "GetFilterTextBox()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SEditableTextBox>)",
    "insertText": "GetFilterTextBox()"
  },
  {
    "label": "GetSelectedActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSelectedActions(TArray< TSharedPtr<FEdGraphSchemaAction> >& OutSelectedActions)"
  },
  {
    "label": "OnRequestRenameOnActionNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRequestRenameOnActionNode()"
  },
  {
    "label": "CanRequestRenameOnActionNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRequestRenameOnActionNode()"
  },
  {
    "label": "GetSelectedCategoryName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSelectedCategoryName()"
  },
  {
    "label": "GetSelectedCategorySubActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSelectedCategorySubActions(TArray<TSharedPtr<FEdGraphSchemaAction>>& OutActions)"
  },
  {
    "label": "GetCategorySubActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCategorySubActions(TWeakPtr<FGraphActionNode> InAction, TArray<TSharedPtr<FEdGraphSchemaAction>>& OutActions)"
  },
  {
    "label": "SelectItemByName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectItemByName(const FName& ItemName, ESelectInfo::Type SelectInfo = ESelectInfo::Direct, int32 SectionId = INDEX_NONE, bool bIsCategory = false)"
  },
  {
    "label": "ExpandCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandCategory(const FText& CategoryName)"
  },
  {
    "label": "OnMouseButtonDownEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnMouseButtonDownEvent(TWeakPtr<FEdGraphSchemaAction> InAction)"
  },
  {
    "label": "UpdateForNewActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateForNewActions(int32 IdxStart)"
  },
  {
    "label": "GenerateFilteredItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateFilteredItems(bool bPreserveExpansion)"
  },
  {
    "label": "GetFilterText()",
    "kind": "Method",
    "detail": "Function (FString LastUsedFilterText ; protected : FText)",
    "insertText": "GetFilterText()"
  },
  {
    "label": "MarkActiveSuggestion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkActiveSuggestion()"
  },
  {
    "label": "TryToSpawnActiveSuggestion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryToSpawnActiveSuggestion()"
  },
  {
    "label": "ShouldExpandNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldExpandNodes()"
  },
  {
    "label": "CanRenameNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameNode(TWeakPtr<FGraphActionNode> InNode)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted(const FText& InText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnGetChildrenForCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForCategory(TSharedPtr<FGraphActionNode> InItem, TArray< TSharedPtr<FGraphActionNode> >& OutChildren)"
  },
  {
    "label": "MakeWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeWidget(TSharedPtr<FGraphActionNode> InItem, const TSharedRef<STableViewBase>& OwnerTable, bool bIsReadOnly)"
  },
  {
    "label": "OnItemSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemSelected(TSharedPtr< FGraphActionNode > InSelectedItem, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "HandleSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleSelection(TSharedPtr< FGraphActionNode > &InSelectedItem, ESelectInfo::Type InSelectionType)"
  },
  {
    "label": "OnItemDoubleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemDoubleClicked(TSharedPtr< FGraphActionNode > InClickedItem)"
  },
  {
    "label": "OnItemDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnItemDragDetected(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnNameTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNameTextCommitted(const FText& NewText, ETextCommit::Type InTextCommit, TWeakPtr< FGraphActionNode > InAction)"
  },
  {
    "label": "OnItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemScrolledIntoView(TSharedPtr<FGraphActionNode> InActionNode, const TSharedPtr<ITableRow>& InWidget)"
  },
  {
    "label": "OnSetExpansionRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetExpansionRecursive(TSharedPtr<FGraphActionNode> InTreeNode, bool bInIsItemExpanded)"
  },
  {
    "label": "ScoreAndAddActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScoreAndAddActions(int32 StartingIndex = INDEX_NONE)"
  },
  {
    "label": "SelectPreviousAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectPreviousAction(int32 Num = 1)"
  },
  {
    "label": "SelectNextAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectNextAction(int32 Num = 1)"
  },
  {
    "label": "SelectFirstAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectFirstAction()"
  },
  {
    "label": "SelectLastAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectLastAction()"
  },
  {
    "label": "GetFirstAction()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "GetFirstAction()"
  },
  {
    "label": "GetFilteredActionNodes()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FGraphActionNode>>&)",
    "insertText": "GetFilteredActionNodes(int32* OutSelectedIndex = nullptr)"
  },
  {
    "label": "GetTotalLeafNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetTotalLeafNodes()"
  }
]