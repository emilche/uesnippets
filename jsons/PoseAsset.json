[
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FLiveLinkCurveElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLiveLinkCurveElement"
  },
  {
    "label": "FReferenceSkeleton",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceSkeleton"
  },
  {
    "label": "FPoseAssetDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPoseAssetDetails"
  },
  {
    "label": "FPoseData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseData"
  },
  {
    "label": "FPoseAssetInfluence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseAssetInfluence"
  },
  {
    "label": "FPoseAssetInfluences",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseAssetInfluences"
  },
  {
    "label": "FPoseDataContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseDataContainer"
  },
  {
    "label": "UPoseAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseAsset"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "UPoseAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseAsset"
  },
  {
    "label": "FPoseDataContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseDataContainer"
  },
  {
    "label": "FCompactPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactPose"
  },
  {
    "label": "FAnimationPoseData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationPoseData"
  },
  {
    "label": "FCompactPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactPose"
  },
  {
    "label": "FAnimationPoseData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationPoseData"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "FPoseAssetDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPoseAssetDetails"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "DeleteTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteTrack(int32 TrackIndex)"
  },
  {
    "label": "AddOrUpdatePose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrUpdatePose(const FName& InPoseName, const TArray<FTransform>& InlocalSpacePose, const TArray<float>& InCurveData)"
  },
  {
    "label": "RenamePose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenamePose(FName OldPoseName, FName NewPoseName)"
  },
  {
    "label": "DeletePose()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DeletePose(FName PoseName)"
  },
  {
    "label": "DeleteCurve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteCurve(FName CurveName)"
  },
  {
    "label": "InsertTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InsertTrack(const FName& InTrackName, USkeleton* InSkeleton, const TArray<FTransform>& RefPose)"
  },
  {
    "label": "FillUpSkeletonPose()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FillUpSkeletonPose(FPoseData* PoseData, const USkeleton* InSkeleton)"
  },
  {
    "label": "RetrieveSourcePoseFromExistingPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetrieveSourcePoseFromExistingPose(bool bAdditive, int32 InBasePoseIndex, const TArray<FTransform>& InBasePose, const TArray<float>& InBaseCurve)"
  },
  {
    "label": "ConvertToFullPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToFullPose(USkeleton* InSkeleton, const TArray<FTransform>& RefPose)"
  },
  {
    "label": "ConvertToAdditivePose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToAdditivePose(const TArray<FTransform>& InBasePose, const TArray<float>& InBaseCurve)"
  },
  {
    "label": "RebuildCurveIndexTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildCurveIndexTable()"
  },
  {
    "label": "RenamePose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenamePose(const FName& OriginalPoseName, const FName& NewPoseName)"
  },
  {
    "label": "SetBasePoseName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetBasePoseName(const FName& NewBasePoseName)"
  },
  {
    "label": "AddPoseWithUniqueName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "AddPoseWithUniqueName(const USkeletalMeshComponent* MeshComponent)"
  },
  {
    "label": "AddOrUpdatePose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrUpdatePose(const FName& PoseName, const USkeletalMeshComponent* MeshComponent, bool bUpdateCurves = true)"
  },
  {
    "label": "AddReferencePose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencePose(const FSmartName& PoseName, const FReferenceSkeleton& ReferenceSkeleton)"
  },
  {
    "label": "AddReferencePose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencePose(const FName& PoseName, const FReferenceSkeleton& ReferenceSkeleton)"
  },
  {
    "label": "CreatePoseFromAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePoseFromAnimation(class UAnimSequence* AnimSequence, const TArray<FName>* InPoseNames = nullptr)"
  },
  {
    "label": "UpdatePoseFromAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePoseFromAnimation(class UAnimSequence* AnimSequence)"
  },
  {
    "label": "ModifyPoseName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ModifyPoseName(OldPoseName, NewPoseName)"
  },
  {
    "label": "ModifyPoseName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifyPoseName(FName OldPoseName, FName NewPoseName)"
  },
  {
    "label": "RenameSmartName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameSmartName(const FName& InOriginalName, const FName& InNewName)"
  },
  {
    "label": "RenamePoseOrCurveName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenamePoseOrCurveName(const FName& InOriginalName, const FName& InNewName)"
  },
  {
    "label": "RemoveSmartNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSmartNames(const TArray<FName>& InNamesToRemove)"
  },
  {
    "label": "RemovePoseOrCurveNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePoseOrCurveNames(const TArray<FName>& InNamesToRemove)"
  },
  {
    "label": "DeletePoses()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DeletePoses(TArray<FName> PoseNamesToDelete)"
  },
  {
    "label": "DeleteCurves()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DeleteCurves(TArray<FName> CurveNamesToDelete)"
  },
  {
    "label": "ConvertSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertSpace(bool bNewAdditivePose, int32 NewBasePoseInde)"
  },
  {
    "label": "GetUniquePoseName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetUniquePoseName(const USkeleton* Skeleton)"
  },
  {
    "label": "GetUniquePoseSmartName()",
    "kind": "Method",
    "detail": "Function (FSmartName)",
    "insertText": "GetUniquePoseSmartName(USkeleton* Skeleton)"
  },
  {
    "label": "GetUniquePoseName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetUniquePoseName(UPoseAsset* PoseAsset)"
  },
  {
    "label": "CombineTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CombineTracks(const TArray<FName>& NewTracks)"
  },
  {
    "label": "ConvertToFullPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToFullPose()"
  },
  {
    "label": "ConvertToAdditivePose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToAdditivePose(int32 NewBasePoseIndex)"
  },
  {
    "label": "Reinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reinitialize()"
  },
  {
    "label": "AddOrUpdatePose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrUpdatePose(const FName& PoseName, const TArray<FName>& TrackNames, const TArray<FTransform>& LocalTransform, const TArray<float>& CurveValues)"
  },
  {
    "label": "PostProcessData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostProcessData()"
  },
  {
    "label": "BreakAnimationSequenceGUIDComparison()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakAnimationSequenceGUIDComparison()"
  },
  {
    "label": "UpdateTrackBoneIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackBoneIndices()"
  },
  {
    "label": "RemoveInvalidTracks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveInvalidTracks()"
  },
  {
    "label": "SetRetargetSourceAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRetargetSourceAsset(USkeletalMesh* InRetargetSourceAsset)"
  },
  {
    "label": "ClearRetargetSourceAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearRetargetSourceAsset()"
  },
  {
    "label": "UpdateRetargetSourceAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRetargetSourceAssetData()"
  }
]