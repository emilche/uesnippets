[
  {
    "label": "CreateSquareFrameGenerator()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_CREATE_FRAME_GENERATOR_H_ # define API_TEST_CREATE_FRAME_GENERATOR_H_ # include<memory> # include<string> # include<vector> # include \" absl / types / optional . h \" # include \" api / test / frame_generator_interface . h \" # include \" system_wrappers / include / clock . h \" namespace webrtc { namespace test { std::unique_ptr<FrameGeneratorInterface>)",
    "insertText": "CreateSquareFrameGenerator(int width, int height, absl::optional<FrameGeneratorInterface::OutputType> type, absl::optional<int> num_squares)"
  },
  {
    "label": "CreateFromYuvFileFrameGenerator()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameGeneratorInterface>)",
    "insertText": "CreateFromYuvFileFrameGenerator(std::vector<std::string> filenames, size_t width, size_t height, int frame_repeat_count)"
  },
  {
    "label": "CreateFromNV12FileFrameGenerator()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameGeneratorInterface>)",
    "insertText": "CreateFromNV12FileFrameGenerator(std::vector<std::string> filenames, size_t width, size_t height, int frame_repeat_count = 1)"
  },
  {
    "label": "CreateFromIvfFileFrameGenerator()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameGeneratorInterface>)",
    "insertText": "CreateFromIvfFileFrameGenerator(std::string filename)"
  },
  {
    "label": "CreateScrollingInputFromYuvFilesFrameGenerator()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameGeneratorInterface>)",
    "insertText": "CreateScrollingInputFromYuvFilesFrameGenerator(Clock* clock, std::vector<std::string> filenames, size_t source_width, size_t source_height, size_t target_width, size_t target_height, int64_t scroll_time_ms, int64_t pause_time_ms)"
  },
  {
    "label": "CreateSlideFrameGenerator()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameGeneratorInterface>)",
    "insertText": "CreateSlideFrameGenerator(int width, int height, int frame_repeat_count)"
  }
]