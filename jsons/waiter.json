[
  {
    "label": "Waiter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Waiter"
  },
  {
    "label": "WinHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WinHelper"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_SYNCHRONIZATION_INTERNAL_WAITER_H_ # define ABSL_SYNCHRONIZATION_INTERNAL_WAITER_H_ # include \" absl / base / config . h \" # ifdef _WIN32 # include<sdkddkver . h> # else # include<pthread . h> # endif # ifdef __linux__ # include<linux / futex . h> # endif # ifdef ABSL_HAVE_SEMAPHORE_H # include<semaphore . h> # endif # include<atomic> # include<cstdint> # include \" absl / base / internal / thread_identity . h \" # include \" absl / synchronization / internal / futex . h \" # include \" absl / synchronization / internal / kernel_timeout . h \" # define ABSL_WAITER_MODE_FUTEX 0 # define ABSL_WAITER_MODE_SEM 1 # define ABSL_WAITER_MODE_CONDVAR 2 # define ABSL_WAITER_MODE_WIN32 3 # if)",
    "insertText": "defined(ABSL_FORCE_WAITER_MODE) #define ABSL_WAITER_MODE ABSL_FORCE_WAITER_MODE #elif defined(_WIN32) && _WIN32_WINNT >= _WIN32_WINNT_VISTA #define ABSL_WAITER_MODE ABSL_WAITER_MODE_WIN32 #elif defined(ABSL_INTERNAL_HAVE_FUTEX) #define ABSL_WAITER_MODE ABSL_WAITER_MODE_FUTEX #elif defined(ABSL_HAVE_SEMAPHORE_H)"
  },
  {
    "label": "Waiter()",
    "kind": "Method",
    "detail": "Function (ABSL_NAMESPACE_BEGIN namespace synchronization_internal { class Waiter { public :)",
    "insertText": "Waiter()"
  },
  {
    "label": "Waiter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Waiter(const Waiter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Waiter&)",
    "insertText": "operator(const Waiter&)"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Wait(KernelTimeout t)"
  },
  {
    "label": "Post()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Post()"
  },
  {
    "label": "Poke()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Poke()"
  },
  {
    "label": "GetWaiter()",
    "kind": "Method",
    "detail": "Function (Waiter*)",
    "insertText": "GetWaiter(base_internal::ThreadIdentity* identity)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (# if ABSL_WAITER_MODE = = ABSL_WAITER_MODE_FUTEX std::atomic<int32_t> futex_ ;)",
    "insertText": "static_assert(sizeof(int32_t) == sizeof(futex_), \"Wrong size for futex\")"
  },
  {
    "label": "InternalCondVarPoke()",
    "kind": "Method",
    "detail": "Function (# elif ABSL_WAITER_MODE = = ABSL_WAITER_MODE_CONDVAR void)",
    "insertText": "InternalCondVarPoke()"
  },
  {
    "label": "alignas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "alignas(void*) unsigned char mu_storage_[sizeof(void*)"
  },
  {
    "label": "alignas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "alignas(void*) unsigned char cv_storage_[sizeof(void*)"
  }
]