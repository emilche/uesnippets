[
  {
    "label": "TLess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TLess"
  },
  {
    "label": "IsSortedBy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / IdentityFunctor . h \" # include \" Templates / Invoke . h \" # include \" Templates / Less . h \" # include \" Templates / UnrealTemplate . h \" namespace AlgoImpl { template<T,IndexType,ProjectionType,PredType> bool)",
    "insertText": "IsSortedBy(const T* Range, IndexType RangeSize, ProjectionType Proj, PredType Pred)"
  },
  {
    "label": "Invoke()",
    "kind": "Method",
    "detail": "Function (auto&& Ref2 =)",
    "insertText": "Invoke(Proj, *Range)"
  },
  {
    "label": "IsSorted()",
    "kind": "Method",
    "detail": "Function (} template<RangeType,PredType> bool)",
    "insertText": "IsSorted(const RangeType& Range, PredType Pred)"
  },
  {
    "label": "IsSortedBy()",
    "kind": "Method",
    "detail": "Function (} template<RangeType,ProjectionType> bool)",
    "insertText": "IsSortedBy(const RangeType& Range, ProjectionType Projection)"
  },
  {
    "label": "IsSortedBy()",
    "kind": "Method",
    "detail": "Function (} template<RangeType,ProjectionType,PredType> bool)",
    "insertText": "IsSortedBy(const RangeType& Range, ProjectionType Projection, PredType Pred)"
  }
]