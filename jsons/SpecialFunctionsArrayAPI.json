[
  {
    "label": "igamma()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_SPECIALFUNCTIONS_ARRAYAPI_H # define EIGEN_SPECIALFUNCTIONS_ARRAYAPI_H namespace Eigen { template<Derived,ExponentDerived> EIGEN_STRONG_INLINE const Eigen::CwiseBinaryOp<Eigen::internal::scalar_igamma_op<Derived::Scalar>,const Derived,const ExponentDerived>)",
    "insertText": "igamma(const Eigen::ArrayBase<Derived>& a, const Eigen::ArrayBase<ExponentDerived>& x)"
  },
  {
    "label": "igamma_der_a()",
    "kind": "Method",
    "detail": "Function (} template<Derived,ExponentDerived> EIGEN_STRONG_INLINE const Eigen::CwiseBinaryOp<Eigen::internal::scalar_igamma_der_a_op<Derived::Scalar>,const Derived,const ExponentDerived>)",
    "insertText": "igamma_der_a(const Eigen::ArrayBase<Derived>& a, const Eigen::ArrayBase<ExponentDerived>& x)"
  },
  {
    "label": "gamma_sample_der_alpha()",
    "kind": "Method",
    "detail": "Function (} template<AlphaDerived,SampleDerived> EIGEN_STRONG_INLINE const Eigen::CwiseBinaryOp<Eigen::internal::scalar_gamma_sample_der_alpha_op<AlphaDerived::Scalar>,const AlphaDerived,const SampleDerived>)",
    "insertText": "gamma_sample_der_alpha(const Eigen::ArrayBase<AlphaDerived>& alpha, const Eigen::ArrayBase<SampleDerived>& sample)"
  },
  {
    "label": "igammac()",
    "kind": "Method",
    "detail": "Function (} template<Derived,ExponentDerived> EIGEN_STRONG_INLINE const Eigen::CwiseBinaryOp<Eigen::internal::scalar_igammac_op<Derived::Scalar>,const Derived,const ExponentDerived>)",
    "insertText": "igammac(const Eigen::ArrayBase<Derived>& a, const Eigen::ArrayBase<ExponentDerived>& x)"
  },
  {
    "label": "polygamma()",
    "kind": "Method",
    "detail": "Function (} template<DerivedN,DerivedX> EIGEN_STRONG_INLINE const Eigen::CwiseBinaryOp<Eigen::internal::scalar_polygamma_op<DerivedX::Scalar>,const DerivedN,const DerivedX>)",
    "insertText": "polygamma(const Eigen::ArrayBase<DerivedN>& n, const Eigen::ArrayBase<DerivedX>& x)"
  },
  {
    "label": "betainc()",
    "kind": "Method",
    "detail": "Function (} template<ArgADerived,ArgBDerived,ArgXDerived> EIGEN_STRONG_INLINE const Eigen::CwiseTernaryOp<Eigen::internal::scalar_betainc_op<ArgXDerived::Scalar>,const ArgADerived,const ArgBDerived,const ArgXDerived>)",
    "insertText": "betainc(const Eigen::ArrayBase<ArgADerived>& a, const Eigen::ArrayBase<ArgBDerived>& b, const Eigen::ArrayBase<ArgXDerived>& x)"
  },
  {
    "label": "zeta()",
    "kind": "Method",
    "detail": "Function (} template<DerivedX,DerivedQ> EIGEN_STRONG_INLINE const Eigen::CwiseBinaryOp<Eigen::internal::scalar_zeta_op<DerivedX::Scalar>,const DerivedX,const DerivedQ>)",
    "insertText": "zeta(const Eigen::ArrayBase<DerivedX>& x, const Eigen::ArrayBase<DerivedQ>& q)"
  }
]