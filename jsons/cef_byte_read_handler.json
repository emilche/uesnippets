[
  {
    "label": "CefByteReadHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefByteReadHandler"
  },
  {
    "label": "CefByteReadHandler()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_WRAPPER_CEF_BYTE_READ_HANDLER_H_ # define CEF_INCLUDE_WRAPPER_CEF_BYTE_READ_HANDLER_H_ # pragma once # include \" include / base / cef_lock . h \" # include \" include / base / cef_macros . h \" # include \" include / cef_base . h \" # include \" include / cef_stream . h \" class CefByteReadHandler : public CefReadHandler { public :)",
    "insertText": "CefByteReadHandler(const unsigned char* bytes, size_t size, CefRefPtr<CefBaseRefCounted> source)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Read(void* ptr, size_t size, size_t n)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Seek(int64 offset, int whence)"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "Tell()"
  },
  {
    "label": "Eof()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Eof()"
  },
  {
    "label": "MayBlock()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MayBlock()"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(CefByteReadHandler)"
  }
]