[
  {
    "label": "FInBunch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInBunch"
  },
  {
    "label": "UVoiceChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVoiceChannel"
  },
  {
    "label": "FVoicePacket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVoicePacket"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" Engine / Channel . h \" # include \" Net / VoiceDataCommon . h \" # include \" VoiceChannel . generated . h \" class FInBunch ;)",
    "insertText": "UCLASS(transient, customConstructor, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "UVoiceChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UVoiceChannel(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : UChannel(ObjectInitializer)"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (ChName = NAME_Voice ; } protected : bool)",
    "insertText": "CleanUp(const bool bForDestroy, EChannelCloseReason CloseReason)"
  },
  {
    "label": "ReceivedBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivedBunch(FInBunch& Bunch)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "CanStopTicking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanStopTicking()"
  },
  {
    "label": "AddVoicePacket()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "AddVoicePacket(TSharedPtr<class FVoicePacket> VoicePacket)"
  }
]