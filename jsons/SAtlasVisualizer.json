[
  {
    "label": "ISlateAtlasProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateAtlasProvider"
  },
  {
    "label": "SAtlasVisualizerPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAtlasVisualizerPanel"
  },
  {
    "label": "SAtlasVisualizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAtlasVisualizer"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Input / Reply . h \" # include \" Rendering / RenderingCommon . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Input / SComboBox . h \" class ISlateAtlasProvider ; class SAtlasVisualizerPanel ; class SAtlasVisualizer : public ISlateViewport,public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAtlasVisualizer ) : _AtlasProvider()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(ISlateAtlasProvider*, AtlasProvider ) SLATE_END_ARGS() virtual FIntPoint GetSize()"
  },
  {
    "label": "RequiresVsync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresVsync()"
  },
  {
    "label": "GetViewportRenderTargetTexture()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResource*)",
    "insertText": "GetViewportRenderTargetTexture()"
  },
  {
    "label": "IsViewportTextureAlphaOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsViewportTextureAlphaOnly()"
  },
  {
    "label": "OnMouseEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseEnter(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseLeave(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseMove()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseMove(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnDrawViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDrawViewport(const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, class FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "RebuildToolTip()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RebuildToolTip(const FAtlasSlotInfo& Info)"
  },
  {
    "label": "GetViewportSizeText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetViewportSizeText()"
  },
  {
    "label": "GetViewportWidgetSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetViewportWidgetSize()"
  },
  {
    "label": "GetZoomLevelPercentText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetZoomLevelPercentText()"
  },
  {
    "label": "OnFitToWindowStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFitToWindowStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnGetFitToWindowState()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "OnGetFitToWindowState()"
  },
  {
    "label": "OnActualSizeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnActualSizeClicked()"
  },
  {
    "label": "OnGetDisplayCheckerboardVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "OnGetDisplayCheckerboardVisibility()"
  },
  {
    "label": "OnDisplayCheckerboardStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisplayCheckerboardStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnGetCheckerboardState()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "OnGetCheckerboardState()"
  },
  {
    "label": "OnGetCheckerboardVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "OnGetCheckerboardVisibility()"
  },
  {
    "label": "OnComboOpening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnComboOpening()"
  },
  {
    "label": "OnGetSelectedItemText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnGetSelectedItemText()"
  },
  {
    "label": "OnAtlasPageChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAtlasPageChanged(TSharedPtr<int32> AtlasPage, ESelectInfo::Type SelectionType)"
  },
  {
    "label": "OnGenerateWidgetForCombo()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateWidgetForCombo(TSharedPtr<int32> AtlasPage)"
  }
]