[
  {
    "label": "UParticleSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystemComponent"
  },
  {
    "label": "UParticleSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystem"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPSCPoolElem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPSCPoolElem"
  },
  {
    "label": "FPSCPool",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPSCPool"
  },
  {
    "label": "FWorldPSCPool",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPSCPool"
  },
  {
    "label": "ENABLE_PSC_POOL_DEBUGGING()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" WorldPSCPool . generated . h \" class UParticleSystemComponent ; class UParticleSystem ; # define)",
    "insertText": "ENABLE_PSC_POOL_DEBUGGING(!UE_BUILD_SHIPPING) UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (None,AutoRelease,ManualRelease,ManualRelease_OnComplete)",
    "insertText": "UMETA(Hidden), FreeInPool UMETA(Hidden)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(transient)"
  },
  {
    "label": "FPSCPoolElem()",
    "kind": "Method",
    "detail": "Function (float LastUsedTime ;)",
    "insertText": "FPSCPoolElem() : PSC(nullptr), LastUsedTime(0.0f)"
  },
  {
    "label": "FPSCPoolElem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPSCPoolElem(UParticleSystemComponent* InPSC, float InLastUsedTime) : PSC(InPSC), LastUsedTime(InLastUsedTime)"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (# if ENABLE_PSC_POOL_DEBUGGING TArray<TWeakObjectPtr<UParticleSystemComponent>> InUseComponents_Auto ; TArray<TWeakObjectPtr<UParticleSystemComponent>> InUseComponents_Manual ; int32 MaxUsed = 0 ; # endif public : void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "Acquire()",
    "kind": "Method",
    "detail": "Function (UParticleSystemComponent*)",
    "insertText": "Acquire(UWorld* World, UParticleSystem* Template, EPSCPoolMethod PoolingMethod)"
  },
  {
    "label": "Reclaim()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reclaim(UParticleSystemComponent* PSC, const float CurrentTimeSeconds)"
  },
  {
    "label": "KillUnusedComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "KillUnusedComponents(float KillTime, UParticleSystem* Template)"
  },
  {
    "label": "NumComponents()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumComponents()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() private: UPROPERTY()"
  },
  {
    "label": "FWorldPSCPool()",
    "kind": "Method",
    "detail": "Function (float LastParticleSytemPoolCleanTime ; float CachedWorldTime ; public :)",
    "insertText": "FWorldPSCPool()"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup(UWorld* World)"
  },
  {
    "label": "CreateWorldParticleSystem()",
    "kind": "Method",
    "detail": "Function (UParticleSystemComponent*)",
    "insertText": "CreateWorldParticleSystem(UParticleSystem* Template, UWorld* World, EPSCPoolMethod PoolingMethod)"
  },
  {
    "label": "ReclaimWorldParticleSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReclaimWorldParticleSystem(UParticleSystemComponent* PSC)"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dump()"
  }
]