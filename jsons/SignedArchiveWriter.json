[
  {
    "label": "FSignedArchiveWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSignedArchiveWriter"
  },
  {
    "label": "SerializeBufferAndSign()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Serialization / Archive . h \" # include \" Serialization / MemoryWriter . h \" # include \" Math / BigInt . h \" # include \" IPlatformFilePak . h \" class FSignedArchiveWriter : public FArchive { TArray<uint8> Buffer ; FMemoryWriter BufferArchive ; FArchive& PakWriter ; FString PakSignaturesFilename ; int64 SizeOnDisk ; int64 PakSize ; const FRSAKeyHandle SigningKey ; TArray<TPakChunkHash> ChunkHashes ; TArray<uint8> SignatureData ; void)",
    "insertText": "SerializeBufferAndSign()"
  },
  {
    "label": "FSignedArchiveWriter()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FSignedArchiveWriter(FArchive& InPak, const FString& InPakFilename, const FRSAKeyHandle InSigningKey)"
  },
  {
    "label": "FSignedArchiveWriter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSignedArchiveWriter()"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Close()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(void* Data, int64 Length)"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "Tell()"
  },
  {
    "label": "TotalSize()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "TotalSize()"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Seek(int64 InPos)"
  },
  {
    "label": "SetSignatureData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSignatureData(TArray<uint8>& InSignatureData)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (SignatureData =)",
    "insertText": "MoveTemp(InSignatureData)"
  }
]