[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UCurveEditorFilterBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveEditorFilterBase"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "properties",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "properties"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<FCurveEditor> InCurveEditor, UClass* DefaultFilterClass)"
  },
  {
    "label": "SetFilterClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterClass(UClass* InClass)"
  },
  {
    "label": "OpenDialog()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SCurveEditorFilterPanel>)",
    "insertText": "OpenDialog(TSharedPtr<SWindow> RootWindow, TSharedRef<FCurveEditor> InHostCurveEditor, TSubclassOf<UCurveEditorFilterBase> DefaultFilterClass)"
  },
  {
    "label": "CloseDialog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseDialog()"
  },
  {
    "label": "OnApplyClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnApplyClicked()"
  }
]