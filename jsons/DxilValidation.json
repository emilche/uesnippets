[
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "DiagnosticPrinter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticPrinter"
  },
  {
    "label": "DiagnosticInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfo"
  },
  {
    "label": "DxilContainerHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilContainerHeader"
  },
  {
    "label": "PrintDiagnosticContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PrintDiagnosticContext"
  },
  {
    "label": "GetValidationRuleText()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" dxc / DXIL / DxilConstants . h \" # include \" dxc / Support / Global . h \" # include \" dxc / WinAdapter . h \" # include<memory> namespace llvm { class Module ; class LLVMContext ; class raw_ostream ; class DiagnosticPrinter ; class DiagnosticInfo ; } namespace hlsl { # include \" dxc / HLSL / DxilValidation . inc \" const char*)",
    "insertText": "GetValidationRuleText(ValidationRule value)"
  },
  {
    "label": "GetValidationVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetValidationVersion(unsigned *pMajor, unsigned *pMinor)"
  },
  {
    "label": "ValidateDxilModule()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "ValidateDxilModule(llvm::Module *pModule, llvm::Module *pDebugModule)"
  },
  {
    "label": "VerifySignatureMatches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VerifySignatureMatches(llvm::Module *pModule, hlsl::DXIL::SignatureKind SigKind, const void *pSigData, uint32_t SigSize)"
  },
  {
    "label": "VerifyPSVMatches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VerifyPSVMatches(llvm::Module *pModule, const void *pPSVData, uint32_t PSVSize)"
  },
  {
    "label": "VerifyRDATMatches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VerifyRDATMatches(llvm::Module *pModule, const void *pRDATData, uint32_t RDATSize)"
  },
  {
    "label": "VerifyFeatureInfoMatches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VerifyFeatureInfoMatches(llvm::Module *pModule, const void *pFeatureInfoData, uint32_t FeatureInfoSize)"
  },
  {
    "label": "ValidateDxilContainerParts()",
    "kind": "Method",
    "detail": "Function (struct DxilContainerHeader ; HRESULT)",
    "insertText": "ValidateDxilContainerParts(llvm::Module *pModule, llvm::Module *pDebugModule, const DxilContainerHeader *pContainer, uint32_t ContainerSize)"
  },
  {
    "label": "ValidateLoadModule()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "ValidateLoadModule(const char *pIL, uint32_t ILLength, std::unique_ptr<llvm::Module> &pModule, llvm::LLVMContext &Ctx, llvm::raw_ostream &DiagStream, unsigned bLazyLoad)"
  },
  {
    "label": "ValidateLoadModuleFromContainer()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "ValidateLoadModuleFromContainer(const void *pContainer, uint32_t ContainerSize, std::unique_ptr<llvm::Module> &pModule, std::unique_ptr<llvm::Module> &pDebugModule, llvm::LLVMContext &Ctx, llvm::LLVMContext &DbgCtx, llvm::raw_ostream &DiagStream)"
  },
  {
    "label": "ValidateLoadModuleFromContainerLazy()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "ValidateLoadModuleFromContainerLazy(const void *pContainer, uint32_t ContainerSize, std::unique_ptr<llvm::Module> &pModule, std::unique_ptr<llvm::Module> &pDebugModule, llvm::LLVMContext &Ctx, llvm::LLVMContext &DbgCtx, llvm::raw_ostream &DiagStream)"
  },
  {
    "label": "ValidateDxilBitcode()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "ValidateDxilBitcode(const char *pIL, uint32_t ILLength, llvm::raw_ostream &DiagStream)"
  },
  {
    "label": "ValidateDxilContainer()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "ValidateDxilContainer(const void *pContainer, uint32_t ContainerSize, llvm::raw_ostream &DiagStream)"
  },
  {
    "label": "ValidateDxilContainer()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "ValidateDxilContainer(const void *pContainer, uint32_t ContainerSize, const void *pOptDebugBitcode, uint32_t OptDebugBitcodeSize, llvm::raw_ostream &DiagStream)"
  },
  {
    "label": "PrintDiagnosticContext()",
    "kind": "Method",
    "detail": "Function (class PrintDiagnosticContext { private : llvm::DiagnosticPrinter& m_Printer ; bool m_errorsFound ; bool m_warningsFound ; public :)",
    "insertText": "PrintDiagnosticContext(llvm::DiagnosticPrinter &printer)"
  },
  {
    "label": "HasErrors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasErrors()"
  },
  {
    "label": "HasWarnings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasWarnings()"
  },
  {
    "label": "Handle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Handle(const llvm::DiagnosticInfo &DI)"
  },
  {
    "label": "PrintDiagnosticHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintDiagnosticHandler(const llvm::DiagnosticInfo &DI, void *Context)"
  }
]