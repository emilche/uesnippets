[
  {
    "label": "_cef_media_observer_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_media_observer_t"
  },
  {
    "label": "_cef_media_route_create_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_media_route_create_callback_t"
  },
  {
    "label": "_cef_media_route_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_media_route_t"
  },
  {
    "label": "_cef_media_sink_device_info_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_media_sink_device_info_callback_t"
  },
  {
    "label": "_cef_media_sink_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_media_sink_t"
  },
  {
    "label": "_cef_media_source_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_media_source_t"
  },
  {
    "label": "_cef_media_router_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_media_router_t"
  },
  {
    "label": "_cef_registration_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_registration_t"
  },
  {
    "label": "_cef_completion_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_completion_callback_t"
  },
  {
    "label": "_cef_media_sink_device_info_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_media_sink_device_info_t"
  },
  {
    "label": "_cef_registration_t()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_MEDIA_ROUTER_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_MEDIA_ROUTER_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_callback_capi . h \" # include \" include / capi / cef_registration_capi . h \" # ifdef __cplusplus \" C \" { # endif struct _cef_media_observer_t ; struct _cef_media_route_create_callback_t ; struct _cef_media_route_t ; struct _cef_media_sink_device_info_callback_t ; struct _cef_media_sink_t ; struct _cef_media_source_t ; typedef struct _cef_media_router_t { cef_base_ref_counted_t base ; struct)",
    "insertText": "_cef_registration_t(CEF_CALLBACK* add_observer)( struct _cef_media_router_t* self, struct _cef_media_observer_t* observer)"
  },
  {
    "label": "_cef_media_source_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_media_source_t(CEF_CALLBACK* get_source)( struct _cef_media_router_t* self, const cef_string_t* urn)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* notify_current_sinks)(struct _cef_media_router_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* create_route)( struct _cef_media_router_t* self, struct _cef_media_source_t* source, struct _cef_media_sink_t* sink, struct _cef_media_route_create_callback_t* callback)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* notify_current_routes)(struct _cef_media_router_t* self)"
  },
  {
    "label": "cef_media_router_get_global()",
    "kind": "Method",
    "detail": "Function (} cef_media_router_t ; CEF_EXPORT cef_media_router_t*)",
    "insertText": "cef_media_router_get_global(struct _cef_completion_callback_t* callback)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef struct _cef_media_observer_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_sinks)(struct _cef_media_observer_t* self, size_t sinksCount, struct _cef_media_sink_t* const* sinks)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_routes)(struct _cef_media_observer_t* self, size_t routesCount, struct _cef_media_route_t* const* routes)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_route_state_changed)( struct _cef_media_observer_t* self, struct _cef_media_route_t* route, cef_media_route_connection_state_t state)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_route_message_received)( struct _cef_media_observer_t* self, struct _cef_media_route_t* route, const void* message, size_t message_size)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (} cef_media_observer_t ; typedef struct _cef_media_route_t { cef_base_ref_counted_t base ;)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_id)(struct _cef_media_route_t* self)"
  },
  {
    "label": "_cef_media_source_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_media_source_t(CEF_CALLBACK* get_source)( struct _cef_media_route_t* self)"
  },
  {
    "label": "_cef_media_sink_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_media_sink_t(CEF_CALLBACK* get_sink)( struct _cef_media_route_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* send_route_message)(struct _cef_media_route_t* self, const void* message, size_t message_size)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* terminate)(struct _cef_media_route_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_media_route_t ; typedef struct _cef_media_route_create_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_media_route_create_finished)( struct _cef_media_route_create_callback_t* self, cef_media_route_create_result_t result, const cef_string_t* error, struct _cef_media_route_t* route)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (} cef_media_route_create_callback_t ; typedef struct _cef_media_sink_t { cef_base_ref_counted_t base ;)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_id)(struct _cef_media_sink_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_name)(struct _cef_media_sink_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_description)( struct _cef_media_sink_t* self)"
  },
  {
    "label": "cef_media_sink_icon_type_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_media_sink_icon_type_t(CEF_CALLBACK* get_icon_type)( struct _cef_media_sink_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* get_device_info)( struct _cef_media_sink_t* self, struct _cef_media_sink_device_info_callback_t* callback)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_cast_sink)(struct _cef_media_sink_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_dial_sink)(struct _cef_media_sink_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_compatible_with)(struct _cef_media_sink_t* self, struct _cef_media_source_t* source)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_media_sink_t ; typedef struct _cef_media_sink_device_info_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_media_sink_device_info)( struct _cef_media_sink_device_info_callback_t* self, const struct _cef_media_sink_device_info_t* device_info)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (} cef_media_sink_device_info_callback_t ; typedef struct _cef_media_source_t { cef_base_ref_counted_t base ;)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_id)(struct _cef_media_source_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_cast_source)(struct _cef_media_source_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_dial_source)(struct _cef_media_source_t* self)"
  }
]