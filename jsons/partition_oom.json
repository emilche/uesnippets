[
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_PARTITION_ALLOCATOR_PARTITION_OOM_H_ # define BASE_ALLOCATOR_PARTITION_ALLOCATOR_PARTITION_OOM_H_ # include<stddef . h> # include \" base / allocator / partition_allocator / partition_alloc_base / compiler_specific . h \" # include \" base / allocator / partition_allocator / partition_alloc_base / component_export . h \" # include \" build / build_config . h \" namespace partition_alloc { using OomFunction =)",
    "insertText": "void(*)(size_t)"
  },
  {
    "label": "PA_COMPONENT_EXPORT()",
    "kind": "Method",
    "detail": "Function (namespace internal { OomFunction g_oom_handling_function ; [ [ noreturn ] ])",
    "insertText": "PA_COMPONENT_EXPORT(PARTITION_ALLOC) PA_NOINLINE void PartitionExcessiveAllocationSize(size_t size)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if !)",
    "insertText": "defined(ARCH_CPU_64_BITS) [[noreturn]] PA_NOINLINE void PartitionOutOfMemoryWithLotsOfUncommitedPages( size_t size)"
  },
  {
    "label": "PartitionOutOfMemoryWithLargeVirtualSize()",
    "kind": "Method",
    "detail": "Function ([ [ noreturn ] ] PA_NOINLINE void)",
    "insertText": "PartitionOutOfMemoryWithLargeVirtualSize(size_t virtual_size)"
  }
]