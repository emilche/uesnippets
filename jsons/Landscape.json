[
  {
    "label": "FTextureRenderTargetResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureRenderTargetResource"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "ILandscapeEdModeInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILandscapeEdModeInterface"
  },
  {
    "label": "SNotificationItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNotificationItem"
  },
  {
    "label": "UStreamableRenderAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStreamableRenderAsset"
  },
  {
    "label": "UTextureRenderTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget"
  },
  {
    "label": "ULandscapeEditLayerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeEditLayerBase"
  },
  {
    "label": "FMaterialResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialResource"
  },
  {
    "label": "FLandscapeEditLayerComponentReadbackResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeEditLayerComponentReadbackResult"
  },
  {
    "label": "FLandscapeNotification",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeNotification"
  },
  {
    "label": "FTextureToComponentHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureToComponentHelper"
  },
  {
    "label": "FUpdateLayersContentContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateLayersContentContext"
  },
  {
    "label": "FEditLayersHeightmapMergeParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEditLayersHeightmapMergeParams"
  },
  {
    "label": "FEditLayersWeightmapMergeParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEditLayersWeightmapMergeParams"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMergeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeInfo"
  },
  {
    "label": "FMergeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ELandscapeLayerUpdateMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELandscapeLayerUpdateMode"
  },
  {
    "label": "FLandscapeLayerBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayerBrush"
  },
  {
    "label": "ELandscapeBlendMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELandscapeBlendMode"
  },
  {
    "label": "FLandscapeLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayer"
  },
  {
    "label": "ELandscapeBlendMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELandscapeBlendMode"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FOnLandscapeEditLayersMergedParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnLandscapeEditLayersMergedParams"
  },
  {
    "label": "ALandscape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscape"
  },
  {
    "label": "FLandscapeConfigHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeConfigHelper"
  },
  {
    "label": "FMaterialUpdateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialUpdateContext"
  },
  {
    "label": "FComponentRecreateRenderStateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentRecreateRenderStateContext"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FLandscapeLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayer"
  },
  {
    "label": "FLandscapeLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayer"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "FLandscapeTexture2DResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeTexture2DResource"
  },
  {
    "label": "FLandscapeLayerWeightmapExtractMaterialLayersComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayerWeightmapExtractMaterialLayersComponentData"
  },
  {
    "label": "FLandscapeLayerWeightmapPackMaterialLayersComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayerWeightmapPackMaterialLayersComponentData"
  },
  {
    "label": "FLandscapeLayersTriangle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayersTriangle"
  },
  {
    "label": "FLandscapeLayersTriangle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayersTriangle"
  },
  {
    "label": "FLandscapeLayersTriangle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayersTriangle"
  },
  {
    "label": "FLandscapeLayersTriangle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayersTriangle"
  },
  {
    "label": "FLandscapeLayersTriangle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayersTriangle"
  },
  {
    "label": "FLandscapeLayersHeightmapShaderParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayersHeightmapShaderParameters"
  },
  {
    "label": "FLandscapeLayersWeightmapShaderParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayersWeightmapShaderParameters"
  },
  {
    "label": "FLandscapeLayersWeightmapShaderParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayersWeightmapShaderParameters"
  },
  {
    "label": "FLandscapeLayersHeightmapShaderParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayersHeightmapShaderParameters"
  },
  {
    "label": "FLandscapeLayersWeightmapShaderParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayersWeightmapShaderParameters"
  },
  {
    "label": "FLandscapeEdModeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeEdModeInfo"
  },
  {
    "label": "FWaitingForResourcesNotificationHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWaitingForResourcesNotificationHelper"
  },
  {
    "label": "FLandscapeNotificationManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeNotificationManager"
  },
  {
    "label": "FLandscapeTexture2DArrayResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeTexture2DArrayResource"
  },
  {
    "label": "FLandscapeTexture2DArrayResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeTexture2DArrayResource"
  },
  {
    "label": "FLandscapeTexture2DResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeTexture2DResource"
  },
  {
    "label": "FLandscapeTexture2DResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeTexture2DResource"
  },
  {
    "label": "FScopedSetLandscapeEditingLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedSetLandscapeEditingLayer"
  },
  {
    "label": "SetOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwner(ALandscape* InOwner)"
  },
  {
    "label": "rendered()",
    "kind": "Method",
    "detail": "Function (was)",
    "insertText": "rendered(important note: the render target's resolution can be larger than the actual landscape resolution, so RenderAreaResolution must be used.\n\t* In the case of weightmaps, the render target will actually be a UTextureRenderTarget2DArray\n\t*/\n\tUTextureRenderTarget* RenderTarget = nullptr;\n\n\t/** Actual resolution of this render : render targets are usually sized larger than the effective resolution at this point, so this needs to be used instead.\n\t *  Note : it's the true resolution of the landscape : at this point, there are no duplicate vertices in the render target. */\n\tFIntPoint RenderAreaResolution = FIntPoint(ForceInit)"
  },
  {
    "label": "ALandscape()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ALandscape(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "HasAllComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAllComponent()"
  },
  {
    "label": "CalcComponentIndicesOverlap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalcComponentIndicesOverlap(const int32 X1, const int32 Y1, const int32 X2, const int32 Y2, const int32 ComponentSizeQuads, \n\t\tint32& ComponentIndexX1, int32& ComponentIndexY1, int32& ComponentIndexX2, int32& ComponentIndexY2)"
  },
  {
    "label": "CalcComponentIndicesNoOverlap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalcComponentIndicesNoOverlap(const int32 X1, const int32 Y1, const int32 X2, const int32 Y2, const int32 ComponentSizeQuads,\n\t\tint32& ComponentIndexX1, int32& ComponentIndexY1, int32& ComponentIndexX2, int32& ComponentIndexY2)"
  },
  {
    "label": "SplitHeightmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitHeightmap(ULandscapeComponent* Comp, ALandscapeProxy* TargetProxy = nullptr, class FMaterialUpdateContext* InOutUpdateContext = nullptr, TArray<class FComponentRecreateRenderStateContext>* InOutRecreateRenderStateContext = nullptr, bool InReregisterComponent = true)"
  },
  {
    "label": "TickLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickLayers(float DeltaTime)"
  },
  {
    "label": "SetLODGroupKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLODGroupKey(uint32 InLODGroupKey)"
  },
  {
    "label": "GetLODGroupKey()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetLODGroupKey()"
  },
  {
    "label": "RenderHeightmap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenderHeightmap(FTransform InWorldTransform, FBox2D InExtents, UTextureRenderTarget2D* OutRenderTarget)"
  },
  {
    "label": "RenderWeightmap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenderWeightmap(FTransform InWorldTransform, FBox2D InExtents, FName InWeightmapLayerName, UTextureRenderTarget2D* OutRenderTarget)"
  },
  {
    "label": "RenderWeightmaps()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenderWeightmaps(FTransform InWorldTransform, FBox2D InExtents, const TArray<FName>& InWeightmapLayerNames, UTextureRenderTarget* OutRenderTarget)"
  },
  {
    "label": "IsValidRenderTargetFormatHeightmap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidRenderTargetFormatHeightmap(EPixelFormat InRenderTargetFormat, bool& bOutCompressHeight)"
  },
  {
    "label": "IsValidRenderTargetFormatWeightmap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidRenderTargetFormatWeightmap(EPixelFormat InRenderTargetFormat, int32& OutNumChannels)"
  },
  {
    "label": "RequestSplineLayerUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSplineLayerUpdate()"
  },
  {
    "label": "RequestLayersInitialization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestLayersInitialization(bool bInRequestContentUpdate = true)"
  },
  {
    "label": "RequestLayersContentUpdateForceAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestLayersContentUpdateForceAll(ELandscapeLayerUpdateMode InModeMask = ELandscapeLayerUpdateMode::Update_All, bool bInUserTriggered = false)"
  },
  {
    "label": "RequestLayersContentUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestLayersContentUpdate(ELandscapeLayerUpdateMode InModeMask)"
  },
  {
    "label": "ReorderLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReorderLayer(int32 InStartingLayerIndex, int32 InDestinationLayerIndex)"
  },
  {
    "label": "CreateLayerFrom()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CreateLayerFrom(const FLandscapeLayer& InLayer)"
  },
  {
    "label": "CreateDefaultLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDefaultLayer()"
  },
  {
    "label": "CopyOldDataToDefaultLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyOldDataToDefaultLayer()"
  },
  {
    "label": "CopyOldDataToDefaultLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyOldDataToDefaultLayer(ALandscapeProxy* Proxy)"
  },
  {
    "label": "AddLayersToProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLayersToProxy(ALandscapeProxy* InProxy)"
  },
  {
    "label": "SetLayerName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerName(int32 InLayerIndex, const FName& InName)"
  },
  {
    "label": "SetLayerAlpha()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerAlpha(int32 InLayerIndex, const float InAlpha, bool bInHeightmap)"
  },
  {
    "label": "SetLayerVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerVisibility(int32 InLayerIndex, bool bInVisible, bool bInForIntermediateRender = false)"
  },
  {
    "label": "SetLayerLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerLocked(int32 InLayerIndex, bool bLocked)"
  },
  {
    "label": "SetLayerBlendMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerBlendMode(int32 InLayerIndex, ELandscapeBlendMode InBlendMode)"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(LandscapeEditLayers)"
  },
  {
    "label": "ClearPaintLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPaintLayer(int32 InLayerIndex, ULandscapeLayerInfoObject* InLayerInfo)"
  },
  {
    "label": "ClearPaintLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPaintLayer(const FGuid& InLayerGuid, ULandscapeLayerInfoObject* InLayerInfo)"
  },
  {
    "label": "ClearLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLayer(int32 InLayerIndex, TSet<TObjectPtr<ULandscapeComponent>>* InComponents = nullptr, ELandscapeClearMode InClearMode = ELandscapeClearMode::Clear_All)"
  },
  {
    "label": "ClearLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLayer(const FGuid& InLayerGuid, TSet<TObjectPtr<ULandscapeComponent>>* InComponents = nullptr, ELandscapeClearMode InClearMode = ELandscapeClearMode::Clear_All, bool bMarkPackageDirty = true)"
  },
  {
    "label": "DeleteLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteLayer(int32 InLayerIndex)"
  },
  {
    "label": "CollapseLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollapseLayer(int32 InLayerIndex)"
  },
  {
    "label": "DeleteLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteLayers()"
  },
  {
    "label": "SetGrassUpdateEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGrassUpdateEnabled(bool bInGrassUpdateEnabled)"
  },
  {
    "label": "ShowOnlySelectedLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowOnlySelectedLayer(int32 InLayerIndex)"
  },
  {
    "label": "ShowAllLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowAllLayers()"
  },
  {
    "label": "SetLandscapeSplinesReservedLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLandscapeSplinesReservedLayer(int32 InLayerIndex)"
  },
  {
    "label": "SetLayerSubstractiveBlendStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerSubstractiveBlendStatus(int32 InLayerIndex, bool InStatus, const TWeakObjectPtr<ULandscapeLayerInfoObject>& InLayerInfoObj)"
  },
  {
    "label": "ReplaceLayerSubstractiveBlendStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceLayerSubstractiveBlendStatus(ULandscapeLayerInfoObject* InFromLayerInfo, ULandscapeLayerInfoObject* InToLayerInfo, bool bInShouldDirtyPackage)"
  },
  {
    "label": "AddBrushToLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBrushToLayer(int32 InLayerIndex, class ALandscapeBlueprintBrushBase* InBrush)"
  },
  {
    "label": "RemoveBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBrush(class ALandscapeBlueprintBrushBase* InBrush)"
  },
  {
    "label": "RemoveBrushFromLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBrushFromLayer(int32 InLayerIndex, class ALandscapeBlueprintBrushBase* InBrush)"
  },
  {
    "label": "RemoveBrushFromLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBrushFromLayer(int32 InLayerIndex, int32 InBrushIndex)"
  },
  {
    "label": "GetBrushIndexForLayer()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetBrushIndexForLayer(int32 InLayerIndex, class ALandscapeBlueprintBrushBase* InBrush)"
  },
  {
    "label": "ReorderLayerBrush()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReorderLayerBrush(int32 InLayerIndex, int32 InStartingLayerBrushIndex, int32 InDestinationLayerBrushIndex)"
  },
  {
    "label": "OnBlueprintBrushChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlueprintBrushChanged()"
  },
  {
    "label": "OnLayerInfoSplineFalloffModulationChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLayerInfoSplineFalloffModulationChanged(ULandscapeLayerInfoObject* InLayerInfo)"
  },
  {
    "label": "OnPreSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreSave()"
  },
  {
    "label": "ReleaseLayersRenderingResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseLayersRenderingResource()"
  },
  {
    "label": "ClearDirtyData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDirtyData(ULandscapeComponent* InLandscapeComponent)"
  },
  {
    "label": "ToggleCanHaveLayersContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleCanHaveLayersContent()"
  },
  {
    "label": "ForceUpdateLayersContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceUpdateLayersContent(bool bIntermediateRender = false)"
  },
  {
    "label": "ForceLayersFullUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceLayersFullUpdate()"
  },
  {
    "label": "InitializeLandscapeLayersWeightmapUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeLandscapeLayersWeightmapUsage()"
  },
  {
    "label": "ComputeLandscapeLayerBrushInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComputeLandscapeLayerBrushInfo(FTransform& OutLandscapeTransform, FIntPoint& OutLandscapeSize, FIntPoint& OutLandscapeRenderTargetSize)"
  },
  {
    "label": "UpdateProxyLayersWeightmapUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateProxyLayersWeightmapUsage()"
  },
  {
    "label": "SetUseGeneratedLandscapeSplineMeshesActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseGeneratedLandscapeSplineMeshesActors(bool bInEnabled)"
  },
  {
    "label": "PrepareTextureResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareTextureResources(bool bInWaitForStreaming)"
  },
  {
    "label": "EnableNaniteSkirts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableNaniteSkirts(bool bInEnable, float InSkirtDepth, bool bInShouldDirtyPackage)"
  },
  {
    "label": "SetNanitePositionPrecision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNanitePositionPrecision(int32 InPrecision,  bool bInShouldDirtyPackage)"
  },
  {
    "label": "SetDisableRuntimeGrassMapGeneration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisableRuntimeGrassMapGeneration(bool bInDisableRuntimeGrassMapGeneration)"
  },
  {
    "label": "OnLayerCreatedInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLayerCreatedInternal(FLandscapeLayer& Layer)"
  },
  {
    "label": "SupportsEditLayersLocalMerge()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsEditLayersLocalMerge()"
  },
  {
    "label": "HasNormalCaptureBPBrushLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasNormalCaptureBPBrushLayer()"
  },
  {
    "label": "GetEditLayersMergeMode()",
    "kind": "Method",
    "detail": "Function (ELandscapeEditLayersMergeMode)",
    "insertText": "GetEditLayersMergeMode()"
  },
  {
    "label": "CreateLayersRenderingResource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateLayersRenderingResource(bool bUseNormalCapture)"
  },
  {
    "label": "PrepareEditLayersLocalMergeResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareEditLayersLocalMergeResources()"
  },
  {
    "label": "UpdateLayersContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLayersContent(bool bInWaitForStreaming = false, bool bInSkipMonitorLandscapeEdModeChanges = false, bool bIntermediateRender = false, bool bFlushRender = false)"
  },
  {
    "label": "MonitorShaderCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MonitorShaderCompilation()"
  },
  {
    "label": "MonitorLandscapeEdModeChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MonitorLandscapeEdModeChanges()"
  },
  {
    "label": "PrepareEditLayersMergeRenderContext()",
    "kind": "Method",
    "detail": "Function (UE::Landscape::EditLayers::FMergeRenderContext)",
    "insertText": "PrepareEditLayersMergeRenderContext(const UE::Landscape::EditLayers::FMergeRenderParams& InParams)"
  },
  {
    "label": "BuildLandscapeBrushParameters()",
    "kind": "Method",
    "detail": "Function (FLandscapeBrushParameters)",
    "insertText": "BuildLandscapeBrushParameters(bool bInIsHeightmapMerge, const FIntRect& InRenderAreaExtents, UTextureRenderTarget2D* InRenderTarget, FName InWeightmapLayerName = NAME_None)"
  },
  {
    "label": "RegenerateLayersHeightmaps()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RegenerateLayersHeightmaps(const FUpdateLayersContentContext& InUpdateLayersContentContext)"
  },
  {
    "label": "PerformLayersHeightmapsLocalMerge()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PerformLayersHeightmapsLocalMerge(const FUpdateLayersContentContext& InUpdateLayersContentContext, const FEditLayersHeightmapMergeParams& InMergeParams)"
  },
  {
    "label": "PerformLayersHeightmapsGlobalMerge()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PerformLayersHeightmapsGlobalMerge(const FUpdateLayersContentContext& InUpdateLayersContentContext, const FEditLayersHeightmapMergeParams& InMergeParams)"
  },
  {
    "label": "PerformLayersHeightmapsBatchedMerge()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PerformLayersHeightmapsBatchedMerge(const FUpdateLayersContentContext& InUpdateLayersContentContext, const FEditLayersHeightmapMergeParams& InMergeParams)"
  },
  {
    "label": "ResolveLayersHeightmapTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveLayersHeightmapTexture(const FTextureToComponentHelper& MapHelper, const TSet<UTexture2D*>& HeightmapsToResolve, bool bIntermediateRender, TArray<FLandscapeEditLayerComponentReadbackResult>& InOutComponentReadbackResults)"
  },
  {
    "label": "RegenerateLayersWeightmaps()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RegenerateLayersWeightmaps(FUpdateLayersContentContext& InUpdateLayersContentContext)"
  },
  {
    "label": "PerformLayersWeightmapsLocalMerge()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PerformLayersWeightmapsLocalMerge(FUpdateLayersContentContext& InUpdateLayersContentContext, const FEditLayersWeightmapMergeParams& InMergeParams)"
  },
  {
    "label": "PerformLayersWeightmapsGlobalMerge()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PerformLayersWeightmapsGlobalMerge(FUpdateLayersContentContext& InUpdateLayersContentContext, const FEditLayersWeightmapMergeParams& InMergeParams)"
  },
  {
    "label": "PerformLayersWeightmapsBatchedMerge()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PerformLayersWeightmapsBatchedMerge(FUpdateLayersContentContext& InUpdateLayersContentContext, const FEditLayersWeightmapMergeParams& InMergeParams)"
  },
  {
    "label": "ResolveLayersWeightmapTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveLayersWeightmapTexture(const FTextureToComponentHelper& MapHelper, const TSet<UTexture2D*>& WeightmapsToResolve, bool bIntermediateRender, TArray<FLandscapeEditLayerComponentReadbackResult>& InOutComponentReadbackResults)"
  },
  {
    "label": "ResolveLayersTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResolveLayersTexture(FTextureToComponentHelper const& MapHelper, FLandscapeEditLayerReadback* InCPUReadBack, UTexture2D* InOutputTexture, bool bIntermediateRender,\n\t\tTArray<FLandscapeEditLayerComponentReadbackResult>& InOutComponentReadbackResults, bool bIsWeightmap)"
  },
  {
    "label": "IsUpdateFlagEnabledForModes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUpdateFlagEnabledForModes(ELandscapeComponentUpdateFlag InFlag, uint32 InUpdateModes)"
  },
  {
    "label": "UpdateForChangedHeightmaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateForChangedHeightmaps(const TArrayView<FLandscapeEditLayerComponentReadbackResult>& InComponentReadbackResults)"
  },
  {
    "label": "UpdateForChangedWeightmaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateForChangedWeightmaps(const TArrayView<FLandscapeEditLayerComponentReadbackResult>& InComponentReadbackResults)"
  },
  {
    "label": "UpdateCollisionAndClients()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "UpdateCollisionAndClients(const TArrayView<FLandscapeEditLayerComponentReadbackResult>& Components)"
  },
  {
    "label": "UpdateAfterReadbackResolves()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "UpdateAfterReadbackResolves(const TArrayView<FLandscapeEditLayerComponentReadbackResult>& Components)"
  },
  {
    "label": "PrepareLayersTextureResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareLayersTextureResources(bool bInWaitForStreaming)"
  },
  {
    "label": "PrepareLayersTextureResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareLayersTextureResources(const TArray<FLandscapeLayer>& InLayers, bool bInWaitForStreaming)"
  },
  {
    "label": "PrepareLayersResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareLayersResources(ERHIFeatureLevel::Type InFeatureLevel, bool bInWaitForStreaming)"
  },
  {
    "label": "InvalidateRVTForTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateRVTForTextures(const TSet<UTexture2D*>& InTextures)"
  },
  {
    "label": "PrepareLayersHeightmapsLocalMergeRenderThreadData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLayersHeightmapsLocalMergeRenderThreadData(const FUpdateLayersContentContext& InUpdateLayersContentContext, const FEditLayersHeightmapMergeParams& InMergeParams, EditLayersHeightmapLocalMerge_RenderThread::FMergeInfo& OutRenderThreadData)"
  },
  {
    "label": "PrepareLayersWeightmapsLocalMergeRenderThreadData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLayersWeightmapsLocalMergeRenderThreadData(const FUpdateLayersContentContext& InUpdateLayersContentContext, const FEditLayersWeightmapMergeParams& InMergeParams, EditLayersWeightmapLocalMerge_RenderThread::FMergeInfo& OutRenderThreadData)"
  },
  {
    "label": "UpdateLayersMaterialInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLayersMaterialInstances(const TArray<ULandscapeComponent*>& InLandscapeComponents)"
  },
  {
    "label": "PrepareComponentDataToExtractMaterialLayersCS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareComponentDataToExtractMaterialLayersCS(const TArray<ULandscapeComponent*>& InLandscapeComponents, const FLandscapeLayer& InLayer, int32 InCurrentWeightmapToProcessIndex, const FIntPoint& InLandscapeBase, class FLandscapeTexture2DResource* InOutTextureData,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  TArray<struct FLandscapeLayerWeightmapExtractMaterialLayersComponentData>& OutComponentData, TMap<ULandscapeLayerInfoObject*, int32>& OutLayerInfoObjects)"
  },
  {
    "label": "PrepareComponentDataToPackMaterialLayersCS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareComponentDataToPackMaterialLayersCS(int32 InCurrentWeightmapToProcessIndex, const FIntPoint& InLandscapeBase, const TArray<ULandscapeComponent*>& InAllLandscapeComponents, TArray<UTexture2D*>& InOutProcessedWeightmaps,\n\t\t\t\t\t\t\t\t\t\t\t\t\tTArray<FLandscapeEditLayerReadback*>& OutProcessedCPUReadBacks, TArray<struct FLandscapeLayerWeightmapPackMaterialLayersComponentData>& OutComponentData)"
  },
  {
    "label": "ReallocateLayersWeightmaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReallocateLayersWeightmaps(FUpdateLayersContentContext& InUpdateLayersContentContext, const TArray<ULandscapeLayerInfoObject*>& InBrushRequiredAllocations, \n\t\tconst TMap<ULandscapeComponent*, TArray<ULandscapeLayerInfoObject*>>* InPerComponentAllocations, bool bInRestrictTextureSharingToTheseComponents)"
  },
  {
    "label": "InitializeLayersWeightmapResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeLayersWeightmapResources()"
  },
  {
    "label": "GenerateZeroAllocationPerComponents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateZeroAllocationPerComponents(const TArray<ALandscapeProxy*>& InAllLandscape, const TMap<ULandscapeLayerInfoObject*, bool>& InWeightmapLayersBlendSubstractive)"
  },
  {
    "label": "InitializeLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeLayers(bool bUseNormalCapture)"
  },
  {
    "label": "UpdateWeightDirtyData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWeightDirtyData(ULandscapeComponent* InLandscapeComponent, UTexture2D const* InWeightmap, FColor const* InOldData, FColor const* InNewData, uint8 InChannel)"
  },
  {
    "label": "OnDirtyWeightmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDirtyWeightmap(FTextureToComponentHelper const& MapHelper, UTexture2D const* InWeightmap, FColor const* InOldData, FColor const* InNewData, int32 InMipLevel, uint8 ChangedChannelsMask)"
  },
  {
    "label": "UpdateHeightDirtyData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHeightDirtyData(ULandscapeComponent* InLandscapeComponent, UTexture2D const* InHeightmap, FColor const* InOldData, FColor const* InNewData)"
  },
  {
    "label": "OnDirtyHeightmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDirtyHeightmap(FTextureToComponentHelper const& MapHelper, UTexture2D const* InWeightmap, FColor const* InOldData, FColor const* InNewData, int32 InMipLevel)"
  },
  {
    "label": "IsMaterialResourceCompiled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaterialResourceCompiled(FMaterialResource* InMaterialResource, bool bInWaitForCompilation)"
  },
  {
    "label": "MarkAllLandscapeRenderStateDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAllLandscapeRenderStateDirty()"
  },
  {
    "label": "RenderMergedTextureInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenderMergedTextureInternal(const FTransform& InRenderAreaWorldTransform, const FBox2D& InRenderAreaExtents, const TArray<FName>& InWeightmapLayerNames, UTextureRenderTarget* OutRenderTarget)"
  },
  {
    "label": "Notify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Notify(ALandscape* InLandscape, class FLandscapeNotificationManager* InNotificationManager, ELandscapeNotificationType InNotificationType, const FText& InNotificationText)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  }
]