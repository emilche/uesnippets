[
  {
    "label": "SSourceControlHistoryWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSourceControlHistoryWidget"
  },
  {
    "label": "SOURCECONTROLWINDOWS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOURCECONTROLWINDOWS_API"
  },
  {
    "label": "SelectedItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SelectedItem"
  },
  {
    "label": "SSourceControlHistoryWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSourceControlHistoryWidget"
  },
  {
    "label": "SOURCECONTROLWINDOWS_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SOURCECONTROLWINDOWS_API"
  },
  {
    "label": "SOURCECONTROLWINDOWS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOURCECONTROLWINDOWS_API"
  },
  {
    "label": "FCheckedOutSetupInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCheckedOutSetupInfo"
  },
  {
    "label": "SNotificationItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNotificationItem"
  },
  {
    "label": "CanChoosePackagesToCheckIn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanChoosePackagesToCheckIn()"
  },
  {
    "label": "ShouldChoosePackagesToCheckBeVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldChoosePackagesToCheckBeVisible()"
  },
  {
    "label": "SyncLatest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SyncLatest()"
  },
  {
    "label": "SyncRevision()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SyncRevision(const FString& InRevision)"
  },
  {
    "label": "CanSyncLatest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSyncLatest()"
  },
  {
    "label": "PromptForCheckedOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PromptForCheckedOut(bool bUseSourceControlStateCache, TArray<FString>& InFileNames, FCheckedOutSetupInfo& InSetupInfo)"
  },
  {
    "label": "DisplayRevisionHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayRevisionHistory( const TArray<FString>& InPackagesNames )"
  },
  {
    "label": "PromptForRevert()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PromptForRevert(const TArray<FString>& InPackageNames, bool bInReloadWorld = false )"
  },
  {
    "label": "RevertAllChangesAndReloadWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RevertAllChangesAndReloadWorld()"
  },
  {
    "label": "DiffAgainstWorkspace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DiffAgainstWorkspace(const FString& InFileName)"
  },
  {
    "label": "DiffAgainstShelvedFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DiffAgainstShelvedFile(const FSourceControlStateRef& InFileState)"
  },
  {
    "label": "ChoosePackagesToCheckInCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChoosePackagesToCheckInCallback(const FSourceControlOperationRef& InOperation, ECommandResult::Type InResult, FSourceControlWindowsOnCheckInComplete OnCompleteDelegate)"
  },
  {
    "label": "ChoosePackagesToCheckInCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChoosePackagesToCheckInCompleted(const TArray<UPackage*>& LoadedPackages, const TArray<FString>& PackageNames, const TArray<FString>& ConfigFiles, FCheckinResultInfo& OutResultInfo)"
  },
  {
    "label": "ChoosePackagesToCheckInCancelled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChoosePackagesToCheckInCancelled(FSourceControlOperationRef InOperation)"
  }
]