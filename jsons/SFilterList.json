[
  {
    "label": "FFrontendFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFrontendFilter"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FContentBrowserItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContentBrowserItem"
  },
  {
    "label": "FCustomTextFilterState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomTextFilterState"
  },
  {
    "label": "FFilterBarSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFilterBarSettings"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SFilterList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFilterList"
  },
  {
    "label": "FFrontendFilter_CustomText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFrontendFilter_CustomText"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetTypeCategories . h \" # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" Delegates / Delegate . h \" # include \" Filters / CustomTextFilters . h \" # include \" Filters / FilterBase . h \" # include \" Filters / SAssetFilterBar . h \" # include \" Filters / SBasicFilterBar . h \" # include \" FrontendFilters . h \" # include \" HAL / Platform . h \" # include \" IContentBrowserSingleton . h \" # include \" Input / Reply . h \" # include \" InputCoreTypes . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" class FFrontendFilter ; class SWidget ; class UClass ; class UToolMenu ; struct FContentBrowserItem ; struct FCustomTextFilterState ; struct FFilterBarSettings ; struct FGeometry ; struct FPointerEvent ; enum class ECheckBoxState : uint8 ; class SFilterList : public SAssetFilterBar<FAssetFilterType> { using Super = SAssetFilterBar<FAssetFilterType> ; public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnFilterBarLayoutChanging, EFilterBarLayout ) DECLARE_EVENT_OneParam(SFilterList, FCustomTextFilterEvent, TSharedPtr<SWidget>)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (using FOnFilterChanged = SAssetFilterBar<FAssetFilterType>::FOnFilterChanged ;)",
    "insertText": "SLATE_BEGIN_ARGS(SFilterList ) : _UseSharedSettings(false) , _FilterBarLayout(EFilterBarLayout::Horizontal) , _CanChangeOrientation(false) , _DefaultMenuExpansionCategory(EAssetCategoryPaths::Basic) , _bUseSectionsForCustomCategories(false)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnFilterChanged, OnFilterChanged ) SLATE_EVENT(FOnExtendAddFilterMenu, OnExtendAddFilterMenu) SLATE_ARGUMENT( TSharedPtr<FAssetFilterCollectionType>, FrontendFilters) SLATE_ARGUMENT( TArray<UClass*>, InitialClassFilters) SLATE_ARGUMENT( TArray< TSharedRef<FFrontendFilter> >, ExtraFrontendFilters ) SLATE_ARGUMENT(FCreateTextFilter, CreateTextFilter) SLATE_ARGUMENT(FName, FilterBarIdentifier) SLATE_ARGUMENT(bool, UseSharedSettings) SLATE_EVENT(FOnFilterBarLayoutChanging, OnFilterBarLayoutChanging) SLATE_ARGUMENT(EFilterBarLayout, FilterBarLayout) SLATE_ARGUMENT(bool, CanChangeOrientation) SLATE_ARGUMENT(TOptional<FAssetCategoryPath>, DefaultMenuExpansionCategory) SLATE_ARGUMENT(bool, bUseSectionsForCustomCategories) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "SetFrontendFilterCheckState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrontendFilterCheckState(const TSharedPtr<FFrontendFilter>& InFrontendFilter, ECheckBoxState CheckState)"
  },
  {
    "label": "GetFrontendFilterCheckState()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetFrontendFilterCheckState(const TSharedPtr<FFrontendFilter>& InFrontendFilter)"
  },
  {
    "label": "IsFrontendFilterActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFrontendFilterActive(const TSharedPtr<FFrontendFilter>& InFrontendFilter)"
  },
  {
    "label": "GetFrontendFilter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFrontendFilter>)",
    "insertText": "GetFrontendFilter(const FString& InName)"
  },
  {
    "label": "GetCombinedBackendFilter()",
    "kind": "Method",
    "detail": "Function (FARFilter)",
    "insertText": "GetCombinedBackendFilter(TArray<TSharedRef<const FPathPermissionList>>& OutPermissionLists)"
  },
  {
    "label": "GetCombinedBackendFilter()",
    "kind": "Method",
    "detail": "Function (FARFilter)",
    "insertText": "GetCombinedBackendFilter()"
  },
  {
    "label": "ExternalMakeAddFilterMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ExternalMakeAddFilterMenu()"
  },
  {
    "label": "DisableFiltersThatHideItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableFiltersThatHideItems(TArrayView<const FContentBrowserItem> ItemList)"
  },
  {
    "label": "GetInitialClassFilters()",
    "kind": "Method",
    "detail": "Function (const TArray<UClass*>&)",
    "insertText": "GetInitialClassFilters()"
  },
  {
    "label": "CreateCustomFilterDialog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCustomFilterDialog(const FText& InText)"
  },
  {
    "label": "UpdateCustomTextFilterIncludes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCustomTextFilterIncludes(const bool InIncludeClassName, const bool InIncludeAssetPath, const bool InIncludeCollectionNames)"
  },
  {
    "label": "AddWidgetToCurrentLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWidgetToCurrentLayout(TSharedRef<SWidget> InWidget)"
  },
  {
    "label": "SaveSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettings()"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings()"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings(const FName& InInstanceName)"
  },
  {
    "label": "SaveSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettings(const FString& IniFilename, const FString& IniSection, const FString& SettingsString)"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings(const FName& InInstanceName, const FString& IniFilename, const FString& IniSection, const FString& SettingsString)"
  },
  {
    "label": "SetFilterLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterLayout(EFilterBarLayout InFilterBarLayout)"
  },
  {
    "label": "OnCreateCustomTextFilter()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnCreateCustomTextFilter(const FCustomTextFilterData& InFilterData, bool bApplyFilter)"
  },
  {
    "label": "OnModifyCustomTextFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModifyCustomTextFilter(const FCustomTextFilterData& InFilterData, TSharedPtr<ICustomTextFilter<FAssetFilterType>> InFilter)"
  },
  {
    "label": "OnDeleteCustomTextFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteCustomTextFilter(const TSharedPtr<ICustomTextFilter<FAssetFilterType>> InFilter)"
  },
  {
    "label": "CreateAssetFilterBarContext()",
    "kind": "Method",
    "detail": "Function (private : UAssetFilterBarContext*)",
    "insertText": "CreateAssetFilterBarContext()"
  },
  {
    "label": "OnExternalCustomTextFilterCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExternalCustomTextFilterCreated(TSharedPtr<SWidget> BroadcastingFilterList)"
  },
  {
    "label": "LoadCustomTextFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadCustomTextFilters(const FFilterBarSettings* FilterBarConfig)"
  },
  {
    "label": "RestoreCustomTextFilterState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RestoreCustomTextFilterState(const FCustomTextFilterState& InFilterState)"
  },
  {
    "label": "FFrontendFilter_CustomText()",
    "kind": "Method",
    "detail": "Function (private : TArray<UClass*> InitialClassFilters ; FOnFilterChanged OnFilterChanged ; FOnFilterBarLayoutChanging OnFilterBarLayoutChanging ; TArray<TSharedRef<FFrontendFilter>> AllFrontendFilters_Internal ; const FName SharedIdentifier ; bool bIncludeClassName ; bool bIncludeAssetPath ; bool bIncludeCollectionNames ; bool bUseSharedSettings ; FCustomTextFilterEvent CustomTextFilterEvent ; } ; class FFrontendFilter_CustomText : public ICustomTextFilter<FAssetFilterType>,public FFrontendFilter,public TSharedFromThis<FFrontendFilter_CustomText> { public :)",
    "insertText": "FFrontendFilter_CustomText()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetName()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText()"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColor()"
  },
  {
    "label": "GetAsCustomTextFilter()",
    "kind": "Method",
    "detail": "Function (TOptional<FText>)",
    "insertText": "GetAsCustomTextFilter()"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesFilter(FAssetFilterType InItem)"
  },
  {
    "label": "SetFromCustomTextFilterData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFromCustomTextFilterData(const FCustomTextFilterData& InFilterData)"
  },
  {
    "label": "CreateCustomTextFilterData()",
    "kind": "Method",
    "detail": "Function (FCustomTextFilterData)",
    "insertText": "CreateCustomTextFilterData()"
  },
  {
    "label": "GetFilter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFilterBase<FAssetFilterType>>)",
    "insertText": "GetFilter()"
  }
]