[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "CharPtrSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CharPtrSet"
  },
  {
    "label": "FbxCharPtrSet()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_BASE_CHARPTRSET_H_ # define _FBXSDK_CORE_BASE_CHARPTRSET_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxCharPtrSet { public :)",
    "insertText": "FbxCharPtrSet(int pItemPerBlock=20)"
  },
  {
    "label": "FbxCharPtrSet()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FbxCharPtrSet()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const char* pReference, FbxHandle pItem)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Remove(const char* pReference)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FbxHandle)",
    "insertText": "Get(const char* pReference, int* PIndex=NULL)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxHandle&)",
    "insertText": "operator(int pIndex)"
  },
  {
    "label": "GetFromIndex()",
    "kind": "Method",
    "detail": "Function (FbxHandle)",
    "insertText": "GetFromIndex(int pIndex, const char** pReference=NULL)"
  },
  {
    "label": "RemoveFromIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromIndex(int pIndex)"
  },
  {
    "label": "GetCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCount()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "SetCaseSensitive()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS struct CharPtrSet ; void)",
    "insertText": "SetCaseSensitive(bool pIsCaseSensitive)"
  },
  {
    "label": "FindEqual()",
    "kind": "Method",
    "detail": "Function (mIsCaseSensitive = pIsCaseSensitive ; } private : CharPtrSet*)",
    "insertText": "FindEqual(const char* pReference)"
  }
]