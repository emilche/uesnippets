[
  {
    "label": "FCurve",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurve"
  },
  {
    "label": "FRestrictionCurve",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRestrictionCurve"
  },
  {
    "label": "GetPoleCount()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Geo / Curves / RestrictionCurve . h \" namespace UE::CADKernel { class FCurve ; class FRestrictionCurve ; namespace CurveUtilities { int32)",
    "insertText": "GetPoleCount(const UE::CADKernel::FCurve& Curve)"
  },
  {
    "label": "GetPoleCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPoleCount(const UE::CADKernel::FRestrictionCurve& Curve)"
  },
  {
    "label": "GetPoles()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "GetPoles(const UE::CADKernel::FCurve& Curve)"
  },
  {
    "label": "GetPoles()",
    "kind": "Method",
    "detail": "Function (TArray<FVector2d>)",
    "insertText": "GetPoles(const UE::CADKernel::FRestrictionCurve& Curve)"
  },
  {
    "label": "Get2DPolyline()",
    "kind": "Method",
    "detail": "Function (TArray<FVector2d>)",
    "insertText": "Get2DPolyline(const UE::CADKernel::FRestrictionCurve& Curve)"
  },
  {
    "label": "Get3DPolyline()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "Get3DPolyline(const UE::CADKernel::FRestrictionCurve& Curve)"
  },
  {
    "label": "GetDegree()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDegree(const UE::CADKernel::FCurve& Curve)"
  },
  {
    "label": "GetDegree()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDegree(const UE::CADKernel::FRestrictionCurve& Curve)"
  }
]