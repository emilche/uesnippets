[
  {
    "label": "FArchiveEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveEntry"
  },
  {
    "label": "FInternationalizationArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInternationalizationArchive"
  },
  {
    "label": "FLocMetadataObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocMetadataObject"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ILocFileNotifies",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILocFileNotifies"
  },
  {
    "label": "LOCALIZATION_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LOCALIZATION_API"
  },
  {
    "label": "representing",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "representing"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "LOCALIZATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LOCALIZATION_API"
  },
  {
    "label": "FConflict",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConflict"
  },
  {
    "label": "LOCALIZATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LOCALIZATION_API"
  },
  {
    "label": "FRowData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRowData"
  },
  {
    "label": "LOCALIZATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LOCALIZATION_API"
  },
  {
    "label": "ShouldSplitPlatformData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldSplitPlatformData(const ELocTextPlatformSplitMode& InSplitMode)"
  },
  {
    "label": "AddConflict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConflict(const FLocKey& InNamespace, const FLocKey& InKey, const TSharedPtr<FLocMetadataObject>& InKeyMetadata, const FLocItem& InSource, const FString& InSourceLocation)"
  },
  {
    "label": "ResetWordCounts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetWordCounts()"
  },
  {
    "label": "TrimReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimReport()"
  },
  {
    "label": "FromCSV()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromCSV(const FString& InCSVString, FText* OutError = nullptr)"
  },
  {
    "label": "ToCSV()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToCSV()"
  },
  {
    "label": "SortRowsByDate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortRowsByDate()"
  },
  {
    "label": "SetCopyrightNotice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCopyrightNotice(const FString& InCopyrightNotice)"
  },
  {
    "label": "LoadManifest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadManifest(const ELocTextHelperLoadFlags InLoadFlags, FText* OutError = nullptr)"
  },
  {
    "label": "LoadManifest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadManifest(const FString& InManifestFilePath, const ELocTextHelperLoadFlags InLoadFlags, FText* OutError = nullptr)"
  },
  {
    "label": "SerializeManifestToJson()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeManifestToJson(TSharedRef<FJsonObject> JsonObject)"
  },
  {
    "label": "TrimManifest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimManifest()"
  },
  {
    "label": "LoadNativeArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadNativeArchive(const ELocTextHelperLoadFlags InLoadFlags, FText* OutError = nullptr)"
  },
  {
    "label": "LoadNativeArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadNativeArchive(const FString& InArchiveFilePath, const ELocTextHelperLoadFlags InLoadFlags, FText* OutError = nullptr)"
  },
  {
    "label": "LoadForeignArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadForeignArchive(const FString& InCulture, const ELocTextHelperLoadFlags InLoadFlags, FText* OutError = nullptr)"
  },
  {
    "label": "LoadForeignArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadForeignArchive(const FString& InCulture, const FString& InArchiveFilePath, const ELocTextHelperLoadFlags InLoadFlags, FText* OutError = nullptr)"
  },
  {
    "label": "LoadArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadArchive(const FString& InCulture, const ELocTextHelperLoadFlags InLoadFlags, FText* OutError = nullptr)"
  },
  {
    "label": "LoadArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadArchive(const FString& InCulture, const FString& InArchiveFilePath, const ELocTextHelperLoadFlags InLoadFlags, FText* OutError = nullptr)"
  },
  {
    "label": "LoadAllArchives()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadAllArchives(const ELocTextHelperLoadFlags InLoadFlags, FText* OutError = nullptr)"
  },
  {
    "label": "TrimArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimArchive(const FString& InCulture)"
  },
  {
    "label": "LoadAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadAll(const ELocTextHelperLoadFlags InLoadFlags, FText* OutError = nullptr)"
  },
  {
    "label": "AddDependency()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDependency(const FString& InDependencyFilePath, FText* OutError = nullptr)"
  },
  {
    "label": "AddSourceText()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddSourceText(const FLocKey& InNamespace, const FLocItem& InSource, const FManifestContext& InContext, const FString* InDescription = nullptr)"
  },
  {
    "label": "UpdateSourceText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSourceText(const TSharedRef<FManifestEntry>& InOldEntry, TSharedRef<FManifestEntry>& InNewEntry)"
  },
  {
    "label": "AddTranslation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddTranslation(const FString& InCulture, const FLocKey& InNamespace, const FLocKey& InKey, const TSharedPtr<FLocMetadataObject>& InKeyMetadataObj, const FLocItem& InSource, const FLocItem& InTranslation, const bool InOptional)"
  },
  {
    "label": "AddTranslation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddTranslation(const FString& InCulture, const TSharedRef<FArchiveEntry>& InEntry)"
  },
  {
    "label": "UpdateTranslation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateTranslation(const FString& InCulture, const FLocKey& InNamespace, const FLocKey& InKey, const TSharedPtr<FLocMetadataObject>& InKeyMetadataObj, const FLocItem& InSource, const FLocItem& InTranslation)"
  },
  {
    "label": "UpdateTranslation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTranslation(const FString& InCulture, const TSharedRef<FArchiveEntry>& InOldEntry, const TSharedRef<FArchiveEntry>& InNewEntry)"
  },
  {
    "label": "ImportTranslation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportTranslation(const FString& InCulture, const FLocKey& InNamespace, const FLocKey& InKey, const TSharedPtr<FLocMetadataObject> InKeyMetadataObj, const FLocItem& InSource, const FLocItem& InTranslation, const bool InOptional)"
  },
  {
    "label": "AddConflict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConflict(const FLocKey& InNamespace, const FLocKey& InKey, const TSharedPtr<FLocMetadataObject>& InKeyMetadata, const FLocItem& InSource, const FString& InSourceLocation)"
  },
  {
    "label": "SanitizeLogOutput()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizeLogOutput(FStringView InString)"
  },
  {
    "label": "SanitizeLogOutput()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizeLogOutput(FString&& InString)"
  },
  {
    "label": "FindKeysForLegacyTranslation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindKeysForLegacyTranslation(const TSharedRef<const FInternationalizationManifest>& InManifest, const TSharedPtr<const FInternationalizationArchive>& InNativeArchive, const FLocKey& InNamespace, const FString& InSource, const TSharedPtr<FLocMetadataObject> InKeyMetadataObj, TArray<FLocKey>& OutKeys)"
  },
  {
    "label": "LoadManifestImpl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FInternationalizationManifest>)",
    "insertText": "LoadManifestImpl(const FString& InManifestFilePath, const ELocTextHelperLoadFlags InLoadFlags, FText* OutError)"
  },
  {
    "label": "LoadArchiveImpl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FInternationalizationArchive>)",
    "insertText": "LoadArchiveImpl(const FString& InArchiveFilePath, const ELocTextHelperLoadFlags InLoadFlags, FText* OutError)"
  }
]