[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVirtualTextureBuildDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureBuildDesc"
  },
  {
    "label": "TextureGroup",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureGroup"
  },
  {
    "label": "UVirtualTextureBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVirtualTextureBuilder"
  },
  {
    "label": "UVirtualTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVirtualTexture2D"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / Texture . h \" # include \" VirtualTextureBuilder . generated . h \" enum class EShadingPath ; # if WITH_EDITOR struct FVirtualTextureBuildDesc { uint64 BuildHash = 0 ; int32 LayerCount = 0 ; TArray<ETextureSourceFormat,TInlineAllocator<4>> LayerFormats ; TArray<FTextureFormatSettings,TInlineAllocator<4>> LayerFormatSettings ; int32 TileSize = 0 ; int32 TileBorderSize = 0 ; TEnumAsByte<enum TextureGroup> LODGroup = TEXTUREGROUP_World ; ETextureLossyCompressionAmount LossyCompressionAmount = TLCA_Default ; bool bContinuousUpdate = false ; bool bSinglePhysicalSpace = false ; int32 NumMips = 0 ; uint32 InSizeX = 0 ; uint32 InSizeY = 0 ; uint8 const* InData = nullptr ; } ; # endif)",
    "insertText": "UCLASS(ClassGroup = Rendering, BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_UCLASS_BODY() ENGINE_API ~UVirtualTextureBuilder()"
  },
  {
    "label": "GetVirtualTexture()",
    "kind": "Method",
    "detail": "Function (UVirtualTexture2D*)",
    "insertText": "GetVirtualTexture(EShadingPath ShadingPath)"
  },
  {
    "label": "BuildTexture()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "BuildTexture(EShadingPath ShadingPath, FVirtualTextureBuildDesc const& BuildDesc, bool bWaitForCompilation = false)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  }
]