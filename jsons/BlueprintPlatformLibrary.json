[
  {
    "label": "ILocalNotificationService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILocalNotificationService"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UPlatformGameInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlatformGameInstance"
  },
  {
    "label": "UBlueprintPlatformLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintPlatformLibrary"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE(FPlatformDelegate)"
  },
  {
    "label": "ApplicationReceivedRemoteNotificationDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplicationReceivedRemoteNotificationDelegate_Handler(FString inFString, int32 inAppState)"
  },
  {
    "label": "ApplicationReceivedLocalNotificationDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplicationReceivedLocalNotificationDelegate_Handler(FString inFString, int32 inInt, int32 inAppState)"
  },
  {
    "label": "ApplicationReceivedScreenOrientationChangedNotificationDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplicationReceivedScreenOrientationChangedNotificationDelegate_Handler(int32 inScreenOrientation)"
  },
  {
    "label": "ClearAllLocalNotifications()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllLocalNotifications()"
  },
  {
    "label": "ScheduleLocalNotificationAtTime()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ScheduleLocalNotificationAtTime(const FDateTime& FireDateTime, bool LocalTime, const FText& Title, const FText& Body, const FText& Action, const FString& ActivationEvent)"
  },
  {
    "label": "ScheduleLocalNotificationFromNow()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ScheduleLocalNotificationFromNow(int32 inSecondsFromNow, const FText& Title, const FText& Body, const FText& Action, const FString& ActivationEvent)"
  },
  {
    "label": "ScheduleLocalNotificationBadgeAtTime()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ScheduleLocalNotificationBadgeAtTime(const FDateTime& FireDateTime, bool LocalTime, const FString& ActivationEvent)"
  },
  {
    "label": "ScheduleLocalNotificationBadgeFromNow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleLocalNotificationBadgeFromNow(int32 inSecondsFromNow, const FString& ActivationEvent)"
  },
  {
    "label": "CancelLocalNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelLocalNotification(const FString& ActivationEvent)"
  },
  {
    "label": "CancelLocalNotificationById()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelLocalNotificationById(int32 NotificationId)"
  },
  {
    "label": "GetLaunchNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLaunchNotification(bool& NotificationLaunchedApp, FString& ActivationEvent, int32& FireDate)"
  },
  {
    "label": "GetDeviceOrientation()",
    "kind": "Method",
    "detail": "Function (EScreenOrientation::Type)",
    "insertText": "GetDeviceOrientation()"
  },
  {
    "label": "GetAllowedDeviceOrientation()",
    "kind": "Method",
    "detail": "Function (EScreenOrientation::Type)",
    "insertText": "GetAllowedDeviceOrientation()"
  },
  {
    "label": "SetAllowedDeviceOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowedDeviceOrientation(EScreenOrientation::Type NewAllowedDeviceOrientation)"
  },
  {
    "label": "ConvertToScreenOrientation()",
    "kind": "Method",
    "detail": "Function (EScreenOrientation::Type)",
    "insertText": "ConvertToScreenOrientation(EDeviceScreenOrientation DeviceScreenOrientation)"
  },
  {
    "label": "ConvertToDeviceScreenOrientation()",
    "kind": "Method",
    "detail": "Function (EDeviceScreenOrientation)",
    "insertText": "ConvertToDeviceScreenOrientation(EScreenOrientation::Type ScreenOrientation)"
  }
]