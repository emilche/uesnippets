[
  {
    "label": "ILocalNotificationService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILocalNotificationService"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "UPlatformGameInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlatformGameInstance"
  },
  {
    "label": "UBlueprintPlatformLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintPlatformLibrary"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / TextProperty . h \" # include \" Engine / GameInstance . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" BlueprintPlatformLibrary . generated . h \" class ILocalNotificationService ; enum class EDeviceScreenOrientation : uint8 ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Unknown,Inactive,Background,Active,} ; })",
    "insertText": "UCLASS(Blueprintable, BlueprintType, ClassGroup=Mobile, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: DECLARE_DYNAMIC_MULTICAST_DELEGATE(FPlatformDelegate)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FPlatformStartupArgumentsDelegate, const TArray<FString>&, StartupArguments)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FPlatformRegisteredForRemoteNotificationsDelegate, const TArray<uint8>&, inArray)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FPlatformRegisteredForUserNotificationsDelegate, int32, inInt)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FPlatformFailedToRegisterForRemoteNotificationsDelegate, FString, inString)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FPlatformReceivedRemoteNotificationDelegate, FString, inString, EApplicationState::Type, inAppState)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_ThreeParams(FPlatformReceivedLocalNotificationDelegate, FString, inString, int32, inInt, EApplicationState::Type, inAppState)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FPlatformScreenOrientationChangedDelegate, EScreenOrientation::Type, inScreenOrientation)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "ApplicationWillDeactivateDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ApplicationWillDeactivateDelegate_Handler()"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (ApplicationWillDeactivateDelegate .)",
    "insertText": "Broadcast()"
  },
  {
    "label": "ApplicationHasReactivatedDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplicationHasReactivatedDelegate_Handler()"
  },
  {
    "label": "ApplicationWillEnterBackgroundDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplicationWillEnterBackgroundDelegate_Handler()"
  },
  {
    "label": "SCOPED_ENTER_BACKGROUND_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCOPED_ENTER_BACKGROUND_EVENT(STAT_UPlatformGameInstance_ApplicationWillEnterBackground)"
  },
  {
    "label": "ApplicationHasEnteredForegroundDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplicationHasEnteredForegroundDelegate_Handler()"
  },
  {
    "label": "ApplicationWillTerminateDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplicationWillTerminateDelegate_Handler()"
  },
  {
    "label": "ApplicationShouldUnloadResourcesDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplicationShouldUnloadResourcesDelegate_Handler()"
  },
  {
    "label": "ApplicationReceivedStartupArgumentsDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplicationReceivedStartupArgumentsDelegate_Handler(const TArray<FString>& StartupArguments)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (ApplicationReceivedStartupArgumentsDelegate .)",
    "insertText": "Broadcast(StartupArguments)"
  },
  {
    "label": "ApplicationRegisteredForRemoteNotificationsDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplicationRegisteredForRemoteNotificationsDelegate_Handler(TArray<uint8> inArray)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (ApplicationRegisteredForRemoteNotificationsDelegate .)",
    "insertText": "Broadcast(inArray)"
  },
  {
    "label": "ApplicationRegisteredForUserNotificationsDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplicationRegisteredForUserNotificationsDelegate_Handler(int32 inInt)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (ApplicationRegisteredForUserNotificationsDelegate .)",
    "insertText": "Broadcast(inInt)"
  },
  {
    "label": "ApplicationFailedToRegisterForRemoteNotificationsDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplicationFailedToRegisterForRemoteNotificationsDelegate_Handler(FString inFString)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (ApplicationFailedToRegisterForRemoteNotificationsDelegate .)",
    "insertText": "Broadcast(inFString)"
  },
  {
    "label": "ApplicationReceivedRemoteNotificationDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplicationReceivedRemoteNotificationDelegate_Handler(FString inFString, int32 inAppState)"
  },
  {
    "label": "ApplicationReceivedLocalNotificationDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplicationReceivedLocalNotificationDelegate_Handler(FString inFString, int32 inInt, int32 inAppState)"
  },
  {
    "label": "ApplicationReceivedScreenOrientationChangedNotificationDelegate_Handler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplicationReceivedScreenOrientationChangedNotificationDelegate_Handler(int32 inScreenOrientation)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(meta=(ScriptName=\"PlatformLibrary\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "ConvertToScreenOrientation()",
    "kind": "Method",
    "detail": "Function (private : EScreenOrientation::Type)",
    "insertText": "ConvertToScreenOrientation(EDeviceScreenOrientation DeviceScreenOrientation)"
  },
  {
    "label": "ConvertToDeviceScreenOrientation()",
    "kind": "Method",
    "detail": "Function (EDeviceScreenOrientation)",
    "insertText": "ConvertToDeviceScreenOrientation(EScreenOrientation::Type ScreenOrientation)"
  }
]