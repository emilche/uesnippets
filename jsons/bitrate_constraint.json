[
  {
    "label": "BitrateConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BitrateConstraint"
  },
  {
    "label": "BitrateConstraint()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_ADAPTATION_BITRATE_CONSTRAINT_H_ # define VIDEO_ADAPTATION_BITRATE_CONSTRAINT_H_ # include<string> # include \" absl / types / optional . h \" # include \" api / sequence_checker . h \" # include \" call / adaptation / adaptation_constraint . h \" # include \" call / adaptation / encoder_settings . h \" # include \" call / adaptation / video_source_restrictions . h \" # include \" call / adaptation / video_stream_input_state . h \" # include \" rtc_base / system / no_unique_address . h \" namespace webrtc { class BitrateConstraint : public AdaptationConstraint { public :)",
    "insertText": "BitrateConstraint()"
  },
  {
    "label": "OnEncoderSettingsUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEncoderSettingsUpdated(absl::optional<EncoderSettings> encoder_settings)"
  },
  {
    "label": "OnEncoderTargetBitrateUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEncoderTargetBitrateUpdated(absl::optional<uint32_t> encoder_target_bitrate_bps)"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "Name()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : RTC_NO_UNIQUE_ADDRESS SequenceChecker sequence_checker_ ; absl::optional<EncoderSettings> encoder_settings_)",
    "insertText": "RTC_GUARDED_BY(&sequence_checker_)"
  }
]