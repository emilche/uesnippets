[
  {
    "label": "CropRegion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CropRegion"
  },
  {
    "label": "CropAndZoom()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_TOOLS_FRAME_ANALYZER_VIDEO_GEOMETRY_ALIGNER_H_ # define RTC_TOOLS_FRAME_ANALYZER_VIDEO_GEOMETRY_ALIGNER_H_ # include \" api / video / video_frame_buffer . h \" # include \" rtc_tools / video_file_reader . h \" namespace webrtc { namespace test { struct CropRegion { int left = 0 ; int right = 0 ; int top = 0 ; int bottom = 0 ; } ; rtc::scoped_refptr<I420BufferInterface>)",
    "insertText": "CropAndZoom(const CropRegion& crop_region, const rtc::scoped_refptr<I420BufferInterface>& frame)"
  },
  {
    "label": "CalculateCropRegion()",
    "kind": "Method",
    "detail": "Function (CropRegion)",
    "insertText": "CalculateCropRegion(const rtc::scoped_refptr<I420BufferInterface>& reference_frame, const rtc::scoped_refptr<I420BufferInterface>& test_frame)"
  },
  {
    "label": "AdjustCropping()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I420BufferInterface>)",
    "insertText": "AdjustCropping(const rtc::scoped_refptr<I420BufferInterface>& reference_frame, const rtc::scoped_refptr<I420BufferInterface>& test_frame)"
  },
  {
    "label": "AdjustCropping()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<Video>)",
    "insertText": "AdjustCropping(const rtc::scoped_refptr<Video>& reference_video, const rtc::scoped_refptr<Video>& test_video)"
  }
]