[
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FSortedIndexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSortedIndexBuffer"
  },
  {
    "label": "FMeshBatchElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshBatchElement"
  },
  {
    "label": "FMeshBatchElementDynamicIndexBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshBatchElementDynamicIndexBuffer"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "EOITPassType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EOITPassType"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSortedTriangleData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortedTriangleData"
  },
  {
    "label": "FOITData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOITData"
  },
  {
    "label": "FOITSceneData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOITSceneData"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Allocate(FRHICommandListBase& RHICmdList, EPrimitiveType PrimitiveType, const FMeshBatchElement& InMeshElement, FMeshBatchElementDynamicIndexBuffer& OutMeshElement)"
  },
  {
    "label": "Deallocate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deallocate(FMeshBatchElement& OutMeshElement)"
  },
  {
    "label": "IsSortedTrianglesEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSortedTrianglesEnabled(EShaderPlatform InPlatform)"
  },
  {
    "label": "IsCompatible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompatible(const FMeshBatch& Mesh, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "IsSortedPixelsEnabledForProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSortedPixelsEnabledForProject(EShaderPlatform InPlatform)"
  },
  {
    "label": "IsSortedPixelsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSortedPixelsEnabled(const FViewInfo& InView)"
  },
  {
    "label": "IsSortedPixelsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSortedPixelsEnabled(EShaderPlatform InPlatform)"
  },
  {
    "label": "IsSortedPixelsEnabledForPass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSortedPixelsEnabledForPass(EOITPassType PassType)"
  },
  {
    "label": "AddSortTrianglesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSortTrianglesPass(FRDGBuilder& GraphBuilder, const FViewInfo& View, FOITSceneData& OITSceneData, FTriangleSortingOrder SortType)"
  },
  {
    "label": "CreateOITData()",
    "kind": "Method",
    "detail": "Function (FOITData)",
    "insertText": "CreateOITData(FRDGBuilder& GraphBuilder, const FViewInfo& View, EOITPassType PassType)"
  },
  {
    "label": "AddOITComposePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOITComposePass(FRDGBuilder& GraphBuilder, const FViewInfo& View, FOITData& OITData, FRDGTextureRef SceneColorTexture)"
  },
  {
    "label": "OnRenderBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenderBegin(FOITSceneData& OITSceneData)"
  }
]