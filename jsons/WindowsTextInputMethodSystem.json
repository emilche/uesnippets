[
  {
    "label": "FGenericWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericWindow"
  },
  {
    "label": "FTextStoreACP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextStoreACP"
  },
  {
    "label": "FWindowsTextInputMethodSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindowsTextInputMethodSystem"
  },
  {
    "label": "FTSFActivationProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTSFActivationProxy"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInternalContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInternalContext"
  },
  {
    "label": "FTSFActivationProxy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Map . h \" # include \" GenericPlatform / ITextInputMethodSystem . h \" # include \" Windows / TextStoreACP . h \" # include \" Windows / AllowWindowsPlatformTypes . h \" # include<msctf . h> # include \" Microsoft / COMPointer . h \" class FGenericWindow ; class FTextStoreACP ; class FWindowsTextInputMethodSystem ; class FTSFActivationProxy : public ITfInputProcessorProfileActivationSink,public ITfActiveLanguageProfileNotifySink { public :)",
    "insertText": "FTSFActivationProxy(FWindowsTextInputMethodSystem* InOwner) : TSFProfileCookie(TF_INVALID_COOKIE) , TSFLanguageCookie(TF_INVALID_COOKIE) , Owner(InOwner) , ReferenceCount(1)"
  },
  {
    "label": "FTSFActivationProxy()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FTSFActivationProxy()"
  },
  {
    "label": "QueryInterface()",
    "kind": "Method",
    "detail": "Function (} STDMETHODIMP)",
    "insertText": "QueryInterface(REFIID riid, void **ppvObj)"
  },
  {
    "label": "STDMETHODIMP_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHODIMP_(ULONG) AddRef()"
  },
  {
    "label": "STDMETHODIMP_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHODIMP_(ULONG) Release()"
  },
  {
    "label": "OnActivated()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "OnActivated(DWORD dwProfileType, LANGID langid, __RPC__in REFCLSID clsid, __RPC__in REFGUID catid, __RPC__in REFGUID guidProfile, HKL hkl, DWORD dwFlags)"
  },
  {
    "label": "OnActivated()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "OnActivated(REFCLSID clsid, REFGUID guidProfile, BOOL fActivated)"
  },
  {
    "label": "FWindowsTextInputMethodSystem()",
    "kind": "Method",
    "detail": "Function (public : DWORD TSFProfileCookie ; DWORD TSFLanguageCookie ; private : FWindowsTextInputMethodSystem* Owner ; ULONG ReferenceCount ; } ; class FWindowsTextInputMethodSystem : public ITextInputMethodSystem { class FTSFActivationProxy ; public : ~)",
    "insertText": "FWindowsTextInputMethodSystem()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Initialize()"
  },
  {
    "label": "Terminate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Terminate()"
  },
  {
    "label": "ProcessMessage()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessMessage(HWND hwnd, uint32 msg, WPARAM wParam, LPARAM lParam)"
  },
  {
    "label": "ApplyDefaults()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "ApplyDefaults(const TSharedRef<FGenericWindow>& InWindow)"
  },
  {
    "label": "RegisterContext()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITextInputMethodChangeNotifier>)",
    "insertText": "RegisterContext(const TSharedRef<ITextInputMethodContext>& Context)"
  },
  {
    "label": "UnregisterContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterContext(const TSharedRef<ITextInputMethodContext>& Context)"
  },
  {
    "label": "ActivateContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateContext(const TSharedRef<ITextInputMethodContext>& Context)"
  },
  {
    "label": "DeactivateContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeactivateContext(const TSharedRef<ITextInputMethodContext>& Context)"
  },
  {
    "label": "IsActiveContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActiveContext(const TSharedRef<ITextInputMethodContext>& Context)"
  },
  {
    "label": "LogActiveInputMethod()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "LogActiveInputMethod()"
  },
  {
    "label": "InitializeIMM()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeIMM()"
  },
  {
    "label": "UpdateIMMProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateIMMProperty(HKL KeyboardLatoutHandle)"
  },
  {
    "label": "ShouldDrawIMMCompositionString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldDrawIMMCompositionString()"
  },
  {
    "label": "UpdateIMMWindowPositions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateIMMWindowPositions(HIMC IMMContext)"
  },
  {
    "label": "BeginIMMComposition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginIMMComposition()"
  },
  {
    "label": "EndIMMComposition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndIMMComposition()"
  },
  {
    "label": "CancelIMMComposition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelIMMComposition()"
  },
  {
    "label": "InitializeTSF()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeTSF()"
  },
  {
    "label": "OnIMEActivationStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnIMEActivationStateChanged(const bool bIsEnabled)"
  },
  {
    "label": "ClearStaleWindowHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearStaleWindowHandles()"
  }
]