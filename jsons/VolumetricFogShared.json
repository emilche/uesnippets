[
  {
    "label": "FVolumetricFogIntegrationParameterData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVolumetricFogIntegrationParameterData"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RHIDefinitions . h \" # include \" SceneView . h \" # include \" SceneRendering . h \")",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FVoxelizeVolumePassUniformParameters, ) SHADER_PARAMETER_STRUCT(FSceneTextureUniformParameters, SceneTextures) SHADER_PARAMETER(FMatrix44f, ViewToVolumeClip) SHADER_PARAMETER(FVector2f, ClipRatio) SHADER_PARAMETER(FVector4f, FrameJitterOffset0) SHADER_PARAMETER_STRUCT(FVolumetricFogGlobalData, VolumetricFog) SHADER_PARAMETER(FVector3f, RenderVolumetricCloudParametersCloudLayerCenterKm) SHADER_PARAMETER(float, RenderVolumetricCloudParametersPlanetRadiusKm) SHADER_PARAMETER(float, RenderVolumetricCloudParametersBottomRadiusKm) SHADER_PARAMETER(float, RenderVolumetricCloudParametersTopRadiusKm) END_GLOBAL_SHADER_PARAMETER_STRUCT() extern FVector3f VolumetricFogTemporalRandom(uint32 FrameNumber)"
  },
  {
    "label": "GetVolumetricFogLightSoftFading()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetVolumetricFogLightSoftFading()"
  },
  {
    "label": "FVolumetricFogIntegrationParameterData()",
    "kind": "Method",
    "detail": "Function (struct FVolumetricFogIntegrationParameterData {)",
    "insertText": "FVolumetricFogIntegrationParameterData() : bTemporalHistoryIsValid(false)"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (} bool bTemporalHistoryIsValid ; TArray<FVector4f,TInlineAllocator<1 6>> FrameJitterOffsetValues ; FRDGTexture* VBufferA ; FRDGTexture* VBufferB ; FRDGTextureUAV* VBufferA_UAV ; FRDGTextureUAV* VBufferB_UAV ; FRDGTexture* LightScattering ; FRDGTextureUAV* LightScatteringUAV ; } ;)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FVolumetricFogIntegrationParameters, ) SHADER_PARAMETER_STRUCT_REF(FVolumetricFogGlobalData, VolumetricFog) SHADER_PARAMETER(FMatrix44f, UnjitteredClipToTranslatedWorld) SHADER_PARAMETER(FMatrix44f, UnjitteredPrevTranslatedWorldToClip) SHADER_PARAMETER_ARRAY(FVector4f, FrameJitterOffsets, [16]) SHADER_PARAMETER(float, HistoryWeight) SHADER_PARAMETER(uint32, HistoryMissSuperSampleCount) END_SHADER_PARAMETER_STRUCT() void SetupVolumetricFogIntegrationParameters( FVolumetricFogIntegrationParameters& Out, FViewInfo& View, const FVolumetricFogIntegrationParameterData& IntegrationData)"
  },
  {
    "label": "ComputeZSliceFromDepth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ComputeZSliceFromDepth(float SceneDepth, FVector GridZParams)"
  },
  {
    "label": "GetVolumetricFogGridZParams()",
    "kind": "Method",
    "detail": "Function (} FVector)",
    "insertText": "GetVolumetricFogGridZParams(float NearPlane, float FarPlane, int32 GridSizeZ)"
  }
]