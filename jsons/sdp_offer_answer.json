[
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "lives",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "lives"
  },
  {
    "label": "SdpOfferAnswerHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SdpOfferAnswerHandler"
  },
  {
    "label": "RemoteDescriptionOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RemoteDescriptionOperation"
  },
  {
    "label": "ImplicitCreateSessionDescriptionObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ImplicitCreateSessionDescriptionObserver"
  },
  {
    "label": "ImplicitCreateSessionDescriptionObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ImplicitCreateSessionDescriptionObserver"
  },
  {
    "label": "SetSessionDescriptionObserverAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SetSessionDescriptionObserverAdapter"
  },
  {
    "label": "SetSessionDescriptionObserverAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SetSessionDescriptionObserverAdapter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "LocalIceCredentialsToReplace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LocalIceCredentialsToReplace"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "above",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "above"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SdpOfferAnswerHandler>)",
    "insertText": "Create(\n      PeerConnectionSdpMethods* pc,\n      const PeerConnectionInterface::RTCConfiguration& configuration,\n      PeerConnectionDependencies& dependencies,\n      ConnectionContext* context)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "PrepareForShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareForShutdown()"
  },
  {
    "label": "RestartIce()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestartIce()"
  },
  {
    "label": "CreateOffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateOffer(\n      CreateSessionDescriptionObserver* observer,\n      const PeerConnectionInterface::RTCOfferAnswerOptions& options)"
  },
  {
    "label": "CreateAnswer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAnswer(\n      CreateSessionDescriptionObserver* observer,\n      const PeerConnectionInterface::RTCOfferAnswerOptions& options)"
  },
  {
    "label": "SetLocalDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLocalDescription(\n      std::unique_ptr<SessionDescriptionInterface> desc,\n      rtc::scoped_refptr<SetLocalDescriptionObserverInterface> observer)"
  },
  {
    "label": "SetLocalDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLocalDescription(\n      rtc::scoped_refptr<SetLocalDescriptionObserverInterface> observer)"
  },
  {
    "label": "SetLocalDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLocalDescription(SetSessionDescriptionObserver* observer,\n                           SessionDescriptionInterface* desc)"
  },
  {
    "label": "SetLocalDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLocalDescription(SetSessionDescriptionObserver* observer)"
  },
  {
    "label": "SetRemoteDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRemoteDescription(\n      std::unique_ptr<SessionDescriptionInterface> desc,\n      rtc::scoped_refptr<SetRemoteDescriptionObserverInterface> observer)"
  },
  {
    "label": "SetRemoteDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRemoteDescription(SetSessionDescriptionObserver* observer,\n                            SessionDescriptionInterface* desc)"
  },
  {
    "label": "GetConfiguration()",
    "kind": "Method",
    "detail": "Function (PeerConnectionInterface::RTCConfiguration)",
    "insertText": "GetConfiguration()"
  },
  {
    "label": "SetConfiguration()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "SetConfiguration(\n      const PeerConnectionInterface::RTCConfiguration& configuration)"
  },
  {
    "label": "AddIceCandidate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddIceCandidate(const IceCandidateInterface* candidate)"
  },
  {
    "label": "RemoveIceCandidates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveIceCandidates(const std::vector<cricket::Candidate>& candidates)"
  },
  {
    "label": "AddLocalIceCandidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLocalIceCandidate(const JsepIceCandidate* candidate)"
  },
  {
    "label": "RemoveLocalIceCandidates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLocalIceCandidates(\n      const std::vector<cricket::Candidate>& candidates)"
  },
  {
    "label": "ShouldFireNegotiationNeededEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldFireNegotiationNeededEvent(uint32_t event_id)"
  },
  {
    "label": "AddStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddStream(MediaStreamInterface* local_stream)"
  },
  {
    "label": "RemoveStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveStream(MediaStreamInterface* local_stream)"
  },
  {
    "label": "is_caller()",
    "kind": "Method",
    "detail": "Function (absl::optional<bool>)",
    "insertText": "is_caller()"
  },
  {
    "label": "HasNewIceCredentials()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasNewIceCredentials()"
  },
  {
    "label": "UpdateNegotiationNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNegotiationNeeded()"
  },
  {
    "label": "DestroyAllChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAllChannels()"
  },
  {
    "label": "local_streams()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<StreamCollectionInterface>)",
    "insertText": "local_streams()"
  },
  {
    "label": "remote_streams()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<StreamCollectionInterface>)",
    "insertText": "remote_streams()"
  },
  {
    "label": "SdpOfferAnswerHandler()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "SdpOfferAnswerHandler(PeerConnectionSdpMethods* pc,\n                                 ConnectionContext* context)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(\n      const PeerConnectionInterface::RTCConfiguration& configuration,\n      PeerConnectionDependencies& dependencies,\n      ConnectionContext* context)"
  },
  {
    "label": "ApplyLocalDescription()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "ApplyLocalDescription(\n      std::unique_ptr<SessionDescriptionInterface> desc,\n      const std::map<std::string, const cricket::ContentGroup*>&\n          bundle_groups_by_mid)"
  },
  {
    "label": "ApplyRemoteDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyRemoteDescription(\n      std::unique_ptr<RemoteDescriptionOperation> operation)"
  },
  {
    "label": "ApplyRemoteDescriptionUpdateTransceiverState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyRemoteDescriptionUpdateTransceiverState(SdpType sdp_type)"
  },
  {
    "label": "PlanBUpdateSendersAndReceivers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlanBUpdateSendersAndReceivers(\n      const cricket::ContentInfo* audio_content,\n      const cricket::AudioContentDescription* audio_desc,\n      const cricket::ContentInfo* video_content,\n      const cricket::VideoContentDescription* video_desc)"
  },
  {
    "label": "DoCreateOffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoCreateOffer(\n      const PeerConnectionInterface::RTCOfferAnswerOptions& options,\n      rtc::scoped_refptr<CreateSessionDescriptionObserver> observer)"
  },
  {
    "label": "DoCreateAnswer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoCreateAnswer(\n      const PeerConnectionInterface::RTCOfferAnswerOptions& options,\n      rtc::scoped_refptr<CreateSessionDescriptionObserver> observer)"
  },
  {
    "label": "DoSetLocalDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoSetLocalDescription(\n      std::unique_ptr<SessionDescriptionInterface> desc,\n      rtc::scoped_refptr<SetLocalDescriptionObserverInterface> observer)"
  },
  {
    "label": "DoSetRemoteDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoSetRemoteDescription(\n      std::unique_ptr<RemoteDescriptionOperation> operation)"
  },
  {
    "label": "ChangeSignalingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeSignalingState(\n      PeerConnectionInterface::SignalingState signaling_state)"
  },
  {
    "label": "UpdateSessionState()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "UpdateSessionState(\n      SdpType type,\n      cricket::ContentSource source,\n      const cricket::SessionDescription* description,\n      const std::map<std::string, const cricket::ContentGroup*>&\n          bundle_groups_by_mid)"
  },
  {
    "label": "Rollback()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "Rollback(SdpType desc_type)"
  },
  {
    "label": "OnOperationsChainEmpty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOperationsChainEmpty()"
  },
  {
    "label": "SetAssociatedRemoteStreams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAssociatedRemoteStreams(\n      rtc::scoped_refptr<RtpReceiverInternal> receiver,\n      const std::vector<std::string>& stream_ids,\n      std::vector<rtc::scoped_refptr<MediaStreamInterface>>* added_streams,\n      std::vector<rtc::scoped_refptr<MediaStreamInterface>>* removed_streams)"
  },
  {
    "label": "CheckIfNegotiationIsNeeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckIfNegotiationIsNeeded()"
  },
  {
    "label": "GenerateNegotiationNeededEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateNegotiationNeededEvent()"
  },
  {
    "label": "UpdateTransceiversAndDataChannels()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "UpdateTransceiversAndDataChannels(\n      cricket::ContentSource source,\n      const SessionDescriptionInterface& new_session,\n      const SessionDescriptionInterface* old_local_description,\n      const SessionDescriptionInterface* old_remote_description,\n      const std::map<std::string, const cricket::ContentGroup*>&\n          bundle_groups_by_mid)"
  },
  {
    "label": "ExpectSetLocalDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExpectSetLocalDescription(SdpType type)"
  },
  {
    "label": "ExpectSetRemoteDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExpectSetRemoteDescription(SdpType type)"
  },
  {
    "label": "FillInMissingRemoteMids()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillInMissingRemoteMids(cricket::SessionDescription* remote_description)"
  },
  {
    "label": "GetOptionsForOffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOptionsForOffer(const PeerConnectionInterface::RTCOfferAnswerOptions&\n                              offer_answer_options,\n                          cricket::MediaSessionOptions* session_options)"
  },
  {
    "label": "GetOptionsForAnswer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOptionsForAnswer(const PeerConnectionInterface::RTCOfferAnswerOptions&\n                               offer_answer_options,\n                           cricket::MediaSessionOptions* session_options)"
  },
  {
    "label": "GetSessionErrorMsg()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetSessionErrorMsg()"
  },
  {
    "label": "HandleLegacyOfferOptions()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "HandleLegacyOfferOptions(\n      const PeerConnectionInterface::RTCOfferAnswerOptions& options)"
  },
  {
    "label": "AddUpToOneReceivingTransceiverOfType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUpToOneReceivingTransceiverOfType(cricket::MediaType media_type)"
  },
  {
    "label": "ProcessRemovalOfRemoteTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessRemovalOfRemoteTrack(\n      const rtc::scoped_refptr<RtpTransceiverProxyWithInternal<RtpTransceiver>>\n          transceiver,\n      std::vector<rtc::scoped_refptr<RtpTransceiverInterface>>* remove_list,\n      std::vector<rtc::scoped_refptr<MediaStreamInterface>>* removed_streams)"
  },
  {
    "label": "RemoveRemoteStreamsIfEmpty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRemoteStreamsIfEmpty(\n      const std::vector<rtc::scoped_refptr<MediaStreamInterface>>&\n          remote_streams,\n      std::vector<rtc::scoped_refptr<MediaStreamInterface>>* removed_streams)"
  },
  {
    "label": "RemoveSenders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSenders(cricket::MediaType media_type)"
  },
  {
    "label": "UpdateLocalSenders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLocalSenders(const std::vector<cricket::StreamParams>& streams,\n                          cricket::MediaType media_type)"
  },
  {
    "label": "UpdateRemoteSendersList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRemoteSendersList(\n      const std::vector<cricket::StreamParams>& streams,\n      bool default_track_needed,\n      cricket::MediaType media_type,\n      StreamCollection* new_streams)"
  },
  {
    "label": "EnableSending()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableSending()"
  },
  {
    "label": "PushdownMediaDescription()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "PushdownMediaDescription(\n      SdpType type,\n      cricket::ContentSource source,\n      const std::map<std::string, const cricket::ContentGroup*>&\n          bundle_groups_by_mid)"
  },
  {
    "label": "PushdownTransportDescription()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "PushdownTransportDescription(cricket::ContentSource source,\n                                        SdpType type)"
  },
  {
    "label": "RemoveStoppedTransceivers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveStoppedTransceivers()"
  },
  {
    "label": "RemoveUnusedChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUnusedChannels(const cricket::SessionDescription* desc)"
  },
  {
    "label": "UpdateEndedRemoteMediaStreams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEndedRemoteMediaStreams()"
  },
  {
    "label": "UseCandidatesInRemoteDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseCandidatesInRemoteDescription()"
  },
  {
    "label": "UseCandidate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseCandidate(const IceCandidateInterface* candidate)"
  },
  {
    "label": "ReadyToUseRemoteCandidate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadyToUseRemoteCandidate(const IceCandidateInterface* candidate,\n                                 const SessionDescriptionInterface* remote_desc,\n                                 bool* valid)"
  },
  {
    "label": "CreateChannels()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "CreateChannels(const cricket::SessionDescription& desc)"
  },
  {
    "label": "CreateDataChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateDataChannel(const std::string& mid)"
  },
  {
    "label": "DestroyDataChannelTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDataChannelTransport(RTCError error)"
  },
  {
    "label": "GenerateMediaDescriptionOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateMediaDescriptionOptions(\n      const SessionDescriptionInterface* session_desc,\n      RtpTransceiverDirection audio_direction,\n      RtpTransceiverDirection video_direction,\n      absl::optional<size_t>* audio_index,\n      absl::optional<size_t>* video_index,\n      absl::optional<size_t>* data_index,\n      cricket::MediaSessionOptions* session_options)"
  },
  {
    "label": "UpdatePayloadTypeDemuxingState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdatePayloadTypeDemuxingState(\n      cricket::ContentSource source,\n      const std::map<std::string, const cricket::ContentGroup*>&\n          bundle_groups_by_mid)"
  },
  {
    "label": "SetSessionError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSessionError(SessionError error, const std::string& error_desc)"
  },
  {
    "label": "AddIceCandidateInternal()",
    "kind": "Method",
    "detail": "Function (AddIceCandidateResult)",
    "insertText": "AddIceCandidateInternal(\n      const IceCandidateInterface* candidate)"
  }
]