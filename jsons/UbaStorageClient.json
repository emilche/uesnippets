[
  {
    "label": "NetworkClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkClient"
  },
  {
    "label": "StorageClientCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StorageClientCreateInfo"
  },
  {
    "label": "StorageClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StorageClient"
  },
  {
    "label": "LocalFile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LocalFile"
  },
  {
    "label": "ProxyClient",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProxyClient"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UbaNetworkClient . h \" # include \" UbaStorage . h \" namespace uba { class NetworkClient ; using StartProxyCallback =)",
    "insertText": "bool(void* userData, u16 port, const Guid& storageServerUid)"
  },
  {
    "label": "NetworkBackend()",
    "kind": "Method",
    "detail": "Function (using GetProxyBackendCallback =)",
    "insertText": "NetworkBackend(void* userData, const tchar* proxyHost)"
  },
  {
    "label": "StorageClientCreateInfo()",
    "kind": "Method",
    "detail": "Function (struct StorageClientCreateInfo : StorageCreateInfo {)",
    "insertText": "StorageClientCreateInfo(NetworkClient& c, const tchar* rootDir_) : StorageCreateInfo(rootDir_, c.GetLogWriter()), client(c)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Apply(Config& config)"
  },
  {
    "label": "TC()",
    "kind": "Method",
    "detail": "Function (NetworkClient& client ; const tchar* zone =)",
    "insertText": "TC(\"\")"
  },
  {
    "label": "StorageClient()",
    "kind": "Method",
    "detail": "Function (u16 proxyPort = DefaultStorageProxyPort ; bool sendCompressed = true ; bool allowProxy = true ; GetProxyBackendCallback* getProxyBackendCallback = nullptr ; void* getProxyBackendUserData = nullptr ; StartProxyCallback* startProxyCallback = nullptr ; void* startProxyUserData = nullptr ; } ; class StorageClient final : public StorageImpl { public :)",
    "insertText": "StorageClient(const StorageClientCreateInfo& info)"
  },
  {
    "label": "StorageClient()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "StorageClient()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Start()"
  },
  {
    "label": "IsUsingProxy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingProxy()"
  },
  {
    "label": "StopProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopProxy()"
  },
  {
    "label": "PopulateCasFromDirs()",
    "kind": "Method",
    "detail": "Function (using DirVector = Vector<TString> ; bool)",
    "insertText": "PopulateCasFromDirs(const DirVector& directories, u32 workerCount, const Function<bool()>& shouldExit = {})"
  },
  {
    "label": "GetCasFileName()",
    "kind": "Method",
    "detail": "Function (# if ! UBA_USE_SPARSEFILE bool)",
    "insertText": "GetCasFileName(StringBufferBase& out, const CasKey& casKey)"
  },
  {
    "label": "MapView()",
    "kind": "Method",
    "detail": "Function (# endif MappedView)",
    "insertText": "MapView(const CasKey& casKey, const tchar* hint)"
  },
  {
    "label": "GetZone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetZone(StringBufferBase& out)"
  },
  {
    "label": "RetrieveCasFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RetrieveCasFile(RetrieveResult& out, const CasKey& casKey, const tchar* hint, FileMappingBuffer* mappingBuffer = nullptr, u64 memoryMapAlignment = 1, bool allowProxy = true)"
  },
  {
    "label": "StoreCasFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StoreCasFile(CasKey& out, const tchar* fileName, const CasKey& casKeyOverride, bool deferCreation, bool fileIsCompressed)"
  },
  {
    "label": "StoreCasFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StoreCasFile(CasKey& out, StringKey fileNameKey, const tchar* fileName, FileMappingHandle mappingFile, u64 mappingOffset, u64 fileSize, const tchar* hint, bool deferCreation = false, bool keepMappingInMemory = false)"
  },
  {
    "label": "HasCasFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCasFile(const CasKey& casKey, CasEntry** out = nullptr)"
  },
  {
    "label": "Ping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Ping()"
  },
  {
    "label": "PrintSummary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintSummary(Logger& logger)"
  },
  {
    "label": "SendFile()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "SendFile(const CasKey& casKey, const tchar* fileName, u8* sourceMem, u64 sourceSize, const tchar* hint)"
  },
  {
    "label": "PopulateCasFromDirsRecursive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopulateCasFromDirsRecursive(const tchar* dir, WorkManager& workManager, UnorderedSet<u64>& seenIds, ReaderWriterLock& seenIdsLock, const Function<bool()>& shouldExit)"
  }
]