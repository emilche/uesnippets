[
  {
    "label": "UGizmoElementLineBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementLineBase"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BaseGizmos / GizmoElementBase . h \" # include \" BaseGizmos / GizmoElementRenderState . h \" # include \" BaseGizmos / GizmoElementShared . h \" # include \" ToolContextInterfaces . h \" # include \" GizmoElementLineBase . generated . h \")",
    "insertText": "UCLASS(Transient, Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: INTERACTIVETOOLSFRAMEWORK_API virtual float GetCurrentLineThickness(bool bPerspectiveView, float InViewFOV)"
  },
  {
    "label": "SetLineThickness()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLineThickness(float InLineThickness)"
  },
  {
    "label": "GetLineThickness()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetLineThickness()"
  },
  {
    "label": "SetHoverLineThicknessMultiplier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHoverLineThicknessMultiplier(float InHoverLineThicknessMultiplier)"
  },
  {
    "label": "GetHoverLineThicknessMultiplier()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetHoverLineThicknessMultiplier()"
  },
  {
    "label": "SetInteractLineThicknessMultiplier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInteractLineThicknessMultiplier(float InInteractLineThicknessMultiplier)"
  },
  {
    "label": "GetInteractLineThicknessMultiplier()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetInteractLineThicknessMultiplier()"
  },
  {
    "label": "SetScreenSpaceLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScreenSpaceLine(bool bInScreenSpaceLine)"
  },
  {
    "label": "GetScreenSpaceLine()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetScreenSpaceLine()"
  },
  {
    "label": "SetLineColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLineColor(FLinearColor InColor, bool InOverridesChildState = false)"
  },
  {
    "label": "GetLineColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetLineColor()"
  },
  {
    "label": "HasLineColor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasLineColor()"
  },
  {
    "label": "DoesLineColorOverrideChildState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesLineColorOverrideChildState()"
  },
  {
    "label": "ClearLineColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLineColor()"
  },
  {
    "label": "SetHoverLineColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHoverLineColor(FLinearColor InColor, bool InOverridesChildState = false)"
  },
  {
    "label": "GetHoverLineColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetHoverLineColor()"
  },
  {
    "label": "HasHoverLineColor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasHoverLineColor()"
  },
  {
    "label": "DoesHoverLineColorOverrideChildState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesHoverLineColorOverrideChildState()"
  },
  {
    "label": "ClearHoverLineColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearHoverLineColor()"
  },
  {
    "label": "SetInteractLineColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInteractLineColor(FLinearColor InColor, bool InOverridesChildState = false)"
  },
  {
    "label": "GetInteractLineColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetInteractLineColor()"
  },
  {
    "label": "HasInteractLineColor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasInteractLineColor()"
  },
  {
    "label": "DoesInteractLineColorOverrideChildState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesInteractLineColorOverrideChildState()"
  },
  {
    "label": "ClearInteractLineColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInteractLineColor()"
  },
  {
    "label": "UpdateRenderState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateRenderState(IToolsContextRenderAPI* RenderAPI, const FVector& InLocalOrigin, FRenderTraversalState& InOutRenderState)"
  }
]