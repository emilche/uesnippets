[
  {
    "label": "BINKAUDIOCOMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BINKAUDIOCOMP"
  },
  {
    "label": "rfmerge3()",
    "kind": "Method",
    "detail": "Function (# ifndef __BINKACEH__ # define __BINKACEH__ # ifndef __RADRR_COREH__ # include \" rrCore . h \" # endif # define AUDIOFLOAT F32 # ifdef WRAP_PUBLICS # define)",
    "insertText": "rfmerge3(name,add) name##add #define rfmerge2(name,add) rfmerge3(name,add) #define rfmerge(name) rfmerge2(name,WRAP_PUBLICS) #define BinkAudioCompressOpen rfmerge(BinkAudioCompressOpen) #define BinkAudioCompressLock rfmerge(BinkAudioCompressLock) #define BinkAudioCompressUnlock rfmerge(BinkAudioCompressUnlock) #define BinkAudioCompressClose rfmerge(BinkAudioCompressClose)"
  },
  {
    "label": "BinkAudioCompressAllocFnType()",
    "kind": "Method",
    "detail": "Function (typedef struct BINKAUDIOCOMP* HBINKAUDIOCOMP ; typedef void*)",
    "insertText": "BinkAudioCompressAllocFnType(UINTa ByteCount)"
  },
  {
    "label": "BinkAudioCompressFreeFnType()",
    "kind": "Method",
    "detail": "Function (typedef void)",
    "insertText": "BinkAudioCompressFreeFnType(void* Ptr)"
  },
  {
    "label": "BinkAudioCompressOpen()",
    "kind": "Method",
    "detail": "Function (# define BINKAC20 4 RADDEFFUNC HBINKAUDIOCOMP RADLINK)",
    "insertText": "BinkAudioCompressOpen(U32 rate,U32 chans, U32 flags, BinkAudioCompressAllocFnType* memalloc, BinkAudioCompressFreeFnType* memfree)"
  },
  {
    "label": "BinkAudioCompressLock()",
    "kind": "Method",
    "detail": "Function (RADDEFFUNC void RADLINK)",
    "insertText": "BinkAudioCompressLock(HBINKAUDIOCOMP ba,void**ptr, U32*len)"
  },
  {
    "label": "BinkAudioCompressUnlock()",
    "kind": "Method",
    "detail": "Function (RADDEFFUNC void RADLINK)",
    "insertText": "BinkAudioCompressUnlock(HBINKAUDIOCOMP ba, U32 lossylevel, U32 filled, void** output,U32* outbytes, U32* uncompressedbytesused)"
  },
  {
    "label": "BinkAudioCompressClose()",
    "kind": "Method",
    "detail": "Function (RADDEFFUNC void RADLINK)",
    "insertText": "BinkAudioCompressClose(HBINKAUDIOCOMP ba)"
  }
]