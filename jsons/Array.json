[
  {
    "label": "CArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CArray"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "ST_DLL_LINK",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ST_DLL_LINK"
  },
  {
    "label": "CompareFunctor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompareFunctor"
  },
  {
    "label": "CDefaultArraySort",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CDefaultArraySort"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "CReverseArraySort",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CReverseArraySort"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "CArray()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "CArray( )"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear(void)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "resize(size_t uiSize)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "resize(size_t uiSize, const T& tDefault)"
  },
  {
    "label": "reserve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "reserve(size_t uiSize)"
  },
  {
    "label": "push_back()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "push_back(const T& tNew)"
  },
  {
    "label": "pop_back()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pop_back(void)"
  },
  {
    "label": "clip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clip(void)"
  },
  {
    "label": "erase_all()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "erase_all(const T& tErase)"
  },
  {
    "label": "sort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sort(const CompareFunctor& Compare, bool bMemorySwap = false)"
  },
  {
    "label": "sort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sort(bool bMemorySwap = false)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "begin(void)"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "end(void)"
  },
  {
    "label": "erase()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "erase(iterator iterWhere)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "insert(iterator iterWhere, const T& tData)"
  },
  {
    "label": "lower()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "lower(const T& tData)"
  },
  {
    "label": "higher()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "higher(const T& tData)"
  },
  {
    "label": "lower_and_higher()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lower_and_higher(const T& tData, iterator& iterLower, iterator& iterHigher)"
  },
  {
    "label": "insert_sorted()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "insert_sorted(const T& tData)"
  },
  {
    "label": "insert_sorted_unique()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "insert_sorted_unique(const T& tData)"
  },
  {
    "label": "SetExternalMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExternalMemory(unsigned char* pMemory, size_t uiSize)"
  },
  {
    "label": "SetHeapDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeapDescription(const char* pDesc)"
  },
  {
    "label": "Deallocate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deallocate(T* pData)"
  }
]