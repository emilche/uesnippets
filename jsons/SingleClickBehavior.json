[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "USingleClickInputBehavior",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USingleClickInputBehavior"
  },
  {
    "label": "ULocalSingleClickInputBehavior",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalSingleClickInputBehavior"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BaseBehaviors / AnyButtonInputBehavior . h \" # include \" BehaviorTargetInterfaces . h \" # include \" CoreMinimal . h \" # include \" InputBehavior . h \" # include \" InputBehaviorModifierStates . h \" # include \" InputState . h \" # include \" Templates / Function . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" SingleClickBehavior . generated . h \" class UObject ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: INTERACTIVETOOLSFRAMEWORK_API USingleClickInputBehavior()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(IClickBehaviorTarget* Target)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (TFunction<)",
    "insertText": "bool(const FInputDeviceState&)"
  },
  {
    "label": "WantsCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureRequest)",
    "insertText": "WantsCapture(const FInputDeviceState& Input)"
  },
  {
    "label": "BeginCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureUpdate)",
    "insertText": "BeginCapture(const FInputDeviceState& Input, EInputCaptureSide eSide)"
  },
  {
    "label": "UpdateCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureUpdate)",
    "insertText": "UpdateCapture(const FInputDeviceState& Input, const FInputCaptureData& Data)"
  },
  {
    "label": "ForceEndCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceEndCapture(const FInputCaptureData& Data)"
  },
  {
    "label": "Clicked()",
    "kind": "Method",
    "detail": "Function (FInputBehaviorModifierStates Modifiers ; protected : IClickBehaviorTarget* Target ; void)",
    "insertText": "Clicked(const FInputDeviceState& Input, const FInputCaptureData& Data)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (this ->)",
    "insertText": "Initialize(this)"
  },
  {
    "label": "FInputRayHit()",
    "kind": "Method",
    "detail": "Function (} TUniqueFunction<)",
    "insertText": "FInputRayHit(const FInputDeviceRay&)> IsHitByClickFunc = [](const FInputDeviceRay& ClickPos)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; TUniqueFunction<)",
    "insertText": "void(const FInputDeviceRay&)> OnClickedFunc = [](const FInputDeviceRay& ClickPos)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; TUniqueFunction<)",
    "insertText": "void(int, bool) > OnUpdateModifierStateFunc = [](int ModifierID, bool bIsOn)"
  },
  {
    "label": "IsHitByClick()",
    "kind": "Method",
    "detail": "Function (} ; public : FInputRayHit)",
    "insertText": "IsHitByClick(const FInputDeviceRay& ClickPos)"
  },
  {
    "label": "OnClicked()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnClicked(const FInputDeviceRay& ClickPos)"
  },
  {
    "label": "OnUpdateModifierState()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnUpdateModifierState(int ModifierID, bool bIsOn)"
  }
]