[
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "FSequenceWeights",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequenceWeights"
  },
  {
    "label": "FSequenceWeights()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / SortedMap . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" MovieSceneSequenceID . h \" # include \" EntitySystem / MovieSceneSequenceInstanceHandle . h \" class UMovieSceneEntitySystemLinker ; namespace UE::MovieScene { class FSequenceWeights { public :)",
    "insertText": "FSequenceWeights(UMovieSceneEntitySystemLinker* InLinker, FRootInstanceHandle InRootInstanceHandle)"
  },
  {
    "label": "FSequenceWeights()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSequenceWeights()"
  },
  {
    "label": "SetWeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWeight(FMovieSceneSequenceID InSequenceID, double Weight = 1.0)"
  },
  {
    "label": "SetWeights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWeights(const TSortedMap<FMovieSceneSequenceID, double>& Weights)"
  },
  {
    "label": "RemoveWeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveWeight(FMovieSceneSequenceID InSequenceID)"
  }
]