[
  {
    "label": "SDLTest_TestCaseReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDLTest_TestCaseReference"
  },
  {
    "label": "SDLTest_TestSuiteReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDLTest_TestSuiteReference"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_test_h_arness_h # define SDL_test_h_arness_h # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif # define TEST_ENABLED 1 # define TEST_DISABLED 0 # define TEST_ABORTED - 1 # define TEST_STARTED 0 # define TEST_COMPLETED 1 # define TEST_SKIPPED 2 # define TEST_RESULT_PASSED 0 # define TEST_RESULT_FAILED 1 # define TEST_RESULT_NO_ASSERT 2 # define TEST_RESULT_SKIPPED 3 # define TEST_RESULT_SETUP_FAILURE 4 typedef)",
    "insertText": "void(*SDLTest_TestCaseSetUpFp)(void *arg)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*SDLTest_TestCaseFp)(void *arg)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*SDLTest_TestCaseTearDownFp)(void *arg)"
  },
  {
    "label": "SDLTest_GenerateRunSeed()",
    "kind": "Method",
    "detail": "Function (typedef struct SDLTest_TestCaseReference { SDLTest_TestCaseFp testCase ; const char* name ; const char* description ; int enabled ; } SDLTest_TestCaseReference ; typedef struct SDLTest_TestSuiteReference { const char* name ; SDLTest_TestCaseSetUpFp testSetUp ; const SDLTest_TestCaseReference** testCases ; SDLTest_TestCaseTearDownFp testTearDown ; } SDLTest_TestSuiteReference ; char*)",
    "insertText": "SDLTest_GenerateRunSeed(const int length)"
  },
  {
    "label": "SDLTest_RunSuites()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SDLTest_RunSuites(SDLTest_TestSuiteReference *testSuites[], const char *userRunSeed, Uint64 userExecKey, const char *filter, int testIterations)"
  }
]