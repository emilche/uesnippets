[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "IMovieScenePropertyRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePropertyRecorder"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "FPropertyKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyKey"
  },
  {
    "label": "SEQUENCERECORDER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCERECORDER_API"
  },
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "IMovieScenePropertyRecorder()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Math / Color . h \" # include \" Math / Vector . h \" # include \" Misc / FrameNumber . h \" # include \" Misc / FrameRate . h \" # include \" Misc / FrameTime . h \" # include \" MovieScene . h \" # include \" MovieSceneCommonHelpers . h \" # include \" MovieSceneSection . h \" # include \" SequenceRecorderSettings . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class UObject ; struct FGuid ; class IMovieScenePropertyRecorder { public : ~)",
    "insertText": "IMovieScenePropertyRecorder()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "Create(UObject* InObjectToRecord, class UMovieScene* InMovieScene, const FGuid& InGuid, float InTime)"
  },
  {
    "label": "Record()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Record(UObject* InObjectToRecord, float InCurrentTime)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Finalize(UObject* InObjectToRecord, float InCurrentTime)"
  },
  {
    "label": "FMovieScenePropertyRecorder()",
    "kind": "Method",
    "detail": "Function (} ; template<PropertyType> struct FPropertyKey { PropertyType Value ; FFrameNumber Time ; } ; template<PropertyType> class FMovieScenePropertyRecorder : public IMovieScenePropertyRecorder { public :)",
    "insertText": "FMovieScenePropertyRecorder(const FTrackInstancePropertyBindings& InBinding) : Binding(InBinding)"
  },
  {
    "label": "FMovieScenePropertyRecorder()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FMovieScenePropertyRecorder()"
  },
  {
    "label": "PropertyType()",
    "kind": "Method",
    "detail": "Function (PreviousValue = Binding . GetCurrentValue<)",
    "insertText": "PropertyType(*InObjectToRecord)"
  },
  {
    "label": "AddSection()",
    "kind": "Method",
    "detail": "Function (} MovieSceneSection =)",
    "insertText": "AddSection(InObjectToRecord, InMovieScene, InGuid, InTime)"
  },
  {
    "label": "UMovieScene()",
    "kind": "Method",
    "detail": "Function (FFrameRate TickResolution = MovieSceneSection -> GetTypedOuter<)",
    "insertText": "UMovieScene()->GetTickResolution()"
  },
  {
    "label": "CurrentFrame()",
    "kind": "Method",
    "detail": "Function (FFrameNumber)",
    "insertText": "CurrentFrame(InCurrentTime * TickResolution).FloorToFrame()"
  },
  {
    "label": "ExpandToFrame()",
    "kind": "Method",
    "detail": "Function (MovieSceneSection ->)",
    "insertText": "ExpandToFrame(CurrentFrame)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (FPropertyKey<PropertyType> Key ; Key . Time = CurrentFrame ; Key . Value = NewValue ; Keys .)",
    "insertText": "Add(Key)"
  },
  {
    "label": "AddKeyToSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddKeyToSection(MovieSceneSection.Get(), Key)"
  },
  {
    "label": "USequenceRecorderSettings()",
    "kind": "Method",
    "detail": "Function (} const USequenceRecorderSettings* Settings = GetDefault<)",
    "insertText": "USequenceRecorderSettings()"
  },
  {
    "label": "ReduceKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReduceKeys(MovieSceneSection.Get())"
  },
  {
    "label": "ShouldAddNewKey()",
    "kind": "Method",
    "detail": "Function (} } private : bool)",
    "insertText": "ShouldAddNewKey(const PropertyType& InNewValue)"
  },
  {
    "label": "AddSection()",
    "kind": "Method",
    "detail": "Function (class UMovieSceneSection*)",
    "insertText": "AddSection(UObject* InObjectToRecord, class UMovieScene* InMovieScene, const FGuid& InGuid, float InTime)"
  },
  {
    "label": "AddKeyToSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddKeyToSection(UMovieSceneSection* InSection, const FPropertyKey<PropertyType>& InKey)"
  },
  {
    "label": "ReduceKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReduceKeys(UMovieSceneSection* InSection)"
  },
  {
    "label": "FMovieScenePropertyRecorderEnum()",
    "kind": "Method",
    "detail": "Function (private : FTrackInstancePropertyBindings Binding ; TArray<FPropertyKey<PropertyType>> Keys ; TWeakObjectPtr<class UMovieSceneSection> MovieSceneSection ; PropertyType PreviousValue ; } ; class FMovieScenePropertyRecorderEnum : public IMovieScenePropertyRecorder { public :)",
    "insertText": "FMovieScenePropertyRecorderEnum(const FTrackInstancePropertyBindings& InBinding) : Binding(InBinding)"
  },
  {
    "label": "FMovieScenePropertyRecorderEnum()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FMovieScenePropertyRecorderEnum()"
  },
  {
    "label": "GetCurrentValueForEnum()",
    "kind": "Method",
    "detail": "Function (PreviousValue = Binding .)",
    "insertText": "GetCurrentValueForEnum(*InObjectToRecord)"
  },
  {
    "label": "ShouldAddNewKey()",
    "kind": "Method",
    "detail": "Function (} private : bool)",
    "insertText": "ShouldAddNewKey(const int64& InNewValue)"
  },
  {
    "label": "AddKeyToSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddKeyToSection(UMovieSceneSection* InSection, const FPropertyKey<int64>& InKey)"
  }
]