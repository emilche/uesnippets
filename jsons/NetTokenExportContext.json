[
  {
    "label": "FNetBitWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBitWriter"
  },
  {
    "label": "FNetTokenStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTokenStore"
  },
  {
    "label": "FNetTokenStoreState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTokenStoreState"
  },
  {
    "label": "FNetTokenExportContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTokenExportContext"
  },
  {
    "label": "FNetTokenExportScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTokenExportScope"
  },
  {
    "label": "FNetTokenExportScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTokenExportScope"
  },
  {
    "label": "AddNetTokenPendingExport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNetTokenPendingExport(UE::Net::FNetToken NetToken)"
  },
  {
    "label": "AppendNetTokensPendingExport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendNetTokensPendingExport(TArrayView<const UE::Net::FNetToken> NetTokens)"
  },
  {
    "label": "FNetTokenExportScope()",
    "kind": "Method",
    "detail": "Function (NETCORE_API)",
    "insertText": "FNetTokenExportScope(FNetBitWriter& InNetBitWriter, UE::Net::FNetTokenStore* InNetTokenStore, FNetTokenExportContext::FNetTokenExports& TargetExports, const char* InDebugName = \"None\")"
  }
]