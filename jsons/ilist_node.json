[
  {
    "label": "ilist_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ilist_traits"
  },
  {
    "label": "ilist_half_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ilist_half_node"
  },
  {
    "label": "ilist_nextprev_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ilist_nextprev_traits"
  },
  {
    "label": "ilist_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ilist_node"
  },
  {
    "label": "getPrev()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_ADT_ILIST_NODE_H # define LLVM_ADT_ILIST_NODE_H # include \" llvm / Config / abi - breaking . h \" namespace llvm { template<NodeTy> struct ilist_traits ; template<NodeTy> class ilist_half_node { struct ilist_traits<NodeTy> ; NodeTy* Prev ; protected : NodeTy*)",
    "insertText": "getPrev()"
  },
  {
    "label": "ilist_half_node()",
    "kind": "Method",
    "detail": "Function (Prev = P ; })",
    "insertText": "ilist_half_node() : Prev(nullptr)"
  },
  {
    "label": "getNext()",
    "kind": "Method",
    "detail": "Function (} } ; template<NodeTy> struct ilist_nextprev_traits ; template<NodeTy> class ilist_node : private ilist_half_node<NodeTy> { struct ilist_nextprev_traits<NodeTy> ; struct ilist_traits<NodeTy> ; NodeTy* Next ; NodeTy*)",
    "insertText": "getNext()"
  },
  {
    "label": "ilist_node()",
    "kind": "Method",
    "detail": "Function (Next = N ; } protected :)",
    "insertText": "ilist_node() : Next(nullptr)"
  },
  {
    "label": "getPrevNode()",
    "kind": "Method",
    "detail": "Function (} public : NodeTy*)",
    "insertText": "getPrevNode()"
  }
]