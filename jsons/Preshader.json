[
  {
    "label": "FUniformExpressionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformExpressionSet"
  },
  {
    "label": "FMaterialRenderContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialRenderContext"
  },
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FXxHash64Builder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXxHash64Builder"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPreshaderStructType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreshaderStructType"
  },
  {
    "label": "FPreshaderLabel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreshaderLabel"
  },
  {
    "label": "FPreshaderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreshaderData"
  },
  {
    "label": "DECLARE_TYPE_LAYOUT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Shader / PreshaderTypes . h \" # include \" Serialization / MemoryImage . h \" # include \" Materials / MaterialLayersFunctions . h \" class FUniformExpressionSet ; struct FMaterialRenderContext ; class FMaterial ; class FXxHash64Builder ; namespace UE { namespace Shader { enum class EPreshaderOpcode : uint8 { Nop,ConstantZero,Constant,Parameter,Add,Sub,Mul,Div,Fmod,Modulo,Min,Max,Clamp,Sin,Cos,Tan,Asin,Acos,Atan,Atan2,Dot,Cross,Sqrt,Rcp,Length,Normalize,Saturate,Abs,Floor,Ceil,Round,Trunc,Sign,Frac,Fractional,Log2,Log10,ComponentSwizzle,AppendVector,TextureSize,TexelSize,ExternalTextureCoordinateScaleRotation,ExternalTextureCoordinateOffset,RuntimeVirtualTextureUniform,SparseVolumeTextureUniform,GetField,SetField,Neg,Jump,JumpIfFalse,PushValue,Less,Assign,Greater,LessEqual,GreaterEqual,Exp,Exp2,Log } ; struct FPreshaderStructType {)",
    "insertText": "DECLARE_TYPE_LAYOUT(FPreshaderStructType, NonVirtual)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(uint64, Hash)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(int32, ComponentTypeIndex)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(int32, NumComponents)"
  },
  {
    "label": "FPreshaderLabel()",
    "kind": "Method",
    "detail": "Function (} ; struct FPreshaderLabel {)",
    "insertText": "FPreshaderLabel(int32 InOffset = INDEX_NONE) : Offset(InOffset)"
  },
  {
    "label": "DECLARE_TYPE_LAYOUT()",
    "kind": "Method",
    "detail": "Function (} int32 Offset ; } ; class FPreshaderData {)",
    "insertText": "DECLARE_TYPE_LAYOUT(FPreshaderData, NonVirtual)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "operator(const FPreshaderData& Lhs, const FPreshaderData& Rhs)"
  },
  {
    "label": "AppendHash()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AppendHash(FXxHash64Builder& OutHasher)"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (FPreshaderValue)",
    "insertText": "Evaluate(FUniformExpressionSet* UniformExpressionSet, const struct FMaterialRenderContext& Context, FPreshaderStack& Stack)"
  },
  {
    "label": "EvaluateConstant()",
    "kind": "Method",
    "detail": "Function (FPreshaderValue)",
    "insertText": "EvaluateConstant(const FMaterial& Material, FPreshaderStack& Stack)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (const int32)",
    "insertText": "Num()"
  },
  {
    "label": "WriteData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteData(const void* Value, uint32 Size)"
  },
  {
    "label": "WriteName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteName(const FScriptName& Name)"
  },
  {
    "label": "WriteType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteType(const FType& Type)"
  },
  {
    "label": "WriteValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValue(const FValue& Value)"
  },
  {
    "label": "WriteJump()",
    "kind": "Method",
    "detail": "Function (FPreshaderLabel)",
    "insertText": "WriteJump(EPreshaderOpcode Op)"
  },
  {
    "label": "WriteJump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteJump(EPreshaderOpcode Op, FPreshaderLabel Label)"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (FPreshaderLabel)",
    "insertText": "GetLabel()"
  },
  {
    "label": "SetLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLabel(FPreshaderLabel InLabel)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (template<T> FPreshaderData&)",
    "insertText": "Write(const T& Value)"
  },
  {
    "label": "WriteData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteData(&Value, sizeof(T))"
  },
  {
    "label": "WriteName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteName(Value)"
  },
  {
    "label": "WriteType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteType(Value)"
  },
  {
    "label": "WriteValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValue(Value)"
  },
  {
    "label": "FHashedMaterialParameterInfo()",
    "kind": "Method",
    "detail": "Function (template<> FPreshaderData& Write<)",
    "insertText": "FHashedMaterialParameterInfo(const FHashedMaterialParameterInfo& Value)"
  },
  {
    "label": "WriteOpcode()",
    "kind": "Method",
    "detail": "Function (} FPreshaderData&)",
    "insertText": "WriteOpcode(EPreshaderOpcode Op)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "LAYOUT_FIELD(TMemoryImageArray<FScriptName>, Names)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(TMemoryImageArray<FPreshaderStructType>, StructTypes)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(TMemoryImageArray<EValueComponentType>, StructComponentTypes)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(TMemoryImageArray<uint8>, Data)"
  }
]