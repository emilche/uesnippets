[
  {
    "label": "FUniformExpressionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformExpressionSet"
  },
  {
    "label": "FMaterialRenderContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialRenderContext"
  },
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FXxHash64Builder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXxHash64Builder"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPreshaderStructType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreshaderStructType"
  },
  {
    "label": "FPreshaderLabel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreshaderLabel"
  },
  {
    "label": "FPreshaderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreshaderData"
  },
  {
    "label": "FMaterialRenderContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialRenderContext"
  },
  {
    "label": "WriteData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteData(const void* Value, uint32 Size)"
  },
  {
    "label": "WriteName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteName(const FScriptName& Name)"
  },
  {
    "label": "WriteType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteType(const FType& Type)"
  },
  {
    "label": "WriteValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValue(const FValue& Value)"
  },
  {
    "label": "WriteJump()",
    "kind": "Method",
    "detail": "Function (FPreshaderLabel)",
    "insertText": "WriteJump(EPreshaderOpcode Op)"
  },
  {
    "label": "WriteJump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteJump(EPreshaderOpcode Op, FPreshaderLabel Label)"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (FPreshaderLabel)",
    "insertText": "GetLabel()"
  },
  {
    "label": "SetLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLabel(FPreshaderLabel InLabel)"
  }
]