[
  {
    "label": "RtpReceiverObserverInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpReceiverObserverInterface"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "OnFirstPacketReceived()",
    "kind": "Method",
    "detail": "Function (# ifndef API_RTP_RECEIVER_INTERFACE_H_ # define API_RTP_RECEIVER_INTERFACE_H_ # include<string> # include<vector> # include \" api / crypto / frame_decryptor_interface . h \" # include \" api / dtls_transport_interface . h \" # include \" api / frame_transformer_interface . h \" # include \" api / media_stream_interface . h \" # include \" api / media_types . h \" # include \" api / rtp_parameters . h \" # include \" api / scoped_refptr . h \" # include \" api / transport / rtp / rtp_source . h \" # include \" rtc_base / ref_count . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { class RtpReceiverObserverInterface { public : void)",
    "insertText": "OnFirstPacketReceived(cricket::MediaType media_type)"
  },
  {
    "label": "RtpReceiverObserverInterface()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "RtpReceiverObserverInterface()"
  },
  {
    "label": "track()",
    "kind": "Method",
    "detail": "Function (} } ; class RTC_EXPORT RtpReceiverInterface : public rtc::RefCountInterface { public : rtc::scoped_refptr<MediaStreamTrackInterface>)",
    "insertText": "track()"
  },
  {
    "label": "dtls_transport()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<DtlsTransportInterface>)",
    "insertText": "dtls_transport()"
  },
  {
    "label": "stream_ids()",
    "kind": "Method",
    "detail": "Function (std::vector<std::string>)",
    "insertText": "stream_ids()"
  },
  {
    "label": "streams()",
    "kind": "Method",
    "detail": "Function (std::vector<rtc::scoped_refptr<MediaStreamInterface>>)",
    "insertText": "streams()"
  },
  {
    "label": "media_type()",
    "kind": "Method",
    "detail": "Function (cricket::MediaType)",
    "insertText": "media_type()"
  },
  {
    "label": "id()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "id()"
  },
  {
    "label": "GetParameters()",
    "kind": "Method",
    "detail": "Function (RtpParameters)",
    "insertText": "GetParameters()"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParameters(const RtpParameters& parameters)"
  },
  {
    "label": "SetJitterBufferMinimumDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetJitterBufferMinimumDelay(absl::optional<double> delay_seconds)"
  },
  {
    "label": "GetSources()",
    "kind": "Method",
    "detail": "Function (std::vector<RtpSource>)",
    "insertText": "GetSources()"
  },
  {
    "label": "SetFrameDecryptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameDecryptor(rtc::scoped_refptr<FrameDecryptorInterface> frame_decryptor)"
  },
  {
    "label": "GetFrameDecryptor()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<FrameDecryptorInterface>)",
    "insertText": "GetFrameDecryptor()"
  },
  {
    "label": "SetDepacketizerToDecoderFrameTransformer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDepacketizerToDecoderFrameTransformer(rtc::scoped_refptr<FrameTransformerInterface> frame_transformer)"
  },
  {
    "label": "RtpReceiverInterface()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "RtpReceiverInterface()"
  }
]