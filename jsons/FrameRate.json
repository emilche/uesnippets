[
  {
    "label": "FExpressionError",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExpressionError"
  },
  {
    "label": "FFrameRate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameRate"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "data"
  },
  {
    "label": "TransformTime()",
    "kind": "Method",
    "detail": "Function (FFrameTime)",
    "insertText": "TransformTime(FFrameTime SourceTime, FFrameRate SourceRate, FFrameRate DestinationRate)"
  },
  {
    "label": "Snap()",
    "kind": "Method",
    "detail": "Function (FFrameTime)",
    "insertText": "Snap(FFrameTime SourceTime, FFrameRate SourceRate, FFrameRate SnapToRate)"
  },
  {
    "label": "FFrameRate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FFrameRate(Denominator, Numerator)"
  },
  {
    "label": "FFrameRate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FFrameRate(A.Numerator * B.Numerator, A.Denominator * B.Denominator)"
  },
  {
    "label": "FFrameRate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FFrameRate(A.Numerator * B.Denominator, A.Denominator * B.Numerator)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "FFrameTime()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FFrameTime(FrameNumber, SubFrame)"
  },
  {
    "label": "ConvertFrameTime()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConvertFrameTime(SourceTime, SourceRate, DestinationRate)"
  },
  {
    "label": "ParseFrameRate()",
    "kind": "Method",
    "detail": "Function (FExpressionError>)",
    "insertText": "ParseFrameRate(const TCHAR* FrameRateString)"
  },
  {
    "label": "TryParseString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryParseString(FFrameRate& OutFrameRate, const TCHAR* InString)"
  }
]