[
  {
    "label": "AGeometryCollectionRenderLevelSetActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGeometryCollectionRenderLevelSetActor"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GameFramework / Actor . h \" # include \" GeometryCollection / GeometryCollection . h \" # include \" Engine / VolumeTexture . h \" # include \" Chaos / Levelset . h \" # include \" Engine / StaticMesh . h \" # include \" Components / PostProcessComponent . h \" # include \" Materials / MaterialInstanceDynamic . h \" # include \" GeometryCollectionRenderLevelSetActor . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "FindOrCreate()",
    "kind": "Method",
    "detail": "Function (AGeometryCollectionRenderLevelSetActor*)",
    "insertText": "FindOrCreate(UWorld* World)"
  },
  {
    "label": "SetLevelSetToRender()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLevelSetToRender(const Chaos::FLevelSet &LevelSet, const FTransform &LocalToWorld)"
  },
  {
    "label": "SyncLevelSetTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncLevelSetTransform(const FTransform &LocalToWorld)"
  },
  {
    "label": "BeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPlay()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& e)"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "SetEnabled(bool enabled)"
  },
  {
    "label": "SyncMaterialParameters()",
    "kind": "Method",
    "detail": "Function (Enabled = enabled ; PostProcessComponent -> bEnabled = Enabled ; } private : FVector MinBBoxCorner ; FVector MaxBBoxCorner ; FMatrix WorldToLocal ; float VoxelSize ; UPostProcessComponent* PostProcessComponent ; UMaterialInstanceDynamic* DynRayMarchMaterial ; void)",
    "insertText": "SyncMaterialParameters()"
  }
]