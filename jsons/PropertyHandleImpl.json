[
  {
    "label": "FNotifyHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNotifyHook"
  },
  {
    "label": "FPropertyRestriction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyRestriction"
  },
  {
    "label": "FObjectBaseAddress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectBaseAddress"
  },
  {
    "label": "FPropertyValueImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyValueImpl"
  },
  {
    "label": "TProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TProperty"
  },
  {
    "label": "SNotificationItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNotificationItem"
  },
  {
    "label": "FDetailCategoryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailCategoryImpl"
  },
  {
    "label": "FPropertyHandleBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleBase"
  },
  {
    "label": "FPropertyHandleInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleInt"
  },
  {
    "label": "FPropertyHandleFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleFloat"
  },
  {
    "label": "FPropertyHandleDouble",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleDouble"
  },
  {
    "label": "FPropertyHandleBool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleBool"
  },
  {
    "label": "FPropertyHandleByte",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleByte"
  },
  {
    "label": "FPropertyHandleString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleString"
  },
  {
    "label": "FPropertyHandleObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleObject"
  },
  {
    "label": "FPropertyHandleMixed",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleMixed"
  },
  {
    "label": "FPropertyHandleStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleStruct"
  },
  {
    "label": "FPropertyHandleVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleVector"
  },
  {
    "label": "FPropertyHandleRotator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleRotator"
  },
  {
    "label": "FPropertyHandleColor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleColor"
  },
  {
    "label": "FPropertyHandleArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleArray"
  },
  {
    "label": "FPropertyHandleOptional",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleOptional"
  },
  {
    "label": "FPropertyHandleText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleText"
  },
  {
    "label": "FPropertyHandleSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleSet"
  },
  {
    "label": "FPropertyHandleMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleMap"
  },
  {
    "label": "FPropertyHandleFieldPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleFieldPath"
  },
  {
    "label": "FObjectBaseAddress()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / UnrealType . h \" # include \" Widgets / SWidget . h \" # include \" PropertyHandle . h \" # include \" AssetRegistry / AssetData . h \" # include \" PropertyNode . h \" class FNotifyHook ; class FPropertyRestriction ; class FObjectBaseAddress { public :)",
    "insertText": "FObjectBaseAddress()"
  },
  {
    "label": "FObjectBaseAddress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FObjectBaseAddress(UObject* InObject, uint8* InStructAddress, uint8* InBaseAddress) : Object(InObject) , StructAddress(InStructAddress) , BaseAddress(InBaseAddress)"
  },
  {
    "label": "FPropertyValueImpl()",
    "kind": "Method",
    "detail": "Function (} UObject* Object = nullptr ; uint8* StructAddress = nullptr ; uint8* BaseAddress = nullptr ; } ; class FPropertyValueImpl { public :)",
    "insertText": "FPropertyValueImpl(TSharedPtr<FPropertyNode> InPropertyNode, FNotifyHook* InNotifyHook, TSharedPtr<IPropertyUtilities> InPropertyUtilities)"
  },
  {
    "label": "GenerateArrayIndexMapToObjectNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateArrayIndexMapToObjectNode(TMap<FString,int32>& OutArrayIndexMap, FPropertyNode* PropertyNode)"
  },
  {
    "label": "GetPropertyValueArray()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPropertyValueArray()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (typedef TFunctionRef<)",
    "insertText": "bool(const FObjectBaseAddress& , const int32 , const int32)"
  },
  {
    "label": "EnumerateObjectsToModify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateObjectsToModify(FPropertyNode* InPropertyNode, const EnumerateObjectsToModifyFuncRef& InObjectsToModifyCallback)"
  },
  {
    "label": "GetObjectsToModify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetObjectsToModify(TArray<FObjectBaseAddress>& ObjectsToModify, FPropertyNode* InPropertyNode)"
  },
  {
    "label": "GetValueData()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValueData(void*& OutAddress)"
  },
  {
    "label": "GetValueEditStack()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValueEditStack(FPropertyNodeEditStack& OutStack)"
  },
  {
    "label": "GetPropertyValue()",
    "kind": "Method",
    "detail": "Function (template<class TProperty> TProperty::TCppType)",
    "insertText": "GetPropertyValue(void const* Address)"
  },
  {
    "label": "Pin()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyNode> PropertyNodePin = PropertyNode .)",
    "insertText": "Pin()"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetObjectPropertyValue(void const* Address)"
  },
  {
    "label": "ImportText()",
    "kind": "Method",
    "detail": "Function (} FPropertyAccess::Result)",
    "insertText": "ImportText(const FString& InValue, EPropertyValueSetFlags::Type Flags)"
  },
  {
    "label": "ImportText()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "ImportText(const FString& InValue, FPropertyNode* PropertyNode, EPropertyValueSetFlags::Type Flags)"
  },
  {
    "label": "ImportText()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "ImportText(const TArray<FObjectBaseAddress>& InObjects, const TArray<FString>& InValues, FPropertyNode* PropertyNode, EPropertyValueSetFlags::Type Flags)"
  },
  {
    "label": "EnumerateRawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateRawData(const IPropertyHandle::EnumerateRawDataFuncRef& InRawDataCallback)"
  },
  {
    "label": "EnumerateConstRawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateConstRawData(const IPropertyHandle::EnumerateConstRawDataFuncRef& InRawDataCallback)"
  },
  {
    "label": "AccessRawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AccessRawData(TArray<void*>& RawData)"
  },
  {
    "label": "AccessRawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AccessRawData(TArray<const void*>& RawData)"
  },
  {
    "label": "SetOnPropertyValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnPropertyValueChanged(const FSimpleDelegate& InOnPropertyValueChanged)"
  },
  {
    "label": "SetOnPropertyValueChangedWithData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnPropertyValueChangedWithData(const TDelegate<void(const FPropertyChangedEvent&)>& InOnPropertyValueChanged)"
  },
  {
    "label": "SetOnChildPropertyValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnChildPropertyValueChanged(const FSimpleDelegate& InOnChildPropertyValueChanged)"
  },
  {
    "label": "SetOnChildPropertyValueChangedWithData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnChildPropertyValueChangedWithData(const TDelegate<void(const FPropertyChangedEvent&)>& InOnChildPropertyValueChanged)"
  },
  {
    "label": "SetOnPropertyValuePreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnPropertyValuePreChange(const FSimpleDelegate& InOnPropertyValuePreChange)"
  },
  {
    "label": "SetOnChildPropertyValuePreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnChildPropertyValuePreChange(const FSimpleDelegate& InOnChildPropertyValuePreChange)"
  },
  {
    "label": "SetOnPropertyResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnPropertyResetToDefault(const FSimpleDelegate& InOnPropertyResetToDefault)"
  },
  {
    "label": "SetOnRebuildChildren()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "SetOnRebuildChildren(const FSimpleDelegate& InOnRebuildChildren)"
  },
  {
    "label": "UnregisterOnRebuildChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterOnRebuildChildren(FDelegateHandle Handle)"
  },
  {
    "label": "GetValueAsString()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValueAsString(FString& OutString, EPropertyPortFlags PortFlags = PPF_PropertyWindow)"
  },
  {
    "label": "GetValueAsDisplayString()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValueAsDisplayString(FString& OutString, EPropertyPortFlags PortFlags)"
  },
  {
    "label": "GetValueAsText()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValueAsText(FText& OutText)"
  },
  {
    "label": "GetValueAsDisplayText()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValueAsDisplayText(FText& OutText)"
  },
  {
    "label": "SetValueAsString()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValueAsString(const FString& InValue, EPropertyValueSetFlags::Type Flags)"
  },
  {
    "label": "IsPropertyTypeOf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyTypeOf(FFieldClass* ClassType)"
  },
  {
    "label": "GetPropertyNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyNode>)",
    "insertText": "GetPropertyNode()"
  },
  {
    "label": "GetNumChildren()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumChildren()"
  },
  {
    "label": "GetChildNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyNode>)",
    "insertText": "GetChildNode(FName ChildName, bool bRecurse = true)"
  },
  {
    "label": "GetChildNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyNode>)",
    "insertText": "GetChildNode(int32 ChildIndex)"
  },
  {
    "label": "GetChildNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetChildNode(const int32 ChildArrayIndex, TSharedPtr<FPropertyNode>& OutChildNode)"
  },
  {
    "label": "ResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetToDefault()"
  },
  {
    "label": "DiffersFromDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DiffersFromDefault()"
  },
  {
    "label": "IsEditConst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditConst()"
  },
  {
    "label": "IsExpanded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExpanded()"
  },
  {
    "label": "SetExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExpanded(bool bExpanded)"
  },
  {
    "label": "GetResetToDefaultLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetResetToDefaultLabel()"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddChild()"
  },
  {
    "label": "ClearChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChildren()"
  },
  {
    "label": "InsertChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertChild(int32 Index)"
  },
  {
    "label": "InsertChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertChild(TSharedPtr<FPropertyNode> ChildNodeToInsertAfter)"
  },
  {
    "label": "DuplicateChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateChild(int32 Index)"
  },
  {
    "label": "DuplicateChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateChild(TSharedPtr<FPropertyNode> ChildNodeToDuplicate)"
  },
  {
    "label": "DeleteChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteChild(int32 Index)"
  },
  {
    "label": "DeleteChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteChild(TSharedPtr<FPropertyNode> ChildNodeToDelete)"
  },
  {
    "label": "SwapChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapChildren(int32 FirstIndex, int32 SecondIndex)"
  },
  {
    "label": "SwapChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapChildren(TSharedPtr<FPropertyNode> FirstChildNode, TSharedPtr<FPropertyNode> SecondChildNode)"
  },
  {
    "label": "MoveElementTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveElementTo(int32 OriginalIndex, int32 NewIndex)"
  },
  {
    "label": "HasValidPropertyNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidPropertyNode()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetNotifyHook()",
    "kind": "Method",
    "detail": "Function (FNotifyHook*)",
    "insertText": "GetNotifyHook()"
  },
  {
    "label": "ShowInvalidOperationError()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ShowInvalidOperationError(const FText& ErrorText)"
  },
  {
    "label": "DECLARE_PROPERTY_ACCESSOR()",
    "kind": "Method",
    "detail": "Function (protected : TWeakPtr<FPropertyNode> PropertyNode ; TWeakPtr<IPropertyUtilities> PropertyUtilities ; FNotifyHook* NotifyHook ; bool bInteractiveChangeInProgress ; private : TWeakPtr<class SNotificationItem> InvalidOperationError ; } ; # define)",
    "insertText": "DECLARE_PROPERTY_ACCESSOR(ValueType ) \\ virtual FPropertyAccess::Result SetValue( ValueType const& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (\\ FPropertyAccess::Result)",
    "insertText": "GetValue(ValueType& OutValue)"
  },
  {
    "label": "FPropertyHandleBase()",
    "kind": "Method",
    "detail": "Function (class FDetailCategoryImpl ; class FPropertyHandleBase : public IPropertyHandle { public :)",
    "insertText": "FPropertyHandleBase(TSharedPtr<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "DECLARE_PROPERTY_ACCESSOR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_PROPERTY_ACCESSOR(bool ) DECLARE_PROPERTY_ACCESSOR( int8 ) DECLARE_PROPERTY_ACCESSOR( int16) DECLARE_PROPERTY_ACCESSOR( int32 ) DECLARE_PROPERTY_ACCESSOR( int64 ) DECLARE_PROPERTY_ACCESSOR( uint8 ) DECLARE_PROPERTY_ACCESSOR( uint16 ) DECLARE_PROPERTY_ACCESSOR( uint32 ) DECLARE_PROPERTY_ACCESSOR( uint64 ) DECLARE_PROPERTY_ACCESSOR( float ) DECLARE_PROPERTY_ACCESSOR( double ) DECLARE_PROPERTY_ACCESSOR( FString ) DECLARE_PROPERTY_ACCESSOR( FText ) DECLARE_PROPERTY_ACCESSOR( FName ) DECLARE_PROPERTY_ACCESSOR( FVector ) DECLARE_PROPERTY_ACCESSOR( FVector2D ) DECLARE_PROPERTY_ACCESSOR( FVector4 ) DECLARE_PROPERTY_ACCESSOR( FQuat ) DECLARE_PROPERTY_ACCESSOR( FRotator ) DECLARE_PROPERTY_ACCESSOR( UObject* ) DECLARE_PROPERTY_ACCESSOR( const UObject* ) DECLARE_PROPERTY_ACCESSOR( FAssetData ) DECLARE_PROPERTY_ACCESSOR( FProperty* ) DECLARE_PROPERTY_ACCESSOR( const FProperty* ) virtual FPropertyAccess::Result GetValueData(void*& OutAddress)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const TCHAR* InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "IsValidHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidHandle()"
  },
  {
    "label": "IsSamePropertyNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSamePropertyNode(TSharedPtr<IPropertyHandle> OtherHandle)"
  },
  {
    "label": "GetPropertyDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPropertyDisplayName()"
  },
  {
    "label": "SetPropertyDisplayName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPropertyDisplayName(FText InDisplayName)"
  },
  {
    "label": "MarkHiddenByCustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkHiddenByCustomization()"
  },
  {
    "label": "MarkResetToDefaultCustomized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkResetToDefaultCustomized(bool bCustomized = true)"
  },
  {
    "label": "ClearResetToDefaultCustomized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearResetToDefaultCustomized()"
  },
  {
    "label": "IsCustomized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCustomized()"
  },
  {
    "label": "IsResetToDefaultCustomized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsResetToDefaultCustomized()"
  },
  {
    "label": "GeneratePathToProperty()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GeneratePathToProperty()"
  },
  {
    "label": "CreatePropertyNameWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreatePropertyNameWidget(const FText& NameOverride, const FText& ToolTipOverride, bool bDisplayResetToDefault, bool bDisplayText, bool bDisplayThumbnail)"
  },
  {
    "label": "CreatePropertyNameWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreatePropertyNameWidget(const FText& NameOverride, const FText& ToolTipOverride)"
  },
  {
    "label": "CreatePropertyValueWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreatePropertyValueWidget(bool bDisplayDefaultPropertyButtons = true)"
  },
  {
    "label": "CreatePropertyValueWidgetWithCustomization()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreatePropertyValueWidgetWithCustomization(const IDetailsView* DetailsView)"
  },
  {
    "label": "CreateDefaultPropertyButtonWidgets()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateDefaultPropertyButtonWidgets()"
  },
  {
    "label": "CreateDefaultPropertyCopyPasteActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDefaultPropertyCopyPasteActions(FUIAction& OutCopyAction, FUIAction& OutPasteAction)"
  },
  {
    "label": "IsEditable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditable()"
  },
  {
    "label": "SetOnChildPropertyValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnChildPropertyValueChanged(const FSimpleDelegate& InOnPropertyValueChanged)"
  },
  {
    "label": "SetOnChildPropertyValuePreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnChildPropertyValuePreChange(const FSimpleDelegate& InOnPropertyValuePreChange)"
  },
  {
    "label": "GetIndexInArray()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetIndexInArray()"
  },
  {
    "label": "GetValueAsFormattedString()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValueAsFormattedString(FString& OutValue, EPropertyPortFlags PortFlags = PPF_PropertyWindow)"
  },
  {
    "label": "GetValueAsDisplayString()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValueAsDisplayString(FString& OutValue, EPropertyPortFlags PortFlags = PPF_PropertyWindow)"
  },
  {
    "label": "GetValueAsFormattedText()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValueAsFormattedText(FText& OutValue)"
  },
  {
    "label": "GetValueAsDisplayText()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValueAsDisplayText(FText& OutValue)"
  },
  {
    "label": "SetValueFromFormattedString()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValueFromFormattedString(const FString& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetChildHandle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle>)",
    "insertText": "GetChildHandle(uint32 ChildIndex)"
  },
  {
    "label": "GetChildHandle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle>)",
    "insertText": "GetChildHandle(FName ChildName, bool bRecurse = true)"
  },
  {
    "label": "GetParentHandle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle>)",
    "insertText": "GetParentHandle()"
  },
  {
    "label": "GetKeyHandle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle>)",
    "insertText": "GetKeyHandle()"
  },
  {
    "label": "EnumerateRawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateRawData(const EnumerateRawDataFuncRef& InRawDataCallback)"
  },
  {
    "label": "EnumerateConstRawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateConstRawData(const EnumerateConstRawDataFuncRef& InRawDataCallback)"
  },
  {
    "label": "GetNumOuterObjects()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumOuterObjects()"
  },
  {
    "label": "GetOuterObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOuterObjects(TArray<UObject*>& OuterObjects)"
  },
  {
    "label": "GetOuterStructs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOuterStructs(TArray<TSharedPtr<FStructOnScope>>& OutStructs)"
  },
  {
    "label": "GetOuterBaseClass()",
    "kind": "Method",
    "detail": "Function (const UClass*)",
    "insertText": "GetOuterBaseClass()"
  },
  {
    "label": "ReplaceOuterObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceOuterObjects(const TArray<UObject*>& OuterObjects)"
  },
  {
    "label": "GetOuterPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOuterPackages(TArray<UPackage*>& OuterPackages)"
  },
  {
    "label": "GetNumChildren()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetNumChildren(uint32& OutNumChildren)"
  },
  {
    "label": "AsArray()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandleArray>)",
    "insertText": "AsArray()"
  },
  {
    "label": "GetProperty()",
    "kind": "Method",
    "detail": "Function (FProperty*)",
    "insertText": "GetProperty()"
  },
  {
    "label": "GetMetaDataProperty()",
    "kind": "Method",
    "detail": "Function (FProperty*)",
    "insertText": "GetMetaDataProperty()"
  },
  {
    "label": "HasMetaData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMetaData(const FName& Key)"
  },
  {
    "label": "GetMetaData()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetMetaData(const FName& Key)"
  },
  {
    "label": "GetBoolMetaData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetBoolMetaData(const FName& Key)"
  },
  {
    "label": "GetIntMetaData()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetIntMetaData(const FName& Key)"
  },
  {
    "label": "GetFloatMetaData()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetFloatMetaData(const FName& Key)"
  },
  {
    "label": "GetDoubleMetaData()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetDoubleMetaData(const FName& Key)"
  },
  {
    "label": "GetClassMetaData()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetClassMetaData(const FName& Key)"
  },
  {
    "label": "SetInstanceMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceMetaData(const FName& Key, const FString& Value)"
  },
  {
    "label": "GetInstanceMetaData()",
    "kind": "Method",
    "detail": "Function (const FString*)",
    "insertText": "GetInstanceMetaData(const FName& Key)"
  },
  {
    "label": "GetInstanceMetaDataMap()",
    "kind": "Method",
    "detail": "Function (const TMap<FName,FString>*)",
    "insertText": "GetInstanceMetaDataMap()"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText()"
  },
  {
    "label": "SetToolTipText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToolTipText(const FText& ToolTip)"
  },
  {
    "label": "HasDocumentation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDocumentation()"
  },
  {
    "label": "GetDocumentationExcerptName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetDocumentationExcerptName()"
  },
  {
    "label": "GetValueBaseAddress()",
    "kind": "Method",
    "detail": "Function (} uint8*)",
    "insertText": "GetValueBaseAddress(uint8* Base)"
  },
  {
    "label": "GetNumPerObjectValues()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumPerObjectValues()"
  },
  {
    "label": "SetPerObjectValues()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetPerObjectValues(const TArray<FString>& InPerObjectValues, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetPerObjectValues()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetPerObjectValues(TArray<FString>& OutPerObjectValues)"
  },
  {
    "label": "SetPerObjectValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetPerObjectValue(const int32 ObjectIndex, const FString& ObjectValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetPerObjectValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetPerObjectValue(const int32 ObjectIndex, FString& OutObjectValue)"
  },
  {
    "label": "GeneratePossibleValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GeneratePossibleValues(TArray< TSharedPtr<FString> >& OutOptionStrings, TArray< FText >& OutToolTips, TArray<bool>& OutRestrictedItems)"
  },
  {
    "label": "GeneratePossibleValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GeneratePossibleValues(TArray<FString>& OutOptionStrings, TArray< FText >& OutToolTips, TArray<bool>& OutRestrictedItems, TArray<FText>* OutDisplayNames)"
  },
  {
    "label": "SetObjectValueFromSelection()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetObjectValueFromSelection()"
  },
  {
    "label": "NotifyPreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPreChange()"
  },
  {
    "label": "NotifyPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPostChange(EPropertyChangeType::Type ChangeType)"
  },
  {
    "label": "NotifyFinishedChangingProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyFinishedChangingProperties()"
  },
  {
    "label": "AddRestriction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRestriction(TSharedRef<const FPropertyRestriction> Restriction)"
  },
  {
    "label": "IsHidden()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHidden(const FString& Value)"
  },
  {
    "label": "IsHidden()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHidden(const FString& Value, TArray<FText>& OutReasons)"
  },
  {
    "label": "IsDisabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDisabled(const FString& Value)"
  },
  {
    "label": "IsDisabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDisabled(const FString& Value, TArray<FText>& OutReasons)"
  },
  {
    "label": "IsRestricted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRestricted(const FString& Value)"
  },
  {
    "label": "IsRestricted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRestricted(const FString& Value, TArray<FText>& OutReasons)"
  },
  {
    "label": "GenerateRestrictionToolTip()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateRestrictionToolTip(const FString& Value, FText& OutTooltip)"
  },
  {
    "label": "SetIgnoreValidation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIgnoreValidation(bool bInIgnore)"
  },
  {
    "label": "AddChildStructure()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IPropertyHandle>>)",
    "insertText": "AddChildStructure(TSharedRef<FStructOnScope> ChildStructure)"
  },
  {
    "label": "AddChildStructure()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IPropertyHandle>>)",
    "insertText": "AddChildStructure(TSharedRef<IStructureDataProvider> ChildStructProvider)"
  },
  {
    "label": "CanResetToDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanResetToDefault()"
  },
  {
    "label": "ExecuteCustomResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteCustomResetToDefault(const FResetToDefaultOverride& InOnCustomResetToDefault)"
  },
  {
    "label": "GetDefaultCategoryName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetDefaultCategoryName()"
  },
  {
    "label": "GetDefaultCategoryText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDefaultCategoryText()"
  },
  {
    "label": "GetPropertyPath()",
    "kind": "Method",
    "detail": "Function (FStringView)",
    "insertText": "GetPropertyPath()"
  },
  {
    "label": "CreateFPropertyPath()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyPath>)",
    "insertText": "CreateFPropertyPath()"
  },
  {
    "label": "GetArrayIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetArrayIndex()"
  },
  {
    "label": "RequestRebuildChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRebuildChildren()"
  },
  {
    "label": "IsFavorite()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFavorite()"
  },
  {
    "label": "IsCategoryHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCategoryHandle()"
  },
  {
    "label": "OnCustomResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCustomResetToDefault(const FResetToDefaultOverride& OnCustomResetToDefault)"
  },
  {
    "label": "CopyValueToClipboard()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CopyValueToClipboard(TWeakPtr<FPropertyValueImpl> ImplementationWeak)"
  },
  {
    "label": "PasteValueFromClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteValueFromClipboard(TWeakPtr<FPropertyValueImpl> ImplementationWeak)"
  },
  {
    "label": "FPropertyHandleInt()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<FPropertyValueImpl> Implementation ; } ; class FPropertyHandleInt : public FPropertyHandleBase { public :)",
    "insertText": "FPropertyHandleInt(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports(TSharedRef<FPropertyNode> PropertyNode)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(int8& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const int8& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(int16& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const int16& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(int32& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const int32& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(int64& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const int64& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(uint16& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const uint16& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(uint32& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const uint32& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(uint64& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const uint64& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "FPropertyHandleFloat()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleFloat : public FPropertyHandleBase { public :)",
    "insertText": "FPropertyHandleFloat(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(float& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const float& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "FPropertyHandleDouble()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleDouble : public FPropertyHandleBase { public :)",
    "insertText": "FPropertyHandleDouble(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(double& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const double& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "FPropertyHandleBool()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleBool : public FPropertyHandleBase { public :)",
    "insertText": "FPropertyHandleBool(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(bool& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const bool& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "FPropertyHandleByte()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleByte : public FPropertyHandleBase { public :)",
    "insertText": "FPropertyHandleByte(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(uint8& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const uint8& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "FPropertyHandleString()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleString : public FPropertyHandleBase { public :)",
    "insertText": "FPropertyHandleString(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook,TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FString& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FString& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FName& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FName& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "FPropertyHandleObject()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleObject : public FPropertyHandleBase { public :)",
    "insertText": "FPropertyHandleObject(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(UObject*& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(UObject* const& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(const UObject*& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const UObject* const& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FAssetData& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FAssetData& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetValueFromFormattedString()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValueFromFormattedString(const FString& InValue, EPropertyValueSetFlags::Type Flags, bool bSkipResolve)"
  },
  {
    "label": "FPropertyHandleMixed()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleMixed : public FPropertyHandleBase { public :)",
    "insertText": "FPropertyHandleMixed(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "FPropertyHandleStruct()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleStruct : public FPropertyHandleBase,public IPropertyHandleStruct { public :)",
    "insertText": "FPropertyHandleStruct(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "AsStruct()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandleStruct>)",
    "insertText": "AsStruct()"
  },
  {
    "label": "GetStructData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FStructOnScope>)",
    "insertText": "GetStructData()"
  },
  {
    "label": "FPropertyHandleVector()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleVector : public FPropertyHandleStruct { public :)",
    "insertText": "FPropertyHandleVector(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FVector& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FVector& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FVector2D& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FVector2D& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FVector4& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FVector4& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FQuat& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FQuat& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetX()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetX(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetY()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetY(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetZ()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetZ(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetW()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetW(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "FPropertyHandleRotator()",
    "kind": "Method",
    "detail": "Function (private : TArray<TSharedPtr<FPropertyHandleMixed>> VectorComponents ; } ; class FPropertyHandleRotator : public FPropertyHandleStruct { public :)",
    "insertText": "FPropertyHandleRotator(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FRotator& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FRotator& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetRoll()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetRoll(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetPitch()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetPitch(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetYaw()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetYaw(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "FPropertyHandleColor()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<FPropertyHandleMixed> RollValue ; TSharedPtr<FPropertyHandleMixed> PitchValue ; TSharedPtr<FPropertyHandleMixed> YawValue ; } ; class FPropertyHandleColor : public FPropertyHandleStruct { public :)",
    "insertText": "FPropertyHandleColor(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "FPropertyHandleArray()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleArray : public FPropertyHandleBase,public IPropertyHandleArray { public :)",
    "insertText": "FPropertyHandleArray(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "AddItem()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "AddItem()"
  },
  {
    "label": "EmptyArray()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "EmptyArray()"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "Insert(int32 Index)"
  },
  {
    "label": "DuplicateItem()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "DuplicateItem(int32 Index)"
  },
  {
    "label": "DeleteItem()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "DeleteItem(int32 Index)"
  },
  {
    "label": "SwapItems()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SwapItems(int32 FirstIndex, int32 SecondIndex)"
  },
  {
    "label": "GetNumElements()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetNumElements(uint32& OutNumItems)"
  },
  {
    "label": "SetOnNumElementsChanged()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "SetOnNumElementsChanged(const FSimpleDelegate& InOnNumElementsChanged)"
  },
  {
    "label": "UnregisterOnNumElementsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterOnNumElementsChanged(FDelegateHandle Handle)"
  },
  {
    "label": "GetElement()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IPropertyHandle>)",
    "insertText": "GetElement(int32 Index)"
  },
  {
    "label": "FPropertyHandleOptional()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleOptional : public FPropertyHandleBase,public IPropertyHandleOptional { public :)",
    "insertText": "FPropertyHandleOptional(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetOptionalValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetOptionalValue(FProperty*& OutValue)"
  },
  {
    "label": "SetOptionalValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetOptionalValue(FProperty* NewValue)"
  },
  {
    "label": "ClearOptionalValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "ClearOptionalValue()"
  },
  {
    "label": "AsOptional()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandleOptional>)",
    "insertText": "AsOptional()"
  },
  {
    "label": "FPropertyHandleText()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleText : public FPropertyHandleBase { public :)",
    "insertText": "FPropertyHandleText(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook,TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FText& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FText& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "ImportFormattedTextString()",
    "kind": "Method",
    "detail": "Function (private : FPropertyAccess::Result)",
    "insertText": "ImportFormattedTextString(const FString& InValue, EPropertyValueSetFlags::Type Flags)"
  },
  {
    "label": "FPropertyHandleSet()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleSet : public FPropertyHandleBase,public IPropertyHandleSet { public :)",
    "insertText": "FPropertyHandleSet(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "AsSet()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandleSet>)",
    "insertText": "AsSet()"
  },
  {
    "label": "HasDefaultElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDefaultElement()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "Empty()"
  },
  {
    "label": "GetNumElements()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetNumElements(uint32& OutNumElements)"
  },
  {
    "label": "FPropertyHandleMap()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleMap : public FPropertyHandleBase,public IPropertyHandleMap { public :)",
    "insertText": "FPropertyHandleMap(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "AsMap()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandleMap>)",
    "insertText": "AsMap()"
  },
  {
    "label": "HasDefaultKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDefaultKey()"
  },
  {
    "label": "FPropertyHandleFieldPath()",
    "kind": "Method",
    "detail": "Function (} ; class FPropertyHandleFieldPath : public FPropertyHandleBase { public :)",
    "insertText": "FPropertyHandleFieldPath(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FProperty*& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(FProperty* const& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(const FProperty*& OutValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FProperty* const& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  }
]