[
  {
    "label": "FNotifyHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNotifyHook"
  },
  {
    "label": "FPropertyRestriction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyRestriction"
  },
  {
    "label": "FObjectBaseAddress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectBaseAddress"
  },
  {
    "label": "instance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "instance"
  },
  {
    "label": "FPropertyValueImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyValueImpl"
  },
  {
    "label": "TProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TProperty"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "SNotificationItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNotificationItem"
  },
  {
    "label": "FDetailCategoryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailCategoryImpl"
  },
  {
    "label": "FPropertyHandleBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleBase"
  },
  {
    "label": "FPropertyHandleInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleInt"
  },
  {
    "label": "FPropertyHandleFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleFloat"
  },
  {
    "label": "FPropertyHandleDouble",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleDouble"
  },
  {
    "label": "FPropertyHandleBool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleBool"
  },
  {
    "label": "FPropertyHandleByte",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleByte"
  },
  {
    "label": "FPropertyHandleString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleString"
  },
  {
    "label": "FPropertyHandleObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleObject"
  },
  {
    "label": "FPropertyHandleMixed",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleMixed"
  },
  {
    "label": "FPropertyHandleStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleStruct"
  },
  {
    "label": "FPropertyHandleVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleVector"
  },
  {
    "label": "FPropertyHandleRotator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleRotator"
  },
  {
    "label": "FPropertyHandleColor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleColor"
  },
  {
    "label": "FPropertyHandleArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleArray"
  },
  {
    "label": "FPropertyHandleOptional",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleOptional"
  },
  {
    "label": "FPropertyHandleText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleText"
  },
  {
    "label": "FPropertyHandleSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleSet"
  },
  {
    "label": "FPropertyHandleMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleMap"
  },
  {
    "label": "FPropertyHandleFieldPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyHandleFieldPath"
  },
  {
    "label": "GenerateArrayIndexMapToObjectNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateArrayIndexMapToObjectNode( TMap<FString,int32>& OutArrayIndexMap, FPropertyNode* PropertyNode )"
  },
  {
    "label": "ImportText()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "ImportText( const FString& InValue, EPropertyValueSetFlags::Type Flags )"
  },
  {
    "label": "ImportText()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "ImportText( const FString& InValue, FPropertyNode* PropertyNode, EPropertyValueSetFlags::Type Flags )"
  },
  {
    "label": "ImportText()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "ImportText( const TArray<FObjectBaseAddress>& InObjects, const TArray<FString>& InValues, FPropertyNode* PropertyNode, EPropertyValueSetFlags::Type Flags )"
  },
  {
    "label": "EnumerateRawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateRawData( const IPropertyHandle::EnumerateRawDataFuncRef& InRawDataCallback )"
  },
  {
    "label": "AccessRawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AccessRawData( TArray<void*>& RawData )"
  },
  {
    "label": "SetOnPropertyValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnPropertyValueChanged( const FSimpleDelegate& InOnPropertyValueChanged )"
  },
  {
    "label": "SetOnChildPropertyValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnChildPropertyValueChanged( const FSimpleDelegate& InOnChildPropertyValueChanged )"
  },
  {
    "label": "SetOnPropertyValuePreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnPropertyValuePreChange(const FSimpleDelegate& InOnPropertyValuePreChange)"
  },
  {
    "label": "SetOnChildPropertyValuePreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnChildPropertyValuePreChange(const FSimpleDelegate& InOnChildPropertyValuePreChange)"
  },
  {
    "label": "SetOnPropertyResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnPropertyResetToDefault(const FSimpleDelegate& InOnPropertyResetToDefault)"
  },
  {
    "label": "SetOnRebuildChildren()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "SetOnRebuildChildren( const FSimpleDelegate& InOnRebuildChildren )"
  },
  {
    "label": "UnregisterOnRebuildChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterOnRebuildChildren(FDelegateHandle Handle)"
  },
  {
    "label": "SetValueAsString()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValueAsString( const FString& InValue, EPropertyValueSetFlags::Type Flags )"
  },
  {
    "label": "ResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetToDefault()"
  },
  {
    "label": "SetExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExpanded(bool bExpanded)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddChild()"
  },
  {
    "label": "ClearChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChildren()"
  },
  {
    "label": "InsertChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertChild( int32 Index )"
  },
  {
    "label": "InsertChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertChild( TSharedPtr<FPropertyNode> ChildNodeToInsertAfter )"
  },
  {
    "label": "DuplicateChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateChild( int32 Index )"
  },
  {
    "label": "DuplicateChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateChild( TSharedPtr<FPropertyNode> ChildNodeToDuplicate )"
  },
  {
    "label": "DeleteChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteChild( int32 Index )"
  },
  {
    "label": "DeleteChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteChild( TSharedPtr<FPropertyNode> ChildNodeToDelete )"
  },
  {
    "label": "SwapChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapChildren( int32 FirstIndex, int32 SecondIndex )"
  },
  {
    "label": "SwapChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapChildren( TSharedPtr<FPropertyNode> FirstChildNode, TSharedPtr<FPropertyNode> SecondChildNode )"
  },
  {
    "label": "MoveElementTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveElementTo(int32 OriginalIndex, int32 NewIndex)"
  },
  {
    "label": "ShowInvalidOperationError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInvalidOperationError(const FText& ErrorText)"
  },
  {
    "label": "FPropertyHandleBase()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleBase( TSharedPtr<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString()"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString()"
  },
  {
    "label": "OnCustomResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCustomResetToDefault(const FResetToDefaultOverride& OnCustomResetToDefault)"
  },
  {
    "label": "CopyValueToClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyValueToClipboard(TWeakPtr<FPropertyValueImpl> ImplementationWeak)"
  },
  {
    "label": "PasteValueFromClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteValueFromClipboard(TWeakPtr<FPropertyValueImpl> ImplementationWeak)"
  },
  {
    "label": "FPropertyHandleInt()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleInt( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "FPropertyHandleFloat()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleFloat( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "FPropertyHandleDouble()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleDouble( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "FPropertyHandleBool()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleBool( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "FPropertyHandleByte()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleByte( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "FPropertyHandleString()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleString( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook,TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "FPropertyHandleObject()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleObject( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "SetValueFromFormattedString()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValueFromFormattedString(const FString& InValue, EPropertyValueSetFlags::Type Flags, bool bSkipResolve)"
  },
  {
    "label": "FPropertyHandleMixed()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleMixed(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports(TSharedRef<FPropertyNode> PropertyNode)"
  },
  {
    "label": "FPropertyHandleStruct()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleStruct(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports(TSharedRef<FPropertyNode> PropertyNode)"
  },
  {
    "label": "FPropertyHandleVector()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleVector( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "SetX()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetX(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetY()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetY(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetZ()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetZ(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "SetW()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetW(double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "FPropertyHandleRotator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleRotator( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities  )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "SetRoll()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetRoll( double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags )"
  },
  {
    "label": "SetPitch()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetPitch( double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags )"
  },
  {
    "label": "SetYaw()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetYaw( double InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags )"
  },
  {
    "label": "FPropertyHandleColor()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleColor( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "FPropertyHandleArray()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleArray( TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( TSharedRef<FPropertyNode> PropertyNode )"
  },
  {
    "label": "FPropertyHandleOptional()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleOptional(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports(TSharedRef<FPropertyNode> PropertyNode)"
  },
  {
    "label": "FPropertyHandleText()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleText(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook,TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports(TSharedRef<FPropertyNode> PropertyNode)"
  },
  {
    "label": "ImportFormattedTextString()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "ImportFormattedTextString(const FString& InValue, EPropertyValueSetFlags::Type Flags)"
  },
  {
    "label": "FPropertyHandleSet()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleSet(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports(TSharedRef<FPropertyNode> PropertyNode)"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString(\"Engine/UI/LevelEditor/Details/Properties/Set/\")"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString(\"Sets\")"
  },
  {
    "label": "FPropertyHandleMap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleMap(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports(TSharedRef<FPropertyNode> PropertyNode)"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString(\"Engine/UI/LevelEditor/Details/Properties/Map/\")"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString(\"Maps\")"
  },
  {
    "label": "FPropertyHandleFieldPath()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyHandleFieldPath(TSharedRef<FPropertyNode> PropertyNode, FNotifyHook* NotifyHook, TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports(TSharedRef<FPropertyNode> PropertyNode)"
  }
]