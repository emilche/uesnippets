[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FStreamingInstanceRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamingInstanceRequest"
  },
  {
    "label": "FStreamingInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamingInstance"
  },
  {
    "label": "FStreamingInstanceRequest()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" namespace UE { namespace SVT { enum class EStreamingRequestFlags : uint8 ; struct FStreamingInstanceRequest { uint32 UpdateIndex = 0 ; double Time = 0 . 0 ; float FrameRate = 0 . 0 f ; float FrameIndex = 0 . 0 f ; float MipLevel = 0 . 0 f ; EStreamingRequestFlags Flags = { } ;)",
    "insertText": "FStreamingInstanceRequest()"
  },
  {
    "label": "FStreamingInstanceRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStreamingInstanceRequest(uint32 InUpdateIndex, double InTime, float InFrameRate, float InFrameIndex, float InMipLevel, EStreamingRequestFlags InFlags) : UpdateIndex(InUpdateIndex), Time(InTime), FrameRate(InFrameRate), FrameIndex(InFrameIndex), MipLevel(InMipLevel), Flags(InFlags)"
  },
  {
    "label": "IsBlocking()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsBlocking()"
  },
  {
    "label": "HasValidFrameRate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidFrameRate()"
  },
  {
    "label": "FStreamingInstance()",
    "kind": "Method",
    "detail": "Function (} ; class FStreamingInstance { public :)",
    "insertText": "FStreamingInstance(uint32 Key, int32 NumFrames, const TArrayView<uint32>& MipLevelStreamingSizes, const FStreamingInstanceRequest& Request)"
  },
  {
    "label": "AddRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequest(const FStreamingInstanceRequest& Request)"
  },
  {
    "label": "ComputeLowestMipLevelInBandwidthBudget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeLowestMipLevelInBandwidthBudget(int64 BandwidthBudget)"
  },
  {
    "label": "GetRequestedBandwidth()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetRequestedBandwidth(bool bZeroIfBlocking)"
  },
  {
    "label": "IsFrameInWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFrameInWindow(float FrameIndex)"
  },
  {
    "label": "GetPrefetchMipLevel()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPrefetchMipLevel(float RequestedMipLevel, float Percentage)"
  },
  {
    "label": "GetKey()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetKey()"
  },
  {
    "label": "GetWrappedWeightedAverage()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetWrappedWeightedAverage(float ValueA, float WeightA, float ValueB, float WeightB, int32 NumFrames)"
  },
  {
    "label": "ApplyDiscretization()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "ApplyDiscretization(int64 Value)"
  },
  {
    "label": "GetStreamingSize()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetStreamingSize(float MipLevel)"
  }
]