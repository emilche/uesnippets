[
  {
    "label": "FilePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FilePath"
  },
  {
    "label": "ScopedPathOverride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedPathOverride"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_PATH_SERVICE_H_ # define BASE_PATH_SERVICE_H_ # include \" base / base_export . h \" # include \" base / base_paths . h \" # include \" base / gtest_prod_util . h \" # include \" build / build_config . h \" namespace base { class FilePath ; class ScopedPathOverride ; class BASE_EXPORT PathService { public : bool)",
    "insertText": "Get(int key, FilePath* path)"
  },
  {
    "label": "CheckedGet()",
    "kind": "Method",
    "detail": "Function (FilePath)",
    "insertText": "CheckedGet(int key)"
  },
  {
    "label": "Override()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Override(int key, const FilePath& path)"
  },
  {
    "label": "OverrideAndCreateIfNeeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OverrideAndCreateIfNeeded(int key, const FilePath& path, bool is_absolute, bool create)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "bool(*ProviderFunc)(int, FilePath*)"
  },
  {
    "label": "RegisterProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterProvider(ProviderFunc provider, int key_start, int key_end)"
  },
  {
    "label": "DisableCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableCache()"
  },
  {
    "label": "FRIEND_TEST_ALL_PREFIXES()",
    "kind": "Method",
    "detail": "Function (private : class ScopedPathOverride ;)",
    "insertText": "FRIEND_TEST_ALL_PREFIXES(PathServiceTest, RemoveOverride)"
  },
  {
    "label": "RemoveOverrideForTests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveOverrideForTests(int key)"
  },
  {
    "label": "IsOverriddenForTests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOverriddenForTests(int key)"
  }
]