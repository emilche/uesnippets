[
  {
    "label": "FTaperedCylinderSpecializeSamplingHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTaperedCylinderSpecializeSamplingHelper"
  },
  {
    "label": "FTaperedCylinder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaperedCylinder"
  },
  {
    "label": "FISPCDataVerifier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FISPCDataVerifier"
  },
  {
    "label": "FTaperedCylinderSpecializeSamplingHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTaperedCylinderSpecializeSamplingHelper"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "MakePair()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakePair(Elem.Second, true)"
  },
  {
    "label": "GetArea()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetArea(MHeight, MRadius1, MRadius2, IncludeEndCaps)"
  },
  {
    "label": "GetVolume()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetVolume(MHeight, MRadius1, MRadius2)"
  },
  {
    "label": "GetInertiaTensor()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetInertiaTensor(Mass, MHeight, MRadius1, MRadius2)"
  },
  {
    "label": "FMatrix33()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FMatrix33(Diag12, Diag12, Diag3)"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "HashCombine(PlaneHashes, PropertyHash)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "offsetof(FTaperedCylinder, MPlane1)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(FTaperedCylinder::MPlane1)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "offsetof(FTaperedCylinder, MPlane2)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(FTaperedCylinder::MPlane2)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "offsetof(FTaperedCylinder, MHeight)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(FTaperedCylinder::MHeight)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "offsetof(FTaperedCylinder, MRadius1)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(FTaperedCylinder::MRadius1)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "offsetof(FTaperedCylinder, MRadius2)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(FTaperedCylinder::MRadius2)"
  }
]