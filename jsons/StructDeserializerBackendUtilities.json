[
  {
    "label": "StructDeserializerBackendUtilities",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StructDeserializerBackendUtilities"
  },
  {
    "label": "ClearPropertyValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Class . h \" # include \" UObject / UnrealType . h \" # include \" UObject / EnumProperty . h \" # include \" UObject / TextProperty . h \" struct StructDeserializerBackendUtilities { bool)",
    "insertText": "ClearPropertyValue(FProperty* Property, FProperty* Outer, void* Data, int32 ArrayIndex)"
  },
  {
    "label": "FArrayProperty()",
    "kind": "Method",
    "detail": "Function (FArrayProperty* ArrayProperty = CastField<)",
    "insertText": "FArrayProperty(Outer)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (ArrayIndex = ArrayHelper .)",
    "insertText": "AddValue()"
  },
  {
    "label": "ClearValue_InContainer()",
    "kind": "Method",
    "detail": "Function (} Property ->)",
    "insertText": "ClearValue_InContainer(Data, ArrayIndex)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(ArrayIndex >= Property->ArrayDim)"
  },
  {
    "label": "SetPropertyValue()",
    "kind": "Method",
    "detail": "Function (} template<PropertyType,ValueType> bool)",
    "insertText": "SetPropertyValue(PropertyType* Property, FProperty* Outer, void* Data, int32 ArrayIndex, const ValueType& Value)"
  },
  {
    "label": "SetPropertyValue()",
    "kind": "Method",
    "detail": "Function (Property ->)",
    "insertText": "SetPropertyValue(Ptr, Value)"
  }
]