[
  {
    "label": "FPBDCollisionConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraint"
  },
  {
    "label": "FPBDRigidsEvolutionGBF",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsEvolutionGBF"
  },
  {
    "label": "FCCDConstraint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCCDConstraint"
  },
  {
    "label": "FCCDParticle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCCDParticle"
  },
  {
    "label": "FCCDConstraint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCCDConstraint"
  },
  {
    "label": "FCCDManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCCDManager"
  },
  {
    "label": "FCCDHelpers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCCDHelpers"
  },
  {
    "label": "AddOverlappingDynamicParticle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOverlappingDynamicParticle(FCCDParticle* const InParticle)"
  },
  {
    "label": "AddConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraint(FCCDConstraint* const Constraint)"
  },
  {
    "label": "ApplyCorrections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyCorrections(const FReal Dt)"
  },
  {
    "label": "UpdateParticleSweptConstraints()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateParticleSweptConstraints(FCCDParticle* CCDParticle, const FReal IslandTOI, const FReal Dt)"
  },
  {
    "label": "UpdateSweptConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSweptConstraints(const FReal Dt, Private::FCollisionConstraintAllocator *CollisionAllocator)"
  },
  {
    "label": "OverwriteXUsingV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverwriteXUsingV(const FReal Dt)"
  },
  {
    "label": "AssignParticleIslandsAndGroupParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignParticleIslandsAndGroupParticles()"
  },
  {
    "label": "AssignConstraintIslandsAndRecordConstraintNum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignConstraintIslandsAndRecordConstraintNum()"
  },
  {
    "label": "GroupConstraintsWithIslands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GroupConstraintsWithIslands()"
  },
  {
    "label": "ApplyIslandSweptConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyIslandSweptConstraints(const int32 Island, const FReal Dt)"
  },
  {
    "label": "ApplyIslandSweptConstraints2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyIslandSweptConstraints2(const int32 Island, const FReal Dt)"
  },
  {
    "label": "ResetIslandParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetIslandParticles(const int32 Island)"
  },
  {
    "label": "ResetIslandConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetIslandConstraints(const int32 Island)"
  },
  {
    "label": "ApplyImpulse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyImpulse(FCCDConstraint *CCDConstraint)"
  },
  {
    "label": "GetParticleTransformAtTOI()",
    "kind": "Method",
    "detail": "Function (FRigidTransform3)",
    "insertText": "GetParticleTransformAtTOI(const FGeometryParticleHandle* Particle, const FReal TOI, const FReal Dt)"
  },
  {
    "label": "DeltaExceedsThreshold()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeltaExceedsThreshold(const FVec3& AxisThreshold, const FVec3& DeltaX, const FQuat& R)"
  },
  {
    "label": "DeltaExceedsThreshold()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeltaExceedsThreshold(const FVec3& AxisThreshold, const FVec3& DeltaX, const FQuat& R, FVec3& OutAbsLocalDelta, FVec3& AxisThresholdScaled, FVec3& AxisThresholdDiff)"
  },
  {
    "label": "DeltaExceedsThreshold()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeltaExceedsThreshold(\n\t\t\tconst FVec3& AxisThreshold0, const FVec3& DeltaX0, const FQuat& R0,\n\t\t\tconst FVec3& AxisThreshold1, const FVec3& DeltaX1, const FQuat& R1)"
  },
  {
    "label": "DeltaExceedsThreshold()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeltaExceedsThreshold(const FGeometryParticleHandle& Particle0, const FGeometryParticleHandle& Particle1)"
  },
  {
    "label": "DeltaExceedsThreshold()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeltaExceedsThreshold(const FGeometryParticleHandle& Particle0, const FGeometryParticleHandle& Particle1, const FReal Dt)"
  }
]