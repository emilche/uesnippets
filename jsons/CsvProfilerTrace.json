[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FCsvProfilerTrace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCsvProfilerTrace"
  },
  {
    "label": "CSVPROFILERTRACE_ENABLED()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" HAL / PreprocessorHelpers . h \" # include \" Misc / Build . h \" # include \" ProfilingDebugging / CsvProfilerConfig . h \" # include \" Trace / Config . h \" # ifndef CSVPROFILERTRACE_ENABLED # if UE_TRACE_ENABLED&& ! UE_BUILD_SHIPPING # define)",
    "insertText": "CSVPROFILERTRACE_ENABLED(WITH_ENGINE && CSV_PROFILER_STATS)"
  },
  {
    "label": "OutputRegisterCategory()",
    "kind": "Method",
    "detail": "Function (# if CSVPROFILERTRACE_ENABLED struct FCsvProfilerTrace { void)",
    "insertText": "OutputRegisterCategory(int32 Index, const TCHAR* Name)"
  },
  {
    "label": "OutputInlineStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputInlineStat(const char* StatName, int32 CategoryIndex)"
  },
  {
    "label": "OutputInlineStatExclusive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputInlineStatExclusive(const char* StatName)"
  },
  {
    "label": "OutputDeclaredStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputDeclaredStat(const FName& StatName, int32 CategoryIndex)"
  },
  {
    "label": "OutputBeginStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputBeginStat(const char* StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputBeginStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputBeginStat(const FName& StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputEndStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputEndStat(const char* StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputEndStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputEndStat(const FName& StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputBeginExclusiveStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputBeginExclusiveStat(const char* StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputEndExclusiveStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputEndExclusiveStat(const char* StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputCustomStat(const char* StatName, int32 CategoryIndex, int32 Value, uint8 OpType, uint64 Cycles)"
  },
  {
    "label": "OutputCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputCustomStat(const FName& StatName, int32 CategoryIndex, int32 Value, uint8 OpType, uint64 Cycles)"
  },
  {
    "label": "OutputCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputCustomStat(const char* StatName, int32 CategoryIndex, float Value, uint8 OpType, uint64 Cycles)"
  },
  {
    "label": "OutputCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputCustomStat(const FName& StatName, int32 CategoryIndex, float Value, uint8 OpType, uint64 Cycles)"
  },
  {
    "label": "OutputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputEvent(const TCHAR* Text, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputBeginCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputBeginCapture(const TCHAR* Filename, uint32 RenderThreadId, uint32 RHIThreadId, const char* DefaultWaitStatName, bool bEnableCounts)"
  },
  {
    "label": "OutputEndCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputEndCapture()"
  },
  {
    "label": "OutputMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputMetadata(const TCHAR* Key, const TCHAR* Value)"
  },
  {
    "label": "TRACE_CSV_PROFILER_REGISTER_CATEGORY()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "TRACE_CSV_PROFILER_REGISTER_CATEGORY(Index, Name) \\ FCsvProfilerTrace::OutputRegisterCategory(Index, Name)"
  },
  {
    "label": "TRACE_CSV_PROFILER_INLINE_STAT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_CSV_PROFILER_INLINE_STAT(StatName, CategoryIndex) \\ static bool PREPROCESSOR_JOIN(__CsvProfilerStat, __LINE__)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(!PREPROCESSOR_JOIN(__CsvProfilerStat, __LINE__))"
  },
  {
    "label": "OutputInlineStat()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "OutputInlineStat(StatName, CategoryIndex)"
  },
  {
    "label": "PREPROCESSOR_JOIN()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "PREPROCESSOR_JOIN(__CsvProfilerStat, __LINE__)"
  },
  {
    "label": "TRACE_CSV_PROFILER_INLINE_STAT_EXCLUSIVE()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "TRACE_CSV_PROFILER_INLINE_STAT_EXCLUSIVE(StatName) \\ static bool PREPROCESSOR_JOIN(__CsvProfilerStat, __LINE__)"
  },
  {
    "label": "OutputInlineStatExclusive()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "OutputInlineStatExclusive(StatName)"
  },
  {
    "label": "TRACE_CSV_PROFILER_DECLARED_STAT()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "TRACE_CSV_PROFILER_DECLARED_STAT(StatName, CategoryIndex) \\ FCsvProfilerTrace::OutputDeclaredStat(StatName, CategoryIndex)"
  },
  {
    "label": "TRACE_CSV_PROFILER_BEGIN_STAT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_CSV_PROFILER_BEGIN_STAT(StatName, CategoryIndex, Cycles) \\ FCsvProfilerTrace::OutputBeginStat(StatName, CategoryIndex, Cycles)"
  },
  {
    "label": "TRACE_CSV_PROFILER_END_STAT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_CSV_PROFILER_END_STAT(StatName, CategoryIndex, Cycles) \\ FCsvProfilerTrace::OutputEndStat(StatName, CategoryIndex, Cycles)"
  },
  {
    "label": "TRACE_CSV_PROFILER_BEGIN_EXCLUSIVE_STAT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_CSV_PROFILER_BEGIN_EXCLUSIVE_STAT(StatName, CategoryIndex, Cycles) \\ FCsvProfilerTrace::OutputBeginExclusiveStat(StatName, CategoryIndex, Cycles)"
  },
  {
    "label": "TRACE_CSV_PROFILER_END_EXCLUSIVE_STAT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_CSV_PROFILER_END_EXCLUSIVE_STAT(StatName, CategoryIndex, Cycles) \\ FCsvProfilerTrace::OutputEndExclusiveStat(StatName, CategoryIndex, Cycles)"
  },
  {
    "label": "TRACE_CSV_PROFILER_CUSTOM_STAT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_CSV_PROFILER_CUSTOM_STAT(StatName, CategoryIndex, Value, OpType, Cycles) \\ FCsvProfilerTrace::OutputCustomStat(StatName, CategoryIndex, Value, OpType, Cycles)"
  },
  {
    "label": "TRACE_CSV_PROFILER_EVENT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_CSV_PROFILER_EVENT(Text, CategoryIndex, Cycles) \\ FCsvProfilerTrace::OutputEvent(Text, CategoryIndex, Cycles)"
  },
  {
    "label": "TRACE_CSV_PROFILER_BEGIN_CAPTURE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_CSV_PROFILER_BEGIN_CAPTURE(Filename, RenderThreadId, RHIThreadId, DefaultWaitStatName, EnableCounts) \\ FCsvProfilerTrace::OutputBeginCapture(Filename, RenderThreadId, RHIThreadId, DefaultWaitStatName, EnableCounts)"
  },
  {
    "label": "TRACE_CSV_PROFILER_END_CAPTURE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_CSV_PROFILER_END_CAPTURE() \\ FCsvProfilerTrace::OutputEndCapture()"
  },
  {
    "label": "TRACE_CSV_PROFILER_METADATA()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRACE_CSV_PROFILER_METADATA(Key, Value) \\ FCsvProfilerTrace::OutputMetadata(Key, Value)"
  }
]