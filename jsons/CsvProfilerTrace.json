[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FCsvProfilerTrace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCsvProfilerTrace"
  },
  {
    "label": "OutputRegisterCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputRegisterCategory(int32 Index, const TCHAR* Name)"
  },
  {
    "label": "OutputInlineStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputInlineStat(const char* StatName, int32 CategoryIndex)"
  },
  {
    "label": "OutputInlineStatExclusive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputInlineStatExclusive(const char* StatName)"
  },
  {
    "label": "OutputDeclaredStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputDeclaredStat(const FName& StatName, int32 CategoryIndex)"
  },
  {
    "label": "OutputBeginStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputBeginStat(const char* StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputBeginStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputBeginStat(const FName& StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputEndStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputEndStat(const char* StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputEndStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputEndStat(const FName& StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputBeginExclusiveStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputBeginExclusiveStat(const char* StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputEndExclusiveStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputEndExclusiveStat(const char* StatName, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputCustomStat(const char* StatName, int32 CategoryIndex, int32 Value, uint8 OpType, uint64 Cycles)"
  },
  {
    "label": "OutputCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputCustomStat(const FName& StatName, int32 CategoryIndex, int32 Value, uint8 OpType, uint64 Cycles)"
  },
  {
    "label": "OutputCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputCustomStat(const char* StatName, int32 CategoryIndex, float Value, uint8 OpType, uint64 Cycles)"
  },
  {
    "label": "OutputCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputCustomStat(const FName& StatName, int32 CategoryIndex, float Value, uint8 OpType, uint64 Cycles)"
  },
  {
    "label": "OutputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputEvent(const TCHAR* Text, int32 CategoryIndex, uint64 Cycles)"
  },
  {
    "label": "OutputBeginCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputBeginCapture(const TCHAR* Filename, uint32 RenderThreadId, uint32 RHIThreadId, const char* DefaultWaitStatName, bool bEnableCounts)"
  },
  {
    "label": "OutputEndCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputEndCapture()"
  },
  {
    "label": "OutputMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputMetadata(const TCHAR* Key, const TCHAR* Value)"
  },
  {
    "label": "PREPROCESSOR_JOIN()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PREPROCESSOR_JOIN(__CsvProfilerStat, __LINE__)"
  },
  {
    "label": "PREPROCESSOR_JOIN()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PREPROCESSOR_JOIN(__CsvProfilerStat, __LINE__)"
  }
]