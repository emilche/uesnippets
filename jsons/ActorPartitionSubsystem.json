[
  {
    "label": "FBaseActorPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseActorPartition"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "FActorPartitionGetParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorPartitionGetParams"
  },
  {
    "label": "FActorPartitionIdentifier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorPartitionIdentifier"
  },
  {
    "label": "UActorPartitionSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorPartitionSubsystem"
  },
  {
    "label": "FCellCoord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCellCoord"
  },
  {
    "label": "FActorPartitionGridHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorPartitionGridHelper"
  },
  {
    "label": "FActorPartitionGetParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Subsystems / WorldSubsystem . h \" # include \" Templates / SubclassOf . h \" # include \" Misc / HashBuilder . h \" # include \" Misc / Guid . h \" # include \" ActorPartition / PartitionActor . h \" # include \" ActorPartitionSubsystem . generated . h \" class FBaseActorPartition ; class UWorldPartition ; # if WITH_EDITOR struct FActorPartitionGetParams {)",
    "insertText": "FActorPartitionGetParams(const TSubclassOf<APartitionActor>& InActorClass, bool bInCreate, ULevel* InLevelHint, const FVector& InLocationHint, uint32 InGridSize = 0, const FGuid& InGuidHint = FGuid(), bool bInBoundsSearch = true, TFunctionRef<void(APartitionActor*)> InActorCreated = [](APartitionActor*) {})"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<APartitionActor> ActorClass ; bool bCreate ; FVector LocationHint ; ULevel* LevelHint ; FGuid GuidHint ; int32 GridSize ; bool bBoundsSearch ; TFunctionRef<)",
    "insertText": "void(APartitionActor*)"
  },
  {
    "label": "FActorPartitionIdentifier()",
    "kind": "Method",
    "detail": "Function (} ; struct FActorPartitionIdentifier {)",
    "insertText": "FActorPartitionIdentifier(UClass* InClass, const FGuid& InGridGuid, const uint32& InContextHash) : Class(InClass) , GridGuid(InGridGuid) , ContextHash(InContextHash)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FActorPartitionIdentifier& Other)"
  },
  {
    "label": "GetClass()",
    "kind": "Method",
    "detail": "Function (} const TSubclassOf<APartitionActor>&)",
    "insertText": "GetClass()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API UActorPartitionSubsystem()"
  },
  {
    "label": "FCellCoord()",
    "kind": "Method",
    "detail": "Function (struct FCellCoord {)",
    "insertText": "FCellCoord()"
  },
  {
    "label": "FCellCoord()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCellCoord(int64 InX, int64 InY, int64 InZ, ULevel* InLevel) : X(InX) , Y(InY) , Z(InZ) , Level(InLevel)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} int64 X ; int64 Y ; int64 Z ; ULevel* Level ; bool)",
    "insertText": "operator(const FCellCoord& Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FCellCoord& CellCoord)"
  },
  {
    "label": "PointerHash()",
    "kind": "Method",
    "detail": "Function (FHashBuilder HashBuilder ; HashBuilder<<CellCoord . X<<CellCoord . Y<<CellCoord . Z<<)",
    "insertText": "PointerHash(CellCoord.Level)"
  },
  {
    "label": "GetCellCoord()",
    "kind": "Method",
    "detail": "Function (} FCellCoord)",
    "insertText": "GetCellCoord(FVector InPos, ULevel* InLevel, uint32 InGridSize)"
  },
  {
    "label": "GetCellCoord()",
    "kind": "Method",
    "detail": "Function (} FCellCoord)",
    "insertText": "GetCellCoord(FIntPoint InPos, ULevel* InLevel, uint32 InGridSize)"
  },
  {
    "label": "GridSize()",
    "kind": "Method",
    "detail": "Function (const int64)",
    "insertText": "GridSize(int64)"
  },
  {
    "label": "X()",
    "kind": "Method",
    "detail": "Function (const int64 CellCoordX = InPos .)",
    "insertText": "X(InPos.X - (GridSize - 1))"
  },
  {
    "label": "Y()",
    "kind": "Method",
    "detail": "Function (const int64 CellCoordY = InPos .)",
    "insertText": "Y(InPos.Y - (GridSize - 1))"
  },
  {
    "label": "GetCellBounds()",
    "kind": "Method",
    "detail": "Function (} FBox)",
    "insertText": "GetCellBounds(const FCellCoord& InCellCoord, uint32 InGridSize)"
  },
  {
    "label": "GetActor()",
    "kind": "Method",
    "detail": "Function (} } ; # if WITH_EDITOR APartitionActor*)",
    "insertText": "GetActor(const FActorPartitionGetParams& GetParam)"
  },
  {
    "label": "GetActor()",
    "kind": "Method",
    "detail": "Function (APartitionActor*)",
    "insertText": "GetActor(const TSubclassOf<APartitionActor>& InActorClass, const FCellCoord& InCellCoords, bool bInCreate, const FGuid& InGuid = FGuid(), uint32 InGridSize = 0, bool bInBoundsSearch = true, TFunctionRef<void(APartitionActor*)> InActorCreated = [](APartitionActor*) {})"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSubsystemCollectionBase& Collection)"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "ForEachRelevantActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachRelevantActor(const TSubclassOf<APartitionActor>& InActorClass, const FBox& IntersectionBounds, TFunctionRef<bool(APartitionActor*)>InOperation)"
  },
  {
    "label": "IsLevelPartition()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "IsLevelPartition()"
  },
  {
    "label": "DoesSupportWorldType()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "DoesSupportWorldType(const EWorldType::Type WorldType)"
  },
  {
    "label": "OnActorPartitionHashInvalidated()",
    "kind": "Method",
    "detail": "Function (private : # if WITH_EDITOR void)",
    "insertText": "OnActorPartitionHashInvalidated(const FCellCoord& Hash)"
  },
  {
    "label": "OnWorldPartitionInitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldPartitionInitialized(UWorldPartition* InWorldPartition)"
  },
  {
    "label": "InitializeActorPartition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeActorPartition()"
  },
  {
    "label": "UninitializeActorPartition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UninitializeActorPartition()"
  },
  {
    "label": "FBaseActorPartition()",
    "kind": "Method",
    "detail": "Function (TMap<FCellCoord,TMap<FActorPartitionIdentifier,TWeakObjectPtr<APartitionActor>>> PartitionedActors ; TUniquePtr<FBaseActorPartition> ActorPartition ; FDelegateHandle ActorPartitionHashInvalidatedHandle ; # endif } ; # if WITH_EDITOR class FBaseActorPartition { public :)",
    "insertText": "FBaseActorPartition(UWorld* InWorld) : World(InWorld)"
  },
  {
    "label": "FBaseActorPartition()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FBaseActorPartition()"
  },
  {
    "label": "GetActorPartitionHash()",
    "kind": "Method",
    "detail": "Function (} UActorPartitionSubsystem::FCellCoord)",
    "insertText": "GetActorPartitionHash(const FActorPartitionGetParams& GetParams)"
  },
  {
    "label": "GetActor()",
    "kind": "Method",
    "detail": "Function (APartitionActor*)",
    "insertText": "GetActor(const FActorPartitionIdentifier& InActorPartitionId, bool bInCreate, const UActorPartitionSubsystem::FCellCoord& InCellCoord, uint32 InGridSize, bool bInBoundsSearch, TFunctionRef<void(APartitionActor*)> InActorCreated)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(FBaseActorPartition, FOnActorPartitionHashInvalidated, const UActorPartitionSubsystem::FCellCoord&)"
  },
  {
    "label": "GetOnActorPartitionHashInvalidated()",
    "kind": "Method",
    "detail": "Function (FOnActorPartitionHashInvalidated&)",
    "insertText": "GetOnActorPartitionHashInvalidated()"
  },
  {
    "label": "ForEachIntersectingCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachIntersectingCell(const TSubclassOf<APartitionActor>& InActorClass, const FIntRect& InBounds, ULevel* InLevel, TFunctionRef<bool(const UActorPartitionSubsystem::FCellCoord&, const FIntRect&)> InOperation, uint32 InGridSize = 0)"
  }
]