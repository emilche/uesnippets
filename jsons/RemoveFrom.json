[
  {
    "label": "RemoveFromStart()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / StringFwd . h \" # include \" Misc / CString . h \" namespace UE::String { template<CharType> [ [ nodiscard ] ] TStringView<CharType>)",
    "insertText": "RemoveFromStart(const TStringView<CharType> View, const TStringView<CharType> Prefix, ESearchCase::Type SearchCase = ESearchCase::CaseSensitive)"
  },
  {
    "label": "RemoveFromEnd()",
    "kind": "Method",
    "detail": "Function (} template<CharType> [ [ nodiscard ] ] TStringView<CharType>)",
    "insertText": "RemoveFromEnd(const TStringView<CharType> View, const TStringView<CharType> Prefix, ESearchCase::Type SearchCase = ESearchCase::CaseSensitive)"
  }
]