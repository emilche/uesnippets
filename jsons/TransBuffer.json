[
  {
    "label": "UTransBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTransBuffer"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Editor / Transactor . h \" # include \" TransBuffer . generated . h \")",
    "insertText": "UCLASS(transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (int32 UndoCount ; FText ResetReason ; int32 ActiveCount ; TArray<int32> ActiveRecordCounts ; SIZE_T MaxMemory ; TArray<int32> UndoBarrierStack ; public : void)",
    "insertText": "Initialize(SIZE_T InMaxMemory)"
  },
  {
    "label": "CheckState()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "CheckState()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "FinishDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishDestroy()"
  },
  {
    "label": "OnObjectsReinstanced()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnObjectsReinstanced(const TMap<UObject*, UObject*>& OldToNewInstances)"
  },
  {
    "label": "BeginInternal()",
    "kind": "Method",
    "detail": "Function (template<TTransaction> int32)",
    "insertText": "BeginInternal(const TCHAR* SessionContext, const FText& Description)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Result = ActiveCount ;)",
    "insertText": "if(ActiveCount++ == 0)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (RemovedTransactions .)",
    "insertText": "Reserve(UndoCount)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (RemovedTransactions .)",
    "insertText": "Add(UndoBuffer[i])"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (} UndoBuffer .)",
    "insertText": "RemoveAt(UndoBuffer.Num() - UndoCount, UndoCount, EAllowShrinking::No)"
  },
  {
    "label": "GetUndoSize()",
    "kind": "Method",
    "detail": "Function (} else { int32 TransactionsToRemove = 0 ; SIZE_T AccumulatedBufferDataSize =)",
    "insertText": "GetUndoSize()"
  },
  {
    "label": "DataSize()",
    "kind": "Method",
    "detail": "Function (AccumulatedBufferDataSize - = UndoBuffer [ i ] ->)",
    "insertText": "DataSize()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + TransactionsToRemove ; } } })",
    "insertText": "if(TransactionsToRemove > 0)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (RemovedTransactions .)",
    "insertText": "Reserve(TransactionsToRemove)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (} UndoBuffer .)",
    "insertText": "RemoveAt(0, TransactionsToRemove, EAllowShrinking::No)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (} } PreviousUndoCount = UndoCount ; UndoCount = 0 ; UndoBuffer .)",
    "insertText": "Emplace(MakeShareable(new TTransaction(SessionContext, Description, 1)))"
  },
  {
    "label": "Last()",
    "kind": "Method",
    "detail": "Function (GUndo =& UndoBuffer .)",
    "insertText": "Last().Get()"
  },
  {
    "label": "BeginOperation()",
    "kind": "Method",
    "detail": "Function (GUndo ->)",
    "insertText": "BeginOperation()"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (TransactionStateChangedDelegate .)",
    "insertText": "Broadcast(GUndo->GetContext(), ETransactionStateEventType::TransactionStarted)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (UndoBufferChangedDelegate .)",
    "insertText": "Broadcast()"
  },
  {
    "label": "PriorRecordsCount()",
    "kind": "Method",
    "detail": "Function (} const int32)",
    "insertText": "PriorRecordsCount(Result > 0 ? ActiveRecordCounts[Result - 1] : 0)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ActiveRecordCounts .)",
    "insertText": "Add(UndoBuffer.Last()->GetRecordCount() - PriorRecordsCount)"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (} return Result ; } public : int32)",
    "insertText": "Begin(const TCHAR* SessionContext, const FText& Description)"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "End()"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel(int32 StartIndex = 0)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(const FText& Reason)"
  },
  {
    "label": "CanUndo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUndo(FText* Text=NULL)"
  },
  {
    "label": "CanRedo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRedo(FText* Text=NULL)"
  },
  {
    "label": "GetQueueLength()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetQueueLength()"
  },
  {
    "label": "FindTransactionIndex()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "FindTransactionIndex(const FGuid& TransactionId)"
  },
  {
    "label": "GetTransaction()",
    "kind": "Method",
    "detail": "Function (const FTransaction*)",
    "insertText": "GetTransaction(int32 QueueIndex)"
  },
  {
    "label": "GetUndoContext()",
    "kind": "Method",
    "detail": "Function (FTransactionContext)",
    "insertText": "GetUndoContext(bool bCheckWhetherUndoPossible = true)"
  },
  {
    "label": "GetUndoCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetUndoCount()"
  },
  {
    "label": "SetUndoBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUndoBarrier()"
  },
  {
    "label": "RemoveUndoBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUndoBarrier()"
  },
  {
    "label": "ClearUndoBarriers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearUndoBarriers()"
  },
  {
    "label": "GetCurrentUndoBarrier()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCurrentUndoBarrier()"
  },
  {
    "label": "Undo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Undo(bool bCanRedo = true)"
  },
  {
    "label": "Redo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Redo()"
  },
  {
    "label": "EnableObjectSerialization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnableObjectSerialization()"
  },
  {
    "label": "DisableObjectSerialization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisableObjectSerialization()"
  },
  {
    "label": "IsObjectSerializationEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsObjectSerializationEnabled()"
  },
  {
    "label": "IsObjectInTransactionBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsObjectInTransactionBuffer(const UObject* Object)"
  },
  {
    "label": "IsObjectTransacting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsObjectTransacting(const UObject* Object)"
  },
  {
    "label": "ContainsPieObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsPieObjects()"
  },
  {
    "label": "IsActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActive()"
  }
]