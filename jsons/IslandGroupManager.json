[
  {
    "label": "FPBDConstraintContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDConstraintContainer"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "EPerIslandStat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPerIslandStat"
  },
  {
    "label": "must",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "must"
  },
  {
    "label": "FPBDIslandGroupManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandGroupManager"
  },
  {
    "label": "FIslandGroupRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIslandGroupRange"
  },
  {
    "label": "moved",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "moved"
  },
  {
    "label": "FPBDIslandGroupManager()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDIslandGroupManager(FPBDIslandManager& InIslandManager)"
  },
  {
    "label": "AddConstraintContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraintContainer(FPBDConstraintContainer& ConstraintContainer, const int32 Priority = 0)"
  },
  {
    "label": "RemoveConstraintContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveConstraintContainer(FPBDConstraintContainer& ConstraintContainer)"
  },
  {
    "label": "SetConstraintContainerPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConstraintContainerPriority(const int32 ContainerId, const int32 Priority)"
  },
  {
    "label": "BuildGroups()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "BuildGroups(const bool bIsResimming)"
  },
  {
    "label": "SetIterationSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIterationSettings(const FIterationSettings& InIterations)"
  },
  {
    "label": "Solve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Solve(const FReal Dt)"
  },
  {
    "label": "SolveSerial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolveSerial(const FReal Dt)"
  },
  {
    "label": "SolveParallelFor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolveParallelFor(const FReal Dt)"
  },
  {
    "label": "SolveParallelTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolveParallelTasks(const FReal Dt)"
  },
  {
    "label": "BuildGatherBatches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildGatherBatches(TArray<FIslandGroupRange>& BodyRanges, TArray<FIslandGroupRange>& ConstraintRanges)"
  },
  {
    "label": "SolveGroupConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolveGroupConstraints(const int32 GroupIndex, const FReal Dt)"
  }
]