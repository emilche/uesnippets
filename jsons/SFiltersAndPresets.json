[
  {
    "label": "FGroupOrStatNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGroupOrStatNode"
  },
  {
    "label": "FProfilerSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerSession"
  },
  {
    "label": "FGroupOrStatNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGroupOrStatNode"
  },
  {
    "label": "FGroupOrStatNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGroupOrStatNode"
  },
  {
    "label": "FGroupOrStatNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGroupOrStatNode"
  },
  {
    "label": "FGroupOrStatNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGroupOrStatNode"
  },
  {
    "label": "EStatGroupingOrSortingMode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EStatGroupingOrSortingMode"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "type"
  },
  {
    "label": "FGroupOrStatNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGroupOrStatNode"
  },
  {
    "label": "instance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "instance"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FGroupAndStatSorting",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGroupAndStatSorting"
  },
  {
    "label": "ByStatName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ByStatName"
  },
  {
    "label": "ByGroupName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ByGroupName"
  },
  {
    "label": "ByStatType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ByStatType"
  },
  {
    "label": "SFiltersAndPresets",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFiltersAndPresets"
  },
  {
    "label": "ToName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ToName( const Type StatGroupingOrSortingMode )"
  },
  {
    "label": "ToDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ToDescription( const Type StatGroupingOrSortingMode )"
  },
  {
    "label": "ToBrushName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "ToBrushName( const Type StatGroupingOrSortingMode )"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "ProfilerManager_OnRequestFilterAndPresetsUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerManager_OnRequestFilterAndPresetsUpdate()"
  },
  {
    "label": "UpdateGroupAndStatTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGroupAndStatTree( const TSharedPtr<FProfilerSession> InProfilerSession )"
  },
  {
    "label": "CreateGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGroups()"
  },
  {
    "label": "SortStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortStats()"
  },
  {
    "label": "ApplyFiltering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyFiltering()"
  },
  {
    "label": "CreateGroupByOptionsSources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGroupByOptionsSources()"
  },
  {
    "label": "RecreateSortByOptionsSources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecreateSortByOptionsSources()"
  },
  {
    "label": "GetToggleButtonForStatType()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetToggleButtonForStatType( const EProfilerSampleTypes::Type StatType )"
  },
  {
    "label": "FilterByStatType_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterByStatType_OnCheckStateChanged( ECheckBoxState NewRadioState, const EProfilerSampleTypes::Type InStatType )"
  },
  {
    "label": "GroupAndStatTree_OnGetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GroupAndStatTree_OnGetChildren( FGroupOrStatNodePtr InParent, TArray< FGroupOrStatNodePtr >& out_Children )"
  },
  {
    "label": "GroupAndStatTree_OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GroupAndStatTree_OnMouseButtonDoubleClick( FGroupOrStatNodePtr TreeNode )"
  },
  {
    "label": "SearchBox_OnTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SearchBox_OnTextChanged( const FText& InFilterText )"
  },
  {
    "label": "GroupBy_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GroupBy_OnSelectionChanged( TSharedPtr<EStatGroupingOrSortingMode::Type> NewGroupingMode, ESelectInfo::Type SelectInfo )"
  },
  {
    "label": "SortBy_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortBy_OnSelectionChanged( TSharedPtr<EStatGroupingOrSortingMode::Type> NewSortingMode, ESelectInfo::Type SelectInfo )"
  }
]