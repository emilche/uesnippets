[
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FPreviewMeshCollectionEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreviewMeshCollectionEntry"
  },
  {
    "label": "UPreviewMeshCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPreviewMeshCollection"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Animation / AnimBlueprint . h \" # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / SkeletalMesh . h \" # include \" Engine / DataAsset . h \" # include \" Animation / PreviewCollectionInterface . h \" # include \" PreviewMeshCollection . generated . h \" class USkeleton ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FPreviewMeshCollectionEntry()"
  },
  {
    "label": "FPreviewMeshCollectionEntry()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPreviewMeshCollectionEntry(USkeletalMesh* InMesh) : SkeletalMesh(InMesh)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FPreviewMeshCollectionEntry& InEntry)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI, BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UPROPERTY(VisibleAnywhere, Category = \"Skeleton\", AssetRegistrySearchable)"
  },
  {
    "label": "GetPreviewSkeletalMeshes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPreviewSkeletalMeshes(TArray<USkeletalMesh*>& OutList, TArray<TSubclassOf<UAnimInstance>>& OutAnimBP)"
  }
]