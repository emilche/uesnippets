[
  {
    "label": "FFormatArgsHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFormatArgsHelper"
  },
  {
    "label": "FFormatArgSpec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFormatArgSpec"
  },
  {
    "label": "FFormatArgsStreamContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFormatArgsStreamContext"
  },
  {
    "label": "Format()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" namespace TraceServices { struct FFormatArgsHelper { void)",
    "insertText": "Format(TCHAR* Out, uint64 MaxOut, TCHAR* Temp, uint64 MaxTemp, const TCHAR* FormatString, const uint8* FormatArgs)"
  },
  {
    "label": "ExtractNextFormatArg()",
    "kind": "Method",
    "detail": "Function (private : struct FFormatArgSpec { int32 PassthroughLength ; TCHAR FormatString [ 2 5 5 ] ; uint8 ExpectedTypeCategory ; uint8 AdditionalIntegerArgumentCount ; bool Valid ; bool NothingPrinted ; } ; struct FFormatArgsStreamContext { uint8 ArgumentCount ; uint8 ArgumentTypeCategory ; uint8 ArgumentTypeSize ; const uint8* DescriptorPtr ; const uint8* PayloadPtr ; } ; const TCHAR*)",
    "insertText": "ExtractNextFormatArg(const TCHAR* FormatString, FFormatArgSpec& Spec)"
  },
  {
    "label": "InitArgumentStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitArgumentStream(FFormatArgsStreamContext& Context, const uint8* ArgumentsData)"
  },
  {
    "label": "AdvanceArgumentStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AdvanceArgumentStream(FFormatArgsStreamContext& Context)"
  },
  {
    "label": "ExtractIntegerArgument()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "ExtractIntegerArgument(FFormatArgsStreamContext& ArgStream)"
  },
  {
    "label": "ExtractFloatingPointArgument()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "ExtractFloatingPointArgument(FFormatArgsStreamContext& ArgStream)"
  },
  {
    "label": "ExtractStringArgument()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "ExtractStringArgument(FFormatArgsStreamContext& ArgStream, TCHAR* Temp, int32 MaxTemp)"
  },
  {
    "label": "FormatArgument()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FormatArgument(TCHAR* Out, int32 MaxOut, TCHAR* Temp, int32 MaxTemp, const FFormatArgSpec& ArgSpec, FFormatArgsStreamContext& ArgStream)"
  }
]