[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FUpdateTransformCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateTransformCommand"
  },
  {
    "label": "FUpdateInstanceCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateInstanceCommand"
  },
  {
    "label": "FUpdateInstanceFromComputeCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateInstanceFromComputeCommand"
  },
  {
    "label": "TSingleValuePrimitiveUpdatePayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TSingleValuePrimitiveUpdatePayload"
  },
  {
    "label": "FScenePreUpdateChangeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScenePreUpdateChangeSet"
  },
  {
    "label": "FScenePostUpdateChangeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScenePostUpdateChangeSet"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" SceneUpdateCommandQueue . h \" # include \" PrimitiveSceneInfo . h \" enum class EPrimitiveUpdateDirtyFlags : uint32 { None = 0 u,Transform = 1 u<<0,InstanceData = 1 u<<1,CullingBounds = 1 u<<2,CullingLogic = 1 u<<3,GPUState = 1 u<<4,AllCulling = CullingBounds | CullingLogic,All = GPUState | Transform | InstanceData | CullingBounds | CullingLogic,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EPrimitiveUpdateDirtyFlags)"
  },
  {
    "label": "TSingleValuePrimitiveUpdatePayload()",
    "kind": "Method",
    "detail": "Function (enum class EPrimitiveUpdateId : uint32 { UpdateTransform,UpdateInstance,UpdateAttachmentRoot,CustomPrimitiveData,OcclusionBoundsSlacks,InstanceCullDistance,DrawDistance,DistanceFieldScene,OverridePreviousTransform,UpdateInstanceFromCompute,MAX } ; using FScenePrimitiveUpdates = TSceneUpdateCommandQueue<FPrimitiveSceneInfo,EPrimitiveUpdateDirtyFlags,EPrimitiveUpdateId> ; using FPrimitiveUpdateCommand = FScenePrimitiveUpdates::FUpdateCommand ; template<EPrimitiveUpdateId InId,EPrimitiveUpdateDirtyFlags InDirtyFlags> using TPrimitiveUpdatePayloadBase = FScenePrimitiveUpdates::TPayloadBase<InId,InDirtyFlags> ; struct FUpdateTransformCommand : public TPrimitiveUpdatePayloadBase<EPrimitiveUpdateId::UpdateTransform,EPrimitiveUpdateDirtyFlags::GPUState | EPrimitiveUpdateDirtyFlags::Transform | EPrimitiveUpdateDirtyFlags::CullingBounds> { FBoxSphereBounds WorldBounds ; FBoxSphereBounds LocalBounds ; FMatrix LocalToWorld ; FVector AttachmentRootPosition ; } ; struct FUpdateInstanceCommand : public TPrimitiveUpdatePayloadBase<EPrimitiveUpdateId::UpdateInstance,EPrimitiveUpdateDirtyFlags::GPUState | EPrimitiveUpdateDirtyFlags::Transform | EPrimitiveUpdateDirtyFlags::CullingBounds | EPrimitiveUpdateDirtyFlags::InstanceData> { FPrimitiveSceneProxy* PrimitiveSceneProxy { nullptr } ; FBoxSphereBounds WorldBounds ; FBoxSphereBounds LocalBounds ; FBoxSphereBounds StaticMeshBounds ; } ; struct FUpdateInstanceFromComputeCommand : public TPrimitiveUpdatePayloadBase<EPrimitiveUpdateId::UpdateInstanceFromCompute,EPrimitiveUpdateDirtyFlags::CullingBounds | EPrimitiveUpdateDirtyFlags::InstanceData> { FPrimitiveSceneProxy* PrimitiveSceneProxy { nullptr } ; FGPUSceneWriteDelegate GPUSceneWriter ; } ; template<InPayloadDataType,EPrimitiveUpdateId InId,EPrimitiveUpdateDirtyFlags InPrimitiveDirtyFlags> struct TSingleValuePrimitiveUpdatePayload : public TPrimitiveUpdatePayloadBase<InId,InPrimitiveDirtyFlags> {)",
    "insertText": "TSingleValuePrimitiveUpdatePayload(const InPayloadDataType &InValue) : Value(InValue)"
  }
]