[
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "FQueuedThreadPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueuedThreadPool"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAnimCompressContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimCompressContext"
  },
  {
    "label": "FAnimSequenceDecompressionContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimSequenceDecompressionContext"
  },
  {
    "label": "FCompactPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactPose"
  },
  {
    "label": "FAnimSequenceCompilingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimSequenceCompilingManager"
  },
  {
    "label": "FScopedCompressionGuard",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedCompressionGuard"
  },
  {
    "label": "FAnimationSequenceAsyncCacheTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationSequenceAsyncCacheTask"
  },
  {
    "label": "FDecompressionTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDecompressionTools"
  },
  {
    "label": "FAnimSequenceTrackContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimSequenceTrackContainer"
  },
  {
    "label": "FRawAnimSequenceTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRawAnimSequenceTrack"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FTranslationTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTranslationTrack"
  },
  {
    "label": "FRotationTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRotationTrack"
  },
  {
    "label": "FScaleTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScaleTrack"
  },
  {
    "label": "FCurveTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveTrack"
  },
  {
    "label": "FCompressedTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompressedTrack"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "FRequestAnimCompressionParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRequestAnimCompressionParams"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "FRawAnimSequenceTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRawAnimSequenceTrack"
  },
  {
    "label": "FRawAnimSequenceTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRawAnimSequenceTrack"
  },
  {
    "label": "UAnimBoneCompressionSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBoneCompressionSettings"
  },
  {
    "label": "UAnimCurveCompressionSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCurveCompressionSettings"
  },
  {
    "label": "UVariableFrameStrippingSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVariableFrameStrippingSettings"
  },
  {
    "label": "EAdditiveAnimationType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAdditiveAnimationType"
  },
  {
    "label": "type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "type"
  },
  {
    "label": "EAdditiveBasePoseType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAdditiveBasePoseType"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UAssetImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetImportData"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FDataValidationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataValidationContext"
  },
  {
    "label": "FAnimNotifyQueue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyQueue"
  },
  {
    "label": "FAnimationPoseData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationPoseData"
  },
  {
    "label": "FSmartName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSmartName"
  },
  {
    "label": "FSmartName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSmartName"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "FScopedAnimSequenceRawDataCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedAnimSequenceRawDataCache"
  },
  {
    "label": "UAnimationBlueprintLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationBlueprintLibrary"
  },
  {
    "label": "UAnimBoneCompressionSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBoneCompressionSettings"
  },
  {
    "label": "FCustomAttributeCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCustomAttributeCustomization"
  },
  {
    "label": "FAnimSequenceDeterminismHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimSequenceDeterminismHelper"
  },
  {
    "label": "FAnimSequenceTestBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimSequenceTestBase"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE"
  },
  {
    "label": "FAnimDataControllerTestBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimDataControllerTestBase"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "FAnimSequenceDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimSequenceDetails"
  },
  {
    "label": "IsValidCurveTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidCurveTrack()"
  },
  {
    "label": "CompressCurveWeights()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompressCurveWeights()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* This, FReferenceCollector& Collector)"
  },
  {
    "label": "UpdateCompressedCurveName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCompressedCurveName(const FName& OldCurveName, const FName& NewCurveName)"
  },
  {
    "label": "SetRetargetSourceAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRetargetSourceAsset(USkeletalMesh* InRetargetSourceAsset)"
  },
  {
    "label": "ClearRetargetSourceAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearRetargetSourceAsset()"
  },
  {
    "label": "UpdateRetargetSourceAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRetargetSourceAssetData()"
  },
  {
    "label": "UpdateFrameRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFrameRate()"
  },
  {
    "label": "WaitOnExistingCompression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitOnExistingCompression(const bool bWantResults=true)"
  },
  {
    "label": "RequestSyncAnimRecompression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSyncAnimRecompression(bool bOutput = false)"
  },
  {
    "label": "RequestAsyncAnimRecompression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestAsyncAnimRecompression(bool bOutput = false)"
  },
  {
    "label": "ClearCompressedBoneData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCompressedBoneData()"
  },
  {
    "label": "ClearCompressedCurveData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCompressedCurveData()"
  },
  {
    "label": "SerializeCompressedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeCompressedData(FArchive& Ar, bool bDDCData)"
  },
  {
    "label": "AddKeyToSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddKeyToSequence(float Time, const FName& BoneName, const FTransform& AdditiveTransform)"
  },
  {
    "label": "CreateAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateAnimation(class USkeletalMesh* Mesh)"
  },
  {
    "label": "CreateAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateAnimation(class USkeletalMeshComponent* MeshComponent)"
  },
  {
    "label": "CreateAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateAnimation(class UAnimSequence* Sequence)"
  },
  {
    "label": "SortSyncMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortSyncMarkers()"
  },
  {
    "label": "RemoveSyncMarkers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveSyncMarkers(const TArray<FName>& MarkersToRemove)"
  },
  {
    "label": "RenameSyncMarkers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameSyncMarkers(FName InOldName, FName InNewName)"
  },
  {
    "label": "ResetAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAnimation()"
  },
  {
    "label": "RefreshSyncMarkerDataFromAuthored()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSyncMarkerDataFromAuthored()"
  },
  {
    "label": "AddBoneFloatCustomAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBoneFloatCustomAttribute(const FName& BoneName, const FName& AttributeName, const TArray<float>& TimeKeys, const TArray<float>& ValueKeys)"
  },
  {
    "label": "AddBoneIntegerCustomAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBoneIntegerCustomAttribute(const FName& BoneName, const FName& AttributeName, const TArray<float>& TimeKeys, const TArray<int32>& ValueKeys)"
  },
  {
    "label": "AddBoneStringCustomAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBoneStringCustomAttribute(const FName& BoneName, const FName& AttributeName, const TArray<float>& TimeKeys, const TArray<FString>& ValueKeys)"
  },
  {
    "label": "RemoveCustomAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCustomAttribute(const FName& BoneName, const FName& AttributeName)"
  },
  {
    "label": "RemoveAllCustomAttributesForBone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllCustomAttributesForBone(const FName& BoneName)"
  },
  {
    "label": "RemoveAllCustomAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllCustomAttributes()"
  },
  {
    "label": "SynchronousAnimatedBoneAttributesCompression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SynchronousAnimatedBoneAttributesCompression()"
  },
  {
    "label": "MoveAttributesToModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveAttributesToModel()"
  },
  {
    "label": "EnsureValidRawDataGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureValidRawDataGuid()"
  },
  {
    "label": "RecompressAnimationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecompressAnimationData()"
  },
  {
    "label": "CalculateNumberOfSampledKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateNumberOfSampledKeys()"
  },
  {
    "label": "DeleteBoneAnimationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteBoneAnimationData()"
  },
  {
    "label": "DeleteDeprecatedRawAnimationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteDeprecatedRawAnimationData()"
  },
  {
    "label": "DeleteNotifyTrackData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteNotifyTrackData()"
  },
  {
    "label": "CreateDerivedDataKeyHash()",
    "kind": "Method",
    "detail": "Function (FIoHash)",
    "insertText": "CreateDerivedDataKeyHash(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "CreateDerivedDataKeyString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "CreateDerivedDataKeyString(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "BeginCacheDerivedData()",
    "kind": "Method",
    "detail": "Function (FIoHash)",
    "insertText": "BeginCacheDerivedData(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "EndCacheDerivedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndCacheDerivedData(const FIoHash& KeyHash)"
  },
  {
    "label": "TryCancelAsyncTasks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCancelAsyncTasks()"
  },
  {
    "label": "WaitForAsyncTasks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitForAsyncTasks(float TimeLimitSeconds)"
  },
  {
    "label": "FinishAsyncTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishAsyncTasks()"
  },
  {
    "label": "Reschedule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reschedule(FQueuedThreadPool* InThreadPool, EQueuedWorkPriority InPriority)"
  },
  {
    "label": "BeginCacheDerivedDataForCurrentPlatform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCacheDerivedDataForCurrentPlatform()"
  },
  {
    "label": "CacheDerivedDataForCurrentPlatform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheDerivedDataForCurrentPlatform()"
  }
]