[
  {
    "label": "x",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "x"
  },
  {
    "label": "tagRGBQUAD",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagRGBQUAD"
  },
  {
    "label": "tagRGBTRIPLE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagRGBTRIPLE"
  },
  {
    "label": "tagBITMAPINFOHEADER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagBITMAPINFOHEADER"
  },
  {
    "label": "tagBITMAPINFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagBITMAPINFO"
  },
  {
    "label": "tagFIRGB16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagFIRGB16"
  },
  {
    "label": "tagFIRGBA16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagFIRGBA16"
  },
  {
    "label": "tagFIRGBF",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagFIRGBF"
  },
  {
    "label": "tagFIRGBAF",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagFIRGBAF"
  },
  {
    "label": "tagFICOMPLEX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagFICOMPLEX"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef FREEIMAGE_H # define FREEIMAGE_H # define FREEIMAGE_MAJOR_VERSION 3 # define FREEIMAGE_MINOR_VERSION 1 8 # define FREEIMAGE_RELEASE_SERIAL 0 # include<wchar . h> # if)",
    "insertText": "defined(FREEIMAGE_LIB) #define DLL_API #define DLL_CALLCONV #else #if defined(_WIN32) || defined(__WIN32__) #define DLL_CALLCONV __stdcall #ifdef FREEIMAGE_EXPORTS #define DLL_API __declspec(dllexport) #else #define DLL_API __declspec(dllimport) #endif #else #if defined(__GNUC__) && ((__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)) #ifndef GCC_HASCLASSVISIBILITY #define GCC_HASCLASSVISIBILITY #endif #endif #define DLL_CALLCONV #if defined(GCC_HASCLASSVISIBILITY) #define DLL_API __attribute__ ((visibility(\"default\"))) #else #define DLL_API #endif #endif #endif #if (!defined(FREEIMAGE_BIGENDIAN) && !defined(FREEIMAGE_LITTLEENDIAN)) #if (defined(BYTE_ORDER) && BYTE_ORDER==BIG_ENDIAN) || (defined(__BYTE_ORDER) && __BYTE_ORDER==__BIG_ENDIAN) || (defined(__BYTE_ORDER) && __BYTE_ORDER==__ORDER_BIG_ENDIAN__) || defined(__BIG_ENDIAN__) #define FREEIMAGE_BIGENDIAN #endif #endif #define FREEIMAGE_COLORORDER_BGR 0 #define FREEIMAGE_COLORORDER_RGB 1 #if (!defined(FREEIMAGE_COLORORDER)) || ((FREEIMAGE_COLORORDER != FREEIMAGE_COLORORDER_BGR) && (FREEIMAGE_COLORORDER != FREEIMAGE_COLORORDER_RGB)) #if defined(FREEIMAGE_BIGENDIAN) #define FREEIMAGE_COLORORDER FREEIMAGE_COLORORDER_RGB #else #define FREEIMAGE_COLORORDER FREEIMAGE_COLORORDER_BGR #endif #endif #if defined(__BORLANDC__) #pragma option push -b #endif #ifdef __cplusplus #define FI_DEFAULT(x) = x #define FI_ENUM(x) enum x #define FI_STRUCT(x) struct x #else #define FI_DEFAULT(x) #define FI_ENUM(x)"
  },
  {
    "label": "FI_STRUCT()",
    "kind": "Method",
    "detail": "Function (enum x # define)",
    "insertText": "FI_STRUCT(x)"
  },
  {
    "label": "FI_STRUCT()",
    "kind": "Method",
    "detail": "Function (struct x # endif)",
    "insertText": "FI_STRUCT(FIBITMAP)"
  },
  {
    "label": "FI_STRUCT()",
    "kind": "Method",
    "detail": "Function (void* data ; } ;)",
    "insertText": "FI_STRUCT(FIMULTIBITMAP)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (void* data ; } ; # if)",
    "insertText": "defined(__MINGW32__) && defined(_WINDOWS_H)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif typedef uint8_t BYTE ; typedef uint16_t WORD ; typedef uint32_t DWORD ; typedef int32_t LONG ; typedef int64_t INT64 ; typedef uint64_t UINT64 ; # else typedef long BOOL ; typedef unsigned char BYTE ; typedef unsigned short WORD ; typedef unsigned long DWORD ; typedef long LONG ; typedef signed __int64 INT64 ; typedef unsigned __int64 UINT64 ; # endif #)",
    "insertText": "if(defined(_WIN32) || defined(__WIN32__)) #pragma pack(push, 1) #else #pragma pack(1)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if FREEIMAGE_COLORORDER = = FREEIMAGE_COLORORDER_BGR BYTE rgbBlue ; BYTE rgbGreen ; BYTE rgbRed ; # else BYTE rgbRed ; BYTE rgbGreen ; BYTE rgbBlue ; # endif BYTE rgbReserved ; } RGBQUAD ; typedef struct tagRGBTRIPLE { # if FREEIMAGE_COLORORDER = = FREEIMAGE_COLORORDER_BGR BYTE rgbtBlue ; BYTE rgbtGreen ; BYTE rgbtRed ; # else BYTE rgbtRed ; BYTE rgbtGreen ; BYTE rgbtBlue ; # endif } RGBTRIPLE ; #)",
    "insertText": "if(defined(_WIN32) || defined(__WIN32__)) #pragma pack(pop) #else #pragma pack()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (WORD red ; WORD green ; WORD blue ; } FIRGB16 ; typedef struct tagFIRGBA16 { WORD red ; WORD green ; WORD blue ; WORD alpha ; } FIRGBA16 ; typedef struct tagFIRGBF { float red ; float green ; float blue ; } FIRGBF ; typedef struct tagFIRGBAF { float red ; float green ; float blue ; float alpha ; } FIRGBAF ; typedef struct tagFICOMPLEX { double r ; double i ; } FICOMPLEX ; #)",
    "insertText": "if(defined(_WIN32) || defined(__WIN32__)) #pragma pack(pop) #else #pragma pack() #endif #ifndef FREEIMAGE_BIGENDIAN #if FREEIMAGE_COLORORDER == FREEIMAGE_COLORORDER_BGR #define FI_RGBA_RED 2 #define FI_RGBA_GREEN 1 #define FI_RGBA_BLUE 0 #define FI_RGBA_ALPHA 3 #define FI_RGBA_RED_MASK 0x00FF0000 #define FI_RGBA_GREEN_MASK 0x0000FF00 #define FI_RGBA_BLUE_MASK 0x000000FF #define FI_RGBA_ALPHA_MASK 0xFF000000 #define FI_RGBA_RED_SHIFT 16 #define FI_RGBA_GREEN_SHIFT 8 #define FI_RGBA_BLUE_SHIFT 0 #define FI_RGBA_ALPHA_SHIFT 24 #else #define FI_RGBA_RED 0 #define FI_RGBA_GREEN 1 #define FI_RGBA_BLUE 2 #define FI_RGBA_ALPHA 3 #define FI_RGBA_RED_MASK 0x000000FF #define FI_RGBA_GREEN_MASK 0x0000FF00 #define FI_RGBA_BLUE_MASK 0x00FF0000 #define FI_RGBA_ALPHA_MASK 0xFF000000 #define FI_RGBA_RED_SHIFT 0 #define FI_RGBA_GREEN_SHIFT 8 #define FI_RGBA_BLUE_SHIFT 16 #define FI_RGBA_ALPHA_SHIFT 24 #endif #else #if FREEIMAGE_COLORORDER == FREEIMAGE_COLORORDER_BGR #define FI_RGBA_RED 2 #define FI_RGBA_GREEN 1 #define FI_RGBA_BLUE 0 #define FI_RGBA_ALPHA 3 #define FI_RGBA_RED_MASK 0x0000FF00 #define FI_RGBA_GREEN_MASK 0x00FF0000 #define FI_RGBA_BLUE_MASK 0xFF000000 #define FI_RGBA_ALPHA_MASK 0x000000FF #define FI_RGBA_RED_SHIFT 8 #define FI_RGBA_GREEN_SHIFT 16 #define FI_RGBA_BLUE_SHIFT 24 #define FI_RGBA_ALPHA_SHIFT 0 #else #define FI_RGBA_RED 0 #define FI_RGBA_GREEN 1 #define FI_RGBA_BLUE 2 #define FI_RGBA_ALPHA 3 #define FI_RGBA_RED_MASK 0xFF000000 #define FI_RGBA_GREEN_MASK 0x00FF0000 #define FI_RGBA_BLUE_MASK 0x0000FF00 #define FI_RGBA_ALPHA_MASK 0x000000FF #define FI_RGBA_RED_SHIFT 24 #define FI_RGBA_GREEN_SHIFT 16 #define FI_RGBA_BLUE_SHIFT 8 #define FI_RGBA_ALPHA_SHIFT 0 #endif #endif #define FI_RGBA_RGB_MASK (FI_RGBA_RED_MASK|FI_RGBA_GREEN_MASK|FI_RGBA_BLUE_MASK) #define FI16_555_RED_MASK 0x7C00 #define FI16_555_GREEN_MASK 0x03E0 #define FI16_555_BLUE_MASK 0x001F #define FI16_555_RED_SHIFT 10 #define FI16_555_GREEN_SHIFT 5 #define FI16_555_BLUE_SHIFT 0 #define FI16_565_RED_MASK 0xF800 #define FI16_565_GREEN_MASK 0x07E0 #define FI16_565_BLUE_MASK 0x001F #define FI16_565_RED_SHIFT 11 #define FI16_565_GREEN_SHIFT 5 #define FI16_565_BLUE_SHIFT 0 #define FIICC_DEFAULT 0x00 #define FIICC_COLOR_IS_CMYK 0x01 FI_STRUCT (FIICCPROFILE)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (WORD flags ; DWORD size ; void* data ; } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_FORMAT)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (FIF_UNKNOWN = - 1,FIF_BMP = 0,FIF_ICO = 1,FIF_JPEG = 2,FIF_JNG = 3,FIF_KOALA = 4,FIF_LBM = 5,FIF_IFF = FIF_LBM,FIF_MNG = 6,FIF_PBM = 7,FIF_PBMRAW = 8,FIF_PCD = 9,FIF_PCX = 1 0,FIF_PGM = 1 1,FIF_PGMRAW = 1 2,FIF_PNG = 1 3,FIF_PPM = 1 4,FIF_PPMRAW = 1 5,FIF_RAS = 1 6,FIF_TARGA = 1 7,FIF_TIFF = 1 8,FIF_WBMP = 1 9,FIF_PSD = 2 0,FIF_CUT = 2 1,FIF_XBM = 2 2,FIF_XPM = 2 3,FIF_DDS = 2 4,FIF_GIF = 2 5,FIF_HDR = 2 6,FIF_FAXG3 = 2 7,FIF_SGI = 2 8,FIF_EXR = 2 9,FIF_J2K = 3 0,FIF_JP2 = 3 1,FIF_PFM = 3 2,FIF_PICT = 3 3,FIF_RAW = 3 4,FIF_WEBP = 3 5,FIF_JXR = 3 6 } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_TYPE)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (FIT_UNKNOWN = 0,FIT_BITMAP = 1,FIT_UINT16 = 2,FIT_INT16 = 3,FIT_UINT32 = 4,FIT_INT32 = 5,FIT_FLOAT = 6,FIT_DOUBLE = 7,FIT_COMPLEX = 8,FIT_RGB16 = 9,FIT_RGBA16 = 1 0,FIT_RGBF = 1 1,FIT_RGBAF = 1 2 } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_COLOR_TYPE)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (FIC_MINISWHITE = 0,FIC_MINISBLACK = 1,FIC_RGB = 2,FIC_PALETTE = 3,FIC_RGBALPHA = 4,FIC_CMYK = 5 } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_QUANTIZE)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (FIQ_WUQUANT = 0,FIQ_NNQUANT = 1,FIQ_LFPQUANT = 2 } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_DITHER)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (FID_FS = 0,FID_BAYER4x4 = 1,FID_BAYER8x8 = 2,FID_CLUSTER6x6 = 3,FID_CLUSTER8x8 = 4,FID_CLUSTER16x16 = 5,FID_BAYER16x16 = 6 } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_JPEG_OPERATION)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (FIJPEG_OP_NONE = 0,FIJPEG_OP_FLIP_H = 1,FIJPEG_OP_FLIP_V = 2,FIJPEG_OP_TRANSPOSE = 3,FIJPEG_OP_TRANSVERSE = 4,FIJPEG_OP_ROTATE_90 = 5,FIJPEG_OP_ROTATE_180 = 6,FIJPEG_OP_ROTATE_270 = 7 } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_TMO)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (FITMO_DRAGO03 = 0,FITMO_REINHARD05 = 1,FITMO_FATTAL02 = 2 } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_FILTER)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (FILTER_BOX = 0,FILTER_BICUBIC = 1,FILTER_BILINEAR = 2,FILTER_BSPLINE = 3,FILTER_CATMULLROM = 4,FILTER_LANCZOS3 = 5 } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_COLOR_CHANNEL)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (FICC_RGB = 0,FICC_RED = 1,FICC_GREEN = 2,FICC_BLUE = 3,FICC_ALPHA = 4,FICC_BLACK = 5,FICC_REAL = 6,FICC_IMAG = 7,FICC_MAG = 8,FICC_PHASE = 9 } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_MDTYPE)"
  },
  {
    "label": "FI_ENUM()",
    "kind": "Method",
    "detail": "Function (FIDT_NOTYPE = 0,FIDT_BYTE = 1,FIDT_ASCII = 2,FIDT_SHORT = 3,FIDT_LONG = 4,FIDT_RATIONAL = 5,FIDT_SBYTE = 6,FIDT_UNDEFINED = 7,FIDT_SSHORT = 8,FIDT_SLONG = 9,FIDT_SRATIONAL = 1 0,FIDT_FLOAT = 1 1,FIDT_DOUBLE = 1 2,FIDT_IFD = 1 3,FIDT_PALETTE = 1 4,FIDT_LONG8 = 1 6,FIDT_SLONG8 = 1 7,FIDT_IFD8 = 1 8 } ;)",
    "insertText": "FI_ENUM(FREE_IMAGE_MDMODEL)"
  },
  {
    "label": "FI_STRUCT()",
    "kind": "Method",
    "detail": "Function (FIMD_NODATA = - 1,FIMD_COMMENTS = 0,FIMD_EXIF_MAIN = 1,FIMD_EXIF_EXIF = 2,FIMD_EXIF_GPS = 3,FIMD_EXIF_MAKERNOTE = 4,FIMD_EXIF_INTEROP = 5,FIMD_IPTC = 6,FIMD_XMP = 7,FIMD_GEOTIFF = 8,FIMD_ANIMATION = 9,FIMD_CUSTOM = 1 0,FIMD_EXIF_RAW = 1 1 } ;)",
    "insertText": "FI_STRUCT(FIMETADATA)"
  },
  {
    "label": "FI_STRUCT()",
    "kind": "Method",
    "detail": "Function (void* data ; } ;)",
    "insertText": "FI_STRUCT(FITAG)"
  },
  {
    "label": "unsigned()",
    "kind": "Method",
    "detail": "Function (void* data ; } ; # ifndef FREEIMAGE_IO # define FREEIMAGE_IO typedef void* fi_handle ; typedef)",
    "insertText": "unsigned(DLL_CALLCONV *FI_ReadProc) (void *buffer, unsigned size, unsigned count, fi_handle handle)"
  },
  {
    "label": "unsigned()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "unsigned(DLL_CALLCONV *FI_WriteProc) (void *buffer, unsigned size, unsigned count, fi_handle handle)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(DLL_CALLCONV *FI_SeekProc) (fi_handle handle, long offset, int origin)"
  },
  {
    "label": "long()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "long(DLL_CALLCONV *FI_TellProc) (fi_handle handle)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (#)",
    "insertText": "if(defined(_WIN32) || defined(__WIN32__)) #pragma pack(push, 1) #else #pragma pack(1) #endif FI_STRUCT(FreeImageIO)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FI_ReadProc read_proc ; FI_WriteProc write_proc ; FI_SeekProc seek_proc ; FI_TellProc tell_proc ; } ; #)",
    "insertText": "if(defined(_WIN32) || defined(__WIN32__)) #pragma pack(pop) #else #pragma pack() #endif FI_STRUCT (FIMEMORY)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (void* data ; } ; # endif # ifndef PLUGINS # define PLUGINS typedef const)",
    "insertText": "char(DLL_CALLCONV *FI_FormatProc)(void)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (typedef const)",
    "insertText": "char(DLL_CALLCONV *FI_DescriptionProc)(void)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (typedef const)",
    "insertText": "char(DLL_CALLCONV *FI_ExtensionListProc)(void)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (typedef const)",
    "insertText": "char(DLL_CALLCONV *FI_RegExprProc)(void)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(DLL_CALLCONV *FI_OpenProc)(FreeImageIO *io, fi_handle handle, BOOL read)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(DLL_CALLCONV *FI_CloseProc)(FreeImageIO *io, fi_handle handle, void *data)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(DLL_CALLCONV *FI_PageCountProc)(FreeImageIO *io, fi_handle handle, void *data)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(DLL_CALLCONV *FI_PageCapabilityProc)(FreeImageIO *io, fi_handle handle, void *data)"
  },
  {
    "label": "FIBITMAP()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FIBITMAP(DLL_CALLCONV *FI_LoadProc)(FreeImageIO *io, fi_handle handle, int page, int flags, void *data)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "BOOL(DLL_CALLCONV *FI_SaveProc)(FreeImageIO *io, FIBITMAP *dib, fi_handle handle, int page, int flags, void *data)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "BOOL(DLL_CALLCONV *FI_ValidateProc)(FreeImageIO *io, fi_handle handle)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (typedef const)",
    "insertText": "char(DLL_CALLCONV *FI_MimeProc)(void)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "BOOL(DLL_CALLCONV *FI_SupportsExportBPPProc)(int bpp)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "BOOL(DLL_CALLCONV *FI_SupportsExportTypeProc)(FREE_IMAGE_TYPE type)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "BOOL(DLL_CALLCONV *FI_SupportsICCProfilesProc)(void)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "BOOL(DLL_CALLCONV *FI_SupportsNoPixelsProc)(void)"
  },
  {
    "label": "FI_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FI_STRUCT(Plugin)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (FI_FormatProc format_proc ; FI_DescriptionProc description_proc ; FI_ExtensionListProc extension_proc ; FI_RegExprProc regexpr_proc ; FI_OpenProc open_proc ; FI_CloseProc close_proc ; FI_PageCountProc pagecount_proc ; FI_PageCapabilityProc pagecapability_proc ; FI_LoadProc load_proc ; FI_SaveProc save_proc ; FI_ValidateProc validate_proc ; FI_MimeProc mime_proc ; FI_SupportsExportBPPProc supports_export_bpp_proc ; FI_SupportsExportTypeProc supports_export_type_proc ; FI_SupportsICCProfilesProc supports_icc_profiles_proc ; FI_SupportsNoPixelsProc supports_no_pixels_proc ; } ; typedef)",
    "insertText": "void(DLL_CALLCONV *FI_InitProc)(Plugin *plugin, int format_id)"
  },
  {
    "label": "FI_COLOR_PALETTE_SEARCH_MASK()",
    "kind": "Method",
    "detail": "Function (# endif # define FIF_LOAD_NOPIXELS 0 x8000 # define BMP_DEFAULT 0 # define BMP_SAVE_RLE 1 # define CUT_DEFAULT 0 # define DDS_DEFAULT 0 # define EXR_DEFAULT 0 # define EXR_FLOAT 0 x0001 # define EXR_NONE 0 x0002 # define EXR_ZIP 0 x0004 # define EXR_PIZ 0 x0008 # define EXR_PXR24 0 x0010 # define EXR_B44 0 x0020 # define EXR_LC 0 x0040 # define FAXG3_DEFAULT 0 # define GIF_DEFAULT 0 # define GIF_LOAD256 1 # define GIF_PLAYBACK 2 # define HDR_DEFAULT 0 # define ICO_DEFAULT 0 # define ICO_MAKEALPHA 1 # define IFF_DEFAULT 0 # define J2K_DEFAULT 0 # define JP2_DEFAULT 0 # define JPEG_DEFAULT 0 # define JPEG_FAST 0 x0001 # define JPEG_ACCURATE 0 x0002 # define JPEG_CMYK 0 x0004 # define JPEG_EXIFROTATE 0 x0008 # define JPEG_GREYSCALE 0 x0010 # define JPEG_QUALITYSUPERB 0 x80 # define JPEG_QUALITYGOOD 0 x0100 # define JPEG_QUALITYNORMAL 0 x0200 # define JPEG_QUALITYAVERAGE 0 x0400 # define JPEG_QUALITYBAD 0 x0800 # define JPEG_PROGRESSIVE 0 x2000 # define JPEG_SUBSAMPLING_411 0 x1000 # define JPEG_SUBSAMPLING_420 0 x4000 # define JPEG_SUBSAMPLING_422 0 x8000 # define JPEG_SUBSAMPLING_444 0 x10000 # define JPEG_OPTIMIZE 0 x20000 # define JPEG_BASELINE 0 x40000 # define KOALA_DEFAULT 0 # define LBM_DEFAULT 0 # define MNG_DEFAULT 0 # define PCD_DEFAULT 0 # define PCD_BASE 1 # define PCD_BASEDIV4 2 # define PCD_BASEDIV16 3 # define PCX_DEFAULT 0 # define PFM_DEFAULT 0 # define PICT_DEFAULT 0 # define PNG_DEFAULT 0 # define PNG_IGNOREGAMMA 1 # define PNG_Z_BEST_SPEED 0 x0001 # define PNG_Z_DEFAULT_COMPRESSION 0 x0006 # define PNG_Z_BEST_COMPRESSION 0 x0009 # define PNG_Z_NO_COMPRESSION 0 x0100 # define PNG_INTERLACED 0 x0200 # define PNM_DEFAULT 0 # define PNM_SAVE_RAW 0 # define PNM_SAVE_ASCII 1 # define PSD_DEFAULT 0 # define PSD_CMYK 1 # define PSD_LAB 2 # define PSD_NONE 0 x0100 # define PSD_RLE 0 x0200 # define PSD_PSB 0 x2000 # define RAS_DEFAULT 0 # define RAW_DEFAULT 0 # define RAW_PREVIEW 1 # define RAW_DISPLAY 2 # define RAW_HALFSIZE 4 # define RAW_UNPROCESSED 8 # define SGI_DEFAULT 0 # define TARGA_DEFAULT 0 # define TARGA_LOAD_RGB888 1 # define TARGA_SAVE_RLE 2 # define TIFF_DEFAULT 0 # define TIFF_CMYK 0 x0001 # define TIFF_PACKBITS 0 x0100 # define TIFF_DEFLATE 0 x0200 # define TIFF_ADOBE_DEFLATE 0 x0400 # define TIFF_NONE 0 x0800 # define TIFF_CCITTFAX3 0 x1000 # define TIFF_CCITTFAX4 0 x2000 # define TIFF_LZW 0 x4000 # define TIFF_JPEG 0 x8000 # define TIFF_LOGLUV 0 x10000 # define WBMP_DEFAULT 0 # define XBM_DEFAULT 0 # define XPM_DEFAULT 0 # define WEBP_DEFAULT 0 # define WEBP_LOSSLESS 0 x100 # define JXR_DEFAULT 0 # define JXR_LOSSLESS 0 x0064 # define JXR_PROGRESSIVE 0 x2000 # define FI_COLOR_IS_RGB_COLOR 0 x00 # define FI_COLOR_IS_RGBA_COLOR 0 x01 # define FI_COLOR_FIND_EQUAL_COLOR 0 x02 # define FI_COLOR_ALPHA_IS_INDEX 0 x04 # define)",
    "insertText": "FI_COLOR_PALETTE_SEARCH_MASK(FI_COLOR_FIND_EQUAL_COLOR | FI_COLOR_ALPHA_IS_INDEX)"
  },
  {
    "label": "FreeImage_Initialise()",
    "kind": "Method",
    "detail": "Function (# endif void DLL_CALLCONV)",
    "insertText": "FreeImage_Initialise(BOOL load_local_plugins_only FI_DEFAULT(FALSE))"
  },
  {
    "label": "FreeImage_DeInitialise()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_DeInitialise(void)"
  },
  {
    "label": "FreeImage_GetVersion()",
    "kind": "Method",
    "detail": "Function (const char* DLL_CALLCONV)",
    "insertText": "FreeImage_GetVersion(void)"
  },
  {
    "label": "FreeImage_GetCopyrightMessage()",
    "kind": "Method",
    "detail": "Function (const char* DLL_CALLCONV)",
    "insertText": "FreeImage_GetCopyrightMessage(void)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*FreeImage_OutputMessageFunction)(FREE_IMAGE_FORMAT fif, const char *msg)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(DLL_CALLCONV *FreeImage_OutputMessageFunctionStdCall)(FREE_IMAGE_FORMAT fif, const char *msg)"
  },
  {
    "label": "FreeImage_SetOutputMessageStdCall()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_SetOutputMessageStdCall(FreeImage_OutputMessageFunctionStdCall omf)"
  },
  {
    "label": "FreeImage_SetOutputMessage()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_SetOutputMessage(FreeImage_OutputMessageFunction omf)"
  },
  {
    "label": "FreeImage_OutputMessageProc()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_OutputMessageProc(int fif, const char *fmt, ...)"
  },
  {
    "label": "FreeImage_Allocate()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_Allocate(int width, int height, int bpp, unsigned red_mask FI_DEFAULT(0), unsigned green_mask FI_DEFAULT(0), unsigned blue_mask FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_AllocateT()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_AllocateT(FREE_IMAGE_TYPE type, int width, int height, int bpp FI_DEFAULT(8), unsigned red_mask FI_DEFAULT(0), unsigned green_mask FI_DEFAULT(0), unsigned blue_mask FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_Clone()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_Clone(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_Unload()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_Unload(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_HasPixels()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_HasPixels(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_Load()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_Load(FREE_IMAGE_FORMAT fif, const char *filename, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_LoadU()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_LoadU(FREE_IMAGE_FORMAT fif, const wchar_t *filename, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_LoadFromHandle()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_LoadFromHandle(FREE_IMAGE_FORMAT fif, FreeImageIO *io, fi_handle handle, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_Save()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_Save(FREE_IMAGE_FORMAT fif, FIBITMAP *dib, const char *filename, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_SaveU()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SaveU(FREE_IMAGE_FORMAT fif, FIBITMAP *dib, const wchar_t *filename, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_SaveToHandle()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SaveToHandle(FREE_IMAGE_FORMAT fif, FIBITMAP *dib, FreeImageIO *io, fi_handle handle, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_OpenMemory()",
    "kind": "Method",
    "detail": "Function (FIMEMORY* DLL_CALLCONV)",
    "insertText": "FreeImage_OpenMemory(BYTE *data FI_DEFAULT(0), DWORD size_in_bytes FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_CloseMemory()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_CloseMemory(FIMEMORY *stream)"
  },
  {
    "label": "FreeImage_LoadFromMemory()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_LoadFromMemory(FREE_IMAGE_FORMAT fif, FIMEMORY *stream, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_SaveToMemory()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SaveToMemory(FREE_IMAGE_FORMAT fif, FIBITMAP *dib, FIMEMORY *stream, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_TellMemory()",
    "kind": "Method",
    "detail": "Function (long DLL_CALLCONV)",
    "insertText": "FreeImage_TellMemory(FIMEMORY *stream)"
  },
  {
    "label": "FreeImage_SeekMemory()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SeekMemory(FIMEMORY *stream, long offset, int origin)"
  },
  {
    "label": "FreeImage_AcquireMemory()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_AcquireMemory(FIMEMORY *stream, BYTE **data, DWORD *size_in_bytes)"
  },
  {
    "label": "FreeImage_ReadMemory()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_ReadMemory(void *buffer, unsigned size, unsigned count, FIMEMORY *stream)"
  },
  {
    "label": "FreeImage_WriteMemory()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_WriteMemory(const void *buffer, unsigned size, unsigned count, FIMEMORY *stream)"
  },
  {
    "label": "FreeImage_LoadMultiBitmapFromMemory()",
    "kind": "Method",
    "detail": "Function (FIMULTIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_LoadMultiBitmapFromMemory(FREE_IMAGE_FORMAT fif, FIMEMORY *stream, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_SaveMultiBitmapToMemory()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SaveMultiBitmapToMemory(FREE_IMAGE_FORMAT fif, FIMULTIBITMAP *bitmap, FIMEMORY *stream, int flags)"
  },
  {
    "label": "FreeImage_RegisterLocalPlugin()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_FORMAT DLL_CALLCONV)",
    "insertText": "FreeImage_RegisterLocalPlugin(FI_InitProc proc_address, const char *format FI_DEFAULT(0), const char *description FI_DEFAULT(0), const char *extension FI_DEFAULT(0), const char *regexpr FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_RegisterExternalPlugin()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_FORMAT DLL_CALLCONV)",
    "insertText": "FreeImage_RegisterExternalPlugin(const char *path, const char *format FI_DEFAULT(0), const char *description FI_DEFAULT(0), const char *extension FI_DEFAULT(0), const char *regexpr FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_GetFIFCount()",
    "kind": "Method",
    "detail": "Function (int DLL_CALLCONV)",
    "insertText": "FreeImage_GetFIFCount(void)"
  },
  {
    "label": "FreeImage_SetPluginEnabled()",
    "kind": "Method",
    "detail": "Function (int DLL_CALLCONV)",
    "insertText": "FreeImage_SetPluginEnabled(FREE_IMAGE_FORMAT fif, BOOL enable)"
  },
  {
    "label": "FreeImage_IsPluginEnabled()",
    "kind": "Method",
    "detail": "Function (int DLL_CALLCONV)",
    "insertText": "FreeImage_IsPluginEnabled(FREE_IMAGE_FORMAT fif)"
  },
  {
    "label": "FreeImage_GetFIFFromFormat()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_FORMAT DLL_CALLCONV)",
    "insertText": "FreeImage_GetFIFFromFormat(const char *format)"
  },
  {
    "label": "FreeImage_GetFIFFromMime()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_FORMAT DLL_CALLCONV)",
    "insertText": "FreeImage_GetFIFFromMime(const char *mime)"
  },
  {
    "label": "FreeImage_GetFormatFromFIF()",
    "kind": "Method",
    "detail": "Function (const char* DLL_CALLCONV)",
    "insertText": "FreeImage_GetFormatFromFIF(FREE_IMAGE_FORMAT fif)"
  },
  {
    "label": "FreeImage_GetFIFExtensionList()",
    "kind": "Method",
    "detail": "Function (const char* DLL_CALLCONV)",
    "insertText": "FreeImage_GetFIFExtensionList(FREE_IMAGE_FORMAT fif)"
  },
  {
    "label": "FreeImage_GetFIFDescription()",
    "kind": "Method",
    "detail": "Function (const char* DLL_CALLCONV)",
    "insertText": "FreeImage_GetFIFDescription(FREE_IMAGE_FORMAT fif)"
  },
  {
    "label": "FreeImage_GetFIFRegExpr()",
    "kind": "Method",
    "detail": "Function (const char* DLL_CALLCONV)",
    "insertText": "FreeImage_GetFIFRegExpr(FREE_IMAGE_FORMAT fif)"
  },
  {
    "label": "FreeImage_GetFIFMimeType()",
    "kind": "Method",
    "detail": "Function (const char* DLL_CALLCONV)",
    "insertText": "FreeImage_GetFIFMimeType(FREE_IMAGE_FORMAT fif)"
  },
  {
    "label": "FreeImage_GetFIFFromFilename()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_FORMAT DLL_CALLCONV)",
    "insertText": "FreeImage_GetFIFFromFilename(const char *filename)"
  },
  {
    "label": "FreeImage_GetFIFFromFilenameU()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_FORMAT DLL_CALLCONV)",
    "insertText": "FreeImage_GetFIFFromFilenameU(const wchar_t *filename)"
  },
  {
    "label": "FreeImage_FIFSupportsReading()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_FIFSupportsReading(FREE_IMAGE_FORMAT fif)"
  },
  {
    "label": "FreeImage_FIFSupportsWriting()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_FIFSupportsWriting(FREE_IMAGE_FORMAT fif)"
  },
  {
    "label": "FreeImage_FIFSupportsExportBPP()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_FIFSupportsExportBPP(FREE_IMAGE_FORMAT fif, int bpp)"
  },
  {
    "label": "FreeImage_FIFSupportsExportType()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_FIFSupportsExportType(FREE_IMAGE_FORMAT fif, FREE_IMAGE_TYPE type)"
  },
  {
    "label": "FreeImage_FIFSupportsICCProfiles()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_FIFSupportsICCProfiles(FREE_IMAGE_FORMAT fif)"
  },
  {
    "label": "FreeImage_FIFSupportsNoPixels()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_FIFSupportsNoPixels(FREE_IMAGE_FORMAT fif)"
  },
  {
    "label": "FreeImage_OpenMultiBitmap()",
    "kind": "Method",
    "detail": "Function (FIMULTIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_OpenMultiBitmap(FREE_IMAGE_FORMAT fif, const char *filename, BOOL create_new, BOOL read_only, BOOL keep_cache_in_memory FI_DEFAULT(FALSE), int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_OpenMultiBitmapFromHandle()",
    "kind": "Method",
    "detail": "Function (FIMULTIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_OpenMultiBitmapFromHandle(FREE_IMAGE_FORMAT fif, FreeImageIO *io, fi_handle handle, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_SaveMultiBitmapToHandle()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SaveMultiBitmapToHandle(FREE_IMAGE_FORMAT fif, FIMULTIBITMAP *bitmap, FreeImageIO *io, fi_handle handle, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_CloseMultiBitmap()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_CloseMultiBitmap(FIMULTIBITMAP *bitmap, int flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_GetPageCount()",
    "kind": "Method",
    "detail": "Function (int DLL_CALLCONV)",
    "insertText": "FreeImage_GetPageCount(FIMULTIBITMAP *bitmap)"
  },
  {
    "label": "FreeImage_AppendPage()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_AppendPage(FIMULTIBITMAP *bitmap, FIBITMAP *data)"
  },
  {
    "label": "FreeImage_InsertPage()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_InsertPage(FIMULTIBITMAP *bitmap, int page, FIBITMAP *data)"
  },
  {
    "label": "FreeImage_DeletePage()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_DeletePage(FIMULTIBITMAP *bitmap, int page)"
  },
  {
    "label": "FreeImage_LockPage()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_LockPage(FIMULTIBITMAP *bitmap, int page)"
  },
  {
    "label": "FreeImage_UnlockPage()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_UnlockPage(FIMULTIBITMAP *bitmap, FIBITMAP *data, BOOL changed)"
  },
  {
    "label": "FreeImage_MovePage()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_MovePage(FIMULTIBITMAP *bitmap, int target, int source)"
  },
  {
    "label": "FreeImage_GetLockedPageNumbers()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_GetLockedPageNumbers(FIMULTIBITMAP *bitmap, int *pages, int *count)"
  },
  {
    "label": "FreeImage_GetFileType()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_FORMAT DLL_CALLCONV)",
    "insertText": "FreeImage_GetFileType(const char *filename, int size FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_GetFileTypeU()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_FORMAT DLL_CALLCONV)",
    "insertText": "FreeImage_GetFileTypeU(const wchar_t *filename, int size FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_GetFileTypeFromHandle()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_FORMAT DLL_CALLCONV)",
    "insertText": "FreeImage_GetFileTypeFromHandle(FreeImageIO *io, fi_handle handle, int size FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_GetFileTypeFromMemory()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_FORMAT DLL_CALLCONV)",
    "insertText": "FreeImage_GetFileTypeFromMemory(FIMEMORY *stream, int size FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_Validate()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_Validate(FREE_IMAGE_FORMAT fif, const char *filename)"
  },
  {
    "label": "FreeImage_ValidateU()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_ValidateU(FREE_IMAGE_FORMAT fif, const wchar_t *filename)"
  },
  {
    "label": "FreeImage_ValidateFromHandle()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_ValidateFromHandle(FREE_IMAGE_FORMAT fif, FreeImageIO *io, fi_handle handle)"
  },
  {
    "label": "FreeImage_ValidateFromMemory()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_ValidateFromMemory(FREE_IMAGE_FORMAT fif, FIMEMORY *stream)"
  },
  {
    "label": "FreeImage_GetImageType()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_TYPE DLL_CALLCONV)",
    "insertText": "FreeImage_GetImageType(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_IsLittleEndian()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_IsLittleEndian(void)"
  },
  {
    "label": "FreeImage_LookupX11Color()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_LookupX11Color(const char *szColor, BYTE *nRed, BYTE *nGreen, BYTE *nBlue)"
  },
  {
    "label": "FreeImage_LookupSVGColor()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_LookupSVGColor(const char *szColor, BYTE *nRed, BYTE *nGreen, BYTE *nBlue)"
  },
  {
    "label": "FreeImage_GetBits()",
    "kind": "Method",
    "detail": "Function (BYTE* DLL_CALLCONV)",
    "insertText": "FreeImage_GetBits(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetScanLine()",
    "kind": "Method",
    "detail": "Function (BYTE* DLL_CALLCONV)",
    "insertText": "FreeImage_GetScanLine(FIBITMAP *dib, int scanline)"
  },
  {
    "label": "FreeImage_GetPixelIndex()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_GetPixelIndex(FIBITMAP *dib, unsigned x, unsigned y, BYTE *value)"
  },
  {
    "label": "FreeImage_GetPixelColor()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_GetPixelColor(FIBITMAP *dib, unsigned x, unsigned y, RGBQUAD *value)"
  },
  {
    "label": "FreeImage_SetPixelIndex()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetPixelIndex(FIBITMAP *dib, unsigned x, unsigned y, BYTE *value)"
  },
  {
    "label": "FreeImage_SetPixelColor()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetPixelColor(FIBITMAP *dib, unsigned x, unsigned y, RGBQUAD *value)"
  },
  {
    "label": "FreeImage_GetColorsUsed()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetColorsUsed(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetBPP()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetBPP(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetWidth()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetWidth(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetHeight()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetHeight(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetLine()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetLine(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetPitch()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetPitch(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetDIBSize()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetDIBSize(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetMemorySize()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetMemorySize(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetPalette()",
    "kind": "Method",
    "detail": "Function (RGBQUAD* DLL_CALLCONV)",
    "insertText": "FreeImage_GetPalette(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetDotsPerMeterX()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetDotsPerMeterX(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetDotsPerMeterY()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetDotsPerMeterY(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_SetDotsPerMeterX()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_SetDotsPerMeterX(FIBITMAP *dib, unsigned res)"
  },
  {
    "label": "FreeImage_SetDotsPerMeterY()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_SetDotsPerMeterY(FIBITMAP *dib, unsigned res)"
  },
  {
    "label": "FreeImage_GetInfoHeader()",
    "kind": "Method",
    "detail": "Function (BITMAPINFOHEADER* DLL_CALLCONV)",
    "insertText": "FreeImage_GetInfoHeader(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetInfo()",
    "kind": "Method",
    "detail": "Function (BITMAPINFO* DLL_CALLCONV)",
    "insertText": "FreeImage_GetInfo(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetColorType()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_COLOR_TYPE DLL_CALLCONV)",
    "insertText": "FreeImage_GetColorType(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetRedMask()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetRedMask(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetGreenMask()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetGreenMask(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetBlueMask()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetBlueMask(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetTransparencyCount()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetTransparencyCount(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetTransparencyTable()",
    "kind": "Method",
    "detail": "Function (BYTE* DLL_CALLCONV)",
    "insertText": "FreeImage_GetTransparencyTable(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_SetTransparent()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_SetTransparent(FIBITMAP *dib, BOOL enabled)"
  },
  {
    "label": "FreeImage_SetTransparencyTable()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_SetTransparencyTable(FIBITMAP *dib, BYTE *table, int count)"
  },
  {
    "label": "FreeImage_IsTransparent()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_IsTransparent(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_SetTransparentIndex()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_SetTransparentIndex(FIBITMAP *dib, int index)"
  },
  {
    "label": "FreeImage_GetTransparentIndex()",
    "kind": "Method",
    "detail": "Function (int DLL_CALLCONV)",
    "insertText": "FreeImage_GetTransparentIndex(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_HasBackgroundColor()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_HasBackgroundColor(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetBackgroundColor()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_GetBackgroundColor(FIBITMAP *dib, RGBQUAD *bkcolor)"
  },
  {
    "label": "FreeImage_SetBackgroundColor()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetBackgroundColor(FIBITMAP *dib, RGBQUAD *bkcolor)"
  },
  {
    "label": "FreeImage_GetThumbnail()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_GetThumbnail(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_SetThumbnail()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetThumbnail(FIBITMAP *dib, FIBITMAP *thumbnail)"
  },
  {
    "label": "FreeImage_GetICCProfile()",
    "kind": "Method",
    "detail": "Function (FIICCPROFILE* DLL_CALLCONV)",
    "insertText": "FreeImage_GetICCProfile(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_CreateICCProfile()",
    "kind": "Method",
    "detail": "Function (FIICCPROFILE* DLL_CALLCONV)",
    "insertText": "FreeImage_CreateICCProfile(FIBITMAP *dib, void *data, long size)"
  },
  {
    "label": "FreeImage_DestroyICCProfile()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_DestroyICCProfile(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertLine1To4()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine1To4(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine8To4()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine8To4(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine16To4_555()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine16To4_555(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine16To4_565()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine16To4_565(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine24To4()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine24To4(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine32To4()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine32To4(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine1To8()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine1To8(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine4To8()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine4To8(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine16To8_555()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine16To8_555(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine16To8_565()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine16To8_565(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine24To8()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine24To8(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine32To8()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine32To8(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine1To16_555()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine1To16_555(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine4To16_555()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine4To16_555(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine8To16_555()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine8To16_555(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine16_565_To16_555()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine16_565_To16_555(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine24To16_555()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine24To16_555(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine32To16_555()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine32To16_555(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine1To16_565()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine1To16_565(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine4To16_565()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine4To16_565(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine8To16_565()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine8To16_565(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine16_555_To16_565()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine16_555_To16_565(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine24To16_565()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine24To16_565(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine32To16_565()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine32To16_565(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine1To24()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine1To24(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine4To24()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine4To24(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine8To24()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine8To24(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine16To24_555()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine16To24_555(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine16To24_565()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine16To24_565(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine32To24()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine32To24(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine1To32()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine1To32(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine1To32MapTransparency()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine1To32MapTransparency(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette, BYTE *table, int transparent_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine4To32()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine4To32(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine4To32MapTransparency()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine4To32MapTransparency(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette, BYTE *table, int transparent_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine8To32()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine8To32(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette)"
  },
  {
    "label": "FreeImage_ConvertLine8To32MapTransparency()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine8To32MapTransparency(BYTE *target, BYTE *source, int width_in_pixels, RGBQUAD *palette, BYTE *table, int transparent_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine16To32_555()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine16To32_555(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine16To32_565()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine16To32_565(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertLine24To32()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertLine24To32(BYTE *target, BYTE *source, int width_in_pixels)"
  },
  {
    "label": "FreeImage_ConvertTo4Bits()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertTo4Bits(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertTo8Bits()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertTo8Bits(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertToGreyscale()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertToGreyscale(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertTo16Bits555()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertTo16Bits555(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertTo16Bits565()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertTo16Bits565(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertTo24Bits()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertTo24Bits(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertTo32Bits()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertTo32Bits(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ColorQuantize()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ColorQuantize(FIBITMAP *dib, FREE_IMAGE_QUANTIZE quantize)"
  },
  {
    "label": "FreeImage_ColorQuantizeEx()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ColorQuantizeEx(FIBITMAP *dib, FREE_IMAGE_QUANTIZE quantize FI_DEFAULT(FIQ_WUQUANT), int PaletteSize FI_DEFAULT(256), int ReserveSize FI_DEFAULT(0), RGBQUAD *ReservePalette FI_DEFAULT(NULL))"
  },
  {
    "label": "FreeImage_Threshold()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_Threshold(FIBITMAP *dib, BYTE T)"
  },
  {
    "label": "FreeImage_Dither()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_Dither(FIBITMAP *dib, FREE_IMAGE_DITHER algorithm)"
  },
  {
    "label": "FreeImage_ConvertFromRawBits()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertFromRawBits(BYTE *bits, int width, int height, int pitch, unsigned bpp, unsigned red_mask, unsigned green_mask, unsigned blue_mask, BOOL topdown FI_DEFAULT(FALSE))"
  },
  {
    "label": "FreeImage_ConvertFromRawBitsEx()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertFromRawBitsEx(BOOL copySource, BYTE *bits, FREE_IMAGE_TYPE type, int width, int height, int pitch, unsigned bpp, unsigned red_mask, unsigned green_mask, unsigned blue_mask, BOOL topdown FI_DEFAULT(FALSE))"
  },
  {
    "label": "FreeImage_ConvertToRawBits()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertToRawBits(BYTE *bits, FIBITMAP *dib, int pitch, unsigned bpp, unsigned red_mask, unsigned green_mask, unsigned blue_mask, BOOL topdown FI_DEFAULT(FALSE))"
  },
  {
    "label": "FreeImage_ConvertToFloat()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertToFloat(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertToRGBF()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertToRGBF(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertToRGBAF()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertToRGBAF(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertToUINT16()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertToUINT16(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertToRGB16()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertToRGB16(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertToRGBA16()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertToRGBA16(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_ConvertToStandardType()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertToStandardType(FIBITMAP *src, BOOL scale_linear FI_DEFAULT(TRUE))"
  },
  {
    "label": "FreeImage_ConvertToType()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ConvertToType(FIBITMAP *src, FREE_IMAGE_TYPE dst_type, BOOL scale_linear FI_DEFAULT(TRUE))"
  },
  {
    "label": "FreeImage_ToneMapping()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_ToneMapping(FIBITMAP *dib, FREE_IMAGE_TMO tmo, double first_param FI_DEFAULT(0), double second_param FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_TmoDrago03()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_TmoDrago03(FIBITMAP *src, double gamma FI_DEFAULT(2.2), double exposure FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_TmoReinhard05()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_TmoReinhard05(FIBITMAP *src, double intensity FI_DEFAULT(0), double contrast FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_TmoReinhard05Ex()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_TmoReinhard05Ex(FIBITMAP *src, double intensity FI_DEFAULT(0), double contrast FI_DEFAULT(0), double adaptation FI_DEFAULT(1), double color_correction FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_TmoFattal02()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_TmoFattal02(FIBITMAP *src, double color_saturation FI_DEFAULT(0.5), double attenuation FI_DEFAULT(0.85))"
  },
  {
    "label": "FreeImage_ZLibCompress()",
    "kind": "Method",
    "detail": "Function (DWORD DLL_CALLCONV)",
    "insertText": "FreeImage_ZLibCompress(BYTE *target, DWORD target_size, BYTE *source, DWORD source_size)"
  },
  {
    "label": "FreeImage_ZLibUncompress()",
    "kind": "Method",
    "detail": "Function (DWORD DLL_CALLCONV)",
    "insertText": "FreeImage_ZLibUncompress(BYTE *target, DWORD target_size, BYTE *source, DWORD source_size)"
  },
  {
    "label": "FreeImage_ZLibGZip()",
    "kind": "Method",
    "detail": "Function (DWORD DLL_CALLCONV)",
    "insertText": "FreeImage_ZLibGZip(BYTE *target, DWORD target_size, BYTE *source, DWORD source_size)"
  },
  {
    "label": "FreeImage_ZLibGUnzip()",
    "kind": "Method",
    "detail": "Function (DWORD DLL_CALLCONV)",
    "insertText": "FreeImage_ZLibGUnzip(BYTE *target, DWORD target_size, BYTE *source, DWORD source_size)"
  },
  {
    "label": "FreeImage_ZLibCRC32()",
    "kind": "Method",
    "detail": "Function (DWORD DLL_CALLCONV)",
    "insertText": "FreeImage_ZLibCRC32(DWORD crc, BYTE *source, DWORD source_size)"
  },
  {
    "label": "FreeImage_CreateTag()",
    "kind": "Method",
    "detail": "Function (FITAG* DLL_CALLCONV)",
    "insertText": "FreeImage_CreateTag(void)"
  },
  {
    "label": "FreeImage_DeleteTag()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_DeleteTag(FITAG *tag)"
  },
  {
    "label": "FreeImage_CloneTag()",
    "kind": "Method",
    "detail": "Function (FITAG* DLL_CALLCONV)",
    "insertText": "FreeImage_CloneTag(FITAG *tag)"
  },
  {
    "label": "FreeImage_GetTagKey()",
    "kind": "Method",
    "detail": "Function (const char* DLL_CALLCONV)",
    "insertText": "FreeImage_GetTagKey(FITAG *tag)"
  },
  {
    "label": "FreeImage_GetTagDescription()",
    "kind": "Method",
    "detail": "Function (const char* DLL_CALLCONV)",
    "insertText": "FreeImage_GetTagDescription(FITAG *tag)"
  },
  {
    "label": "FreeImage_GetTagID()",
    "kind": "Method",
    "detail": "Function (WORD DLL_CALLCONV)",
    "insertText": "FreeImage_GetTagID(FITAG *tag)"
  },
  {
    "label": "FreeImage_GetTagType()",
    "kind": "Method",
    "detail": "Function (FREE_IMAGE_MDTYPE DLL_CALLCONV)",
    "insertText": "FreeImage_GetTagType(FITAG *tag)"
  },
  {
    "label": "FreeImage_GetTagCount()",
    "kind": "Method",
    "detail": "Function (DWORD DLL_CALLCONV)",
    "insertText": "FreeImage_GetTagCount(FITAG *tag)"
  },
  {
    "label": "FreeImage_GetTagLength()",
    "kind": "Method",
    "detail": "Function (DWORD DLL_CALLCONV)",
    "insertText": "FreeImage_GetTagLength(FITAG *tag)"
  },
  {
    "label": "FreeImage_GetTagValue()",
    "kind": "Method",
    "detail": "Function (const void* DLL_CALLCONV)",
    "insertText": "FreeImage_GetTagValue(FITAG *tag)"
  },
  {
    "label": "FreeImage_SetTagKey()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetTagKey(FITAG *tag, const char *key)"
  },
  {
    "label": "FreeImage_SetTagDescription()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetTagDescription(FITAG *tag, const char *description)"
  },
  {
    "label": "FreeImage_SetTagID()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetTagID(FITAG *tag, WORD id)"
  },
  {
    "label": "FreeImage_SetTagType()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetTagType(FITAG *tag, FREE_IMAGE_MDTYPE type)"
  },
  {
    "label": "FreeImage_SetTagCount()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetTagCount(FITAG *tag, DWORD count)"
  },
  {
    "label": "FreeImage_SetTagLength()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetTagLength(FITAG *tag, DWORD length)"
  },
  {
    "label": "FreeImage_SetTagValue()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetTagValue(FITAG *tag, const void *value)"
  },
  {
    "label": "FreeImage_FindFirstMetadata()",
    "kind": "Method",
    "detail": "Function (FIMETADATA* DLL_CALLCONV)",
    "insertText": "FreeImage_FindFirstMetadata(FREE_IMAGE_MDMODEL model, FIBITMAP *dib, FITAG **tag)"
  },
  {
    "label": "FreeImage_FindNextMetadata()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_FindNextMetadata(FIMETADATA *mdhandle, FITAG **tag)"
  },
  {
    "label": "FreeImage_FindCloseMetadata()",
    "kind": "Method",
    "detail": "Function (void DLL_CALLCONV)",
    "insertText": "FreeImage_FindCloseMetadata(FIMETADATA *mdhandle)"
  },
  {
    "label": "FreeImage_SetMetadata()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetMetadata(FREE_IMAGE_MDMODEL model, FIBITMAP *dib, const char *key, FITAG *tag)"
  },
  {
    "label": "FreeImage_GetMetadata()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_GetMetadata(FREE_IMAGE_MDMODEL model, FIBITMAP *dib, const char *key, FITAG **tag)"
  },
  {
    "label": "FreeImage_SetMetadataKeyValue()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetMetadataKeyValue(FREE_IMAGE_MDMODEL model, FIBITMAP *dib, const char *key, const char *value)"
  },
  {
    "label": "FreeImage_GetMetadataCount()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_GetMetadataCount(FREE_IMAGE_MDMODEL model, FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_CloneMetadata()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_CloneMetadata(FIBITMAP *dst, FIBITMAP *src)"
  },
  {
    "label": "FreeImage_TagToString()",
    "kind": "Method",
    "detail": "Function (const char* DLL_CALLCONV)",
    "insertText": "FreeImage_TagToString(FREE_IMAGE_MDMODEL model, FITAG *tag, char *Make FI_DEFAULT(NULL))"
  },
  {
    "label": "FreeImage_JPEGTransform()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_JPEGTransform(const char *src_file, const char *dst_file, FREE_IMAGE_JPEG_OPERATION operation, BOOL perfect FI_DEFAULT(TRUE))"
  },
  {
    "label": "FreeImage_JPEGTransformU()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_JPEGTransformU(const wchar_t *src_file, const wchar_t *dst_file, FREE_IMAGE_JPEG_OPERATION operation, BOOL perfect FI_DEFAULT(TRUE))"
  },
  {
    "label": "FreeImage_JPEGCrop()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_JPEGCrop(const char *src_file, const char *dst_file, int left, int top, int right, int bottom)"
  },
  {
    "label": "FreeImage_JPEGCropU()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_JPEGCropU(const wchar_t *src_file, const wchar_t *dst_file, int left, int top, int right, int bottom)"
  },
  {
    "label": "FreeImage_JPEGTransformFromHandle()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_JPEGTransformFromHandle(FreeImageIO* src_io, fi_handle src_handle, FreeImageIO* dst_io, fi_handle dst_handle, FREE_IMAGE_JPEG_OPERATION operation, int* left, int* top, int* right, int* bottom, BOOL perfect FI_DEFAULT(TRUE))"
  },
  {
    "label": "FreeImage_JPEGTransformCombined()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_JPEGTransformCombined(const char *src_file, const char *dst_file, FREE_IMAGE_JPEG_OPERATION operation, int* left, int* top, int* right, int* bottom, BOOL perfect FI_DEFAULT(TRUE))"
  },
  {
    "label": "FreeImage_JPEGTransformCombinedU()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_JPEGTransformCombinedU(const wchar_t *src_file, const wchar_t *dst_file, FREE_IMAGE_JPEG_OPERATION operation, int* left, int* top, int* right, int* bottom, BOOL perfect FI_DEFAULT(TRUE))"
  },
  {
    "label": "FreeImage_JPEGTransformCombinedFromMemory()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_JPEGTransformCombinedFromMemory(FIMEMORY* src_stream, FIMEMORY* dst_stream, FREE_IMAGE_JPEG_OPERATION operation, int* left, int* top, int* right, int* bottom, BOOL perfect FI_DEFAULT(TRUE))"
  },
  {
    "label": "FreeImage_Rotate()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_Rotate(FIBITMAP *dib, double angle, const void *bkcolor FI_DEFAULT(NULL))"
  },
  {
    "label": "FreeImage_RotateEx()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_RotateEx(FIBITMAP *dib, double angle, double x_shift, double y_shift, double x_origin, double y_origin, BOOL use_mask)"
  },
  {
    "label": "FreeImage_FlipHorizontal()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_FlipHorizontal(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_FlipVertical()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_FlipVertical(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_Rescale()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_Rescale(FIBITMAP *dib, int dst_width, int dst_height, FREE_IMAGE_FILTER filter FI_DEFAULT(FILTER_CATMULLROM))"
  },
  {
    "label": "FreeImage_MakeThumbnail()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_MakeThumbnail(FIBITMAP *dib, int max_pixel_size, BOOL convert FI_DEFAULT(TRUE))"
  },
  {
    "label": "FreeImage_RescaleRect()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_RescaleRect(FIBITMAP *dib, int dst_width, int dst_height, int left, int top, int right, int bottom, FREE_IMAGE_FILTER filter FI_DEFAULT(FILTER_CATMULLROM), unsigned flags FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_AdjustCurve()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_AdjustCurve(FIBITMAP *dib, BYTE *LUT, FREE_IMAGE_COLOR_CHANNEL channel)"
  },
  {
    "label": "FreeImage_AdjustGamma()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_AdjustGamma(FIBITMAP *dib, double gamma)"
  },
  {
    "label": "FreeImage_AdjustBrightness()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_AdjustBrightness(FIBITMAP *dib, double percentage)"
  },
  {
    "label": "FreeImage_AdjustContrast()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_AdjustContrast(FIBITMAP *dib, double percentage)"
  },
  {
    "label": "FreeImage_Invert()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_Invert(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_GetHistogram()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_GetHistogram(FIBITMAP *dib, DWORD *histo, FREE_IMAGE_COLOR_CHANNEL channel FI_DEFAULT(FICC_BLACK))"
  },
  {
    "label": "FreeImage_GetAdjustColorsLookupTable()",
    "kind": "Method",
    "detail": "Function (int DLL_CALLCONV)",
    "insertText": "FreeImage_GetAdjustColorsLookupTable(BYTE *LUT, double brightness, double contrast, double gamma, BOOL invert)"
  },
  {
    "label": "FreeImage_AdjustColors()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_AdjustColors(FIBITMAP *dib, double brightness, double contrast, double gamma, BOOL invert FI_DEFAULT(FALSE))"
  },
  {
    "label": "FreeImage_ApplyColorMapping()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_ApplyColorMapping(FIBITMAP *dib, RGBQUAD *srccolors, RGBQUAD *dstcolors, unsigned count, BOOL ignore_alpha, BOOL swap)"
  },
  {
    "label": "FreeImage_SwapColors()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_SwapColors(FIBITMAP *dib, RGBQUAD *color_a, RGBQUAD *color_b, BOOL ignore_alpha)"
  },
  {
    "label": "FreeImage_ApplyPaletteIndexMapping()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_ApplyPaletteIndexMapping(FIBITMAP *dib, BYTE *srcindices, BYTE *dstindices, unsigned count, BOOL swap)"
  },
  {
    "label": "FreeImage_SwapPaletteIndices()",
    "kind": "Method",
    "detail": "Function (unsigned DLL_CALLCONV)",
    "insertText": "FreeImage_SwapPaletteIndices(FIBITMAP *dib, BYTE *index_a, BYTE *index_b)"
  },
  {
    "label": "FreeImage_GetChannel()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_GetChannel(FIBITMAP *dib, FREE_IMAGE_COLOR_CHANNEL channel)"
  },
  {
    "label": "FreeImage_SetChannel()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetChannel(FIBITMAP *dst, FIBITMAP *src, FREE_IMAGE_COLOR_CHANNEL channel)"
  },
  {
    "label": "FreeImage_GetComplexChannel()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_GetComplexChannel(FIBITMAP *src, FREE_IMAGE_COLOR_CHANNEL channel)"
  },
  {
    "label": "FreeImage_SetComplexChannel()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_SetComplexChannel(FIBITMAP *dst, FIBITMAP *src, FREE_IMAGE_COLOR_CHANNEL channel)"
  },
  {
    "label": "FreeImage_Copy()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_Copy(FIBITMAP *dib, int left, int top, int right, int bottom)"
  },
  {
    "label": "FreeImage_Paste()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_Paste(FIBITMAP *dst, FIBITMAP *src, int left, int top, int alpha)"
  },
  {
    "label": "FreeImage_CreateView()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_CreateView(FIBITMAP *dib, unsigned left, unsigned top, unsigned right, unsigned bottom)"
  },
  {
    "label": "FreeImage_Composite()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_Composite(FIBITMAP *fg, BOOL useFileBkg FI_DEFAULT(FALSE), RGBQUAD *appBkColor FI_DEFAULT(NULL), FIBITMAP *bg FI_DEFAULT(NULL))"
  },
  {
    "label": "FreeImage_PreMultiplyWithAlpha()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_PreMultiplyWithAlpha(FIBITMAP *dib)"
  },
  {
    "label": "FreeImage_FillBackground()",
    "kind": "Method",
    "detail": "Function (BOOL DLL_CALLCONV)",
    "insertText": "FreeImage_FillBackground(FIBITMAP *dib, const void *color, int options FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_EnlargeCanvas()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_EnlargeCanvas(FIBITMAP *src, int left, int top, int right, int bottom, const void *color, int options FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_AllocateEx()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_AllocateEx(int width, int height, int bpp, const RGBQUAD *color, int options FI_DEFAULT(0), const RGBQUAD *palette FI_DEFAULT(NULL), unsigned red_mask FI_DEFAULT(0), unsigned green_mask FI_DEFAULT(0), unsigned blue_mask FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_AllocateExT()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_AllocateExT(FREE_IMAGE_TYPE type, int width, int height, int bpp, const void *color, int options FI_DEFAULT(0), const RGBQUAD *palette FI_DEFAULT(NULL), unsigned red_mask FI_DEFAULT(0), unsigned green_mask FI_DEFAULT(0), unsigned blue_mask FI_DEFAULT(0))"
  },
  {
    "label": "FreeImage_MultigridPoissonSolver()",
    "kind": "Method",
    "detail": "Function (FIBITMAP* DLL_CALLCONV)",
    "insertText": "FreeImage_MultigridPoissonSolver(FIBITMAP *Laplacian, int ncycle FI_DEFAULT(3))"
  }
]