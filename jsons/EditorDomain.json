[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FEditorDomainSaveClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorDomainSaveClient"
  },
  {
    "label": "FObjectPostSaveContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPostSaveContext"
  },
  {
    "label": "FPackagePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackagePath"
  },
  {
    "label": "FScopeLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopeLock"
  },
  {
    "label": "IAssetRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetRegistry"
  },
  {
    "label": "IMappedFileHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMappedFileHandle"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FEndLoadPackageContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEndLoadPackageContext"
  },
  {
    "label": "FRequestOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRequestOwner"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPackageDigest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageDigest"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "IPackageDigestCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPackageDigestCache"
  },
  {
    "label": "FEditorDomain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorDomain"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "holding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "holding"
  },
  {
    "label": "FLocks",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocks"
  },
  {
    "label": "FPackageSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageSource"
  },
  {
    "label": "FEditorDomainConstructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorDomainConstructor"
  },
  {
    "label": "FEditorDomainPackageSegments",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorDomainPackageSegments"
  },
  {
    "label": "FEditorDomainReadArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorDomainReadArchive"
  },
  {
    "label": "FEditorDomainAsyncReadFileHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorDomainAsyncReadFileHandle"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(IPackageDigestCache* Cache)"
  },
  {
    "label": "SetDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefault()"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(UE::EditorDomain::FPackageDigest::EStatus Status, FName StatusArg)"
  },
  {
    "label": "TStatId()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TStatId()"
  },
  {
    "label": "PrecachePackageDigest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrecachePackageDigest(FName PackageName)"
  },
  {
    "label": "BatchDownload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchDownload(TArrayView<FName> PackageNames)"
  },
  {
    "label": "FLocks()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FLocks(FEditorDomain& InOwner)"
  },
  {
    "label": "SetHasLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasLoaded()"
  },
  {
    "label": "TryFindOrAddPackageSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFindOrAddPackageSource(FScopeLock& ScopeLock, bool& bOutReenteredLock, FName PackageName, TRefCountPtr<FPackageSource>& OutSource,\n\t\tUE::EditorDomain::FPackageDigest* OutErrorDigest=nullptr)"
  },
  {
    "label": "FindPackageSource()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FPackageSource>)",
    "insertText": "FindPackageSource(const FPackagePath& PackagePath)"
  },
  {
    "label": "MarkLoadedFromWorkspaceDomain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkLoadedFromWorkspaceDomain(const FPackagePath& PackagePath, TRefCountPtr<FPackageSource>& PackageSource, bool bHasRecordInEditorDomain)"
  },
  {
    "label": "MarkLoadedFromEditorDomain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkLoadedFromEditorDomain(const FPackagePath& PackagePath, TRefCountPtr<FPackageSource>& PackageSource)"
  },
  {
    "label": "OnPostEngineInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostEngineInit()"
  },
  {
    "label": "OnEndLoadPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndLoadPackage(const FEndLoadPackageContext& Context)"
  },
  {
    "label": "FilterKeepPackagesToSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterKeepPackagesToSave(TArray<UPackage*>& InOutLoadedPackages)"
  },
  {
    "label": "OnPackageSavedWithContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPackageSavedWithContext(const FString& PackageFileName, UPackage* Package,\n\t\tFObjectPostSaveContext ObjectSaveContext)"
  },
  {
    "label": "OnAssetUpdatedOnDisk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetUpdatedOnDisk(const FAssetData& AssetData)"
  },
  {
    "label": "GetPackageDigest_WithinLock()",
    "kind": "Method",
    "detail": "Function (UE::EditorDomain::FPackageDigest)",
    "insertText": "GetPackageDigest_WithinLock(FScopeLock& ScopeLock, bool& bOutReenteredLock, FName PackageDigest)"
  }
]