[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_PORTS_VPX_ONCE_H_ # define VPX_VPX_PORTS_VPX_ONCE_H_ # include \" vpx_config . h \" # if CONFIG_MULTITHREAD&&)",
    "insertText": "defined(_WIN32)"
  },
  {
    "label": "once()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "once(void (*func)(void))"
  },
  {
    "label": "func()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "func()"
  },
  {
    "label": "InterlockedIncrement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InterlockedIncrement(&once_state)"
  },
  {
    "label": "Sleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sleep(0)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} return ; } # elif CONFIG_MULTITHREAD&&)",
    "insertText": "defined(__OS2__) #define INCL_DOS #include <os2.h> static void once(void (*func)(void))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (volatile int done ;)",
    "insertText": "if(done)"
  },
  {
    "label": "pthread_once()",
    "kind": "Method",
    "detail": "Function (pthread_once_t lock = PTHREAD_ONCE_INIT ;)",
    "insertText": "pthread_once(&lock, func)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (volatile int done ;)",
    "insertText": "if(!done)"
  }
]