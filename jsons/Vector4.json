[
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "TIsUECoreVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsUECoreVariant"
  },
  {
    "label": "TIsUECoreVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsUECoreVariant"
  },
  {
    "label": "TCanBulkSerialize",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCanBulkSerialize"
  },
  {
    "label": "TCanBulkSerialize",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCanBulkSerialize"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "TVector4(T InX = 0.0f, T InY = 0.0f, T InZ = 0.0f, T InW = 1.0f)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "TVector4(TVector2<T> InXY, TVector2<T> InZW)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "TVector4(EForceInit)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TVector4(X * Scale, Y * Scale, Z * Scale, W * Scale)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TVector4(X * RScale, Y * RScale, Z * RScale, W * RScale)"
  },
  {
    "label": "InitFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitFromString(const FString& InSourceString)"
  },
  {
    "label": "ToOrientationRotator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ToOrientationRotator()"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(T InX, T InY, T InZ, T InW)"
  },
  {
    "label": "SerializeFromVector3()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeFromVector3(FName StructTag, FArchive&Ar)"
  },
  {
    "label": "SerializeFromMismatchedTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeFromMismatchedTag(FName StructTag, FArchive& Ar)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TVector4(-X, -Y, -Z, -W)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TVector4(X + V.X, Y + V.Y, Z + V.Z, W + V.W)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TVector4(X - V.X, Y - V.Y, Z - V.Z, W - V.W)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TVector4(X * V.X, Y * V.Y, Z * V.Z, W * V.W)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TVector4(X*Scale, Y*Scale, Z*Scale, 0.0f)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TVector4(X*Scale, Y*Scale, Z*Scale, 0.0f)"
  },
  {
    "label": "TVector4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TVector4(X / V.X, Y / V.Y, Z / V.Z, W / V.W)"
  },
  {
    "label": "UE_DECLARE_LWC_TYPE()",
    "kind": "Method",
    "detail": "Function (UE)",
    "insertText": "UE_DECLARE_LWC_TYPE(Vector4)"
  },
  {
    "label": "UE_SERIALIZE_VARIANT_FROM_MISMATCHED_TAG()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_SERIALIZE_VARIANT_FROM_MISMATCHED_TAG(Ar, Vector4, Vector4f, Vector4d)"
  },
  {
    "label": "UE_SERIALIZE_VARIANT_FROM_MISMATCHED_TAG()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_SERIALIZE_VARIANT_FROM_MISMATCHED_TAG(Ar, Vector4, Vector4d, Vector4f)"
  }
]