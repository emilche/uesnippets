[
  {
    "label": "ULandscapeTextureStorageProviderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeTextureStorageProviderFactory"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "FLandscapeTexture2DMipMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeTexture2DMipMap"
  },
  {
    "label": "FLandscapeTextureStorageMipProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeTextureStorageMipProvider"
  },
  {
    "label": "FIORequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIORequest"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / TextureMipDataProviderFactory . h \" # include \" Streaming / TextureMipDataProvider . h \" # include \" Containers / ContainersFwd . h \" # include \" Algo / Accumulate . h \" # include \" Serialization / BulkData . h \" # include \" Engine / TextureAllMipDataProviderFactory . h \" # include \" LandscapeTextureStorageProvider . generated . h \" class ULandscapeTextureStorageProviderFactory ; class UTexture2D ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (FByteBulkData BulkData ; void)",
    "insertText": "Serialize(FArchive& Ar, UObject* Owner, uint32 SaveOverrideFlags)"
  },
  {
    "label": "FLandscapeTextureStorageMipProvider()",
    "kind": "Method",
    "detail": "Function (} ; class FLandscapeTextureStorageMipProvider : public FTextureMipDataProvider { public :)",
    "insertText": "FLandscapeTextureStorageMipProvider(ULandscapeTextureStorageProviderFactory* InFactory)"
  },
  {
    "label": "FLandscapeTextureStorageMipProvider()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLandscapeTextureStorageMipProvider()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FTextureUpdateContext& Context, const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "GetMips()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMips(const FTextureUpdateContext& Context, int32 StartingMipIndex, const FTextureMipInfoArray& MipInfos, const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "PollMips()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollMips(const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "AbortPollMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortPollMips()"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUp(const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel(const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "GetCancelThread()",
    "kind": "Method",
    "detail": "Function (ETickThread)",
    "insertText": "GetCancelThread()"
  },
  {
    "label": "CreateAsyncFileCallback()",
    "kind": "Method",
    "detail": "Function (private : ULandscapeTextureStorageProviderFactory* Factory = nullptr ; struct FIORequest { FIoFilenameHash FilenameHash = INVALID_IO_FILENAME_HASH ; TUniquePtr<IBulkDataIORequest> BulkDataIORequest ; uint8* DestMipData = nullptr ; } ; TArray<FIORequest,TInlineAllocator<MAX_TEXTURE_MIP_COUNT>> IORequests ; int32 FirstRequestedMipIndex = INDEX_NONE ; FName TextureName ; bool bPrioritizedIORequest = false ; bool bIORequestCancelled = false ; bool bIORequestAborted = false ; FBulkDataIORequestCallBack AsyncFileCallBack ; void)",
    "insertText": "CreateAsyncFileCallback(const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "ClearIORequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearIORequests()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (int32 NumNonStreamingMips = 0 ; FVector LandscapeGridScale =)",
    "insertText": "FVector(ForceInit)"
  },
  {
    "label": "ApplyTo()",
    "kind": "Method",
    "detail": "Function (TArray<FLandscapeTexture2DMipMap> Mips ; TObjectPtr<UTexture2D> Texture ; # if WITH_EDITORONLY_DATA ULandscapeTextureStorageProviderFactory*)",
    "insertText": "ApplyTo(UTexture2D* TargetTexture, const FVector& InLandsapeGridScale)"
  },
  {
    "label": "CompressMipToBulkData()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "CompressMipToBulkData(int32 MipIndex, int32 MipSizeX, int32 MipSizeY, uint8* SourceData, int32 SourceDataBytes, FByteBulkData& DestBulkData)"
  },
  {
    "label": "CopyMipToBulkData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyMipToBulkData(int32 MipIndex, int32 MipSizeX, int32 MipSizeY, uint8* SourceData, int32 SourceDataBytes, FByteBulkData& DestBulkData)"
  },
  {
    "label": "DecompressMip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecompressMip(uint8* SourceData, int64 SourceDataBytes, uint8* DestData, int64 DestDataBytes, int32 MipIndex)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "AllocateMipDataProvider()",
    "kind": "Method",
    "detail": "Function (FTextureMipDataProvider*)",
    "insertText": "AllocateMipDataProvider(UTexture* Asset)"
  },
  {
    "label": "WillProvideMipDataWithoutDisk()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "WillProvideMipDataWithoutDisk()"
  },
  {
    "label": "GetResourcePostInitState()",
    "kind": "Method",
    "detail": "Function (FStreamableRenderResourceState)",
    "insertText": "GetResourcePostInitState(const UTexture* Owner, bool bAllowStreaming)"
  },
  {
    "label": "DoesMipDataExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesMipDataExist(int32 MipIndex)"
  },
  {
    "label": "GetMip()",
    "kind": "Method",
    "detail": "Function (} const FLandscapeTexture2DMipMap*)",
    "insertText": "GetMip(int32 MipIndex)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int32 Index = MipIndex ;)",
    "insertText": "if(Mips.IsValidIndex(Index))"
  }
]