[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "ITextLayoutMarshaller",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextLayoutMarshaller"
  },
  {
    "label": "EDITORWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EDITORWIDGETS_API"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Framework / SlateDelegates . h \" # include \" Misc / Attribute . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Input / SMultiLineEditableTextBox . h \" class FString ; class FText ; class ITextLayoutMarshaller ; class STemplateStringEditableTextBox : public SMultiLineEditableTextBox { public :)",
    "insertText": "SLATE_BEGIN_ARGS(STemplateStringEditableTextBox)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FText, Text) SLATE_ATTRIBUTE(TArray<FString>, ValidArguments) SLATE_ARGUMENT(TSharedPtr<ITextLayoutMarshaller>, Marshaller) SLATE_EVENT(FOnTextChanged, OnTextChanged) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  }
]