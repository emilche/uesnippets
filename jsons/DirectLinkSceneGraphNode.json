[
  {
    "label": "FParameterStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParameterStore"
  },
  {
    "label": "FSnapshotProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSnapshotProxy"
  },
  {
    "label": "IReferenceProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IReferenceProxy"
  },
  {
    "label": "FReferenceSnapshot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceSnapshot"
  },
  {
    "label": "DIRECTLINK_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DIRECTLINK_API"
  },
  {
    "label": "IReferenceResolutionProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IReferenceResolutionProvider"
  },
  {
    "label": "FNamedReferenceProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNamedReferenceProxy"
  },
  {
    "label": "MakeId()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" DirectLinkCommon . h \" # include \" HAL / Platform . h \" # include \" Misc / Guid . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" namespace DirectLink { class FParameterStore ; class FSnapshotProxy ; class IReferenceProxy ; struct FReferenceSnapshot ; class FSceneGraphSharedState { public : FSceneGraphId)",
    "insertText": "MakeId()"
  },
  {
    "label": "ISceneGraphNode()",
    "kind": "Method",
    "detail": "Function (} ; class ISceneGraphNode { public : ~)",
    "insertText": "ISceneGraphNode()"
  },
  {
    "label": "MakeSharedState()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSceneGraphSharedState>)",
    "insertText": "MakeSharedState()"
  },
  {
    "label": "GetSharedState()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FSceneGraphSharedState>)",
    "insertText": "GetSharedState()"
  },
  {
    "label": "GetStore()",
    "kind": "Method",
    "detail": "Function (const FParameterStore&)",
    "insertText": "GetStore()"
  },
  {
    "label": "CustomSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomSerialize(class FSnapshotProxy& Ar)"
  },
  {
    "label": "ISceneGraphNode()",
    "kind": "Method",
    "detail": "Function (const_cast<)",
    "insertText": "ISceneGraphNode(this)->CustomSerialize(Ar)"
  },
  {
    "label": "GetNodeId()",
    "kind": "Method",
    "detail": "Function (} FSceneGraphId)",
    "insertText": "GetNodeId()"
  },
  {
    "label": "RegisterReferenceProxy()",
    "kind": "Method",
    "detail": "Function (SceneGraphId = Id ; } void)",
    "insertText": "RegisterReferenceProxy(class IReferenceProxy& View, FName Name)"
  },
  {
    "label": "GetReferenceProxyCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetReferenceProxyCount()"
  },
  {
    "label": "GetReferenceProxy()",
    "kind": "Method",
    "detail": "Function (class IReferenceProxy*)",
    "insertText": "GetReferenceProxy(int32 Index)"
  },
  {
    "label": "GetReferenceProxyName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetReferenceProxyName(int32 Index)"
  },
  {
    "label": "RegisterReference()",
    "kind": "Method",
    "detail": "Function (FSceneGraphId)",
    "insertText": "RegisterReference(ISceneGraphNode* Referenced)"
  },
  {
    "label": "UpdateRefs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRefs(class IReferenceResolutionProvider& Resolver, const FReferenceSnapshot& NewRefs)"
  },
  {
    "label": "IReferenceResolutionProvider()",
    "kind": "Method",
    "detail": "Function (private : FSceneGraphId SceneGraphId = 0 ; TSharedPtr<FSceneGraphSharedState> SharedState ; struct FNamedReferenceProxy { FName Name ; IReferenceProxy* View ; } ; TArray<FNamedReferenceProxy> ReferenceProxies ; } ; class IReferenceResolutionProvider { public : ~)",
    "insertText": "IReferenceResolutionProvider()"
  },
  {
    "label": "AsSharedPtr()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISceneGraphNode>)",
    "insertText": "AsSharedPtr(FSceneGraphId NodeId)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Num()"
  },
  {
    "label": "GetNode()",
    "kind": "Method",
    "detail": "Function (ISceneGraphNode*)",
    "insertText": "GetNode(int32 Index)"
  },
  {
    "label": "SetNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNodes(IReferenceResolutionProvider& ResolutionProvider, const TArray<FSceneGraphId>& NodeIds)"
  }
]