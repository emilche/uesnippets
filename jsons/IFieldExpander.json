[
  {
    "label": "FObjectPropertyBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPropertyBase"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FStructProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructProperty"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "IFieldExpander",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFieldExpander"
  },
  {
    "label": "FFieldExpander_Default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFieldExpander_Default"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CanExpandObject()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Class . h \" # include \" UObject / Object . h \" # include \" UObject / UnrealType . h \" class FObjectPropertyBase ; class FProperty ; class FStructProperty ; class UFunction ; class UStruct ; namespace UE::PropertyViewer { class IFieldExpander { public : TOptional<const UClass*>)",
    "insertText": "CanExpandObject(const FObjectPropertyBase* Property, const UObject* Instance)"
  },
  {
    "label": "CanExpandScriptStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExpandScriptStruct(const FStructProperty* StructProperty)"
  },
  {
    "label": "GetExpandedFunction()",
    "kind": "Method",
    "detail": "Function (TOptional<const UStruct*>)",
    "insertText": "GetExpandedFunction(const UFunction* Function)"
  },
  {
    "label": "IFieldExpander()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IFieldExpander()"
  },
  {
    "label": "FFieldExpander_Default()",
    "kind": "Method",
    "detail": "Function (} } ; class FFieldExpander_Default : public IFieldExpander { public :)",
    "insertText": "FFieldExpander_Default()"
  },
  {
    "label": "EnumHasAllFlags()",
    "kind": "Method",
    "detail": "Function (const bool bUseInstanceClass =)",
    "insertText": "EnumHasAllFlags(ExpandObject, EObjectExpandFlag::UseInstanceClass)"
  },
  {
    "label": "EnumHasAllFlags()",
    "kind": "Method",
    "detail": "Function (const bool bOnlyIfInstanceValid =)",
    "insertText": "EnumHasAllFlags(ExpandObject, EObjectExpandFlag::RequireValidInstance)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(bUseInstanceClass && Instance)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} return Property -> PropertyClass .)",
    "insertText": "Get()"
  },
  {
    "label": "CanExpandScriptStruct()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanExpandScriptStruct(const FStructProperty*)"
  },
  {
    "label": "UStruct()",
    "kind": "Method",
    "detail": "Function (} } return TOptional<const)",
    "insertText": "UStruct()"
  },
  {
    "label": "SetExpandObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetExpandObject(EObjectExpandFlag InExpandObject)"
  },
  {
    "label": "SetExpandScriptStruct()",
    "kind": "Method",
    "detail": "Function (ExpandObject = InExpandObject ; } void)",
    "insertText": "SetExpandScriptStruct(bool bInExpandScriptStruct)"
  },
  {
    "label": "SetExpandFunction()",
    "kind": "Method",
    "detail": "Function (ExpandFunction = bInExpandFunction ? EFunctionExpand::FunctionProperties : EFunctionExpand::None ; } void)",
    "insertText": "SetExpandFunction(EFunctionExpand InExpandFunction)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (ExpandFunction = InExpandFunction ; } private : EObjectExpandFlag ExpandObject = EObjectExpandFlag::None ; bool bExpandScriptStruct = false ; EFunctionExpand ExpandFunction = EFunctionExpand::None ; } ;)",
    "insertText": "ENUM_CLASS_FLAGS(FFieldExpander_Default::EObjectExpandFlag)"
  }
]