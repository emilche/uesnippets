[
  {
    "label": "CopyPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPlane(const uint8_t* src_y,\n               int src_stride_y,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               int width,\n               int height)"
  },
  {
    "label": "CopyPlane_16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPlane_16(const uint16_t* src_y,\n                  int src_stride_y,\n                  uint16_t* dst_y,\n                  int dst_stride_y,\n                  int width,\n                  int height)"
  },
  {
    "label": "Convert16To8Plane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Convert16To8Plane(const uint16_t* src_y,\n                       int src_stride_y,\n                       uint8_t* dst_y,\n                       int dst_stride_y,\n                       int scale,  // 16384 for 10 bits\n                       int width,\n                       int height)"
  },
  {
    "label": "Convert8To16Plane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Convert8To16Plane(const uint8_t* src_y,\n                       int src_stride_y,\n                       uint16_t* dst_y,\n                       int dst_stride_y,\n                       int scale,  // 1024 for 10 bits\n                       int width,\n                       int height)"
  },
  {
    "label": "SetPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlane(uint8_t* dst_y,\n              int dst_stride_y,\n              int width,\n              int height,\n              uint32_t value)"
  },
  {
    "label": "DetilePlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetilePlane(const uint8_t* src_y,\n                 int src_stride_y,\n                 uint8_t* dst_y,\n                 int dst_stride_y,\n                 int width,\n                 int height,\n                 int tile_height)"
  },
  {
    "label": "DetileSplitUVPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetileSplitUVPlane(const uint8_t* src_uv,\n                        int src_stride_uv,\n                        uint8_t* dst_u,\n                        int dst_stride_u,\n                        uint8_t* dst_v,\n                        int dst_stride_v,\n                        int width,\n                        int height,\n                        int tile_height)"
  },
  {
    "label": "DetileToYUY2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetileToYUY2(const uint8_t* src_y,\n                  int src_stride_y,\n                  const uint8_t* src_uv,\n                  int src_stride_uv,\n                  uint8_t* dst_yuy2,\n                  int dst_stride_yuy2,\n                  int width,\n                  int height,\n                  int tile_height)"
  },
  {
    "label": "SplitUVPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitUVPlane(const uint8_t* src_uv,\n                  int src_stride_uv,\n                  uint8_t* dst_u,\n                  int dst_stride_u,\n                  uint8_t* dst_v,\n                  int dst_stride_v,\n                  int width,\n                  int height)"
  },
  {
    "label": "MergeUVPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeUVPlane(const uint8_t* src_u,\n                  int src_stride_u,\n                  const uint8_t* src_v,\n                  int src_stride_v,\n                  uint8_t* dst_uv,\n                  int dst_stride_uv,\n                  int width,\n                  int height)"
  },
  {
    "label": "SplitUVPlane_16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitUVPlane_16(const uint16_t* src_uv,\n                     int src_stride_uv,\n                     uint16_t* dst_u,\n                     int dst_stride_u,\n                     uint16_t* dst_v,\n                     int dst_stride_v,\n                     int width,\n                     int height,\n                     int depth)"
  },
  {
    "label": "MergeUVPlane_16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeUVPlane_16(const uint16_t* src_u,\n                     int src_stride_u,\n                     const uint16_t* src_v,\n                     int src_stride_v,\n                     uint16_t* dst_uv,\n                     int dst_stride_uv,\n                     int width,\n                     int height,\n                     int depth)"
  },
  {
    "label": "ConvertToMSBPlane_16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToMSBPlane_16(const uint16_t* src_y,\n                          int src_stride_y,\n                          uint16_t* dst_y,\n                          int dst_stride_y,\n                          int width,\n                          int height,\n                          int depth)"
  },
  {
    "label": "ConvertToLSBPlane_16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToLSBPlane_16(const uint16_t* src_y,\n                          int src_stride_y,\n                          uint16_t* dst_y,\n                          int dst_stride_y,\n                          int width,\n                          int height,\n                          int depth)"
  },
  {
    "label": "HalfMergeUVPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HalfMergeUVPlane(const uint8_t* src_u,\n                      int src_stride_u,\n                      const uint8_t* src_v,\n                      int src_stride_v,\n                      uint8_t* dst_uv,\n                      int dst_stride_uv,\n                      int width,\n                      int height)"
  },
  {
    "label": "SwapUVPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapUVPlane(const uint8_t* src_uv,\n                 int src_stride_uv,\n                 uint8_t* dst_vu,\n                 int dst_stride_vu,\n                 int width,\n                 int height)"
  },
  {
    "label": "SplitRGBPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitRGBPlane(const uint8_t* src_rgb,\n                   int src_stride_rgb,\n                   uint8_t* dst_r,\n                   int dst_stride_r,\n                   uint8_t* dst_g,\n                   int dst_stride_g,\n                   uint8_t* dst_b,\n                   int dst_stride_b,\n                   int width,\n                   int height)"
  },
  {
    "label": "MergeRGBPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeRGBPlane(const uint8_t* src_r,\n                   int src_stride_r,\n                   const uint8_t* src_g,\n                   int src_stride_g,\n                   const uint8_t* src_b,\n                   int src_stride_b,\n                   uint8_t* dst_rgb,\n                   int dst_stride_rgb,\n                   int width,\n                   int height)"
  },
  {
    "label": "SplitARGBPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitARGBPlane(const uint8_t* src_argb,\n                    int src_stride_argb,\n                    uint8_t* dst_r,\n                    int dst_stride_r,\n                    uint8_t* dst_g,\n                    int dst_stride_g,\n                    uint8_t* dst_b,\n                    int dst_stride_b,\n                    uint8_t* dst_a,\n                    int dst_stride_a,\n                    int width,\n                    int height)"
  },
  {
    "label": "MergeARGBPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeARGBPlane(const uint8_t* src_r,\n                    int src_stride_r,\n                    const uint8_t* src_g,\n                    int src_stride_g,\n                    const uint8_t* src_b,\n                    int src_stride_b,\n                    const uint8_t* src_a,\n                    int src_stride_a,\n                    uint8_t* dst_argb,\n                    int dst_stride_argb,\n                    int width,\n                    int height)"
  },
  {
    "label": "MergeXR30Plane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeXR30Plane(const uint16_t* src_r,\n                    int src_stride_r,\n                    const uint16_t* src_g,\n                    int src_stride_g,\n                    const uint16_t* src_b,\n                    int src_stride_b,\n                    uint8_t* dst_ar30,\n                    int dst_stride_ar30,\n                    int width,\n                    int height,\n                    int depth)"
  },
  {
    "label": "MergeAR64Plane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeAR64Plane(const uint16_t* src_r,\n                    int src_stride_r,\n                    const uint16_t* src_g,\n                    int src_stride_g,\n                    const uint16_t* src_b,\n                    int src_stride_b,\n                    const uint16_t* src_a,\n                    int src_stride_a,\n                    uint16_t* dst_ar64,\n                    int dst_stride_ar64,\n                    int width,\n                    int height,\n                    int depth)"
  },
  {
    "label": "MergeARGB16To8Plane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeARGB16To8Plane(const uint16_t* src_r,\n                         int src_stride_r,\n                         const uint16_t* src_g,\n                         int src_stride_g,\n                         const uint16_t* src_b,\n                         int src_stride_b,\n                         const uint16_t* src_a,\n                         int src_stride_a,\n                         uint8_t* dst_argb,\n                         int dst_stride_argb,\n                         int width,\n                         int height,\n                         int depth)"
  },
  {
    "label": "I400ToI400()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I400ToI400(const uint8_t* src_y,\n               int src_stride_y,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               int width,\n               int height)"
  },
  {
    "label": "I422Copy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I422Copy(const uint8_t* src_y,\n             int src_stride_y,\n             const uint8_t* src_u,\n             int src_stride_u,\n             const uint8_t* src_v,\n             int src_stride_v,\n             uint8_t* dst_y,\n             int dst_stride_y,\n             uint8_t* dst_u,\n             int dst_stride_u,\n             uint8_t* dst_v,\n             int dst_stride_v,\n             int width,\n             int height)"
  },
  {
    "label": "I444Copy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I444Copy(const uint8_t* src_y,\n             int src_stride_y,\n             const uint8_t* src_u,\n             int src_stride_u,\n             const uint8_t* src_v,\n             int src_stride_v,\n             uint8_t* dst_y,\n             int dst_stride_y,\n             uint8_t* dst_u,\n             int dst_stride_u,\n             uint8_t* dst_v,\n             int dst_stride_v,\n             int width,\n             int height)"
  },
  {
    "label": "I210Copy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I210Copy(const uint16_t* src_y,\n             int src_stride_y,\n             const uint16_t* src_u,\n             int src_stride_u,\n             const uint16_t* src_v,\n             int src_stride_v,\n             uint16_t* dst_y,\n             int dst_stride_y,\n             uint16_t* dst_u,\n             int dst_stride_u,\n             uint16_t* dst_v,\n             int dst_stride_v,\n             int width,\n             int height)"
  },
  {
    "label": "NV12Copy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NV12Copy(const uint8_t* src_y,\n             int src_stride_y,\n             const uint8_t* src_uv,\n             int src_stride_uv,\n             uint8_t* dst_y,\n             int dst_stride_y,\n             uint8_t* dst_uv,\n             int dst_stride_uv,\n             int width,\n             int height)"
  },
  {
    "label": "NV21Copy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NV21Copy(const uint8_t* src_y,\n             int src_stride_y,\n             const uint8_t* src_vu,\n             int src_stride_vu,\n             uint8_t* dst_y,\n             int dst_stride_y,\n             uint8_t* dst_vu,\n             int dst_stride_vu,\n             int width,\n             int height)"
  },
  {
    "label": "YUY2ToI422()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "YUY2ToI422(const uint8_t* src_yuy2,\n               int src_stride_yuy2,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               uint8_t* dst_u,\n               int dst_stride_u,\n               uint8_t* dst_v,\n               int dst_stride_v,\n               int width,\n               int height)"
  },
  {
    "label": "UYVYToI422()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "UYVYToI422(const uint8_t* src_uyvy,\n               int src_stride_uyvy,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               uint8_t* dst_u,\n               int dst_stride_u,\n               uint8_t* dst_v,\n               int dst_stride_v,\n               int width,\n               int height)"
  },
  {
    "label": "YUY2ToNV12()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "YUY2ToNV12(const uint8_t* src_yuy2,\n               int src_stride_yuy2,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               uint8_t* dst_uv,\n               int dst_stride_uv,\n               int width,\n               int height)"
  },
  {
    "label": "UYVYToNV12()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "UYVYToNV12(const uint8_t* src_uyvy,\n               int src_stride_uyvy,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               uint8_t* dst_uv,\n               int dst_stride_uv,\n               int width,\n               int height)"
  },
  {
    "label": "NV21ToNV12()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NV21ToNV12(const uint8_t* src_y,\n               int src_stride_y,\n               const uint8_t* src_vu,\n               int src_stride_vu,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               uint8_t* dst_uv,\n               int dst_stride_uv,\n               int width,\n               int height)"
  },
  {
    "label": "YUY2ToY()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "YUY2ToY(const uint8_t* src_yuy2,\n            int src_stride_yuy2,\n            uint8_t* dst_y,\n            int dst_stride_y,\n            int width,\n            int height)"
  },
  {
    "label": "UYVYToY()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "UYVYToY(const uint8_t* src_uyvy,\n            int src_stride_uyvy,\n            uint8_t* dst_y,\n            int dst_stride_y,\n            int width,\n            int height)"
  },
  {
    "label": "I420ToI400()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I420ToI400(const uint8_t* src_y,\n               int src_stride_y,\n               const uint8_t* src_u,\n               int src_stride_u,\n               const uint8_t* src_v,\n               int src_stride_v,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               int width,\n               int height)"
  },
  {
    "label": "I420Mirror()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I420Mirror(const uint8_t* src_y,\n               int src_stride_y,\n               const uint8_t* src_u,\n               int src_stride_u,\n               const uint8_t* src_v,\n               int src_stride_v,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               uint8_t* dst_u,\n               int dst_stride_u,\n               uint8_t* dst_v,\n               int dst_stride_v,\n               int width,\n               int height)"
  },
  {
    "label": "I400Mirror()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I400Mirror(const uint8_t* src_y,\n               int src_stride_y,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               int width,\n               int height)"
  },
  {
    "label": "NV12Mirror()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NV12Mirror(const uint8_t* src_y,\n               int src_stride_y,\n               const uint8_t* src_uv,\n               int src_stride_uv,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               uint8_t* dst_uv,\n               int dst_stride_uv,\n               int width,\n               int height)"
  },
  {
    "label": "ARGBMirror()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBMirror(const uint8_t* src_argb,\n               int src_stride_argb,\n               uint8_t* dst_argb,\n               int dst_stride_argb,\n               int width,\n               int height)"
  },
  {
    "label": "RGB24Mirror()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RGB24Mirror(const uint8_t* src_rgb24,\n                int src_stride_rgb24,\n                uint8_t* dst_rgb24,\n                int dst_stride_rgb24,\n                int width,\n                int height)"
  },
  {
    "label": "MirrorPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MirrorPlane(const uint8_t* src_y,\n                 int src_stride_y,\n                 uint8_t* dst_y,\n                 int dst_stride_y,\n                 int width,\n                 int height)"
  },
  {
    "label": "MirrorUVPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MirrorUVPlane(const uint8_t* src_uv,\n                   int src_stride_uv,\n                   uint8_t* dst_uv,\n                   int dst_stride_uv,\n                   int width,\n                   int height)"
  },
  {
    "label": "RAWToRGB24()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RAWToRGB24(const uint8_t* src_raw,\n               int src_stride_raw,\n               uint8_t* dst_rgb24,\n               int dst_stride_rgb24,\n               int width,\n               int height)"
  },
  {
    "label": "I420Rect()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I420Rect(uint8_t* dst_y,\n             int dst_stride_y,\n             uint8_t* dst_u,\n             int dst_stride_u,\n             uint8_t* dst_v,\n             int dst_stride_v,\n             int x,\n             int y,\n             int width,\n             int height,\n             int value_y,\n             int value_u,\n             int value_v)"
  },
  {
    "label": "ARGBRect()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBRect(uint8_t* dst_argb,\n             int dst_stride_argb,\n             int dst_x,\n             int dst_y,\n             int width,\n             int height,\n             uint32_t value)"
  },
  {
    "label": "ARGBGrayTo()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBGrayTo(const uint8_t* src_argb,\n               int src_stride_argb,\n               uint8_t* dst_argb,\n               int dst_stride_argb,\n               int width,\n               int height)"
  },
  {
    "label": "ARGBGray()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBGray(uint8_t* dst_argb,\n             int dst_stride_argb,\n             int dst_x,\n             int dst_y,\n             int width,\n             int height)"
  },
  {
    "label": "ARGBSepia()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBSepia(uint8_t* dst_argb,\n              int dst_stride_argb,\n              int dst_x,\n              int dst_y,\n              int width,\n              int height)"
  },
  {
    "label": "ARGBColorMatrix()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBColorMatrix(const uint8_t* src_argb,\n                    int src_stride_argb,\n                    uint8_t* dst_argb,\n                    int dst_stride_argb,\n                    const int8_t* matrix_argb,\n                    int width,\n                    int height)"
  },
  {
    "label": "RGBColorMatrix()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RGBColorMatrix(uint8_t* dst_argb,\n                   int dst_stride_argb,\n                   const int8_t* matrix_rgb,\n                   int dst_x,\n                   int dst_y,\n                   int width,\n                   int height)"
  },
  {
    "label": "ARGBColorTable()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBColorTable(uint8_t* dst_argb,\n                   int dst_stride_argb,\n                   const uint8_t* table_argb,\n                   int dst_x,\n                   int dst_y,\n                   int width,\n                   int height)"
  },
  {
    "label": "RGBColorTable()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RGBColorTable(uint8_t* dst_argb,\n                  int dst_stride_argb,\n                  const uint8_t* table_argb,\n                  int dst_x,\n                  int dst_y,\n                  int width,\n                  int height)"
  },
  {
    "label": "ARGBLumaColorTable()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBLumaColorTable(const uint8_t* src_argb,\n                       int src_stride_argb,\n                       uint8_t* dst_argb,\n                       int dst_stride_argb,\n                       const uint8_t* luma,\n                       int width,\n                       int height)"
  },
  {
    "label": "ARGBPolynomial()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBPolynomial(const uint8_t* src_argb,\n                   int src_stride_argb,\n                   uint8_t* dst_argb,\n                   int dst_stride_argb,\n                   const float* poly,\n                   int width,\n                   int height)"
  },
  {
    "label": "HalfFloatPlane()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "HalfFloatPlane(const uint16_t* src_y,\n                   int src_stride_y,\n                   uint16_t* dst_y,\n                   int dst_stride_y,\n                   float scale,\n                   int width,\n                   int height)"
  },
  {
    "label": "ByteToFloat()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ByteToFloat(const uint8_t* src_y, float* dst_y, float scale, int width)"
  },
  {
    "label": "ARGBQuantize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBQuantize(uint8_t* dst_argb,\n                 int dst_stride_argb,\n                 int scale,\n                 int interval_size,\n                 int interval_offset,\n                 int dst_x,\n                 int dst_y,\n                 int width,\n                 int height)"
  },
  {
    "label": "ARGBCopy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBCopy(const uint8_t* src_argb,\n             int src_stride_argb,\n             uint8_t* dst_argb,\n             int dst_stride_argb,\n             int width,\n             int height)"
  },
  {
    "label": "ARGBCopyAlpha()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBCopyAlpha(const uint8_t* src_argb,\n                  int src_stride_argb,\n                  uint8_t* dst_argb,\n                  int dst_stride_argb,\n                  int width,\n                  int height)"
  },
  {
    "label": "ARGBExtractAlpha()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBExtractAlpha(const uint8_t* src_argb,\n                     int src_stride_argb,\n                     uint8_t* dst_a,\n                     int dst_stride_a,\n                     int width,\n                     int height)"
  },
  {
    "label": "ARGBCopyYToAlpha()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBCopyYToAlpha(const uint8_t* src_y,\n                     int src_stride_y,\n                     uint8_t* dst_argb,\n                     int dst_stride_argb,\n                     int width,\n                     int height)"
  },
  {
    "label": "GetARGBBlend()",
    "kind": "Method",
    "detail": "Function (ARGBBlendRow)",
    "insertText": "GetARGBBlend()"
  },
  {
    "label": "ARGBBlend()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBBlend(const uint8_t* src_argb0,\n              int src_stride_argb0,\n              const uint8_t* src_argb1,\n              int src_stride_argb1,\n              uint8_t* dst_argb,\n              int dst_stride_argb,\n              int width,\n              int height)"
  },
  {
    "label": "BlendPlane()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BlendPlane(const uint8_t* src_y0,\n               int src_stride_y0,\n               const uint8_t* src_y1,\n               int src_stride_y1,\n               const uint8_t* alpha,\n               int alpha_stride,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               int width,\n               int height)"
  },
  {
    "label": "I420Blend()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I420Blend(const uint8_t* src_y0,\n              int src_stride_y0,\n              const uint8_t* src_u0,\n              int src_stride_u0,\n              const uint8_t* src_v0,\n              int src_stride_v0,\n              const uint8_t* src_y1,\n              int src_stride_y1,\n              const uint8_t* src_u1,\n              int src_stride_u1,\n              const uint8_t* src_v1,\n              int src_stride_v1,\n              const uint8_t* alpha,\n              int alpha_stride,\n              uint8_t* dst_y,\n              int dst_stride_y,\n              uint8_t* dst_u,\n              int dst_stride_u,\n              uint8_t* dst_v,\n              int dst_stride_v,\n              int width,\n              int height)"
  },
  {
    "label": "ARGBMultiply()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBMultiply(const uint8_t* src_argb0,\n                 int src_stride_argb0,\n                 const uint8_t* src_argb1,\n                 int src_stride_argb1,\n                 uint8_t* dst_argb,\n                 int dst_stride_argb,\n                 int width,\n                 int height)"
  },
  {
    "label": "ARGBAdd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBAdd(const uint8_t* src_argb0,\n            int src_stride_argb0,\n            const uint8_t* src_argb1,\n            int src_stride_argb1,\n            uint8_t* dst_argb,\n            int dst_stride_argb,\n            int width,\n            int height)"
  },
  {
    "label": "ARGBSubtract()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBSubtract(const uint8_t* src_argb0,\n                 int src_stride_argb0,\n                 const uint8_t* src_argb1,\n                 int src_stride_argb1,\n                 uint8_t* dst_argb,\n                 int dst_stride_argb,\n                 int width,\n                 int height)"
  },
  {
    "label": "I422ToYUY2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I422ToYUY2(const uint8_t* src_y,\n               int src_stride_y,\n               const uint8_t* src_u,\n               int src_stride_u,\n               const uint8_t* src_v,\n               int src_stride_v,\n               uint8_t* dst_yuy2,\n               int dst_stride_yuy2,\n               int width,\n               int height)"
  },
  {
    "label": "I422ToUYVY()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I422ToUYVY(const uint8_t* src_y,\n               int src_stride_y,\n               const uint8_t* src_u,\n               int src_stride_u,\n               const uint8_t* src_v,\n               int src_stride_v,\n               uint8_t* dst_uyvy,\n               int dst_stride_uyvy,\n               int width,\n               int height)"
  },
  {
    "label": "ARGBAttenuate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBAttenuate(const uint8_t* src_argb,\n                  int src_stride_argb,\n                  uint8_t* dst_argb,\n                  int dst_stride_argb,\n                  int width,\n                  int height)"
  },
  {
    "label": "ARGBUnattenuate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBUnattenuate(const uint8_t* src_argb,\n                    int src_stride_argb,\n                    uint8_t* dst_argb,\n                    int dst_stride_argb,\n                    int width,\n                    int height)"
  },
  {
    "label": "ARGBComputeCumulativeSum()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBComputeCumulativeSum(const uint8_t* src_argb,\n                             int src_stride_argb,\n                             int32_t* dst_cumsum,\n                             int dst_stride32_cumsum,\n                             int width,\n                             int height)"
  },
  {
    "label": "ARGBBlur()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBBlur(const uint8_t* src_argb,\n             int src_stride_argb,\n             uint8_t* dst_argb,\n             int dst_stride_argb,\n             int32_t* dst_cumsum,\n             int dst_stride32_cumsum,\n             int width,\n             int height,\n             int radius)"
  },
  {
    "label": "GaussPlane_F32()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GaussPlane_F32(const float* src,\n                   int src_stride,\n                   float* dst,\n                   int dst_stride,\n                   int width,\n                   int height)"
  },
  {
    "label": "ARGBShade()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBShade(const uint8_t* src_argb,\n              int src_stride_argb,\n              uint8_t* dst_argb,\n              int dst_stride_argb,\n              int width,\n              int height,\n              uint32_t value)"
  },
  {
    "label": "InterpolatePlane()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "InterpolatePlane(const uint8_t* src0,\n                     int src_stride0,\n                     const uint8_t* src1,\n                     int src_stride1,\n                     uint8_t* dst,\n                     int dst_stride,\n                     int width,\n                     int height,\n                     int interpolation)"
  },
  {
    "label": "InterpolatePlane_16()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "InterpolatePlane_16(const uint16_t* src0,\n                        int src_stride0,  // measured in 16 bit pixels\n                        const uint16_t* src1,\n                        int src_stride1,\n                        uint16_t* dst,\n                        int dst_stride,\n                        int width,\n                        int height,\n                        int interpolation)"
  },
  {
    "label": "ARGBInterpolate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBInterpolate(const uint8_t* src_argb0,\n                    int src_stride_argb0,\n                    const uint8_t* src_argb1,\n                    int src_stride_argb1,\n                    uint8_t* dst_argb,\n                    int dst_stride_argb,\n                    int width,\n                    int height,\n                    int interpolation)"
  },
  {
    "label": "I420Interpolate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "I420Interpolate(const uint8_t* src0_y,\n                    int src0_stride_y,\n                    const uint8_t* src0_u,\n                    int src0_stride_u,\n                    const uint8_t* src0_v,\n                    int src0_stride_v,\n                    const uint8_t* src1_y,\n                    int src1_stride_y,\n                    const uint8_t* src1_u,\n                    int src1_stride_u,\n                    const uint8_t* src1_v,\n                    int src1_stride_v,\n                    uint8_t* dst_y,\n                    int dst_stride_y,\n                    uint8_t* dst_u,\n                    int dst_stride_u,\n                    uint8_t* dst_v,\n                    int dst_stride_v,\n                    int width,\n                    int height,\n                    int interpolation)"
  },
  {
    "label": "ARGBAffineRow_C()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ARGBAffineRow_C(const uint8_t* src_argb,\n                     int src_argb_stride,\n                     uint8_t* dst_argb,\n                     const float* uv_dudv,\n                     int width)"
  },
  {
    "label": "ARGBAffineRow_SSE2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ARGBAffineRow_SSE2(const uint8_t* src_argb,\n                        int src_argb_stride,\n                        uint8_t* dst_argb,\n                        const float* uv_dudv,\n                        int width)"
  },
  {
    "label": "ARGBShuffle()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBShuffle(const uint8_t* src_bgra,\n                int src_stride_bgra,\n                uint8_t* dst_argb,\n                int dst_stride_argb,\n                const uint8_t* shuffler,\n                int width,\n                int height)"
  },
  {
    "label": "AR64Shuffle()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AR64Shuffle(const uint16_t* src_ar64,\n                int src_stride_ar64,\n                uint16_t* dst_ar64,\n                int dst_stride_ar64,\n                const uint8_t* shuffler,\n                int width,\n                int height)"
  },
  {
    "label": "ARGBSobelToPlane()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBSobelToPlane(const uint8_t* src_argb,\n                     int src_stride_argb,\n                     uint8_t* dst_y,\n                     int dst_stride_y,\n                     int width,\n                     int height)"
  },
  {
    "label": "ARGBSobel()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBSobel(const uint8_t* src_argb,\n              int src_stride_argb,\n              uint8_t* dst_argb,\n              int dst_stride_argb,\n              int width,\n              int height)"
  },
  {
    "label": "ARGBSobelXY()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ARGBSobelXY(const uint8_t* src_argb,\n                int src_stride_argb,\n                uint8_t* dst_argb,\n                int dst_stride_argb,\n                int width,\n                int height)"
  }
]