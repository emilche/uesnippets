[
  {
    "label": "CORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CORE_API"
  },
  {
    "label": "InterlockedCompareExchange128()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / GenericPlatformAtomics . h \" # include \" CoreTypes . h \" # include \" Clang / ClangPlatformAtomics . h \" PRAGMA_DISABLE_DEPRECATION_WARNINGS struct FApplePlatformAtomics : public FClangPlatformAtomics { # if PLATFORM_HAS_128BIT_ATOMICS bool)",
    "insertText": "InterlockedCompareExchange128(volatile FInt128* Dest, const FInt128& Exchange, FInt128* Comparand)"
  },
  {
    "label": "Expected()",
    "kind": "Method",
    "detail": "Function (__uint128_t*)",
    "insertText": "Expected((__uint128_t*)Comparand)"
  },
  {
    "label": "Desired()",
    "kind": "Method",
    "detail": "Function (__uint128_t)",
    "insertText": "Desired((__uint128_t const&)Exchange)"
  },
  {
    "label": "CanUseCompareExchange128()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanUseCompareExchange128()"
  }
]