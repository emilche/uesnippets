[
  {
    "label": "FImageView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImageView"
  },
  {
    "label": "TextureFilter",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureFilter"
  },
  {
    "label": "FOpenColorIOWrapperConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenColorIOWrapperConfig"
  },
  {
    "label": "EAddWorkingColorSpaceOption",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAddWorkingColorSpaceOption"
  },
  {
    "label": "FOpenColorIOConfigPimpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenColorIOConfigPimpl"
  },
  {
    "label": "FOpenColorIOWrapperProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenColorIOWrapperProcessor"
  },
  {
    "label": "FOpenColorIOWrapperGPUProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenColorIOWrapperGPUProcessor"
  },
  {
    "label": "FOpenColorIOWrapperSourceColorSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenColorIOWrapperSourceColorSettings"
  },
  {
    "label": "FOpenColorIOWrapperEngineConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenColorIOWrapperEngineConfig"
  },
  {
    "label": "FOpenColorIOProcessorPimpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenColorIOProcessorPimpl"
  },
  {
    "label": "FOpenColorIOGPUProcessorPimpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenColorIOGPUProcessorPimpl"
  },
  {
    "label": "GetWorkingColorSpaceName()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_OCIO # include \" CoreTypes . h \" # include \" Containers / ContainersFwd . h \" # include \" Containers / StaticArray . h \" # include \" Math / Vector . h \" # include \" Templates / PimplPtr . h \" # include \" Templates / UniquePtr . h \" # include \" ColorManagement / ColorManagementDefines . h \" struct FImageView ; enum TextureFilter : int ; namespace OpenColorIOWrapper { const TCHAR*)",
    "insertText": "GetWorkingColorSpaceName()"
  },
  {
    "label": "GetShaderFunctionName()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "GetShaderFunctionName()"
  },
  {
    "label": "GetVersion()",
    "kind": "Method",
    "detail": "Function (} uint32 Legacy3dEdgeLength = 6 5 ; const TCHAR*)",
    "insertText": "GetVersion()"
  },
  {
    "label": "GetVersionHex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetVersionHex()"
  },
  {
    "label": "ClearAllCaches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllCaches()"
  },
  {
    "label": "FOpenColorIOWrapperConfig()",
    "kind": "Method",
    "detail": "Function (} class FOpenColorIOWrapperConfig { public : enum EAddWorkingColorSpaceOption { WCS_None,WCS_AsInterchangeSpace } ;)",
    "insertText": "FOpenColorIOWrapperConfig()"
  },
  {
    "label": "FOpenColorIOWrapperConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FOpenColorIOWrapperConfig(FStringView InFilePath, EAddWorkingColorSpaceOption InOption = WCS_None)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetNumColorSpaces()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumColorSpaces()"
  },
  {
    "label": "GetColorSpaceName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetColorSpaceName(int32 Index)"
  },
  {
    "label": "GetColorSpaceIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetColorSpaceIndex(const TCHAR* InColorSpaceName)"
  },
  {
    "label": "GetColorSpaceFamilyName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetColorSpaceFamilyName(const TCHAR* InColorSpaceName)"
  },
  {
    "label": "GetNumDisplays()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumDisplays()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDisplayName(int32 Index)"
  },
  {
    "label": "GetNumViews()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumViews(const TCHAR* InDisplayName)"
  },
  {
    "label": "GetViewName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetViewName(const TCHAR* InDisplayName, int32 Index)"
  },
  {
    "label": "GetDisplayViewTransformName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDisplayViewTransformName(const TCHAR* InDisplayName, const TCHAR* InViewName)"
  },
  {
    "label": "GetCurrentContextStringVars()",
    "kind": "Method",
    "detail": "Function (TMap<FString,FString>)",
    "insertText": "GetCurrentContextStringVars()"
  },
  {
    "label": "GetCacheID()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCacheID()"
  },
  {
    "label": "GetDebugString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugString()"
  },
  {
    "label": "FOpenColorIOWrapperEngineConfig()",
    "kind": "Method",
    "detail": "Function (protected : TPimplPtr<struct FOpenColorIOConfigPimpl,EPimplPtrMode::DeepCopy> Pimpl ; class FOpenColorIOWrapperProcessor ; class FOpenColorIOWrapperGPUProcessor ; } ; struct FOpenColorIOWrapperSourceColorSettings { UE::Color::EEncoding EncodingOverride = UE::Color::EEncoding::None ; UE::Color::EColorSpace ColorSpace = UE::Color::EColorSpace::None ; TOptional<TStaticArray<FVector2d,4>> ColorSpaceOverride = { } ; UE::Color::EChromaticAdaptationMethod ChromaticAdaptationMethod = UE::Color::EChromaticAdaptationMethod::None ; } ; class FOpenColorIOWrapperEngineConfig : public FOpenColorIOWrapperConfig { public :)",
    "insertText": "FOpenColorIOWrapperEngineConfig()"
  },
  {
    "label": "FOpenColorIOWrapperEngineConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FOpenColorIOWrapperEngineConfig(FStringView InFilePath, EAddWorkingColorSpaceOption InOption = WCS_None)"
  },
  {
    "label": "FOpenColorIOWrapperProcessor()",
    "kind": "Method",
    "detail": "Function (} ; class FOpenColorIOWrapperProcessor final { public :)",
    "insertText": "FOpenColorIOWrapperProcessor()"
  },
  {
    "label": "FOpenColorIOWrapperProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FOpenColorIOWrapperProcessor(const FOpenColorIOWrapperConfig* InConfig, FStringView InSourceColorSpace, FStringView InDestinationColorSpace, const TMap<FString, FString>& InContextKeyValues = {})"
  },
  {
    "label": "FOpenColorIOWrapperProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FOpenColorIOWrapperProcessor(const FOpenColorIOWrapperConfig* InConfig, FStringView InSourceColorSpace, FStringView InDisplay, FStringView InView, bool bInverseDirection = false, const TMap<FString, FString>& InContextKeyValues = {})"
  },
  {
    "label": "FOpenColorIOWrapperProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FOpenColorIOWrapperProcessor(const FOpenColorIOWrapperConfig* InConfig, FStringView InNamedTransform, bool bInverseDirection = false, const TMap<FString, FString>& InContextKeyValues = {})"
  },
  {
    "label": "CreateTransformToWorkingColorSpace()",
    "kind": "Method",
    "detail": "Function (FOpenColorIOWrapperProcessor)",
    "insertText": "CreateTransformToWorkingColorSpace(const FOpenColorIOWrapperSourceColorSettings& InSourceColorSettings)"
  },
  {
    "label": "GetTransformToWorkingColorSpaceName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTransformToWorkingColorSpaceName(const FOpenColorIOWrapperSourceColorSettings& InSourceColorSettings)"
  },
  {
    "label": "TransformColor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TransformColor(FLinearColor& InOutColor)"
  },
  {
    "label": "TransformImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TransformImage(const FImageView& InOutImage)"
  },
  {
    "label": "TransformImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TransformImage(const FImageView& SrcImage, const FImageView& DestImage)"
  },
  {
    "label": "FOpenColorIOWrapperGPUProcessor()",
    "kind": "Method",
    "detail": "Function (private : TPimplPtr<struct FOpenColorIOProcessorPimpl,EPimplPtrMode::DeepCopy> Pimpl ; class FOpenColorIOWrapperGPUProcessor ; } ; class FOpenColorIOWrapperGPUProcessor final { public :)",
    "insertText": "FOpenColorIOWrapperGPUProcessor(FOpenColorIOWrapperProcessor InProcessor, bool bUseLegacy = false)"
  },
  {
    "label": "GetShader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShader(FString& OutShaderCacheID, FString& OutShaderCode)"
  },
  {
    "label": "GetNum3DTextures()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNum3DTextures()"
  },
  {
    "label": "Get3DTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Get3DTexture(uint32 InIndex, FName& OutName, uint32& OutEdgeLength, TextureFilter& OutTextureFilter, const float*& OutData)"
  },
  {
    "label": "GetNumTextures()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumTextures()"
  },
  {
    "label": "GetTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTexture(uint32 InIndex, FName& OutName, uint32& OutWidth, uint32& OutHeight, TextureFilter& OutTextureFilter, bool& bOutRedChannelOnly, const float*& OutData)"
  }
]