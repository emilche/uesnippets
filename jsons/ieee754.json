[
  {
    "label": "Double",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Double"
  },
  {
    "label": "Double()",
    "kind": "Method",
    "detail": "Function (# ifndef RAPIDJSON_IEEE754_ # define RAPIDJSON_IEEE754_ # include \" . . / rapidjson . h \" RAPIDJSON_NAMESPACE_BEGIN namespace internal { class Double { public :)",
    "insertText": "Double()"
  },
  {
    "label": "Double()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Double(double d) : d_(d)"
  },
  {
    "label": "Double()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Double(uint64_t u) : u_(u)"
  },
  {
    "label": "Value()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "Value()"
  },
  {
    "label": "RAPIDJSON_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_ASSERT(!Sign())"
  },
  {
    "label": "Sign()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Sign()"
  },
  {
    "label": "Significand()",
    "kind": "Method",
    "detail": "Function (} uint64_t)",
    "insertText": "Significand()"
  },
  {
    "label": "IsNan()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNan()"
  },
  {
    "label": "IsInf()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsInf()"
  },
  {
    "label": "IsNanOrInf()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNanOrInf()"
  },
  {
    "label": "IsNormal()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNormal()"
  },
  {
    "label": "IsZero()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsZero()"
  },
  {
    "label": "IntegerSignificand()",
    "kind": "Method",
    "detail": "Function (} uint64_t)",
    "insertText": "IntegerSignificand()"
  },
  {
    "label": "IntegerExponent()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "IntegerExponent()"
  },
  {
    "label": "ToBias()",
    "kind": "Method",
    "detail": "Function (} uint64_t)",
    "insertText": "ToBias()"
  },
  {
    "label": "EffectiveSignificandSize()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "EffectiveSignificandSize(int order)"
  },
  {
    "label": "RAPIDJSON_UINT64_C2()",
    "kind": "Method",
    "detail": "Function (const uint64_t kExponentMask =)",
    "insertText": "RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000)"
  },
  {
    "label": "RAPIDJSON_UINT64_C2()",
    "kind": "Method",
    "detail": "Function (const uint64_t kSignificandMask =)",
    "insertText": "RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF)"
  },
  {
    "label": "RAPIDJSON_UINT64_C2()",
    "kind": "Method",
    "detail": "Function (const uint64_t kHiddenBit =)",
    "insertText": "RAPIDJSON_UINT64_C2(0x00100000, 0x00000000)"
  }
]