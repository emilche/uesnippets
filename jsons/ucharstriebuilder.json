[
  {
    "label": "UCharsTrieElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCharsTrieElement"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "UCTLinearMatchNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCTLinearMatchNode"
  },
  {
    "label": "UCharsTrieBuilder()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "UCharsTrieBuilder(const UCharsTrieBuilder &other)"
  },
  {
    "label": "buildUChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "buildUChars(UStringTrieBuildOption buildOption, UErrorCode &errorCode)"
  },
  {
    "label": "UCTLinearMatchNode()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UCTLinearMatchNode(const char16_t *units, int32_t len, Node *nextNode)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "write(StringTrieBuilder &builder)"
  },
  {
    "label": "ensureCapacity()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "ensureCapacity(int32_t length)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "write(int32_t unit)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "write(const char16_t *s, int32_t length)"
  },
  {
    "label": "writeElementUnits()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "writeElementUnits(int32_t i, int32_t unitIndex, int32_t length)"
  },
  {
    "label": "writeValueAndFinal()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "writeValueAndFinal(int32_t i, UBool isFinal)"
  },
  {
    "label": "writeValueAndType()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "writeValueAndType(UBool hasValue, int32_t value, int32_t node)"
  },
  {
    "label": "writeDeltaTo()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "writeDeltaTo(int32_t jumpTarget)"
  }
]