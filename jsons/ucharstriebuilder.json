[
  {
    "label": "UCharsTrieElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCharsTrieElement"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "UCTLinearMatchNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCTLinearMatchNode"
  },
  {
    "label": "UCharsTrieBuilder()",
    "kind": "Method",
    "detail": "Function (# ifndef __UCHARSTRIEBUILDER_H__ # define __UCHARSTRIEBUILDER_H__ # include \" unicode / utypes . h \" # include \" unicode / stringtriebuilder . h \" # include \" unicode / ucharstrie . h \" # include \" unicode / unistr . h \" U_NAMESPACE_BEGIN class UCharsTrieElement ; class UCharsTrieBuilder : public StringTrieBuilder { public :)",
    "insertText": "UCharsTrieBuilder(UErrorCode &errorCode)"
  },
  {
    "label": "UCharsTrieBuilder()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UCharsTrieBuilder()"
  },
  {
    "label": "add()",
    "kind": "Method",
    "detail": "Function (UCharsTrieBuilder&)",
    "insertText": "add(const UnicodeString &s, int32_t value, UErrorCode &errorCode)"
  },
  {
    "label": "build()",
    "kind": "Method",
    "detail": "Function (UCharsTrie*)",
    "insertText": "build(UStringTrieBuildOption buildOption, UErrorCode &errorCode)"
  },
  {
    "label": "buildUnicodeString()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "buildUnicodeString(UStringTrieBuildOption buildOption, UnicodeString &result, UErrorCode &errorCode)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (UCharsTrieBuilder&)",
    "insertText": "clear()"
  },
  {
    "label": "remove()",
    "kind": "Method",
    "detail": "Function (strings .)",
    "insertText": "remove()"
  },
  {
    "label": "UCharsTrieBuilder()",
    "kind": "Method",
    "detail": "Function (elementsLength = 0 ; ucharsLength = 0 ; return* this ; } private :)",
    "insertText": "UCharsTrieBuilder(const UCharsTrieBuilder &other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UCharsTrieBuilder&)",
    "insertText": "operator(const UCharsTrieBuilder &other)"
  },
  {
    "label": "buildUChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "buildUChars(UStringTrieBuildOption buildOption, UErrorCode &errorCode)"
  },
  {
    "label": "getElementStringLength()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getElementStringLength(int32_t i)"
  },
  {
    "label": "getElementUnit()",
    "kind": "Method",
    "detail": "Function (char16_t)",
    "insertText": "getElementUnit(int32_t i, int32_t unitIndex)"
  },
  {
    "label": "getElementValue()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getElementValue(int32_t i)"
  },
  {
    "label": "getLimitOfLinearMatch()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getLimitOfLinearMatch(int32_t first, int32_t last, int32_t unitIndex)"
  },
  {
    "label": "countElementUnits()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "countElementUnits(int32_t start, int32_t limit, int32_t unitIndex)"
  },
  {
    "label": "skipElementsBySomeUnits()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "skipElementsBySomeUnits(int32_t i, int32_t unitIndex, int32_t count)"
  },
  {
    "label": "indexOfElementWithNextUnit()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "indexOfElementWithNextUnit(int32_t i, int32_t unitIndex, char16_t unit)"
  },
  {
    "label": "matchNodesCanHaveValues()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "matchNodesCanHaveValues()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "operator(const Node &other)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "write(StringTrieBuilder &builder)"
  },
  {
    "label": "createLinearMatchNode()",
    "kind": "Method",
    "detail": "Function (private : const char16_t* s ; } ; Node*)",
    "insertText": "createLinearMatchNode(int32_t i, int32_t unitIndex, int32_t length, Node *nextNode)"
  },
  {
    "label": "ensureCapacity()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "ensureCapacity(int32_t length)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "write(int32_t unit)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "write(const char16_t *s, int32_t length)"
  },
  {
    "label": "writeElementUnits()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "writeElementUnits(int32_t i, int32_t unitIndex, int32_t length)"
  },
  {
    "label": "writeValueAndFinal()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "writeValueAndFinal(int32_t i, UBool isFinal)"
  },
  {
    "label": "writeValueAndType()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "writeValueAndType(UBool hasValue, int32_t value, int32_t node)"
  },
  {
    "label": "writeDeltaTo()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "writeDeltaTo(int32_t jumpTarget)"
  }
]