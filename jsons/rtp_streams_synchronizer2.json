[
  {
    "label": "Syncable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Syncable"
  },
  {
    "label": "RtpStreamsSynchronizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpStreamsSynchronizer"
  },
  {
    "label": "RtpStreamsSynchronizer()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_RTP_STREAMS_SYNCHRONIZER2_H_ # define VIDEO_RTP_STREAMS_SYNCHRONIZER2_H_ # include<memory> # include \" api / sequence_checker . h \" # include \" api / task_queue / task_queue_base . h \" # include \" rtc_base / system / no_unique_address . h \" # include \" rtc_base / task_utils / repeating_task . h \" # include \" video / stream_synchronization . h \" namespace webrtc { class Syncable ; namespace internal { class RtpStreamsSynchronizer { public :)",
    "insertText": "RtpStreamsSynchronizer(TaskQueueBase* main_queue, Syncable* syncable_video)"
  },
  {
    "label": "RtpStreamsSynchronizer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtpStreamsSynchronizer()"
  },
  {
    "label": "ConfigureSync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigureSync(Syncable* syncable_audio)"
  },
  {
    "label": "GetStreamSyncOffsetInMs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetStreamSyncOffsetInMs(uint32_t rtp_timestamp, int64_t render_time_ms, int64_t* video_playout_ntp_ms, int64_t* stream_offset_ms, double* estimated_freq_khz)"
  },
  {
    "label": "UpdateDelay()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateDelay()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (TaskQueueBase* const task_queue_ ; RTC_NO_UNIQUE_ADDRESS SequenceChecker main_checker_ ; Syncable* const syncable_video_ ; Syncable* syncable_audio_)",
    "insertText": "RTC_GUARDED_BY(main_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (int64_t last_stats_log_ms_)",
    "insertText": "RTC_GUARDED_BY(&main_checker_)"
  }
]