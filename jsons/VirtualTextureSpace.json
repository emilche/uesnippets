[
  {
    "label": "FAllocatedVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAllocatedVirtualTexture"
  },
  {
    "label": "FVirtualTextureSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureSystem"
  },
  {
    "label": "FVTSpaceDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTSpaceDescription"
  },
  {
    "label": "FVirtualTextureSpace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureSpace"
  },
  {
    "label": "FTextureEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureEntry"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" VirtualTextureShared . h \" # include \" VirtualTexturePhysicalSpace . h \" # include \" TexturePageMap . h \" # include \" VirtualTextureAllocator . h \" # include \" RendererInterface . h \" # include \" VirtualTexturing . h \" class FAllocatedVirtualTexture ; class FVirtualTextureSystem ; struct FVTSpaceDescription { uint32 TileSize = 0 u ; uint32 TileBorderSize = 0 u ; uint8 Dimensions = 0 u ; EVTPageTableFormat PageTableFormat = EVTPageTableFormat::UInt16 ; uint8 NumPageTableLayers = 0 u ; uint8 bPrivateSpace = false ; uint32 MaxSpaceSize = VIRTUALTEXTURE_MAX_PAGETABLE_SIZE ; uint32 IndirectionTextureSize = 0 u ; } ; bool)",
    "insertText": "operator(const FVTSpaceDescription& Lhs, const FVTSpaceDescription& Rhs)"
  },
  {
    "label": "FVirtualTextureSpace()",
    "kind": "Method",
    "detail": "Function (} class FVirtualTextureSpace final : public FRenderResource { public : const uint32 LayersPerPageTableTexture = IAllocatedVirtualTexture::LayersPerPageTableTexture ;)",
    "insertText": "FVirtualTextureSpace(FVirtualTextureSystem* InSystem, uint8 InID, const FVTSpaceDescription& InDesc, uint32 InSizeNeeded)"
  },
  {
    "label": "FVirtualTextureSpace()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FVirtualTextureSpace()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (const FVTSpaceDescription&)",
    "insertText": "GetDescription()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (} uint8)",
    "insertText": "GetID()"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AddRef()"
  },
  {
    "label": "AllocateVirtualTexture()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AllocateVirtualTexture(FAllocatedVirtualTexture* VirtualTexture)"
  },
  {
    "label": "FreeVirtualTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeVirtualTexture(FAllocatedVirtualTexture* VirtualTexture)"
  },
  {
    "label": "GetPageTableTexture()",
    "kind": "Method",
    "detail": "Function (FRHITextureReference*)",
    "insertText": "GetPageTableTexture(uint32 PageTableIndex)"
  },
  {
    "label": "GetPageTableIndirectionTexture()",
    "kind": "Method",
    "detail": "Function (} FRHITextureReference*)",
    "insertText": "GetPageTableIndirectionTexture()"
  },
  {
    "label": "QueueUpdate()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "QueueUpdate(uint8 Layer, uint8 vLogSize, uint32 vAddress, uint8 vLevel, const FPhysicalTileLocation& pTileLocation)"
  },
  {
    "label": "AllocateTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateTextures(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "FinalizeTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeTextures(FRDGBuilder& GraphBuilder, FRDGExternalAccessQueue& ExternalAccessQueue)"
  },
  {
    "label": "ApplyUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyUpdates(FVirtualTextureSystem* System, FRDGBuilder& GraphBuilder, FRDGExternalAccessQueue& ExternalAccessQueue)"
  },
  {
    "label": "QueueUpdateEntirePageTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueUpdateEntirePageTable()"
  },
  {
    "label": "DumpToConsole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpToConsole(bool verbose)"
  },
  {
    "label": "SaveAllocatorDebugImage()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SaveAllocatorDebugImage()"
  },
  {
    "label": "GetRequiredPageTableAllocationSize()",
    "kind": "Method",
    "detail": "Function (# endif private : FUintPoint)",
    "insertText": "GetRequiredPageTableAllocationSize()"
  },
  {
    "label": "TextureCapacity()",
    "kind": "Method",
    "detail": "Function (const uint32)",
    "insertText": "TextureCapacity(VIRTUALTEXTURE_SPACE_MAXLAYERS + LayersPerPageTableTexture - 1u)"
  }
]