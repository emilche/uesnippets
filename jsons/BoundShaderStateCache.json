[
  {
    "label": "FBoundShaderStateKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBoundShaderStateKey"
  },
  {
    "label": "FBoundShaderStateLookupKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBoundShaderStateLookupKey"
  },
  {
    "label": "FCachedBoundShaderStateLink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedBoundShaderStateLink"
  },
  {
    "label": "FCachedBoundShaderStateLink_Threadsafe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedBoundShaderStateLink_Threadsafe"
  },
  {
    "label": "FBoundShaderStateKey()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RHI . h \" class FBoundShaderStateKey { public :)",
    "insertText": "FBoundShaderStateKey(FRHIVertexDeclaration* InVertexDeclaration, FRHIVertexShader* InVertexShader, FRHIPixelShader* InPixelShader, FRHIGeometryShader* InGeometryShader = nullptr ) : VertexDeclaration(InVertexDeclaration) , VertexShader(InVertexShader) , PixelShader(InPixelShader) , GeometryShader(InGeometryShader)"
  },
  {
    "label": "FBoundShaderStateKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBoundShaderStateKey(FRHIMeshShader* InMeshShader, FRHIAmplificationShader* InAmplificationShader, FRHIPixelShader* InPixelShader ) : MeshShader(InMeshShader) , AmplificationShader(InAmplificationShader) , PixelShader(InPixelShader)"
  },
  {
    "label": "GetVertexShader()",
    "kind": "Method",
    "detail": "Function (} FRHIVertexShader*)",
    "insertText": "GetVertexShader()"
  },
  {
    "label": "FBoundShaderStateLookupKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBoundShaderStateLookupKey(FRHIVertexDeclaration* InVertexDeclaration, FRHIVertexShader* InVertexShader, FRHIPixelShader* InPixelShader, FRHIGeometryShader* InGeometryShader = nullptr ) : VertexDeclaration(InVertexDeclaration) , VertexShader(InVertexShader) , PixelShader(InPixelShader) , GeometryShader(InGeometryShader)"
  },
  {
    "label": "FBoundShaderStateLookupKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBoundShaderStateLookupKey(FRHIMeshShader* InMeshShader, FRHIAmplificationShader* InAmplificationShader, FRHIPixelShader* InPixelShader ) : MeshShader(InMeshShader) , AmplificationShader(InAmplificationShader) , PixelShader(InPixelShader)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FBoundShaderStateLookupKey& A, const FBoundShaderStateLookupKey& B)"
  },
  {
    "label": "FCachedBoundShaderStateLink()",
    "kind": "Method",
    "detail": "Function (} private : const FRHIVertexDeclaration* VertexDeclaration = nullptr ; const FRHIVertexShader* VertexShader = nullptr ; const FRHIMeshShader* MeshShader = nullptr ; const FRHIAmplificationShader* AmplificationShader = nullptr ; const FRHIPixelShader* PixelShader = nullptr ; const FRHIGeometryShader* GeometryShader = nullptr ; } ; class FCachedBoundShaderStateLink { public : FRHIBoundShaderState* BoundShaderState ;)",
    "insertText": "FCachedBoundShaderStateLink(FRHIVertexDeclaration* VertexDeclaration, FRHIVertexShader* VertexShader, FRHIPixelShader* PixelShader, FRHIBoundShaderState* InBoundShaderState, bool bAddToSingleThreadedCache = true)"
  },
  {
    "label": "FCachedBoundShaderStateLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCachedBoundShaderStateLink(FRHIVertexDeclaration* VertexDeclaration, FRHIVertexShader* VertexShader, FRHIPixelShader* PixelShader, FRHIGeometryShader* GeometryShader, FRHIBoundShaderState* InBoundShaderState, bool bAddToSingleThreadedCache = true)"
  },
  {
    "label": "FCachedBoundShaderStateLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCachedBoundShaderStateLink(FRHIMeshShader* MeshShader, FRHIAmplificationShader* AmplificationShader, FRHIPixelShader* PixelShader, FRHIBoundShaderState* InBoundShaderState, bool bAddToSingleThreadedCache = true)"
  },
  {
    "label": "FCachedBoundShaderStateLink()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCachedBoundShaderStateLink()"
  },
  {
    "label": "GetMeshShader()",
    "kind": "Method",
    "detail": "Function (} FRHIMeshShader*)",
    "insertText": "GetMeshShader()"
  },
  {
    "label": "GetAmplificationShader()",
    "kind": "Method",
    "detail": "Function (} FRHIAmplificationShader*)",
    "insertText": "GetAmplificationShader()"
  },
  {
    "label": "GetPixelShader()",
    "kind": "Method",
    "detail": "Function (} FRHIPixelShader*)",
    "insertText": "GetPixelShader()"
  },
  {
    "label": "GetGeometryShader()",
    "kind": "Method",
    "detail": "Function (} FRHIGeometryShader*)",
    "insertText": "GetGeometryShader()"
  },
  {
    "label": "GetVertexDeclaration()",
    "kind": "Method",
    "detail": "Function (} FRHIVertexDeclaration*)",
    "insertText": "GetVertexDeclaration()"
  },
  {
    "label": "GetCachedBoundShaderState()",
    "kind": "Method",
    "detail": "Function (} protected : FBoundShaderStateKey Key ; bool bAddedToSingleThreadedCache ; } ; FCachedBoundShaderStateLink*)",
    "insertText": "GetCachedBoundShaderState(FRHIVertexDeclaration* VertexDeclaration, FRHIVertexShader* VertexShader, FRHIPixelShader* PixelShader, FRHIGeometryShader* GeometryShader = nullptr, FRHIMeshShader* MeshShader = nullptr, FRHIAmplificationShader* AmplificationShader = nullptr)"
  },
  {
    "label": "EmptyCachedBoundShaderStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyCachedBoundShaderStates()"
  },
  {
    "label": "FCachedBoundShaderStateLink_Threadsafe()",
    "kind": "Method",
    "detail": "Function (class FCachedBoundShaderStateLink_Threadsafe : public FCachedBoundShaderStateLink { public :)",
    "insertText": "FCachedBoundShaderStateLink_Threadsafe(FRHIVertexDeclaration* VertexDeclaration, FRHIVertexShader* VertexShader, FRHIPixelShader* PixelShader, FRHIBoundShaderState* InBoundShaderState ) : FCachedBoundShaderStateLink(VertexDeclaration, VertexShader, PixelShader, InBoundShaderState, false)"
  },
  {
    "label": "FCachedBoundShaderStateLink_Threadsafe()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCachedBoundShaderStateLink_Threadsafe(FRHIVertexDeclaration* VertexDeclaration, FRHIVertexShader* VertexShader, FRHIPixelShader* PixelShader, FRHIGeometryShader* GeometryShader, FRHIBoundShaderState* InBoundShaderState ) : FCachedBoundShaderStateLink(VertexDeclaration, VertexShader, PixelShader, GeometryShader, InBoundShaderState, false)"
  },
  {
    "label": "FCachedBoundShaderStateLink_Threadsafe()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCachedBoundShaderStateLink_Threadsafe(FRHIMeshShader* MeshShader, FRHIAmplificationShader* AmplificationShader, FRHIPixelShader* PixelShader, FRHIBoundShaderState* InBoundShaderState ) : FCachedBoundShaderStateLink(MeshShader, AmplificationShader, PixelShader, InBoundShaderState, false)"
  },
  {
    "label": "AddToCache()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddToCache()"
  },
  {
    "label": "RemoveFromCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromCache()"
  },
  {
    "label": "GetCachedBoundShaderState_Threadsafe()",
    "kind": "Method",
    "detail": "Function (} ; FBoundShaderStateRHIRef)",
    "insertText": "GetCachedBoundShaderState_Threadsafe(FRHIVertexDeclaration* VertexDeclaration, FRHIVertexShader* VertexShader, FRHIPixelShader* PixelShader, FRHIGeometryShader* GeometryShader = nullptr, FRHIMeshShader* MeshShader = nullptr, FRHIAmplificationShader* AmplificationShader = nullptr)"
  }
]