[
  {
    "label": "FWindowsPlatformTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWindowsPlatformTime"
  },
  {
    "label": "InitTiming()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" GenericPlatform / GenericPlatformTime . h \" # include \" Windows / WindowsSystemIncludes . h \" struct FWindowsPlatformTime : public FGenericPlatformTime { double)",
    "insertText": "InitTiming()"
  },
  {
    "label": "Seconds()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "Seconds()"
  },
  {
    "label": "QueryPerformanceCounter()",
    "kind": "Method",
    "detail": "Function (Windows::LARGE_INTEGER Cycles ;)",
    "insertText": "QueryPerformanceCounter(&Cycles)"
  },
  {
    "label": "Cycles()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "Cycles()"
  },
  {
    "label": "Cycles64()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "Cycles64()"
  },
  {
    "label": "UtcTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UtcTime(int32& Year, int32& Month, int32& DayOfWeek, int32& Day, int32& Hour, int32& Min, int32& Sec, int32& MSec)"
  },
  {
    "label": "UpdateCPUTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateCPUTime(float DeltaTime)"
  },
  {
    "label": "UpdateThreadCPUTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateThreadCPUTime(float = 0.0)"
  },
  {
    "label": "AutoUpdateGameThreadCPUTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoUpdateGameThreadCPUTime(double UpdateInterval)"
  },
  {
    "label": "GetCPUTime()",
    "kind": "Method",
    "detail": "Function (FCPUTime)",
    "insertText": "GetCPUTime()"
  },
  {
    "label": "GetThreadCPUTime()",
    "kind": "Method",
    "detail": "Function (FCPUTime)",
    "insertText": "GetThreadCPUTime()"
  },
  {
    "label": "GetLastIntervalThreadCPUTimeInSeconds()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetLastIntervalThreadCPUTimeInSeconds()"
  }
]