[
  {
    "label": "SDL_RendererInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_RendererInfo"
  },
  {
    "label": "SDL_Vertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_Vertex"
  },
  {
    "label": "SDL_Renderer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_Renderer"
  },
  {
    "label": "SDL_Texture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_Texture"
  },
  {
    "label": "SDL_GetNumRenderDrivers()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_render_h_ # define SDL_render_h_ # include \" SDL_stdinc . h \" # include \" SDL_rect . h \" # include \" SDL_video . h \" # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif typedef enum { SDL_RENDERER_SOFTWARE = 0 x00000001,SDL_RENDERER_ACCELERATED = 0 x00000002,SDL_RENDERER_PRESENTVSYNC = 0 x00000004,SDL_RENDERER_TARGETTEXTURE = 0 x00000008 } SDL_RendererFlags ; typedef struct SDL_RendererInfo { const char* name ; Uint32 flags ; Uint32 num_texture_formats ; Uint32 texture_formats [ 1 6 ] ; int max_texture_width ; int max_texture_height ; } SDL_RendererInfo ; typedef struct SDL_Vertex { SDL_FPoint position ; SDL_Color color ; SDL_FPoint tex_coord ; } SDL_Vertex ; typedef enum { SDL_ScaleModeNearest,SDL_ScaleModeLinear,SDL_ScaleModeBest } SDL_ScaleMode ; typedef enum { SDL_TEXTUREACCESS_STATIC,SDL_TEXTUREACCESS_STREAMING,SDL_TEXTUREACCESS_TARGET } SDL_TextureAccess ; typedef enum { SDL_TEXTUREMODULATE_NONE = 0 x00000000,SDL_TEXTUREMODULATE_COLOR = 0 x00000001,SDL_TEXTUREMODULATE_ALPHA = 0 x00000002 } SDL_TextureModulate ; typedef enum { SDL_FLIP_NONE = 0 x00000000,SDL_FLIP_HORIZONTAL = 0 x00000001,SDL_FLIP_VERTICAL = 0 x00000002 } SDL_RendererFlip ; struct SDL_Renderer ; typedef struct SDL_Renderer SDL_Renderer ; struct SDL_Texture ; typedef struct SDL_Texture SDL_Texture ; DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetNumRenderDrivers(void)"
  },
  {
    "label": "SDL_GetRenderDriverInfo()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetRenderDriverInfo(int index, SDL_RendererInfo * info)"
  },
  {
    "label": "SDL_CreateWindowAndRenderer()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_CreateWindowAndRenderer(int width, int height, Uint32 window_flags, SDL_Window **window, SDL_Renderer **renderer)"
  },
  {
    "label": "SDL_CreateRenderer()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Renderer* SDLCALL)",
    "insertText": "SDL_CreateRenderer(SDL_Window * window, int index, Uint32 flags)"
  },
  {
    "label": "SDL_CreateSoftwareRenderer()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Renderer* SDLCALL)",
    "insertText": "SDL_CreateSoftwareRenderer(SDL_Surface * surface)"
  },
  {
    "label": "SDL_GetRenderer()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Renderer* SDLCALL)",
    "insertText": "SDL_GetRenderer(SDL_Window * window)"
  },
  {
    "label": "SDL_RenderGetWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Window* SDLCALL)",
    "insertText": "SDL_RenderGetWindow(SDL_Renderer *renderer)"
  },
  {
    "label": "SDL_GetRendererInfo()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetRendererInfo(SDL_Renderer * renderer, SDL_RendererInfo * info)"
  },
  {
    "label": "SDL_GetRendererOutputSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetRendererOutputSize(SDL_Renderer * renderer, int *w, int *h)"
  },
  {
    "label": "SDL_CreateTexture()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Texture* SDLCALL)",
    "insertText": "SDL_CreateTexture(SDL_Renderer * renderer, Uint32 format, int access, int w, int h)"
  },
  {
    "label": "SDL_CreateTextureFromSurface()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Texture* SDLCALL)",
    "insertText": "SDL_CreateTextureFromSurface(SDL_Renderer * renderer, SDL_Surface * surface)"
  },
  {
    "label": "SDL_QueryTexture()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_QueryTexture(SDL_Texture * texture, Uint32 * format, int *access, int *w, int *h)"
  },
  {
    "label": "SDL_SetTextureColorMod()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetTextureColorMod(SDL_Texture * texture, Uint8 r, Uint8 g, Uint8 b)"
  },
  {
    "label": "SDL_GetTextureColorMod()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetTextureColorMod(SDL_Texture * texture, Uint8 * r, Uint8 * g, Uint8 * b)"
  },
  {
    "label": "SDL_SetTextureAlphaMod()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetTextureAlphaMod(SDL_Texture * texture, Uint8 alpha)"
  },
  {
    "label": "SDL_GetTextureAlphaMod()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetTextureAlphaMod(SDL_Texture * texture, Uint8 * alpha)"
  },
  {
    "label": "SDL_SetTextureBlendMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetTextureBlendMode(SDL_Texture * texture, SDL_BlendMode blendMode)"
  },
  {
    "label": "SDL_GetTextureBlendMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetTextureBlendMode(SDL_Texture * texture, SDL_BlendMode *blendMode)"
  },
  {
    "label": "SDL_SetTextureScaleMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetTextureScaleMode(SDL_Texture * texture, SDL_ScaleMode scaleMode)"
  },
  {
    "label": "SDL_GetTextureScaleMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetTextureScaleMode(SDL_Texture * texture, SDL_ScaleMode *scaleMode)"
  },
  {
    "label": "SDL_SetTextureUserData()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetTextureUserData(SDL_Texture * texture, void *userdata)"
  },
  {
    "label": "SDL_GetTextureUserData()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void* SDLCALL)",
    "insertText": "SDL_GetTextureUserData(SDL_Texture * texture)"
  },
  {
    "label": "SDL_UpdateTexture()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_UpdateTexture(SDL_Texture * texture, const SDL_Rect * rect, const void *pixels, int pitch)"
  },
  {
    "label": "SDL_UpdateYUVTexture()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_UpdateYUVTexture(SDL_Texture * texture, const SDL_Rect * rect, const Uint8 *Yplane, int Ypitch, const Uint8 *Uplane, int Upitch, const Uint8 *Vplane, int Vpitch)"
  },
  {
    "label": "SDL_UpdateNVTexture()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_UpdateNVTexture(SDL_Texture * texture, const SDL_Rect * rect, const Uint8 *Yplane, int Ypitch, const Uint8 *UVplane, int UVpitch)"
  },
  {
    "label": "SDL_LockTexture()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_LockTexture(SDL_Texture * texture, const SDL_Rect * rect, void **pixels, int *pitch)"
  },
  {
    "label": "SDL_LockTextureToSurface()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_LockTextureToSurface(SDL_Texture *texture, const SDL_Rect *rect, SDL_Surface **surface)"
  },
  {
    "label": "SDL_UnlockTexture()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_UnlockTexture(SDL_Texture * texture)"
  },
  {
    "label": "SDL_RenderTargetSupported()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_RenderTargetSupported(SDL_Renderer *renderer)"
  },
  {
    "label": "SDL_SetRenderTarget()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetRenderTarget(SDL_Renderer *renderer, SDL_Texture *texture)"
  },
  {
    "label": "SDL_GetRenderTarget()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Texture* SDLCALL)",
    "insertText": "SDL_GetRenderTarget(SDL_Renderer *renderer)"
  },
  {
    "label": "SDL_RenderSetLogicalSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderSetLogicalSize(SDL_Renderer * renderer, int w, int h)"
  },
  {
    "label": "SDL_RenderGetLogicalSize()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_RenderGetLogicalSize(SDL_Renderer * renderer, int *w, int *h)"
  },
  {
    "label": "SDL_RenderSetIntegerScale()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderSetIntegerScale(SDL_Renderer * renderer, SDL_bool enable)"
  },
  {
    "label": "SDL_RenderGetIntegerScale()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_RenderGetIntegerScale(SDL_Renderer * renderer)"
  },
  {
    "label": "SDL_RenderSetViewport()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderSetViewport(SDL_Renderer * renderer, const SDL_Rect * rect)"
  },
  {
    "label": "SDL_RenderGetViewport()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_RenderGetViewport(SDL_Renderer * renderer, SDL_Rect * rect)"
  },
  {
    "label": "SDL_RenderSetClipRect()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderSetClipRect(SDL_Renderer * renderer, const SDL_Rect * rect)"
  },
  {
    "label": "SDL_RenderGetClipRect()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_RenderGetClipRect(SDL_Renderer * renderer, SDL_Rect * rect)"
  },
  {
    "label": "SDL_RenderIsClipEnabled()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_RenderIsClipEnabled(SDL_Renderer * renderer)"
  },
  {
    "label": "SDL_RenderSetScale()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderSetScale(SDL_Renderer * renderer, float scaleX, float scaleY)"
  },
  {
    "label": "SDL_RenderGetScale()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_RenderGetScale(SDL_Renderer * renderer, float *scaleX, float *scaleY)"
  },
  {
    "label": "SDL_RenderWindowToLogical()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_RenderWindowToLogical(SDL_Renderer * renderer, int windowX, int windowY, float *logicalX, float *logicalY)"
  },
  {
    "label": "SDL_RenderLogicalToWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_RenderLogicalToWindow(SDL_Renderer * renderer, float logicalX, float logicalY, int *windowX, int *windowY)"
  },
  {
    "label": "SDL_SetRenderDrawColor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetRenderDrawColor(SDL_Renderer * renderer, Uint8 r, Uint8 g, Uint8 b, Uint8 a)"
  },
  {
    "label": "SDL_GetRenderDrawColor()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetRenderDrawColor(SDL_Renderer * renderer, Uint8 * r, Uint8 * g, Uint8 * b, Uint8 * a)"
  },
  {
    "label": "SDL_SetRenderDrawBlendMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetRenderDrawBlendMode(SDL_Renderer * renderer, SDL_BlendMode blendMode)"
  },
  {
    "label": "SDL_GetRenderDrawBlendMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetRenderDrawBlendMode(SDL_Renderer * renderer, SDL_BlendMode *blendMode)"
  },
  {
    "label": "SDL_RenderClear()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderClear(SDL_Renderer * renderer)"
  },
  {
    "label": "SDL_RenderDrawPoint()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawPoint(SDL_Renderer * renderer, int x, int y)"
  },
  {
    "label": "SDL_RenderDrawPoints()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawPoints(SDL_Renderer * renderer, const SDL_Point * points, int count)"
  },
  {
    "label": "SDL_RenderDrawLine()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawLine(SDL_Renderer * renderer, int x1, int y1, int x2, int y2)"
  },
  {
    "label": "SDL_RenderDrawLines()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawLines(SDL_Renderer * renderer, const SDL_Point * points, int count)"
  },
  {
    "label": "SDL_RenderDrawRect()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawRect(SDL_Renderer * renderer, const SDL_Rect * rect)"
  },
  {
    "label": "SDL_RenderDrawRects()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawRects(SDL_Renderer * renderer, const SDL_Rect * rects, int count)"
  },
  {
    "label": "SDL_RenderFillRect()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderFillRect(SDL_Renderer * renderer, const SDL_Rect * rect)"
  },
  {
    "label": "SDL_RenderFillRects()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderFillRects(SDL_Renderer * renderer, const SDL_Rect * rects, int count)"
  },
  {
    "label": "SDL_RenderCopy()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderCopy(SDL_Renderer * renderer, SDL_Texture * texture, const SDL_Rect * srcrect, const SDL_Rect * dstrect)"
  },
  {
    "label": "SDL_RenderCopyEx()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderCopyEx(SDL_Renderer * renderer, SDL_Texture * texture, const SDL_Rect * srcrect, const SDL_Rect * dstrect, const double angle, const SDL_Point *center, const SDL_RendererFlip flip)"
  },
  {
    "label": "SDL_RenderDrawPointF()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawPointF(SDL_Renderer * renderer, float x, float y)"
  },
  {
    "label": "SDL_RenderDrawPointsF()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawPointsF(SDL_Renderer * renderer, const SDL_FPoint * points, int count)"
  },
  {
    "label": "SDL_RenderDrawLineF()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawLineF(SDL_Renderer * renderer, float x1, float y1, float x2, float y2)"
  },
  {
    "label": "SDL_RenderDrawLinesF()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawLinesF(SDL_Renderer * renderer, const SDL_FPoint * points, int count)"
  },
  {
    "label": "SDL_RenderDrawRectF()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawRectF(SDL_Renderer * renderer, const SDL_FRect * rect)"
  },
  {
    "label": "SDL_RenderDrawRectsF()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderDrawRectsF(SDL_Renderer * renderer, const SDL_FRect * rects, int count)"
  },
  {
    "label": "SDL_RenderFillRectF()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderFillRectF(SDL_Renderer * renderer, const SDL_FRect * rect)"
  },
  {
    "label": "SDL_RenderFillRectsF()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderFillRectsF(SDL_Renderer * renderer, const SDL_FRect * rects, int count)"
  },
  {
    "label": "SDL_RenderCopyF()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderCopyF(SDL_Renderer * renderer, SDL_Texture * texture, const SDL_Rect * srcrect, const SDL_FRect * dstrect)"
  },
  {
    "label": "SDL_RenderCopyExF()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderCopyExF(SDL_Renderer * renderer, SDL_Texture * texture, const SDL_Rect * srcrect, const SDL_FRect * dstrect, const double angle, const SDL_FPoint *center, const SDL_RendererFlip flip)"
  },
  {
    "label": "SDL_RenderGeometry()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderGeometry(SDL_Renderer *renderer, SDL_Texture *texture, const SDL_Vertex *vertices, int num_vertices, const int *indices, int num_indices)"
  },
  {
    "label": "SDL_RenderGeometryRaw()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderGeometryRaw(SDL_Renderer *renderer, SDL_Texture *texture, const float *xy, int xy_stride, const SDL_Color *color, int color_stride, const float *uv, int uv_stride, int num_vertices, const void *indices, int num_indices, int size_indices)"
  },
  {
    "label": "SDL_RenderReadPixels()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderReadPixels(SDL_Renderer * renderer, const SDL_Rect * rect, Uint32 format, void *pixels, int pitch)"
  },
  {
    "label": "SDL_RenderPresent()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_RenderPresent(SDL_Renderer * renderer)"
  },
  {
    "label": "SDL_DestroyTexture()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_DestroyTexture(SDL_Texture * texture)"
  },
  {
    "label": "SDL_DestroyRenderer()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_DestroyRenderer(SDL_Renderer * renderer)"
  },
  {
    "label": "SDL_RenderFlush()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderFlush(SDL_Renderer * renderer)"
  },
  {
    "label": "SDL_GL_BindTexture()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GL_BindTexture(SDL_Texture *texture, float *texw, float *texh)"
  },
  {
    "label": "SDL_GL_UnbindTexture()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GL_UnbindTexture(SDL_Texture *texture)"
  },
  {
    "label": "SDL_RenderGetMetalLayer()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void* SDLCALL)",
    "insertText": "SDL_RenderGetMetalLayer(SDL_Renderer * renderer)"
  },
  {
    "label": "SDL_RenderGetMetalCommandEncoder()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void* SDLCALL)",
    "insertText": "SDL_RenderGetMetalCommandEncoder(SDL_Renderer * renderer)"
  },
  {
    "label": "SDL_RenderSetVSync()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RenderSetVSync(SDL_Renderer* renderer, int vsync)"
  }
]