[
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "TSampleProducer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSampleProducer"
  },
  {
    "label": "CSampleConsumer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CSampleConsumer"
  },
  {
    "label": "CPeekMeasurements",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CPeekMeasurements"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FBinnedMovingValueBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBinnedMovingValueBase"
  },
  {
    "label": "FBin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBin"
  },
  {
    "label": "TBinnedMovingValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBinnedMovingValue"
  },
  {
    "label": "TBinnedDeltaMovingValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBinnedDeltaMovingValue"
  },
  {
    "label": "EMinMaxValueMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMinMaxValueMode"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "FSampleMinMaxAvg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSampleMinMaxAvg"
  },
  {
    "label": "TSampleMinMaxAvg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSampleMinMaxAvg"
  },
  {
    "label": "TSampleMinMaxAvg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSampleMinMaxAvg"
  },
  {
    "label": "TSampleMinMaxAvg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSampleMinMaxAvg"
  },
  {
    "label": "TSampleMinMaxAvg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSampleMinMaxAvg"
  },
  {
    "label": "TSampleMinMaxAvg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSampleMinMaxAvg"
  },
  {
    "label": "FUsingNetStatsUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUsingNetStatsUtils"
  },
  {
    "label": "FBinnedMovingValueBase()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FBinnedMovingValueBase(const TArrayView<FBin> InBins, double InTimePerBin, EBinnedValueMode InMode)"
  },
  {
    "label": "AddMeasurement_Implementation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMeasurement_Implementation(double TimeVal, double Value, TOptional<double>& OutSample)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ResetNewAndSkippedBins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetNewAndSkippedBins(int32 BinIdx, TOptional<double>& OutSample)"
  },
  {
    "label": "AddSample_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSample_Internal(double Value)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  }
]