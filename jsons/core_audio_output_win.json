[
  {
    "label": "AudioDeviceBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioDeviceBuffer"
  },
  {
    "label": "FineAudioBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FineAudioBuffer"
  },
  {
    "label": "CoreAudioOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CoreAudioOutput"
  },
  {
    "label": "CoreAudioOutput()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_DEVICE_WIN_CORE_AUDIO_OUTPUT_WIN_H_ # define MODULES_AUDIO_DEVICE_WIN_CORE_AUDIO_OUTPUT_WIN_H_ # include<memory> # include<string> # include \" modules / audio_device / win / audio_device_module_win . h \" # include \" modules / audio_device / win / core_audio_base_win . h \" namespace webrtc { class AudioDeviceBuffer ; class FineAudioBuffer ; namespace webrtc_win { class CoreAudioOutput final : public CoreAudioBase,public AudioOutput { public :)",
    "insertText": "CoreAudioOutput(bool automatic_restart)"
  },
  {
    "label": "CoreAudioOutput()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CoreAudioOutput()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Init()"
  },
  {
    "label": "Terminate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Terminate()"
  },
  {
    "label": "NumDevices()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NumDevices()"
  },
  {
    "label": "SetDevice()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SetDevice(int index)"
  },
  {
    "label": "SetDevice()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SetDevice(AudioDeviceModule::WindowsDeviceType device)"
  },
  {
    "label": "DeviceName()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DeviceName(int index, std::string* name, std::string* guid)"
  },
  {
    "label": "AttachAudioBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AttachAudioBuffer(AudioDeviceBuffer* audio_buffer)"
  },
  {
    "label": "PlayoutIsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PlayoutIsInitialized()"
  },
  {
    "label": "InitPlayout()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "InitPlayout()"
  },
  {
    "label": "StartPlayout()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "StartPlayout()"
  },
  {
    "label": "StopPlayout()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "StopPlayout()"
  },
  {
    "label": "Playing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Playing()"
  },
  {
    "label": "VolumeIsAvailable()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "VolumeIsAvailable(bool* available)"
  },
  {
    "label": "RestartPlayout()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RestartPlayout()"
  },
  {
    "label": "Restarting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Restarting()"
  },
  {
    "label": "SetSampleRate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SetSampleRate(uint32_t sample_rate)"
  },
  {
    "label": "CoreAudioOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CoreAudioOutput(const CoreAudioOutput&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CoreAudioOutput&)",
    "insertText": "operator(const CoreAudioOutput&)"
  },
  {
    "label": "ReleaseCOMObjects()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ReleaseCOMObjects()"
  },
  {
    "label": "OnDataCallback()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnDataCallback(uint64_t device_frequency)"
  },
  {
    "label": "OnErrorCallback()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnErrorCallback(ErrorType error)"
  },
  {
    "label": "EstimateOutputLatencyMillis()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "EstimateOutputLatencyMillis(uint64_t device_frequency)"
  },
  {
    "label": "HandleStreamDisconnected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleStreamDisconnected()"
  }
]