[
  {
    "label": "EIGEN_LAPACKE_SCHUR_REAL()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_REAL_SCHUR_LAPACKE_H # define EIGEN_REAL_SCHUR_LAPACKE_H namespace Eigen { # define)",
    "insertText": "EIGEN_LAPACKE_SCHUR_REAL(EIGTYPE, LAPACKE_TYPE, LAPACKE_PREFIX, LAPACKE_PREFIX_U, EIGCOLROW, LAPACKE_COLROW) \\ template<> template<typename InputType> inline \\ RealSchur<Matrix<EIGTYPE, Dynamic, Dynamic, EIGCOLROW> >& \\ RealSchur<Matrix<EIGTYPE, Dynamic, Dynamic, EIGCOLROW> >::compute(const EigenBase<InputType>& matrix, bool computeU)"
  },
  {
    "label": "eigen_assert()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "eigen_assert(matrix.cols() == matrix.rows())"
  },
  {
    "label": "lapack_int()",
    "kind": "Method",
    "detail": "Function (\\ \\ lapack_int n = internal::convert_index<)",
    "insertText": "lapack_int(matrix.cols())"
  },
  {
    "label": "jobvs()",
    "kind": "Method",
    "detail": "Function (\\ lapack_int matrix_order = LAPACKE_COLROW ; \\ char jobvs,sort = ' N ' ; \\ LAPACK_ # # LAPACKE_PREFIX_U # # _SELECT2 select = 0 ; \\)",
    "insertText": "jobvs(computeU)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (\\ m_matU .)",
    "insertText": "resize(n, n)"
  },
  {
    "label": "lapack_int()",
    "kind": "Method",
    "detail": "Function (\\ lapack_int ldvs = internal::convert_index<)",
    "insertText": "lapack_int(m_matU.outerStride())"
  },
  {
    "label": "lapack_int()",
    "kind": "Method",
    "detail": "Function (\\ m_matT = matrix ; \\ lapack_int lda = internal::convert_index<)",
    "insertText": "lapack_int(m_matT.outerStride())"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (\\ Matrix<EIGTYPE,Dynamic,Dynamic> wr,wi ; \\ wr .)",
    "insertText": "resize(n, 1)"
  },
  {
    "label": "gees()",
    "kind": "Method",
    "detail": "Function (\\ info = LAPACKE_ # # LAPACKE_PREFIX # #)",
    "insertText": "gees(matrix_order, jobvs, sort, select, n, (LAPACKE_TYPE*)m_matT.data(), lda, &sdim, (LAPACKE_TYPE*)wr.data(), (LAPACKE_TYPE*)wi.data(), (LAPACKE_TYPE*)m_matU.data(), ldvs)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(info == 0)"
  }
]