[
  {
    "label": "ScopedFieldTrials",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedFieldTrials"
  },
  {
    "label": "ScopedFieldTrials()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_FIELD_TRIAL_H_ # define TEST_FIELD_TRIAL_H_ # include<string> # include \" absl / strings / string_view . h \" namespace webrtc { namespace test { class ScopedFieldTrials { public :)",
    "insertText": "ScopedFieldTrials(absl::string_view config)"
  },
  {
    "label": "ScopedFieldTrials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedFieldTrials(const ScopedFieldTrials&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScopedFieldTrials&)",
    "insertText": "operator(const ScopedFieldTrials&)"
  },
  {
    "label": "ScopedFieldTrials()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ScopedFieldTrials()"
  }
]