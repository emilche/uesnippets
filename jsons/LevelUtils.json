[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevelStreaming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreaming"
  },
  {
    "label": "FLevelUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelUtils"
  },
  {
    "label": "FApplyLevelTransformParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FApplyLevelTransformParams"
  },
  {
    "label": "IsValidStreamingLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidStreamingLevel(UWorld* InWorld, const TCHAR* InPackageName)"
  },
  {
    "label": "IsServerStreamingLevelVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsServerStreamingLevelVisible(UWorld* InWorld, const FName& InPackageName)"
  },
  {
    "label": "SupportsMakingVisibleTransactionRequests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsMakingVisibleTransactionRequests(UWorld* InWorld)"
  },
  {
    "label": "SupportsMakingInvisibleTransactionRequests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsMakingInvisibleTransactionRequests(UWorld* InWorld)"
  },
  {
    "label": "IsLevelLocked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLevelLocked(ULevel* Level)"
  },
  {
    "label": "IsLevelLocked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLevelLocked(AActor* Actor)"
  },
  {
    "label": "ToggleLevelLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleLevelLock(ULevel* Level)"
  },
  {
    "label": "IsLevelLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLevelLoaded(ULevel* Level)"
  },
  {
    "label": "IsStreamingLevelVisibleInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStreamingLevelVisibleInEditor(const ULevelStreaming* StreamingLevel)"
  },
  {
    "label": "IsStreamingLevelVisibleInEditor()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsStreamingLevelVisibleInEditor(StreamingLevel)"
  },
  {
    "label": "IsLevelVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLevelVisible(const ULevel* Level)"
  },
  {
    "label": "ApplyLevelTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyLevelTransform(const FApplyLevelTransformParams& TransformParams)"
  },
  {
    "label": "Params()",
    "kind": "Method",
    "detail": "Function (FApplyLevelTransformParams)",
    "insertText": "Params(Level, LevelTransform)"
  },
  {
    "label": "ApplyLevelTransform()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "ApplyLevelTransform(Params)"
  },
  {
    "label": "ApplyPostEditMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPostEditMove( ULevel* Level )"
  },
  {
    "label": "SetEditorTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditorTransform(ULevelStreaming* StreamingLevel, const FTransform& Transform, bool bDoPostEditMove = true)"
  },
  {
    "label": "ApplyEditorTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyEditorTransform(const ULevelStreaming* StreamingLevel, bool bDoPostEditMove = true, AActor* Actor = nullptr)"
  },
  {
    "label": "RemoveEditorTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEditorTransform(const ULevelStreaming* StreamingLevel, bool bDoPostEditMove = true, AActor* Actor = nullptr)"
  },
  {
    "label": "IsMovingLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMovingLevel()"
  },
  {
    "label": "IsApplyingLevelTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsApplyingLevelTransform()"
  }
]