[
  {
    "label": "FBuilderModifiedFiles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuilderModifiedFiles"
  },
  {
    "label": "EFileOperation",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EFileOperation"
  },
  {
    "label": "FSourceControlHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSourceControlHelper"
  },
  {
    "label": "DEFINE_LOG_CATEGORY_STATIC()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" SourceControlHelpers . h \" # include \" PackageSourceControlHelper . h \" # include \" WorldPartition / WorldPartition . h \")",
    "insertText": "DEFINE_LOG_CATEGORY_STATIC(LogWorldPartitionBuilderSourceControlHelper, All, All)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (struct FBuilderModifiedFiles { enum EFileOperation { FileAdded,FileEdited,FileDeleted,NumFileOperations } ; void)",
    "insertText": "Add(EFileOperation FileOp, const FString& File)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const TSet<FString>&)",
    "insertText": "Get(EFileOperation FileOp)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(EFileOperation FileOp, const TArray<FString>& InFiles)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(const FBuilderModifiedFiles& Other)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "GetAllFiles()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetAllFiles()"
  },
  {
    "label": "FSourceControlHelper()",
    "kind": "Method",
    "detail": "Function (private : TSet<FString> Files [ NumFileOperations ] ; } ; class FSourceControlHelper : public ISourceControlHelper { public :)",
    "insertText": "FSourceControlHelper(FPackageSourceControlHelper& InPackageHelper, FBuilderModifiedFiles& InModifiedFiles)"
  },
  {
    "label": "FSourceControlHelper()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSourceControlHelper()"
  },
  {
    "label": "GetFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFilename(const FString& PackageName)"
  },
  {
    "label": "GetFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFilename(UPackage* Package)"
  },
  {
    "label": "Checkout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Checkout(UPackage* Package)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Add(UPackage* Package)"
  },
  {
    "label": "Delete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Delete(const FString& PackageName)"
  },
  {
    "label": "Delete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Delete(UPackage* Package)"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Save(UPackage* Package)"
  }
]