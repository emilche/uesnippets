[
  {
    "label": "FAudioMixerWasapiRunnable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioMixerWasapiRunnable"
  },
  {
    "label": "FAudioMixerWasapiDeviceThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioMixerWasapiDeviceThread"
  },
  {
    "label": "FAudioMixerWasapiRunnable()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<atomic> # include \" HAL / Runnable . h \" # include \" HAL / RunnableThread . h \" # include \" Templates / Function . h \" # include \" Templates / UniquePtr . h \" # include \" Windows / AllowWindowsPlatformTypes . h \" # include \" Windows / AllowWindowsPlatformAtomics . h \" # include \" Microsoft / COMPointer . h \" THIRD_PARTY_INCLUDES_START # include<winnt . h> THIRD_PARTY_INCLUDES_END # include \" Windows / HideWindowsPlatformAtomics . h \" # include \" Windows / HideWindowsPlatformTypes . h \" namespace Audio { class FAudioMixerWasapiRunnable : public FRunnable { public :)",
    "insertText": "FAudioMixerWasapiRunnable()"
  },
  {
    "label": "FAudioMixerWasapiRunnable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAudioMixerWasapiRunnable(const TFunction<void()>& InDeviceRenderCallback, HANDLE& OutEventHandle)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Run()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (private : std::atomic<bool> bIsRunning ; HANDLE EventHandle = nullptr ; uint32 OutputStreamTimeoutsDetected = 0 ; TFunction<)",
    "insertText": "void()"
  },
  {
    "label": "FAudioMixerWasapiDeviceThread()",
    "kind": "Method",
    "detail": "Function (} ; class FAudioMixerWasapiDeviceThread { public :)",
    "insertText": "FAudioMixerWasapiDeviceThread()"
  },
  {
    "label": "FAudioMixerWasapiDeviceThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAudioMixerWasapiDeviceThread(const TFunction<void()>& InDeviceRenderCallback, HANDLE& OutEventHandle)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Start()"
  },
  {
    "label": "Abort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Abort()"
  }
]