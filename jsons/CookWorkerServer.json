[
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FProcHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProcHandle"
  },
  {
    "label": "FLogTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogTemplate"
  },
  {
    "label": "FMarshalledMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarshalledMessage"
  },
  {
    "label": "FCookDirector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookDirector"
  },
  {
    "label": "FDiscoveredPackageReplication",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiscoveredPackageReplication"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGeneratorEventMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeneratorEventMessage"
  },
  {
    "label": "FPackageData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageData"
  },
  {
    "label": "FPackageResultsMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageResultsMessage"
  },
  {
    "label": "FWorkerConnectMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorkerConnectMessage"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAssignPackageExtraData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssignPackageExtraData"
  },
  {
    "label": "FCookWorkerServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookWorkerServer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTickState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTickState"
  },
  {
    "label": "FCommunicationScopeLock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommunicationScopeLock"
  },
  {
    "label": "FAssignPackageData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssignPackageData"
  },
  {
    "label": "FPackageDataExistenceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageDataExistenceInfo"
  },
  {
    "label": "FAssignPackagesMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssignPackagesMessage"
  },
  {
    "label": "FAbortPackagesMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAbortPackagesMessage"
  },
  {
    "label": "FAbortWorkerMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAbortWorkerMessage"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "FInitialConfigMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitialConfigMessage"
  },
  {
    "label": "FDiscoveredPackageReplication",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiscoveredPackageReplication"
  },
  {
    "label": "FDiscoveredPackagesMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiscoveredPackagesMessage"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGeneratorEventMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeneratorEventMessage"
  },
  {
    "label": "FReplicatedLogData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicatedLogData"
  },
  {
    "label": "FUnstructuredLogData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnstructuredLogData"
  },
  {
    "label": "FLogMessagesMessageHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogMessagesMessageHandler"
  },
  {
    "label": "FLogRecordSerializationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogRecordSerializationContext"
  },
  {
    "label": "FHeartbeatMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeartbeatMessage"
  },
  {
    "label": "FPackageWriterMPCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageWriterMPCollector"
  },
  {
    "label": "FCookWorkerServer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FCookWorkerServer(FCookDirector& InDirector, int32 InProfileId, FWorkerId InWorkerId)"
  },
  {
    "label": "AppendAssignments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendAssignments(TArrayView<FPackageData*> Assignments,\n\t\tTMap<FPackageData*, FAssignPackageExtraData>&& ExtraDatas, TArrayView<FPackageData*> InfoPackages,\n\t\tECookDirectorThread TickThread)"
  },
  {
    "label": "AbortAssignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortAssignment(FPackageData& PackageData, ECookDirectorThread TickThread,\n\t\tENotifyRemote NotifyRemote = ENotifyRemote::NotifyRemote)"
  },
  {
    "label": "AbortAssignments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortAssignments(TConstArrayView<FPackageData*> PackageData, ECookDirectorThread TickThread,\n\t\tENotifyRemote = ENotifyRemote::NotifyRemote)"
  },
  {
    "label": "AbortAllAssignments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortAllAssignments(TSet<FPackageData*>& OutPendingPackages, ECookDirectorThread TickThread)"
  },
  {
    "label": "AbortWorker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortWorker(TSet<FPackageData*>& OutPendingPackages, ECookDirectorThread TickThread)"
  },
  {
    "label": "TryHandleConnectMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryHandleConnectMessage(FWorkerConnectMessage& Message, FSocket* InSocket,\n\t\tTArray<UE::CompactBinaryTCP::FMarshalledMessage>&& OtherPacketMessages, ECookDirectorThread TickThread)"
  },
  {
    "label": "SendMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendMessage(const IMPCollectorMessage& Message, ECookDirectorThread TickThread)"
  },
  {
    "label": "AppendMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendMessage(const IMPCollectorMessage& Message, ECookDirectorThread TickThread)"
  },
  {
    "label": "TickCommunication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickCommunication(ECookDirectorThread TickThread)"
  },
  {
    "label": "SignalHeartbeat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SignalHeartbeat(ECookDirectorThread TickThread, int32 HeartbeatNumber)"
  },
  {
    "label": "SignalCookComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SignalCookComplete(ECookDirectorThread TickThread)"
  },
  {
    "label": "HandleReceiveMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleReceiveMessages(ECookDirectorThread TickThread)"
  },
  {
    "label": "SetLastReceivedHeartbeatNumberInLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastReceivedHeartbeatNumberInLock(int32 InHeartbeatNumber)"
  },
  {
    "label": "LaunchProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LaunchProcess()"
  },
  {
    "label": "TickWaitForConnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickWaitForConnect()"
  },
  {
    "label": "TickWaitForDisconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickWaitForDisconnect()"
  },
  {
    "label": "PumpSendMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PumpSendMessages()"
  },
  {
    "label": "SendPendingMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendPendingMessages()"
  },
  {
    "label": "SendPendingPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendPendingPackages()"
  },
  {
    "label": "PumpReceiveMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PumpReceiveMessages()"
  },
  {
    "label": "AbortAllAssignmentsInLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortAllAssignmentsInLock(TSet<FPackageData*>& OutPendingPackages)"
  },
  {
    "label": "SendMessageInLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendMessageInLock(const IMPCollectorMessage& Message)"
  },
  {
    "label": "SendToState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendToState(EConnectStatus TargetStatus)"
  },
  {
    "label": "DetachFromRemoteProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachFromRemoteProcess(EWorkerDetachType DetachType)"
  },
  {
    "label": "SendCrashDiagnostics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendCrashDiagnostics()"
  },
  {
    "label": "ShutdownRemoteProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownRemoteProcess()"
  },
  {
    "label": "HandleReceiveMessagesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleReceiveMessagesInternal()"
  },
  {
    "label": "HandleReceivedPackagePlatformMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleReceivedPackagePlatformMessages(FPackageData& PackageData, const ITargetPlatform* TargetPlatform,\n\t\tTArray<UE::CompactBinaryTCP::FMarshalledMessage>&& Messages)"
  },
  {
    "label": "RecordResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordResults(FPackageResultsMessage& Message)"
  },
  {
    "label": "LogInvalidMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogInvalidMessage(const TCHAR* MessageTypeName)"
  },
  {
    "label": "QueueDiscoveredPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueDiscoveredPackage(FDiscoveredPackageReplication&& DiscoveredPackage)"
  },
  {
    "label": "HandleGeneratorMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleGeneratorMessage(FGeneratorEventMessage& GeneratorMessage)"
  },
  {
    "label": "MarshalToCompactBinaryTCP()",
    "kind": "Method",
    "detail": "Function (UE::CompactBinaryTCP::FMarshalledMessage)",
    "insertText": "MarshalToCompactBinaryTCP(const IMPCollectorMessage& Message)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FInstigator& Instigator)"
  },
  {
    "label": "TryRead()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRead(FCbFieldView Field, TConstArrayView<const ITargetPlatform*> OrderedSessionPlatforms)"
  },
  {
    "label": "TryRead()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRead(FCbFieldView Field)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"AssignPackagesMessage\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"AbortPackagesMessage\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"AbortWorkerMessage\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"InitialConfigMessage\")"
  },
  {
    "label": "ReadFromLocal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadFromLocal(const UCookOnTheFlyServer& COTFS, const TConstArrayView<const ITargetPlatform*>& InOrderedSessionPlatforms,\n\t\tconst FCookByTheBookOptions& InCookByTheBookOptions, const FCookOnTheFlyOptions& InCookOnTheFlyOptions,\n\t\tconst FBeginCookContextForWorker& InBeginContext)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(InitialSettings)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(BeginCookSettings)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(CookByTheBookOptions)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(CookOnTheFlyOptions)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(MPCollectorMessages)"
  },
  {
    "label": "TryRead()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRead(FCbFieldView Field, TConstArrayView<const ITargetPlatform*> OrderedSessionAndSpecialPlatforms)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"DiscoveredPackagesMessage\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"GeneratorEventMessage\")"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FReplicatedLogData& OutLogData)"
  },
  {
    "label": "InitializeClient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeClient()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FLogMessagesMessageHandler\")"
  },
  {
    "label": "Deserialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Deserialize(FCbFieldView Field, FLogRecord& OutLogRecord, int32 ProfileId)"
  },
  {
    "label": "ConditionalFlush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalFlush(int32 TableSize)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "FHeartbeatMessage()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FHeartbeatMessage(int32 InHeartbeatNumber=-1)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"HeartbeatMessage\")"
  },
  {
    "label": "FPackageWriterMPCollector()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPackageWriterMPCollector(UCookOnTheFlyServer& InCOTFS)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"PackageWriter\")"
  }
]