[
  {
    "label": "FRHICommandListBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListBase"
  },
  {
    "label": "FScriptContainerElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScriptContainerElement"
  },
  {
    "label": "FRHIPoolAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIPoolAllocator"
  },
  {
    "label": "FRHIPoolResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIPoolResource"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRHIPoolAllocationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHIPoolAllocationData"
  },
  {
    "label": "FRHIMemoryPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIMemoryPool"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" HAL / CriticalSection . h \" # include \" RHIFwd . h \" # include \" RHIPipeline . h \" class FRHICommandListBase ; struct FScriptContainerElement ; class FRHIPoolAllocator ; class FRHIPoolResource { } ; enum class ERHIPoolResourceTypes { Buffers = 0 x1,RTDSTextures = 0 x2,NonRTDSTextures = 0 x4,All = Buffers | RTDSTextures | NonRTDSTextures,} ; struct FRHIPoolAllocationData { public : void)",
    "insertText": "Reset()"
  },
  {
    "label": "InitAsHead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAsHead(int16 InPoolIndex)"
  },
  {
    "label": "InitAsFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAsFree(int16 InPoolIndex, uint32 InSize, uint32 InAlignment, uint32 InOffset)"
  },
  {
    "label": "InitAsAllocated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAsAllocated(uint32 InSize, uint32 InPoolAlignment, uint32 InAllocationAlignment, FRHIPoolAllocationData* InFree)"
  },
  {
    "label": "MoveFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveFrom(FRHIPoolAllocationData& InAllocated, bool InLocked)"
  },
  {
    "label": "MarkFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkFree(uint32 InPoolAlignment, uint32 InAllocationAlignment)"
  },
  {
    "label": "AddAlias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAlias(FRHIPoolAllocationData* InOther)"
  },
  {
    "label": "RemoveAlias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAlias()"
  },
  {
    "label": "GetFirstAlias()",
    "kind": "Method",
    "detail": "Function (FRHIPoolAllocationData*)",
    "insertText": "GetFirstAlias()"
  },
  {
    "label": "IsFree()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsFree()"
  },
  {
    "label": "IsAllocated()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAllocated()"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetSize()"
  },
  {
    "label": "GetOwner()",
    "kind": "Method",
    "detail": "Function (Owner = InOwner ; } FRHIPoolResource*)",
    "insertText": "GetOwner()"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Unlock()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (Locked = 0 ; } private : class FRHIMemoryPool ; class FRHIPoolAllocator ; void)",
    "insertText": "Lock()"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (Locked = 1 ; } void)",
    "insertText": "Merge(FRHIPoolAllocationData* InOther)"
  },
  {
    "label": "RemoveFromLinkedList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromLinkedList()"
  },
  {
    "label": "AddBefore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBefore(FRHIPoolAllocationData* InOther)"
  },
  {
    "label": "AddAfter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAfter(FRHIPoolAllocationData* InOther)"
  },
  {
    "label": "GetAllocationType()",
    "kind": "Method",
    "detail": "Function (enum class EAllocationType : uint8 { Unknown,Free,Allocated,Head,} ; EAllocationType)",
    "insertText": "GetAllocationType()"
  },
  {
    "label": "SetAllocationType()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetAllocationType(EAllocationType InType)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Type(uint32)"
  },
  {
    "label": "FRHIMemoryPool()",
    "kind": "Method",
    "detail": "Function (} uint32 Size ; uint32 Alignment ; uint32 Offset ; uint32 PoolIndex : 1 6 ; uint32 Type : 4 ; uint32 Locked : 1 ; uint32 Unused : 1 1 ; FRHIPoolAllocationData* PreviousAllocation ; FRHIPoolAllocationData* NextAllocation ; FRHIPoolAllocationData* AliasAllocation ; FRHIPoolResource* Owner ; } ; class FRHIMemoryPool { public : enum class EFreeListOrder { SortBySize,SortByOffset,} ;)",
    "insertText": "FRHIMemoryPool(int16 InPoolIndex, uint64 InPoolSize, uint32 InPoolAlignment, ERHIPoolResourceTypes InSupportedResourceTypes, EFreeListOrder InFreeListOrder)"
  },
  {
    "label": "FRHIMemoryPool()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRHIMemoryPool()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "TryAllocate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryAllocate(uint32 InSizeInBytes, uint32 InAllocationAlignment, ERHIPoolResourceTypes InAllocationResourceType, FRHIPoolAllocationData& AllocationData)"
  },
  {
    "label": "Deallocate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deallocate(FRHIPoolAllocationData& AllocationData)"
  },
  {
    "label": "TryClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryClear(FRHIContextArray const& Contexts, FRHIPoolAllocator* InAllocator, uint32 InMaxCopySize, uint32& CopySize, const TArray<FRHIMemoryPool*>& InTargetPools)"
  },
  {
    "label": "GetPoolIndex()",
    "kind": "Method",
    "detail": "Function (int16)",
    "insertText": "GetPoolIndex()"
  },
  {
    "label": "GetAlignmentWaste()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetAlignmentWaste()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "IsFull()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsFull()"
  },
  {
    "label": "GetAlignedOffset()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAlignedOffset(uint32 InOffset, uint32 InPoolAlignment, uint32 InAllocationAlignment)"
  },
  {
    "label": "FindFreeBlock()",
    "kind": "Method",
    "detail": "Function (protected : int32)",
    "insertText": "FindFreeBlock(uint32 InSizeInBytes, uint32 InAllocationAlignment)"
  },
  {
    "label": "AddToFreeBlocks()",
    "kind": "Method",
    "detail": "Function (FRHIPoolAllocationData*)",
    "insertText": "AddToFreeBlocks(FRHIPoolAllocationData* InFreeBlock)"
  },
  {
    "label": "RemoveFromFreeBlocks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromFreeBlocks(FRHIPoolAllocationData* InFreeBlock)"
  },
  {
    "label": "GetNewAllocationData()",
    "kind": "Method",
    "detail": "Function (FRHIPoolAllocationData*)",
    "insertText": "GetNewAllocationData()"
  },
  {
    "label": "ReleaseAllocationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseAllocationData(FRHIPoolAllocationData* InData)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Validate()"
  },
  {
    "label": "FRHIPoolAllocator()",
    "kind": "Method",
    "detail": "Function (int16 PoolIndex ; const uint64 PoolSize ; const uint32 PoolAlignment ; const ERHIPoolResourceTypes SupportedResourceTypes ; const EFreeListOrder FreeListOrder ; uint64 FreeSize ; uint64 AligmnentWaste ; uint32 AllocatedBlocks ; FRHIPoolAllocationData HeadBlock ; TArray<FRHIPoolAllocationData*> FreeBlocks ; TArray<FRHIPoolAllocationData*> AllocationDataPool ; } ; class FRHIPoolAllocator { public :)",
    "insertText": "FRHIPoolAllocator(uint64 InDefaultPoolSize, uint32 InPoolAlignment, uint32 InMaxAllocationSize, FRHIMemoryPool::EFreeListOrder InFreeListOrder, bool InDefragEnabled)"
  },
  {
    "label": "FRHIPoolAllocator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRHIPoolAllocator()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Defrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Defrag(FRHIContextArray const& Contexts, uint32 InMaxCopySize, uint32& CurrentCopySize)"
  },
  {
    "label": "UpdateMemoryStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMemoryStats(uint32& IOMemoryAllocated, uint32& IOMemoryUsed, uint32& IOMemoryFree, uint32& IOMemoryEndFree, uint32& IOAlignmentWaste, uint32& IOAllocatedPageCount, uint32& IOFullPageCount)"
  },
  {
    "label": "TryAllocateInternal()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "TryAllocateInternal(uint32 InSizeInBytes, uint32 InAllocationAlignment, ERHIPoolResourceTypes InAllocationResourceType, FRHIPoolAllocationData& AllocationData)"
  },
  {
    "label": "DeallocateInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeallocateInternal(FRHIPoolAllocationData& AllocationData)"
  },
  {
    "label": "CreateNewPool()",
    "kind": "Method",
    "detail": "Function (FRHIMemoryPool*)",
    "insertText": "CreateNewPool(int16 InPoolIndex, uint32 InMinimumAllocationSize, ERHIPoolResourceTypes InAllocationResourceType)"
  },
  {
    "label": "HandleDefragRequest()",
    "kind": "Method",
    "detail": "Function (class FRHIMemoryPool ; bool)",
    "insertText": "HandleDefragRequest(FRHIContextArray const& Contexts, FRHIPoolAllocationData* InSourceBlock, FRHIPoolAllocationData& InTmpTargetBlock)"
  }
]