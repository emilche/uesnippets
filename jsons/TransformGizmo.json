[
  {
    "label": "IGizmoAxisSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IGizmoAxisSource"
  },
  {
    "label": "IGizmoStateTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IGizmoStateTarget"
  },
  {
    "label": "IGizmoTransformSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IGizmoTransformSource"
  },
  {
    "label": "IToolContextTransactionProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolContextTransactionProvider"
  },
  {
    "label": "IToolsContextRenderAPI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolsContextRenderAPI"
  },
  {
    "label": "UMultiButtonClickDragBehavior",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMultiButtonClickDragBehavior"
  },
  {
    "label": "UGizmoConstantFrameAxisSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoConstantFrameAxisSource"
  },
  {
    "label": "UGizmoElementArrow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementArrow"
  },
  {
    "label": "UGizmoElementBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementBase"
  },
  {
    "label": "UGizmoElementBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementBox"
  },
  {
    "label": "UGizmoElementCircle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementCircle"
  },
  {
    "label": "UGizmoElementCone",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementCone"
  },
  {
    "label": "UGizmoElementCylinder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementCylinder"
  },
  {
    "label": "UGizmoElementGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementGroup"
  },
  {
    "label": "UGizmoElementHitMultiTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementHitMultiTarget"
  },
  {
    "label": "UGizmoElementRectangle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementRectangle"
  },
  {
    "label": "UGizmoElementRoot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementRoot"
  },
  {
    "label": "UGizmoElementTorus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementTorus"
  },
  {
    "label": "UInteractiveGizmoManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveGizmoManager"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UTransformProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTransformProxy"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FGizmosParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGizmosParameters"
  },
  {
    "label": "EDITORINTERACTIVETOOLSFRAMEWORK_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EDITORINTERACTIVETOOLSFRAMEWORK_API"
  },
  {
    "label": "SetDisallowNegativeScaling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisallowNegativeScaling(bool bDisallow)"
  },
  {
    "label": "SetActiveTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveTarget(UTransformProxy* Target, IToolContextTransactionProvider* TransactionProvider = nullptr, IGizmoStateTarget* InStateTarget = nullptr)"
  },
  {
    "label": "ClearActiveTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearActiveTarget()"
  },
  {
    "label": "SetNewChildScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNewChildScale(const FVector& NewChildScale)"
  },
  {
    "label": "SetVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibility(bool bVisible)"
  },
  {
    "label": "HandleWidgetModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWidgetModeChanged(UE::Widget::EWidgetMode InWidgetMode)"
  },
  {
    "label": "OnParametersChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnParametersChanged(const FGizmosParameters& InParameters)"
  },
  {
    "label": "UpdateCameraAxisSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCameraAxisSource()"
  },
  {
    "label": "SetupBehaviors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupBehaviors()"
  },
  {
    "label": "SetupIndirectBehaviors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupIndirectBehaviors()"
  },
  {
    "label": "SetupMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupMaterials()"
  },
  {
    "label": "SetupOnClickFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupOnClickFunctions()"
  },
  {
    "label": "UpdateMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMode()"
  },
  {
    "label": "EnableMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableMode(EGizmoTransformMode InGizmoMode, EAxisList::Type InAxisListToDraw)"
  },
  {
    "label": "EnableTranslate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableTranslate(EAxisList::Type InAxisListToDraw)"
  },
  {
    "label": "EnableRotate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableRotate(EAxisList::Type InAxisListToDraw)"
  },
  {
    "label": "EnableScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableScale(EAxisList::Type InAxisListToDraw)"
  },
  {
    "label": "EnablePlanarObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnablePlanarObjects(bool bTranslate, bool bEnableX, bool bEnableY, bool bEnableZ)"
  },
  {
    "label": "UpdateHoveredPart()",
    "kind": "Method",
    "detail": "Function (FInputRayHit)",
    "insertText": "UpdateHoveredPart(const FInputDeviceRay& DevicePos)"
  },
  {
    "label": "GetWorldAxis()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetWorldAxis(const FVector& InAxis)"
  },
  {
    "label": "GetNearestRayParamToInteractionAxis()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetNearestRayParamToInteractionAxis(const FInputDeviceRay& InRay)"
  },
  {
    "label": "GetRayParamIntersectionWithInteractionPlane()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRayParamIntersectionWithInteractionPlane(const FInputDeviceRay& InRay, float& OutHitParam)"
  },
  {
    "label": "UpdateHoverState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHoverState(const bool bInHover, const ETransformGizmoPartIdentifier InPartId)"
  },
  {
    "label": "ResetHoverStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetHoverStates(const EGizmoTransformMode InMode)"
  },
  {
    "label": "UpdateInteractingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInteractingState(const bool bInInteracting, const ETransformGizmoPartIdentifier InPartId, const bool bIdOnly = false)"
  },
  {
    "label": "ResetInteractingStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetInteractingStates(const EGizmoTransformMode InMode)"
  },
  {
    "label": "BeginTransformEditSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTransformEditSequence()"
  },
  {
    "label": "EndTransformEditSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndTransformEditSequence()"
  },
  {
    "label": "OnClickPressTranslateXAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressTranslateXAxis(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressTranslateYAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressTranslateYAxis(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressTranslateZAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressTranslateZAxis(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressAxis(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickDragTranslateAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDragTranslateAxis(const FInputDeviceRay& DragPos)"
  },
  {
    "label": "OnClickReleaseTranslateAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickReleaseTranslateAxis(const FInputDeviceRay& ReleasePos)"
  },
  {
    "label": "OnClickPressTranslateXYPlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressTranslateXYPlanar(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressTranslateYZPlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressTranslateYZPlanar(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressTranslateXZPlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressTranslateXZPlanar(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressPlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressPlanar(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickDragTranslatePlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDragTranslatePlanar(const FInputDeviceRay& DragPos)"
  },
  {
    "label": "OnClickReleaseTranslatePlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickReleaseTranslatePlanar(const FInputDeviceRay& ReleasePos)"
  },
  {
    "label": "ComputeAxisTranslateDelta()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ComputeAxisTranslateDelta(double InStartParam, double InEndParam)"
  },
  {
    "label": "ComputePlanarTranslateDelta()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ComputePlanarTranslateDelta(const FVector& InStartPoint, const FVector& InEndPoint)"
  },
  {
    "label": "OnClickPressScreenSpaceTranslate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressScreenSpaceTranslate(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickDragScreenSpaceTranslate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDragScreenSpaceTranslate(const FInputDeviceRay& DragPos)"
  },
  {
    "label": "OnClickReleaseScreenSpaceTranslate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickReleaseScreenSpaceTranslate(const FInputDeviceRay& ReleasePos)"
  },
  {
    "label": "OnClickPressRotateXAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressRotateXAxis(const FInputDeviceRay& InPressPos)"
  },
  {
    "label": "OnClickPressRotateYAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressRotateYAxis(const FInputDeviceRay& InPressPos)"
  },
  {
    "label": "OnClickPressRotateZAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressRotateZAxis(const FInputDeviceRay& InPressPos)"
  },
  {
    "label": "OnClickPressRotateAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressRotateAxis(const FInputDeviceRay& InPressPos)"
  },
  {
    "label": "OnClickDragRotateAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDragRotateAxis(const FInputDeviceRay& InDragPos)"
  },
  {
    "label": "OnClickReleaseRotateAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickReleaseRotateAxis(const FInputDeviceRay& InReleasePos)"
  },
  {
    "label": "GetScreenRotateAxisDir()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetScreenRotateAxisDir(const FInputDeviceRay& InPressPos)"
  },
  {
    "label": "ComputeAxisRotateDelta()",
    "kind": "Method",
    "detail": "Function (FQuat)",
    "insertText": "ComputeAxisRotateDelta(const FVector2D& InStartPos, const FInputDeviceRay& InDragPos)"
  },
  {
    "label": "OnClickPressRotateArc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnClickPressRotateArc( const FInputDeviceRay& InPressPos,\n\t\tconst FVector& InPlaneNormal, const FVector& InPlaneAxis1, const FVector& InPlaneAxis2)"
  },
  {
    "label": "OnClickPressScreenSpaceRotate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressScreenSpaceRotate(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickDragScreenSpaceRotate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDragScreenSpaceRotate(const FInputDeviceRay& InDragPos)"
  },
  {
    "label": "OnClickReleaseScreenSpaceRotate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickReleaseScreenSpaceRotate(const FInputDeviceRay& ReleasePos)"
  },
  {
    "label": "ComputeAngularRotateDelta()",
    "kind": "Method",
    "detail": "Function (FQuat)",
    "insertText": "ComputeAngularRotateDelta(double InStartAngle, double InEndAngle)"
  },
  {
    "label": "OnClickPressArcBallRotate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressArcBallRotate(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickDragArcBallRotate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDragArcBallRotate(const FInputDeviceRay& DragPos)"
  },
  {
    "label": "OnClickReleaseArcBallRotate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickReleaseArcBallRotate(const FInputDeviceRay& ReleasePos)"
  },
  {
    "label": "OnClickPressScaleXAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressScaleXAxis(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressScaleYAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressScaleYAxis(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressScaleZAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressScaleZAxis(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressScaleXYPlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressScaleXYPlanar(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressScaleYZPlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressScaleYZPlanar(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressScaleXZPlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressScaleXZPlanar(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressScaleXYZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressScaleXYZ(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPressScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPressScale(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickDragScaleAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDragScaleAxis(const FInputDeviceRay& DragPos)"
  },
  {
    "label": "OnClickDragScalePlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDragScalePlanar(const FInputDeviceRay& DragPos)"
  },
  {
    "label": "OnClickDragScaleXYZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDragScaleXYZ(const FInputDeviceRay& DragPos)"
  },
  {
    "label": "OnClickDragScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDragScale(const FInputDeviceRay& DragPos)"
  },
  {
    "label": "OnClickReleaseScaleAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickReleaseScaleAxis(const FInputDeviceRay& ReleasePos)"
  },
  {
    "label": "OnClickReleaseScalePlanar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickReleaseScalePlanar(const FInputDeviceRay& ReleasePos)"
  },
  {
    "label": "OnClickReleaseScaleXYZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickReleaseScaleXYZ(const FInputDeviceRay& ReleasePos)"
  },
  {
    "label": "ComputeScaleDelta()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ComputeScaleDelta(const FVector2D& InStartPos, const FVector2D& InEndPos, FVector2D& OutScreenDelta)"
  },
  {
    "label": "GetScreenProjectedAxis()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetScreenProjectedAxis(const UGizmoViewContext* View, const FVector& InLocalAxis, const FTransform& InLocalToWorld = FTransform::Identity)"
  },
  {
    "label": "ApplyTranslateDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyTranslateDelta(const FVector& InTranslateDelta)"
  },
  {
    "label": "ApplyRotateDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyRotateDelta(const FQuat& InRotateDelta)"
  },
  {
    "label": "ApplyScaleDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyScaleDelta(const FVector& InScaleDelta)"
  },
  {
    "label": "SetModeLastHitPart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModeLastHitPart(const EGizmoTransformMode InMode, const ETransformGizmoPartIdentifier InIdentifier)"
  }
]