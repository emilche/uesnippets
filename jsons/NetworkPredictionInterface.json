[
  {
    "label": "UNetworkPredictionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetworkPredictionInterface"
  },
  {
    "label": "INetworkPredictionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INetworkPredictionInterface"
  },
  {
    "label": "FNetworkPredictionData_Client",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkPredictionData_Client"
  },
  {
    "label": "FNetworkPredictionData_Server",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkPredictionData_Server"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Interface . h \" # include \" NetworkPredictionInterface . generated . h \")",
    "insertText": "UINTERFACE(MinimalAPI, meta=(CannotImplementInterfaceInBlueprint))"
  },
  {
    "label": "GENERATED_UINTERFACE_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UINTERFACE_BODY()"
  },
  {
    "label": "GENERATED_IINTERFACE_BODY()",
    "kind": "Method",
    "detail": "Function (class INetworkPredictionInterface {)",
    "insertText": "GENERATED_IINTERFACE_BODY() ENGINE_API virtual void SendClientAdjustment() PURE_VIRTUAL(INetworkPredictionInterface::SendClientAdjustment,)"
  },
  {
    "label": "ForcePositionUpdate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ForcePositionUpdate(float DeltaTime) PURE_VIRTUAL(INetworkPredictionInterface::ForcePositionUpdate, return false;)"
  },
  {
    "label": "SmoothCorrection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SmoothCorrection(const FVector& OldLocation, const FQuat& OldRotation, const FVector& NewLocation, const FQuat& NewRotation) PURE_VIRTUAL(INetworkPredictionInterface::SmoothCorrection,)"
  },
  {
    "label": "GetPredictionData_Client()",
    "kind": "Method",
    "detail": "Function (class FNetworkPredictionData_Client*)",
    "insertText": "GetPredictionData_Client() const PURE_VIRTUAL(INetworkPredictionInterface::GetPredictionData_Client, return NULL;)"
  },
  {
    "label": "GetPredictionData_Server()",
    "kind": "Method",
    "detail": "Function (class FNetworkPredictionData_Server*)",
    "insertText": "GetPredictionData_Server() const PURE_VIRTUAL(INetworkPredictionInterface::GetPredictionData_Server, return NULL;)"
  },
  {
    "label": "HasPredictionData_Client()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPredictionData_Client() const PURE_VIRTUAL(INetworkPredictionInterface::HasPredictionData_Client, return false;)"
  },
  {
    "label": "HasPredictionData_Server()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPredictionData_Server() const PURE_VIRTUAL(INetworkPredictionInterface::HasPredictionData_Server, return false;)"
  },
  {
    "label": "ResetPredictionData_Client()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPredictionData_Client() PURE_VIRTUAL(INetworkPredictionInterface::ResetPredictionData_Client,)"
  },
  {
    "label": "ResetPredictionData_Server()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPredictionData_Server() PURE_VIRTUAL(INetworkPredictionInterface::ResetPredictionData_Server,)"
  },
  {
    "label": "FNetworkPredictionData_Client()",
    "kind": "Method",
    "detail": "Function (} ; class FNetworkPredictionData_Client { public :)",
    "insertText": "FNetworkPredictionData_Client()"
  },
  {
    "label": "AddStructReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddStructReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "FNetworkPredictionData_Server()",
    "kind": "Method",
    "detail": "Function (} ; } ; class FNetworkPredictionData_Server { public :)",
    "insertText": "FNetworkPredictionData_Server() : ServerTimeStamp(0.f) , ServerTimeBeginningForcedUpdates(0.f) , ServerTimeLastForcedUpdate(0.f) , bTriggeringForcedUpdates(false) , bForcedUpdateDurationExceeded(false) , bLastRequestNeedsForcedUpdates(false)"
  },
  {
    "label": "FNetworkPredictionData_Server()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FNetworkPredictionData_Server()"
  },
  {
    "label": "ResetForcedUpdateState()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetForcedUpdateState()"
  }
]