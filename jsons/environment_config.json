[
  {
    "label": "EnvironmentType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EnvironmentType"
  },
  {
    "label": "EnvironmentParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EnvironmentParams"
  },
  {
    "label": "CanUseBackgroundThreadTypeForWorkerThread()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TASK_THREAD_POOL_ENVIRONMENT_CONFIG_H_ # define BASE_TASK_THREAD_POOL_ENVIRONMENT_CONFIG_H_ # include<stddef . h> # include \" base / base_export . h \" # include \" base / task / task_traits . h \" # include \" base / threading / thread . h \" namespace base { namespace internal { enum EnvironmentType { FOREGROUND = 0,FOREGROUND_BLOCKING,BACKGROUND,BACKGROUND_BLOCKING,ENVIRONMENT_COUNT } ; struct EnvironmentParams { const char* name_suffix ; ThreadType thread_type_hint ; } ; EnvironmentParams kEnvironmentParams [ ] = { { \" Foreground \",base::ThreadType::kDefault },{ \" ForegroundBlocking \",base::ThreadType::kDefault },{ \" Background \",base::ThreadType::kBackground },{ \" BackgroundBlocking \",base::ThreadType::kBackground },} ; bool BASE_EXPORT)",
    "insertText": "CanUseBackgroundThreadTypeForWorkerThread()"
  }
]