[
  {
    "label": "JobGroup()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "JobGroup(const std::wstring& processGroupName)"
  },
  {
    "label": "StartupMutex()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "StartupMutex(const std::wstring& processGroupName)"
  },
  {
    "label": "StartupNamedSharedMemory()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "StartupNamedSharedMemory(const std::wstring& processGroupName)"
  },
  {
    "label": "ServerReadyEvent()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "ServerReadyEvent(const std::wstring& processGroupName)"
  },
  {
    "label": "CompilationEvent()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "CompilationEvent(const std::wstring& processGroupName)"
  },
  {
    "label": "Pipe()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "Pipe(const std::wstring& processGroupName)"
  },
  {
    "label": "ExceptionPipe()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "ExceptionPipe(const std::wstring& processGroupName)"
  },
  {
    "label": "HeartBeatMutex()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "HeartBeatMutex(const std::wstring& processGroupName, Process::Id processId)"
  },
  {
    "label": "HeartBeatNamedSharedMemory()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "HeartBeatNamedSharedMemory(const std::wstring& processGroupName, Process::Id processId)"
  },
  {
    "label": "RequestRestart()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "RequestRestart(Process::Id processId)"
  },
  {
    "label": "PreparedRestart()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "PreparedRestart(Process::Id processId)"
  },
  {
    "label": "Restart()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "Restart(Process::Id processId)"
  }
]