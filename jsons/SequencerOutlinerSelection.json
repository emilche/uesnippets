[
  {
    "label": "IOutlinerExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOutlinerExtension"
  },
  {
    "label": "FOutlinerSelection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutlinerSelection"
  },
  {
    "label": "Filter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Delegates / Delegate . h \" # include \" SequencerCoreFwd . h \" # include \" MVVM / Selection / SequencerCoreSelectionTypes . h \" namespace UE::Sequencer { class IOutlinerExtension ; class FOutlinerSelection : public TSelectionSetBase<FOutlinerSelection,TWeakViewModelPtr<IOutlinerExtension>> { public : template<FilterType> TFilteredViewModelSelectionIterator<TWeakViewModelPtr<IOutlinerExtension>,FilterType>)",
    "insertText": "Filter()"
  },
  {
    "label": "OnSelectItem()",
    "kind": "Method",
    "detail": "Function (} private : TSelectionSetBase<FOutlinerSelection,TWeakViewModelPtr<IOutlinerExtension>> ; bool)",
    "insertText": "OnSelectItem(const TWeakViewModelPtr<IOutlinerExtension>& WeakViewModel)"
  },
  {
    "label": "OnDeselectItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeselectItem(const TWeakViewModelPtr<IOutlinerExtension>& WeakViewModel)"
  }
]