[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IGameplayDebugger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IGameplayDebugger"
  },
  {
    "label": "FGameplayDebuggerCategory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerCategory"
  },
  {
    "label": "FGameplayDebuggerExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerExtension"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" enum class EGameplayDebuggerCategoryState : uint8 { EnabledInGameAndSimulate,EnabledInGame,EnabledInSimulate,Disabled,Hidden,} ; class IGameplayDebugger : public IModuleInterface { public :)",
    "insertText": "DECLARE_DELEGATE_RetVal(TSharedRef<class FGameplayDebuggerCategory>, FOnGetCategory)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(TSharedRef<class FGameplayDebuggerExtension>, FOnGetExtension)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (IGameplayDebugger&)",
    "insertText": "Get()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "RegisterCategory()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterCategory(FName CategoryName, FOnGetCategory MakeInstanceDelegate, EGameplayDebuggerCategoryState CategoryState = EGameplayDebuggerCategoryState::Disabled, int32 SlotIdx = INDEX_NONE)"
  },
  {
    "label": "UnregisterCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCategory(FName CategoryName)"
  },
  {
    "label": "NotifyCategoriesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCategoriesChanged()"
  },
  {
    "label": "RegisterExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterExtension(FName ExtensionName, FOnGetExtension MakeInstanceDelegate)"
  },
  {
    "label": "UnregisterExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterExtension(FName ExtensionName)"
  },
  {
    "label": "NotifyExtensionsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyExtensionsChanged()"
  }
]