[
  {
    "label": "EnumSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EnumSet"
  },
  {
    "label": "EnumSet()",
    "kind": "Method",
    "detail": "Function (# ifndef ENUMSET_H # define ENUMSET_H # include \" unicode / utypes . h \" # if U_NAMESPACE_BEGIN template<T,uint32_t minValue,uint32_t limitValue> class EnumSet { public :)",
    "insertText": "EnumSet() : fBools(0)"
  },
  {
    "label": "EnumSet()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "EnumSet(const EnumSet<T,minValue,limitValue>& other) : fBools(other.fBools)"
  },
  {
    "label": "EnumSet()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "EnumSet()"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (} # ifndef void)",
    "insertText": "clear()"
  },
  {
    "label": "add()",
    "kind": "Method",
    "detail": "Function (fBools = 0 ; } void)",
    "insertText": "add(T toAdd)"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set(toAdd, 1)"
  },
  {
    "label": "remove()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "remove(T toRemove)"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set(toRemove, 0)"
  },
  {
    "label": "contains()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "contains(T toCheck)"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set(T toSet, int32_t v)"
  },
  {
    "label": "fBools()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fBools(fBools&(~flag(toSet)))|(v?(flag(toSet)):0)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "get(T toCheck)"
  },
  {
    "label": "isValidEnum()",
    "kind": "Method",
    "detail": "Function (} UBool)",
    "insertText": "isValidEnum(T toCheck)"
  },
  {
    "label": "isValidValue()",
    "kind": "Method",
    "detail": "Function (} UBool)",
    "insertText": "isValidValue(int32_t v)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} const EnumSet<T,minValue,limitValue>&)",
    "insertText": "operator(const EnumSet<T,minValue,limitValue>& other)"
  },
  {
    "label": "getAll()",
    "kind": "Method",
    "detail": "Function (fBools = other . fBools ; return* this ; } uint32_t)",
    "insertText": "getAll()"
  }
]