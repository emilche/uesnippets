[
  {
    "label": "FSocketWindows",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketWindows"
  },
  {
    "label": "PLATFORM_HAS_BSD_SOCKET_FEATURE_WINSOCKETS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / PlatformTime . h \" # if)",
    "insertText": "PLATFORM_HAS_BSD_SOCKET_FEATURE_WINSOCKETS(PLATFORM_HAS_BSD_SOCKETS || PLATFORM_HAS_BSD_IPV6_SOCKETS)"
  },
  {
    "label": "FSocketWindows()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FSocketWindows(SOCKET InSocket, ESocketType InSocketType, const FString& InSocketDescription, const FName& InSocketProtocol, ISocketSubsystem* InSubsystem) : FSocketBSD(InSocket, InSocketType, InSocketDescription, InSocketProtocol, InSubsystem)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Shutdown(ESocketShutdownMode Mode)"
  },
  {
    "label": "SetIpPktInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetIpPktInfo(bool bEnable)"
  },
  {
    "label": "RecvFromWithPktInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RecvFromWithPktInfo(uint8* Data, int32 BufferSize, int32& BytesRead, FInternetAddr& Source, FInternetAddr& Destination, ESocketReceiveFlags::Type Flags = ESocketReceiveFlags::None)"
  }
]