[
  {
    "label": "FAbstractVisitor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAbstractVisitor"
  },
  {
    "label": "VProcedure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VProcedure"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (struct FAbstractVisitor ; struct VProcedure : VCell {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VCell)"
  },
  {
    "label": "GetNamedParamsBegin()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; TWriteBarrier<VUniqueString> FilePath ; TWriteBarrier<VUniqueString> Name ; uint32 NumRegisters ; uint32 NumPositionalParameters ; uint32 NumNamedParameters ; uint32 NumConstants ; uint32 NumOpBytes ; uint32 NumOperands ; uint32 NumLabels ; uint32 NumUnwindEdges ; uint32 NumOpLocations ; uint32 NumRegisterNames ; TWriteBarrier<VCell> Trailing [ ] ; FNamedParam*)",
    "insertText": "GetNamedParamsBegin()"
  },
  {
    "label": "GetNamedParamsEnd()",
    "kind": "Method",
    "detail": "Function (} FNamedParam*)",
    "insertText": "GetNamedParamsEnd()"
  },
  {
    "label": "GetConstantsBegin()",
    "kind": "Method",
    "detail": "Function (} TWriteBarrier<VValue>*)",
    "insertText": "GetConstantsBegin()"
  },
  {
    "label": "GetConstantsEnd()",
    "kind": "Method",
    "detail": "Function (} TWriteBarrier<VValue>*)",
    "insertText": "GetConstantsEnd()"
  },
  {
    "label": "GetOpsBegin()",
    "kind": "Method",
    "detail": "Function (} FOp*)",
    "insertText": "GetOpsBegin()"
  },
  {
    "label": "GetOpsEnd()",
    "kind": "Method",
    "detail": "Function (} FOp*)",
    "insertText": "GetOpsEnd()"
  },
  {
    "label": "GetOperandsBegin()",
    "kind": "Method",
    "detail": "Function (} FValueOperand*)",
    "insertText": "GetOperandsBegin()"
  },
  {
    "label": "GetOperandsEnd()",
    "kind": "Method",
    "detail": "Function (} FValueOperand*)",
    "insertText": "GetOperandsEnd()"
  },
  {
    "label": "GetLabelsBegin()",
    "kind": "Method",
    "detail": "Function (} FLabelOffset*)",
    "insertText": "GetLabelsBegin()"
  },
  {
    "label": "GetLabelsEnd()",
    "kind": "Method",
    "detail": "Function (} FLabelOffset*)",
    "insertText": "GetLabelsEnd()"
  },
  {
    "label": "GetUnwindEdgesBegin()",
    "kind": "Method",
    "detail": "Function (} FUnwindEdge*)",
    "insertText": "GetUnwindEdgesBegin()"
  },
  {
    "label": "GetUnwindEdgesEnd()",
    "kind": "Method",
    "detail": "Function (} FUnwindEdge*)",
    "insertText": "GetUnwindEdgesEnd()"
  },
  {
    "label": "GetOpLocationsBegin()",
    "kind": "Method",
    "detail": "Function (} FOpLocation*)",
    "insertText": "GetOpLocationsBegin()"
  },
  {
    "label": "GetOpLocationsEnd()",
    "kind": "Method",
    "detail": "Function (} FOpLocation*)",
    "insertText": "GetOpLocationsEnd()"
  },
  {
    "label": "GetRegisterNamesBegin()",
    "kind": "Method",
    "detail": "Function (} FRegisterName*)",
    "insertText": "GetRegisterNamesBegin()"
  },
  {
    "label": "GetRegisterNamesEnd()",
    "kind": "Method",
    "detail": "Function (} FRegisterName*)",
    "insertText": "GetRegisterNamesEnd()"
  },
  {
    "label": "BytecodeOffset()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "BytecodeOffset(const FOp& Bytecode)"
  },
  {
    "label": "BytecodeOffset()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "BytecodeOffset(const void* Data)"
  },
  {
    "label": "GetLocation()",
    "kind": "Method",
    "detail": "Function (} const FLocation*)",
    "insertText": "GetLocation(const FOp& Op)"
  },
  {
    "label": "GetLocation()",
    "kind": "Method",
    "detail": "Function (} const FLocation*)",
    "insertText": "GetLocation(int32 OpOffset)"
  },
  {
    "label": "SetConstant()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetConstant(FAllocationContext Context, FConstantIndex ConstantIndex, VValue Value)"
  },
  {
    "label": "GetConstantsBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetConstantsBegin()[ConstantIndex.Index].Set(Context, Value)"
  },
  {
    "label": "GetConstant()",
    "kind": "Method",
    "detail": "Function (} VValue)",
    "insertText": "GetConstant(FConstantIndex ConstantIndex)"
  },
  {
    "label": "NewUninitialized()",
    "kind": "Method",
    "detail": "Function (} VProcedure&)",
    "insertText": "NewUninitialized(FAllocationContext Context, VUniqueString& FilePath, VUniqueString& Name, uint32 NumRegisters, uint32 NumPositionalParameters, uint32 NumNamedParameters, uint32 NumConstants, uint32 NumOpBytes, uint32 NumOperands, uint32 NumLabels, uint32 NumUnwindEdges, uint32 NumOpLocations, uint32 NumRegisterNames)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (const size_t NumBytes =)",
    "insertText": "offsetof(VProcedure, Trailing) + sizeof(FNamedParam) * NumNamedParameters + sizeof(TWriteBarrier<VValue>) * NumConstants + NumOpBytes + sizeof(FValueOperand) * NumOperands + sizeof(FLabelOffset) * NumLabels + sizeof(FUnwindEdge) * NumUnwindEdges + sizeof(FOpLocation) * NumOpLocations + sizeof(FRegisterName)"
  },
  {
    "label": "SerializeImpl()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SerializeImpl(VProcedure*& This, FAllocationContext Context, FAbstractVisitor& Visitor)"
  },
  {
    "label": "VProcedure()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "VProcedure(FAllocationContext Context, VUniqueString& FilePath, VUniqueString& Name, uint32 InNumRegisters, uint32 InNumPositionalParameters, uint32 InNumNamedParameters, uint32 InNumConstants, uint32 InNumOpBytes, uint32 InNumOperands, uint32 InNumLabels, uint32 InNumUnwindEdges, uint32 InNumOpLocations, uint32 InNumRegisterNames) : VCell(Context, &GlobalTrivialEmergentType.Get(Context)) , FilePath(Context, FilePath) , Name(Context, Name) , NumRegisters(InNumRegisters) , NumPositionalParameters(InNumPositionalParameters) , NumNamedParameters(InNumNamedParameters) , NumConstants(InNumConstants) , NumOpBytes(InNumOpBytes) , NumOperands(InNumOperands) , NumLabels(InNumLabels) , NumUnwindEdges(InNumUnwindEdges) , NumOpLocations(InNumOpLocations) , NumRegisterNames(InNumRegisterNames)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(NamedParam)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (} ; })",
    "insertText": "for(TWriteBarrier<VValue>* Constant = GetConstantsBegin(); Constant != GetConstantsEnd(); ++Constant)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(Constant)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (} ; })",
    "insertText": "for(FValueOperand* Operand = GetOperandsBegin(); Operand != GetOperandsEnd(); ++Operand)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(Operand)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (} ; })",
    "insertText": "for(FLabelOffset* Label = GetLabelsBegin(); Label != GetLabelsEnd(); ++Label)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(Label)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (} ; })",
    "insertText": "for(FUnwindEdge* UnwindEdge = GetUnwindEdgesBegin(); UnwindEdge != GetUnwindEdgesEnd(); ++UnwindEdge)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(UnwindEdge)"
  },
  {
    "label": "ForEachOpCode()",
    "kind": "Method",
    "detail": "Function (} ; } } template<FuncType> void)",
    "insertText": "ForEachOpCode(FuncType&& Func)"
  },
  {
    "label": "LoadOpCodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadOpCodes(FAbstractVisitor& Visitor)"
  },
  {
    "label": "SaveOpCodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveOpCodes(FAbstractVisitor& Visitor)"
  }
]