[
  {
    "label": "FAssetEditorViewportLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorViewportLayout"
  },
  {
    "label": "SAssetEditorViewportsOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetEditorViewportsOverlay"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "SAssetEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetEditorViewport"
  },
  {
    "label": "FEditorViewportTabContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportTabContent"
  },
  {
    "label": "FViewportTabContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewportTabContent"
  },
  {
    "label": "FAssetEditorViewportConstructionArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetEditorViewportConstructionArgs"
  },
  {
    "label": "FAssetEditorViewportPaneLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorViewportPaneLayout"
  },
  {
    "label": "FAssetEditorViewportConstructionArgs()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" Stats / Stats . h \" # include \" Misc / Attribute . h \" # include \" Animation / CurveSequence . h \" # include \" Layout / Visibility . h \" # include \" Widgets / SWidget . h \" # include \" Editor / UnrealEdTypes . h \" # include \" Application / ThrottleManager . h \" # include \" EditorViewportLayout . h \" # include \" TickableEditorObject . h \" # include \" SEditorViewport . h \" class FAssetEditorViewportLayout ; class SAssetEditorViewportsOverlay ; class SWindow ; class SAssetEditorViewport ; class FEditorViewportTabContent ; class FViewportTabContent ; struct FAssetEditorViewportConstructionArgs {)",
    "insertText": "FAssetEditorViewportConstructionArgs() : ViewportType(LVT_Perspective) , bRealtime(false)"
  },
  {
    "label": "SAssetEditorViewport()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FAssetEditorViewportLayout> ParentLayout ; ELevelViewportType ViewportType ; bool bRealtime ; FName ConfigKey ; TAttribute<bool> IsEnabled ; } ; using AssetEditorViewportFactoryFunction = TFunction<TSharedRef<)",
    "insertText": "SAssetEditorViewport(const FAssetEditorViewportConstructionArgs&)"
  },
  {
    "label": "TwoPanesHoriz()",
    "kind": "Method",
    "detail": "Function (namespace EditorViewportConfigurationNames { const FName)",
    "insertText": "TwoPanesHoriz(\"TwoPanesHoriz\")"
  },
  {
    "label": "TwoPanesVert()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "TwoPanesVert(\"TwoPanesVert\")"
  },
  {
    "label": "ThreePanesLeft()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "ThreePanesLeft(\"ThreePanesLeft\")"
  },
  {
    "label": "ThreePanesRight()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "ThreePanesRight(\"ThreePanesRight\")"
  },
  {
    "label": "ThreePanesTop()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "ThreePanesTop(\"ThreePanesTop\")"
  },
  {
    "label": "ThreePanesBottom()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "ThreePanesBottom(\"ThreePanesBottom\")"
  },
  {
    "label": "FourPanesLeft()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "FourPanesLeft(\"FourPanesLeft\")"
  },
  {
    "label": "FourPanesRight()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "FourPanesRight(\"FourPanesRight\")"
  },
  {
    "label": "FourPanesTop()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "FourPanesTop(\"FourPanesTop\")"
  },
  {
    "label": "FourPanesBottom()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "FourPanesBottom(\"FourPanesBottom\")"
  },
  {
    "label": "FourPanes2x2()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "FourPanes2x2(\"FourPanes2x2\")"
  },
  {
    "label": "OnePane()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "OnePane(\"OnePane\")"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} class SAssetEditorViewportsOverlay : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAssetEditorViewportsOverlay)"
  },
  {
    "label": "SLATE_DEFAULT_SLOT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_DEFAULT_SLOT(FArguments, Content) SLATE_ARGUMENT(TSharedPtr<FViewportTabContent>, ViewportTab) SLATE_END_ARGS() UNREALED_API void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SAssetEditorViewportsOverlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SAssetEditorViewportsOverlay() : CachedSize(FVector2D::ZeroVector)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "AddSlot()",
    "kind": "Method",
    "detail": "Function (SOverlay::FScopedWidgetSlotArguments)",
    "insertText": "AddSlot()"
  },
  {
    "label": "RemoveSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSlot()"
  },
  {
    "label": "GetCachedSize()",
    "kind": "Method",
    "detail": "Function (const FVector2D&)",
    "insertText": "GetCachedSize()"
  },
  {
    "label": "GetViewportTab()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FViewportTabContent>)",
    "insertText": "GetViewportTab()"
  },
  {
    "label": "FAssetEditorViewportPaneLayout()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<FViewportTabContent> ViewportTab ; TSharedPtr<SOverlay> OverlayWidget ; FVector2D CachedSize ; } ; class FAssetEditorViewportPaneLayout { public : ~)",
    "insertText": "FAssetEditorViewportPaneLayout()"
  },
  {
    "label": "MakeViewportLayout()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeViewportLayout(TSharedPtr<FAssetEditorViewportLayout> InParentLayout, const FString& LayoutString)"
  },
  {
    "label": "GetLayoutTypeName()",
    "kind": "Method",
    "detail": "Function (const FName&)",
    "insertText": "GetLayoutTypeName()"
  },
  {
    "label": "LoadConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadConfig(const FString& LayoutString, TFunction<void(const FString&, const FName)> LoadAdditionalLayoutInfoCallback = nullptr)"
  },
  {
    "label": "SaveConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveConfig(const FString& LayoutString, TFunction<void(const FString&)> SaveAdditionalLayoutInfoCallback = nullptr)"
  },
  {
    "label": "ReplaceWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceWidget(TSharedRef<SWidget> OriginalWidget, TSharedRef<SWidget> ReplacementWidget)"
  },
  {
    "label": "GetTypeSpecificLayoutString()",
    "kind": "Method",
    "detail": "Function (protected : FString)",
    "insertText": "GetTypeSpecificLayoutString(const FString& LayoutString)"
  },
  {
    "label": "SaveLayoutString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveLayoutString(const FString& LayoutString)"
  },
  {
    "label": "LoadLayoutString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "LoadLayoutString(const FString& LayoutString)"
  },
  {
    "label": "FAssetEditorViewportLayout()",
    "kind": "Method",
    "detail": "Function (} FName PerspectiveViewportConfigKey ; } ; class FAssetEditorViewportLayout : public TSharedFromThis<FAssetEditorViewportLayout>,public FEditorViewportLayout,public FTickableEditorObject { public :)",
    "insertText": "FAssetEditorViewportLayout()"
  },
  {
    "label": "FactoryViewport()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "FactoryViewport(FName InTypeName, const FAssetEditorViewportConstructionArgs& ConstructionArgs)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "IsTickable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsTickable()"
  },
  {
    "label": "FactoryPaneConfigurationFromTypeName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FactoryPaneConfigurationFromTypeName(const FName& InLayoutConfigTypeName)"
  },
  {
    "label": "GetActivePaneConfigurationTypeName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "GetActivePaneConfigurationTypeName()"
  },
  {
    "label": "BuildViewportLayout()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildViewportLayout(TSharedPtr<SDockTab> InParentDockTab, TSharedPtr<FEditorViewportTabContent> InParentTab, const FString& LayoutString)"
  },
  {
    "label": "GetParentTabContent()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<FEditorViewportTabContent>)",
    "insertText": "GetParentTabContent()"
  },
  {
    "label": "LoadConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadConfig(const FString& LayoutString)"
  },
  {
    "label": "SaveConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveConfig(const FString& LayoutString)"
  },
  {
    "label": "OnGetNonMaximizedVisibility()",
    "kind": "Method",
    "detail": "Function (protected : EVisibility)",
    "insertText": "OnGetNonMaximizedVisibility()"
  }
]