[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "TIntervalTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIntervalTraits"
  },
  {
    "label": "FDateTime",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDateTime"
  },
  {
    "label": "FTimespan",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimespan"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "Z_Construct_UScriptStruct_FTimespan_Statics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Z_Construct_UScriptStruct_FTimespan_Statics"
  },
  {
    "label": "TIntervalTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIntervalTraits"
  },
  {
    "label": "FTimespan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FTimespan(Ticks + Other.Ticks)"
  },
  {
    "label": "FTimespan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FTimespan(-Ticks)"
  },
  {
    "label": "FTimespan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FTimespan(Ticks - Other.Ticks)"
  },
  {
    "label": "FTimespan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FTimespan(Ticks % Other.Ticks)"
  },
  {
    "label": "FTimespan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FTimespan(Ticks >= 0 ? Ticks : -Ticks)"
  },
  {
    "label": "ImportTextItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportTextItem(const TCHAR*& Buffer, int32 PortFlags, UObject* Parent, FOutputDevice* ErrorText)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "NetSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetSerialize(FArchive& Ar, class UPackageMap* Map, bool& bOutSuccess)"
  },
  {
    "label": "FTimespan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FTimespan(ETimespan::MaxTicks)"
  },
  {
    "label": "FTimespan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FTimespan(ETimespan::MinTicks)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(const FString& TimespanString, FTimespan& OutTimespan)"
  },
  {
    "label": "FTimespan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FTimespan(0)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FTimespan& Timespan)"
  },
  {
    "label": "Assign()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Assign(int32 Days, int32 Hours, int32 Minutes, int32 Seconds, int32 FractionNano)"
  }
]