[
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "UPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterial"
  },
  {
    "label": "USubsurfaceProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USubsurfaceProfile"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UTextureCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCollection"
  },
  {
    "label": "FMaterialShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMap"
  },
  {
    "label": "FMaterialShaderMapId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMapId"
  },
  {
    "label": "FMaterialUpdateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialUpdateContext"
  },
  {
    "label": "FSHAHash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSHAHash"
  },
  {
    "label": "FScalarParameterAtlasInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScalarParameterAtlasInstanceData"
  },
  {
    "label": "UCurveLinearColor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveLinearColor"
  },
  {
    "label": "UCurveLinearColorAtlas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveLinearColorAtlas"
  },
  {
    "label": "FScalarParameterValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScalarParameterValue"
  },
  {
    "label": "FVectorParameterValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVectorParameterValue"
  },
  {
    "label": "FDoubleVectorParameterValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDoubleVectorParameterValue"
  },
  {
    "label": "FTextureParameterValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureParameterValue"
  },
  {
    "label": "FTextureCollectionParameterValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureCollectionParameterValue"
  },
  {
    "label": "FRuntimeVirtualTextureParameterValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRuntimeVirtualTextureParameterValue"
  },
  {
    "label": "URuntimeVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeVirtualTexture"
  },
  {
    "label": "FSparseVolumeTextureParameterValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSparseVolumeTextureParameterValue"
  },
  {
    "label": "USparseVolumeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USparseVolumeTexture"
  },
  {
    "label": "FFontParameterValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFontParameterValue"
  },
  {
    "label": "UFont",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFont"
  },
  {
    "label": "FUserSceneTextureOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUserSceneTextureOverride"
  },
  {
    "label": "FPostProcessBlendableOverrides",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPostProcessBlendableOverrides"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FMaterialInstanceCachedData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialInstanceCachedData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMaterialInstanceParameterUpdateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialInstanceParameterUpdateContext"
  },
  {
    "label": "UMaterialInstanceEditorOnlyData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceEditorOnlyData"
  },
  {
    "label": "UMaterialInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstance"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FMaterialInstanceBasePropertyOverrides",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialInstanceBasePropertyOverrides"
  },
  {
    "label": "FMaterialInstanceResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialInstanceResource"
  },
  {
    "label": "FMeshUVChannelInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshUVChannelInfo"
  },
  {
    "label": "FTextureParameterOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureParameterOverride"
  },
  {
    "label": "FStaticParameterSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticParameterSet"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UMaterialFunctionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialFunctionInterface"
  },
  {
    "label": "FStableShaderKeyAndValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStableShaderKeyAndValue"
  },
  {
    "label": "UMaterialEditingLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialEditingLibrary"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Materials / MaterialOverrideNanite . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Guid . h \" # include \" Materials / MaterialInterface . h \" # include \" Materials / MaterialInstanceBasePropertyOverrides . h \" # include \" MaterialInstance . generated . h \" class ITargetPlatform ; class UPhysicalMaterial ; class USubsurfaceProfile ; class UTexture ; class UTextureCollection ; class FMaterialShaderMap ; class FMaterialShaderMapId ; class FMaterialUpdateContext ; class FSHAHash ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FScalarParameterAtlasInstanceData& Other)"
  },
  {
    "label": "FScalarParameterAtlasInstanceData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FScalarParameterAtlasInstanceData() : bIsUsedAsAtlasPosition(false)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() #if WITH_EDITORONLY_DATA UPROPERTY()"
  },
  {
    "label": "FScalarParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScalarParameterValue(const FMaterialParameterInfo& InParameterInfo = FMaterialParameterInfo(), float InValue = 0.0f, const FScalarParameterAtlasInstanceData& InAtlasData = FScalarParameterAtlasInstanceData()) : ParameterInfo(InParameterInfo), ParameterValue(InValue)"
  },
  {
    "label": "IsOverride()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA AtlasData = InAtlasData ; # endif } bool)",
    "insertText": "IsOverride()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} typedef float ValueType ; ValueType)",
    "insertText": "GetValue(const FScalarParameterValue& Parameter)"
  },
  {
    "label": "FVectorParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVectorParameterValue(const FMaterialParameterInfo& InParameterInfo = FMaterialParameterInfo(), const FLinearColor& InValue = FLinearColor(ForceInit)) : ParameterInfo(InParameterInfo), ParameterValue(InValue)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} typedef FLinearColor ValueType ; ValueType)",
    "insertText": "GetValue(const FVectorParameterValue& Parameter)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = VectorParameterValue)"
  },
  {
    "label": "FDoubleVectorParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDoubleVectorParameterValue(const FMaterialParameterInfo& InParameterInfo = FMaterialParameterInfo(), const FVector4d& InValue = FVector4d(0.f, 0.f, 0.f, 1.f)) : ParameterInfo(InParameterInfo), ParameterValue(InValue)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} typedef FVector4d ValueType ; ValueType)",
    "insertText": "GetValue(const FDoubleVectorParameterValue& Parameter)"
  },
  {
    "label": "FTextureParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTextureParameterValue(const FMaterialParameterInfo& InParameterInfo = FMaterialParameterInfo(), class UTexture* InValue = nullptr) : ParameterInfo(InParameterInfo), ParameterValue(InValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FTextureParameterValue& Other)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} typedef const UTexture* ValueType ; ValueType)",
    "insertText": "GetValue(const FTextureParameterValue& Parameter)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=TextureCollectionParameterValue)"
  },
  {
    "label": "FTextureCollectionParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTextureCollectionParameterValue(const FMaterialParameterInfo& InParameterInfo = FMaterialParameterInfo(), UTextureCollection* InValue = nullptr) : ParameterInfo(InParameterInfo), ParameterValue(InValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FTextureCollectionParameterValue& Other)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} typedef const UTextureCollection* ValueType ; ValueType)",
    "insertText": "GetValue(const FTextureCollectionParameterValue& Parameter)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = RuntimeVirtualTextureParameterValue)"
  },
  {
    "label": "FRuntimeVirtualTextureParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRuntimeVirtualTextureParameterValue(const FMaterialParameterInfo& InParameterInfo = FMaterialParameterInfo(), class URuntimeVirtualTexture* InValue = nullptr) : ParameterInfo(InParameterInfo), ParameterValue(InValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FRuntimeVirtualTextureParameterValue& Other)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} typedef const URuntimeVirtualTexture* ValueType ; ValueType)",
    "insertText": "GetValue(const FRuntimeVirtualTextureParameterValue& Parameter)"
  },
  {
    "label": "FSparseVolumeTextureParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSparseVolumeTextureParameterValue(const FMaterialParameterInfo& InParameterInfo = FMaterialParameterInfo(), class USparseVolumeTexture* InValue = nullptr) : ParameterInfo(InParameterInfo), ParameterValue(InValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FSparseVolumeTextureParameterValue& Other)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} typedef const USparseVolumeTexture* ValueType ; ValueType)",
    "insertText": "GetValue(const FSparseVolumeTextureParameterValue& Parameter)"
  },
  {
    "label": "FFontParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFontParameterValue(const FMaterialParameterInfo& InParameterInfo = FMaterialParameterInfo(), class UFont* InFont = nullptr, int32 InPage = 0) : ParameterInfo(InParameterInfo), FontValue(InFont), FontPage(InPage)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FFontParameterValue& Other)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} typedef const UTexture* ValueType ; ValueType)",
    "insertText": "GetValue(const FFontParameterValue& Parameter)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetValue(FMaterialParameterMetadata& OutResult)"
  },
  {
    "label": "FMaterialParameterValue()",
    "kind": "Method",
    "detail": "Function (OutResult . Value =)",
    "insertText": "FMaterialParameterValue(FontValue, FontPage)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=UserSceneTextureOverrideValue)"
  },
  {
    "label": "CompareValueArraysByExpressionGUID()",
    "kind": "Method",
    "detail": "Function (} ; struct FPostProcessBlendableOverrides { bool bOverrideBlendableLocation = false ; bool bOverrideBlendablePriority = false ; TEnumAsByte<EBlendableLocation> BlendableLocationOverride = BL_SceneColorAfterTonemapping ; int32 BlendablePriorityOverride = 0 ; } ; template<class T> bool)",
    "insertText": "CompareValueArraysByExpressionGUID(const TArray<T>& InA, const TArray<T>& InB)"
  },
  {
    "label": "BB()",
    "kind": "Method",
    "detail": "Function (TArray<T>)",
    "insertText": "BB(InB)"
  },
  {
    "label": "Sort()",
    "kind": "Method",
    "detail": "Function (AA .)",
    "insertText": "Sort([](const T& A, const T& B) { return B.ExpressionGUID < A.ExpressionGUID; })"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "InitializeForConstant()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "InitializeForConstant(const FMaterialLayersFunctions* Layers, const FMaterialLayersFunctions* ParentLayers)"
  },
  {
    "label": "InitializeForDynamic()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "InitializeForDynamic(const FMaterialLayersFunctions* ParentLayers)"
  },
  {
    "label": "Numeric()",
    "kind": "Method",
    "detail": "Function (} ; enum class EMaterialInstanceClearParameterFlag { None = 0 u,)",
    "insertText": "Numeric(1u << 0), Texture = (1u << 1), Static = (1u << 2)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(EMaterialInstanceClearParameterFlag)"
  },
  {
    "label": "ResourceCreate()",
    "kind": "Method",
    "detail": "Function (enum class EMaterialInstanceUsedByRTFlag : uint32 { None = 0 u,)",
    "insertText": "ResourceCreate(1u << 0), CacheUniformExpressions = (1u << 1)"
  },
  {
    "label": "FMaterialInstanceParameterUpdateContext()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA class FMaterialInstanceParameterUpdateContext { public :)",
    "insertText": "FMaterialInstanceParameterUpdateContext(UMaterialInstance* InInstance, EMaterialInstanceClearParameterFlag ClearFlags = EMaterialInstanceClearParameterFlag::None)"
  },
  {
    "label": "FMaterialInstanceParameterUpdateContext()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMaterialInstanceParameterUpdateContext()"
  },
  {
    "label": "GetStaticParameters()",
    "kind": "Method",
    "detail": "Function (FStaticParameterSet&)",
    "insertText": "GetStaticParameters()"
  },
  {
    "label": "SetForceStaticPermutationUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForceStaticPermutationUpdate(bool bValue)"
  },
  {
    "label": "SetBasePropertyOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBasePropertyOverrides(const FMaterialInstanceBasePropertyOverrides& InValue)"
  },
  {
    "label": "SetMaterialLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialLayers(const FMaterialLayersFunctions& InValue)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (private : UMaterialInstance* Instance ; FStaticParameterSet StaticParameters ; FMaterialInstanceBasePropertyOverrides BasePropertyOverrides ; bool bForceStaticPermutationUpdate ; } ; # endif)",
    "insertText": "UCLASS(MinimalAPI, Optional)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(abstract, BlueprintType,MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() #if WITH_EDITORONLY_DATA virtual const UClass* GetEditorOnlyDataClass()"
  },
  {
    "label": "GetEditorOnlyData()",
    "kind": "Method",
    "detail": "Function (} UMaterialInstanceEditorOnlyData*)",
    "insertText": "GetEditorOnlyData()"
  },
  {
    "label": "GetEditorOnlyStaticParameters()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA const FStaticParameterSetEditorOnlyData&)",
    "insertText": "GetEditorOnlyStaticParameters()"
  },
  {
    "label": "HasStaticParameters()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "HasStaticParameters()"
  },
  {
    "label": "GetCachedInstanceData()",
    "kind": "Method",
    "detail": "Function (const FMaterialInstanceCachedData&)",
    "insertText": "GetCachedInstanceData()"
  },
  {
    "label": "GetReentrantFlag()",
    "kind": "Method",
    "detail": "Function (FMaterialShadingModelField ShadingModels ; float OpacityMaskClipValue ; FDisplacementScaling DisplacementScaling ; FDisplacementFadeRange DisplacementFadeRange ; float MaxWorldPositionOffsetDisplacement ; bool)",
    "insertText": "GetReentrantFlag(bool bIsInGameThread = IsInGameThread())"
  },
  {
    "label": "SetReentrantFlag()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR return ReentrantFlag [ bIsInGameThread ? 0 : 1 ] ; # else return false ; # endif } void)",
    "insertText": "SetReentrantFlag(const bool bValue, bool bIsInGameThread = IsInGameThread())"
  },
  {
    "label": "PreSave()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "PreSave(FObjectPreSaveContext ObjectSaveContext)"
  },
  {
    "label": "GetTextureDensity()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTextureDensity(FName TextureName, const struct FMeshUVChannelInfo& UVChannelData)"
  },
  {
    "label": "Equivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Equivalent(const UMaterialInstance* CompareTo)"
  },
  {
    "label": "IsRedundant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRedundant()"
  },
  {
    "label": "FTextureParameterOverride()",
    "kind": "Method",
    "detail": "Function (# endif protected : TUniquePtr<FMaterialInstanceCachedData> CachedData ; private : TArray<FMaterialResource> LoadedMaterialResources ; TArray<FMaterialResource*> StaticPermutationMaterialResources ; # if WITH_EDITOR TMap<const ITargetPlatform*,TArray<FMaterialResourceForCooking>> CachedMaterialResourcesForCooking ; # endif std::atomic<uint32> UsedByRT ; # if WITH_EDITOR struct FTextureParameterOverride {)",
    "insertText": "FTextureParameterOverride(UTexture* InPreviousTexture, UTexture* InOverrideTexture) : PreviousTexture(InPreviousTexture) , OverrideTexture(InOverrideTexture)"
  },
  {
    "label": "OverrideTextureParameterValue()",
    "kind": "Method",
    "detail": "Function (} TObjectPtr<UTexture> PreviousTexture ; TObjectPtr<UTexture> OverrideTexture ; } ; TArray<FTextureParameterOverride> TransientTextureParameterOverrides ; void)",
    "insertText": "OverrideTextureParameterValue(const UTexture* InTextureToOverride, UTexture* OverrideTexture)"
  },
  {
    "label": "OverrideTextureParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<UTexture>)",
    "insertText": "OverrideTextureParameterValueInternal(const UTexture* InTextureToOverride, UTexture* OverrideTexture)"
  },
  {
    "label": "ResetAllTextureParameterOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAllTextureParameterOverrides()"
  },
  {
    "label": "UMaterialInstance()",
    "kind": "Method",
    "detail": "Function (# endif public : ~)",
    "insertText": "UMaterialInstance()"
  },
  {
    "label": "GetMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterial*)",
    "insertText": "GetMaterial()"
  },
  {
    "label": "GetMaterial_Concurrent()",
    "kind": "Method",
    "detail": "Function (const UMaterial*)",
    "insertText": "GetMaterial_Concurrent(TMicRecursionGuard RecursionGuard = TMicRecursionGuard())"
  },
  {
    "label": "GetMaterialInheritanceChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMaterialInheritanceChain(FMaterialInheritanceChain& OutChain)"
  },
  {
    "label": "GetCachedExpressionData()",
    "kind": "Method",
    "detail": "Function (const FMaterialCachedExpressionData&)",
    "insertText": "GetCachedExpressionData(TMicRecursionGuard RecursionGuard = TMicRecursionGuard())"
  },
  {
    "label": "GetCachedHLSLTree()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR const FMaterialCachedHLSLTree&)",
    "insertText": "GetCachedHLSLTree(TMicRecursionGuard RecursionGuard = TMicRecursionGuard())"
  },
  {
    "label": "AllocatePermutationResource()",
    "kind": "Method",
    "detail": "Function (# endif FMaterialResource*)",
    "insertText": "AllocatePermutationResource()"
  },
  {
    "label": "GetMaterialResource()",
    "kind": "Method",
    "detail": "Function (FMaterialResource*)",
    "insertText": "GetMaterialResource(ERHIFeatureLevel::Type InFeatureLevel, EMaterialQualityLevel::Type QualityLevel = EMaterialQualityLevel::Num)"
  },
  {
    "label": "GetParameterOverrideValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetParameterOverrideValue(EMaterialParameterType Type, const FMemoryImageMaterialParameterInfo& ParameterInfo, FMaterialParameterMetadata& OutValue)"
  },
  {
    "label": "GetParameterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetParameterValue(EMaterialParameterType Type, const FMemoryImageMaterialParameterInfo& ParameterInfo, FMaterialParameterMetadata& OutValue, EMaterialGetParameterValueFlags Flags = EMaterialGetParameterValueFlags::Default)"
  },
  {
    "label": "GetUsedTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetUsedTextures(TArray<UTexture*>& OutTextures, EMaterialQualityLevel::Type QualityLevel, bool bAllQualityLevels, ERHIFeatureLevel::Type FeatureLevel, bool bAllFeatureLevels)"
  },
  {
    "label": "GetUsedTexturesAndIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetUsedTexturesAndIndices(TArray<UTexture*>& OutTextures, TArray< TArray<int32> >& OutIndices, EMaterialQualityLevel::Type QualityLevel, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "GetTextureParameterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTextureParameterValue(const FHashedMaterialParameterInfo& ParameterInfo, class UTexture*& OutValue, bool bOveriddenOnly = false)"
  },
  {
    "label": "GetTextureCollectionParameterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTextureCollectionParameterValue(const FHashedMaterialParameterInfo& ParameterInfo, class UTextureCollection*& OutValue, bool bOveriddenOnly = false)"
  },
  {
    "label": "OverrideTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideTexture(const UTexture* InTextureToOverride, UTexture* OverrideTexture, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "OverrideNumericParameterDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideNumericParameterDefault(EMaterialParameterType Type, const FHashedMaterialParameterInfo& ParameterInfo, const UE::Shader::FValue& Value, bool bOverride, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "CheckMaterialUsage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckMaterialUsage(const EMaterialUsage Usage)"
  },
  {
    "label": "CheckMaterialUsage_Concurrent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckMaterialUsage_Concurrent(const EMaterialUsage Usage)"
  },
  {
    "label": "GetMaterialLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMaterialLayers(FMaterialLayersFunctions& OutLayers, TMicRecursionGuard RecursionGuard = TMicRecursionGuard())"
  },
  {
    "label": "IsDependent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDependent(UMaterialInterface* TestDependency)"
  },
  {
    "label": "IsDependent_Concurrent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDependent_Concurrent(UMaterialInterface* TestDependency, TMicRecursionGuard RecursionGuard)"
  },
  {
    "label": "GetDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDependencies(TSet<UMaterialInterface*>& Dependencies)"
  },
  {
    "label": "GetRenderProxy()",
    "kind": "Method",
    "detail": "Function (FMaterialRenderProxy*)",
    "insertText": "GetRenderProxy()"
  },
  {
    "label": "GetPhysicalMaterial()",
    "kind": "Method",
    "detail": "Function (UPhysicalMaterial*)",
    "insertText": "GetPhysicalMaterial()"
  },
  {
    "label": "GetPhysicalMaterialMask()",
    "kind": "Method",
    "detail": "Function (UPhysicalMaterialMask*)",
    "insertText": "GetPhysicalMaterialMask()"
  },
  {
    "label": "GetPhysicalMaterialFromMap()",
    "kind": "Method",
    "detail": "Function (UPhysicalMaterial*)",
    "insertText": "GetPhysicalMaterialFromMap(int32 Index)"
  },
  {
    "label": "GetNaniteOverride()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetNaniteOverride(TMicRecursionGuard RecursionGuard = TMicRecursionGuard())"
  },
  {
    "label": "UpdateLightmassTextureTracking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateLightmassTextureTracking()"
  },
  {
    "label": "GetCastShadowAsMasked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCastShadowAsMasked()"
  },
  {
    "label": "GetEmissiveBoost()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetEmissiveBoost()"
  },
  {
    "label": "GetDiffuseBoost()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDiffuseBoost()"
  },
  {
    "label": "GetExportResolutionScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetExportResolutionScale()"
  },
  {
    "label": "GetGroupSortPriority()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "GetGroupSortPriority(const FString& InGroupName, int32& OutSortPriority)"
  },
  {
    "label": "GetTexturesInPropertyChain()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTexturesInPropertyChain(EMaterialProperty InProperty, TArray<UTexture*>& OutTextures, TArray<FName>* OutTextureParamNames, struct FStaticParameterSet* InStaticParameterSet, ERHIFeatureLevel::Type InFeatureLevel, EMaterialQualityLevel::Type InQuality)"
  },
  {
    "label": "SetMaterialLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMaterialLayers(const FMaterialLayersFunctions& LayersValue)"
  },
  {
    "label": "RecacheUniformExpressions()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "RecacheUniformExpressions(bool bRecreateUniformBuffer)"
  },
  {
    "label": "GetRefractionSettings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRefractionSettings(float& OutBiasValue)"
  },
  {
    "label": "GetUserSceneTextureOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUserSceneTextureOverride(FName& InOutName)"
  },
  {
    "label": "GetBlendableLocation()",
    "kind": "Method",
    "detail": "Function (EBlendableLocation)",
    "insertText": "GetBlendableLocation(const UMaterial* Base)"
  },
  {
    "label": "GetBlendablePriority()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetBlendablePriority(const UMaterial* Base)"
  },
  {
    "label": "PrecachePSOs()",
    "kind": "Method",
    "detail": "Function (FGraphEventArray)",
    "insertText": "PrecachePSOs(const FPSOPrecacheVertexFactoryDataList& VertexFactoryDataList, const FPSOPrecacheParams& PreCacheParams, EPSOPrecachePriority Priority, TArray<FMaterialPSOPrecacheRequestID>& OutMaterialPSORequestIDs)"
  },
  {
    "label": "ForceRecompileForRendering()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "ForceRecompileForRendering(EMaterialShaderPrecompileMode CompileMode = EMaterialShaderPrecompileMode::Default)"
  },
  {
    "label": "GetOpacityMaskClipValue()",
    "kind": "Method",
    "detail": "Function (# endif float)",
    "insertText": "GetOpacityMaskClipValue()"
  },
  {
    "label": "GetCastDynamicShadowAsMasked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCastDynamicShadowAsMasked()"
  },
  {
    "label": "GetBlendMode()",
    "kind": "Method",
    "detail": "Function (EBlendMode)",
    "insertText": "GetBlendMode()"
  },
  {
    "label": "GetShadingModels()",
    "kind": "Method",
    "detail": "Function (FMaterialShadingModelField)",
    "insertText": "GetShadingModels()"
  },
  {
    "label": "IsShadingModelFromMaterialExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShadingModelFromMaterialExpression()"
  },
  {
    "label": "IsTwoSided()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTwoSided()"
  },
  {
    "label": "IsThinSurface()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsThinSurface()"
  },
  {
    "label": "IsTranslucencyWritingVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslucencyWritingVelocity()"
  },
  {
    "label": "IsDitheredLODTransition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDitheredLODTransition()"
  },
  {
    "label": "IsMasked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMasked()"
  },
  {
    "label": "WritesToRuntimeVirtualTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WritesToRuntimeVirtualTexture()"
  },
  {
    "label": "HasMeshPaintTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMeshPaintTexture()"
  },
  {
    "label": "HasCustomPrimitiveData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCustomPrimitiveData()"
  },
  {
    "label": "GetDisplacementScaling()",
    "kind": "Method",
    "detail": "Function (FDisplacementScaling)",
    "insertText": "GetDisplacementScaling()"
  },
  {
    "label": "IsDisplacementFadeEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDisplacementFadeEnabled()"
  },
  {
    "label": "GetDisplacementFadeRange()",
    "kind": "Method",
    "detail": "Function (FDisplacementFadeRange)",
    "insertText": "GetDisplacementFadeRange()"
  },
  {
    "label": "GetMaxWorldPositionOffsetDisplacement()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaxWorldPositionOffsetDisplacement()"
  },
  {
    "label": "ShouldAlwaysEvaluateWorldPositionOffset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldAlwaysEvaluateWorldPositionOffset()"
  },
  {
    "label": "IsDeferredDecal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDeferredDecal()"
  },
  {
    "label": "IsUIMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUIMaterial()"
  },
  {
    "label": "IsPostProcessMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPostProcessMaterial()"
  },
  {
    "label": "HasVertexInterpolator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasVertexInterpolator()"
  },
  {
    "label": "HasCustomizedUVs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCustomizedUVs()"
  },
  {
    "label": "HasPixelAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPixelAnimation()"
  },
  {
    "label": "GetSubsurfaceProfile_Internal()",
    "kind": "Method",
    "detail": "Function (USubsurfaceProfile*)",
    "insertText": "GetSubsurfaceProfile_Internal()"
  },
  {
    "label": "NumSubsurfaceProfileRoot_Internal()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "NumSubsurfaceProfileRoot_Internal()"
  },
  {
    "label": "GetSubsurfaceProfileRoot_Internal()",
    "kind": "Method",
    "detail": "Function (USubsurfaceProfile*)",
    "insertText": "GetSubsurfaceProfileRoot_Internal(uint32 Index)"
  },
  {
    "label": "GetSubsurfaceProfileOverride_Internal()",
    "kind": "Method",
    "detail": "Function (USubsurfaceProfile*)",
    "insertText": "GetSubsurfaceProfileOverride_Internal()"
  },
  {
    "label": "CastsRayTracedShadows()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CastsRayTracedShadows()"
  },
  {
    "label": "IsTessellationEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTessellationEnabled()"
  },
  {
    "label": "IsPropertyActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyActive(EMaterialProperty InProperty)"
  },
  {
    "label": "CompilePropertyEx()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR int32)",
    "insertText": "CompilePropertyEx(class FMaterialCompiler* Compiler, const FGuid& AttributeID)"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "BeginCacheForCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "BeginCacheForCookedPlatformData(const ITargetPlatform *TargetPlatform)"
  },
  {
    "label": "IsCachedCookedPlatformDataLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCachedCookedPlatformDataLoaded(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "ClearCachedCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCachedCookedPlatformData(const ITargetPlatform *TargetPlatform)"
  },
  {
    "label": "ClearAllCachedCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllCachedCookedPlatformData()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "DeclareConstructClasses()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "DeclareConstructClasses(TArray<FTopLevelAssetPath>& OutConstructClasses, const UClass* SpecificSubclass)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "IsReadyForFinishDestroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyForFinishDestroy()"
  },
  {
    "label": "FinishDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishDestroy()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "UpdateStaticPermutation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStaticPermutation(const FStaticParameterSet& NewParameters, FMaterialInstanceBasePropertyOverrides& NewBasePropertyOverrides, const bool bForceStaticPermutationUpdate = false, FMaterialUpdateContext* MaterialUpdateContext = nullptr)"
  },
  {
    "label": "UpdateStaticPermutation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStaticPermutation(const FStaticParameterSet& NewParameters, FMaterialUpdateContext* MaterialUpdateContext = nullptr)"
  },
  {
    "label": "UpdateStaticPermutation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStaticPermutation(FMaterialUpdateContext* MaterialUpdateContext = nullptr)"
  },
  {
    "label": "SwapLayerParameterIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapLayerParameterIndices(int32 OriginalIndex, int32 NewIndex)"
  },
  {
    "label": "RemoveLayerParameterIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLayerParameterIndex(int32 Index)"
  },
  {
    "label": "IsStaticPermutationAllowedForCandidateParent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStaticPermutationAllowedForCandidateParent(UMaterialInterface* CandidateParent)"
  },
  {
    "label": "ValidateStaticPermutationAllowed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateStaticPermutationAllowed()"
  },
  {
    "label": "InitStaticPermutation()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "InitStaticPermutation(EMaterialShaderPrecompileMode PrecompileMode = EMaterialShaderPrecompileMode::Default)"
  },
  {
    "label": "UpdateOverridableBaseProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOverridableBaseProperties()"
  },
  {
    "label": "CacheResourceShadersForCooking()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "CacheResourceShadersForCooking(EShaderPlatform ShaderPlatform, TArray<FMaterialResourceForCooking>& OutCachedMaterialResources, EMaterialShaderPrecompileMode PrecompileMode = EMaterialShaderPrecompileMode::Default, const ITargetPlatform* TargetPlatform = nullptr, bool bBlocking = false)"
  },
  {
    "label": "GetAllShaderMaps()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "GetAllShaderMaps(TArray<FMaterialShaderMap*>& OutShaderMaps)"
  },
  {
    "label": "SetStaticSwitchParameterValueEditorOnly()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "SetStaticSwitchParameterValueEditorOnly(const FMaterialParameterInfo& ParameterInfo, bool Value)"
  },
  {
    "label": "GetAllParametersOfType()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "GetAllParametersOfType(EMaterialParameterType Type, TMap<FMaterialParameterInfo, FMaterialParameterMetadata>& OutParameters)"
  },
  {
    "label": "IterateDependentFunctions()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA bool)",
    "insertText": "IterateDependentFunctions(TFunctionRef<bool(UMaterialFunctionInterface*)> Predicate)"
  },
  {
    "label": "GetDependentFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDependentFunctions(TArray<class UMaterialFunctionInterface*>& DependentFunctions)"
  },
  {
    "label": "GetReferencedTexturesAndOverrides()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "GetReferencedTexturesAndOverrides(TSet<const UTexture*>& InOutTextures)"
  },
  {
    "label": "UpdateCachedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedData()"
  },
  {
    "label": "GetBasePropertyOverridesHash()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "GetBasePropertyOverridesHash(FSHAHash& OutHash)"
  },
  {
    "label": "HasOverridenBaseProperties()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasOverridenBaseProperties()"
  },
  {
    "label": "GetBasePropertyOverrideString()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FString)",
    "insertText": "GetBasePropertyOverrideString()"
  },
  {
    "label": "AllMaterialsCacheResourceShadersForRendering()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "AllMaterialsCacheResourceShadersForRendering(bool bUpdateProgressDialog = false, bool bCacheAllRemainingShaders = true)"
  },
  {
    "label": "IsChildOf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildOf(const UMaterialInterface* Material)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (#)",
    "insertText": "if(UE_BUILD_SHIPPING || UE_BUILD_TEST) ENGINE_API virtual void LogMaterialsAndTextures(FOutputDevice& Ar, int32 Indent)"
  },
  {
    "label": "ValidateTextureOverrides()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "ValidateTextureOverrides(ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "GetLightingGuidChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLightingGuidChain(bool bIncludeTextures, TArray<FGuid>& OutGuids)"
  },
  {
    "label": "DumpDebugInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpDebugInfo(FOutputDevice& OutputDevice)"
  },
  {
    "label": "SaveShaderStableKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveShaderStableKeys(const class ITargetPlatform* TP)"
  },
  {
    "label": "SaveShaderStableKeysInner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveShaderStableKeysInner(const class ITargetPlatform* TP, const struct FStableShaderKeyAndValue& SaveKeyVal)"
  },
  {
    "label": "GetShaderTypes()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "GetShaderTypes(EShaderPlatform Platform, const ITargetPlatform* TargetPlatform, TArray<FDebugShaderTypeInfo>& OutShaderInfo)"
  },
  {
    "label": "BeginAllowCachingStaticParameterValues()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "BeginAllowCachingStaticParameterValues()"
  },
  {
    "label": "EndAllowCachingStaticParameterValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndAllowCachingStaticParameterValues()"
  },
  {
    "label": "CacheShaders()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "CacheShaders(EMaterialShaderPrecompileMode CompileMode)"
  },
  {
    "label": "CacheGivenTypesForCooking()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "CacheGivenTypesForCooking(EShaderPlatform Platform, ERHIFeatureLevel::Type InFeatureLevel, EMaterialQualityLevel::Type QualityLevel, const TArray<const FVertexFactoryType*>& VFTypes, const TArray<const FShaderPipelineType*> PipelineTypes, const TArray<const FShaderType*>& ShaderTypes)"
  },
  {
    "label": "IsComplete()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "IsComplete()"
  },
  {
    "label": "IsCompiling()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "IsCompiling()"
  },
  {
    "label": "StartCacheUniformExpressions()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "StartCacheUniformExpressions()"
  },
  {
    "label": "FinishCacheUniformExpressions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCacheUniformExpressions()"
  },
  {
    "label": "CopyMaterialUniformParametersInternal()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CopyMaterialUniformParametersInternal(UMaterialInterface* Source)"
  },
  {
    "label": "UpdateParameters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateParameters()"
  },
  {
    "label": "SetParentInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParentInternal(class UMaterialInterface* NewParent, bool RecacheShaders)"
  },
  {
    "label": "GetTextureExpressionValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTextureExpressionValues(const FMaterialResource* MaterialResource, TArray<UTexture*>& OutTextures, TArray< TArray<int32> >* OutIndices = nullptr)"
  },
  {
    "label": "UpdateParameterNames()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR void)",
    "insertText": "UpdateParameterNames()"
  },
  {
    "label": "ReserveParameterValuesInternal()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "ReserveParameterValuesInternal(EMaterialParameterType Type, int32 Capacity)"
  },
  {
    "label": "AddParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParameterValueInternal(const FMaterialParameterInfo& ParameterInfo, const FMaterialParameterMetadata& Meta, EMaterialSetParameterValueFlags Flags = EMaterialSetParameterValueFlags::None)"
  },
  {
    "label": "SetParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameterValueInternal(const FMaterialParameterInfo& ParameterInfo, const FMaterialParameterMetadata& Meta, EMaterialSetParameterValueFlags Flags = EMaterialSetParameterValueFlags::None)"
  },
  {
    "label": "SetVectorParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorParameterValueInternal(const FMaterialParameterInfo& ParameterInfo, FLinearColor Value)"
  },
  {
    "label": "SetDoubleVectorParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDoubleVectorParameterValueInternal(const FMaterialParameterInfo& ParameterInfo, FVector4d Value)"
  },
  {
    "label": "SetVectorParameterByIndexInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetVectorParameterByIndexInternal(int32 ParameterIndex, FLinearColor Value)"
  },
  {
    "label": "SetScalarParameterByIndexInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetScalarParameterByIndexInternal(int32 ParameterIndex, float Value)"
  },
  {
    "label": "SetScalarParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScalarParameterValueInternal(const FMaterialParameterInfo& ParameterInfo, float Value, bool bUseAtlas = false, FScalarParameterAtlasInstanceData AtlasData = FScalarParameterAtlasInstanceData())"
  },
  {
    "label": "SetScalarParameterAtlasInternal()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetScalarParameterAtlasInternal(const FMaterialParameterInfo& ParameterInfo, FScalarParameterAtlasInstanceData AtlasData)"
  },
  {
    "label": "SetTextureParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "SetTextureParameterValueInternal(const FMaterialParameterInfo& ParameterInfo, class UTexture* Value)"
  },
  {
    "label": "SetTextureCollectionParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextureCollectionParameterValueInternal(const FMaterialParameterInfo& ParameterInfo, class UTextureCollection* Value)"
  },
  {
    "label": "SetRuntimeVirtualTextureParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRuntimeVirtualTextureParameterValueInternal(const FMaterialParameterInfo& ParameterInfo, class URuntimeVirtualTexture* Value)"
  },
  {
    "label": "SetSparseVolumeTextureParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSparseVolumeTextureParameterValueInternal(const FMaterialParameterInfo& ParameterInfo, class USparseVolumeTexture* Value)"
  },
  {
    "label": "SetFontParameterValueInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFontParameterValueInternal(const FMaterialParameterInfo& ParameterInfo, class UFont* FontValue, int32 FontPage)"
  },
  {
    "label": "ClearParameterValuesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearParameterValuesInternal(EMaterialInstanceClearParameterFlag Flags = EMaterialInstanceClearParameterFlag::AllNonStatic)"
  },
  {
    "label": "InitResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResources()"
  },
  {
    "label": "CacheResourceShadersForRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheResourceShadersForRendering(EMaterialShaderPrecompileMode PrecompileMode = EMaterialShaderPrecompileMode::Default)"
  },
  {
    "label": "CacheResourceShadersForRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheResourceShadersForRendering(EMaterialShaderPrecompileMode PrecompileMode, FMaterialResourceDeferredDeletionArray& OutResourcesToFree)"
  },
  {
    "label": "CacheShadersForResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheShadersForResources(EShaderPlatform ShaderPlatform, const TArray<FMaterialResource*>& ResourcesToCache, EMaterialShaderPrecompileMode PrecompileMode = EMaterialShaderPrecompileMode::Default, const ITargetPlatform* TargetPlatform = nullptr)"
  },
  {
    "label": "BeginCacheShadersForResources()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "BeginCacheShadersForResources(EShaderPlatform ShaderPlatform, const TArray<FMaterialResource*>& ResourcesToCache, EMaterialShaderPrecompileMode PrecompileMode = EMaterialShaderPrecompileMode::Default, const ITargetPlatform* TargetPlatform = nullptr)"
  },
  {
    "label": "CopyMaterialInstanceParameters()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "CopyMaterialInstanceParameters(UMaterialInterface* Source)"
  },
  {
    "label": "PropagateDataToMaterialProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateDataToMaterialProxy()"
  }
]