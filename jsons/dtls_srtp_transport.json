[
  {
    "label": "DtlsSrtpTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DtlsSrtpTransport"
  },
  {
    "label": "DtlsSrtpTransport()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_DTLS_SRTP_TRANSPORT_H_ # define PC_DTLS_SRTP_TRANSPORT_H_ # include<functional> # include<string> # include<vector> # include \" absl / types / optional . h \" # include \" api / crypto_params . h \" # include \" api / dtls_transport_interface . h \" # include \" api / rtc_error . h \" # include \" p2p / base / dtls_transport_internal . h \" # include \" p2p / base / packet_transport_internal . h \" # include \" pc / srtp_transport . h \" # include \" rtc_base / buffer . h \" # include \" rtc_base / third_party / sigslot / sigslot . h \" namespace webrtc { class DtlsSrtpTransport : public SrtpTransport { public :)",
    "insertText": "DtlsSrtpTransport(bool rtcp_mux_enabled, const FieldTrialsView& field_trials)"
  },
  {
    "label": "SetDtlsTransports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDtlsTransports(cricket::DtlsTransportInternal* rtp_dtls_transport, cricket::DtlsTransportInternal* rtcp_dtls_transport)"
  },
  {
    "label": "SetRtcpMuxEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRtcpMuxEnabled(bool enable)"
  },
  {
    "label": "UpdateSendEncryptedHeaderExtensionIds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSendEncryptedHeaderExtensionIds(const std::vector<int>& send_extension_ids)"
  },
  {
    "label": "UpdateRecvEncryptedHeaderExtensionIds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRecvEncryptedHeaderExtensionIds(const std::vector<int>& recv_extension_ids)"
  },
  {
    "label": "SetOnDtlsStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnDtlsStateChange(std::function<void(void)> callback)"
  },
  {
    "label": "SetSrtpSendKey()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "SetSrtpSendKey(const cricket::CryptoParams& params)"
  },
  {
    "label": "SetSrtpReceiveKey()",
    "kind": "Method",
    "detail": "Function (} RTCError)",
    "insertText": "SetSrtpReceiveKey(const cricket::CryptoParams& params)"
  },
  {
    "label": "SetActiveResetSrtpParams()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetActiveResetSrtpParams(bool active_reset_srtp_params)"
  },
  {
    "label": "IsDtlsActive()",
    "kind": "Method",
    "detail": "Function (active_reset_srtp_params_ = active_reset_srtp_params ; } private : bool)",
    "insertText": "IsDtlsActive()"
  },
  {
    "label": "IsDtlsConnected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDtlsConnected()"
  },
  {
    "label": "IsDtlsWritable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDtlsWritable()"
  },
  {
    "label": "DtlsHandshakeCompleted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DtlsHandshakeCompleted()"
  },
  {
    "label": "MaybeSetupDtlsSrtp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeSetupDtlsSrtp()"
  },
  {
    "label": "SetupRtpDtlsSrtp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupRtpDtlsSrtp()"
  },
  {
    "label": "SetupRtcpDtlsSrtp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupRtcpDtlsSrtp()"
  },
  {
    "label": "ExtractParams()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExtractParams(cricket::DtlsTransportInternal* dtls_transport, int* selected_crypto_suite, rtc::ZeroOnFreeBuffer<unsigned char>* send_key, rtc::ZeroOnFreeBuffer<unsigned char>* recv_key)"
  },
  {
    "label": "SetDtlsTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDtlsTransport(cricket::DtlsTransportInternal* new_dtls_transport, cricket::DtlsTransportInternal** old_dtls_transport)"
  },
  {
    "label": "SetRtpDtlsTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRtpDtlsTransport(cricket::DtlsTransportInternal* rtp_dtls_transport)"
  },
  {
    "label": "SetRtcpDtlsTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRtcpDtlsTransport(cricket::DtlsTransportInternal* rtcp_dtls_transport)"
  },
  {
    "label": "OnDtlsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDtlsState(cricket::DtlsTransportInternal* dtls_transport, DtlsTransportState state)"
  },
  {
    "label": "OnWritableState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWritableState(rtc::PacketTransportInternal* packet_transport)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (cricket::DtlsTransportInternal* rtp_dtls_transport_ = nullptr ; cricket::DtlsTransportInternal* rtcp_dtls_transport_ = nullptr ; absl::optional<std::vector<int>> send_extension_ids_ ; absl::optional<std::vector<int>> recv_extension_ids_ ; bool active_reset_srtp_params_ = false ; std::function<)",
    "insertText": "void(void)"
  }
]