[
  {
    "label": "MyClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MyClass"
  },
  {
    "label": "Point",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Point"
  },
  {
    "label": "AlphaNumBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AlphaNumBuffer"
  },
  {
    "label": "PadSpec",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PadSpec"
  },
  {
    "label": "Hex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Hex"
  },
  {
    "label": "Dec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Dec"
  },
  {
    "label": "acts",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "acts"
  },
  {
    "label": "AlphaNum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AlphaNum"
  },
  {
    "label": "AbslStringify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbslStringify(Sink& sink, const MyClass& value)"
  },
  {
    "label": "CatPieces()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "CatPieces(std::initializer_list<absl::string_view> pieces)"
  },
  {
    "label": "AppendPieces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendPieces(std::string* dest,\n                  std::initializer_list<absl::string_view> pieces)"
  },
  {
    "label": "StrCat()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "StrCat(const AlphaNum& a, const AlphaNum& b)"
  },
  {
    "label": "StrCat()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "StrCat(const AlphaNum& a, const AlphaNum& b,\n                                        const AlphaNum& c)"
  },
  {
    "label": "StrCat()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "StrCat(const AlphaNum& a, const AlphaNum& b,\n                                        const AlphaNum& c, const AlphaNum& d)"
  },
  {
    "label": "StrAppend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrAppend(std::string* dest, const AlphaNum& a)"
  },
  {
    "label": "StrAppend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrAppend(std::string* dest, const AlphaNum& a, const AlphaNum& b)"
  },
  {
    "label": "StrAppend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrAppend(std::string* dest, const AlphaNum& a, const AlphaNum& b,\n               const AlphaNum& c)"
  },
  {
    "label": "StrAppend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrAppend(std::string* dest, const AlphaNum& a, const AlphaNum& b,\n               const AlphaNum& c, const AlphaNum& d)"
  }
]