[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AAIController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AAIController"
  },
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "UBehaviorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTree"
  },
  {
    "label": "UBlackboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardComponent"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UBTDecorator_BlueprintBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator_BlueprintBase"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "EBTNodeResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBTNodeResult"
  },
  {
    "label": "EBTNodeResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBTNodeResult"
  },
  {
    "label": "InitializeProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeProperties()"
  },
  {
    "label": "OnBlackboardKeyValueChange()",
    "kind": "Method",
    "detail": "Function (EBlackboardNotificationResult)",
    "insertText": "OnBlackboardKeyValueChange(const UBlackboardComponent& Blackboard, FBlackboard::FKey ChangedKeyID)"
  },
  {
    "label": "ReceiveTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveTick(AActor* OwnerActor, float DeltaSeconds)"
  },
  {
    "label": "ReceiveExecutionStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveExecutionStart(AActor* OwnerActor)"
  },
  {
    "label": "ReceiveExecutionFinish()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveExecutionFinish(AActor* OwnerActor, enum EBTNodeResult::Type NodeResult)"
  },
  {
    "label": "ReceiveObserverActivated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveObserverActivated(AActor* OwnerActor)"
  },
  {
    "label": "ReceiveObserverDeactivated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveObserverDeactivated(AActor* OwnerActor)"
  },
  {
    "label": "PerformConditionCheck()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PerformConditionCheck(AActor* OwnerActor)"
  },
  {
    "label": "ReceiveTickAI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveTickAI(AAIController* OwnerController, APawn* ControlledPawn, float DeltaSeconds)"
  },
  {
    "label": "ReceiveExecutionStartAI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveExecutionStartAI(AAIController* OwnerController, APawn* ControlledPawn)"
  },
  {
    "label": "ReceiveExecutionFinishAI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveExecutionFinishAI(AAIController* OwnerController, APawn* ControlledPawn, enum EBTNodeResult::Type NodeResult)"
  },
  {
    "label": "ReceiveObserverActivatedAI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveObserverActivatedAI(AAIController* OwnerController, APawn* ControlledPawn)"
  },
  {
    "label": "ReceiveObserverDeactivatedAI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveObserverDeactivatedAI(AAIController* OwnerController, APawn* ControlledPawn)"
  },
  {
    "label": "PerformConditionCheckAI()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PerformConditionCheckAI(AAIController* OwnerController, APawn* ControlledPawn)"
  },
  {
    "label": "RequestAbort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestAbort(UBehaviorTreeComponent& OwnerComp, const EAbortType Type)"
  }
]