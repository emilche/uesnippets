[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AAIController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AAIController"
  },
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "UBehaviorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTree"
  },
  {
    "label": "UBlackboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardComponent"
  },
  {
    "label": "UBTDecorator_BlueprintBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator_BlueprintBase"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EBTNodeResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBTNodeResult"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" InputCoreTypes . h \" # include \" BehaviorTree / BTDecorator . h \" # include \" BTDecorator_BlueprintBase . generated . h \" class AActor ; class AAIController ; class APawn ; class UBehaviorTree ; class UBlackboardComponent ;)",
    "insertText": "UCLASS(Abstract, Blueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: AIMODULE_API UBTDecorator_BlueprintBase(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "InitializeProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeProperties()"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "OnBlackboardKeyValueChange()",
    "kind": "Method",
    "detail": "Function (EBlackboardNotificationResult)",
    "insertText": "OnBlackboardKeyValueChange(const UBlackboardComponent& Blackboard, FBlackboard::FKey ChangedKeyID)"
  },
  {
    "label": "GetStaticDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStaticDescription()"
  },
  {
    "label": "DescribeRuntimeValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DescribeRuntimeValues(const UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTDescriptionVerbosity::Type Verbosity, TArray<FString>& Values)"
  },
  {
    "label": "CalculateRawConditionValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CalculateRawConditionValue(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "OnInstanceDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInstanceDestroyed(UBehaviorTreeComponent& OwnerComp)"
  },
  {
    "label": "InitializeFromAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromAsset(UBehaviorTree& Asset)"
  },
  {
    "label": "EvaluateAbortType()",
    "kind": "Method",
    "detail": "Function (enum class EAbortType : uint8 { NoAbort,ActivateBranch,DeactivateBranch,Unknown,} ; EAbortType)",
    "insertText": "EvaluateAbortType(UBehaviorTreeComponent& OwnerComp)"
  },
  {
    "label": "SetOwner()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetOwner(AActor* ActorOwner)"
  },
  {
    "label": "GetNodeIconName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FName)",
    "insertText": "GetNodeIconName()"
  },
  {
    "label": "UsesBlueprint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesBlueprint()"
  },
  {
    "label": "OnBecomeRelevant()",
    "kind": "Method",
    "detail": "Function (uint32 bIsObservingBB : 1 ; uint32 ReceiveTickImplementations : 2 ; uint32 ReceiveExecutionStartImplementations : 2 ; uint32 ReceiveExecutionFinishImplementations : 2 ; uint32 ReceiveObserverActivatedImplementations : 2 ; uint32 ReceiveObserverDeactivatedImplementations : 2 ; uint32 PerformConditionCheckImplementations : 2 ; void)",
    "insertText": "OnBecomeRelevant(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "OnCeaseRelevant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCeaseRelevant(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "OnNodeActivation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNodeActivation(FBehaviorTreeSearchData& SearchData)"
  },
  {
    "label": "OnNodeDeactivation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNodeDeactivation(FBehaviorTreeSearchData& SearchData, EBTNodeResult::Type NodeResult)"
  },
  {
    "label": "TickNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickNode(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds)"
  },
  {
    "label": "RequestAbort()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RequestAbort(UBehaviorTreeComponent& OwnerComp, const EAbortType Type)"
  }
]