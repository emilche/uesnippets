[
  {
    "label": "FBuildPatchAppManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildPatchAppManifest"
  },
  {
    "label": "FBlockStructure",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlockStructure"
  },
  {
    "label": "IManifestBuildStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IManifestBuildStreamer"
  },
  {
    "label": "IDeltaChunkEnumeration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDeltaChunkEnumeration"
  },
  {
    "label": "FDeltaChunkEnumerationFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeltaChunkEnumerationFactory"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Data / ChunkData . h \" # include \" Generation / CloudEnumeration . h \" class FBuildPatchAppManifest ; uint32)",
    "insertText": "GetTypeHash(const FSetElementId A)"
  },
  {
    "label": "IDeltaChunkEnumeration()",
    "kind": "Method",
    "detail": "Function (} namespace BuildPatchServices { class FBlockStructure ; class IManifestBuildStreamer ; typedef FGuid FDeltaChunkId ; typedef FSetElementId FFilenameId ; typedef FSetElementId FShaId ; typedef TTuple<TArray<FChunkPart>,FFilenameId,TSet<FString>,uint64> FChunkBuildReference ; class IDeltaChunkEnumeration { public : ~)",
    "insertText": "IDeltaChunkEnumeration()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Run()"
  },
  {
    "label": "IsComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsComplete()"
  },
  {
    "label": "GetChunkInventory()",
    "kind": "Method",
    "detail": "Function (const TMap<uint64,TSet<FDeltaChunkId>>&)",
    "insertText": "GetChunkInventory()"
  },
  {
    "label": "GetChunkShaHashes()",
    "kind": "Method",
    "detail": "Function (const TMap<FDeltaChunkId,FShaId>&)",
    "insertText": "GetChunkShaHashes()"
  },
  {
    "label": "GetChunkBuildReferences()",
    "kind": "Method",
    "detail": "Function (const TMap<FDeltaChunkId,FChunkBuildReference>&)",
    "insertText": "GetChunkBuildReferences()"
  },
  {
    "label": "GetIdenticalChunks()",
    "kind": "Method",
    "detail": "Function (const TMap<FShaId,TSet<FDeltaChunkId>>&)",
    "insertText": "GetIdenticalChunks()"
  },
  {
    "label": "GetChunkHash()",
    "kind": "Method",
    "detail": "Function (const uint64&)",
    "insertText": "GetChunkHash(const FDeltaChunkId& ChunkId)"
  },
  {
    "label": "GetChunkShaHash()",
    "kind": "Method",
    "detail": "Function (const FSHAHash&)",
    "insertText": "GetChunkShaHash(const FDeltaChunkId& ChunkId)"
  },
  {
    "label": "MakeFilenameId()",
    "kind": "Method",
    "detail": "Function (FFilenameId)",
    "insertText": "MakeFilenameId(const FString& Filename)"
  },
  {
    "label": "MakeShaId()",
    "kind": "Method",
    "detail": "Function (FShaId)",
    "insertText": "MakeShaId(const FSHAHash& SHAHash)"
  },
  {
    "label": "GetFilenameId()",
    "kind": "Method",
    "detail": "Function (FFilenameId)",
    "insertText": "GetFilenameId(const FString& Filename)"
  },
  {
    "label": "GetShaId()",
    "kind": "Method",
    "detail": "Function (FShaId)",
    "insertText": "GetShaId(const FSHAHash& SHAHash)"
  },
  {
    "label": "GetFilename()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetFilename(const FFilenameId& Filename)"
  },
  {
    "label": "GetSha()",
    "kind": "Method",
    "detail": "Function (const FSHAHash&)",
    "insertText": "GetSha(const FShaId& SHAHash)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FDeltaChunkEnumerationFactory { public : IDeltaChunkEnumeration*)",
    "insertText": "Create(IManifestBuildStreamer* Streamer, FStatsCollector* StatsCollector, const FBuildPatchAppManifest& Manifest, const uint32 WindowSize)"
  }
]