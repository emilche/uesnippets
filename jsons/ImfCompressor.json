[
  {
    "label": "IMF_EXPORT_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMF_EXPORT_TYPE"
  },
  {
    "label": "IMF_EXPORT_ENUM",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IMF_EXPORT_ENUM"
  },
  {
    "label": "Compressor()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMF_COMPRESSOR_H # define INCLUDED_IMF_COMPRESSOR_H # include \" ImfForward . h \" # include \" ImfCompression . h \" # include<ImathBox . h> # include<stdlib . h> OPENEXR_IMF_INTERNAL_NAMESPACE_HEADER_ENTER class IMF_EXPORT_TYPE Compressor { public : IMF_EXPORT)",
    "insertText": "Compressor(const Header& hdr)"
  },
  {
    "label": "Compressor()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT ~)",
    "insertText": "Compressor()"
  },
  {
    "label": "numScanLines()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT int)",
    "insertText": "numScanLines()"
  },
  {
    "label": "format()",
    "kind": "Method",
    "detail": "Function (enum IMF_EXPORT_ENUM Format { NATIVE,XDR } ; IMF_EXPORT Format)",
    "insertText": "format()"
  },
  {
    "label": "header()",
    "kind": "Method",
    "detail": "Function (const Header&)",
    "insertText": "header()"
  },
  {
    "label": "compressTile()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT int)",
    "insertText": "compressTile(const char* inPtr, int inSize, IMATH_NAMESPACE::Box2i range, const char*& outPtr)"
  },
  {
    "label": "uncompress()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uncompress(const char* inPtr, int inSize, int minY, const char*& outPtr)"
  },
  {
    "label": "uncompressTile()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT int)",
    "insertText": "uncompressTile(const char* inPtr, int inSize, IMATH_NAMESPACE::Box2i range, const char*& outPtr)"
  },
  {
    "label": "isValidCompression()",
    "kind": "Method",
    "detail": "Function (private : const Header& _header ; } ; IMF_EXPORT bool)",
    "insertText": "isValidCompression(Compression c)"
  },
  {
    "label": "isValidDeepCompression()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT bool)",
    "insertText": "isValidDeepCompression(Compression c)"
  },
  {
    "label": "isLossyCompression()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT bool)",
    "insertText": "isLossyCompression(Compression c)"
  },
  {
    "label": "newCompressor()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Compressor*)",
    "insertText": "newCompressor(Compression c, size_t maxScanLineSize, const Header& hdr)"
  },
  {
    "label": "newTileCompressor()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Compressor*)",
    "insertText": "newTileCompressor(Compression c, size_t tileLineSize, size_t numTileLines, const Header& hdr)"
  },
  {
    "label": "numLinesInBuffer()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT int)",
    "insertText": "numLinesInBuffer(Compression comp)"
  }
]