[
  {
    "label": "FCachedPoseSkippedUpdateHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedPoseSkippedUpdateHandler"
  },
  {
    "label": "FCachedPoseScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedPoseScope"
  },
  {
    "label": "FAnimNode_SaveCachedPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SaveCachedPose"
  },
  {
    "label": "FCachedUpdateContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedUpdateContext"
  },
  {
    "label": "DECLARE_ANIMGRAPH_MESSAGE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimTypes . h \" # include \" Animation / AnimCurveTypes . h \" # include \" BonePose . h \" # include \" Animation / AnimNodeBase . h \" # include \" Animation / AnimNodeMessages . h \" # include \" AnimNode_SaveCachedPose . generated . h \" namespace UE { namespace Anim { class FCachedPoseSkippedUpdateHandler : public IGraphMessage {)",
    "insertText": "DECLARE_ANIMGRAPH_MESSAGE(FCachedPoseSkippedUpdateHandler)"
  },
  {
    "label": "FCachedPoseSkippedUpdateHandler()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FCachedPoseSkippedUpdateHandler(TUniqueFunction<void(TArrayView<const FMessageStack>)> InFunction) : Function(MoveTemp(InFunction))"
  },
  {
    "label": "OnUpdatesSkipped()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnUpdatesSkipped(TArrayView<const FMessageStack> InSkippedUpdates)"
  },
  {
    "label": "Function()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Function(InSkippedUpdates)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} private : TUniqueFunction<)",
    "insertText": "void(TArrayView<const FMessageStack>)"
  },
  {
    "label": "FCachedPoseScope()",
    "kind": "Method",
    "detail": "Function (} ; struct FCachedPoseScope {)",
    "insertText": "FCachedPoseScope()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ; } })",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Links)"
  },
  {
    "label": "FAnimNode_SaveCachedPose()",
    "kind": "Method",
    "detail": "Function (float GlobalWeight ; protected : struct FCachedUpdateContext { FAnimationUpdateContext Context ; TSharedPtr<FAnimationUpdateSharedContext> SharedContext ; } ; TArray<FCachedUpdateContext> CachedUpdateContexts ; FGraphTraversalCounter InitializationCounter ; FGraphTraversalCounter CachedBonesCounter ; FGraphTraversalCounter UpdateCounter ; FGraphTraversalCounter EvaluationCounter ; public :)",
    "insertText": "FAnimNode_SaveCachedPose()"
  },
  {
    "label": "Initialize_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize_AnyThread(const FAnimationInitializeContext& Context)"
  },
  {
    "label": "CacheBones_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBones_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "Update_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update_AnyThread(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "Evaluate_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate_AnyThread(FPoseContext& Output)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "PostGraphUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostGraphUpdate()"
  }
]