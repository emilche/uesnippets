[
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "UKismetAnimationLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UKismetAnimationLibrary"
  },
  {
    "label": "K2_TwoBoneIK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_TwoBoneIK(\n\t\tconst FVector& RootPos, \n\t\tconst FVector& JointPos, \n\t\tconst FVector& EndPos, \n\t\tconst FVector& JointTarget, \n\t\tconst FVector& Effector, \n\t\tFVector& OutJointPos, \n\t\tFVector& OutEndPos, \n\t\tbool bAllowStretching, \n\t\tfloat StartStretchRatio,\n\t\tfloat MaxStretchScale\n\t)"
  },
  {
    "label": "K2_LookAt()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "K2_LookAt(\n\t\tconst FTransform& CurrentTransform, \n\t\tconst FVector& TargetPosition, \n\t\tFVector LookAtVector, \n\t\tbool bUseUpVector, \n\t\tFVector UpVector, \n\t\tfloat ClampConeInDegree\n\t)"
  },
  {
    "label": "K2_DistanceBetweenTwoSocketsAndMapRange()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "K2_DistanceBetweenTwoSocketsAndMapRange(\n\t\tconst USkeletalMeshComponent* Component, \n\t\tconst FName SocketOrBoneNameA, \n\t\tERelativeTransformSpace SocketSpaceA, \n\t\tconst FName SocketOrBoneNameB, \n\t\tERelativeTransformSpace SocketSpaceB, \n\t\tbool bRemapRange, \n\t\tfloat InRangeMin,\n\t\tfloat InRangeMax,\n\t\tfloat OutRangeMin,\n\t\tfloat OutRangeMax)"
  },
  {
    "label": "K2_DirectionBetweenSockets()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "K2_DirectionBetweenSockets(const USkeletalMeshComponent* Component, const FName SocketOrBoneNameFrom, const FName SocketOrBoneNameTo)"
  },
  {
    "label": "K2_MakePerlinNoiseVectorAndRemap()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "K2_MakePerlinNoiseVectorAndRemap(\n\t\tfloat X,\n\t\tfloat Y,\n\t\tfloat Z,\n\t\tfloat RangeOutMinX,\n\t\tfloat RangeOutMaxX,\n\t\tfloat RangeOutMinY,\n\t\tfloat RangeOutMaxY,\n\t\tfloat RangeOutMinZ,\n\t\tfloat RangeOutMaxZ\n\t)"
  },
  {
    "label": "K2_MakePerlinNoiseAndRemap()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "K2_MakePerlinNoiseAndRemap(\n\t\tfloat Value,\n\t\tfloat RangeOutMin,\n\t\tfloat RangeOutMax\n\t)"
  },
  {
    "label": "K2_StartProfilingTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_StartProfilingTimer()"
  },
  {
    "label": "K2_EndProfilingTimer()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "K2_EndProfilingTimer(bool bLog = true, const FString& LogPrefix = \"\")"
  },
  {
    "label": "CalculateDirection()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateDirection(const FVector& Velocity, const FRotator& BaseRotation)"
  }
]