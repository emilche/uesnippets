[
  {
    "label": "UInterchangeSourceData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeSourceData"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Paths . h \" # include \" Misc / SecureHash . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" InterchangeSourceData . generated . h \")",
    "insertText": "UCLASS(BlueprintType, Blueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UInterchangeSourceData()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (Filename =)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (FileContentHashCache .)",
    "insertText": "Reset()"
  },
  {
    "label": "UInterchangeSourceData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UInterchangeSourceData(FString InFilename)"
  },
  {
    "label": "SetFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilename(InFilename)"
  },
  {
    "label": "TRACE_CPUPROFILER_EVENT_SCOPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRACE_CPUPROFILER_EVENT_SCOPE(UInterchangeSourceData::GetFileContentHash)"
  },
  {
    "label": "ComputeFileContentHashCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeFileContentHashCache()"
  },
  {
    "label": "ConvertRelativePathToFull()",
    "kind": "Method",
    "detail": "Function (Filename =)",
    "insertText": "ConvertRelativePathToFull(InFilename)"
  },
  {
    "label": "FileExists()",
    "kind": "Method",
    "detail": "Function (bool bFileExist =)",
    "insertText": "FileExists(Filename)"
  },
  {
    "label": "GetCleanFilename()",
    "kind": "Method",
    "detail": "Function (FString CleanFilename =)",
    "insertText": "GetCleanFilename(Filename)"
  },
  {
    "label": "GetPath()",
    "kind": "Method",
    "detail": "Function (FString BasePath =)",
    "insertText": "GetPath(Filename)"
  },
  {
    "label": "Right()",
    "kind": "Method",
    "detail": "Function (FString RightPath = BasePath .)",
    "insertText": "Right(20)"
  },
  {
    "label": "Left()",
    "kind": "Method",
    "detail": "Function (FString LeftPath = BasePath .)",
    "insertText": "Left(20)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (BasePath = LeftPath +)",
    "insertText": "TEXT(\"...\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} FString DisplayString = BasePath +)",
    "insertText": "TEXT(\"/\")"
  },
  {
    "label": "HashFile()",
    "kind": "Method",
    "detail": "Function (FileContentHashCache =)",
    "insertText": "HashFile(*Filename)"
  }
]