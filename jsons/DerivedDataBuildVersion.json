[
  {
    "label": "FBuildVersionBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildVersionBuilder"
  },
  {
    "label": "FBuildVersionBuilder()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Hash / xxhash . h \" # include \" Misc / Guid . h \" # include \" Serialization / Archive . h \" # include \" UObject / NameTypes . h \" # include<type_traits> namespace UE::DerivedData { class FBuildVersionBuilder final : public FArchive { public :)",
    "insertText": "FBuildVersionBuilder()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "Build()"
  },
  {
    "label": "GetArchiveName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetArchiveName()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(void* Data, int64 Num)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (using FArchive::operator<<; FArchive&)",
    "insertText": "operator(FName& Name)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (template<ArgType> FBuildVersionBuilder&)",
    "insertText": "operator(ArgType&& Arg)"
  },
  {
    "label": "ArgType()",
    "kind": "Method",
    "detail": "Function (FArchive& Ar =* this ; Ar<<const_cast<std::decay_t<)",
    "insertText": "ArgType(Arg)"
  },
  {
    "label": "SetIsSaving()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsSaving(true)"
  },
  {
    "label": "SetIsPersistent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsPersistent(false)"
  },
  {
    "label": "BaseVersion()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "BaseVersion(TEXT(\"b9080e6a-9eb2-4c25-8810-e957009fa0a1\"))"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (HashBuilder .)",
    "insertText": "Update(&BaseVersion, sizeof(FGuid))"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (FXxHash128 Hash = HashBuilder .)",
    "insertText": "Finalize()"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (uint32 A =)",
    "insertText": "uint32(Hash.HashHigh >> 32)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (uint32 B =)",
    "insertText": "uint32(Hash.HashHigh)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (uint32 C =)",
    "insertText": "uint32(Hash.HashLow >> 32)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (uint32 D =)",
    "insertText": "uint32(Hash.HashLow)"
  },
  {
    "label": "B()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "B(B & ~0x0000f000)"
  },
  {
    "label": "C()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "C(C & ~0xc0000000)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (HashBuilder .)",
    "insertText": "Update(Data, uint64(Num))"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString NameString = Name .)",
    "insertText": "ToString()"
  }
]