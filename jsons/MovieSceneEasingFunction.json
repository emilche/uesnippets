[
  {
    "label": "UMovieSceneEasingFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEasingFunction"
  },
  {
    "label": "IMovieSceneEasingFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieSceneEasingFunction"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / Interface . h \" # include \" UObject / ObjectMacros . h \" # include \" MovieSceneEasingFunction . generated . h \")",
    "insertText": "UINTERFACE(Category=\"Sequencer\", Blueprintable, meta=(DisplayName = \"Easing Function\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class IMovieSceneEasingFunction { public :)",
    "insertText": "GENERATED_BODY() static MOVIESCENE_API float EvaluateWith(const TScriptInterface<IMovieSceneEasingFunction>& ScriptInterface, float Time)"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Evaluate(float Interp)"
  }
]