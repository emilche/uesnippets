[
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "PacingController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PacingController"
  },
  {
    "label": "PacketSender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PacketSender"
  },
  {
    "label": "EnqueuePacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueuePacket(std::unique_ptr<RtpPacketToSend> packet)"
  },
  {
    "label": "CreateProbeCluster()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateProbeCluster(DataRate bitrate, int cluster_id)"
  },
  {
    "label": "CreateProbeClusters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateProbeClusters(\n      rtc::ArrayView<const ProbeClusterConfig> probe_cluster_configs)"
  },
  {
    "label": "Pause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pause()"
  },
  {
    "label": "Resume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resume()"
  },
  {
    "label": "SetCongested()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCongested(bool congested)"
  },
  {
    "label": "SetPacingRates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPacingRates(DataRate pacing_rate, DataRate padding_rate)"
  },
  {
    "label": "SetAccountForAudioPackets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAccountForAudioPackets(bool account_for_audio)"
  },
  {
    "label": "SetIncludeOverhead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIncludeOverhead()"
  },
  {
    "label": "SetTransportOverhead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransportOverhead(DataSize overhead_per_packet)"
  },
  {
    "label": "SetSendBurstInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSendBurstInterval(TimeDelta burst_interval)"
  },
  {
    "label": "SetQueueTimeLimit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQueueTimeLimit(TimeDelta limit)"
  },
  {
    "label": "SetProbingEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProbingEnabled(bool enabled)"
  },
  {
    "label": "ProcessPackets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPackets()"
  },
  {
    "label": "UpdateTimeAndGetElapsed()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "UpdateTimeAndGetElapsed(Timestamp now)"
  },
  {
    "label": "UpdateBudgetWithElapsedTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBudgetWithElapsedTime(TimeDelta delta)"
  },
  {
    "label": "UpdateBudgetWithSentData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBudgetWithSentData(DataSize size)"
  },
  {
    "label": "UpdatePaddingBudgetWithSentData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePaddingBudgetWithSentData(DataSize size)"
  },
  {
    "label": "GetPendingPacket()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtpPacketToSend>)",
    "insertText": "GetPendingPacket(\n      const PacedPacketInfo& pacing_info,\n      Timestamp target_send_time,\n      Timestamp now)"
  },
  {
    "label": "OnPacketSent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPacketSent(RtpPacketMediaType packet_type,\n                    DataSize packet_size,\n                    Timestamp send_time)"
  },
  {
    "label": "MaybeUpdateMediaRateDueToLongQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeUpdateMediaRateDueToLongQueue(Timestamp now)"
  }
]