[
  {
    "label": "FOpusEncoderPrivateState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpusEncoderPrivateState"
  },
  {
    "label": "FOggEncapsulator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOggEncapsulator"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FOpusEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpusEncoder"
  },
  {
    "label": "FOpusEncoder()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DSP / Encoders / IAudioEncoder . h \" # if ! PLATFORM_TVOS class FOpusEncoderPrivateState ; class FOggEncapsulator ; enum class EOpusFrameSizes : uint8 { Min,Small,MediumLow,MediumHigh,High,Max,} ; enum class EOpusMode : uint8 { File,AudioStream,VoiceStream } ; class FOpusEncoder : public Audio::IAudioEncoder { public :)",
    "insertText": "FOpusEncoder(const FSoundQualityInfo& InInfo, int32 AverageBufferCallbackSize, EOpusFrameSizes InFrameSize = EOpusFrameSizes::MediumLow, EOpusMode InMode = EOpusMode::File)"
  },
  {
    "label": "FOpusEncoder()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FOpusEncoder()"
  },
  {
    "label": "GetCompressedPacketSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCompressedPacketSize()"
  },
  {
    "label": "SamplesRequiredPerEncode()",
    "kind": "Method",
    "detail": "Function (protected : int64)",
    "insertText": "SamplesRequiredPerEncode()"
  },
  {
    "label": "StartFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartFile(const FSoundQualityInfo& InQualityInfo, TArray<uint8>& OutFileStart)"
  },
  {
    "label": "EncodeChunk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EncodeChunk(const TArray<float>& InAudio, TArray<uint8>& OutBytes)"
  },
  {
    "label": "EndFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndFile(TArray<uint8>& OutBytes)"
  },
  {
    "label": "GetNumSamplesForEncode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumSamplesForEncode(EOpusFrameSizes InFrameSize)"
  },
  {
    "label": "GetNumSamplesForPreskip()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumSamplesForPreskip()"
  }
]