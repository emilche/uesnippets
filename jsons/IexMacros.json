[
  {
    "label": "iex_debugTrap()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IEXMACROS_H # define INCLUDED_IEXMACROS_H # include<sstream> # include \" IexExport . h \" # include \" IexForward . h \" IEX_EXPORT void)",
    "insertText": "iex_debugTrap()"
  },
  {
    "label": "THROW()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "THROW(type, text)"
  },
  {
    "label": "type()",
    "kind": "Method",
    "detail": "Function (\\ std::stringstream _iex_throw_s ; \\ _iex_throw_s<<text ; \\ throw)",
    "insertText": "type(_iex_throw_s)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define APPEND_EXC(exc, text)"
  },
  {
    "label": "append()",
    "kind": "Method",
    "detail": "Function (\\ std::stringstream _iex_append_s ; \\ _iex_append_s<<text ; \\ exc .)",
    "insertText": "append(_iex_append_s)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define REPLACE_EXC(exc, text)"
  },
  {
    "label": "assign()",
    "kind": "Method",
    "detail": "Function (\\ std::stringstream _iex_replace_s ; \\ _iex_replace_s<<text ; \\ exc .)",
    "insertText": "assign(_iex_replace_s)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define THROW_ERRNO(text)"
  },
  {
    "label": "throwErrnoExc()",
    "kind": "Method",
    "detail": "Function (\\ std::stringstream _iex_throw_errno_s ; \\ _iex_throw_errno_s<<text ; \\::)",
    "insertText": "throwErrnoExc(_iex_throw_errno_s.str ())"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define ASSERT(assertion, type, text)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(bool (assertion) == false)"
  }
]