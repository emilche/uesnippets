[
  {
    "label": "SSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencer"
  },
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "SSequencerPlayRateCombo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerPlayRateCombo"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Containers / ArrayView . h \" # include \" Styling / SlateTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Framework / MultiBox / MultiBoxDefs . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Styling / AppStyle . h \" # include \" MovieSceneFwd . h \" # include \" CommonFrameRates . h \" class SSequencer ; class FSequencer ; class FMenuBuilder ; class SSequencerPlayRateCombo : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSequencerPlayRateCombo) : _StyleSet(&FAppStyle::Get()) , _BlockLocation(EMultiBlockLocation::None) , _StyleName(\"SlimToolBar\")"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(const ISlateStyle*, StyleSet) SLATE_ARGUMENT(EMultiBlockLocation::Type, BlockLocation) SLATE_ARGUMENT(FName, StyleName) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TWeakPtr<FSequencer> Sequencer, TWeakPtr<SSequencer> InWeakSequencerWidget)"
  },
  {
    "label": "GetFrameRateText()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "GetFrameRateText()"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText()"
  },
  {
    "label": "OnCreateMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnCreateMenu()"
  },
  {
    "label": "PopulateIncompatibleRatesMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateIncompatibleRatesMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "PopulateClockSourceMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateClockSourceMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "PopulateCustomClockSourceMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateCustomClockSourceMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "AddMenuEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMenuEntry(FMenuBuilder& MenuBuilder, const FCommonFrameRateInfo& Info)"
  },
  {
    "label": "SetCustomClockSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomClockSource(UObject* Object)"
  },
  {
    "label": "OnToggleFrameLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleFrameLocked()"
  },
  {
    "label": "OnGetFrameLockedCheckState()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "OnGetFrameLockedCheckState()"
  },
  {
    "label": "SetDisplayRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisplayRate(FFrameRate InFrameRate)"
  },
  {
    "label": "GetDisplayRate()",
    "kind": "Method",
    "detail": "Function (FFrameRate)",
    "insertText": "GetDisplayRate()"
  },
  {
    "label": "IsSameDisplayRate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSameDisplayRate(FFrameRate InFrameRate)"
  },
  {
    "label": "SetClockSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClockSource(EUpdateClockSource NewClockSource)"
  },
  {
    "label": "GetFrameRateIsMultipleOfErrorDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFrameRateIsMultipleOfErrorDescription()"
  },
  {
    "label": "GetFrameRateMismatchErrorDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFrameRateMismatchErrorDescription()"
  },
  {
    "label": "GetFrameLockedVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFrameLockedVisibility()"
  },
  {
    "label": "GetFrameRateIsMultipleOfErrorVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFrameRateIsMultipleOfErrorVisibility()"
  },
  {
    "label": "GetFrameRateMismatchErrorVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFrameRateMismatchErrorVisibility()"
  },
  {
    "label": "GetClockSourceVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetClockSourceVisibility()"
  },
  {
    "label": "GetClockSourceImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetClockSourceImage()"
  },
  {
    "label": "GetIsSequenceReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsSequenceReadOnly()"
  }
]