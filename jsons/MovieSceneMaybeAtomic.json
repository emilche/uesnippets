[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEntitySystemMaybeAtomicInt32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntitySystemMaybeAtomicInt32"
  },
  {
    "label": "FEntitySystemMaybeAtomicInt32()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / PlatformAtomics . h \" # include \" Templates / UnrealTemplate . h \" namespace UE { namespace MovieScene { enum class EEntityThreadingModel : uint8 { NoThreading,TaskGraph,} ; struct FEntitySystemMaybeAtomicInt32 final {)",
    "insertText": "FEntitySystemMaybeAtomicInt32()"
  },
  {
    "label": "FEntitySystemMaybeAtomicInt32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEntitySystemMaybeAtomicInt32(int32 Payload) : Payload(Payload)"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Load(EEntityThreadingModel ThreadingModel)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} } int32)",
    "insertText": "Add(EEntityThreadingModel ThreadingModel, const int32 Value)"
  },
  {
    "label": "InterlockedAdd()",
    "kind": "Method",
    "detail": "Function (const int32 Old = Payload ; Payload + = Value ; return Old ; } else { return)",
    "insertText": "InterlockedAdd(&Payload, Value)"
  },
  {
    "label": "Sub()",
    "kind": "Method",
    "detail": "Function (} } int32)",
    "insertText": "Sub(EEntityThreadingModel ThreadingModel, const int32 Value)"
  },
  {
    "label": "InterlockedAdd()",
    "kind": "Method",
    "detail": "Function (const int32 Old = Payload ; Payload - = Value ; return Old ; } else { return)",
    "insertText": "InterlockedAdd(&Payload, -Value)"
  },
  {
    "label": "Exchange()",
    "kind": "Method",
    "detail": "Function (} } int32)",
    "insertText": "Exchange(EEntityThreadingModel ThreadingModel, int32 Other)"
  },
  {
    "label": "Swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Swap(Payload, Other)"
  },
  {
    "label": "Increment()",
    "kind": "Method",
    "detail": "Function (} } int32)",
    "insertText": "Increment(EEntityThreadingModel ThreadingModel)"
  },
  {
    "label": "Decrement()",
    "kind": "Method",
    "detail": "Function (} } int32)",
    "insertText": "Decrement(EEntityThreadingModel ThreadingModel)"
  }
]