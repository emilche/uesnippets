[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FGuidReferences",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGuidReferences"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "helps",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "helps"
  },
  {
    "label": "FGuidReferences",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGuidReferences"
  },
  {
    "label": "FGuidReferences()",
    "kind": "Method",
    "detail": "Function (NETCORE_API)",
    "insertText": "FGuidReferences(\n\t\tFBitReader&\t\t\t\t\tInReader,\n\t\tFBitReaderMark&\t\t\t\tInMark,\n\t\tconst TSet<FNetworkGUID>&\tInUnmappedGUIDs,\n\t\tconst TSet<FNetworkGUID>&\tInMappedDynamicGUIDs,\n\t\tconst int32\t\t\t\t\tInParentIndex,\n\t\tconst int32\t\t\t\t\tInCmdIndex,\n\t\tUPackageMap*\t\t\t\tInPackageMap\n\t)"
  },
  {
    "label": "FGuidReferences()",
    "kind": "Method",
    "detail": "Function (NETCORE_API)",
    "insertText": "FGuidReferences(const FGuidReferences& Other)"
  },
  {
    "label": "FGuidReferences()",
    "kind": "Method",
    "detail": "Function (NETCORE_API)",
    "insertText": "FGuidReferences(FGuidReferences&& Other)"
  },
  {
    "label": "AddUnmappedGUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUnmappedGUID(FNetworkGUID InGUID)"
  },
  {
    "label": "RemoveUnmappedGUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUnmappedGUID(FNetworkGUID InGUID)"
  },
  {
    "label": "UpdateUnmappedGUIDs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateUnmappedGUIDs(UPackageMap* InPackageMap, UObject* OriginalObject, const FProperty* Property, int32 AbsOffset)"
  }
]