[
  {
    "label": "TraceEventMemoryOverhead",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TraceEventMemoryOverhead"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "TracedValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TracedValue"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "TracedValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TracedValue"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "Array",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Array"
  },
  {
    "label": "Dictionary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Dictionary"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "ValueHolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueHolder"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ArrayItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayItem"
  },
  {
    "label": "DictionaryItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DictionaryItem"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "TracedValue()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "TracedValue(size_t capacity = 0)"
  },
  {
    "label": "EndDictionary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndDictionary()"
  },
  {
    "label": "EndArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndArray()"
  },
  {
    "label": "SetInteger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInteger(const char* name, int value)"
  },
  {
    "label": "SetDouble()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDouble(const char* name, double value)"
  },
  {
    "label": "SetBoolean()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoolean(const char* name, bool value)"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetString(const char* name, base::StringPiece value)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(const char* name, TracedValue* value)"
  },
  {
    "label": "SetPointer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPointer(const char* name, void* value)"
  },
  {
    "label": "BeginDictionary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDictionary(const char* name)"
  },
  {
    "label": "BeginArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginArray(const char* name)"
  },
  {
    "label": "SetIntegerWithCopiedName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIntegerWithCopiedName(base::StringPiece name, int value)"
  },
  {
    "label": "SetDoubleWithCopiedName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDoubleWithCopiedName(base::StringPiece name, double value)"
  },
  {
    "label": "SetBooleanWithCopiedName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBooleanWithCopiedName(base::StringPiece name, bool value)"
  },
  {
    "label": "SetStringWithCopiedName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStringWithCopiedName(base::StringPiece name, base::StringPiece value)"
  },
  {
    "label": "SetValueWithCopiedName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValueWithCopiedName(base::StringPiece name, TracedValue* value)"
  },
  {
    "label": "SetPointerWithCopiedName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPointerWithCopiedName(base::StringPiece name, void* value)"
  },
  {
    "label": "BeginDictionaryWithCopiedName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDictionaryWithCopiedName(base::StringPiece name)"
  },
  {
    "label": "BeginArrayWithCopiedName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginArrayWithCopiedName(base::StringPiece name)"
  },
  {
    "label": "AppendInteger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendInteger(int)"
  },
  {
    "label": "AppendDouble()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendDouble(double)"
  },
  {
    "label": "AppendBoolean()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendBoolean(bool)"
  },
  {
    "label": "AppendString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendString(base::StringPiece)"
  },
  {
    "label": "AppendPointer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendPointer(void*)"
  },
  {
    "label": "BeginArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginArray()"
  },
  {
    "label": "BeginDictionary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDictionary()"
  },
  {
    "label": "ArrayScope()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ArrayScope(TracedValue* value)"
  },
  {
    "label": "AppendArrayScoped()",
    "kind": "Method",
    "detail": "Function (ArrayScope)",
    "insertText": "AppendArrayScoped()"
  },
  {
    "label": "BeginArrayScoped()",
    "kind": "Method",
    "detail": "Function (ArrayScope)",
    "insertText": "BeginArrayScoped(const char* name)"
  },
  {
    "label": "BeginArrayScopedWithCopiedName()",
    "kind": "Method",
    "detail": "Function (ArrayScope)",
    "insertText": "BeginArrayScopedWithCopiedName(\n      base::StringPiece name)"
  },
  {
    "label": "DictionaryScope()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "DictionaryScope(TracedValue* value)"
  },
  {
    "label": "AppendDictionaryScoped()",
    "kind": "Method",
    "detail": "Function (DictionaryScope)",
    "insertText": "AppendDictionaryScoped()"
  },
  {
    "label": "BeginDictionaryScoped()",
    "kind": "Method",
    "detail": "Function (DictionaryScope)",
    "insertText": "BeginDictionaryScoped(const char* name)"
  },
  {
    "label": "BeginDictionaryScopedWithCopiedName()",
    "kind": "Method",
    "detail": "Function (DictionaryScope)",
    "insertText": "BeginDictionaryScopedWithCopiedName(\n      base::StringPiece name)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<TracedValue>)",
    "insertText": "Build(\n      const std::initializer_list<DictionaryItem> items)"
  },
  {
    "label": "AppendToProto()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AppendToProto(ProtoAppender* appender)"
  },
  {
    "label": "SetWriterFactoryCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWriterFactoryCallback(WriterFactoryCallback callback)"
  },
  {
    "label": "TracedValue()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "TracedValue(size_t capacity, bool forced_json)"
  }
]