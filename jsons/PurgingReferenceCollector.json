[
  {
    "label": "FPurgingReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPurgingReferenceCollector"
  },
  {
    "label": "HasObjectToPurge()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / UnrealType . h \" class FPurgingReferenceCollector : public FReferenceCollector { public : bool)",
    "insertText": "HasObjectToPurge()"
  },
  {
    "label": "AddObjectToPurge()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddObjectToPurge(const UObject* Object)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ObjectsToPurge .)",
    "insertText": "Add(Object)"
  },
  {
    "label": "IsIgnoringArchetypeRef()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsIgnoringArchetypeRef()"
  },
  {
    "label": "ConditionalPurgeObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalPurgeObject(Object)"
  },
  {
    "label": "HandleObjectReferences()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HandleObjectReferences(UObject** InObjects, const int32 ObjectNum, const UObject* InReferencingObject, const FProperty* InReferencingProperty)"
  },
  {
    "label": "ConditionalPurgeObject()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "ConditionalPurgeObject(UObject*& Object)"
  }
]