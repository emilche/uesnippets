[
  {
    "label": "BASE_I18N_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_I18N_EXPORT"
  },
  {
    "label": "State",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "State"
  },
  {
    "label": "StreamingUtf8Validator()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_I18N_STREAMING_UTF8_VALIDATOR_H_ # define BASE_I18N_STREAMING_UTF8_VALIDATOR_H_ # include<stddef . h> # include<stdint . h> # include<string> # include \" base / i18n / base_i18n_export . h \" namespace base { class BASE_I18N_EXPORT StreamingUtf8Validator { public : enum State { VALID_ENDPOINT,VALID_MIDPOINT,INVALID } ;)",
    "insertText": "StreamingUtf8Validator() : state_(0u)"
  },
  {
    "label": "StreamingUtf8Validator()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "StreamingUtf8Validator(const StreamingUtf8Validator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (StreamingUtf8Validator&)",
    "insertText": "operator(const StreamingUtf8Validator&)"
  },
  {
    "label": "AddBytes()",
    "kind": "Method",
    "detail": "Function (State)",
    "insertText": "AddBytes(const char* data, size_t size)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Validate(const std::string& string)"
  }
]