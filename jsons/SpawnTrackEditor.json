[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "ISequencerTrackEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencerTrackEditor"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "UMovieSceneTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTrack"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FBuildEditWidgetParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildEditWidgetParams"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "MOVIESCENETOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENETOOLS_API"
  },
  {
    "label": "CreateTrackEditor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" ISequencer . h \" # include \" ISequencerSection . h \" # include \" ISequencerTrackEditor . h \" # include \" Misc / Guid . h \" # include \" MovieSceneTrack . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / SubclassOf . h \" # include \" TrackEditors / PropertyTrackEditors / BoolPropertyTrackEditor . h \" # include \" UObject / NameTypes . h \" class FMenuBuilder ; class ISequencer ; class ISequencerTrackEditor ; class SWidget ; class UClass ; class UMovieScene ; class UMovieSceneSequence ; class UMovieSceneTrack ; class UObject ; struct FBuildEditWidgetParams ; struct FGuid ; class FSpawnTrackEditor : public FBoolPropertyTrackEditor { public : TSharedRef<ISequencerTrackEditor>)",
    "insertText": "CreateTrackEditor(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "FSpawnTrackEditor()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FSpawnTrackEditor(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "AddTrack()",
    "kind": "Method",
    "detail": "Function (public : UMovieSceneTrack*)",
    "insertText": "AddTrack(UMovieScene* FocusedMovieScene, const FGuid& ObjectHandle, TSubclassOf<class UMovieSceneTrack> TrackClass, FName UniqueTypeName)"
  },
  {
    "label": "BuildObjectBindingTrackMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildObjectBindingTrackMenu(FMenuBuilder& MenuBuilder, const TArray<FGuid>& ObjectBindings, const UClass* ObjectClass)"
  },
  {
    "label": "BuildOutlinerEditWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "BuildOutlinerEditWidget(const FGuid& ObjectBinding, UMovieSceneTrack* Track, const FBuildEditWidgetParams& Params)"
  },
  {
    "label": "HandleAssetAdded()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HandleAssetAdded(UObject* Asset, const FGuid& TargetObjectGuid)"
  },
  {
    "label": "SupportsSequence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsSequence(UMovieSceneSequence* InSequence)"
  },
  {
    "label": "HandleAddSpawnTrackMenuEntryExecute()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleAddSpawnTrackMenuEntryExecute(TArray<FGuid> ObjectBindings)"
  },
  {
    "label": "CanAddSpawnTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAddSpawnTrack(FGuid ObjectBinding)"
  }
]