[
  {
    "label": "FEncryptionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEncryptionComponent"
  },
  {
    "label": "FEncryptionComponent()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" PacketHandler . h \" # include \" Containers / ArrayView . h \" # include \" UObject / CoreNet . h \" class FEncryptionComponent : public HandlerComponent { public :)",
    "insertText": "FEncryptionComponent(FName InName) : HandlerComponent(InName)"
  },
  {
    "label": "EnableEncryption()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EnableEncryption()"
  },
  {
    "label": "DisableEncryption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableEncryption()"
  },
  {
    "label": "IsEncryptionEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEncryptionEnabled()"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (FEncryptionData EncryptionData ; EncryptionData . Key .)",
    "insertText": "Append(Key.GetData(), Key.Num())"
  },
  {
    "label": "SetEncryptionData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncryptionData(EncryptionData)"
  },
  {
    "label": "SetEncryptionData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetEncryptionData(const FEncryptionData& EncryptionData)"
  }
]