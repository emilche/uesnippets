[
  {
    "label": "AudioLoop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioLoop"
  },
  {
    "label": "AudioLoop()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_TOOLS_AUDIO_LOOP_H_ # define MODULES_AUDIO_CODING_NETEQ_TOOLS_AUDIO_LOOP_H_ # include<memory> # include<string> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" namespace webrtc { namespace test { class AudioLoop { public :)",
    "insertText": "AudioLoop() : next_index_(0), loop_length_samples_(0), block_length_samples_(0)"
  },
  {
    "label": "AudioLoop()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "AudioLoop()"
  },
  {
    "label": "AudioLoop()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "AudioLoop(const AudioLoop&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AudioLoop&)",
    "insertText": "operator(const AudioLoop&)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init(absl::string_view file_name, size_t max_loop_length_samples, size_t block_length_samples)"
  },
  {
    "label": "GetNextBlock()",
    "kind": "Method",
    "detail": "Function (rtc::ArrayView<const int16_t>)",
    "insertText": "GetNextBlock()"
  }
]