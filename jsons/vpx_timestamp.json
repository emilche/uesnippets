[
  {
    "label": "vpx_rational64",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_rational64"
  },
  {
    "label": "gcd()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_UTIL_VPX_TIMESTAMP_H_ # define VPX_VPX_UTIL_VPX_TIMESTAMP_H_ # include<assert . h> # ifdef __cplusplus \" C \" { # endif typedef struct vpx_rational64 { int64_t num ; int den ; } vpx_rational64_t ; int)",
    "insertText": "gcd(int64_t a, int b)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (int r ;)",
    "insertText": "assert(a >= 0)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(b > 0)"
  },
  {
    "label": "r()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "r(int)(a % b)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (a = b ; b = r ; })",
    "insertText": "return(int)"
  },
  {
    "label": "reduce_ratio()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "reduce_ratio(vpx_rational64_t *ratio)"
  },
  {
    "label": "gcd()",
    "kind": "Method",
    "detail": "Function (const int denom =)",
    "insertText": "gcd(ratio->num, ratio->den)"
  }
]