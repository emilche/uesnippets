[
  {
    "label": "ALevelSequenceActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALevelSequenceActor"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "ULevelSequenceBurnInOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelSequenceBurnInOptions"
  },
  {
    "label": "FMovieSceneTimeController_FrameStep",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeController_FrameStep"
  },
  {
    "label": "MOVIESCENETOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENETOOLS_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCinematicShotCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCinematicShotCache"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / SoftObjectPath . h \" # include \" LevelSequencePlayer . h \" # include \" MovieSceneCapture . h \" # include \" AutomatedLevelSequenceCapture . generated . h \" class ALevelSequenceActor ; class FJsonObject ; class FSceneViewport ; class ULevelSequenceBurnInOptions ; struct FMovieSceneTimeController_FrameStep ;)",
    "insertText": "UCLASS(config=EditorPerProjectUserSettings, PerObjectConfig, BlueprintType)"
  },
  {
    "label": "UAutomatedLevelSequenceCapture()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UAutomatedLevelSequenceCapture(const FObjectInitializer&)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Initialize(TSharedPtr<FSceneViewport> InViewport, int32 PIEInstance = -1)"
  },
  {
    "label": "LoadFromConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadFromConfig()"
  },
  {
    "label": "SaveToConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveToConfig()"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "SetFrameOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameOverrides(FFrameNumber InStartFrame, FFrameNumber InEndFrame)"
  },
  {
    "label": "AddFormatMappings()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "AddFormatMappings(TMap<FString, FStringFormatArg>& OutFormatMappings, const FFrameMetrics& FrameMetrics)"
  },
  {
    "label": "SerializeAdditionalJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeAdditionalJson(FJsonObject& Object)"
  },
  {
    "label": "DeserializeAdditionalJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeserializeAdditionalJson(const FJsonObject& Object)"
  },
  {
    "label": "UpdateFrameState()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateFrameState()"
  },
  {
    "label": "SequenceUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SequenceUpdated(const UMovieSceneSequencePlayer& Player, FFrameTime CurrentTime, FFrameTime PreviousTime)"
  },
  {
    "label": "SetupFrameRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupFrameRange()"
  },
  {
    "label": "EnableCinematicMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableCinematicMode()"
  },
  {
    "label": "ExportEDL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportEDL()"
  },
  {
    "label": "ExportFCPXML()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportFCPXML()"
  },
  {
    "label": "OnTick()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle OnPlayerUpdatedBinding ; private : void)",
    "insertText": "OnTick(float DeltaSeconds)"
  },
  {
    "label": "InitializeShots()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeShots()"
  },
  {
    "label": "SetupShot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupShot(FFrameNumber& StartTime, FFrameNumber& EndTime)"
  },
  {
    "label": "RestoreShots()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreShots()"
  },
  {
    "label": "RestoreFrameOverrides()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RestoreFrameOverrides()"
  },
  {
    "label": "DelayBeforeWarmupFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DelayBeforeWarmupFinished()"
  },
  {
    "label": "PauseFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseFinished()"
  },
  {
    "label": "FCinematicShotCache()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<FSceneViewport> Viewport ; enum class ELevelSequenceCaptureState { Setup,DelayBeforeWarmUp,ReadyToWarmUp,WarmingUp,FinishedWarmUp,Paused,FinishedPause,} CaptureState ; int32 RemainingWarmUpFrames ; int32 NumShots ; int32 ShotIndex ; FLevelSequencePlayerSnapshot CachedState ; FTimerHandle DelayTimer ; struct FCinematicShotCache {)",
    "insertText": "FCinematicShotCache(bool bInActive, bool bInLocked, const TRange<FFrameNumber>& InShotRange, const TRange<FFrameNumber>& InMovieSceneRange) : bActive(bInActive) , bLocked(bInLocked) , ShotRange(InShotRange) , MovieSceneRange(InMovieSceneRange)"
  }
]