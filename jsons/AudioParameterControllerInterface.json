[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FAudioParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioParameter"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "UAudioParameterControllerInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAudioParameterControllerInterface"
  },
  {
    "label": "IAudioParameterControllerInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAudioParameterControllerInterface"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AudioParameter . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" # include \" IAudioProxyInitializer . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / Interface . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" AudioParameterControllerInterface . generated . h \" class UObject ; struct FAudioParameter ; struct FFrame ;)",
    "insertText": "UINTERFACE(BlueprintType, meta = (CannotImplementInterfaceInBlueprint), MinimalAPI)"
  },
  {
    "label": "GENERATED_UINTERFACE_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UINTERFACE_BODY()"
  },
  {
    "label": "GENERATED_IINTERFACE_BODY()",
    "kind": "Method",
    "detail": "Function (class IAudioParameterControllerInterface : public IInterface {)",
    "insertText": "GENERATED_IINTERFACE_BODY() public: UFUNCTION(BlueprintCallable, Category = \"Audio|Parameter\") virtual void ResetParameters()"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter(FAudioParameter&& InValue)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(TArray<FAudioParameter>&& InValues)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (template<DataType> void)",
    "insertText": "SetParameter(FName InName, DataType&&)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (template<> void)",
    "insertText": "SetParameter(FName InName, bool&& InBool)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter({ InName, MoveTemp(InBool) })"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "SetParameter(FName InName, float&& InFloat)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter({ InName, MoveTemp(InFloat) })"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "SetParameter(FName InName, int32&& InInteger)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter({ InName, MoveTemp(InInteger) })"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "SetParameter(FName InName, FString&& InString)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter({ InName, MoveTemp(InString) })"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "SetParameter(FName InName, UObject*&& InObject)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter({ InName, MoveTemp(InObject) })"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "SetParameter(FName InName, TArray<bool>&& InBools)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter({ InName, MoveTemp(InBools)})"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "SetParameter(FName InName, TArray<float>&& InFloats)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter({ InName, MoveTemp(InFloats) })"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "SetParameter(FName InName, TArray<int32>&& InIntegers)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter({ InName, MoveTemp(InIntegers) })"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "SetParameter(FName InName, TArray<FString>&& InStrings)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter({ InName, MoveTemp(InStrings) })"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "SetParameter(FName InName, TArray<UObject*>&& InObjects)"
  },
  {
    "label": "SetParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameter({ InName, MoveTemp(InObjects) })"
  }
]