[
  {
    "label": "FArrayProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrayProperty"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FJsonValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonValue"
  },
  {
    "label": "FMapProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMapProperty"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FSetProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSetProperty"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "EDITORCONFIG_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EDITORCONFIG_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UEditorConfigSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorConfigSubsystem"
  },
  {
    "label": "FEditorConfig()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Concepts / EqualityComparable . h \" # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" Delegates / Delegate . h \" # include \" Dom / JsonObject . h \" # include \" HAL / Platform . h \" # include \" JsonConfig . h \" # include \" Misc / AssertionMacros . h \" # include \" Templates / IsPointer . h \" # include \" Templates / Models . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTemplate . h \" # include \" Templates / UnrealTypeTraits . h \" class FArrayProperty ; class FJsonObject ; class FJsonValue ; class FMapProperty ; class FProperty ; class FSetProperty ; class FString ; class UClass ; class UObject ; class UStruct ; class FEditorConfig { public : enum class EPropertyFilter { All,MetadataOnly } ;)",
    "insertText": "FEditorConfig()"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParent(TSharedPtr<FEditorConfig> InConfig)"
  },
  {
    "label": "LoadFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromString(FStringView Content)"
  },
  {
    "label": "LoadFromFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromFile(FStringView FilePath)"
  },
  {
    "label": "SaveToString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveToString(FString& OutResult)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "TryGetStruct()",
    "kind": "Method",
    "detail": "Function (} template<T> bool)",
    "insertText": "TryGetStruct(FStringView Key, T& OutValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "TryGetUObject()",
    "kind": "Method",
    "detail": "Function (template<T> bool)",
    "insertText": "TryGetUObject(FStringView Key, T& OutValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "TryGetRootStruct()",
    "kind": "Method",
    "detail": "Function (template<T> bool)",
    "insertText": "TryGetRootStruct(T& OutValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "TryGetRootUObject()",
    "kind": "Method",
    "detail": "Function (template<T> bool)",
    "insertText": "TryGetRootUObject(T& OutValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "TryGetRootUObject()",
    "kind": "Method",
    "detail": "Function (template<T> bool)",
    "insertText": "TryGetRootUObject(T* OutValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "TryGetRootStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetRootStruct(const UStruct* Class, void* OutValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "TryGetRootUObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetRootUObject(const UClass* Class, UObject* OutValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "SetStruct()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "SetStruct(FStringView Key, const T& InValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "SetUObject()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "SetUObject(FStringView Key, const T& InValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "SetRootStruct()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "SetRootStruct(const T& InValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "SetRootUObject()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "SetRootUObject(const T& InValue, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "SetRootStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootStruct(const UStruct* Class, const void* Instance, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "SetRootUObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootUObject(const UClass* Class, const UObject* Instance, EPropertyFilter Filter = EPropertyFilter::MetadataOnly)"
  },
  {
    "label": "HasOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasOverride(FStringView Key)"
  },
  {
    "label": "OnSaved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSaved()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(FEditorConfig, FOnEditorConfigDirtied, const FEditorConfig&)"
  },
  {
    "label": "OnEditorConfigDirtied()",
    "kind": "Method",
    "detail": "Function (FOnEditorConfigDirtied&)",
    "insertText": "OnEditorConfigDirtied()"
  },
  {
    "label": "ReadStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadStruct(const TSharedPtr<FJsonObject>& JsonObject, const UStruct* Struct, void* Instance, UObject* Owner, EPropertyFilter Filter)"
  },
  {
    "label": "ReadValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadValue(const TSharedPtr<FJsonValue>& JsonValue, const FProperty* Property, void* DataPtr, UObject* Owner)"
  },
  {
    "label": "WriteStruct()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FJsonObject>)",
    "insertText": "WriteStruct(const UStruct* Struct, const void* Instance, const void* Defaults, EPropertyFilter Filter)"
  },
  {
    "label": "WriteUObject()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FJsonObject>)",
    "insertText": "WriteUObject(const UClass* Class, const UObject* Instance, EPropertyFilter Filter)"
  },
  {
    "label": "WriteArray()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FJsonValue>)",
    "insertText": "WriteArray(const FArrayProperty* ArrayProperty, const void* DataPtr)"
  },
  {
    "label": "WriteSet()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FJsonValue>)",
    "insertText": "WriteSet(const FSetProperty* Property, const void* DataPtr)"
  },
  {
    "label": "WriteMap()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FJsonValue>)",
    "insertText": "WriteMap(const FMapProperty* Property, const void* DataPtr)"
  },
  {
    "label": "WriteValue()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FJsonValue>)",
    "insertText": "WriteValue(const FProperty* Property, const void* DataPtr, const void* Defaults)"
  },
  {
    "label": "SaveToFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveToFile(FStringView FilePath)"
  },
  {
    "label": "SetDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDirty()"
  },
  {
    "label": "TryGetStruct()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<UE::FJsonConfig> JsonConfig ; TSharedPtr<FEditorConfig> ParentConfig ; FOnEditorConfigDirtied EditorConfigDirtiedEvent ; bool Dirty { false } ; } ; template<T> bool)",
    "insertText": "TryGetStruct(FStringView Key, T& OutValue, EPropertyFilter Filter)"
  },
  {
    "label": "ReadStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadStruct(StructData, Struct, &OutValue, nullptr, Filter)"
  },
  {
    "label": "ReadUObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadUObject(UObjectData, Class, &OutValue, Filter)"
  },
  {
    "label": "TryGetRootUObject()",
    "kind": "Method",
    "detail": "Function (} template<T> bool)",
    "insertText": "TryGetRootUObject(T& OutValue, EPropertyFilter Filter)"
  },
  {
    "label": "TryGetRootUObject()",
    "kind": "Method",
    "detail": "Function (} template<T> bool)",
    "insertText": "TryGetRootUObject(T* OutValue, EPropertyFilter Filter)"
  },
  {
    "label": "SetStruct()",
    "kind": "Method",
    "detail": "Function (} template<T> void)",
    "insertText": "SetStruct(FStringView Key, const T& InValue, EPropertyFilter Filter)"
  },
  {
    "label": "SetJsonObject()",
    "kind": "Method",
    "detail": "Function (JsonConfig ->)",
    "insertText": "SetJsonObject(UE::FJsonPath(Key), JsonObject)"
  },
  {
    "label": "SetUObject()",
    "kind": "Method",
    "detail": "Function (} template<T> void)",
    "insertText": "SetUObject(FStringView Key, const T& InValue, EPropertyFilter Filter)"
  },
  {
    "label": "SetRootStruct()",
    "kind": "Method",
    "detail": "Function (} template<T> void)",
    "insertText": "SetRootStruct(const T& InValue, EPropertyFilter Filter)"
  },
  {
    "label": "SetRootStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootStruct(T::StaticStruct(), &InValue, Filter)"
  },
  {
    "label": "SetRootUObject()",
    "kind": "Method",
    "detail": "Function (} template<T> void)",
    "insertText": "SetRootUObject(const T& InValue, EPropertyFilter Filter)"
  },
  {
    "label": "SetRootUObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootUObject(TRemovePointer<T>::Type::StaticClass(), InValue, Filter)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "static_assert(TIsDerivedFrom<typename TRemovePointer<T>::Type, UObject>::Value, \"Type is not derived from UObject.\")"
  },
  {
    "label": "SetRootUObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootUObject(T::StaticClass(), &InValue, Filter)"
  }
]