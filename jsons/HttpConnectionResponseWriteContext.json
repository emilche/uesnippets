[
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FHttpConnectionResponseWriteContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHttpConnectionResponseWriteContext"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HttpConnectionContext . h \" # include \" HttpServerHttpVersion . h \" # include \" HttpServerResponse . h \" class FSocket ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogHttpConnectionResponseWriteContext, Log, All)"
  },
  {
    "label": "FHttpConnectionResponseWriteContext()",
    "kind": "Method",
    "detail": "Function (struct FHttpConnectionResponseWriteContext final : public FHttpConnectionContext { public :)",
    "insertText": "FHttpConnectionResponseWriteContext(FSocket* InSocket)"
  },
  {
    "label": "WriteStream()",
    "kind": "Method",
    "detail": "Function (EHttpConnectionContextState)",
    "insertText": "WriteStream(float DeltaTime)"
  },
  {
    "label": "ResetContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetContext(TUniquePtr<FHttpServerResponse>&& Response)"
  },
  {
    "label": "WriteBytes()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "WriteBytes(const uint8* Bytes, int32 BytesLen, int32 &OutBytesWritten)"
  },
  {
    "label": "IsWriteHeaderComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWriteHeaderComplete()"
  },
  {
    "label": "IsWriteBodyComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWriteBodyComplete()"
  },
  {
    "label": "SerializeHeadersUtf8()",
    "kind": "Method",
    "detail": "Function (TArray<uint8>)",
    "insertText": "SerializeHeadersUtf8(HttpVersion::EHttpServerHttpVersion HttpVersion, EHttpServerResponseCodes ResponseCode, const TMap<FString, TArray<FString>>& HeadersMap)"
  }
]