[
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "StringByteSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringByteSink"
  },
  {
    "label": "ByteSink()",
    "kind": "Method",
    "detail": "Function (# ifndef __BYTESTREAM_H__ # define __BYTESTREAM_H__ # include \" unicode / utypes . h \" # include \" unicode / uobject . h \" # include \" unicode / std_string . h \" U_NAMESPACE_BEGIN class ByteSink : public UMemory { public :)",
    "insertText": "ByteSink()"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(const char* bytes, int32_t n)"
  },
  {
    "label": "GetAppendBuffer()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "GetAppendBuffer(int32_t min_capacity, int32_t desired_capacity_hint, char* scratch, int32_t scratch_capacity, int32_t* result_capacity)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "ByteSink()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "ByteSink(const ByteSink &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ByteSink&)",
    "insertText": "operator(const ByteSink &)"
  },
  {
    "label": "CheckedArrayByteSink()",
    "kind": "Method",
    "detail": "Function (} ; class CheckedArrayByteSink : public ByteSink { public :)",
    "insertText": "CheckedArrayByteSink(char* outbuf, int32_t capacity)"
  },
  {
    "label": "CheckedArrayByteSink()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CheckedArrayByteSink()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (CheckedArrayByteSink&)",
    "insertText": "Reset()"
  },
  {
    "label": "NumberOfBytesWritten()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "NumberOfBytesWritten()"
  },
  {
    "label": "StringByteSink()",
    "kind": "Method",
    "detail": "Function (} ; template<StringClass> class StringByteSink : public ByteSink { public :)",
    "insertText": "StringByteSink(StringClass* dest) : dest_(dest)"
  },
  {
    "label": "StringByteSink()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "StringByteSink(StringClass* dest, int32_t initialAppendCapacity) : dest_(dest)"
  },
  {
    "label": "reserve()",
    "kind": "Method",
    "detail": "Function (dest ->)",
    "insertText": "reserve(dest->length() + initialAppendCapacity)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Append(const char* data, int32_t n)"
  },
  {
    "label": "append()",
    "kind": "Method",
    "detail": "Function (dest_ ->)",
    "insertText": "append(data, n)"
  },
  {
    "label": "StringByteSink()",
    "kind": "Method",
    "detail": "Function (} private : StringClass* dest_ ;)",
    "insertText": "StringByteSink()"
  },
  {
    "label": "StringByteSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StringByteSink(const StringByteSink &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (StringByteSink&)",
    "insertText": "operator(const StringByteSink &)"
  }
]