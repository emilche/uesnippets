[
  {
    "label": "FTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTableColumn"
  },
  {
    "label": "FTaskTableColumns",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTaskTableColumns"
  },
  {
    "label": "FTaskTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskTable"
  },
  {
    "label": "FTaskTable()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" UObject / NameTypes . h \" # include \" InsightsCore / Table / ViewModels / Table . h \" # include \" Insights / TaskGraphProfiler / ViewModels / TaskEntry . h \" namespace UE::Insights { class FTableColumn ; } namespace UE::Insights::TaskGraphProfiler { struct FTaskTableColumns { const FName DebugNameColumnId ; const FName CreatedTimestampColumnId ; const FName CreatedThreadIdColumnId ; const FName LaunchedTimestampColumnId ; const FName LaunchedThreadIdColumnId ; const FName ScheduledTimestampColumnId ; const FName ScheduledThreadIdColumnId ; const FName StartedTimestampColumnId ; const FName StartedThreadIdColumnId ; const FName FinishedTimestampColumnId ; const FName CompletedTimestampColumnId ; const FName CompletedThreadIdColumnId ; const FName DestroyedTimestampColumnId ; const FName DestroyedThreadIdColumnId ; const FName TaskSizeColumnId ; const FName NumParentColumnId ; const FName NumNestedColumnId ; const FName NumSubsequentsColumnId ; const FName NumPrerequisitesColumnId ; } ; class FTaskTable : public FTable { public :)",
    "insertText": "FTaskTable()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetTaskEntries()",
    "kind": "Method",
    "detail": "Function (TArray<FTaskEntry>&)",
    "insertText": "GetTaskEntries()"
  },
  {
    "label": "GetTask()",
    "kind": "Method",
    "detail": "Function (} const FTaskEntry*)",
    "insertText": "GetTask(int32 InIndex)"
  },
  {
    "label": "GetTaskChecked()",
    "kind": "Method",
    "detail": "Function (} const FTaskEntry&)",
    "insertText": "GetTaskChecked(int32 InIndex)"
  },
  {
    "label": "SwitchToRelativeToPreviousTimestamps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwitchToRelativeToPreviousTimestamps()"
  },
  {
    "label": "SwitchToRelativeToCreatedTimestamps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwitchToRelativeToCreatedTimestamps()"
  },
  {
    "label": "AddDefaultColumns()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddDefaultColumns()"
  }
]