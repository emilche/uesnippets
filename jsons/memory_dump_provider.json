[
  {
    "label": "ProcessMemoryDump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProcessMemoryDump"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "Options",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Options"
  },
  {
    "label": "Options()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TRACE_EVENT_MEMORY_DUMP_PROVIDER_H_ # define BASE_TRACE_EVENT_MEMORY_DUMP_PROVIDER_H_ # include \" base / base_export . h \" # include \" base / process / process_handle . h \" # include \" base / trace_event / memory_dump_request_args . h \" namespace base { namespace trace_event { class ProcessMemoryDump ; class BASE_EXPORT MemoryDumpProvider { public : struct Options {)",
    "insertText": "Options() : dumps_on_single_thread_task_runner(false)"
  },
  {
    "label": "MemoryDumpProvider()",
    "kind": "Method",
    "detail": "Function (} bool dumps_on_single_thread_task_runner ; } ;)",
    "insertText": "MemoryDumpProvider(const MemoryDumpProvider&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MemoryDumpProvider&)",
    "insertText": "operator(const MemoryDumpProvider&)"
  },
  {
    "label": "MemoryDumpProvider()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "MemoryDumpProvider()"
  },
  {
    "label": "OnMemoryDump()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnMemoryDump(const MemoryDumpArgs& args, ProcessMemoryDump* pmd)"
  }
]