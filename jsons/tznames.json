[
  {
    "label": "UTimeZoneNameType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UTimeZoneNameType"
  },
  {
    "label": "UVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVector"
  },
  {
    "label": "MatchInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MatchInfo"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "TimeZoneNames()",
    "kind": "Method",
    "detail": "Function (# ifndef __TZNAMES_H # define __TZNAMES_H # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / uloc . h \" # include \" unicode / unistr . h \" U_CDECL_BEGIN typedef enum UTimeZoneNameType { UTZNM_UNKNOWN = 0 x00,UTZNM_LONG_GENERIC = 0 x01,UTZNM_LONG_STANDARD = 0 x02,UTZNM_LONG_DAYLIGHT = 0 x04,UTZNM_SHORT_GENERIC = 0 x08,UTZNM_SHORT_STANDARD = 0 x10,UTZNM_SHORT_DAYLIGHT = 0 x20,UTZNM_EXEMPLAR_LOCATION = 0 x40 } UTimeZoneNameType ; U_CDECL_END U_NAMESPACE_BEGIN class UVector ; struct MatchInfo ; class U_I18N_API TimeZoneNames : public UObject { public : ~)",
    "insertText": "TimeZoneNames()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "operator(const TimeZoneNames& other)"
  },
  {
    "label": "clone()",
    "kind": "Method",
    "detail": "Function (} TimeZoneNames*)",
    "insertText": "clone()"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (TimeZoneNames* U_EXPORT2)",
    "insertText": "createInstance(const Locale& locale, UErrorCode& status)"
  },
  {
    "label": "createTZDBInstance()",
    "kind": "Method",
    "detail": "Function (TimeZoneNames* U_EXPORT2)",
    "insertText": "createTZDBInstance(const Locale& locale, UErrorCode& status)"
  },
  {
    "label": "getAvailableMetaZoneIDs()",
    "kind": "Method",
    "detail": "Function (StringEnumeration*)",
    "insertText": "getAvailableMetaZoneIDs(UErrorCode& status)"
  },
  {
    "label": "getAvailableMetaZoneIDs()",
    "kind": "Method",
    "detail": "Function (StringEnumeration*)",
    "insertText": "getAvailableMetaZoneIDs(const UnicodeString& tzID, UErrorCode& status)"
  },
  {
    "label": "getMetaZoneID()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "getMetaZoneID(const UnicodeString& tzID, UDate date, UnicodeString& mzID)"
  },
  {
    "label": "getReferenceZoneID()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "getReferenceZoneID(const UnicodeString& mzID, const char* region, UnicodeString& tzID)"
  },
  {
    "label": "getMetaZoneDisplayName()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "getMetaZoneDisplayName(const UnicodeString& mzID, UTimeZoneNameType type, UnicodeString& name)"
  },
  {
    "label": "getTimeZoneDisplayName()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "getTimeZoneDisplayName(const UnicodeString& tzID, UTimeZoneNameType type, UnicodeString& name)"
  },
  {
    "label": "getExemplarLocationName()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "getExemplarLocationName(const UnicodeString& tzID, UnicodeString& name)"
  },
  {
    "label": "getDisplayName()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "getDisplayName(const UnicodeString& tzID, UTimeZoneNameType type, UDate date, UnicodeString& name)"
  },
  {
    "label": "loadAllDisplayNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "loadAllDisplayNames(UErrorCode& status)"
  },
  {
    "label": "getDisplayNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getDisplayNames(const UnicodeString& tzID, const UTimeZoneNameType types[], int32_t numTypes, UDate date, UnicodeString dest[], UErrorCode& status)"
  },
  {
    "label": "MatchInfoCollection()",
    "kind": "Method",
    "detail": "Function (class U_I18N_API MatchInfoCollection : public UMemory { public :)",
    "insertText": "MatchInfoCollection()"
  },
  {
    "label": "addZone()",
    "kind": "Method",
    "detail": "Function (# ifndef void)",
    "insertText": "addZone(UTimeZoneNameType nameType, int32_t matchLength, const UnicodeString& tzID, UErrorCode& status)"
  },
  {
    "label": "addMetaZone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addMetaZone(UTimeZoneNameType nameType, int32_t matchLength, const UnicodeString& mzID, UErrorCode& status)"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "size()"
  },
  {
    "label": "getNameTypeAt()",
    "kind": "Method",
    "detail": "Function (UTimeZoneNameType)",
    "insertText": "getNameTypeAt(int32_t idx)"
  },
  {
    "label": "getMatchLengthAt()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getMatchLengthAt(int32_t idx)"
  },
  {
    "label": "getTimeZoneIDAt()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "getTimeZoneIDAt(int32_t idx, UnicodeString& tzID)"
  },
  {
    "label": "getMetaZoneIDAt()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "getMetaZoneIDAt(int32_t idx, UnicodeString& mzID)"
  },
  {
    "label": "matches()",
    "kind": "Method",
    "detail": "Function (# endif private : UVector* fMatches ; UVector*)",
    "insertText": "matches(UErrorCode& status)"
  },
  {
    "label": "find()",
    "kind": "Method",
    "detail": "Function (} ; MatchInfoCollection*)",
    "insertText": "find(const UnicodeString& text, int32_t start, uint32_t types, UErrorCode& status)"
  }
]