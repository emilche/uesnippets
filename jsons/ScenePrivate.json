[
  {
    "label": "AWorldSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldSettings"
  },
  {
    "label": "FMaterialParameterCollectionInstanceResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialParameterCollectionInstanceResource"
  },
  {
    "label": "FPrecomputedLightVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrecomputedLightVolume"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "UDecalComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDecalComponent"
  },
  {
    "label": "UExponentialHeightFogComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExponentialHeightFogComponent"
  },
  {
    "label": "ULightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULightComponent"
  },
  {
    "label": "UPlanarReflectionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlanarReflectionComponent"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UInstancedStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInstancedStaticMeshComponent"
  },
  {
    "label": "UReflectionCaptureComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UReflectionCaptureComponent"
  },
  {
    "label": "USkyLightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkyLightComponent"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "UTextureCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCube"
  },
  {
    "label": "UWindDirectionalSourceComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWindDirectionalSourceComponent"
  },
  {
    "label": "FRHIGPUBufferReadback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIGPUBufferReadback"
  },
  {
    "label": "FRHIGPUTextureReadback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIGPUTextureReadback"
  },
  {
    "label": "FRuntimeVirtualTextureSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRuntimeVirtualTextureSceneProxy"
  },
  {
    "label": "FLumenSceneData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenSceneData"
  },
  {
    "label": "FVirtualShadowMapArrayCacheManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapArrayCacheManager"
  },
  {
    "label": "FDistanceFieldObjectBuffers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldObjectBuffers"
  },
  {
    "label": "FHairStrandsInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsInstance"
  },
  {
    "label": "FPathTracingState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPathTracingState"
  },
  {
    "label": "FSparseVolumeTextureViewerSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSparseVolumeTextureViewerSceneProxy"
  },
  {
    "label": "FExponentialHeightFogSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExponentialHeightFogSceneInfo"
  },
  {
    "label": "FStaticMeshBatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshBatch"
  },
  {
    "label": "FShadowScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShadowScene"
  },
  {
    "label": "FSceneCulling",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCulling"
  },
  {
    "label": "FPrimitiveOcclusionHistory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveOcclusionHistory"
  },
  {
    "label": "FPrimitiveOcclusionHistoryKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveOcclusionHistoryKey"
  },
  {
    "label": "FPrimitiveOcclusionHistoryKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveOcclusionHistoryKeyFuncs"
  },
  {
    "label": "FIndividualOcclusionHistory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIndividualOcclusionHistory"
  },
  {
    "label": "FGlobalDistanceCullFadeUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalDistanceCullFadeUniformBuffer"
  },
  {
    "label": "FGlobalDitherUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalDitherUniformBuffer"
  },
  {
    "label": "FPrimitiveFadingState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveFadingState"
  },
  {
    "label": "FGlobalDistanceFieldCacheTypeState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalDistanceFieldCacheTypeState"
  },
  {
    "label": "FGlobalDistanceFieldClipmapState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalDistanceFieldClipmapState"
  },
  {
    "label": "FDistanceFieldSceneData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldSceneData"
  },
  {
    "label": "FOcclusionRandomStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOcclusionRandomStream"
  },
  {
    "label": "FHLODVisibilityState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHLODVisibilityState"
  },
  {
    "label": "FHLODSceneNodeVisibilityState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHLODSceneNodeVisibilityState"
  },
  {
    "label": "FShaderPrintStateData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderPrintStateData"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "FPersistentSkyAtmosphereData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPersistentSkyAtmosphereData"
  },
  {
    "label": "FGlobalDistanceFieldStreamingReadback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGlobalDistanceFieldStreamingReadback"
  },
  {
    "label": "FPersistentGlobalDistanceFieldData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPersistentGlobalDistanceFieldData"
  },
  {
    "label": "FOcclusionFeedback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOcclusionFeedback"
  },
  {
    "label": "FOcclusionBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOcclusionBatch"
  },
  {
    "label": "FOcclusionBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOcclusionBuffer"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FSceneViewState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewState"
  },
  {
    "label": "FProjectedShadowKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProjectedShadowKey"
  },
  {
    "label": "FEyeAdaptationManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEyeAdaptationManager"
  },
  {
    "label": "itself",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "itself"
  },
  {
    "label": "itself",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "itself"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FOcclusion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOcclusion"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FReflectionEnvironmentCubemapArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReflectionEnvironmentCubemapArray"
  },
  {
    "label": "FCaptureComponentSceneState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCaptureComponentSceneState"
  },
  {
    "label": "FReflectionCaptureSortData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReflectionCaptureSortData"
  },
  {
    "label": "FReflectionCaptureCacheEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReflectionCaptureCacheEntry"
  },
  {
    "label": "FReflectionCaptureCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReflectionCaptureCache"
  },
  {
    "label": "FReflectionEnvironmentSceneData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReflectionEnvironmentSceneData"
  },
  {
    "label": "FHairStrandsSceneData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHairStrandsSceneData"
  },
  {
    "label": "FVolumetricLightmapInterpolation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVolumetricLightmapInterpolation"
  },
  {
    "label": "FVolumetricLightmapSceneData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVolumetricLightmapSceneData"
  },
  {
    "label": "FPrecomputedVolumetricLightmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrecomputedVolumetricLightmap"
  },
  {
    "label": "FPrecomputedVolumetricLightmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrecomputedVolumetricLightmap"
  },
  {
    "label": "FPrimitiveAndInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveAndInstance"
  },
  {
    "label": "FPrimitiveRemoveInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveRemoveInfo"
  },
  {
    "label": "FHeightFieldPrimitiveRemoveInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHeightFieldPrimitiveRemoveInfo"
  },
  {
    "label": "FDistanceFieldAssetMipId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldAssetMipId"
  },
  {
    "label": "FDistanceFieldAssetMipRelocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldAssetMipRelocation"
  },
  {
    "label": "FDistanceFieldAssetMipState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldAssetMipState"
  },
  {
    "label": "FDistanceFieldAssetState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldAssetState"
  },
  {
    "label": "TFDistanceFieldAssetStateFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TFDistanceFieldAssetStateFuncs"
  },
  {
    "label": "FDistanceFieldBlockAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldBlockAllocator"
  },
  {
    "label": "FDistanceFieldReadRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDistanceFieldReadRequest"
  },
  {
    "label": "FDistanceFieldAsyncUpdateParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDistanceFieldAsyncUpdateParameters"
  },
  {
    "label": "FDistanceFieldSceneData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldSceneData"
  },
  {
    "label": "FDistanceFieldStreamingUpdateTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldStreamingUpdateTask"
  },
  {
    "label": "FIndirectLightingCacheBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIndirectLightingCacheBlock"
  },
  {
    "label": "FBlockUpdateInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlockUpdateInfo"
  },
  {
    "label": "FAttachmentGroupSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAttachmentGroupSceneInfo"
  },
  {
    "label": "FILCUpdatePrimTaskData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FILCUpdatePrimTaskData"
  },
  {
    "label": "FIndirectLightingCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIndirectLightingCache"
  },
  {
    "label": "FUpdateCachePrimitivesTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUpdateCachePrimitivesTask"
  },
  {
    "label": "FPrimitiveBounds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveBounds"
  },
  {
    "label": "FPrimitiveVisibilityId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveVisibilityId"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FComponentVelocityData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentVelocityData"
  },
  {
    "label": "FSceneVelocityData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneVelocityData"
  },
  {
    "label": "FLODSceneTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLODSceneTree"
  },
  {
    "label": "FLODSceneNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLODSceneNode"
  },
  {
    "label": "FCachedShadowMapData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedShadowMapData"
  },
  {
    "label": "FPixelInspectorData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPixelInspectorData"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FPersistentUniformBuffers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersistentUniformBuffers"
  },
  {
    "label": "FMeshComputeDispatchCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshComputeDispatchCommand"
  },
  {
    "label": "FRayTracingDynamicGeometryConverterCS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingDynamicGeometryConverterCS"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLumenSceneDataKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLumenSceneDataKey"
  },
  {
    "label": "FLumenSceneDataIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenSceneDataIterator"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FUpdateLightTransformParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateLightTransformParameters"
  },
  {
    "label": "FUpdateLightColorParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateLightColorParameters"
  },
  {
    "label": "FLightSceneChangeSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightSceneChangeSet"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FFXSystemInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystemInterface"
  },
  {
    "label": "FPrimitiveUpdateParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveUpdateParams"
  },
  {
    "label": "FRayTracingCullingGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingCullingGroup"
  },
  {
    "label": "FPrimitiveSceneProxyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveSceneProxyType"
  },
  {
    "label": "FTypeOffsetTableEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypeOffsetTableEntry"
  },
  {
    "label": "FRealTimeSlicedReflectionCapture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRealTimeSlicedReflectionCapture"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPlanarReflectionSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlanarReflectionSceneProxy"
  },
  {
    "label": "UPlanarReflectionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlanarReflectionComponent"
  },
  {
    "label": "FPhysicsFieldSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsFieldSceneProxy"
  },
  {
    "label": "FWindSourceSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindSourceSceneProxy"
  },
  {
    "label": "FSpeedTreeWindComputation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpeedTreeWindComputation"
  },
  {
    "label": "FGPUSkinCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSkinCache"
  },
  {
    "label": "IComputeTaskWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IComputeTaskWorker"
  },
  {
    "label": "FRayTracingDynamicGeometryCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingDynamicGeometryCollection"
  },
  {
    "label": "FRayTracingSkinnedGeometryUpdateQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingSkinnedGeometryUpdateQueue"
  },
  {
    "label": "FUpdateParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateParameters"
  },
  {
    "label": "FReflectionCaptureData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReflectionCaptureData"
  },
  {
    "label": "UPlanarReflectionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlanarReflectionComponent"
  },
  {
    "label": "USceneCaptureComponent2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneCaptureComponent2D"
  },
  {
    "label": "USceneCaptureComponentCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneCaptureComponentCube"
  },
  {
    "label": "FPrecomputedLightVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrecomputedLightVolume"
  },
  {
    "label": "FPrecomputedLightVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrecomputedLightVolume"
  },
  {
    "label": "FPrecomputedVolumetricLightmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrecomputedVolumetricLightmap"
  },
  {
    "label": "FPrecomputedVolumetricLightmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrecomputedVolumetricLightmap"
  },
  {
    "label": "URuntimeVirtualTextureComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeVirtualTextureComponent"
  },
  {
    "label": "URuntimeVirtualTextureComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeVirtualTextureComponent"
  },
  {
    "label": "URuntimeVirtualTextureComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeVirtualTextureComponent"
  },
  {
    "label": "FLocalFogVolumeSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalFogVolumeSceneProxy"
  },
  {
    "label": "FLocalFogVolumeSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalFogVolumeSceneProxy"
  },
  {
    "label": "FPhysicsFieldSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsFieldSceneProxy"
  },
  {
    "label": "FPlanarReflectionSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlanarReflectionSceneProxy"
  },
  {
    "label": "FPlanarReflectionSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlanarReflectionSceneProxy"
  },
  {
    "label": "FGPUSkinCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSkinCache"
  },
  {
    "label": "IComputeTaskWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IComputeTaskWorker"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FFXSystemInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystemInterface"
  },
  {
    "label": "FFXSystemInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystemInterface"
  },
  {
    "label": "FInstanceCullingOcclusionQueryRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceCullingOcclusionQueryRenderer"
  },
  {
    "label": "FSceneComputeUpdates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneComputeUpdates"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FUpdateLightTransformParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateLightTransformParameters"
  },
  {
    "label": "FLevelCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelCommand"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSceneViewState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewState"
  },
  {
    "label": "FPrimitiveOcclusionHistoryKey()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FPrimitiveOcclusionHistoryKey(Element)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key)"
  },
  {
    "label": "RandomStream()",
    "kind": "Method",
    "detail": "Function (FRandomStream)",
    "insertText": "RandomStream(0x83246)"
  },
  {
    "label": "InitialiseOrNextFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitialiseOrNextFrame(ERHIFeatureLevel::Type FeatureLevel, FPooledRenderTargetDesc& AerialPerspectiveDesc, FRHICommandListImmediate& RHICmdList, bool bSeparatedAtmosphereMieRayLeigh)"
  },
  {
    "label": "GetCurrentCameraAerialPerspectiveVolume()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<IPooledRenderTarget>)",
    "insertText": "GetCurrentCameraAerialPerspectiveVolume()"
  },
  {
    "label": "GetCurrentCameraAerialPerspectiveVolumeMieOnly()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<IPooledRenderTarget>)",
    "insertText": "GetCurrentCameraAerialPerspectiveVolumeMieOnly()"
  },
  {
    "label": "GetCurrentCameraAerialPerspectiveVolumeRayOnly()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<IPooledRenderTarget>)",
    "insertText": "GetCurrentCameraAerialPerspectiveVolumeRayOnly()"
  },
  {
    "label": "FOcclusionFeedback()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FOcclusionFeedback()"
  },
  {
    "label": "AddPrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPrimitive(const FPrimitiveOcclusionHistoryKey& PrimitiveKey, const FVector& BoundsOrigin, const FVector& BoundsBoxExtent, FGlobalDynamicVertexBuffer& DynamicVertexBuffer)"
  },
  {
    "label": "BeginOcclusionScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginOcclusionScope(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "EndOcclusionScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndOcclusionScope(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "SubmitOcclusionDraws()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitOcclusionDraws(FRHICommandList& RHICmdList, FViewInfo& View)"
  },
  {
    "label": "ReadbackResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadbackResults(FRHICommandList& RHICmdList)"
  },
  {
    "label": "AdvanceFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceFrame(uint32 OcclusionFrameCounter)"
  },
  {
    "label": "FEyeAdaptationManager()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FEyeAdaptationManager()"
  },
  {
    "label": "SafeRelease()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SafeRelease()"
  },
  {
    "label": "GetTexture()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTexture(CurrentBufferIndex)"
  },
  {
    "label": "GetOrCreateTexture()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetOrCreateTexture(GraphBuilder, CurrentBufferIndex)"
  },
  {
    "label": "GetBuffer()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetBuffer(CurrentBufferIndex)"
  },
  {
    "label": "GetOrCreateBuffer()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetOrCreateBuffer(GraphBuilder, CurrentBufferIndex)"
  },
  {
    "label": "SwapBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapBuffers()"
  },
  {
    "label": "UpdateLastExposureFromBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLastExposureFromBuffer()"
  },
  {
    "label": "EnqueueExposureBufferReadback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueExposureBufferReadback(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "PathTracingInvalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PathTracingInvalidate(bool InvalidateAnimationStates = true)"
  },
  {
    "label": "TrimHistoryRenderTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimHistoryRenderTargets(const FScene* InScene)"
  },
  {
    "label": "UpdateMotionBlurTimeScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMotionBlurTimeScale(const FViewInfo& View)"
  },
  {
    "label": "TrimOcclusionHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimOcclusionHistory(float CurrentTime, float MinHistoryTime, float MinQueryTime, int32 FrameNumber)"
  },
  {
    "label": "UpdateMaxCubemaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaxCubemaps(uint32 InMaxCubemaps, int32 CubemapSize)"
  },
  {
    "label": "ResizeCubemapArrayGPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeCubemapArrayGPU(uint32 InMaxCubemaps, int32 CubemapSize, const TArray<int32>& IndexRemapping)"
  },
  {
    "label": "IsValidRef()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsValidRef(ReflectionEnvs)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ReleaseCubeArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseCubeArray()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Remove(const UReflectionCaptureComponent* Component)"
  },
  {
    "label": "Prune()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Prune(const TSet<FGuid> KeysToKeep, TArray<int32>& ReleasedIndices)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "RemapRegisteredComponentMapBuildDataId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemapRegisteredComponentMapBuildDataId(const UReflectionCaptureComponent* Component)"
  },
  {
    "label": "RegisterComponentMapBuildDataId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterComponentMapBuildDataId(const UReflectionCaptureComponent* Component)"
  },
  {
    "label": "UnregisterComponentMapBuildDataId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterComponentMapBuildDataId(const UReflectionCaptureComponent* Component)"
  },
  {
    "label": "SetGameThreadTrackingData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGameThreadTrackingData(int32 MaxAllocatedCubemaps, int32 CaptureSize, int32 DesiredCaptureSize)"
  },
  {
    "label": "ResizeCubemapArrayGPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeCubemapArrayGPU(uint32 InMaxCubemaps, int32 InCubemapSize)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(FScene* Scene)"
  },
  {
    "label": "AddLevelVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLevelVolume(const class FPrecomputedVolumetricLightmap* InVolume, EShadingPath ShadingPath, bool bIsPersistentLevel)"
  },
  {
    "label": "RemoveLevelVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLevelVolume(const class FPrecomputedVolumetricLightmap* InVolume)"
  },
  {
    "label": "PointerHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PointerHash(Key)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Allocate(int32 NumBlocks, TArray<int32, TInlineAllocator<4>>& OutBlocks)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(const TArray<int32, TInlineAllocator<4>>& ElementRange)"
  },
  {
    "label": "FDistanceFieldSceneData()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FDistanceFieldSceneData(FDistanceFieldSceneData&&)"
  },
  {
    "label": "AddPrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPrimitive(FPrimitiveSceneInfo* InPrimitive)"
  },
  {
    "label": "UpdatePrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrimitive(FPrimitiveSceneInfo* InPrimitive)"
  },
  {
    "label": "RemovePrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePrimitive(FPrimitiveSceneInfo* InPrimitive)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "VerifyIntegrity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyIntegrity()"
  },
  {
    "label": "UpdateDistanceFieldObjectBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDistanceFieldObjectBuffers(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFRDGExternalAccessQueue& ExternalAccessQueue,\n\t\tFScene* Scene,\n\t\tTArray<FDistanceFieldAssetMipId>& DistanceFieldAssetAdds,\n\t\tTArray<FSetElementId>& DistanceFieldAssetRemoves)"
  },
  {
    "label": "UpdateDistanceFieldAtlas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDistanceFieldAtlas(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFRDGExternalAccessQueue& ExternalAccessQueue,\n\t\tconst FViewInfo& View,\n\t\tFScene* Scene,\n\t\tbool bLumenEnabled,\n\t\tFGlobalShaderMap* GlobalShaderMap,\n\t\tTArray<FDistanceFieldAssetMipId>& DistanceFieldAssetAdds,\n\t\tTArray<FSetElementId>& DistanceFieldAssetRemoves)"
  },
  {
    "label": "ProcessStreamingRequestsFromGPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessStreamingRequestsFromGPU(\n\t\tTArray<FDistanceFieldReadRequest>& NewReadRequests,\n\t\tTArray<FDistanceFieldAssetMipId>& AssetDataUploads)"
  },
  {
    "label": "ProcessReadRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessReadRequests(\n\t\tTArray<FDistanceFieldAssetMipId>& AssetDataUploads,\n\t\tTArray<FDistanceFieldAssetMipId>& DistanceFieldAssetMipAdds,\n\t\tTArray<FDistanceFieldReadRequest>& ReadRequestsToUpload,\n\t\tTArray<FDistanceFieldReadRequest>& ReadRequestsToCleanUp)"
  },
  {
    "label": "ResizeIndirectionAtlasIfNeeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResizeIndirectionAtlasIfNeeded(FRDGBuilder& GraphBuilder, FGlobalShaderMap* GlobalShaderMap, FRDGTexture*& OutTexture)"
  },
  {
    "label": "DefragmentIndirectionAtlas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefragmentIndirectionAtlas(FIntVector MinSize, TArray<FDistanceFieldAssetMipRelocation>& Relocations)"
  },
  {
    "label": "UploadAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UploadAssetData(FRDGBuilder& GraphBuilder, const TArray<FDistanceFieldAssetMipId>& AssetDataUploads, FRDGBuffer* AssetDataBufferRDG)"
  },
  {
    "label": "UploadAllAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UploadAllAssetData(FRDGBuilder& GraphBuilder, FRDGBuffer* AssetDataBufferRDG)"
  },
  {
    "label": "AsyncUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncUpdate(FRHICommandListBase& RHICmdList, FDistanceFieldAsyncUpdateParameters& UpdateParameters)"
  },
  {
    "label": "GenerateStreamingRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateStreamingRequests(\n\t\tFRDGBuilder& GraphBuilder, \n\t\tconst FViewInfo& View,\n\t\tFScene* Scene,\n\t\tbool bLumenEnabled,\n\t\tFGlobalShaderMap* GlobalShaderMap)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "ReleasePrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleasePrimitive(FPrimitiveComponentId PrimitiveId)"
  },
  {
    "label": "UpdateCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCache(FScene* Scene, FSceneRenderer& Renderer, bool bAllowUnbuiltPreview)"
  },
  {
    "label": "StartUpdateCachePrimitivesTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartUpdateCachePrimitivesTask(FScene* Scene, FSceneRenderer& Renderer, bool bAllowUnbuiltPreview, FILCUpdatePrimTaskData& OutTaskData)"
  },
  {
    "label": "FinalizeCacheUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeCacheUpdates(FScene* Scene, FSceneRenderer& Renderer, FILCUpdatePrimTaskData& TaskData)"
  },
  {
    "label": "SetLightingCacheDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightingCacheDirty(FScene* Scene, const FPrecomputedLightVolume* Volume)"
  },
  {
    "label": "ProcessPrimitiveUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPrimitiveUpdate(FScene* Scene, FViewInfo& View, int32 PrimitiveIndex, bool bAllowUnbuiltPreview, bool bAllowVolumeSample, TMap<FIntVector, FBlockUpdateInfo>& OutBlocksToUpdate, TArray<FIndirectLightingCacheAllocation*>& OutTransitionsOverTimeToUpdate, TArray<FPrimitiveSceneInfo*>& OutPrimitivesToUpdateStaticMeshes)"
  },
  {
    "label": "UpdateCachePrimitivesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachePrimitivesInternal(FScene* Scene, FSceneRenderer& Renderer, bool bAllowUnbuiltPreview, TMap<FIntVector, FBlockUpdateInfo>& OutBlocksToUpdate, TArray<FIndirectLightingCacheAllocation*>& OutTransitionsOverTimeToUpdate, TArray<FPrimitiveSceneInfo*>& OutPrimitivesToUpdateStaticMeshes)"
  },
  {
    "label": "FinalizeUpdateInternal_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeUpdateInternal_RenderThread(FScene* Scene, FSceneRenderer& Renderer, TMap<FIntVector, FBlockUpdateInfo>& BlocksToUpdate, const TArray<FIndirectLightingCacheAllocation*>& TransitionsOverTimeToUpdate, TArray<FPrimitiveSceneInfo*>& PrimitivesToUpdateStaticMeshes)"
  },
  {
    "label": "UpdateCacheAllocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateCacheAllocation(\n\t\tconst FBoxSphereBounds& Bounds, \n\t\tint32 BlockSize,\n\t\tbool bPointSample,\n\t\tbool bUnbuiltPreview,\n\t\tFIndirectLightingCacheAllocation*& Allocation, \n\t\tTMap<FIntVector, FBlockUpdateInfo>& BlocksToUpdate,\n\t\tTArray<FIndirectLightingCacheAllocation*>& TransitionsOverTimeToUpdate)"
  },
  {
    "label": "UpdateCachePrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachePrimitive(\n\t\tconst TMap<FPrimitiveComponentId, FAttachmentGroupSceneInfo>& AttachmentGroups,\n\t\tFPrimitiveSceneInfo* PrimitiveSceneInfo,\n\t\tbool bAllowUnbuiltPreview, \n\t\tbool bAllowVolumeSample, \n\t\tTMap<FIntVector, FBlockUpdateInfo>& BlocksToUpdate, \n\t\tTArray<FIndirectLightingCacheAllocation*>& TransitionsOverTimeToUpdate,\n\t\tTArray<FPrimitiveSceneInfo*>& PrimitivesToUpdateStaticMeshes)"
  },
  {
    "label": "UpdateBlocks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBlocks(FScene* Scene, FViewInfo* DebugDrawingView, TMap<FIntVector, FBlockUpdateInfo>& BlocksToUpdate)"
  },
  {
    "label": "DeallocateBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeallocateBlock(FIntVector Min, int32 Size)"
  },
  {
    "label": "AllocateBlock()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateBlock(int32 Size, FIntVector& OutMin)"
  },
  {
    "label": "UpdateBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBlock(FScene* Scene, FViewInfo* DebugDrawingView, FBlockUpdateInfo& Block)"
  },
  {
    "label": "InterpolatePoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InterpolatePoint(\n\t\tFScene* Scene, \n\t\tconst FIndirectLightingCacheBlock& Block,\n\t\tfloat& OutDirectionalShadowing, \n\t\tFSHVectorRGB3& OutIncidentRadiance,\n\t\tFVector& OutSkyBentNormal)"
  },
  {
    "label": "InterpolateBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InterpolateBlock(\n\t\tFScene* Scene, \n\t\tconst FIndirectLightingCacheBlock& Block, \n\t\tTArray<float>& AccumulatedWeight, \n\t\tTArray<FSHVectorRGB2>& AccumulatedIncidentRadiance)"
  },
  {
    "label": "EncodeBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeBlock(\n\t\tFViewInfo* DebugDrawingView,\n\t\tconst FIndirectLightingCacheBlock& Block, \n\t\tconst TArray<float>& AccumulatedWeight, \n\t\tconst TArray<FSHVectorRGB2>& AccumulatedIncidentRadiance,\n\t\tTArray<FFloat16Color>& Texture0Data,\n\t\tTArray<FFloat16Color>& Texture1Data,\n\t\tTArray<FFloat16Color>& Texture2Data\t\t\n\t)"
  },
  {
    "label": "StartFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartFrame(FScene* Scene)"
  },
  {
    "label": "It()",
    "kind": "Method",
    "detail": "Function (FComponentVelocityData>::TIterator)",
    "insertText": "It(ComponentData)"
  },
  {
    "label": "AddChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildNode(FPrimitiveComponentId ParentId, FPrimitiveSceneInfo* ChildSceneInfo)"
  },
  {
    "label": "RemoveChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildNode(FPrimitiveComponentId ParentId, FPrimitiveSceneInfo* ChildSceneInfo)"
  },
  {
    "label": "UpdateNodeSceneInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNodeSceneInfo(FPrimitiveComponentId NodeId, FPrimitiveSceneInfo* SceneInfo)"
  },
  {
    "label": "UpdateVisibilityStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisibilityStates(FViewInfo& View, UE::Tasks::FTaskEvent& FlushCachedShadowsTaskEvent)"
  },
  {
    "label": "ClearVisibilityState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearVisibilityState(FViewInfo& View)"
  },
  {
    "label": "ApplyNodeFadingToChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyNodeFadingToChildren(FSceneViewState* ViewState, FLODSceneNode& Node, FHLODSceneNodeVisibilityState& NodeVisibility, const bool bIsFading, const bool bIsFadingOut)"
  },
  {
    "label": "HideNodeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideNodeChildren(FSceneViewState* ViewState, FLODSceneNode& Node)"
  },
  {
    "label": "FPixelInspectorData()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPixelInspectorData()"
  },
  {
    "label": "InitializeBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeBuffers(FRenderTarget* BufferFinalColor, FRenderTarget* BufferSceneColor, FRenderTarget* BufferDepth, FRenderTarget* BufferHDR, FRenderTarget* BufferA, FRenderTarget* BufferBCDEF, int32 bufferIndex)"
  },
  {
    "label": "AddPixelInspectorRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddPixelInspectorRequest(FPixelInspectorRequest *PixelInspectorRequest)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "FLumenSceneDataIterator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FLumenSceneDataIterator(const FScene* InScene)"
  },
  {
    "label": "RefreshRayTracingMeshCommandCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshRayTracingMeshCommandCache()"
  },
  {
    "label": "RefreshRayTracingInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshRayTracingInstances()"
  },
  {
    "label": "UpdateRayTracedLights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRayTracedLights(const FSceneViewFamily& ViewFamily)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(FRDGBuilder& GraphBuilder, const FUpdateParameters& Parameters)"
  },
  {
    "label": "ProcessAndRenderIlluminanceMeter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAndRenderIlluminanceMeter(FRDGBuilder& GraphBuilder, TArrayView<FViewInfo> Views, FRDGTextureRef SceneColorTexture)"
  },
  {
    "label": "ResetAtmosphereLightsProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAtmosphereLightsProperties()"
  },
  {
    "label": "GetDefaultBasePassDepthStencilAccess()",
    "kind": "Method",
    "detail": "Function (FExclusiveDepthStencil::Type)",
    "insertText": "GetDefaultBasePassDepthStencilAccess(ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "GetEarlyZPassMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetEarlyZPassMode(ERHIFeatureLevel::Type InFeatureLevel, EDepthDrawingMode& OutZPassMode, bool& bOutEarlyZPassMovable)"
  },
  {
    "label": "GetRuntimeVirtualTextureSceneIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetRuntimeVirtualTextureSceneIndex(uint32 ProducerId)"
  },
  {
    "label": "FlushDirtyRuntimeVirtualTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushDirtyRuntimeVirtualTextures()"
  },
  {
    "label": "DumpMeshDrawCommandMemoryStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMeshDrawCommandMemoryStats()"
  },
  {
    "label": "FLumenSceneDataIterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FLumenSceneDataIterator(this)"
  },
  {
    "label": "LumenAddPrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LumenAddPrimitive(FPrimitiveSceneInfo* InPrimitive)"
  },
  {
    "label": "LumenUpdatePrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LumenUpdatePrimitive(FPrimitiveSceneInfo* InPrimitive)"
  },
  {
    "label": "LumenInvalidateSurfaceCacheForPrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LumenInvalidateSurfaceCacheForPrimitive(FPrimitiveSceneInfo* InPrimitive)"
  },
  {
    "label": "LumenRemovePrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LumenRemovePrimitive(FPrimitiveSceneInfo* InPrimitive, int32 PrimitiveIndex)"
  },
  {
    "label": "DebugRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugRender(TArrayView<FViewInfo> Views)"
  },
  {
    "label": "AddCustomRenderPass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddCustomRenderPass(const FSceneViewFamily* ViewFamily, const FCustomRenderPassRendererInput& CustomRenderPassInput)"
  },
  {
    "label": "UpdatePrimitiveInstancesFromCompute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrimitiveInstancesFromCompute(FPrimitiveSceneInfo* PrimitiveSceneInfo, FGPUSceneWriteDelegate&& DataWriterGPU)"
  },
  {
    "label": "BatchAddPrimitivesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchAddPrimitivesInternal(TArrayView<T*> InPrimitives)"
  },
  {
    "label": "BatchRemovePrimitivesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchRemovePrimitivesInternal(TArrayView<T*> InPrimitives)"
  },
  {
    "label": "BatchReleasePrimitivesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchReleasePrimitivesInternal(TArrayView<T*> InPrimitives)"
  },
  {
    "label": "UpdatePrimitiveTransformInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrimitiveTransformInternal(T* Primitive)"
  },
  {
    "label": "RemoveViewLumenSceneData_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveViewLumenSceneData_RenderThread(FSceneViewStateInterface* ViewState)"
  },
  {
    "label": "RemoveViewState_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveViewState_RenderThread(FSceneViewStateInterface*)"
  },
  {
    "label": "CheckPrimitiveArrays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckPrimitiveArrays(int MaxTypeOffsetIndex = -1)"
  },
  {
    "label": "AddPrimitiveSceneInfo_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPrimitiveSceneInfo_RenderThread(FPrimitiveSceneInfo* PrimitiveSceneInfo, const TOptional<FTransform>& PreviousTransform)"
  },
  {
    "label": "RemovePrimitiveSceneInfo_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePrimitiveSceneInfo_RenderThread(FPrimitiveSceneInfo* PrimitiveSceneInfo)"
  },
  {
    "label": "UpdatePrimitiveTransform_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrimitiveTransform_RenderThread(FPrimitiveSceneProxy* PrimitiveSceneProxy, const FBoxSphereBounds& WorldBounds, const FBoxSphereBounds& LocalBounds, const FMatrix& LocalToWorld, const FVector& OwnerPosition, const TOptional<FTransform>& PreviousTransform)"
  },
  {
    "label": "UpdatePrimitiveOcclusionBoundsSlack_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrimitiveOcclusionBoundsSlack_RenderThread(const FPrimitiveSceneProxy* PrimitiveSceneProxy, float NewSlack)"
  },
  {
    "label": "UpdateCustomPrimitiveData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCustomPrimitiveData(FPrimitiveSceneProxy* SceneProxy, const FCustomPrimitiveData& CustomPrimitiveData)"
  },
  {
    "label": "UpdatePrimitiveLightingAttachmentRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrimitiveLightingAttachmentRoot(UPrimitiveComponent* Primitive)"
  },
  {
    "label": "AssignAvailableShadowMapChannelForLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignAvailableShadowMapChannelForLight(FLightSceneInfo* LightSceneInfo)"
  },
  {
    "label": "AddLightSceneInfo_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLightSceneInfo_RenderThread(FLightSceneInfo* LightSceneInfo)"
  },
  {
    "label": "AddOrRemoveDecal_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrRemoveDecal_RenderThread(FDeferredDecalProxy* Component, bool bAdd)"
  },
  {
    "label": "RemoveLightSceneInfo_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLightSceneInfo_RenderThread(FLightSceneInfo* LightSceneInfo)"
  },
  {
    "label": "UpdateLightTransform_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLightTransform_RenderThread(int32 LightId, FLightSceneInfo* LightSceneInfo, const struct FUpdateLightTransformParameters& Parameters)"
  },
  {
    "label": "CaptureOrUploadReflectionCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureOrUploadReflectionCapture(UReflectionCaptureComponent* CaptureComponent, int32 ReflectionCaptureSize, bool bVerifyOnlyCapturing, bool bCapturingForMobile, bool bInsideTick)"
  },
  {
    "label": "UpdateAllReflectionCaptures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllReflectionCaptures(const TCHAR* CaptureReason, int32 ReflectionCaptureSize, bool bVerifyOnlyCapturing, bool bCapturingForMobile, bool bInsideTick)"
  },
  {
    "label": "UpdateStaticDrawLists_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStaticDrawLists_RenderThread(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "AddRuntimeVirtualTexture_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRuntimeVirtualTexture_RenderThread(FRuntimeVirtualTextureSceneProxy* SceneProxy)"
  },
  {
    "label": "UpdateRuntimeVirtualTexture_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRuntimeVirtualTexture_RenderThread(FRuntimeVirtualTextureSceneProxy* SceneProxy, FRuntimeVirtualTextureSceneProxy* SceneProxyToReplace)"
  },
  {
    "label": "RemoveRuntimeVirtualTexture_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRuntimeVirtualTexture_RenderThread(FRuntimeVirtualTextureSceneProxy* SceneProxy)"
  },
  {
    "label": "UpdateRuntimeVirtualTextureForAllPrimitives_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRuntimeVirtualTextureForAllPrimitives_RenderThread()"
  },
  {
    "label": "ApplyWorldOffset_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyWorldOffset_RenderThread(FRHICommandListBase& RHICmdList, const FVector& InOffset)"
  },
  {
    "label": "ProcessAtmosphereLightRemoval_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAtmosphereLightRemoval_RenderThread(FLightSceneInfo* LightSceneInfo)"
  },
  {
    "label": "ProcessAtmosphereLightAddition_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAtmosphereLightAddition_RenderThread(FLightSceneInfo* LightSceneInfo)"
  },
  {
    "label": "UpdateAllLightSceneInfos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllLightSceneInfos(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "UpdatePrimitiveInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrimitiveInternal(FPrimitiveSceneProxy* SceneProxy, UpdatePayloadType &&InUpdatePayload)"
  },
  {
    "label": "UpdateLightInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLightInternal(FLightSceneProxy* LightSceneProxy, UpdatePayloadType &&InUpdatePayload)"
  },
  {
    "label": "UpdateCachedShadowState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedShadowState(const FScenePreUpdateChangeSet &ScenePreUpdateChangeSet, const FScenePostUpdateChangeSet &ScenePostUpdateChangeSet)"
  },
  {
    "label": "UpdateRayTracingGroupBounds_AddPrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRayTracingGroupBounds_AddPrimitives(const TArray<FPrimitiveSceneInfo*, SceneRenderingAllocator>& PrimitiveSceneInfos)"
  },
  {
    "label": "UpdateRayTracingGroupBounds_RemovePrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRayTracingGroupBounds_RemovePrimitives(const TArray<FPrimitiveSceneInfo*, SceneRenderingAllocator>& PrimitiveSceneInfos)"
  },
  {
    "label": "UpdateRayTracingGroupBounds_UpdatePrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRayTracingGroupBounds_UpdatePrimitives(const RangeType& UpdatedTransforms)"
  },
  {
    "label": "UpdatePrimitiveInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrimitiveInstances(FUpdateInstanceCommand& UpdateParams)"
  }
]