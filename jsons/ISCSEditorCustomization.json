[
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "ISCSEditorCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISCSEditorCustomization"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "HHitProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HHitProxy"
  },
  {
    "label": "ISCSEditorCustomization()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" InputCoreTypes . h \" # include \" EditorViewportClient . h \" class USceneComponent ; class ISCSEditorCustomization { public : ~)",
    "insertText": "ISCSEditorCustomization()"
  },
  {
    "label": "HandleViewportClick()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HandleViewportClick(const TSharedRef<FEditorViewportClient>& InViewportClient, class FSceneView& InView, class HHitProxy* InHitProxy, FKey InKey, EInputEvent InEvent, uint32 InHitX, uint32 InHitY)"
  },
  {
    "label": "HandleViewportDrag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleViewportDrag(const USceneComponent* InSceneComponent, class USceneComponent* InComponentTemplate, const FVector& InDeltaTranslation, const FRotator& InDeltaRotation, const FVector& InDeltaScale, const FVector& InPivot)"
  },
  {
    "label": "HandleGetWidgetLocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleGetWidgetLocation(const USceneComponent* InSceneComponent, FVector& OutWidgetLocation)"
  },
  {
    "label": "HandleGetWidgetTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleGetWidgetTransform(const USceneComponent* InSceneComponent, FMatrix& OutWidgetTransform)"
  }
]