[
  {
    "label": "FPhysInterface_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysInterface_Chaos"
  },
  {
    "label": "FChaosSolverConfiguration",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosSolverConfiguration"
  },
  {
    "label": "FSkeletalMeshPhysicsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshPhysicsProxy"
  },
  {
    "label": "FStaticMeshPhysicsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshPhysicsProxy"
  },
  {
    "label": "FPerSolverFieldSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerSolverFieldSystem"
  },
  {
    "label": "FPersistentPhysicsTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersistentPhysicsTask"
  },
  {
    "label": "FChaosArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosArchive"
  },
  {
    "label": "FCharacterGroundConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCharacterGroundConstraint"
  },
  {
    "label": "FCharacterGroundConstraintProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCharacterGroundConstraintProxy"
  },
  {
    "label": "FSingleParticleProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSingleParticleProxy"
  },
  {
    "label": "FGeometryParticleBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryParticleBuffer"
  },
  {
    "label": "FClusterUnionPhysicsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClusterUnionPhysicsProxy"
  },
  {
    "label": "ISpatialAccelerationCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISpatialAccelerationCollection"
  },
  {
    "label": "FAccelerationStructureHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAccelerationStructureHandle"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TSolverSimMaterialScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TSolverSimMaterialScope"
  },
  {
    "label": "FPBDRigidsSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsSolver"
  },
  {
    "label": "FPersistentPhysicsTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersistentPhysicsTask"
  },
  {
    "label": "FDispatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDispatcher"
  },
  {
    "label": "FEventDefaults",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventDefaults"
  },
  {
    "label": "FPhysInterface_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysInterface_Chaos"
  },
  {
    "label": "FPhysScene_ChaosInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysScene_ChaosInterface"
  },
  {
    "label": "FPBDRigidDirtyParticlesBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidDirtyParticlesBuffer"
  },
  {
    "label": "FPendingDestroyInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingDestroyInfo"
  },
  {
    "label": "TSolverSimMaterialScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TSolverSimMaterialScope"
  },
  {
    "label": "TSolverSimMaterialScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TSolverSimMaterialScope"
  },
  {
    "label": "AdvanceSolverNoPushHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceSolverNoPushHelper(TSolver* Solver, Chaos::FReal Dt)"
  },
  {
    "label": "FPBDRigidsSolver()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDRigidsSolver(const EMultiBufferMode BufferingModeIn, UObject* InOwner, FReal AsyncDt)"
  },
  {
    "label": "ChangeBufferMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeBufferMode(Chaos::EMultiBufferMode InBufferMode)"
  },
  {
    "label": "RegisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObject(FSingleParticlePhysicsProxy* Proxy)"
  },
  {
    "label": "UnregisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObject(FSingleParticlePhysicsProxy* Proxy)"
  },
  {
    "label": "RegisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObject(FGeometryCollectionPhysicsProxy* InProxy)"
  },
  {
    "label": "UnregisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObject(FGeometryCollectionPhysicsProxy* InProxy)"
  },
  {
    "label": "RegisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObject(FClusterUnionPhysicsProxy* Proxy)"
  },
  {
    "label": "UnregisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObject(FClusterUnionPhysicsProxy* Proxy)"
  },
  {
    "label": "RegisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObject(Chaos::FJointConstraint* GTConstraint)"
  },
  {
    "label": "UnregisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObject(Chaos::FJointConstraint* GTConstraint)"
  },
  {
    "label": "RegisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObject(Chaos::FSuspensionConstraint* GTConstraint)"
  },
  {
    "label": "UnregisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObject(Chaos::FSuspensionConstraint* GTConstraint)"
  },
  {
    "label": "RegisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObject(Chaos::FCharacterGroundConstraint* GTConstraint)"
  },
  {
    "label": "UnregisterObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObject(Chaos::FCharacterGroundConstraint* GTConstraint)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "StartingSceneSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartingSceneSimulation()"
  },
  {
    "label": "CompleteSceneSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteSceneSimulation()"
  },
  {
    "label": "UpdateGameThreadStructures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGameThreadStructures()"
  },
  {
    "label": "SetVelocityBoundsExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVelocityBoundsExpansion(const FReal BoundsVelocityMultiplier, const FReal MaxBoundsVelocityExpansion)"
  },
  {
    "label": "SetVelocityBoundsExpansionMACD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVelocityBoundsExpansionMACD(const FReal BoundsVelocityMultiplier, const FReal MaxBoundsVelocityExpansion)"
  },
  {
    "label": "SetIsDeterministic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsDeterministic(const bool bInIsDeterministic)"
  },
  {
    "label": "SetSuspensionTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSuspensionTarget(Chaos::FSuspensionConstraint* GTConstraint, const FVector& TargetPos, const FVector& Normal, bool Enabled)"
  },
  {
    "label": "EnableRewindCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableRewindCapture(int32 NumFrames, bool InUseCollisionResimCache, TUniquePtr<IRewindCallback>&& RewindCallback)"
  },
  {
    "label": "EnableRewindCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableRewindCapture(int32 NumFrames, bool InUseCollisionResimCache)"
  },
  {
    "label": "EnableRewindCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableRewindCapture(int32 NumFrames)"
  },
  {
    "label": "EnableRewindCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableRewindCapture()"
  },
  {
    "label": "SyncEvents_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncEvents_GameThread()"
  },
  {
    "label": "UpdateMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterial(Chaos::FMaterialHandle InHandle, const Chaos::FChaosPhysicsMaterial& InNewData)"
  },
  {
    "label": "CreateMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateMaterial(Chaos::FMaterialHandle InHandle, const Chaos::FChaosPhysicsMaterial& InNewData)"
  },
  {
    "label": "DestroyMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyMaterial(Chaos::FMaterialHandle InHandle)"
  },
  {
    "label": "UpdateMaterialMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterialMask(Chaos::FMaterialMaskHandle InHandle, const Chaos::FChaosPhysicsMaterialMask& InNewData)"
  },
  {
    "label": "CreateMaterialMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateMaterialMask(Chaos::FMaterialMaskHandle InHandle, const Chaos::FChaosPhysicsMaterialMask& InNewData)"
  },
  {
    "label": "DestroyMaterialMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyMaterialMask(Chaos::FMaterialMaskHandle InHandle)"
  },
  {
    "label": "SyncQueryMaterials_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncQueryMaterials_External()"
  },
  {
    "label": "GetUseCollisionResimCache()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetUseCollisionResimCache()"
  },
  {
    "label": "FinalizeRewindData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeRewindData(const TParticleView<FPBDRigidParticles>& DirtyParticles)"
  },
  {
    "label": "UpdateExternalAccelerationStructure_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateExternalAccelerationStructure_External(ISpatialAccelerationCollection<FAccelerationStructureHandle,FReal,3>*& ExternalStructure)"
  },
  {
    "label": "ApplyConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyConfig(const FChaosSolverConfiguration& InConfig)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "FieldParameterUpdateCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldParameterUpdateCallback(\n\t\t\tChaos::FPBDPositionConstraints& PositionTarget,\n\t\t\tTMap<int32, int32>& TargetedParticles)"
  },
  {
    "label": "FieldForcesUpdateCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldForcesUpdateCallback()"
  },
  {
    "label": "ResetStatCounters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetStatCounters()"
  },
  {
    "label": "SetParticleDynamicMisc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParticleDynamicMisc(FPBDRigidParticleHandle* Rigid, const FParticleDynamicMisc& DynamicMisc)"
  },
  {
    "label": "BufferPhysicsResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferPhysicsResults()"
  },
  {
    "label": "ApplyCVars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyCVars()"
  },
  {
    "label": "UpdateIsDeterministic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateIsDeterministic()"
  },
  {
    "label": "ProcessSinglePushedData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessSinglePushedData_Internal(FPushPhysicsData& PushData)"
  },
  {
    "label": "DestroyPendingProxies_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPendingProxies_Internal()"
  },
  {
    "label": "SetIsResimming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsResimming(bool bIsResimming)"
  }
]