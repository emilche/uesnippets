[
  {
    "label": "FGameplayDebuggerCategory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerCategory"
  },
  {
    "label": "UAIPerceptionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIPerceptionComponent"
  },
  {
    "label": "UAISenseConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISenseConfig"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / Object . h \" # include \" Templates / SubclassOf . h \" # include \" Perception / AIPerceptionTypes . h \" # include \" Perception / AISense . h \" # include \" AISenseConfig . generated . h \" class FGameplayDebuggerCategory ; class UAIPerceptionComponent ;)",
    "insertText": "UCLASS(ClassGroup = AI, abstract, EditInlineNew, config=Game, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = Sense, AdvancedDisplay)"
  },
  {
    "label": "UAISenseConfig()",
    "kind": "Method",
    "detail": "Function (FString CachedSenseName ; public :)",
    "insertText": "UAISenseConfig(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GetSenseImplementation()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<UAISense>)",
    "insertText": "GetSenseImplementation()"
  },
  {
    "label": "GetSenseID()",
    "kind": "Method",
    "detail": "Function (FAISenseID)",
    "insertText": "GetSenseID()"
  },
  {
    "label": "GetSenseName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSenseName()"
  },
  {
    "label": "GetDebugColor()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "GetDebugColor()"
  },
  {
    "label": "GetMaxAge()",
    "kind": "Method",
    "detail": "Function (MaxAge = NewMaxAge ; } float)",
    "insertText": "GetMaxAge()"
  },
  {
    "label": "DescribeSelfToGameplayDebugger()",
    "kind": "Method",
    "detail": "Function (bStartsEnabled = bEnabled ; } # if WITH_GAMEPLAY_DEBUGGER_MENU void)",
    "insertText": "DescribeSelfToGameplayDebugger(const UAIPerceptionComponent* PerceptionComponent, FGameplayDebuggerCategory* DebuggerCategory)"
  }
]