[
  {
    "label": "UAnimationRecordingParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationRecordingParameters"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Animation / AnimationRecordingSettings . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Misc / FrameRate . h \" # include \" UObject / Object . h \" # include \" UObject / UObjectGlobals . h \" # include \" AnimationRecorderParameters . generated . h \")",
    "insertText": "UCLASS(config = EditorPerProjectUserSettings)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: float GetRecordingDurationSeconds()"
  },
  {
    "label": "GetRecordingFrameRate()",
    "kind": "Method",
    "detail": "Function (const FFrameRate&)",
    "insertText": "GetRecordingFrameRate()"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "if(SampleRate > 0.f)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (FString FrameRateFormat =)",
    "insertText": "Printf(TEXT(\"1/%f\"), SampleRate)"
  },
  {
    "label": "TryParseString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryParseString(SampleFrameRate, *FrameRateFormat)"
  }
]