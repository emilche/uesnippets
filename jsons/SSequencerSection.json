[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FSequencerSectionPainter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerSectionPainter"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SCompoundTrackLaneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCompoundTrackLaneView"
  },
  {
    "label": "STrackAreaView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STrackAreaView"
  },
  {
    "label": "FSectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSectionModel"
  },
  {
    "label": "FTrackAreaViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackAreaViewModel"
  },
  {
    "label": "ITrackAreaHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ITrackAreaHotspot"
  },
  {
    "label": "SSequencerSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerSection"
  },
  {
    "label": "FSequencerSectionPainterImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerSectionPainterImpl"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs, TSharedPtr<FSequencer> Sequencer, TSharedPtr<FSectionModel> InSectionModel, TSharedPtr<STrackLane> InOwningTrackLane)"
  },
  {
    "label": "CheckForEdgeInteraction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForEdgeInteraction( const FPointerEvent& MousePosition, const FGeometry& SectionGeometry )"
  },
  {
    "label": "CheckForEasingHandleInteraction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForEasingHandleInteraction( const FPointerEvent& MousePosition, const FGeometry& SectionGeometry )"
  },
  {
    "label": "CheckForEasingAreaInteraction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForEasingAreaInteraction( const FPointerEvent& MousePosition, const FGeometry& SectionGeometry )"
  },
  {
    "label": "CheckForSectionInteraction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForSectionInteraction( const FPointerEvent& MousePosition, const FGeometry& SectionGeometry )"
  },
  {
    "label": "AsShared()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AsShared()"
  },
  {
    "label": "UpdateUnderlappingSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateUnderlappingSegments()"
  },
  {
    "label": "ThrobSectionSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThrobSectionSelection(int32 ThrobCount = 1)"
  },
  {
    "label": "ThrobKeySelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThrobKeySelection(int32 ThrobCount = 1)"
  },
  {
    "label": "GetKeySelectionThrobValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetKeySelectionThrobValue()"
  },
  {
    "label": "GetSectionSelectionThrobValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetSectionSelectionThrobValue()"
  },
  {
    "label": "IsSectionHighlighted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSectionHighlighted(UMovieSceneSection* InSection, TSharedPtr<ITrackAreaHotspot> Hotspot)"
  }
]