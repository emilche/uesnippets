[
  {
    "label": "radaudio_sse2_compute_best_quantized_coeff16_loop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "radaudio_sse2_compute_best_quantized_coeff16_loop(S16 best_quantized[], F32 best_so_far, F32 ncoeff[], F32 quantizer, F32 step_quantizer, int num_quantizers)"
  },
  {
    "label": "radaudio_sse2_compute_best_quantized_coeff8_loop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "radaudio_sse2_compute_best_quantized_coeff8_loop(S16 best_quantized[], F32 best_so_far, F32 ncoeff[], F32 quantizer, F32 step_quantizer, int num_quantizers)"
  },
  {
    "label": "radaudio_sse2_fabs_coefficients()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "radaudio_sse2_fabs_coefficients(float *absval, float *data, int num_coeff)"
  },
  {
    "label": "radaudio_sse4_find_median_4th_of_8()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "radaudio_sse4_find_median_4th_of_8(S16 *data)"
  },
  {
    "label": "radaudio_sse4_findnth_of_8_or_less()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "radaudio_sse4_findnth_of_8_or_less(S16 *data, int count, int n)"
  },
  {
    "label": "radaudio_sse4popcnt_find_median_8th_of_16()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "radaudio_sse4popcnt_find_median_8th_of_16(S16 *data)"
  }
]