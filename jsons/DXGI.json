[
  {
    "label": "DXGI_FRAME_STATISTICS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_FRAME_STATISTICS"
  },
  {
    "label": "DXGI_MAPPED_RECT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_MAPPED_RECT"
  },
  {
    "label": "_LUID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_LUID"
  },
  {
    "label": "DXGI_ADAPTER_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_ADAPTER_DESC"
  },
  {
    "label": "DXGI_OUTPUT_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_OUTPUT_DESC"
  },
  {
    "label": "DXGI_SHARED_RESOURCE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_SHARED_RESOURCE"
  },
  {
    "label": "DXGI_RESIDENCY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DXGI_RESIDENCY"
  },
  {
    "label": "DXGI_SURFACE_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_SURFACE_DESC"
  },
  {
    "label": "DXGI_SWAP_EFFECT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DXGI_SWAP_EFFECT"
  },
  {
    "label": "DXGI_SWAP_CHAIN_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DXGI_SWAP_CHAIN_FLAG"
  },
  {
    "label": "DXGI_SWAP_CHAIN_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_SWAP_CHAIN_DESC"
  },
  {
    "label": "IDXGIObjectVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIObjectVtbl"
  },
  {
    "label": "IDXGIDeviceSubObjectVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIDeviceSubObjectVtbl"
  },
  {
    "label": "IDXGIResourceVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIResourceVtbl"
  },
  {
    "label": "IDXGIKeyedMutexVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIKeyedMutexVtbl"
  },
  {
    "label": "IDXGISurfaceVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGISurfaceVtbl"
  },
  {
    "label": "IDXGISurface1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGISurface1Vtbl"
  },
  {
    "label": "IDXGIAdapterVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIAdapterVtbl"
  },
  {
    "label": "IDXGIOutputVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIOutputVtbl"
  },
  {
    "label": "IDXGISwapChainVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGISwapChainVtbl"
  },
  {
    "label": "IDXGIFactoryVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIFactoryVtbl"
  },
  {
    "label": "IDXGIDeviceVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIDeviceVtbl"
  },
  {
    "label": "DXGI_ADAPTER_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DXGI_ADAPTER_FLAG"
  },
  {
    "label": "DXGI_ADAPTER_DESC1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_ADAPTER_DESC1"
  },
  {
    "label": "DXGI_DISPLAY_COLOR_SPACE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_DISPLAY_COLOR_SPACE"
  },
  {
    "label": "IDXGIFactory1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIFactory1Vtbl"
  },
  {
    "label": "IDXGIAdapter1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIAdapter1Vtbl"
  },
  {
    "label": "IDXGIDevice1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIDevice1Vtbl"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef __REQUIRED_RPCNDR_H_VERSION__ # define __REQUIRED_RPCNDR_H_VERSION__ 5 0 0 # endif # ifndef __REQUIRED_RPCSAL_H_VERSION__ # define __REQUIRED_RPCSAL_H_VERSION__ 1 0 0 # endif # include \" rpc . h \" # include \" rpcndr . h \" # ifndef __RPCNDR_H_VERSION__ # error this stub requires an updated version of<rpcndr . h> # endif # ifndef COM_NO_WINDOWS_H # include \" windows . h \" # include \" ole2 . h \" # endif # ifndef __dxgi_h__ # define __dxgi_h__ # if)",
    "insertText": "defined(_MSC_VER) && (_MSC_VER >= 1020)"
  },
  {
    "label": "DXGI_CPU_ACCESS_NONE()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef __IDXGIDeviceSubObject_FWD_DEFINED__ # define __IDXGIDeviceSubObject_FWD_DEFINED__ typedef interface IDXGIDeviceSubObject IDXGIDeviceSubObject ; # endif # ifndef __IDXGIResource_FWD_DEFINED__ # define __IDXGIResource_FWD_DEFINED__ typedef interface IDXGIResource IDXGIResource ; # endif # ifndef __IDXGIKeyedMutex_FWD_DEFINED__ # define __IDXGIKeyedMutex_FWD_DEFINED__ typedef interface IDXGIKeyedMutex IDXGIKeyedMutex ; # endif # ifndef __IDXGISurface_FWD_DEFINED__ # define __IDXGISurface_FWD_DEFINED__ typedef interface IDXGISurface IDXGISurface ; # endif # ifndef __IDXGISurface1_FWD_DEFINED__ # define __IDXGISurface1_FWD_DEFINED__ typedef interface IDXGISurface1 IDXGISurface1 ; # endif # ifndef __IDXGIAdapter_FWD_DEFINED__ # define __IDXGIAdapter_FWD_DEFINED__ typedef interface IDXGIAdapter IDXGIAdapter ; # endif # ifndef __IDXGIOutput_FWD_DEFINED__ # define __IDXGIOutput_FWD_DEFINED__ typedef interface IDXGIOutput IDXGIOutput ; # endif # ifndef __IDXGISwapChain_FWD_DEFINED__ # define __IDXGISwapChain_FWD_DEFINED__ typedef interface IDXGISwapChain IDXGISwapChain ; # endif # ifndef __IDXGIFactory_FWD_DEFINED__ # define __IDXGIFactory_FWD_DEFINED__ typedef interface IDXGIFactory IDXGIFactory ; # endif # ifndef __IDXGIDevice_FWD_DEFINED__ # define __IDXGIDevice_FWD_DEFINED__ typedef interface IDXGIDevice IDXGIDevice ; # endif # ifndef __IDXGIFactory1_FWD_DEFINED__ # define __IDXGIFactory1_FWD_DEFINED__ typedef interface IDXGIFactory1 IDXGIFactory1 ; # endif # ifndef __IDXGIAdapter1_FWD_DEFINED__ # define __IDXGIAdapter1_FWD_DEFINED__ typedef interface IDXGIAdapter1 IDXGIAdapter1 ; # endif # ifndef __IDXGIDevice1_FWD_DEFINED__ # define __IDXGIDevice1_FWD_DEFINED__ typedef interface IDXGIDevice1 IDXGIDevice1 ; # endif # include \" oaidl . h \" # include \" ocidl . h \" # include \" dxgicommon . h \" # include \" dxgitype . h \" # ifdef __cplusplus \" C \" { # endif # include<winapifamily . h> # define)",
    "insertText": "DXGI_CPU_ACCESS_NONE(0 ) #define DXGI_CPU_ACCESS_DYNAMIC ( 1 ) #define DXGI_CPU_ACCESS_READ_WRITE ( 2 ) #define DXGI_CPU_ACCESS_SCRATCH ( 3)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (typedef struct DXGI_FRAME_STATISTICS { UINT PresentCount ; UINT PresentRefreshCount ; UINT SyncRefreshCount ; LARGE_INTEGER SyncQPCTime ; LARGE_INTEGER SyncGPUTime ; } DXGI_FRAME_STATISTICS ; typedef struct DXGI_MAPPED_RECT { INT Pitch ; BYTE* pBits ; } DXGI_MAPPED_RECT ; # ifdef __midl # ifndef LUID_DEFINED # define LUID_DEFINED 1 typedef struct _LUID { DWORD LowPart ; LONG HighPart ; } LUID ; typedef struct _LUID* PLUID ; # endif # endif typedef struct DXGI_ADAPTER_DESC { WCHAR Description [ 1 2 8 ] ; UINT VendorId ; UINT DeviceId ; UINT SubSysId ; UINT Revision ; SIZE_T DedicatedVideoMemory ; SIZE_T DedicatedSystemMemory ; SIZE_T SharedSystemMemory ; LUID AdapterLuid ; } DXGI_ADAPTER_DESC ; # if !)",
    "insertText": "defined(HMONITOR_DECLARED) && !defined(HMONITOR) && (WINVER < 0x0500)"
  },
  {
    "label": "DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "DECLARE_HANDLE(HMONITOR)"
  },
  {
    "label": "DXGI_RESOURCE_PRIORITY_MINIMUM()",
    "kind": "Method",
    "detail": "Function (# endif typedef struct DXGI_OUTPUT_DESC { WCHAR DeviceName [ 3 2 ] ; RECT DesktopCoordinates ; BOOL AttachedToDesktop ; DXGI_MODE_ROTATION Rotation ; HMONITOR Monitor ; } DXGI_OUTPUT_DESC ; typedef struct DXGI_SHARED_RESOURCE { HANDLE Handle ; } DXGI_SHARED_RESOURCE ; # define)",
    "insertText": "DXGI_RESOURCE_PRIORITY_MINIMUM(0x28000000 ) #define DXGI_RESOURCE_PRIORITY_LOW ( 0x50000000 ) #define DXGI_RESOURCE_PRIORITY_NORMAL ( 0x78000000 ) #define DXGI_RESOURCE_PRIORITY_HIGH ( 0xa0000000 ) #define DXGI_RESOURCE_PRIORITY_MAXIMUM ( 0xc8000000)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (DXGI_RESIDENCY_FULLY_RESIDENT = 1,DXGI_RESIDENCY_RESIDENT_IN_SHARED_MEMORY = 2,DXGI_RESIDENCY_EVICTED_TO_DISK = 3 } DXGI_RESIDENCY ; typedef struct DXGI_SURFACE_DESC { UINT Width ; UINT Height ; DXGI_FORMAT Format ; DXGI_SAMPLE_DESC SampleDesc ; } DXGI_SURFACE_DESC ; typedef enum DXGI_SWAP_EFFECT { DXGI_SWAP_EFFECT_DISCARD = 0,DXGI_SWAP_EFFECT_SEQUENTIAL = 1,DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL = 3,DXGI_SWAP_EFFECT_FLIP_DISCARD = 4 } DXGI_SWAP_EFFECT ; typedef enum DXGI_SWAP_CHAIN_FLAG { DXGI_SWAP_CHAIN_FLAG_NONPREROTATED = 1,DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH = 2,DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE = 4,DXGI_SWAP_CHAIN_FLAG_RESTRICTED_CONTENT = 8,DXGI_SWAP_CHAIN_FLAG_RESTRICT_SHARED_RESOURCE_DRIVER = 1 6,DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY = 3 2,DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT = 6 4,DXGI_SWAP_CHAIN_FLAG_FOREGROUND_LAYER = 1 2 8,DXGI_SWAP_CHAIN_FLAG_FULLSCREEN_VIDEO = 2 5 6,DXGI_SWAP_CHAIN_FLAG_YUV_VIDEO = 5 1 2,DXGI_SWAP_CHAIN_FLAG_HW_PROTECTED = 1 0 2 4,DXGI_SWAP_CHAIN_FLAG_ALLOW_TEARING = 2 0 4 8,DXGI_SWAP_CHAIN_FLAG_RESTRICTED_TO_ALL_HOLOGRAPHIC_DISPLAYS = 4 0 9 6 } DXGI_SWAP_CHAIN_FLAG ; typedef struct DXGI_SWAP_CHAIN_DESC { DXGI_MODE_DESC BufferDesc ; DXGI_SAMPLE_DESC SampleDesc ; DXGI_USAGE BufferUsage ; UINT BufferCount ; HWND OutputWindow ; BOOL Windowed ; DXGI_SWAP_EFFECT SwapEffect ; UINT Flags ; } DXGI_SWAP_CHAIN_DESC ; RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0000_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0000_v0_0_s_ifspec ; # ifndef __IDXGIObject_INTERFACE_DEFINED__ # define __IDXGIObject_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGIObject ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"aec22fb8-76f3-4639-9be0-28eb43a67a2e\")"
  },
  {
    "label": "SetPrivateData()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetPrivateData(_In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "SetPrivateDataInterface()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetPrivateDataInterface(_In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "GetPrivateData()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetPrivateData(_In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetParent(_In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIObjectVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIObject * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIObject * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIObject * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIObject * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIObject * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIObject * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIObject * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "IDXGIObject_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIObjectVtbl ; interface IDXGIObject { CONST_VTBL struct IDXGIObjectVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIObject_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIObject_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIObject_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIObject_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIObject_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIObject_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIObject_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"3d3e0379-f9de-4d58-bb6c-18d62992f1a6\")"
  },
  {
    "label": "GetDevice()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDevice(_In_ REFIID riid, _COM_Outptr_ void **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIDeviceSubObjectVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIDeviceSubObject * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIDeviceSubObject * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIDeviceSubObject * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIDeviceSubObject * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIDeviceSubObject * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIDeviceSubObject * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIDeviceSubObject * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDevice )( IDXGIDeviceSubObject * This, _In_ REFIID riid, _COM_Outptr_ void **ppDevice)"
  },
  {
    "label": "IDXGIDeviceSubObject_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIDeviceSubObjectVtbl ; interface IDXGIDeviceSubObject { CONST_VTBL struct IDXGIDeviceSubObjectVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIDeviceSubObject_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIDeviceSubObject_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIDeviceSubObject_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIDeviceSubObject_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIDeviceSubObject_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIDeviceSubObject_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIDeviceSubObject_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIDeviceSubObject_GetDevice(This,riid,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,riid,ppDevice))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"035f3ab4-482e-4e50-b41f-8a7f8bd8960b\")"
  },
  {
    "label": "GetSharedHandle()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetSharedHandle(_Out_ HANDLE *pSharedHandle)"
  },
  {
    "label": "GetUsage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetUsage(DXGI_USAGE *pUsage)"
  },
  {
    "label": "SetEvictionPriority()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetEvictionPriority(UINT EvictionPriority)"
  },
  {
    "label": "GetEvictionPriority()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetEvictionPriority(_Out_ UINT *pEvictionPriority)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIResourceVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIResource * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIResource * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIResource * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIResource * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIResource * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIResource * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIResource * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDevice )( IDXGIResource * This, _In_ REFIID riid, _COM_Outptr_ void **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetSharedHandle )( IDXGIResource * This, _Out_ HANDLE *pSharedHandle)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetUsage )( IDXGIResource * This, DXGI_USAGE *pUsage)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetEvictionPriority )( IDXGIResource * This, UINT EvictionPriority)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetEvictionPriority )( IDXGIResource * This, _Out_ UINT *pEvictionPriority)"
  },
  {
    "label": "IDXGIResource_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIResourceVtbl ; interface IDXGIResource { CONST_VTBL struct IDXGIResourceVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIResource_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIResource_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIResource_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIResource_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIResource_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIResource_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIResource_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIResource_GetDevice(This,riid,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,riid,ppDevice) ) #define IDXGIResource_GetSharedHandle(This,pSharedHandle) \\ ( (This)->lpVtbl -> GetSharedHandle(This,pSharedHandle) ) #define IDXGIResource_GetUsage(This,pUsage) \\ ( (This)->lpVtbl -> GetUsage(This,pUsage) ) #define IDXGIResource_SetEvictionPriority(This,EvictionPriority) \\ ( (This)->lpVtbl -> SetEvictionPriority(This,EvictionPriority) ) #define IDXGIResource_GetEvictionPriority(This,pEvictionPriority) \\ ( (This)->lpVtbl -> GetEvictionPriority(This,pEvictionPriority))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9d8e1289-d7b3-465f-8126-250e349af85d\")"
  },
  {
    "label": "AcquireSync()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "AcquireSync(UINT64 Key, DWORD dwMilliseconds)"
  },
  {
    "label": "ReleaseSync()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "ReleaseSync(UINT64 Key)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIKeyedMutexVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIKeyedMutex * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIKeyedMutex * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIKeyedMutex * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIKeyedMutex * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIKeyedMutex * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIKeyedMutex * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIKeyedMutex * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDevice )( IDXGIKeyedMutex * This, _In_ REFIID riid, _COM_Outptr_ void **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *AcquireSync )( IDXGIKeyedMutex * This, UINT64 Key, DWORD dwMilliseconds)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ReleaseSync )( IDXGIKeyedMutex * This, UINT64 Key)"
  },
  {
    "label": "IDXGIKeyedMutex_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIKeyedMutexVtbl ; interface IDXGIKeyedMutex { CONST_VTBL struct IDXGIKeyedMutexVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIKeyedMutex_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIKeyedMutex_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIKeyedMutex_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIKeyedMutex_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIKeyedMutex_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIKeyedMutex_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIKeyedMutex_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIKeyedMutex_GetDevice(This,riid,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,riid,ppDevice) ) #define IDXGIKeyedMutex_AcquireSync(This,Key,dwMilliseconds) \\ ( (This)->lpVtbl -> AcquireSync(This,Key,dwMilliseconds) ) #define IDXGIKeyedMutex_ReleaseSync(This,Key) \\ ( (This)->lpVtbl -> ReleaseSync(This,Key) ) #endif #endif #endif #define DXGI_MAP_READ ( 1UL ) #define DXGI_MAP_WRITE ( 2UL ) #define DXGI_MAP_DISCARD ( 4UL)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0004_v0_0_s_ifspec ; # ifndef __IDXGISurface_INTERFACE_DEFINED__ # define __IDXGISurface_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGISurface ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"cafcb56c-6ac3-4889-bf47-9e23bbd260ec\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ DXGI_SURFACE_DESC *pDesc)"
  },
  {
    "label": "Map()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "Map(_Out_ DXGI_MAPPED_RECT *pLockedRect, UINT MapFlags)"
  },
  {
    "label": "Unmap()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "Unmap(void)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGISurfaceVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGISurface * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGISurface * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGISurface * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGISurface * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGISurface * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGISurface * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGISurface * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDevice )( IDXGISurface * This, _In_ REFIID riid, _COM_Outptr_ void **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDesc )( IDXGISurface * This, _Out_ DXGI_SURFACE_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Map )( IDXGISurface * This, _Out_ DXGI_MAPPED_RECT *pLockedRect, UINT MapFlags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Unmap )( IDXGISurface * This)"
  },
  {
    "label": "IDXGISurface_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGISurfaceVtbl ; interface IDXGISurface { CONST_VTBL struct IDXGISurfaceVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGISurface_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGISurface_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGISurface_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGISurface_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGISurface_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGISurface_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGISurface_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGISurface_GetDevice(This,riid,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,riid,ppDevice) ) #define IDXGISurface_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #define IDXGISurface_Map(This,pLockedRect,MapFlags) \\ ( (This)->lpVtbl -> Map(This,pLockedRect,MapFlags) ) #define IDXGISurface_Unmap(This) \\ ( (This)->lpVtbl -> Unmap(This))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"4AE63092-6327-4c1b-80AE-BFE12EA32B86\")"
  },
  {
    "label": "GetDC()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDC(BOOL Discard, _Out_ HDC *phdc)"
  },
  {
    "label": "ReleaseDC()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "ReleaseDC(_In_opt_ RECT *pDirtyRect)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGISurface1Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGISurface1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGISurface1 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGISurface1 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGISurface1 * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGISurface1 * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGISurface1 * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGISurface1 * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDevice )( IDXGISurface1 * This, _In_ REFIID riid, _COM_Outptr_ void **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDesc )( IDXGISurface1 * This, _Out_ DXGI_SURFACE_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Map )( IDXGISurface1 * This, _Out_ DXGI_MAPPED_RECT *pLockedRect, UINT MapFlags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Unmap )( IDXGISurface1 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDC )( IDXGISurface1 * This, BOOL Discard, _Out_ HDC *phdc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ReleaseDC )( IDXGISurface1 * This, _In_opt_ RECT *pDirtyRect)"
  },
  {
    "label": "IDXGISurface1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGISurface1Vtbl ; interface IDXGISurface1 { CONST_VTBL struct IDXGISurface1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGISurface1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGISurface1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGISurface1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGISurface1_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGISurface1_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGISurface1_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGISurface1_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGISurface1_GetDevice(This,riid,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,riid,ppDevice) ) #define IDXGISurface1_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #define IDXGISurface1_Map(This,pLockedRect,MapFlags) \\ ( (This)->lpVtbl -> Map(This,pLockedRect,MapFlags) ) #define IDXGISurface1_Unmap(This) \\ ( (This)->lpVtbl -> Unmap(This) ) #define IDXGISurface1_GetDC(This,Discard,phdc) \\ ( (This)->lpVtbl -> GetDC(This,Discard,phdc) ) #define IDXGISurface1_ReleaseDC(This,pDirtyRect) \\ ( (This)->lpVtbl -> ReleaseDC(This,pDirtyRect))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0006_v0_0_s_ifspec ; # ifndef __IDXGIAdapter_INTERFACE_DEFINED__ # define __IDXGIAdapter_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGIAdapter ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"2411e7e1-12ac-4ccf-bd14-9798e8534dc0\")"
  },
  {
    "label": "EnumOutputs()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "EnumOutputs(UINT Output, _COM_Outptr_ IDXGIOutput **ppOutput)"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ DXGI_ADAPTER_DESC *pDesc)"
  },
  {
    "label": "CheckInterfaceSupport()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CheckInterfaceSupport(_In_ REFGUID InterfaceName, _Out_ LARGE_INTEGER *pUMDVersion)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIAdapterVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIAdapter * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIAdapter * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIAdapter * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIAdapter * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIAdapter * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIAdapter * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIAdapter * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *EnumOutputs )( IDXGIAdapter * This, UINT Output, _COM_Outptr_ IDXGIOutput **ppOutput)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDesc )( IDXGIAdapter * This, _Out_ DXGI_ADAPTER_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckInterfaceSupport )( IDXGIAdapter * This, _In_ REFGUID InterfaceName, _Out_ LARGE_INTEGER *pUMDVersion)"
  },
  {
    "label": "IDXGIAdapter_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIAdapterVtbl ; interface IDXGIAdapter { CONST_VTBL struct IDXGIAdapterVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIAdapter_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIAdapter_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIAdapter_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIAdapter_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIAdapter_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIAdapter_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIAdapter_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIAdapter_EnumOutputs(This,Output,ppOutput) \\ ( (This)->lpVtbl -> EnumOutputs(This,Output,ppOutput) ) #define IDXGIAdapter_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #define IDXGIAdapter_CheckInterfaceSupport(This,InterfaceName,pUMDVersion) \\ ( (This)->lpVtbl -> CheckInterfaceSupport(This,InterfaceName,pUMDVersion) ) #endif #endif #endif #define DXGI_ENUM_MODES_INTERLACED ( 1UL ) #define DXGI_ENUM_MODES_SCALING ( 2UL)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0007_v0_0_s_ifspec ; # ifndef __IDXGIOutput_INTERFACE_DEFINED__ # define __IDXGIOutput_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGIOutput ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"ae02eedb-c735-4690-8d52-5a8dc20213aa\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ DXGI_OUTPUT_DESC *pDesc)"
  },
  {
    "label": "GetDisplayModeList()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDisplayModeList(DXGI_FORMAT EnumFormat, UINT Flags, _Inout_ UINT *pNumModes, _Out_writes_to_opt_(*pNumModes,*pNumModes) DXGI_MODE_DESC *pDesc)"
  },
  {
    "label": "FindClosestMatchingMode()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "FindClosestMatchingMode(_In_ const DXGI_MODE_DESC *pModeToMatch, _Out_ DXGI_MODE_DESC *pClosestMatch, _In_opt_ IUnknown *pConcernedDevice)"
  },
  {
    "label": "WaitForVBlank()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "WaitForVBlank(void)"
  },
  {
    "label": "TakeOwnership()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "TakeOwnership(_In_ IUnknown *pDevice, BOOL Exclusive)"
  },
  {
    "label": "ReleaseOwnership()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ReleaseOwnership(void)"
  },
  {
    "label": "GetGammaControlCapabilities()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetGammaControlCapabilities(_Out_ DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps)"
  },
  {
    "label": "SetGammaControl()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetGammaControl(_In_ const DXGI_GAMMA_CONTROL *pArray)"
  },
  {
    "label": "GetGammaControl()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetGammaControl(_Out_ DXGI_GAMMA_CONTROL *pArray)"
  },
  {
    "label": "SetDisplaySurface()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetDisplaySurface(_In_ IDXGISurface *pScanoutSurface)"
  },
  {
    "label": "GetDisplaySurfaceData()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDisplaySurfaceData(_In_ IDXGISurface *pDestination)"
  },
  {
    "label": "GetFrameStatistics()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetFrameStatistics(_Out_ DXGI_FRAME_STATISTICS *pStats)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIOutputVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIOutput * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIOutput * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIOutput * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIOutput * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIOutput * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIOutput * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIOutput * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDesc )( IDXGIOutput * This, _Out_ DXGI_OUTPUT_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDisplayModeList )( IDXGIOutput * This, DXGI_FORMAT EnumFormat, UINT Flags, _Inout_ UINT *pNumModes, _Out_writes_to_opt_(*pNumModes,*pNumModes) DXGI_MODE_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *FindClosestMatchingMode )( IDXGIOutput * This, _In_ const DXGI_MODE_DESC *pModeToMatch, _Out_ DXGI_MODE_DESC *pClosestMatch, _In_opt_ IUnknown *pConcernedDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *WaitForVBlank )( IDXGIOutput * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *TakeOwnership )( IDXGIOutput * This, _In_ IUnknown *pDevice, BOOL Exclusive)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ReleaseOwnership )( IDXGIOutput * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetGammaControlCapabilities )( IDXGIOutput * This, _Out_ DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetGammaControl )( IDXGIOutput * This, _In_ const DXGI_GAMMA_CONTROL *pArray)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetGammaControl )( IDXGIOutput * This, _Out_ DXGI_GAMMA_CONTROL *pArray)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetDisplaySurface )( IDXGIOutput * This, _In_ IDXGISurface *pScanoutSurface)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDisplaySurfaceData )( IDXGIOutput * This, _In_ IDXGISurface *pDestination)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetFrameStatistics )( IDXGIOutput * This, _Out_ DXGI_FRAME_STATISTICS *pStats)"
  },
  {
    "label": "IDXGIOutput_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIOutputVtbl ; interface IDXGIOutput { CONST_VTBL struct IDXGIOutputVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIOutput_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIOutput_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIOutput_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIOutput_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIOutput_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIOutput_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIOutput_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIOutput_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #define IDXGIOutput_GetDisplayModeList(This,EnumFormat,Flags,pNumModes,pDesc) \\ ( (This)->lpVtbl -> GetDisplayModeList(This,EnumFormat,Flags,pNumModes,pDesc) ) #define IDXGIOutput_FindClosestMatchingMode(This,pModeToMatch,pClosestMatch,pConcernedDevice) \\ ( (This)->lpVtbl -> FindClosestMatchingMode(This,pModeToMatch,pClosestMatch,pConcernedDevice) ) #define IDXGIOutput_WaitForVBlank(This) \\ ( (This)->lpVtbl -> WaitForVBlank(This) ) #define IDXGIOutput_TakeOwnership(This,pDevice,Exclusive) \\ ( (This)->lpVtbl -> TakeOwnership(This,pDevice,Exclusive) ) #define IDXGIOutput_ReleaseOwnership(This) \\ ( (This)->lpVtbl -> ReleaseOwnership(This) ) #define IDXGIOutput_GetGammaControlCapabilities(This,pGammaCaps) \\ ( (This)->lpVtbl -> GetGammaControlCapabilities(This,pGammaCaps) ) #define IDXGIOutput_SetGammaControl(This,pArray) \\ ( (This)->lpVtbl -> SetGammaControl(This,pArray) ) #define IDXGIOutput_GetGammaControl(This,pArray) \\ ( (This)->lpVtbl -> GetGammaControl(This,pArray) ) #define IDXGIOutput_SetDisplaySurface(This,pScanoutSurface) \\ ( (This)->lpVtbl -> SetDisplaySurface(This,pScanoutSurface) ) #define IDXGIOutput_GetDisplaySurfaceData(This,pDestination) \\ ( (This)->lpVtbl -> GetDisplaySurfaceData(This,pDestination) ) #define IDXGIOutput_GetFrameStatistics(This,pStats) \\ ( (This)->lpVtbl -> GetFrameStatistics(This,pStats) ) #endif #endif #endif #define DXGI_MAX_SWAP_CHAIN_BUFFERS ( 16)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0008_v0_0_s_ifspec ; # ifndef __IDXGISwapChain_INTERFACE_DEFINED__ # define __IDXGISwapChain_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGISwapChain ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"310d36a0-d2e7-4c0a-aa04-6a9d23b8886a\")"
  },
  {
    "label": "Present()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "Present(UINT SyncInterval, UINT Flags)"
  },
  {
    "label": "GetBuffer()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetBuffer(UINT Buffer, _In_ REFIID riid, _COM_Outptr_ void **ppSurface)"
  },
  {
    "label": "SetFullscreenState()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetFullscreenState(BOOL Fullscreen, _In_opt_ IDXGIOutput *pTarget)"
  },
  {
    "label": "GetFullscreenState()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetFullscreenState(_Out_opt_ BOOL *pFullscreen, _COM_Outptr_opt_result_maybenull_ IDXGIOutput **ppTarget)"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ DXGI_SWAP_CHAIN_DESC *pDesc)"
  },
  {
    "label": "ResizeBuffers()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "ResizeBuffers(UINT BufferCount, UINT Width, UINT Height, DXGI_FORMAT NewFormat, UINT SwapChainFlags)"
  },
  {
    "label": "ResizeTarget()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "ResizeTarget(_In_ const DXGI_MODE_DESC *pNewTargetParameters)"
  },
  {
    "label": "GetContainingOutput()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetContainingOutput(_COM_Outptr_ IDXGIOutput **ppOutput)"
  },
  {
    "label": "GetLastPresentCount()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetLastPresentCount(_Out_ UINT *pLastPresentCount)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGISwapChainVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGISwapChain * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGISwapChain * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGISwapChain * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGISwapChain * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGISwapChain * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGISwapChain * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGISwapChain * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDevice )( IDXGISwapChain * This, _In_ REFIID riid, _COM_Outptr_ void **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Present )( IDXGISwapChain * This, UINT SyncInterval, UINT Flags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetBuffer )( IDXGISwapChain * This, UINT Buffer, _In_ REFIID riid, _COM_Outptr_ void **ppSurface)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetFullscreenState )( IDXGISwapChain * This, BOOL Fullscreen, _In_opt_ IDXGIOutput *pTarget)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetFullscreenState )( IDXGISwapChain * This, _Out_opt_ BOOL *pFullscreen, _COM_Outptr_opt_result_maybenull_ IDXGIOutput **ppTarget)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDesc )( IDXGISwapChain * This, _Out_ DXGI_SWAP_CHAIN_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ResizeBuffers )( IDXGISwapChain * This, UINT BufferCount, UINT Width, UINT Height, DXGI_FORMAT NewFormat, UINT SwapChainFlags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ResizeTarget )( IDXGISwapChain * This, _In_ const DXGI_MODE_DESC *pNewTargetParameters)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetContainingOutput )( IDXGISwapChain * This, _COM_Outptr_ IDXGIOutput **ppOutput)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetFrameStatistics )( IDXGISwapChain * This, _Out_ DXGI_FRAME_STATISTICS *pStats)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetLastPresentCount )( IDXGISwapChain * This, _Out_ UINT *pLastPresentCount)"
  },
  {
    "label": "IDXGISwapChain_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGISwapChainVtbl ; interface IDXGISwapChain { CONST_VTBL struct IDXGISwapChainVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGISwapChain_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGISwapChain_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGISwapChain_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGISwapChain_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGISwapChain_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGISwapChain_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGISwapChain_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGISwapChain_GetDevice(This,riid,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,riid,ppDevice) ) #define IDXGISwapChain_Present(This,SyncInterval,Flags) \\ ( (This)->lpVtbl -> Present(This,SyncInterval,Flags) ) #define IDXGISwapChain_GetBuffer(This,Buffer,riid,ppSurface) \\ ( (This)->lpVtbl -> GetBuffer(This,Buffer,riid,ppSurface) ) #define IDXGISwapChain_SetFullscreenState(This,Fullscreen,pTarget) \\ ( (This)->lpVtbl -> SetFullscreenState(This,Fullscreen,pTarget) ) #define IDXGISwapChain_GetFullscreenState(This,pFullscreen,ppTarget) \\ ( (This)->lpVtbl -> GetFullscreenState(This,pFullscreen,ppTarget) ) #define IDXGISwapChain_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #define IDXGISwapChain_ResizeBuffers(This,BufferCount,Width,Height,NewFormat,SwapChainFlags) \\ ( (This)->lpVtbl -> ResizeBuffers(This,BufferCount,Width,Height,NewFormat,SwapChainFlags) ) #define IDXGISwapChain_ResizeTarget(This,pNewTargetParameters) \\ ( (This)->lpVtbl -> ResizeTarget(This,pNewTargetParameters) ) #define IDXGISwapChain_GetContainingOutput(This,ppOutput) \\ ( (This)->lpVtbl -> GetContainingOutput(This,ppOutput) ) #define IDXGISwapChain_GetFrameStatistics(This,pStats) \\ ( (This)->lpVtbl -> GetFrameStatistics(This,pStats) ) #define IDXGISwapChain_GetLastPresentCount(This,pLastPresentCount) \\ ( (This)->lpVtbl -> GetLastPresentCount(This,pLastPresentCount) ) #endif #endif #endif #define DXGI_MWA_NO_WINDOW_CHANGES ( 1 << 0 ) #define DXGI_MWA_NO_ALT_ENTER ( 1 << 1 ) #define DXGI_MWA_NO_PRINT_SCREEN ( 1 << 2 ) #define DXGI_MWA_VALID ( 0x7)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0009_v0_0_s_ifspec ; # ifndef __IDXGIFactory_INTERFACE_DEFINED__ # define __IDXGIFactory_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGIFactory ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"7b7166ec-21c7-44ae-b21a-c9ae321ae369\")"
  },
  {
    "label": "EnumAdapters()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "EnumAdapters(UINT Adapter, _COM_Outptr_ IDXGIAdapter **ppAdapter)"
  },
  {
    "label": "MakeWindowAssociation()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "MakeWindowAssociation(HWND WindowHandle, UINT Flags)"
  },
  {
    "label": "GetWindowAssociation()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetWindowAssociation(_Out_ HWND *pWindowHandle)"
  },
  {
    "label": "CreateSwapChain()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateSwapChain(_In_ IUnknown *pDevice, _In_ DXGI_SWAP_CHAIN_DESC *pDesc, _COM_Outptr_ IDXGISwapChain **ppSwapChain)"
  },
  {
    "label": "CreateSoftwareAdapter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateSoftwareAdapter(HMODULE Module, _COM_Outptr_ IDXGIAdapter **ppAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIFactoryVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIFactory * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIFactory * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIFactory * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIFactory * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIFactory * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIFactory * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIFactory * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *EnumAdapters )( IDXGIFactory * This, UINT Adapter, _COM_Outptr_ IDXGIAdapter **ppAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *MakeWindowAssociation )( IDXGIFactory * This, HWND WindowHandle, UINT Flags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetWindowAssociation )( IDXGIFactory * This, _Out_ HWND *pWindowHandle)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSwapChain )( IDXGIFactory * This, _In_ IUnknown *pDevice, _In_ DXGI_SWAP_CHAIN_DESC *pDesc, _COM_Outptr_ IDXGISwapChain **ppSwapChain)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSoftwareAdapter )( IDXGIFactory * This, HMODULE Module, _COM_Outptr_ IDXGIAdapter **ppAdapter)"
  },
  {
    "label": "IDXGIFactory_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIFactoryVtbl ; interface IDXGIFactory { CONST_VTBL struct IDXGIFactoryVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIFactory_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIFactory_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIFactory_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIFactory_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIFactory_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIFactory_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIFactory_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIFactory_EnumAdapters(This,Adapter,ppAdapter) \\ ( (This)->lpVtbl -> EnumAdapters(This,Adapter,ppAdapter) ) #define IDXGIFactory_MakeWindowAssociation(This,WindowHandle,Flags) \\ ( (This)->lpVtbl -> MakeWindowAssociation(This,WindowHandle,Flags) ) #define IDXGIFactory_GetWindowAssociation(This,pWindowHandle) \\ ( (This)->lpVtbl -> GetWindowAssociation(This,pWindowHandle) ) #define IDXGIFactory_CreateSwapChain(This,pDevice,pDesc,ppSwapChain) \\ ( (This)->lpVtbl -> CreateSwapChain(This,pDevice,pDesc,ppSwapChain) ) #define IDXGIFactory_CreateSoftwareAdapter(This,Module,ppAdapter) \\ ( (This)->lpVtbl -> CreateSoftwareAdapter(This,Module,ppAdapter) ) #endif #endif #endif #pragma region Desktop Family #if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) HRESULT WINAPI CreateDXGIFactory(REFIID riid, _COM_Outptr_ void **ppFactory)"
  },
  {
    "label": "CreateDXGIFactory1()",
    "kind": "Method",
    "detail": "Function (# endif # pragma endregion HRESULT WINAPI)",
    "insertText": "CreateDXGIFactory1(REFIID riid, _COM_Outptr_ void **ppFactory)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0010_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0010_v0_0_s_ifspec ; # ifndef __IDXGIDevice_INTERFACE_DEFINED__ # define __IDXGIDevice_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGIDevice ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"54ec77fa-1377-44e6-8c32-88fd5f44c84c\")"
  },
  {
    "label": "GetAdapter()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetAdapter(_COM_Outptr_ IDXGIAdapter **pAdapter)"
  },
  {
    "label": "CreateSurface()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateSurface(_In_ const DXGI_SURFACE_DESC *pDesc, UINT NumSurfaces, DXGI_USAGE Usage, _In_opt_ const DXGI_SHARED_RESOURCE *pSharedResource, _COM_Outptr_ IDXGISurface **ppSurface)"
  },
  {
    "label": "QueryResourceResidency()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "QueryResourceResidency(_In_reads_(NumResources) IUnknown *const *ppResources, _Out_writes_(NumResources) DXGI_RESIDENCY *pResidencyStatus, UINT NumResources)"
  },
  {
    "label": "SetGPUThreadPriority()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetGPUThreadPriority(INT Priority)"
  },
  {
    "label": "GetGPUThreadPriority()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetGPUThreadPriority(_Out_ INT *pPriority)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIDeviceVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIDevice * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIDevice * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIDevice * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIDevice * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIDevice * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIDevice * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIDevice * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetAdapter )( IDXGIDevice * This, _COM_Outptr_ IDXGIAdapter **pAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSurface )( IDXGIDevice * This, _In_ const DXGI_SURFACE_DESC *pDesc, UINT NumSurfaces, DXGI_USAGE Usage, _In_opt_ const DXGI_SHARED_RESOURCE *pSharedResource, _COM_Outptr_ IDXGISurface **ppSurface)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryResourceResidency )( IDXGIDevice * This, _In_reads_(NumResources) IUnknown *const *ppResources, _Out_writes_(NumResources) DXGI_RESIDENCY *pResidencyStatus, UINT NumResources)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetGPUThreadPriority )( IDXGIDevice * This, INT Priority)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetGPUThreadPriority )( IDXGIDevice * This, _Out_ INT *pPriority)"
  },
  {
    "label": "IDXGIDevice_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIDeviceVtbl ; interface IDXGIDevice { CONST_VTBL struct IDXGIDeviceVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIDevice_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIDevice_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIDevice_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIDevice_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIDevice_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIDevice_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIDevice_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIDevice_GetAdapter(This,pAdapter) \\ ( (This)->lpVtbl -> GetAdapter(This,pAdapter) ) #define IDXGIDevice_CreateSurface(This,pDesc,NumSurfaces,Usage,pSharedResource,ppSurface) \\ ( (This)->lpVtbl -> CreateSurface(This,pDesc,NumSurfaces,Usage,pSharedResource,ppSurface) ) #define IDXGIDevice_QueryResourceResidency(This,ppResources,pResidencyStatus,NumResources) \\ ( (This)->lpVtbl -> QueryResourceResidency(This,ppResources,pResidencyStatus,NumResources) ) #define IDXGIDevice_SetGPUThreadPriority(This,Priority) \\ ( (This)->lpVtbl -> SetGPUThreadPriority(This,Priority) ) #define IDXGIDevice_GetGPUThreadPriority(This,pPriority) \\ ( (This)->lpVtbl -> GetGPUThreadPriority(This,pPriority))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (DXGI_ADAPTER_FLAG_NONE = 0,DXGI_ADAPTER_FLAG_REMOTE = 1,DXGI_ADAPTER_FLAG_SOFTWARE = 2,DXGI_ADAPTER_FLAG_FORCE_DWORD = 0 xffffffff } DXGI_ADAPTER_FLAG ; typedef struct DXGI_ADAPTER_DESC1 { WCHAR Description [ 1 2 8 ] ; UINT VendorId ; UINT DeviceId ; UINT SubSysId ; UINT Revision ; SIZE_T DedicatedVideoMemory ; SIZE_T DedicatedSystemMemory ; SIZE_T SharedSystemMemory ; LUID AdapterLuid ; UINT Flags ; } DXGI_ADAPTER_DESC1 ; typedef struct DXGI_DISPLAY_COLOR_SPACE { FLOAT PrimaryCoordinates [ 8 ] [ 2 ] ; FLOAT WhitePoints [ 1 6 ] [ 2 ] ; } DXGI_DISPLAY_COLOR_SPACE ; RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0011_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_dxgi_0000_0011_v0_0_s_ifspec ; # ifndef __IDXGIFactory1_INTERFACE_DEFINED__ # define __IDXGIFactory1_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGIFactory1 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"770aae78-f26f-4dba-a829-253c83d1b387\")"
  },
  {
    "label": "EnumAdapters1()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "EnumAdapters1(UINT Adapter, _COM_Outptr_ IDXGIAdapter1 **ppAdapter)"
  },
  {
    "label": "IsCurrent()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "IsCurrent(void)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIFactory1Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIFactory1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIFactory1 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIFactory1 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIFactory1 * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIFactory1 * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIFactory1 * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIFactory1 * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *EnumAdapters )( IDXGIFactory1 * This, UINT Adapter, _COM_Outptr_ IDXGIAdapter **ppAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *MakeWindowAssociation )( IDXGIFactory1 * This, HWND WindowHandle, UINT Flags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetWindowAssociation )( IDXGIFactory1 * This, _Out_ HWND *pWindowHandle)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSwapChain )( IDXGIFactory1 * This, _In_ IUnknown *pDevice, _In_ DXGI_SWAP_CHAIN_DESC *pDesc, _COM_Outptr_ IDXGISwapChain **ppSwapChain)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSoftwareAdapter )( IDXGIFactory1 * This, HMODULE Module, _COM_Outptr_ IDXGIAdapter **ppAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *EnumAdapters1 )( IDXGIFactory1 * This, UINT Adapter, _COM_Outptr_ IDXGIAdapter1 **ppAdapter)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *IsCurrent )( IDXGIFactory1 * This)"
  },
  {
    "label": "IDXGIFactory1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIFactory1Vtbl ; interface IDXGIFactory1 { CONST_VTBL struct IDXGIFactory1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIFactory1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIFactory1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIFactory1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIFactory1_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIFactory1_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIFactory1_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIFactory1_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIFactory1_EnumAdapters(This,Adapter,ppAdapter) \\ ( (This)->lpVtbl -> EnumAdapters(This,Adapter,ppAdapter) ) #define IDXGIFactory1_MakeWindowAssociation(This,WindowHandle,Flags) \\ ( (This)->lpVtbl -> MakeWindowAssociation(This,WindowHandle,Flags) ) #define IDXGIFactory1_GetWindowAssociation(This,pWindowHandle) \\ ( (This)->lpVtbl -> GetWindowAssociation(This,pWindowHandle) ) #define IDXGIFactory1_CreateSwapChain(This,pDevice,pDesc,ppSwapChain) \\ ( (This)->lpVtbl -> CreateSwapChain(This,pDevice,pDesc,ppSwapChain) ) #define IDXGIFactory1_CreateSoftwareAdapter(This,Module,ppAdapter) \\ ( (This)->lpVtbl -> CreateSoftwareAdapter(This,Module,ppAdapter) ) #define IDXGIFactory1_EnumAdapters1(This,Adapter,ppAdapter) \\ ( (This)->lpVtbl -> EnumAdapters1(This,Adapter,ppAdapter) ) #define IDXGIFactory1_IsCurrent(This) \\ ( (This)->lpVtbl -> IsCurrent(This))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"29038f61-3839-4626-91fd-086879011a05\")"
  },
  {
    "label": "GetDesc1()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDesc1(_Out_ DXGI_ADAPTER_DESC1 *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIAdapter1Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIAdapter1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIAdapter1 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIAdapter1 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIAdapter1 * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIAdapter1 * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIAdapter1 * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIAdapter1 * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *EnumOutputs )( IDXGIAdapter1 * This, UINT Output, _COM_Outptr_ IDXGIOutput **ppOutput)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDesc )( IDXGIAdapter1 * This, _Out_ DXGI_ADAPTER_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckInterfaceSupport )( IDXGIAdapter1 * This, _In_ REFGUID InterfaceName, _Out_ LARGE_INTEGER *pUMDVersion)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDesc1 )( IDXGIAdapter1 * This, _Out_ DXGI_ADAPTER_DESC1 *pDesc)"
  },
  {
    "label": "IDXGIAdapter1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIAdapter1Vtbl ; interface IDXGIAdapter1 { CONST_VTBL struct IDXGIAdapter1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIAdapter1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIAdapter1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIAdapter1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIAdapter1_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIAdapter1_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIAdapter1_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIAdapter1_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIAdapter1_EnumOutputs(This,Output,ppOutput) \\ ( (This)->lpVtbl -> EnumOutputs(This,Output,ppOutput) ) #define IDXGIAdapter1_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #define IDXGIAdapter1_CheckInterfaceSupport(This,InterfaceName,pUMDVersion) \\ ( (This)->lpVtbl -> CheckInterfaceSupport(This,InterfaceName,pUMDVersion) ) #define IDXGIAdapter1_GetDesc1(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc1(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"77db970f-6276-48ba-ba28-070143b4392c\")"
  },
  {
    "label": "SetMaximumFrameLatency()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetMaximumFrameLatency(UINT MaxLatency)"
  },
  {
    "label": "GetMaximumFrameLatency()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetMaximumFrameLatency(_Out_ UINT *pMaxLatency)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIDevice1Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIDevice1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIDevice1 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIDevice1 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIDevice1 * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIDevice1 * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIDevice1 * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIDevice1 * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetAdapter )( IDXGIDevice1 * This, _COM_Outptr_ IDXGIAdapter **pAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSurface )( IDXGIDevice1 * This, _In_ const DXGI_SURFACE_DESC *pDesc, UINT NumSurfaces, DXGI_USAGE Usage, _In_opt_ const DXGI_SHARED_RESOURCE *pSharedResource, _COM_Outptr_ IDXGISurface **ppSurface)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryResourceResidency )( IDXGIDevice1 * This, _In_reads_(NumResources) IUnknown *const *ppResources, _Out_writes_(NumResources) DXGI_RESIDENCY *pResidencyStatus, UINT NumResources)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetGPUThreadPriority )( IDXGIDevice1 * This, INT Priority)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetGPUThreadPriority )( IDXGIDevice1 * This, _Out_ INT *pPriority)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetMaximumFrameLatency )( IDXGIDevice1 * This, UINT MaxLatency)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetMaximumFrameLatency )( IDXGIDevice1 * This, _Out_ UINT *pMaxLatency)"
  },
  {
    "label": "IDXGIDevice1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIDevice1Vtbl ; interface IDXGIDevice1 { CONST_VTBL struct IDXGIDevice1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIDevice1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIDevice1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIDevice1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIDevice1_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIDevice1_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIDevice1_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIDevice1_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIDevice1_GetAdapter(This,pAdapter) \\ ( (This)->lpVtbl -> GetAdapter(This,pAdapter) ) #define IDXGIDevice1_CreateSurface(This,pDesc,NumSurfaces,Usage,pSharedResource,ppSurface) \\ ( (This)->lpVtbl -> CreateSurface(This,pDesc,NumSurfaces,Usage,pSharedResource,ppSurface) ) #define IDXGIDevice1_QueryResourceResidency(This,ppResources,pResidencyStatus,NumResources) \\ ( (This)->lpVtbl -> QueryResourceResidency(This,ppResources,pResidencyStatus,NumResources) ) #define IDXGIDevice1_SetGPUThreadPriority(This,Priority) \\ ( (This)->lpVtbl -> SetGPUThreadPriority(This,Priority) ) #define IDXGIDevice1_GetGPUThreadPriority(This,pPriority) \\ ( (This)->lpVtbl -> GetGPUThreadPriority(This,pPriority) ) #define IDXGIDevice1_SetMaximumFrameLatency(This,MaxLatency) \\ ( (This)->lpVtbl -> SetMaximumFrameLatency(This,MaxLatency) ) #define IDXGIDevice1_GetMaximumFrameLatency(This,pMaxLatency) \\ ( (This)->lpVtbl -> GetMaximumFrameLatency(This,pMaxLatency) ) #endif #endif #endif #ifdef __cplusplus #endif DEFINE_GUID(IID_IDXGIObject,0xaec22fb8,0x76f3,0x4639,0x9b,0xe0,0x28,0xeb,0x43,0xa6,0x7a,0x2e)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIDeviceSubObject,0x3d3e0379,0xf9de,0x4d58,0xbb,0x6c,0x18,0xd6,0x29,0x92,0xf1,0xa6)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIResource,0x035f3ab4,0x482e,0x4e50,0xb4,0x1f,0x8a,0x7f,0x8b,0xd8,0x96,0x0b)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIKeyedMutex,0x9d8e1289,0xd7b3,0x465f,0x81,0x26,0x25,0x0e,0x34,0x9a,0xf8,0x5d)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGISurface,0xcafcb56c,0x6ac3,0x4889,0xbf,0x47,0x9e,0x23,0xbb,0xd2,0x60,0xec)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGISurface1,0x4AE63092,0x6327,0x4c1b,0x80,0xAE,0xBF,0xE1,0x2E,0xA3,0x2B,0x86)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIAdapter,0x2411e7e1,0x12ac,0x4ccf,0xbd,0x14,0x97,0x98,0xe8,0x53,0x4d,0xc0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIOutput,0xae02eedb,0xc735,0x4690,0x8d,0x52,0x5a,0x8d,0xc2,0x02,0x13,0xaa)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGISwapChain,0x310d36a0,0xd2e7,0x4c0a,0xaa,0x04,0x6a,0x9d,0x23,0xb8,0x88,0x6a)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIFactory,0x7b7166ec,0x21c7,0x44ae,0xb2,0x1a,0xc9,0xae,0x32,0x1a,0xe3,0x69)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIDevice,0x54ec77fa,0x1377,0x44e6,0x8c,0x32,0x88,0xfd,0x5f,0x44,0xc8,0x4c)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIFactory1,0x770aae78,0xf26f,0x4dba,0xa8,0x29,0x25,0x3c,0x83,0xd1,0xb3,0x87)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIAdapter1,0x29038f61,0x3839,0x4626,0x91,0xfd,0x08,0x68,0x79,0x01,0x1a,0x05)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIDevice1,0x77db970f,0x6276,0x48ba,0xba,0x28,0x07,0x01,0x43,0xb4,0x39,0x2c)"
  }
]