[
  {
    "label": "FShaderFormatsPropertyDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderFormatsPropertyDetails"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SErrorText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SErrorText"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FMacTargetSettingsDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMacTargetSettingsDetails"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "HandlePreExternalIconCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePreExternalIconCopy(const FString& InChosenImage)"
  },
  {
    "label": "GetPickerPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPickerPath()"
  },
  {
    "label": "HandlePostExternalIconCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePostExternalIconCopy(const FString& InChosenImage)"
  },
  {
    "label": "OnGetShaderVersionContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGetShaderVersionContent()"
  },
  {
    "label": "SetShaderStandard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderStandard(int32 Value)"
  },
  {
    "label": "UpdateShaderStandardWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateShaderStandardWarning()"
  }
]