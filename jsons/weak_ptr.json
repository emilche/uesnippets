[
  {
    "label": "WeakReference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WeakReference"
  },
  {
    "label": "Flag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Flag"
  },
  {
    "label": "RefCountedObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RefCountedObject"
  },
  {
    "label": "WeakReferenceOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WeakReferenceOwner"
  },
  {
    "label": "WeakPtrBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WeakPtrBase"
  },
  {
    "label": "WeakPtrFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WeakPtrFactory"
  },
  {
    "label": "WeakPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WeakPtr"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Flag()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_WEAK_PTR_H_ # define RTC_BASE_WEAK_PTR_H_ # include<memory> # include<utility> # include \" api / scoped_refptr . h \" # include \" api / sequence_checker . h \" # include \" rtc_base / ref_count . h \" # include \" rtc_base / ref_counted_object . h \" # include \" rtc_base / system / no_unique_address . h \" namespace rtc { namespace internal { class WeakReference { public : class Flag : public RefCountInterface { public :)",
    "insertText": "Flag()"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "WeakReference()",
    "kind": "Method",
    "detail": "Function (RTC_NO_UNIQUE_ADDRESS::webrtc::SequenceChecker checker_ ; bool is_valid_ ; } ;)",
    "insertText": "WeakReference()"
  },
  {
    "label": "WeakReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WeakReference(const Flag* flag)"
  },
  {
    "label": "WeakReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WeakReference(WeakReference&& other)"
  },
  {
    "label": "WeakReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WeakReference(const WeakReference& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WeakReference&)",
    "insertText": "operator(WeakReference&& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WeakReference&)",
    "insertText": "operator(const WeakReference& other)"
  },
  {
    "label": "is_valid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "is_valid()"
  },
  {
    "label": "WeakReferenceOwner()",
    "kind": "Method",
    "detail": "Function (private : scoped_refptr<const Flag> flag_ ; } ; class WeakReferenceOwner { public :)",
    "insertText": "WeakReferenceOwner()"
  },
  {
    "label": "GetRef()",
    "kind": "Method",
    "detail": "Function (WeakReference)",
    "insertText": "GetRef()"
  },
  {
    "label": "HasRefs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasRefs()"
  },
  {
    "label": "WeakPtrBase()",
    "kind": "Method",
    "detail": "Function (private : scoped_refptr<RefCountedObject<WeakReference::Flag>> flag_ ; } ; class WeakPtrBase { public :)",
    "insertText": "WeakPtrBase()"
  },
  {
    "label": "WeakPtrBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WeakPtrBase(const WeakPtrBase& other)"
  },
  {
    "label": "WeakPtrBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WeakPtrBase(WeakPtrBase&& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WeakPtrBase&)",
    "insertText": "operator(const WeakPtrBase& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WeakPtrBase&)",
    "insertText": "operator(WeakPtrBase&& other)"
  },
  {
    "label": "WeakPtrBase()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "WeakPtrBase(const WeakReference& ref)"
  },
  {
    "label": "WeakPtr()",
    "kind": "Method",
    "detail": "Function (WeakReference ref_ ; } ; } template<T> class WeakPtrFactory ; template<T> class WeakPtr : public internal::WeakPtrBase { public :)",
    "insertText": "WeakPtr() : ptr_(nullptr)"
  },
  {
    "label": "WeakPtr()",
    "kind": "Method",
    "detail": "Function (} template<U>)",
    "insertText": "WeakPtr(const WeakPtr<U>& other) : internal::WeakPtrBase(other), ptr_(other.ptr_)"
  },
  {
    "label": "WeakPtr()",
    "kind": "Method",
    "detail": "Function (} template<U>)",
    "insertText": "WeakPtr(WeakPtr<U>&& other) : internal::WeakPtrBase(std::move(other)), ptr_(other.ptr_)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (} T*)",
    "insertText": "get()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} T&)",
    "insertText": "operator()"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(get() != nullptr)"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "reset()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (ptr_ = nullptr ; } operator)",
    "insertText": "bool()"
  },
  {
    "label": "WeakPtr()",
    "kind": "Method",
    "detail": "Function (} private : template<U> class WeakPtr ; class WeakPtrFactory<T> ;)",
    "insertText": "WeakPtr(const internal::WeakReference& ref, T* ptr) : internal::WeakPtrBase(ref), ptr_(ptr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} T* ptr_ ; } ; template<class T> bool)",
    "insertText": "operator(const WeakPtr<T>& weak_ptr, std::nullptr_t)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<class T> bool)",
    "insertText": "operator(std::nullptr_t, const WeakPtr<T>& weak_ptr)"
  },
  {
    "label": "WeakPtrFactory()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "WeakPtrFactory()"
  },
  {
    "label": "WeakPtrFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WeakPtrFactory(const WeakPtrFactory&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WeakPtrFactory&)",
    "insertText": "operator(const WeakPtrFactory&)"
  },
  {
    "label": "GetWeakPtr()",
    "kind": "Method",
    "detail": "Function (ptr_ = nullptr ; } WeakPtr<T>)",
    "insertText": "GetWeakPtr()"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(ptr_)"
  },
  {
    "label": "InvalidateWeakPtrs()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InvalidateWeakPtrs()"
  },
  {
    "label": "HasWeakPtrs()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasWeakPtrs()"
  }
]