[
  {
    "label": "RealFourier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RealFourier"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef COMMON_AUDIO_REAL_FOURIER_H_ # define COMMON_AUDIO_REAL_FOURIER_H_ # include<stddef . h> # include<complex> # include<memory> # include \" rtc_base / memory / aligned_malloc . h \" namespace webrtc { class RealFourier { public : typedef std::unique_ptr<float [ ],AlignedFreeDeleter> fft_real_scoper ; typedef std::unique_ptr<std::complex<float> [ ],AlignedFreeDeleter> fft_cplx_scoper ; const size_t kFftBufferAlignment ; std::unique_ptr<RealFourier>)",
    "insertText": "Create(int fft_order)"
  },
  {
    "label": "RealFourier()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RealFourier()"
  },
  {
    "label": "FftOrder()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "FftOrder(size_t length)"
  },
  {
    "label": "FftLength()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "FftLength(int order)"
  },
  {
    "label": "ComplexLength()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "ComplexLength(int order)"
  },
  {
    "label": "AllocRealBuffer()",
    "kind": "Method",
    "detail": "Function (fft_real_scoper)",
    "insertText": "AllocRealBuffer(int count)"
  },
  {
    "label": "AllocCplxBuffer()",
    "kind": "Method",
    "detail": "Function (fft_cplx_scoper)",
    "insertText": "AllocCplxBuffer(int count)"
  },
  {
    "label": "Forward()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Forward(const float* src, std::complex<float>* dest)"
  },
  {
    "label": "Inverse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Inverse(const std::complex<float>* src, float* dest)"
  },
  {
    "label": "order()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "order()"
  }
]