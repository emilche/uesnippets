[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "FVector4StructCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVector4StructCustomization"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IDetailGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailGroup"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IPropertyTypeCustomizationUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeCustomizationUtils"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SColorGradingPicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorGradingPicker"
  },
  {
    "label": "SColorGradingComponentViewer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorGradingComponentViewer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FColorGradingMinMaxSliderValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColorGradingMinMaxSliderValue"
  },
  {
    "label": "FColorGradingVectorCustomizationBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FColorGradingVectorCustomizationBase"
  },
  {
    "label": "FColorGradingVectorCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FColorGradingVectorCustomization"
  },
  {
    "label": "FColorGradingCustomBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FColorGradingCustomBuilder"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Delegates / Delegate . h \" # include \" EditorUndoClient . h \" # include \" Framework / ColorGrading / ColorGradingCommon . h \" # include \" HAL / Platform . h \" # include \" IDetailCustomNodeBuilder . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Math / Color . h \" # include \" Math / Vector4 . h \" # include \" Misc / Optional . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" UObject / UnrealNames . h \" # include \" Util / TrackedVector4PropertyHandle . h \" class FDetailWidgetRow ; class FVector4StructCustomization ; class IDetailChildrenBuilder ; class IDetailGroup ; class IPropertyHandle ; class IPropertyTypeCustomizationUtils ; class SWidget ; namespace UE::ColorGrading { class SColorGradingPicker ; class SColorGradingComponentViewer ; enum class EColorGradingModes ; } struct FColorGradingMinMaxSliderValue { TOptional<float> CurrentMaxSliderValue ; TOptional<float> CurrentMinSliderValue ; TOptional<float> DefaultMaxSliderValue ; TOptional<float> DefaultMinSliderValue ; } ; class FColorGradingVectorCustomizationBase : public TSharedFromThis<FColorGradingVectorCustomizationBase>,public FEditorUndoClient { public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnNumericEntryBoxDynamicSliderMinMaxValueChanged, float, TWeakPtr<SWidget>, bool, bool)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnCurrentHSVColorChanged, FLinearColor, bool)"
  },
  {
    "label": "FColorGradingVectorCustomizationBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FColorGradingVectorCustomizationBase(const FTrackedVector4PropertyHandle& InColorGradingPropertyHandle, const TArray<TWeakPtr<IPropertyHandle>>& InSortedChildArray)"
  },
  {
    "label": "GetOnNumericEntryBoxDynamicSliderMaxValueChangedDelegate()",
    "kind": "Method",
    "detail": "Function (FOnNumericEntryBoxDynamicSliderMinMaxValueChanged&)",
    "insertText": "GetOnNumericEntryBoxDynamicSliderMaxValueChangedDelegate()"
  },
  {
    "label": "OnDynamicSliderMinValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDynamicSliderMinValueChanged(float NewMinSliderValue, TWeakPtr<SWidget> InValueChangedSourceWidget, bool IsOriginator, bool UpdateOnlyIfLower)"
  },
  {
    "label": "OnSliderGetValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "OnSliderGetValue(int32 ColorIndex)"
  },
  {
    "label": "OnCurrentHSVColorChangedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCurrentHSVColorChangedDelegate(FLinearColor NewHSVColor, bool Originator)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "IsInRGBMode()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "IsInRGBMode()"
  },
  {
    "label": "GetColorGradingMode()",
    "kind": "Method",
    "detail": "Function (UE::ColorGrading::EColorGradingModes)",
    "insertText": "GetColorGradingMode()"
  },
  {
    "label": "MakeComponentViewer()",
    "kind": "Method",
    "detail": "Function (TSharedRef<UE::ColorGrading::SColorGradingComponentViewer>)",
    "insertText": "MakeComponentViewer(int32 ColorIndex, TOptional<float>& MinValue, TOptional<float>& MaxValue, TOptional<float>& SliderMinValue, TOptional<float>& SliderMaxValue, float& SliderExponent, float& Delta, float& ShiftMultiplier, float &CtrlMultiplier, bool& SupportDynamicSliderMaxValue, bool& SupportDynamicSliderMinValue, bool UseCompactDisplay)"
  },
  {
    "label": "OnGetColorComponent()",
    "kind": "Method",
    "detail": "Function (UE::ColorGrading::EColorGradingComponent)",
    "insertText": "OnGetColorComponent(int32 ColorIndex)"
  },
  {
    "label": "GetCurrentColorGradingValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCurrentColorGradingValue(FVector4& OutCurrentValue)"
  },
  {
    "label": "OnGetMaxSliderValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "OnGetMaxSliderValue(TOptional<float> DefaultMaxSliderValue, int32 ColorIndex)"
  },
  {
    "label": "OnGetMinSliderValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "OnGetMinSliderValue(TOptional<float> DefaultMinSliderValue, int32 ColorIndex)"
  },
  {
    "label": "OnGetSliderDeltaValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "OnGetSliderDeltaValue(float DefaultValue, int32 ColorIndex)"
  },
  {
    "label": "OnGetMaxValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "OnGetMaxValue(TOptional<float> DefaultValue, int32 ColorIndex)"
  },
  {
    "label": "OnBeginSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSliderMovement()"
  },
  {
    "label": "OnEndSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSliderMovement(float NewValue, int32 ColorIndex)"
  },
  {
    "label": "OnValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnValueChanged(float NewValue, int32 ColorIndex)"
  },
  {
    "label": "GetSupportDynamicSliderMaxValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSupportDynamicSliderMaxValue(bool DefaultValue, int32 ColorIndex)"
  },
  {
    "label": "GetSupportDynamicSliderMinValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSupportDynamicSliderMinValue(bool DefaultValue, int32 ColorIndex)"
  },
  {
    "label": "IsEntryBoxEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEntryBoxEnabled(int32 ColorIndex)"
  },
  {
    "label": "FColorGradingVectorCustomization()",
    "kind": "Method",
    "detail": "Function (protected : FColorGradingMinMaxSliderValue SpinBoxMinMaxSliderValues ; TArray<TWeakPtr<UE::ColorGrading::SColorGradingComponentViewer>> ComponentViewers ; FTrackedVector4PropertyHandle ColorGradingPropertyHandle ; TArray<TWeakPtr<IPropertyHandle>> SortedChildArray ; bool IsRGBMode ; FLinearColor CurrentHSVColor ; FOnNumericEntryBoxDynamicSliderMinMaxValueChanged OnNumericEntryBoxDynamicSliderMaxValueChanged ; FOnNumericEntryBoxDynamicSliderMinMaxValueChanged OnNumericEntryBoxDynamicSliderMinValueChanged ; FOnCurrentHSVColorChanged OnCurrentHSVColorChanged ; IDetailGroup* ParentGroup ; bool bIsUsingSlider ; } ; class FColorGradingVectorCustomization : public FColorGradingVectorCustomizationBase { public :)",
    "insertText": "FColorGradingVectorCustomization(TWeakPtr<IPropertyHandle> InColorGradingPropertyHandle, const TArray<TWeakPtr<IPropertyHandle>>& InSortedChildArray)"
  },
  {
    "label": "FColorGradingVectorCustomization()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FColorGradingVectorCustomization()"
  },
  {
    "label": "MakeHeaderRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeHeaderRow(FDetailWidgetRow& Row, TSharedRef<FVector4StructCustomization> InVector4Customization)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(IDetailChildrenBuilder& StructBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "OnColorModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorModeChanged(bool InIsRGBMode)"
  },
  {
    "label": "OnGetColorForHeaderColorBlock()",
    "kind": "Method",
    "detail": "Function (private : FLinearColor)",
    "insertText": "OnGetColorForHeaderColorBlock()"
  },
  {
    "label": "GetMultipleValuesTextVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetMultipleValuesTextVisibility()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class FColorGradingCustomBuilder> CustomColorGradingBuilder ; } ; class FColorGradingCustomBuilder : public IDetailCustomNodeBuilder,public FColorGradingVectorCustomizationBase { public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnColorModeChanged, bool)"
  },
  {
    "label": "FColorGradingCustomBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FColorGradingCustomBuilder(const FTrackedVector4PropertyHandle& InColorGradingPropertyHandle, const TArray<TWeakPtr<IPropertyHandle>>& InSortedChildArray, TSharedRef<FColorGradingVectorCustomization> InColorGradingCustomization, IDetailGroup* InParentGroup)"
  },
  {
    "label": "FColorGradingCustomBuilder()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FColorGradingCustomBuilder()"
  },
  {
    "label": "GetOnColorModeChanged()",
    "kind": "Method",
    "detail": "Function (FOnColorModeChanged&)",
    "insertText": "GetOnColorModeChanged()"
  },
  {
    "label": "CanResetToDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanResetToDefault(TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "SetOnRebuildChildren()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SetOnRebuildChildren(FSimpleDelegate InOnRebuildChildren)"
  },
  {
    "label": "RequiresTick()",
    "kind": "Method",
    "detail": "Function (OnRebuildChildren = InOnRebuildChildren ; } bool)",
    "insertText": "RequiresTick()"
  },
  {
    "label": "GenerateHeaderRowContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateHeaderRowContent(FDetailWidgetRow& NodeRow)"
  },
  {
    "label": "GenerateChildContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateChildContent(IDetailChildrenBuilder& ChildrenBuilder)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetName()"
  },
  {
    "label": "OnBeginMainValueSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginMainValueSliderMovement()"
  },
  {
    "label": "OnEndMainValueSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndMainValueSliderMovement()"
  },
  {
    "label": "OnBeginMouseCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginMouseCapture()"
  },
  {
    "label": "OnEndMouseCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndMouseCapture()"
  },
  {
    "label": "OnPropertyValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPropertyValueChanged(UObject* Object, FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OnDetailGroupReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDetailGroupReset()"
  },
  {
    "label": "OnChangeColorModeText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnChangeColorModeText(UE::ColorGrading::EColorGradingColorDisplayMode ModeType)"
  },
  {
    "label": "OnChangeColorModeToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnChangeColorModeToolTipText(UE::ColorGrading::EColorGradingColorDisplayMode ModeType)"
  },
  {
    "label": "OnGetChangeColorMode()",
    "kind": "Method",
    "detail": "Function (UE::ColorGrading::EColorGradingColorDisplayMode)",
    "insertText": "OnGetChangeColorMode()"
  },
  {
    "label": "OnGetRGBHSVButtonVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "OnGetRGBHSVButtonVisibility(UE::ColorGrading::EColorGradingColorDisplayMode ModeType)"
  },
  {
    "label": "OnGetGradientVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "OnGetGradientVisibility()"
  },
  {
    "label": "OnChangeColorModeClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangeColorModeClicked(UE::ColorGrading::EColorGradingColorDisplayMode ModeType)"
  }
]