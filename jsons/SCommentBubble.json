[
  {
    "label": "SMultiLineEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableTextBox"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" Framework / SlateDelegates . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / CursorReply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" Misc / Attribute . h \" # include \" SNodePanel . h \" # include \" Styling / SlateColor . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class SMultiLineEditableTextBox ; class UEdGraphNode ; struct FGeometry ; struct FPointerEvent ;)",
    "insertText": "DECLARE_DELEGATE_RetVal(bool, FIsGraphNodeHovered)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnCommentBubbleToggled, bool)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SCommentBubble : public SCompoundWidget {)",
    "insertText": "SLATE_BEGIN_ARGS(SCommentBubble ) : _GraphNode( NULL ) , _ColorAndOpacity( FLinearColor::White ) , _AllowPinning( false ) , _EnableTitleBarBubble( false ) , _EnableBubbleCtrls( false ) , _InvertLODCulling( false ) , _GraphLOD( EGraphRenderingLOD::DefaultDetail)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(UEdGraphNode*, GraphNode ) SLATE_ATTRIBUTE( ECheckBoxState, ToggleButtonCheck ) SLATE_ATTRIBUTE( FString, Text ) SLATE_EVENT( FOnTextCommitted, OnTextCommitted ) SLATE_EVENT( FOnCommentBubbleToggled, OnToggled ) SLATE_ATTRIBUTE( FText, HintText ) SLATE_ATTRIBUTE( FSlateColor, ColorAndOpacity ) SLATE_ARGUMENT( bool, AllowPinning ) SLATE_ARGUMENT( bool, EnableTitleBarBubble ) SLATE_ARGUMENT( bool, EnableBubbleCtrls ) SLATE_ARGUMENT( bool, InvertLODCulling ) SLATE_ATTRIBUTE( EGraphRenderingLOD::Type, GraphLOD ) SLATE_EVENT( FIsGraphNodeHovered, IsGraphNodeHovered ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "OnCursorQuery()",
    "kind": "Method",
    "detail": "Function (FCursorReply)",
    "insertText": "OnCursorQuery(const FGeometry& MyGeometry, const FPointerEvent& CursorEvent)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "TickVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickVisibility(const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "GetOffset()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetOffset()"
  },
  {
    "label": "GetArrowCenterOffset()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetArrowCenterOffset()"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetSize()"
  },
  {
    "label": "IsBubbleVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBubbleVisible()"
  },
  {
    "label": "IsScalingAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsScalingAllowed()"
  },
  {
    "label": "OnCommentBubbleToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommentBubbleToggle(ECheckBoxState State)"
  },
  {
    "label": "SetCommentBubbleVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCommentBubbleVisibility(bool bVisible)"
  },
  {
    "label": "OnPinStateToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPinStateToggle(ECheckBoxState State)"
  },
  {
    "label": "UpdateBubble()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBubble()"
  },
  {
    "label": "TextBlockHasKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TextBlockHasKeyboardFocus()"
  },
  {
    "label": "GetScaleButtonTooltip()",
    "kind": "Method",
    "detail": "Function (protected : FText)",
    "insertText": "GetScaleButtonTooltip()"
  },
  {
    "label": "GetBubbleVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetBubbleVisibility()"
  },
  {
    "label": "GetToggleButtonVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetToggleButtonVisibility()"
  },
  {
    "label": "GetToggleButtonColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetToggleButtonColor()"
  },
  {
    "label": "GetBubbleColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetBubbleColor()"
  },
  {
    "label": "GetForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetForegroundColor()"
  },
  {
    "label": "GetTextBackgroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetTextBackgroundColor()"
  },
  {
    "label": "GetTextForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetTextForegroundColor()"
  },
  {
    "label": "GetReadOnlyTextForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetReadOnlyTextForegroundColor()"
  },
  {
    "label": "GetToggleButtonCheck()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetToggleButtonCheck()"
  },
  {
    "label": "GetPinnedButtonCheck()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetPinnedButtonCheck()"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  }
]