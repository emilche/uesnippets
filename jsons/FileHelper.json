[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "IPlatformFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPlatformFile"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FFileHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFileHelper"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "BufferToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferToString( FString& Result, const uint8* Buffer, int32 Size )"
  },
  {
    "label": "LoadFileToArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFileToArray( TArray<uint8>& Result, const TCHAR* Filename, uint32 Flags = 0 )"
  },
  {
    "label": "LoadFileToArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFileToArray( TArray64<uint8>& Result, const TCHAR* Filename, uint32 Flags = 0 )"
  },
  {
    "label": "LoadFileToString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFileToString(FString& Result, FArchive& Reader, EHashOptions VerifyFlags = EHashOptions::None)"
  },
  {
    "label": "LoadFileToString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFileToString( FString& Result, const TCHAR* Filename, EHashOptions VerifyFlags = EHashOptions::None, uint32 ReadFlags = 0 )"
  },
  {
    "label": "LoadFileToString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFileToString(FString& Result, IPlatformFile* PlatformFile, const TCHAR* Filename, EHashOptions VerifyFlags = EHashOptions::None, uint32 ReadFlags = 0)"
  },
  {
    "label": "LoadFileToStringArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFileToStringArray( TArray<FString>& Result, const TCHAR* Filename )"
  },
  {
    "label": "LoadFileToStringArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFileToStringArray(TArray<FString>& Result, const TCHAR* Filename, EHashOptions VerifyFlags)"
  },
  {
    "label": "saving()",
    "kind": "Method",
    "detail": "Function (image)",
    "insertText": "saving(to BMP or any other format)"
  },
  {
    "label": "GenerateDateTimeBasedBitmapFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateDateTimeBasedBitmapFilename(const FString& Pattern, const FString& Extension, FString& OutFilename)"
  },
  {
    "label": "LoadANSITextFileToStrings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadANSITextFileToStrings(const TCHAR* InFilename, IFileManager* InFileManager, TArray<FString>& OutStrings)"
  },
  {
    "label": "IsFilenameValidForSaving()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFilenameValidForSaving(const FString& Filename, FText& OutError)"
  },
  {
    "label": "CreateBitmap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateBitmap(const TCHAR* Pattern, int32 DataWidth, int32 DataHeight, const struct FColor* Data, FIntRect* SubRectangle, IFileManager* FileManager, FString* OutFilename, bool bInWriteAlpha, EChannelMask ChannelMask)"
  }
]