[
  {
    "label": "SSplitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSplitter"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FEditorViewportLayoutThreePanes",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportLayoutThreePanes"
  },
  {
    "label": "FEditorViewportLayoutThreePanesLeft",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportLayoutThreePanesLeft"
  },
  {
    "label": "FEditorViewportLayoutThreePanesRight",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportLayoutThreePanesRight"
  },
  {
    "label": "FEditorViewportLayoutThreePanesTop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportLayoutThreePanesTop"
  },
  {
    "label": "FEditorViewportLayoutThreePanesBottom",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportLayoutThreePanesBottom"
  },
  {
    "label": "MakeViewportLayout()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetEditorViewportLayout . h \" class SSplitter ; class SWidget ; class FName ; class FEditorViewportLayoutThreePanes : public FAssetEditorViewportPaneLayout { public : TSharedRef<SWidget>)",
    "insertText": "MakeViewportLayout(TSharedPtr<FAssetEditorViewportLayout> InParentLayout, const FString& LayoutString)"
  },
  {
    "label": "SaveLayoutString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveLayoutString(const FString& SpecificLayoutString)"
  },
  {
    "label": "ReplaceWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceWidget(TSharedRef<SWidget> OriginalWidget, TSharedRef<SWidget> ReplacementWidget)"
  },
  {
    "label": "MakeThreePanelWidget()",
    "kind": "Method",
    "detail": "Function (protected : TSharedRef<SWidget>)",
    "insertText": "MakeThreePanelWidget(const TSharedRef<SWidget>& ViewportKey0, const TSharedRef<SWidget>& ViewportKey1, const TSharedRef<SWidget>& ViewportKey2, float PrimarySplitterPercentage, float SecondarySplitterPercentage)"
  },
  {
    "label": "GetLayoutTypeName()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SSplitter> PrimarySplitterWidget ; TSharedPtr<SSplitter> SecondarySplitterWidget ; FName PerspectiveViewportConfigKey ; } ; class FEditorViewportLayoutThreePanesLeft : public FEditorViewportLayoutThreePanes { public : const FName&)",
    "insertText": "GetLayoutTypeName()"
  }
]