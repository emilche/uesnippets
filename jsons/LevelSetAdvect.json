[
  {
    "label": "VelocityField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VelocityField"
  },
  {
    "label": "Interrupter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Interrupter"
  },
  {
    "label": "LevelSetAdvection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LevelSetAdvection"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "implements"
  },
  {
    "label": "Advect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Advect"
  },
  {
    "label": "template",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "template"
  },
  {
    "label": "advect()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "advect(ValueType time0, ValueType time1)"
  },
  {
    "label": "Advect()",
    "kind": "Method",
    "detail": "Function (constructor)",
    "insertText": "Advect(LevelSetAdvection& parent)"
  },
  {
    "label": "Advect()",
    "kind": "Method",
    "detail": "Function (threads)",
    "insertText": "Advect(const Advect& other)"
  },
  {
    "label": "advect()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "advect(ValueType time0, ValueType time1)"
  },
  {
    "label": "OPENVDB_THROW()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "OPENVDB_THROW(ValueError, \"task is undefined - don\\'t call this method directly\")"
  },
  {
    "label": "cook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cook(const char* msg, size_t swapBuffer = 0)"
  },
  {
    "label": "sampleField()",
    "kind": "Method",
    "detail": "Function (GridT::ValueType)",
    "insertText": "sampleField(ValueType time0, ValueType time1)"
  },
  {
    "label": "sample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sample(const LeafRange& r, ValueType t0, ValueType t1)"
  },
  {
    "label": "clearField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearField()"
  },
  {
    "label": "euler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "euler(const LeafRange&, ValueType, Index, Index)"
  },
  {
    "label": "advect1()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "advect1(ValueType time0, ValueType time1)"
  },
  {
    "label": "advect2()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "advect2(ValueType time0, ValueType time1)"
  },
  {
    "label": "advect3()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "advect3(ValueType time0, ValueType time1)"
  },
  {
    "label": "OPENVDB_THROW()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "OPENVDB_THROW(ValueError, \"Spatial difference scheme not supported!\")"
  },
  {
    "label": "OPENVDB_THROW()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "OPENVDB_THROW(ValueError, \"Temporal integration scheme not supported!\")"
  },
  {
    "label": "tmp()",
    "kind": "Method",
    "detail": "Function (TemporalScheme>)",
    "insertText": "tmp(*this)"
  },
  {
    "label": "OPENVDB_THROW()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "OPENVDB_THROW(ValueError, \"Temporal integration scheme not supported!\")"
  },
  {
    "label": "ValueType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ValueType(0.0)"
  },
  {
    "label": "ValueType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ValueType(0)"
  },
  {
    "label": "field()",
    "kind": "Method",
    "detail": "Function (FieldT)",
    "insertText": "field( mParent.mField )"
  }
]