[
  {
    "label": "FTransformCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransformCollection"
  },
  {
    "label": "FTransformCollection()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FTransformCollection()"
  },
  {
    "label": "DefineTransformSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefineTransformSchema(FManagedArrayCollection&)"
  },
  {
    "label": "SingleTransform()",
    "kind": "Method",
    "detail": "Function (FTransformCollection)",
    "insertText": "SingleTransform(const FTransform& TransformRoot = FTransform::Identity)"
  },
  {
    "label": "AppendCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendCollection(const FTransformCollection& Collection)"
  },
  {
    "label": "AppendTransform()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AppendTransform(const FTransformCollection & GeometryCollection, const FTransform& TransformRoot = FTransform::Identity)"
  },
  {
    "label": "ParentTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParentTransforms(const int32 TransformIndex, const int32 ChildIndex)"
  },
  {
    "label": "ParentTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParentTransforms(const int32 TransformIndex, const TArray<int32>& SelectedBones)"
  },
  {
    "label": "UnparentTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnparentTransform(const int32 ChildIndex)"
  },
  {
    "label": "RelativeTransformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RelativeTransformation(const int32& Index, const FTransform& LocalOffset)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct()"
  }
]