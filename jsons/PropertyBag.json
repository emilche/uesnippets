[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UPropertyBag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPropertyBag"
  },
  {
    "label": "FPropertyBagArrayRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyBagArrayRef"
  },
  {
    "label": "FPropertyBagSetRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyBagSetRef"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "only",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "only"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "only",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "only"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "reference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "reference"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "value",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "value"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "reference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "reference"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "value",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "value"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "value",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "value"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "based",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "based"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "names"
  },
  {
    "label": "FInstancedPropertyBag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedPropertyBag"
  },
  {
    "label": "PopHead()",
    "kind": "Method",
    "detail": "Function (EPropertyBagContainerType)",
    "insertText": "PopHead()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "InitializeFromBagStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromBagStruct(const UPropertyBag* NewBagStruct)"
  },
  {
    "label": "CopyMatchingValuesByID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyMatchingValuesByID(const FInstancedPropertyBag& NewDescs)"
  },
  {
    "label": "AddProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddProperties(const TConstArrayView<FPropertyBagPropertyDesc> Descs)"
  },
  {
    "label": "AddProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddProperty(const FName InName, const EPropertyBagPropertyType InValueType, const UObject* InValueTypeObject = nullptr)"
  },
  {
    "label": "AddContainerProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContainerProperty(const FName InName, const EPropertyBagContainerType InContainerType, const EPropertyBagPropertyType InValueType, const UObject* InValueTypeObject = nullptr)"
  },
  {
    "label": "AddContainerProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContainerProperty(const FName InName, const FPropertyBagContainerTypes InContainerTypes, const EPropertyBagPropertyType InValueType, UObject* InValueTypeObject)"
  },
  {
    "label": "AddProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddProperty(const FName InName, const FProperty* InSourceProperty)"
  },
  {
    "label": "ReplaceAllPropertiesAndValues()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "ReplaceAllPropertiesAndValues(const TConstArrayView<FPropertyBagPropertyDesc> InDescs, const TConstArrayView<TConstArrayView<uint8>> InValues)"
  },
  {
    "label": "RemovePropertiesByName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePropertiesByName(const TConstArrayView<FName> PropertiesToRemove)"
  },
  {
    "label": "RemovePropertyByName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePropertyByName(const FName PropertyToRemove)"
  },
  {
    "label": "MigrateToNewBagStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigrateToNewBagStruct(const UPropertyBag* NewBagStruct)"
  },
  {
    "label": "MigrateToNewBagInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigrateToNewBagInstance(const FInstancedPropertyBag& InNewBagInstance)"
  },
  {
    "label": "MigrateToNewBagInstanceWithOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigrateToNewBagInstanceWithOverrides(const FInstancedPropertyBag& InNewBagInstance, TConstArrayView<FGuid> OverriddenPropertyIDs)"
  },
  {
    "label": "MakeValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeValue(ValuePtr)"
  },
  {
    "label": "MakeError()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeError(EPropertyBagResult::TypeMismatch)"
  },
  {
    "label": "MakeValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeValue(nullptr)"
  },
  {
    "label": "MakeValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeValue(Object)"
  },
  {
    "label": "MakeError()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeError(EPropertyBagResult::TypeMismatch)"
  },
  {
    "label": "SetValueBool()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueBool(const FName Name, const bool bInValue)"
  },
  {
    "label": "SetValueByte()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueByte(const FName Name, const uint8 InValue)"
  },
  {
    "label": "SetValueInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueInt32(const FName Name, const int32 InValue)"
  },
  {
    "label": "SetValueUInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueUInt32(const FName Name, const uint32 InValue)"
  },
  {
    "label": "SetValueInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueInt64(const FName Name, const int64 InValue)"
  },
  {
    "label": "SetValueUInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueUInt64(const FName Name, const uint64 InValue)"
  },
  {
    "label": "SetValueFloat()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueFloat(const FName Name, const float InValue)"
  },
  {
    "label": "SetValueDouble()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueDouble(const FName Name, const double InValue)"
  },
  {
    "label": "SetValueName()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueName(const FName Name, const FName InValue)"
  },
  {
    "label": "SetValueString()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueString(const FName Name, const FString& InValue)"
  },
  {
    "label": "SetValueText()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueText(const FName Name, const FText& InValue)"
  },
  {
    "label": "SetValueEnum()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueEnum(const FName Name, const uint8 InValue, const UEnum* Enum)"
  },
  {
    "label": "SetValueStruct()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueStruct(const FName Name, FConstStructView InValue)"
  },
  {
    "label": "SetValueObject()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueObject(const FName Name, UObject* InValue)"
  },
  {
    "label": "SetValueClass()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueClass(const FName Name, UClass* InValue)"
  },
  {
    "label": "SetValueSoftPath()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueSoftPath(const FName Name, const FSoftObjectPath& InValue)"
  },
  {
    "label": "SetValueSerializedString()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueSerializedString(const FName Name, const FString& InValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValue(const FName Name, const FProperty* InSourceProperty, const void* InSourceContainerAddress)"
  },
  {
    "label": "GetMutableArrayRef()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult>)",
    "insertText": "GetMutableArrayRef(const FName Name)"
  },
  {
    "label": "GetMutableSetRef()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult>)",
    "insertText": "GetMutableSetRef(const FName Name)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "AddStructReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStructReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetPreloadDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPreloadDependencies(TArray<UObject*>& OutDeps)"
  },
  {
    "label": "MakeValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeValue(ValuePtr)"
  },
  {
    "label": "MakeError()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeError(EPropertyBagResult::TypeMismatch)"
  },
  {
    "label": "MakeValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeValue(nullptr)"
  },
  {
    "label": "MakeValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeValue(Object)"
  },
  {
    "label": "MakeError()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeError(EPropertyBagResult::TypeMismatch)"
  },
  {
    "label": "SetValueBool()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueBool(const int32 Index, const bool bInValue)"
  },
  {
    "label": "SetValueByte()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueByte(const int32 Index, const uint8 InValue)"
  },
  {
    "label": "SetValueInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueInt32(const int32 Index, const int32 InValue)"
  },
  {
    "label": "SetValueUInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueUInt32(const int32 Index, const uint32 InValue)"
  },
  {
    "label": "SetValueInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueInt64(const int32 Index, const int64 InValue)"
  },
  {
    "label": "SetValueUInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueUInt64(const int32 Index, const uint64 InValue)"
  },
  {
    "label": "SetValueFloat()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueFloat(const int32 Index, const float InValue)"
  },
  {
    "label": "SetValueDouble()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueDouble(const int32 Index, const double InValue)"
  },
  {
    "label": "SetValueName()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueName(const int32 Index, const FName InValue)"
  },
  {
    "label": "SetValueString()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueString(const int32 Index, const FString& InValue)"
  },
  {
    "label": "SetValueText()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueText(const int32 Index, const FText& InValue)"
  },
  {
    "label": "SetValueEnum()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueEnum(const int32 Index, const uint8 InValue, const UEnum* Enum)"
  },
  {
    "label": "SetValueStruct()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueStruct(const int32 Index, FConstStructView InValue)"
  },
  {
    "label": "SetValueObject()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueObject(const int32 Index, UObject* InValue)"
  },
  {
    "label": "SetValueClass()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueClass(const int32 Index, UClass* InValue)"
  },
  {
    "label": "SetValueSoftPath()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueSoftPath(const int32 Index, const FSoftObjectPath& InValue)"
  },
  {
    "label": "AddValueBool()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueBool(const bool bInValue)"
  },
  {
    "label": "AddValueByte()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueByte(const uint8 InValue)"
  },
  {
    "label": "AddValueInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueInt32(const int32 InValue)"
  },
  {
    "label": "AddValueUInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueUInt32(const uint32 InValue)"
  },
  {
    "label": "AddValueInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueInt64(const int64 InValue)"
  },
  {
    "label": "AddValueUInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueUInt64(const uint64 InValue)"
  },
  {
    "label": "AddValueFloat()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueFloat(const float InValue)"
  },
  {
    "label": "AddValueDouble()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueDouble(const double InValue)"
  },
  {
    "label": "AddValueName()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueName(const FName InValue)"
  },
  {
    "label": "AddValueString()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueString(const FString& InValue)"
  },
  {
    "label": "AddValueText()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueText(const FText& InValue)"
  },
  {
    "label": "AddValueEnum()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueEnum(const int64 InValue, const UEnum* Enum)"
  },
  {
    "label": "AddValueStruct()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueStruct(FConstStructView InValue)"
  },
  {
    "label": "AddValueObject()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueObject(UObject* InValue)"
  },
  {
    "label": "AddValueClass()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueClass(UClass* InValue)"
  },
  {
    "label": "AddValueSoftPath()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueSoftPath(const FSoftObjectPath& InValue)"
  },
  {
    "label": "MakeError()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeError(EPropertyBagResult::PropertyNotFound)"
  }
]