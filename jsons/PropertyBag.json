[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UPropertyBag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPropertyBag"
  },
  {
    "label": "FPropertyBagArrayRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyBagArrayRef"
  },
  {
    "label": "FPropertyBagSetRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyBagSetRef"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FInstancedPropertyBag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedPropertyBag"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / TVariantMeta . h \" # include \" StructUtils / StructView . h \" # include \" Templates / ValueOrError . h \" # include \" Containers / StaticArray . h \" # include \" PropertyBag . generated . h \")",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (None)",
    "insertText": "UMETA(Hidden), Bool, Byte, Int32, Int64, Float, Double, Name, String, Text, Enum UMETA(Hidden), Struct UMETA(Hidden), Object UMETA(Hidden), SoftObject UMETA(Hidden), Class UMETA(Hidden), SoftClass UMETA(Hidden), UInt32, UInt64, Count UMETA(Hidden)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (None,Array,Set,Count)",
    "insertText": "UMETA(Hidden)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FPropertyBagContainerTypes()"
  },
  {
    "label": "FPropertyBagContainerTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyBagContainerTypes(EPropertyBagContainerType ContainerType)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(ContainerType)"
  },
  {
    "label": "FPropertyBagContainerTypes()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "FPropertyBagContainerTypes(const std::initializer_list<EPropertyBagContainerType>& InTypes)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} } } bool)",
    "insertText": "Add(const EPropertyBagContainerType PropertyBagContainerType)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (Types [ NumContainers ] = PropertyBagContainerType ; NumContainers + + ; return true ; } } return false ; } void)",
    "insertText": "Reset()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (Type = EPropertyBagContainerType::None ; } NumContainers = 0 ; } bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "PopHead()",
    "kind": "Method",
    "detail": "Function (} EPropertyBagContainerType)",
    "insertText": "PopHead()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FPropertyBagContainerTypes& ContainerTypesData)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (ContainerTypesData .)",
    "insertText": "Serialize(Ar)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FPropertyBagContainerTypes& PropertyBagContainerTypes)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (} EPropertyBagContainerType*)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (} EPropertyBagContainerType*)",
    "insertText": "end()"
  },
  {
    "label": "MaxNestedTypes()",
    "kind": "Method",
    "detail": "Function (} protected : uint8 MaxNestedTypes = 2 ; TStaticArray<EPropertyBagContainerType,MaxNestedTypes> Types = TStaticArray<EPropertyBagContainerType,)",
    "insertText": "MaxNestedTypes(InPlace, EPropertyBagContainerType::None)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (uint8 NumContainers = 0 ; } ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FPropertyBagPropertyDescMetaData()"
  },
  {
    "label": "FPropertyBagPropertyDescMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyBagPropertyDescMetaData(const FName InKey, const FString& InValue) : Key(InKey) , Value(InValue)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const TArrayView<const FPropertyBagPropertyDescMetaData>& MetaData)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32 Hash =)",
    "insertText": "GetTypeHash(MetaData.Num())"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(PropertyDescMetaData))"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} return Hash ; } uint32)",
    "insertText": "GetTypeHash(const TArray<FPropertyBagPropertyDescMetaData>& MetaData)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FPropertyBagPropertyDesc()"
  },
  {
    "label": "FPropertyBagPropertyDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyBagPropertyDesc(const FName InName, const FProperty* InSourceProperty)"
  },
  {
    "label": "FPropertyBagPropertyDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyBagPropertyDesc(const FName InName, const EPropertyBagPropertyType InValueType, const UObject* InValueTypeObject = nullptr) : ValueTypeObject(InValueTypeObject) , Name(InName) , ValueType(InValueType)"
  },
  {
    "label": "FPropertyBagPropertyDesc()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPropertyBagPropertyDesc(const FName InName, const EPropertyBagContainerType InContainerType, const EPropertyBagPropertyType InValueType, const UObject* InValueTypeObject = nullptr) : ValueTypeObject(InValueTypeObject) , Name(InName) , ValueType(InValueType) , ContainerTypes(InContainerType)"
  },
  {
    "label": "FPropertyBagPropertyDesc()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPropertyBagPropertyDesc(const FName InName, const FPropertyBagContainerTypes& InNestedContainers, const EPropertyBagPropertyType InValueType, UObject* InValueTypeObject = nullptr) : ValueTypeObject(InValueTypeObject) , Name(InName) , ValueType(InValueType) , ContainerTypes(InNestedContainers)"
  },
  {
    "label": "CompatibleType()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CompatibleType(const FPropertyBagPropertyDesc& Other)"
  },
  {
    "label": "IsNumericType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNumericType()"
  },
  {
    "label": "IsUnsignedNumericType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUnsignedNumericType()"
  },
  {
    "label": "IsNumericFloatType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNumericFloatType()"
  },
  {
    "label": "IsObjectType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsObjectType()"
  },
  {
    "label": "IsClassType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassType()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FInstancedPropertyBag()"
  },
  {
    "label": "FInstancedPropertyBag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInstancedPropertyBag(const FInstancedPropertyBag& Other)"
  },
  {
    "label": "FInstancedPropertyBag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInstancedPropertyBag(FInstancedPropertyBag&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FInstancedPropertyBag&)",
    "insertText": "operator(const FInstancedPropertyBag& InOther)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FInstancedPropertyBag&)",
    "insertText": "operator(FInstancedPropertyBag&& InOther)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "InitializeFromBagStruct()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitializeFromBagStruct(const UPropertyBag* NewBagStruct)"
  },
  {
    "label": "CopyMatchingValuesByID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyMatchingValuesByID(const FInstancedPropertyBag& NewDescs)"
  },
  {
    "label": "GetNumPropertiesInBag()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumPropertiesInBag()"
  },
  {
    "label": "AddProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddProperties(const TConstArrayView<FPropertyBagPropertyDesc> Descs)"
  },
  {
    "label": "AddProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddProperty(const FName InName, const EPropertyBagPropertyType InValueType, const UObject* InValueTypeObject = nullptr)"
  },
  {
    "label": "AddContainerProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContainerProperty(const FName InName, const EPropertyBagContainerType InContainerType, const EPropertyBagPropertyType InValueType, const UObject* InValueTypeObject = nullptr)"
  },
  {
    "label": "AddContainerProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContainerProperty(const FName InName, const FPropertyBagContainerTypes InContainerTypes, const EPropertyBagPropertyType InValueType, UObject* InValueTypeObject)"
  },
  {
    "label": "AddProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddProperty(const FName InName, const FProperty* InSourceProperty)"
  },
  {
    "label": "ReplaceAllPropertiesAndValues()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "ReplaceAllPropertiesAndValues(const TConstArrayView<FPropertyBagPropertyDesc> InDescs, const TConstArrayView<TConstArrayView<uint8>> InValues)"
  },
  {
    "label": "RemovePropertiesByName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePropertiesByName(const TConstArrayView<FName> PropertiesToRemove)"
  },
  {
    "label": "RemovePropertyByName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePropertyByName(const FName PropertyToRemove)"
  },
  {
    "label": "MigrateToNewBagStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigrateToNewBagStruct(const UPropertyBag* NewBagStruct)"
  },
  {
    "label": "MigrateToNewBagInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigrateToNewBagInstance(const FInstancedPropertyBag& InNewBagInstance)"
  },
  {
    "label": "MigrateToNewBagInstanceWithOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigrateToNewBagInstanceWithOverrides(const FInstancedPropertyBag& InNewBagInstance, TConstArrayView<FGuid> OverriddenPropertyIDs)"
  },
  {
    "label": "GetPropertyBagStruct()",
    "kind": "Method",
    "detail": "Function (const UPropertyBag*)",
    "insertText": "GetPropertyBagStruct()"
  },
  {
    "label": "FindPropertyDescByID()",
    "kind": "Method",
    "detail": "Function (const FPropertyBagPropertyDesc*)",
    "insertText": "FindPropertyDescByID(const FGuid ID)"
  },
  {
    "label": "FindPropertyDescByName()",
    "kind": "Method",
    "detail": "Function (const FPropertyBagPropertyDesc*)",
    "insertText": "FindPropertyDescByName(const FName Name)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FConstStructView)",
    "insertText": "GetValue()"
  },
  {
    "label": "GetValueByte()",
    "kind": "Method",
    "detail": "Function (TValueOrError<uint8,EPropertyBagResult>)",
    "insertText": "GetValueByte(const FName Name)"
  },
  {
    "label": "GetValueInt32()",
    "kind": "Method",
    "detail": "Function (TValueOrError<int32,EPropertyBagResult>)",
    "insertText": "GetValueInt32(const FName Name)"
  },
  {
    "label": "GetValueUInt32()",
    "kind": "Method",
    "detail": "Function (TValueOrError<uint32,EPropertyBagResult>)",
    "insertText": "GetValueUInt32(const FName Name)"
  },
  {
    "label": "GetValueInt64()",
    "kind": "Method",
    "detail": "Function (TValueOrError<int64,EPropertyBagResult>)",
    "insertText": "GetValueInt64(const FName Name)"
  },
  {
    "label": "GetValueUInt64()",
    "kind": "Method",
    "detail": "Function (TValueOrError<uint64,EPropertyBagResult>)",
    "insertText": "GetValueUInt64(const FName Name)"
  },
  {
    "label": "GetValueFloat()",
    "kind": "Method",
    "detail": "Function (TValueOrError<float,EPropertyBagResult>)",
    "insertText": "GetValueFloat(const FName Name)"
  },
  {
    "label": "GetValueDouble()",
    "kind": "Method",
    "detail": "Function (TValueOrError<double,EPropertyBagResult>)",
    "insertText": "GetValueDouble(const FName Name)"
  },
  {
    "label": "GetValueName()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FName,EPropertyBagResult>)",
    "insertText": "GetValueName(const FName Name)"
  },
  {
    "label": "GetValueString()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FString,EPropertyBagResult>)",
    "insertText": "GetValueString(const FName Name)"
  },
  {
    "label": "GetValueText()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FText,EPropertyBagResult>)",
    "insertText": "GetValueText(const FName Name)"
  },
  {
    "label": "GetValueEnum()",
    "kind": "Method",
    "detail": "Function (TValueOrError<uint8,EPropertyBagResult>)",
    "insertText": "GetValueEnum(const FName Name, const UEnum* RequestedEnum)"
  },
  {
    "label": "GetValueStruct()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FStructView,EPropertyBagResult>)",
    "insertText": "GetValueStruct(const FName Name, const UScriptStruct* RequestedStruct = nullptr)"
  },
  {
    "label": "GetValueObject()",
    "kind": "Method",
    "detail": "Function (TValueOrError<UObject*,EPropertyBagResult>)",
    "insertText": "GetValueObject(const FName Name, const UClass* RequestedClass = nullptr)"
  },
  {
    "label": "GetValueClass()",
    "kind": "Method",
    "detail": "Function (TValueOrError<UClass*,EPropertyBagResult>)",
    "insertText": "GetValueClass(const FName Name)"
  },
  {
    "label": "GetValueSoftPath()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FSoftObjectPath,EPropertyBagResult>)",
    "insertText": "GetValueSoftPath(const FName Name)"
  },
  {
    "label": "GetValueSerializedString()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FString,EPropertyBagResult>)",
    "insertText": "GetValueSerializedString(const FName Name)"
  },
  {
    "label": "GetValueEnum()",
    "kind": "Method",
    "detail": "Function (template<T> TValueOrError<T,EPropertyBagResult>)",
    "insertText": "GetValueEnum(const FName Name)"
  },
  {
    "label": "GetValueEnum()",
    "kind": "Method",
    "detail": "Function (TValueOrError<uint8,EPropertyBagResult> Result =)",
    "insertText": "GetValueEnum(Name, StaticEnum<T>())"
  },
  {
    "label": "MakeValue()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "MakeValue(static_cast<T>(Result.GetValue()))"
  },
  {
    "label": "GetValueStruct()",
    "kind": "Method",
    "detail": "Function (} template<T> TValueOrError<T*,EPropertyBagResult>)",
    "insertText": "GetValueStruct(const FName Name)"
  },
  {
    "label": "GetValueStruct()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FStructView,EPropertyBagResult> Result =)",
    "insertText": "GetValueStruct(Name, TBaseStructure<T>::Get())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(T* ValuePtr = Result.GetValue().GetPtr<T>())"
  },
  {
    "label": "MakeError()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "MakeError(EPropertyBagResult::TypeMismatch)"
  },
  {
    "label": "GetValueObject()",
    "kind": "Method",
    "detail": "Function (} template<T> TValueOrError<T*,EPropertyBagResult>)",
    "insertText": "GetValueObject(const FName Name)"
  },
  {
    "label": "GetValueObject()",
    "kind": "Method",
    "detail": "Function (TValueOrError<UObject*,EPropertyBagResult> Result =)",
    "insertText": "GetValueObject(Name, T::StaticClass())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(Result.GetValue() == nullptr)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(T* Object = Cast<T>(Result.GetValue()))"
  },
  {
    "label": "SetValueBool()",
    "kind": "Method",
    "detail": "Function (} EPropertyBagResult)",
    "insertText": "SetValueBool(const FName Name, const bool bInValue)"
  },
  {
    "label": "SetValueByte()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueByte(const FName Name, const uint8 InValue)"
  },
  {
    "label": "SetValueInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueInt32(const FName Name, const int32 InValue)"
  },
  {
    "label": "SetValueUInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueUInt32(const FName Name, const uint32 InValue)"
  },
  {
    "label": "SetValueInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueInt64(const FName Name, const int64 InValue)"
  },
  {
    "label": "SetValueUInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueUInt64(const FName Name, const uint64 InValue)"
  },
  {
    "label": "SetValueFloat()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueFloat(const FName Name, const float InValue)"
  },
  {
    "label": "SetValueDouble()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueDouble(const FName Name, const double InValue)"
  },
  {
    "label": "SetValueName()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueName(const FName Name, const FName InValue)"
  },
  {
    "label": "SetValueString()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueString(const FName Name, const FString& InValue)"
  },
  {
    "label": "SetValueText()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueText(const FName Name, const FText& InValue)"
  },
  {
    "label": "SetValueEnum()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueEnum(const FName Name, const uint8 InValue, const UEnum* Enum)"
  },
  {
    "label": "SetValueStruct()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueStruct(const FName Name, FConstStructView InValue)"
  },
  {
    "label": "SetValueObject()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueObject(const FName Name, UObject* InValue)"
  },
  {
    "label": "SetValueClass()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueClass(const FName Name, UClass* InValue)"
  },
  {
    "label": "SetValueSoftPath()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueSoftPath(const FName Name, const FSoftObjectPath& InValue)"
  },
  {
    "label": "SetValueSerializedString()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueSerializedString(const FName Name, const FString& InValue)"
  },
  {
    "label": "SetValueEnum()",
    "kind": "Method",
    "detail": "Function (template<T> EPropertyBagResult)",
    "insertText": "SetValueEnum(const FName Name, const T InValue)"
  },
  {
    "label": "SetValueStruct()",
    "kind": "Method",
    "detail": "Function (} template<T> EPropertyBagResult)",
    "insertText": "SetValueStruct(const FName Name, const T& InValue)"
  },
  {
    "label": "SetValueObject()",
    "kind": "Method",
    "detail": "Function (} template<T> EPropertyBagResult)",
    "insertText": "SetValueObject(const FName Name, T* InValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (} EPropertyBagResult)",
    "insertText": "SetValue(const FName Name, const FProperty* InSourceProperty, const void* InSourceContainerAddress)"
  },
  {
    "label": "GetMutableArrayRef()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FPropertyBagArrayRef,EPropertyBagResult>)",
    "insertText": "GetMutableArrayRef(const FName Name)"
  },
  {
    "label": "GetArrayRef()",
    "kind": "Method",
    "detail": "Function (TValueOrError<const FPropertyBagArrayRef,EPropertyBagResult>)",
    "insertText": "GetArrayRef(const FName Name)"
  },
  {
    "label": "GetMutableSetRef()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FPropertyBagSetRef,EPropertyBagResult>)",
    "insertText": "GetMutableSetRef(const FName Name)"
  },
  {
    "label": "GetSetRef()",
    "kind": "Method",
    "detail": "Function (TValueOrError<const FPropertyBagSetRef,EPropertyBagResult>)",
    "insertText": "GetSetRef(const FName Name)"
  },
  {
    "label": "Identical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Identical(const FInstancedPropertyBag* Other, uint32 PortFlags)"
  },
  {
    "label": "AddStructReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStructReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetPreloadDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPreloadDependencies(TArray<UObject*>& OutDeps)"
  },
  {
    "label": "GetValueAddress()",
    "kind": "Method",
    "detail": "Function (protected : const void*)",
    "insertText": "GetValueAddress(const FPropertyBagPropertyDesc* Desc)"
  },
  {
    "label": "GetMutableValueAddress()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetMutableValueAddress(const FPropertyBagPropertyDesc* Desc)"
  },
  {
    "label": "GetAddress()",
    "kind": "Method",
    "detail": "Function (} ; template<> struct TStructOpsTypeTraits<FInstancedPropertyBag> : public TStructOpsTypeTraitsBase2<FInstancedPropertyBag> { enum { WithIdentical = true,WithSerializer = true,WithAddStructReferencedObjects = true,WithGetPreloadDependencies = true,} ; } ; class FPropertyBagArrayRef : public FScriptArrayHelper { FPropertyBagPropertyDesc ValueDesc ; const void*)",
    "insertText": "GetAddress(const int32 Index)"
  },
  {
    "label": "GetMutableAddress()",
    "kind": "Method",
    "detail": "Function (} void*)",
    "insertText": "GetMutableAddress(const int32 Index)"
  },
  {
    "label": "FPropertyBagArrayRef()",
    "kind": "Method",
    "detail": "Function (} public :)",
    "insertText": "FPropertyBagArrayRef(const FPropertyBagPropertyDesc& InDesc, const void* InArray) : FScriptArrayHelper(CastField<FArrayProperty>(InDesc.CachedProperty), InArray)"
  },
  {
    "label": "FArrayProperty()",
    "kind": "Method",
    "detail": "Function (const FArrayProperty* ArrayProperty = CastField<)",
    "insertText": "FArrayProperty(InDesc.CachedProperty)"
  },
  {
    "label": "GetValueBool()",
    "kind": "Method",
    "detail": "Function (} TValueOrError<bool,EPropertyBagResult>)",
    "insertText": "GetValueBool(const int32 Index)"
  },
  {
    "label": "GetValueByte()",
    "kind": "Method",
    "detail": "Function (TValueOrError<uint8,EPropertyBagResult>)",
    "insertText": "GetValueByte(const int32 Index)"
  },
  {
    "label": "GetValueInt32()",
    "kind": "Method",
    "detail": "Function (TValueOrError<int32,EPropertyBagResult>)",
    "insertText": "GetValueInt32(const int32 Index)"
  },
  {
    "label": "GetValueUInt32()",
    "kind": "Method",
    "detail": "Function (TValueOrError<uint32,EPropertyBagResult>)",
    "insertText": "GetValueUInt32(const int32 Index)"
  },
  {
    "label": "GetValueInt64()",
    "kind": "Method",
    "detail": "Function (TValueOrError<int64,EPropertyBagResult>)",
    "insertText": "GetValueInt64(const int32 Index)"
  },
  {
    "label": "GetValueUInt64()",
    "kind": "Method",
    "detail": "Function (TValueOrError<uint64,EPropertyBagResult>)",
    "insertText": "GetValueUInt64(const int32 Index)"
  },
  {
    "label": "GetValueFloat()",
    "kind": "Method",
    "detail": "Function (TValueOrError<float,EPropertyBagResult>)",
    "insertText": "GetValueFloat(const int32 Index)"
  },
  {
    "label": "GetValueDouble()",
    "kind": "Method",
    "detail": "Function (TValueOrError<double,EPropertyBagResult>)",
    "insertText": "GetValueDouble(const int32 Index)"
  },
  {
    "label": "GetValueName()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FName,EPropertyBagResult>)",
    "insertText": "GetValueName(const int32 Index)"
  },
  {
    "label": "GetValueString()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FString,EPropertyBagResult>)",
    "insertText": "GetValueString(const int32 Index)"
  },
  {
    "label": "GetValueText()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FText,EPropertyBagResult>)",
    "insertText": "GetValueText(const int32 Index)"
  },
  {
    "label": "GetValueEnum()",
    "kind": "Method",
    "detail": "Function (TValueOrError<uint8,EPropertyBagResult>)",
    "insertText": "GetValueEnum(const int32 Index, const UEnum* RequestedEnum)"
  },
  {
    "label": "GetValueStruct()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FStructView,EPropertyBagResult>)",
    "insertText": "GetValueStruct(const int32 Index, const UScriptStruct* RequestedStruct = nullptr)"
  },
  {
    "label": "GetValueObject()",
    "kind": "Method",
    "detail": "Function (TValueOrError<UObject*,EPropertyBagResult>)",
    "insertText": "GetValueObject(const int32 Index, const UClass* RequestedClass = nullptr)"
  },
  {
    "label": "GetValueClass()",
    "kind": "Method",
    "detail": "Function (TValueOrError<UClass*,EPropertyBagResult>)",
    "insertText": "GetValueClass(const int32 Index)"
  },
  {
    "label": "GetValueSoftPath()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FSoftObjectPath,EPropertyBagResult>)",
    "insertText": "GetValueSoftPath(const int32 Index)"
  },
  {
    "label": "GetValueEnum()",
    "kind": "Method",
    "detail": "Function (template<T> TValueOrError<T,EPropertyBagResult>)",
    "insertText": "GetValueEnum(const int32 Index)"
  },
  {
    "label": "GetValueEnum()",
    "kind": "Method",
    "detail": "Function (TValueOrError<uint8,EPropertyBagResult> Result =)",
    "insertText": "GetValueEnum(Index, StaticEnum<T>())"
  },
  {
    "label": "GetValueStruct()",
    "kind": "Method",
    "detail": "Function (} template<T> TValueOrError<T*,EPropertyBagResult>)",
    "insertText": "GetValueStruct(const int32 Index)"
  },
  {
    "label": "GetValueStruct()",
    "kind": "Method",
    "detail": "Function (TValueOrError<FStructView,EPropertyBagResult> Result =)",
    "insertText": "GetValueStruct(Index, TBaseStructure<T>::Get())"
  },
  {
    "label": "GetValueObject()",
    "kind": "Method",
    "detail": "Function (} template<T> TValueOrError<T*,EPropertyBagResult>)",
    "insertText": "GetValueObject(const int32 Index)"
  },
  {
    "label": "GetValueObject()",
    "kind": "Method",
    "detail": "Function (TValueOrError<UObject*,EPropertyBagResult> Result =)",
    "insertText": "GetValueObject(Index, T::StaticClass())"
  },
  {
    "label": "GetMutableNestedArrayRef()",
    "kind": "Method",
    "detail": "Function (} TValueOrError<FPropertyBagArrayRef,EPropertyBagResult>)",
    "insertText": "GetMutableNestedArrayRef(const int32 Index = 0)"
  },
  {
    "label": "GetNestedArrayRef()",
    "kind": "Method",
    "detail": "Function (TValueOrError<const FPropertyBagArrayRef,EPropertyBagResult>)",
    "insertText": "GetNestedArrayRef(const int32 Index = 0)"
  },
  {
    "label": "SetValueBool()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueBool(const int32 Index, const bool bInValue)"
  },
  {
    "label": "SetValueByte()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueByte(const int32 Index, const uint8 InValue)"
  },
  {
    "label": "SetValueInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueInt32(const int32 Index, const int32 InValue)"
  },
  {
    "label": "SetValueUInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueUInt32(const int32 Index, const uint32 InValue)"
  },
  {
    "label": "SetValueInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueInt64(const int32 Index, const int64 InValue)"
  },
  {
    "label": "SetValueUInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueUInt64(const int32 Index, const uint64 InValue)"
  },
  {
    "label": "SetValueFloat()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueFloat(const int32 Index, const float InValue)"
  },
  {
    "label": "SetValueDouble()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueDouble(const int32 Index, const double InValue)"
  },
  {
    "label": "SetValueName()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueName(const int32 Index, const FName InValue)"
  },
  {
    "label": "SetValueString()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueString(const int32 Index, const FString& InValue)"
  },
  {
    "label": "SetValueText()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueText(const int32 Index, const FText& InValue)"
  },
  {
    "label": "SetValueEnum()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueEnum(const int32 Index, const uint8 InValue, const UEnum* Enum)"
  },
  {
    "label": "SetValueStruct()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueStruct(const int32 Index, FConstStructView InValue)"
  },
  {
    "label": "SetValueObject()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueObject(const int32 Index, UObject* InValue)"
  },
  {
    "label": "SetValueClass()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueClass(const int32 Index, UClass* InValue)"
  },
  {
    "label": "SetValueSoftPath()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "SetValueSoftPath(const int32 Index, const FSoftObjectPath& InValue)"
  },
  {
    "label": "SetValueEnum()",
    "kind": "Method",
    "detail": "Function (template<T> EPropertyBagResult)",
    "insertText": "SetValueEnum(const int32 Index, const T InValue)"
  },
  {
    "label": "SetValueStruct()",
    "kind": "Method",
    "detail": "Function (} template<T> EPropertyBagResult)",
    "insertText": "SetValueStruct(const int32 Index, const T& InValue)"
  },
  {
    "label": "SetValueObject()",
    "kind": "Method",
    "detail": "Function (} template<T> EPropertyBagResult)",
    "insertText": "SetValueObject(const int32 Index, T* InValue)"
  },
  {
    "label": "FPropertyBagSetRef()",
    "kind": "Method",
    "detail": "Function (} } ; class FPropertyBagSetRef : private FScriptSetHelper { public :)",
    "insertText": "FPropertyBagSetRef(const FPropertyBagPropertyDesc& InDesc, const void* InSet) : FScriptSetHelper(CastField<FSetProperty>(InDesc.CachedProperty), InSet)"
  },
  {
    "label": "FSetProperty()",
    "kind": "Method",
    "detail": "Function (const FSetProperty* SetProperty = CastField<)",
    "insertText": "FSetProperty(InDesc.CachedProperty)"
  },
  {
    "label": "AddValueBool()",
    "kind": "Method",
    "detail": "Function (} EPropertyBagResult)",
    "insertText": "AddValueBool(const bool bInValue)"
  },
  {
    "label": "AddValueByte()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueByte(const uint8 InValue)"
  },
  {
    "label": "AddValueInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueInt32(const int32 InValue)"
  },
  {
    "label": "AddValueUInt32()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueUInt32(const uint32 InValue)"
  },
  {
    "label": "AddValueInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueInt64(const int64 InValue)"
  },
  {
    "label": "AddValueUInt64()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueUInt64(const uint64 InValue)"
  },
  {
    "label": "AddValueFloat()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueFloat(const float InValue)"
  },
  {
    "label": "AddValueDouble()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueDouble(const double InValue)"
  },
  {
    "label": "AddValueName()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueName(const FName InValue)"
  },
  {
    "label": "AddValueString()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueString(const FString& InValue)"
  },
  {
    "label": "AddValueText()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueText(const FText& InValue)"
  },
  {
    "label": "AddValueEnum()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueEnum(const int64 InValue, const UEnum* Enum)"
  },
  {
    "label": "AddValueStruct()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueStruct(FConstStructView InValue)"
  },
  {
    "label": "AddValueObject()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueObject(UObject* InValue)"
  },
  {
    "label": "AddValueClass()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueClass(UClass* InValue)"
  },
  {
    "label": "AddValueSoftPath()",
    "kind": "Method",
    "detail": "Function (EPropertyBagResult)",
    "insertText": "AddValueSoftPath(const FSoftObjectPath& InValue)"
  },
  {
    "label": "AddValueEnum()",
    "kind": "Method",
    "detail": "Function (template<T> EPropertyBagResult)",
    "insertText": "AddValueEnum(const T InValue)"
  },
  {
    "label": "AddValueStruct()",
    "kind": "Method",
    "detail": "Function (} template<T> EPropertyBagResult)",
    "insertText": "AddValueStruct(const T& InValue)"
  },
  {
    "label": "AddValueObject()",
    "kind": "Method",
    "detail": "Function (} template<T> EPropertyBagResult)",
    "insertText": "AddValueObject(T* InValue)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} template<T> EPropertyBagResult)",
    "insertText": "Remove(const T& Value)"
  },
  {
    "label": "FindElementIndex()",
    "kind": "Method",
    "detail": "Function (int32 ElementIndex =)",
    "insertText": "FindElementIndex(&Value)"
  },
  {
    "label": "MakeValue()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "MakeValue(FindElementIndex(&Value) != INDEX_NONE)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Num()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} private : FPropertyBagPropertyDesc ValueDesc ; template<T> EPropertyBagResult)",
    "insertText": "Add(const T& Value)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(Transient)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() static const UPropertyBag* GetOrCreateFromDescs(const TConstArrayView<FPropertyBagPropertyDesc> InPropertyDescs, const TCHAR* PrefixName = nullptr)"
  },
  {
    "label": "GetPropertyDescs()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FPropertyBagPropertyDesc>)",
    "insertText": "GetPropertyDescs()"
  },
  {
    "label": "FindPropertyDescByPropertyName()",
    "kind": "Method",
    "detail": "Function (const FPropertyBagPropertyDesc*)",
    "insertText": "FindPropertyDescByPropertyName(const FName PropertyName)"
  },
  {
    "label": "FindPropertyDescByProperty()",
    "kind": "Method",
    "detail": "Function (const FPropertyBagPropertyDesc*)",
    "insertText": "FindPropertyDescByProperty(const FProperty* Property)"
  },
  {
    "label": "ContainsUserDefinedStruct()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "ContainsUserDefinedStruct(const UUserDefinedStruct* UserDefinedStruct)"
  },
  {
    "label": "DecrementRefCount()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "DecrementRefCount()"
  },
  {
    "label": "IncrementRefCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementRefCount()"
  },
  {
    "label": "InitializeStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeStruct(void* Dest, int32 ArrayDim = 1)"
  },
  {
    "label": "DestroyStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyStruct(void* Dest, int32 ArrayDim = 1)"
  },
  {
    "label": "FinishDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishDestroy()"
  }
]