[
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "UMovieSceneSubSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSubSection"
  },
  {
    "label": "FMovieSceneEvaluationTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationTrack"
  },
  {
    "label": "FMovieSceneFrameRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneFrameRange"
  },
  {
    "label": "FMovieSceneTemplateGenerationLedger",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTemplateGenerationLedger"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FMovieSceneSubSectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSubSectionData"
  },
  {
    "label": "FMovieSceneEvaluationTemplateSerialNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationTemplateSerialNumber"
  },
  {
    "label": "FMovieSceneEvaluationTemplate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationTemplate"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Evaluation / MovieSceneEvaluationTrack . h \" # include \" Evaluation / MovieSceneEvaluationTree . h \" # include \" Evaluation / MovieSceneSegment . h \" # include \" Evaluation / MovieSceneTrackIdentifier . h \" # include \" Misc / Guid . h \" # include \" MovieSceneFrameMigration . h \" # include \" MovieSceneTrack . h \" # include \" Serialization / Archive . h \" # include \" UObject / Class . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ScriptMacros . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" MovieSceneEvaluationTemplate . generated . h \" class UMovieSceneSequence ; class UMovieSceneSubSection ; struct FMovieSceneEvaluationTrack ; struct FMovieSceneFrameRange ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: MOVIESCENE_API FMovieSceneTrackIdentifier FindTrackIdentifier(const FGuid& InSignature)"
  },
  {
    "label": "AddTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTrack(const FGuid& InSignature, FMovieSceneTrackIdentifier Identifier)"
  },
  {
    "label": "ContainsSubSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsSubSection(const FGuid& InSignature)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneSubSectionData() : Flags(ESectionEvaluationFlags::None)"
  },
  {
    "label": "FMovieSceneSubSectionData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneSubSectionData(UMovieSceneSubSection& InSubSection, const FGuid& InObjectBindingId, ESectionEvaluationFlags InFlags)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FMovieSceneSubSectionData& In)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneEvaluationTemplateSerialNumber() : Value(0)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetValue()"
  },
  {
    "label": "FMovieSceneEvaluationTemplateSerialNumber()",
    "kind": "Method",
    "detail": "Function (+ + Value ; } private : struct FMovieSceneEvaluationTemplate ;)",
    "insertText": "FMovieSceneEvaluationTemplateSerialNumber(const FMovieSceneEvaluationTemplateSerialNumber&) : Value(0)"
  },
  {
    "label": "FMovieSceneEvaluationTemplateSerialNumber()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneEvaluationTemplateSerialNumber(FMovieSceneEvaluationTemplateSerialNumber&&) : Value(0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FMovieSceneEvaluationTemplateSerialNumber&)",
    "insertText": "operator(const FMovieSceneEvaluationTemplateSerialNumber&)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: FMovieSceneEvaluationTrack* FindTrack(FMovieSceneTrackIdentifier Identifier)"
  },
  {
    "label": "FindTrack()",
    "kind": "Method",
    "detail": "Function (} const FMovieSceneEvaluationTrack*)",
    "insertText": "FindTrack(FMovieSceneTrackIdentifier Identifier)"
  },
  {
    "label": "FindTrack()",
    "kind": "Method",
    "detail": "Function (} FMovieSceneEvaluationTrack*)",
    "insertText": "FindTrack(const FGuid& InSignature)"
  },
  {
    "label": "IsTrackStale()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsTrackStale(FMovieSceneTrackIdentifier Identifier)"
  },
  {
    "label": "AddTrack()",
    "kind": "Method",
    "detail": "Function (} FMovieSceneTrackIdentifier)",
    "insertText": "AddTrack(const FGuid& InSignature, FMovieSceneEvaluationTrack&& InTrack)"
  },
  {
    "label": "RemoveTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTrack(const FGuid& InSignature)"
  },
  {
    "label": "GetTracks()",
    "kind": "Method",
    "detail": "Function (const TMap<FMovieSceneTrackIdentifier,FMovieSceneEvaluationTrack>&)",
    "insertText": "GetTracks()"
  },
  {
    "label": "GetStaleTracks()",
    "kind": "Method",
    "detail": "Function (const TMap<FMovieSceneTrackIdentifier,FMovieSceneEvaluationTrack>&)",
    "insertText": "GetStaleTracks()"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "PurgeStaleTracks()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PurgeStaleTracks()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (StaleTracks .)",
    "insertText": "Reset()"
  },
  {
    "label": "GetLedger()",
    "kind": "Method",
    "detail": "Function (} public : const FMovieSceneTemplateGenerationLedger&)",
    "insertText": "GetLedger()"
  }
]