[
  {
    "label": "FakePeriodicVideoTrackSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakePeriodicVideoTrackSource"
  },
  {
    "label": "FakePeriodicVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_TEST_FAKE_PERIODIC_VIDEO_TRACK_SOURCE_H_ # define PC_TEST_FAKE_PERIODIC_VIDEO_TRACK_SOURCE_H_ # include \" pc / test / fake_periodic_video_source . h \" # include \" pc / video_track_source . h \" namespace webrtc { class FakePeriodicVideoTrackSource : public VideoTrackSource { public :)",
    "insertText": "FakePeriodicVideoTrackSource(bool remote) : FakePeriodicVideoTrackSource(FakePeriodicVideoSource::Config(), remote)"
  },
  {
    "label": "FakePeriodicVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FakePeriodicVideoTrackSource(FakePeriodicVideoSource::Config config, bool remote) : VideoTrackSource(remote), source_(config)"
  },
  {
    "label": "FakePeriodicVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FakePeriodicVideoTrackSource()"
  },
  {
    "label": "fake_periodic_source()",
    "kind": "Method",
    "detail": "Function (const FakePeriodicVideoSource&)",
    "insertText": "fake_periodic_source()"
  }
]