[
  {
    "label": "FDebugDisplayInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugDisplayInfo"
  },
  {
    "label": "FIndenter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIndenter"
  },
  {
    "label": "FDebugDisplayInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class FDebugDisplayInfo { private : TArray<FName> DisplayNames ; TArray<FName> ToggledCategories ; public :)",
    "insertText": "FDebugDisplayInfo(const TArray<FName>& InDisplayNames, const TArray<FName>& InToggledCategories) : DisplayNames(InDisplayNames), ToggledCategories(InToggledCategories)"
  },
  {
    "label": "IsDisplayOn()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsDisplayOn(FName DisplayName)"
  },
  {
    "label": "IsCategoryToggledOn()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCategoryToggledOn(FName Category, bool bDefaultsToOn)"
  },
  {
    "label": "NumDisplayNames()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "NumDisplayNames()"
  },
  {
    "label": "FIndenter()",
    "kind": "Method",
    "detail": "Function (} } ; class FIndenter { float& Indent ; public :)",
    "insertText": "FIndenter(float& InIndent) : Indent(InIndent)"
  },
  {
    "label": "FIndenter()",
    "kind": "Method",
    "detail": "Function (Indent + = 4 . 0 f ; } ~)",
    "insertText": "FIndenter()"
  }
]