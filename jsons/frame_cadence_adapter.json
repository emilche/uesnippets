[
  {
    "label": "FrameCadenceAdapterInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameCadenceAdapterInterface"
  },
  {
    "label": "ZeroHertzModeParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ZeroHertzModeParams"
  },
  {
    "label": "Callback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Callback"
  },
  {
    "label": "kFrameRateAveragingWindowSizeMs()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_FRAME_CADENCE_ADAPTER_H_ # define VIDEO_FRAME_CADENCE_ADAPTER_H_ # include<memory> # include \" absl / base / attributes . h \" # include \" api / field_trials_view . h \" # include \" api / task_queue / task_queue_base . h \" # include \" api / units / time_delta . h \" # include \" api / video / video_frame . h \" # include \" api / video / video_sink_interface . h \" # include \" rtc_base / synchronization / mutex . h \" # include \" rtc_base / thread_annotations . h \" # include \" system_wrappers / include / clock . h \" namespace webrtc { class FrameCadenceAdapterInterface : public rtc::VideoSinkInterface<VideoFrame> { public : int64_t)",
    "insertText": "kFrameRateAveragingWindowSizeMs(1000 / 30)"
  },
  {
    "label": "Millis()",
    "kind": "Method",
    "detail": "Function (TimeDelta kZeroHertzIdleRepeatRatePeriod =)",
    "insertText": "Millis(1000)"
  },
  {
    "label": "Callback()",
    "kind": "Method",
    "detail": "Function (int kOnDiscardedFrameRefreshFramePeriod = 3 ; struct ZeroHertzModeParams { size_t num_simulcast_layers = 0 ; } ; class Callback { public : ~)",
    "insertText": "Callback()"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrame(Timestamp post_time, int frames_scheduled_for_processing, const VideoFrame& frame)"
  },
  {
    "label": "OnDiscardedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDiscardedFrame()"
  },
  {
    "label": "RequestRefreshFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRefreshFrame()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; std::unique_ptr<FrameCadenceAdapterInterface>)",
    "insertText": "Create(Clock* clock, TaskQueueBase* queue, const FieldTrialsView& field_trials)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(Callback* callback)"
  },
  {
    "label": "SetZeroHertzModeEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZeroHertzModeEnabled(absl::optional<ZeroHertzModeParams> params)"
  },
  {
    "label": "GetInputFrameRateFps()",
    "kind": "Method",
    "detail": "Function (absl::optional<uint32_t>)",
    "insertText": "GetInputFrameRateFps()"
  },
  {
    "label": "UpdateFrameRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFrameRate()"
  },
  {
    "label": "UpdateLayerQualityConvergence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLayerQualityConvergence(size_t spatial_index, bool converged)"
  },
  {
    "label": "UpdateLayerStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLayerStatus(size_t spatial_index, bool enabled)"
  },
  {
    "label": "ProcessKeyFrameRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessKeyFrameRequest()"
  }
]