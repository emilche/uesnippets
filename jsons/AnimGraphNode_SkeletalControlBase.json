[
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FAnimNode_SkeletalControlBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SkeletalControlBase"
  },
  {
    "label": "HActor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HActor"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "derived",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "derived"
  },
  {
    "label": "ANIMGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMGRAPH_API"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FAnimNode_SkeletalControlBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SkeletalControlBase"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "ValueType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueType"
  },
  {
    "label": "ValueType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueType"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "GetWidgetCoordinateSystem()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWidgetCoordinateSystem(const USkeletalMeshComponent* SkelComp)"
  },
  {
    "label": "GetWidgetMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWidgetMode(const USkeletalMeshComponent* SkelComp)"
  },
  {
    "label": "ChangeToNextWidgetMode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ChangeToNextWidgetMode(const USkeletalMeshComponent* SkelComp, int32 CurWidgetMode)"
  },
  {
    "label": "FindSelectedBone()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "FindSelectedBone()"
  },
  {
    "label": "SetDefaultValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultValue(const FName InDefaultValueName, const FVector& InValue)"
  },
  {
    "label": "GetDefaultValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDefaultValue(const FName UpdateDefaultValueName, FVector& OutVec)"
  },
  {
    "label": "VecValue()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "VecValue(InValue.Pitch, InValue.Yaw, InValue.Roll)"
  },
  {
    "label": "ConvertCSVectorToBoneSpace()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertCSVectorToBoneSpace(const USkeletalMeshComponent* SkelComp, FVector& InCSVector, FCSPose<FCompactHeapPose>& MeshBases, const FName& BoneName, const EBoneControlSpace Space)"
  },
  {
    "label": "ConvertCSRotationToBoneSpace()",
    "kind": "Method",
    "detail": "Function (FQuat)",
    "insertText": "ConvertCSRotationToBoneSpace(const USkeletalMeshComponent* SkelComp, FRotator& InCSRotator, FCSPose<FCompactHeapPose>& MeshBases, const FName& BoneName, const EBoneControlSpace Space)"
  },
  {
    "label": "ConvertWidgetLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertWidgetLocation(const USkeletalMeshComponent* InSkelComp, FCSPose<FCompactHeapPose>& InMeshBases, const FName& BoneName, const FVector& InLocation, const EBoneControlSpace Space)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(UAnimGraphNode_SkeletalControlBase::GetNode, return nullptr;)"
  }
]