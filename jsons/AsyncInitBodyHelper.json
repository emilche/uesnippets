[
  {
    "label": "FChaosAsyncInitBodyWriteScopeLock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosAsyncInitBodyWriteScopeLock"
  },
  {
    "label": "FChaosAsyncInitBodyReadScopeLock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosAsyncInitBodyReadScopeLock"
  },
  {
    "label": "FChaosAsyncInitBodyWriteScopeLock()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / ScopeExit . h \" namespace Chaos { namespace CVars { bool bEnableAsyncInitBody ; } namespace Private { template<T> struct FChaosAsyncInitBodyWriteScopeLock {)",
    "insertText": "FChaosAsyncInitBodyWriteScopeLock(T& InLock) : Lock(Chaos::CVars::bEnableAsyncInitBody ? &InLock : nullptr)"
  },
  {
    "label": "WriteLock()",
    "kind": "Method",
    "detail": "Function (Lock ->)",
    "insertText": "WriteLock()"
  },
  {
    "label": "FChaosAsyncInitBodyWriteScopeLock()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FChaosAsyncInitBodyWriteScopeLock()"
  },
  {
    "label": "WriteUnlock()",
    "kind": "Method",
    "detail": "Function (Lock ->)",
    "insertText": "WriteUnlock()"
  },
  {
    "label": "FChaosAsyncInitBodyReadScopeLock()",
    "kind": "Method",
    "detail": "Function (} } T* Lock ; } ; template<T> struct FChaosAsyncInitBodyReadScopeLock {)",
    "insertText": "FChaosAsyncInitBodyReadScopeLock(T& InLock) : Lock(Chaos::CVars::bEnableAsyncInitBody ? &InLock : nullptr)"
  },
  {
    "label": "ReadLock()",
    "kind": "Method",
    "detail": "Function (Lock ->)",
    "insertText": "ReadLock()"
  },
  {
    "label": "FChaosAsyncInitBodyReadScopeLock()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FChaosAsyncInitBodyReadScopeLock()"
  },
  {
    "label": "ReadUnlock()",
    "kind": "Method",
    "detail": "Function (Lock ->)",
    "insertText": "ReadUnlock()"
  }
]