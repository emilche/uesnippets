[
  {
    "label": "Key",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Key"
  },
  {
    "label": "Mapped",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Mapped"
  },
  {
    "label": "Compare",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Compare"
  },
  {
    "label": "Key",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Key"
  },
  {
    "label": "Mapped",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Mapped"
  },
  {
    "label": "Compare",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Compare"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "end()"
  },
  {
    "label": "rbegin()",
    "kind": "Method",
    "detail": "Function (reverse_iterator)",
    "insertText": "rbegin()"
  },
  {
    "label": "rend()",
    "kind": "Method",
    "detail": "Function (reverse_iterator)",
    "insertText": "rend()"
  },
  {
    "label": "find()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "find(const K&)"
  },
  {
    "label": "equal_range()",
    "kind": "Method",
    "detail": "Function (iterator>)",
    "insertText": "equal_range(const K&)"
  },
  {
    "label": "lower_bound()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "lower_bound(const K&)"
  },
  {
    "label": "upper_bound()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "upper_bound(const K&)"
  }
]