[
  {
    "label": "FMeshProxyTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshProxyTool"
  },
  {
    "label": "UMeshProxySettingsObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshProxySettingsObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "SMeshProxyDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMeshProxyDialog"
  },
  {
    "label": "FThirdPartyMeshProxyTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThirdPartyMeshProxyTool"
  },
  {
    "label": "SThirdPartyMeshProxyDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SThirdPartyMeshProxyDialog"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" MergeProxyUtils / Utils . h \" # include \" MergeProxyUtils / SMeshProxyCommonDialog . h \" class FMeshProxyTool ; class UMeshProxySettingsObject ; class UObject ; class SMeshProxyDialog : public SMeshProxyCommonDialog { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SMeshProxyDialog)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: SMeshProxyDialog()"
  },
  {
    "label": "SMeshProxyDialog()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SMeshProxyDialog()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, FMeshProxyTool* InTool)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : FMeshProxyTool* Tool ; UMeshProxySettingsObject* ProxySettings ; } ; class FThirdPartyMeshProxyTool ; class SThirdPartyMeshProxyDialog : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SThirdPartyMeshProxyDialog)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: void Construct(const FArguments& InArgs, FThirdPartyMeshProxyTool* InTool)"
  },
  {
    "label": "GetScreenSize()",
    "kind": "Method",
    "detail": "Function (protected : TOptional<int32>)",
    "insertText": "GetScreenSize()"
  },
  {
    "label": "ScreenSizeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScreenSizeChanged(int32 NewValue)"
  },
  {
    "label": "GetRecalculateNormals()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetRecalculateNormals()"
  },
  {
    "label": "SetRecalculateNormals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRecalculateNormals(ECheckBoxState NewValue)"
  },
  {
    "label": "GetHardAngleThreshold()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetHardAngleThreshold()"
  },
  {
    "label": "HardAngleThresholdEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HardAngleThresholdEnabled()"
  },
  {
    "label": "HardAngleThresholdChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HardAngleThresholdChanged(float NewValue)"
  },
  {
    "label": "GetMergeDistance()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "GetMergeDistance()"
  },
  {
    "label": "MergeDistanceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeDistanceChanged(int32 NewValue)"
  },
  {
    "label": "SetTextureResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextureResolution(TSharedPtr<FString> NewSelection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "SetLightMapResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightMapResolution(TSharedPtr<FString> NewSelection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "GetExportNormalMap()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetExportNormalMap()"
  },
  {
    "label": "SetExportNormalMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExportNormalMap(ECheckBoxState NewValue)"
  },
  {
    "label": "GetExportMetallicMap()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetExportMetallicMap()"
  },
  {
    "label": "SetExportMetallicMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExportMetallicMap(ECheckBoxState NewValue)"
  },
  {
    "label": "GetExportRoughnessMap()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetExportRoughnessMap()"
  },
  {
    "label": "SetExportRoughnessMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExportRoughnessMap(ECheckBoxState NewValue)"
  },
  {
    "label": "GetExportSpecularMap()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetExportSpecularMap()"
  },
  {
    "label": "SetExportSpecularMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExportSpecularMap(ECheckBoxState NewValue)"
  },
  {
    "label": "CreateLayout()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CreateLayout()"
  },
  {
    "label": "FindTextureResolutionEntryIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindTextureResolutionEntryIndex(int32 InResolution)"
  },
  {
    "label": "GetPropertyToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPropertyToolTipText(const FName& PropertyName)"
  }
]