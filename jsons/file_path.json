[
  {
    "label": "SafeBaseName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SafeBaseName"
  },
  {
    "label": "Pickle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Pickle"
  },
  {
    "label": "PickleIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PickleIterator"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "documentation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "documentation"
  },
  {
    "label": "hash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash"
  },
  {
    "label": "log_file_path()",
    "kind": "Method",
    "detail": "Function (FilePath)",
    "insertText": "log_file_path(kLogFileName)"
  },
  {
    "label": "FILE_PATH_LITERAL()",
    "kind": "Method",
    "detail": "Function (FILE_PATH_USES_WIN_SEPARATORS)",
    "insertText": "FILE_PATH_LITERAL(\"/\")"
  },
  {
    "label": "FilePath()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FilePath(StringPieceType path)"
  },
  {
    "label": "IsSeparator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSeparator(CharType character)"
  },
  {
    "label": "FromASCII()",
    "kind": "Method",
    "detail": "Function (FilePath)",
    "insertText": "FromASCII(StringPiece ascii)"
  },
  {
    "label": "FromUTF8Unsafe()",
    "kind": "Method",
    "detail": "Function (FilePath)",
    "insertText": "FromUTF8Unsafe(StringPiece utf8)"
  },
  {
    "label": "FromUTF16Unsafe()",
    "kind": "Method",
    "detail": "Function (FilePath)",
    "insertText": "FromUTF16Unsafe(StringPiece16 utf16)"
  },
  {
    "label": "ReadFromPickle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadFromPickle(PickleIterator* iter)"
  },
  {
    "label": "CompareIgnoreCase()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CompareIgnoreCase(StringPieceType string1,\n                               StringPieceType string2)"
  },
  {
    "label": "GetHFSDecomposedForm()",
    "kind": "Method",
    "detail": "Function (StringType)",
    "insertText": "GetHFSDecomposedForm(StringPieceType string)"
  },
  {
    "label": "HFSFastUnicodeCompare()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "HFSFastUnicodeCompare(StringPieceType string1,\n                                   StringPieceType string2)"
  },
  {
    "label": "StripTrailingSeparatorsInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StripTrailingSeparatorsInternal()"
  }
]