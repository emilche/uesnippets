[
  {
    "label": "FRichCurve",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRichCurve"
  },
  {
    "label": "FKeyDrawParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyDrawParams"
  },
  {
    "label": "FMovieSceneChannel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannel"
  },
  {
    "label": "FMovieSceneChannelProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannelProxy"
  },
  {
    "label": "FSequencerChannelPaintArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerChannelPaintArgs"
  },
  {
    "label": "FSequencerPasteEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerPasteEnvironment"
  },
  {
    "label": "ISequencerChannelInterface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ISequencerChannelInterface"
  },
  {
    "label": "FMovieSceneChannelMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannelMetaData"
  },
  {
    "label": "FMovieSceneClipboardEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneClipboardEnvironment"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FCurveModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveModel"
  },
  {
    "label": "FStructOnScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructOnScope"
  },
  {
    "label": "ISequencerSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencerSection"
  },
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "FMovieSceneClipboardBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneClipboardBuilder"
  },
  {
    "label": "FMovieSceneClipboardKeyTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneClipboardKeyTrack"
  },
  {
    "label": "FSequencerSectionPainter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerSectionPainter"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "IKeyArea()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Math / Color . h \" # include \" UObject / ObjectKey . h \" # include \" UObject / NameTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Containers / ArrayView . h \" # include \" Curves / KeyHandle . h \" # include \" MovieSceneCommonHelpers . h \" # include \" Channels / MovieSceneChannelHandle . h \" struct FRichCurve ; struct FKeyDrawParams ; struct FMovieSceneChannel ; struct FMovieSceneChannelProxy ; struct FSequencerChannelPaintArgs ; struct FSequencerPasteEnvironment ; struct ISequencerChannelInterface ; struct FMovieSceneChannelMetaData ; struct FMovieSceneClipboardEnvironment ; struct FGeometry ; class SWidget ; class ISequencer ; class FCurveModel ; class FStructOnScope ; class ISequencerSection ; class UMovieSceneSection ; class FMovieSceneClipboardBuilder ; class FMovieSceneClipboardKeyTrack ; class FSequencerSectionPainter ; class IKeyArea : public TSharedFromThis<IKeyArea> { public : uint32 TreeSerialNumber ;)",
    "insertText": "IKeyArea(TWeakPtr<ISequencerSection> InSection, FMovieSceneChannelHandle InChannel)"
  },
  {
    "label": "Reinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reinitialize(TWeakPtr<ISequencerSection> InSection, FMovieSceneChannelHandle InChannel)"
  },
  {
    "label": "FindChannelEditorInterface()",
    "kind": "Method",
    "detail": "Function (public : ISequencerChannelInterface*)",
    "insertText": "FindChannelEditorInterface()"
  },
  {
    "label": "GetChannelTypeName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetChannelTypeName()"
  },
  {
    "label": "GetChannel()",
    "kind": "Method",
    "detail": "Function (} const FMovieSceneChannelHandle&)",
    "insertText": "GetChannel()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetName()"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(FName InName)"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (TOptional<FLinearColor>)",
    "insertText": "GetColor()"
  },
  {
    "label": "GetOwningObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetOwningObject()"
  },
  {
    "label": "GetSectionInterface()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISequencerSection>)",
    "insertText": "GetSectionInterface()"
  },
  {
    "label": "ShouldShowCurve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowCurve()"
  },
  {
    "label": "AddOrUpdateKey()",
    "kind": "Method",
    "detail": "Function (public : FKeyHandle)",
    "insertText": "AddOrUpdateKey(FFrameNumber Time, const FGuid& ObjectBindingID, ISequencer& InSequencer)"
  },
  {
    "label": "DuplicateKey()",
    "kind": "Method",
    "detail": "Function (FKeyHandle)",
    "insertText": "DuplicateKey(FKeyHandle InKeyHandle)"
  },
  {
    "label": "Lowest()",
    "kind": "Method",
    "detail": "Function (FFrameNumber Time = TNumericLimits<int32)",
    "insertText": "Lowest()"
  },
  {
    "label": "GetKeyTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKeyTimes(TArrayView<const FKeyHandle>(&InKeyHandle, 1), TArrayView<FFrameNumber>(&Time, 1))"
  },
  {
    "label": "GetKeyInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKeyInfo(&OutHandles, nullptr, WithinRange)"
  },
  {
    "label": "GetKeyTimes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetKeyTimes(TArray<FFrameNumber>& OutTimes, const TRange<FFrameNumber>& WithinRange = TRange<FFrameNumber>::All())"
  },
  {
    "label": "GetKeyInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKeyInfo(nullptr, &OutTimes, WithinRange)"
  },
  {
    "label": "GetKeyInfo()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetKeyInfo(TArray<FKeyHandle>* OutHandles, TArray<FFrameNumber>* OutTimes, const TRange<FFrameNumber>& WithinRange = TRange<FFrameNumber>::All())"
  },
  {
    "label": "SetKeyTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyTime(FKeyHandle InKeyHandle, FFrameNumber InKeyTime)"
  },
  {
    "label": "SetKeyTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyTimes(TArrayView<const FKeyHandle>(&InKeyHandle, 1), TArrayView<const FFrameNumber>(&InKeyTime, 1))"
  },
  {
    "label": "SetKeyTimes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetKeyTimes(TArrayView<const FKeyHandle> InKeyHandles, TArrayView<const FFrameNumber> InKeyTimes)"
  },
  {
    "label": "DrawKeys()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "DrawKeys(TArrayView<const FKeyHandle> InKeyHandles, TArrayView<FKeyDrawParams> OutKeyDrawParams)"
  },
  {
    "label": "CopyKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyKeys(FMovieSceneClipboardBuilder& ClipboardBuilder, TArrayView<const FKeyHandle> KeyMask)"
  },
  {
    "label": "DrawExtra()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DrawExtra(const FSequencerChannelPaintArgs& PaintArgs, int32 LayerId)"
  },
  {
    "label": "PasteKeys()",
    "kind": "Method",
    "detail": "Function (TArray<FKeyHandle>)",
    "insertText": "PasteKeys(const FMovieSceneClipboardKeyTrack& KeyTrack, const FMovieSceneClipboardEnvironment& SrcEnvironment, const FSequencerPasteEnvironment& DstEnvironment)"
  },
  {
    "label": "CreateCurveEditorModel()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FCurveModel>)",
    "insertText": "CreateCurveEditorModel(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "GetRichCurve()",
    "kind": "Method",
    "detail": "Function (public : FRichCurve*)",
    "insertText": "GetRichCurve()"
  },
  {
    "label": "CanCreateKeyEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateKeyEditor()"
  },
  {
    "label": "CreateKeyEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateKeyEditor(TWeakPtr<ISequencer> Sequencer, const FGuid& ObjectBindingID)"
  }
]