[
  {
    "label": "FRichCurve",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRichCurve"
  },
  {
    "label": "FKeyDrawParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyDrawParams"
  },
  {
    "label": "FMovieSceneChannel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannel"
  },
  {
    "label": "FMovieSceneChannelProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannelProxy"
  },
  {
    "label": "FSequencerChannelPaintArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerChannelPaintArgs"
  },
  {
    "label": "FSequencerPasteEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerPasteEnvironment"
  },
  {
    "label": "ISequencerChannelInterface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ISequencerChannelInterface"
  },
  {
    "label": "FMovieSceneChannelMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannelMetaData"
  },
  {
    "label": "FMovieSceneClipboardEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneClipboardEnvironment"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FCurveModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveModel"
  },
  {
    "label": "FStructOnScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructOnScope"
  },
  {
    "label": "ISequencerSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencerSection"
  },
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "FMovieSceneClipboardBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneClipboardBuilder"
  },
  {
    "label": "FMovieSceneClipboardKeyTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneClipboardKeyTrack"
  },
  {
    "label": "FSequencerSectionPainter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerSectionPainter"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "where",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "where"
  },
  {
    "label": "Reinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reinitialize(TWeakPtr<ISequencerSection> InSection, FMovieSceneChannelHandle InChannel)"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(FName InName)"
  },
  {
    "label": "AddOrUpdateKey()",
    "kind": "Method",
    "detail": "Function (FKeyHandle)",
    "insertText": "AddOrUpdateKey(FFrameNumber Time, const FGuid& ObjectBindingID, ISequencer& InSequencer)"
  },
  {
    "label": "DrawKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawKeys(TArrayView<const FKeyHandle> InKeyHandles, TArrayView<FKeyDrawParams> OutKeyDrawParams)"
  },
  {
    "label": "PasteKeys()",
    "kind": "Method",
    "detail": "Function (TArray<FKeyHandle>)",
    "insertText": "PasteKeys(const FMovieSceneClipboardKeyTrack& KeyTrack, const FMovieSceneClipboardEnvironment& SrcEnvironment, const FSequencerPasteEnvironment& DstEnvironment)"
  },
  {
    "label": "CreateKeyEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateKeyEditor(TWeakPtr<ISequencer> Sequencer, const FGuid& ObjectBindingID)"
  }
]