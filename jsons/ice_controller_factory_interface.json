[
  {
    "label": "IceControllerFactoryArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IceControllerFactoryArgs"
  },
  {
    "label": "IceControllerFactoryInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IceControllerFactoryInterface"
  },
  {
    "label": "IceTransportState()",
    "kind": "Method",
    "detail": "Function (# ifndef P2P_BASE_ICE_CONTROLLER_FACTORY_INTERFACE_H_ # define P2P_BASE_ICE_CONTROLLER_FACTORY_INTERFACE_H_ # include<memory> # include<string> # include \" p2p / base / ice_controller_interface . h \" # include \" p2p / base / ice_transport_internal . h \" namespace cricket { struct IceControllerFactoryArgs { std::function<)",
    "insertText": "IceTransportState()"
  },
  {
    "label": "IceRole()",
    "kind": "Method",
    "detail": "Function (std::function<)",
    "insertText": "IceRole()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (std::function<)",
    "insertText": "bool(const Connection*)"
  },
  {
    "label": "IceControllerFactoryInterface()",
    "kind": "Method",
    "detail": "Function (const IceFieldTrials* ice_field_trials ; std::string ice_controller_field_trials ; } ; class IceControllerFactoryInterface { public : ~)",
    "insertText": "IceControllerFactoryInterface()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<IceControllerInterface>)",
    "insertText": "Create(const IceControllerFactoryArgs& args)"
  }
]