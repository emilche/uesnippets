[
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FVisualLoggerTimeSliderArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualLoggerTimeSliderArgs"
  },
  {
    "label": "FVisualLoggerTimeSliderController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVisualLoggerTimeSliderController"
  },
  {
    "label": "members",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "members"
  },
  {
    "label": "FScrubRangeToScreen",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScrubRangeToScreen"
  },
  {
    "label": "FDrawTickArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDrawTickArgs"
  },
  {
    "label": "FVisualLoggerTimeSliderController()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVisualLoggerTimeSliderController(const FVisualLoggerTimeSliderArgs& InArgs)"
  },
  {
    "label": "SetTimesliderArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimesliderArgs(const FVisualLoggerTimeSliderArgs& InArgs)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown( SWidget& WidgetOwner, const FGeometry& MyGeometry, const FPointerEvent& MouseEvent )"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp( SWidget& WidgetOwner, const FGeometry& MyGeometry, const FPointerEvent& MouseEvent )"
  },
  {
    "label": "OnMouseMove()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseMove( SWidget& WidgetOwner, const FGeometry& MyGeometry, const FPointerEvent& MouseEvent )"
  },
  {
    "label": "OnMouseWheel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseWheel( SWidget& WidgetOwner, const FGeometry& MyGeometry, const FPointerEvent& MouseEvent )"
  },
  {
    "label": "CommitScrubPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitScrubPosition(double NewValue, bool bIsScrubbing )"
  },
  {
    "label": "SetExternalScrollbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExternalScrollbar(TSharedRef<SScrollBar> Scrollbar)"
  },
  {
    "label": "SetTimeRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeRange(double MinValue, double MaxValue)"
  },
  {
    "label": "SetClampRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClampRange(double MinValue, double MaxValue)"
  },
  {
    "label": "HorizontalScrollBar_OnUserScrolled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HorizontalScrollBar_OnUserScrolled(float ScrollOffset)"
  }
]