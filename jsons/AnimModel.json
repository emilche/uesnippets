[
  {
    "label": "FAnimTimelineTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimTimelineTrack"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "UEditorAnimBaseObj",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorAnimBaseObj"
  },
  {
    "label": "FAnimModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimModel"
  },
  {
    "label": "FSnapType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSnapType"
  },
  {
    "label": "FSnapTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSnapTime"
  },
  {
    "label": "FAnimModel()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FAnimModel(const TSharedRef<IPersonaPreviewScene>& InPreviewScene, const TSharedRef<IEditableSkeleton>& InEditableSkeleton, const TSharedRef<FUICommandList>& InCommandList)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "SetViewRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewRange(TRange<double> InRange)"
  },
  {
    "label": "HandleViewRangeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleViewRangeChanged(TRange<double> InRange, EViewRangeInterpolation InInterpolation)"
  },
  {
    "label": "HandleWorkingRangeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWorkingRangeChanged(TRange<double> InRange)"
  },
  {
    "label": "ClearTrackSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTrackSelection()"
  },
  {
    "label": "SetTrackSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTrackSelected(const TSharedRef<FAnimTimelineTrack>& InTrack, bool bIsSelected)"
  },
  {
    "label": "SelectObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectObjects(const TArray<UObject*>& Objects)"
  },
  {
    "label": "ClearDetailsView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDetailsView()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FAnimModel\")"
  },
  {
    "label": "RecalculateSequenceLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecalculateSequenceLength()"
  },
  {
    "label": "SetEditableTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditableTime(int32 TimeIndex, double Time, bool bIsDragging)"
  },
  {
    "label": "ToggleSnap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleSnap(FName InSnapName)"
  },
  {
    "label": "BuildContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildContextMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "AddRootTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRootTrack(TSharedRef<FAnimTimelineTrack> InTrack)"
  },
  {
    "label": "ClearRootTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearRootTracks()"
  }
]