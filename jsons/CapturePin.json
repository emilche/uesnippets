[
  {
    "label": "FAVIWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAVIWriter"
  },
  {
    "label": "FCapturedFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCapturedFrame"
  },
  {
    "label": "virtual",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "virtual"
  },
  {
    "label": "FAVIWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAVIWriter"
  },
  {
    "label": "FCapturedFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCapturedFrame"
  },
  {
    "label": "FCapturePin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCapturePin"
  },
  {
    "label": "ProcessFrames()",
    "kind": "Method",
    "detail": "Function (TOptional<HRESULT>)",
    "insertText": "ProcessFrames()"
  },
  {
    "label": "FCapturePin()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FCapturePin(HRESULT *phr, CSource *pFilter, const FAVIWriter& InWriter)"
  },
  {
    "label": "DecideBufferSize()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "DecideBufferSize(IMemAllocator *pAlloc, ALLOCATOR_PROPERTIES *pRequest)"
  },
  {
    "label": "FillBuffer()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "FillBuffer(IMediaSample *pSample)"
  },
  {
    "label": "DoBufferProcessingLoop()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "DoBufferProcessingLoop(void)"
  },
  {
    "label": "SetMediaType()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "SetMediaType(const CMediaType *pMediaType)"
  },
  {
    "label": "CheckMediaType()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CheckMediaType(const CMediaType *pMediaType)"
  },
  {
    "label": "GetMediaType()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "GetMediaType(int32 iPosition, CMediaType *pmt)"
  }
]