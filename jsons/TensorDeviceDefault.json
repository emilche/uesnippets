[
  {
    "label": "DefaultDevice",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DefaultDevice"
  },
  {
    "label": "allocate()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_CXX11_TENSOR_TENSOR_DEVICE_DEFAULT_H # define EIGEN_CXX11_TENSOR_TENSOR_DEVICE_DEFAULT_H namespace Eigen { struct DefaultDevice { EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void*)",
    "insertText": "allocate(size_t num_bytes)"
  },
  {
    "label": "deallocate()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void)",
    "insertText": "deallocate(void* buffer)"
  },
  {
    "label": "aligned_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "aligned_free(buffer)"
  },
  {
    "label": "allocate_temp()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void*)",
    "insertText": "allocate_temp(size_t num_bytes)"
  },
  {
    "label": "deallocate_temp()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void)",
    "insertText": "deallocate_temp(void* buffer)"
  },
  {
    "label": "deallocate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deallocate(buffer)"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void)",
    "insertText": "memcpy(void* dst, const void* src, size_t n)"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memcpy(dst, src, n)"
  },
  {
    "label": "memcpyHostToDevice()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void)",
    "insertText": "memcpyHostToDevice(void* dst, const void* src, size_t n)"
  },
  {
    "label": "memcpyDeviceToHost()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void)",
    "insertText": "memcpyDeviceToHost(void* dst, const void* src, size_t n)"
  },
  {
    "label": "memset()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void)",
    "insertText": "memset(void* buffer, int c, size_t n)"
  },
  {
    "label": "memset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memset(buffer, c, n)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (} template<Type> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Type)",
    "insertText": "get(Type data)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if !)",
    "insertText": "defined(EIGEN_GPU_COMPILE_PHASE)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# elif)",
    "insertText": "defined(EIGEN_HIP_DEVICE_COMPILE)"
  },
  {
    "label": "firstLevelCacheSize()",
    "kind": "Method",
    "detail": "Function (# else return 3 2 ; # endif } EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE size_t)",
    "insertText": "firstLevelCacheSize()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if !)",
    "insertText": "defined(EIGEN_GPU_COMPILE_PHASE) && !defined(SYCL_DEVICE_ONLY) return l1CacheSize()"
  },
  {
    "label": "lastLevelCacheSize()",
    "kind": "Method",
    "detail": "Function (# else return 4 8* 1 0 2 4 ; # endif } EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE size_t)",
    "insertText": "lastLevelCacheSize()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if !)",
    "insertText": "defined(EIGEN_GPU_COMPILE_PHASE) && !defined(SYCL_DEVICE_ONLY) return l3CacheSize()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# elif)",
    "insertText": "defined(EIGEN_HIP_DEVICE_COMPILE) return firstLevelCacheSize()"
  },
  {
    "label": "majorDeviceVersion()",
    "kind": "Method",
    "detail": "Function (# endif } EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE int)",
    "insertText": "majorDeviceVersion()"
  }
]