[
  {
    "label": "FCategoryPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCategoryPropertyNode"
  },
  {
    "label": "FComplexPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComplexPropertyNode"
  },
  {
    "label": "FDetailTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailTreeNode"
  },
  {
    "label": "FEditConditionContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditConditionContext"
  },
  {
    "label": "FEditConditionExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditConditionExpression"
  },
  {
    "label": "FItemPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FItemPropertyNode"
  },
  {
    "label": "FNotifyHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNotifyHook"
  },
  {
    "label": "FObjectPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPropertyNode"
  },
  {
    "label": "FPropertyItemValueDataTrackerSlate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyItemValueDataTrackerSlate"
  },
  {
    "label": "FPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNode"
  },
  {
    "label": "FPropertyRestriction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyRestriction"
  },
  {
    "label": "FStructurePropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructurePropertyNode"
  },
  {
    "label": "IEditConstPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditConstPolicy"
  },
  {
    "label": "IArchetypePolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IArchetypePolicy"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "FPropertySettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertySettings"
  },
  {
    "label": "FAddressPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddressPair"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "FReadAddressListData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReadAddressListData"
  },
  {
    "label": "FReadAddressList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReadAddressList"
  },
  {
    "label": "FPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNode"
  },
  {
    "label": "FPropertyNodeInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyNodeInitParams"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EPropertyArrayChangeType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EPropertyArrayChangeType"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EPropertyDataValidationResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPropertyDataValidationResult"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FPropertyNodeEditStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNodeEditStack"
  },
  {
    "label": "FMemoryFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMemoryFrame"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNode"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "or"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "property",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "property"
  },
  {
    "label": "whose",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "whose"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "FComplexPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComplexPropertyNode"
  },
  {
    "label": "EPropertyType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPropertyType"
  },
  {
    "label": "as",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "as"
  },
  {
    "label": "FPropertySettings()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FPropertySettings()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "Initialize(const FPropertyNode* InNode, const UObject* InObj)"
  },
  {
    "label": "CommitChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitChanges()"
  },
  {
    "label": "InitializeInternal()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "InitializeInternal(const FPropertyNode* InNode, const UObject* InObj)"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "FPropertyNode()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyNode()"
  },
  {
    "label": "internally()",
    "kind": "Method",
    "detail": "Function (Node)",
    "insertText": "internally(used only derived classes to pass through variables that are common to all nodes\n\t * @param InitParams\tParameters for how the node should be initialized\n\t */\n\tvoid InitNode(const FPropertyNodeInitParams& InitParams)"
  },
  {
    "label": "RebuildChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildChildren()"
  },
  {
    "label": "MarkChildrenAsRebuilt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkChildrenAsRebuilt()"
  },
  {
    "label": "AddChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildNode(TSharedPtr<FPropertyNode> InNode)"
  },
  {
    "label": "ClearCachedReadAddresses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCachedReadAddresses(bool bRecursive = true)"
  },
  {
    "label": "EnsureDataIsValid()",
    "kind": "Method",
    "detail": "Function (EPropertyDataValidationResult)",
    "insertText": "EnsureDataIsValid()"
  },
  {
    "label": "SetNodeFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNodeFlags(const EPropertyNodeFlags::Type InFlags, const bool InOnOff)"
  },
  {
    "label": "FindChildPropertyNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyNode>)",
    "insertText": "FindChildPropertyNode(const FName InPropertyName, bool bRecurse = false)"
  },
  {
    "label": "GetChildNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetChildNode(const int32 ChildArrayIndex, TSharedPtr<FPropertyNode>& OutChildNode)"
  },
  {
    "label": "GetDiffersFromDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDiffersFromDefault()"
  },
  {
    "label": "GetResetToDefaultLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetResetToDefaultLabel()"
  },
  {
    "label": "IsReorderable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReorderable()"
  },
  {
    "label": "NotifyPreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPreChange(FProperty* PropertyAboutToChange, FNotifyHook* InNotifyHook)"
  },
  {
    "label": "NotifyPreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPreChange(FProperty* PropertyAboutToChange, FNotifyHook* InNotifyHook, const TSet<UObject*>& AffectedInstances)"
  },
  {
    "label": "NotifyPreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPreChange(FProperty* PropertyAboutToChange, FNotifyHook* InNotifyHook, TSet<UObject*>&& AffectedInstances)"
  },
  {
    "label": "NotifyPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPostChange(FPropertyChangedEvent& InPropertyChangedEvent, FNotifyHook* InNotifyHook)"
  },
  {
    "label": "SetOnRebuildChildren()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "SetOnRebuildChildren(const FSimpleDelegate& InOnRebuildChildren)"
  },
  {
    "label": "PropagatePropertyChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagatePropertyChange(UObject* ModifiedObject, const TCHAR* NewValue, const FString& PreviousValue)"
  },
  {
    "label": "PropagateContainerPropertyChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateContainerPropertyChange(UObject* ModifiedObject, const void* OriginalContainerAddr,\n\t\tEPropertyArrayChangeType::Type ChangeType, int32 Index, int32 SwapIndex = INDEX_NONE)"
  },
  {
    "label": "DuplicateArrayEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateArrayEntry(FProperty* NodeProperty, FScriptArrayHelper& ArrayHelper, int32 Index)"
  },
  {
    "label": "GatherInstancesAffectedByContainerPropertyChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherInstancesAffectedByContainerPropertyChange(UObject* ModifiedObject, const void* OriginalContainerAddr, EPropertyArrayChangeType::Type ChangeType, TArray<UObject*>& OutAffectedInstances)"
  },
  {
    "label": "PropagateContainerPropertyChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateContainerPropertyChange(UObject* ModifiedObject, const void* OriginalContainerAddr, const TArray<UObject*>& AffectedInstances,\n\t\tEPropertyArrayChangeType::Type ChangeType, int32 Index, int32 SwapIndex = INDEX_NONE)"
  },
  {
    "label": "FilterNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterNodes(const TArray<FString>& InFilterStrings, const bool bParentSeenDueToFiltering = false)"
  },
  {
    "label": "ProcessSeenFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessSeenFlags(const bool bParentAllowsVisible)"
  },
  {
    "label": "ProcessSeenFlagsForFavorites()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessSeenFlagsForFavorites()"
  },
  {
    "label": "RegisterArchetypePolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterArchetypePolicy(PropertyEditorPolicy::IArchetypePolicy* ArchetypePolicy)"
  },
  {
    "label": "UnregisterArchetypePolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterArchetypePolicy(PropertyEditorPolicy::IArchetypePolicy* ArchetypePolicy)"
  },
  {
    "label": "RegisterEditConstPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterEditConstPolicy(PropertyEditorPolicy::IEditConstPolicy* EditConstPolicy)"
  },
  {
    "label": "UnregisterEditConstPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterEditConstPolicy(PropertyEditorPolicy::IEditConstPolicy* EditConstPolicy)"
  },
  {
    "label": "IsPropertyEditConst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyEditConst(const FEditPropertyChain& PropertyChain, UObject* Object)"
  },
  {
    "label": "IsPropertyEditConst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyEditConst(const FProperty* Property, UObject* Object)"
  },
  {
    "label": "AddRestriction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRestriction(TSharedRef<const FPropertyRestriction> Restriction)"
  },
  {
    "label": "IsHidden()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsHidden(Value, nullptr)"
  },
  {
    "label": "IsDisabled()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsDisabled(Value, nullptr)"
  },
  {
    "label": "SetInstanceMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceMetaData(const FName& Key, const FString& Value)"
  },
  {
    "label": "InvalidateCachedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateCachedState()"
  },
  {
    "label": "GetDefaultValueAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultValueAsString(bool bUseDisplayName = true)"
  },
  {
    "label": "BroadcastPropertyResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPropertyResetToDefault()"
  },
  {
    "label": "ToggleEditConditionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleEditConditionState()"
  },
  {
    "label": "SetExpandedChildPropertyNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExpandedChildPropertyNodes(const TSet<FString>& InNodesToExpand)"
  },
  {
    "label": "SetIgnoreInstancedReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIgnoreInstancedReference()"
  },
  {
    "label": "MarkDestroyedRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDestroyedRecursive()"
  },
  {
    "label": "NotifyPreChangeInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPreChangeInternal(TSharedRef<FEditPropertyChain> PropertyChain, FProperty* PropertyAboutToChange, FNotifyHook* InNotifyHook)"
  },
  {
    "label": "DestroyTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyTree(const bool bInDestroySelf=true)"
  },
  {
    "label": "IsFilterAcceptable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFilterAcceptable(const TArray<FString>& InAcceptableNames, const TArray<FString>& InFilterStrings)"
  },
  {
    "label": "ExpandParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandParent( bool bInRecursive )"
  },
  {
    "label": "GetDiffersFromDefaultForObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDiffersFromDefaultForObject( FPropertyItemValueDataTrackerSlate& ValueTracker, FProperty* InProperty )"
  },
  {
    "label": "GetDefaultValueAsStringForObject()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultValueAsStringForObject( FPropertyItemValueDataTrackerSlate& ValueTracker, UObject* InObject, FProperty* InProperty, EValueAsStringMode Mode)"
  },
  {
    "label": "BroadcastPropertyChangedDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPropertyChangedDelegates()"
  },
  {
    "label": "BroadcastPropertyChangedDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPropertyChangedDelegates(const FPropertyChangedEvent& Event)"
  },
  {
    "label": "BroadcastPropertyPreChangeDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPropertyPreChangeDelegates()"
  },
  {
    "label": "UpdateEditConstState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEditConstState()"
  },
  {
    "label": "DoesChildPropertyRequireValidation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesChildPropertyRequireValidation(FProperty* InChildProp)"
  }
]