[
  {
    "label": "FInstanceHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceHandle"
  },
  {
    "label": "FRootInstanceHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootInstanceHandle"
  },
  {
    "label": "FInstanceHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" EntitySystem / MovieSceneComponentDebug . h \" namespace UE { namespace MovieScene { struct FInstanceHandle { uint16 InstanceID ; uint16 InstanceSerial ;)",
    "insertText": "FInstanceHandle() : InstanceID(uint16(-1)) , InstanceSerial(0)"
  },
  {
    "label": "FInstanceHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInstanceHandle(uint16 InInstanceID, uint16 InInstanceSerial) : InstanceID(InInstanceID) , InstanceSerial(InInstanceSerial)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(FInstanceHandle A, FInstanceHandle B)"
  },
  {
    "label": "FRootInstanceHandle()",
    "kind": "Method",
    "detail": "Function (} } ; struct FRootInstanceHandle : FInstanceHandle {)",
    "insertText": "FRootInstanceHandle()"
  },
  {
    "label": "FRootInstanceHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRootInstanceHandle(uint16 InInstanceID, uint16 InInstanceSerial) : FInstanceHandle(InInstanceID, InInstanceSerial)"
  }
]