[
  {
    "label": "DecodedFramesHistory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecodedFramesHistory"
  },
  {
    "label": "DecodedFramesHistory()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_UTILITY_DECODED_FRAMES_HISTORY_H_ # define MODULES_VIDEO_CODING_UTILITY_DECODED_FRAMES_HISTORY_H_ # include<stdint . h> # include<bitset> # include<vector> # include \" absl / types / optional . h \" # include \" api / video / encoded_frame . h \" namespace webrtc { namespace video_coding { class DecodedFramesHistory { public :)",
    "insertText": "DecodedFramesHistory(size_t window_size)"
  },
  {
    "label": "DecodedFramesHistory()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DecodedFramesHistory()"
  },
  {
    "label": "InsertDecoded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertDecoded(int64_t frame_id, uint32_t timestamp)"
  },
  {
    "label": "WasDecoded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WasDecoded(int64_t frame_id)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "GetLastDecodedFrameId()",
    "kind": "Method",
    "detail": "Function (absl::optional<int64_t>)",
    "insertText": "GetLastDecodedFrameId()"
  },
  {
    "label": "GetLastDecodedFrameTimestamp()",
    "kind": "Method",
    "detail": "Function (absl::optional<uint32_t>)",
    "insertText": "GetLastDecodedFrameTimestamp()"
  },
  {
    "label": "FrameIdToIndex()",
    "kind": "Method",
    "detail": "Function (private : int)",
    "insertText": "FrameIdToIndex(int64_t frame_id)"
  }
]