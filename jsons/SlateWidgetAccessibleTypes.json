[
  {
    "label": "FAccessibleWidgetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAccessibleWidgetData"
  },
  {
    "label": "FAccessibleWidgetData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / Accessibility / GenericAccessibleInterfaces . h \" # include \" Misc / Attribute . h \" struct FAccessibleWidgetData {)",
    "insertText": "FAccessibleWidgetData(EAccessibleBehavior InBehavior = EAccessibleBehavior::NotAccessible, EAccessibleBehavior InSummaryBehavior = EAccessibleBehavior::Auto, bool bInCanChildrenBeAccessible = true) : bCanChildrenBeAccessible(bInCanChildrenBeAccessible) , AccessibleBehavior(InBehavior) , AccessibleSummaryBehavior(InSummaryBehavior)"
  },
  {
    "label": "FAccessibleWidgetData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAccessibleWidgetData(const TAttribute<FText>& InAccessibleText, const TAttribute<FText>& InAccessibleSummaryText = TAttribute<FText>(), bool bInCanChildrenBeAccessible = true) : bCanChildrenBeAccessible(bInCanChildrenBeAccessible) , AccessibleBehavior(InAccessibleSummaryText.IsSet() ? EAccessibleBehavior::Custom : EAccessibleBehavior::NotAccessible) , AccessibleSummaryBehavior(InAccessibleSummaryText.IsSet() ? EAccessibleBehavior::Custom : EAccessibleBehavior::Auto) , AccessibleText(InAccessibleText) , AccessibleSummaryText(InAccessibleSummaryText)"
  }
]