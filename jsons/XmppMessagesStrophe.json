[
  {
    "label": "FXmppConnectionStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppConnectionStrophe"
  },
  {
    "label": "FStropheStanza",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStropheStanza"
  },
  {
    "label": "FXmppMessagesStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppMessagesStrophe"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FXmppMessagesStrophe()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" XmppMessages . h \" # include \" Containers / Ticker . h \" # include \" Containers / Queue . h \" # if WITH_XMPP_STROPHE class FXmppConnectionStrophe ; class FStropheStanza ; class FXmppMessagesStrophe : public IXmppMessages,public FTSTickerObjectBase { public :)",
    "insertText": "FXmppMessagesStrophe(FXmppConnectionStrophe& InConnectionManager)"
  },
  {
    "label": "FXmppMessagesStrophe()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FXmppMessagesStrophe()"
  },
  {
    "label": "ReceiveStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReceiveStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "HandleMessageStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleMessageStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "HandleMessageErrorStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleMessageErrorStanza(const FStropheStanza& ErrorStanza)"
  },
  {
    "label": "OnDisconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisconnect()"
  },
  {
    "label": "OnReconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReconnect()"
  },
  {
    "label": "SendMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendMessage(const FXmppUserJid& RecipientId, const FString& Type, const FString& Payload, bool bPayloadIsSerializedJson = false)"
  },
  {
    "label": "SendMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendMessage(const FXmppUserJid& RecipientId, const FString& Type, const TSharedRef<class FJsonObject>& Payload)"
  },
  {
    "label": "OnReceiveMessage()",
    "kind": "Method",
    "detail": "Function (FOnXmppMessageReceived&)",
    "insertText": "OnReceiveMessage()"
  },
  {
    "label": "OnMessageReceived()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnMessageReceived(TUniquePtr<FXmppMessage>&& Message)"
  },
  {
    "label": "CleanupMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupMessages()"
  }
]