[
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "USequencerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USequencerSettings"
  },
  {
    "label": "SSequencerStretchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerStretchBox"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / Input / NumericTypeInterface . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Input / SNumericEntryBox . h \" # include \" Misc / QualifiedFrameTime . h \" class FSequencer ; class USequencerSettings ; class SSequencerStretchBox : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSequencerStretchBox)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, const TSharedRef<FSequencer>& InSequencer, USequencerSettings& InSettings, const TSharedRef<INumericTypeInterface<double>>& InNumericTypeInterface)"
  },
  {
    "label": "ToggleVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleVisibility()"
  },
  {
    "label": "OnStretchButtonClicked()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "OnStretchButtonClicked()"
  },
  {
    "label": "OnShrinkButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnShrinkButtonClicked()"
  },
  {
    "label": "OnStretchCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStretchCommitted(double Value, ETextCommit::Type CommitType)"
  },
  {
    "label": "OnStretchChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStretchChanged(double Value)"
  },
  {
    "label": "OnShrinkCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShrinkCommitted(double Value, ETextCommit::Type CommitType)"
  },
  {
    "label": "OnShrinkChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShrinkChanged(double Value)"
  },
  {
    "label": "OnCloseButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCloseButtonClicked()"
  }
]