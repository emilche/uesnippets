[
  {
    "label": "SampleType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleType"
  },
  {
    "label": "FVoiceDelayBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVoiceDelayBuffer"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" template<class SampleType> class FVoiceDelayBuffer { private : TArray<SampleType> InternalBuffer ; int32 WriteIndex ; int32 ReadIndex ; public : void)",
    "insertText": "Init(int32 MaxLength)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (InternalBuffer .)",
    "insertText": "Init(0, MaxLength)"
  },
  {
    "label": "SetDelay()",
    "kind": "Method",
    "detail": "Function (WriteIndex = 0 ; ReadIndex = 0 ; } void)",
    "insertText": "SetDelay(int32 NumSamples)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (const int32 Delta = WriteIndex - NumSamples ;)",
    "insertText": "if(Delta < 0)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (ReadIndex = InternalBuffer .)",
    "insertText": "Num()"
  },
  {
    "label": "GetBufferCount()",
    "kind": "Method",
    "detail": "Function (} else { ReadIndex = Delta ; } } int32)",
    "insertText": "GetBufferCount()"
  },
  {
    "label": "PushSample()",
    "kind": "Method",
    "detail": "Function (} else { return WriteIndex - ReadIndex ; } } void)",
    "insertText": "PushSample(const SampleType& InSample)"
  },
  {
    "label": "PushFrame()",
    "kind": "Method",
    "detail": "Function (InternalBuffer [ WriteIndex + + ] = InSample ; } void)",
    "insertText": "PushFrame(const SampleType* InFrame, int32 NumChannels)"
  },
  {
    "label": "PushSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushSample(InFrame[ChannelIndex])"
  },
  {
    "label": "PopSample()",
    "kind": "Method",
    "detail": "Function (} } SampleType)",
    "insertText": "PopSample()"
  },
  {
    "label": "PushSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushSample(InSample)"
  },
  {
    "label": "PopBufferedAudio()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "PopBufferedAudio(SampleType* OutBuffer, int32 MaxNumSamples)"
  },
  {
    "label": "Min()",
    "kind": "Method",
    "detail": "Function (int32 SamplesToCopy =)",
    "insertText": "Min(MaxNumSamples, GetBufferCount())"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memcpy(OutBuffer, InternalBuffer.GetData() + ReadIndex, SamplesToCopy * sizeof(SampleType))"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memcpy(OutBuffer, InternalBuffer.GetData() + ReadIndex, SamplesUntilEndOfBuffer * sizeof(SampleType))"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memcpy(OutBuffer + SamplesUntilEndOfBuffer, InternalBuffer.GetData(), (SamplesToCopy - SamplesUntilEndOfBuffer) * sizeof(SampleType))"
  }
]