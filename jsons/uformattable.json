[
  {
    "label": "UFormattableType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UFormattableType"
  },
  {
    "label": "ufmt_open()",
    "kind": "Method",
    "detail": "Function (# ifndef UFORMATTABLE_H # define UFORMATTABLE_H # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / localpointer . h \" typedef enum UFormattableType { UFMT_DATE = 0,UFMT_DOUBLE,UFMT_LONG,UFMT_STRING,UFMT_ARRAY,UFMT_INT64,UFMT_OBJECT,# ifndef UFMT_COUNT # endif } UFormattableType ; typedef void* UFormattable ; U_STABLE UFormattable* U_EXPORT2)",
    "insertText": "ufmt_open(UErrorCode* status)"
  },
  {
    "label": "ufmt_close()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "ufmt_close(UFormattable* fmt)"
  },
  {
    "label": "U_DEFINE_LOCAL_OPEN_POINTER()",
    "kind": "Method",
    "detail": "Function (# if U_NAMESPACE_BEGIN)",
    "insertText": "U_DEFINE_LOCAL_OPEN_POINTER(LocalUFormattablePointer, UFormattable, ufmt_close)"
  },
  {
    "label": "ufmt_getType()",
    "kind": "Method",
    "detail": "Function (U_NAMESPACE_END # endif U_STABLE UFormattableType U_EXPORT2)",
    "insertText": "ufmt_getType(const UFormattable* fmt, UErrorCode *status)"
  },
  {
    "label": "ufmt_isNumeric()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "ufmt_isNumeric(const UFormattable* fmt)"
  },
  {
    "label": "ufmt_getDate()",
    "kind": "Method",
    "detail": "Function (U_STABLE UDate U_EXPORT2)",
    "insertText": "ufmt_getDate(const UFormattable* fmt, UErrorCode *status)"
  },
  {
    "label": "ufmt_getDouble()",
    "kind": "Method",
    "detail": "Function (U_STABLE double U_EXPORT2)",
    "insertText": "ufmt_getDouble(UFormattable* fmt, UErrorCode *status)"
  },
  {
    "label": "ufmt_getLong()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ufmt_getLong(UFormattable* fmt, UErrorCode *status)"
  },
  {
    "label": "ufmt_getInt64()",
    "kind": "Method",
    "detail": "Function (U_STABLE int64_t U_EXPORT2)",
    "insertText": "ufmt_getInt64(UFormattable* fmt, UErrorCode *status)"
  },
  {
    "label": "ufmt_getObject()",
    "kind": "Method",
    "detail": "Function (U_STABLE const void* U_EXPORT2)",
    "insertText": "ufmt_getObject(const UFormattable* fmt, UErrorCode *status)"
  },
  {
    "label": "ufmt_getUChars()",
    "kind": "Method",
    "detail": "Function (U_STABLE const UChar* U_EXPORT2)",
    "insertText": "ufmt_getUChars(UFormattable* fmt, int32_t *len, UErrorCode *status)"
  },
  {
    "label": "ufmt_getArrayLength()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ufmt_getArrayLength(const UFormattable* fmt, UErrorCode *status)"
  },
  {
    "label": "ufmt_getArrayItemByIndex()",
    "kind": "Method",
    "detail": "Function (U_STABLE UFormattable* U_EXPORT2)",
    "insertText": "ufmt_getArrayItemByIndex(UFormattable* fmt, int32_t n, UErrorCode *status)"
  },
  {
    "label": "ufmt_getDecNumChars()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "ufmt_getDecNumChars(UFormattable *fmt, int32_t *len, UErrorCode *status)"
  }
]