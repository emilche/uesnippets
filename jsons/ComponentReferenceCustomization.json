[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FComponentReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentReference"
  },
  {
    "label": "FSoftComponentReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftComponentReference"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FComponentReferenceCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentReferenceCustomization"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" HAL / Platform . h \" # include \" IPropertyTypeCustomization . h \" # include \" Internationalization / Text . h \" # include \" PropertyEditorModule . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class AActor ; class IPropertyHandle ; class SComboButton ; class SWidget ; class UActorComponent ; class UClass ; class UObject ; struct FComponentReference ; struct FSoftComponentReference ; struct FSlateBrush ; class FComponentReferenceCustomization : public IPropertyTypeCustomization { public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeHeader(TSharedRef<class IPropertyHandle> InPropertyHandle, class FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& PropertyTypeCustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<class IPropertyHandle> InPropertyHandle, class IDetailChildrenBuilder& StructBuilder, IPropertyTypeCustomizationUtils& PropertyTypeCustomizationUtils)"
  },
  {
    "label": "BuildClassFilters()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BuildClassFilters()"
  },
  {
    "label": "BuildComboBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildComboBox()"
  },
  {
    "label": "GetFirstOuterActor()",
    "kind": "Method",
    "detail": "Function (AActor*)",
    "insertText": "GetFirstOuterActor()"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(const FComponentReference& Value)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FComponentReference& OutValue)"
  },
  {
    "label": "IsComponentReferenceValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsComponentReferenceValid(const FComponentReference& Value)"
  },
  {
    "label": "OnPropertyValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPropertyValueChanged()"
  },
  {
    "label": "OnGetComboContentWidgetIndex()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "OnGetComboContentWidgetIndex()"
  },
  {
    "label": "CanEdit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEdit()"
  },
  {
    "label": "CanEditChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditChildren()"
  },
  {
    "label": "GetActorIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetActorIcon()"
  },
  {
    "label": "OnGetActorName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnGetActorName()"
  },
  {
    "label": "GetComponentIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetComponentIcon()"
  },
  {
    "label": "OnGetComponentName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnGetComponentName()"
  },
  {
    "label": "GetStatusIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetStatusIcon()"
  },
  {
    "label": "OnGetMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGetMenuContent()"
  },
  {
    "label": "OnMenuOpenChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMenuOpenChanged(bool bOpen)"
  },
  {
    "label": "IsFilteredActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFilteredActor(const AActor* const Actor)"
  },
  {
    "label": "IsFilteredComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFilteredComponent(const UActorComponent* const Component)"
  },
  {
    "label": "IsFilteredObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFilteredObject(const UObject* const Object, const TArray<const UClass*>& AllowedFilters, const TArray<const UClass*>& DisallowedFilters)"
  },
  {
    "label": "OnComponentSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnComponentSelected(const UActorComponent* InComponent)"
  },
  {
    "label": "CloseComboButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseComboButton()"
  }
]