[
  {
    "label": "FPendingWorldTreeOperation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingWorldTreeOperation"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SWorldHierarchyImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWorldHierarchyImpl"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (WorldHierarchy)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnWorldHierarchyItemPicked, WorldHierarchy::FWorldTreeItemRef)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "RefreshView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshView()"
  },
  {
    "label": "CreateFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFolder(TSharedPtr<FLevelModel> InModel, FName ParentPath = NAME_None, const bool bMoveSelected = true)"
  },
  {
    "label": "MoveItemsTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveItemsTo(TSharedPtr<FLevelModel> InModel, FName Path)"
  },
  {
    "label": "InitiateRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitiateRename(WorldHierarchy::FWorldTreeItemRef InItem)"
  },
  {
    "label": "DeleteFolders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteFolders(TArray<WorldHierarchy::FWorldTreeItemPtr> SelectedItems, bool bTransactional = true)"
  },
  {
    "label": "MoveDroppedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveDroppedItems(const TArray<WorldHierarchy::FWorldTreeItemPtr>& DraggedItems, FName FolderPath)"
  },
  {
    "label": "AddDroppedLevelsToFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDroppedLevelsToFolder(const TArray<FAssetData>& WorldAssetList, FName FolderPath)"
  },
  {
    "label": "SetColumnVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColumnVisible(FName ColumnId, bool bVisible)"
  },
  {
    "label": "IsVisibleInConfig()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisibleInConfig(FName ColumnId)"
  },
  {
    "label": "SetWillBeVisibleInConfigTransient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWillBeVisibleInConfigTransient(FName ColumnId, bool bIsVisible)"
  },
  {
    "label": "CreateHeaderRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SHeaderRow>)",
    "insertText": "CreateHeaderRow()"
  },
  {
    "label": "SaveColumnVisibilitiesIntoConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveColumnVisibilitiesIntoConfig()"
  },
  {
    "label": "IsRequiredColumn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRequiredColumn(FName ColumnId)"
  },
  {
    "label": "IsKnownColumn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsKnownColumn(FName ColumnId)"
  },
  {
    "label": "GenerateTreeRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "GenerateTreeRow(WorldHierarchy::FWorldTreeItemPtr Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "GetChildrenForTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChildrenForTree(WorldHierarchy::FWorldTreeItemPtr Item, TArray<WorldHierarchy::FWorldTreeItemPtr>& OutChildren)"
  },
  {
    "label": "FillFoldersSubmenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillFoldersSubmenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "AddMoveToFolderOutliner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMoveToFolderOutliner(FMenuBuilder& MenuBuilder, const TArray<WorldHierarchy::FWorldTreeItemPtr>& CachedSelectedItems, TSharedRef<FLevelModel> RootLevel)"
  },
  {
    "label": "FillSelectionSubmenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillSelectionSubmenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "SelectFolderDescendants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectFolderDescendants(bool bSelectAllDescendants)"
  },
  {
    "label": "OnTreeItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTreeItemScrolledIntoView( WorldHierarchy::FWorldTreeItemPtr Item, const TSharedPtr<ITableRow>& Widget )"
  },
  {
    "label": "OnExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExpansionChanged(WorldHierarchy::FWorldTreeItemPtr Item, bool bIsItemExpanded)"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(const WorldHierarchy::FWorldTreeItemPtr Item, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnUpdateSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUpdateSelection()"
  },
  {
    "label": "OnTreeViewMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTreeViewMouseButtonDoubleClick(WorldHierarchy::FWorldTreeItemPtr Item)"
  },
  {
    "label": "Temporary()",
    "kind": "Method",
    "detail": "Function (TreeItemType)",
    "insertText": "Temporary(Data)"
  },
  {
    "label": "Populate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Populate()"
  },
  {
    "label": "EmptyTreeItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyTreeItems()"
  },
  {
    "label": "RepopulateEntireTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepopulateEntireTree()"
  },
  {
    "label": "AddItemToTree()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddItemToTree(WorldHierarchy::FWorldTreeItemRef InItem)"
  },
  {
    "label": "RemoveItemFromTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveItemFromTree(WorldHierarchy::FWorldTreeItemRef InItem)"
  },
  {
    "label": "OnItemMoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemMoved(WorldHierarchy::FWorldTreeItemRef InItem)"
  },
  {
    "label": "AddUnfilteredItemToTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUnfilteredItemToTree(WorldHierarchy::FWorldTreeItemRef InItem)"
  },
  {
    "label": "OnChildRemovedFromParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChildRemovedFromParent(WorldHierarchy::FWorldTreeItemRef InParent)"
  },
  {
    "label": "EnsureParentForItem()",
    "kind": "Method",
    "detail": "Function (WorldHierarchy::FWorldTreeItemPtr)",
    "insertText": "EnsureParentForItem(WorldHierarchy::FWorldTreeItemRef Item)"
  },
  {
    "label": "SetParentsExpansionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParentsExpansionState(const TMap<WorldHierarchy::FWorldTreeItemID, bool>& ExpansionInfo)"
  },
  {
    "label": "FullRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FullRefresh()"
  },
  {
    "label": "RebuildFoldersAndFullRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildFoldersAndFullRefresh()"
  },
  {
    "label": "ScrollItemIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollItemIntoView(WorldHierarchy::FWorldTreeItemPtr Item)"
  },
  {
    "label": "OnBroadcastFolderCreate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBroadcastFolderCreate(TSharedPtr<FLevelModel> LevelModel, FName NewPath)"
  },
  {
    "label": "OnBroadcastFolderMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBroadcastFolderMove(TSharedPtr<FLevelModel> LevelModel, FName OldPath, FName NewPath)"
  },
  {
    "label": "OnBroadcastFolderDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBroadcastFolderDelete(TSharedPtr<FLevelModel> LevelModel, FName Path)"
  },
  {
    "label": "OnBroadcastLevelsUnloaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBroadcastLevelsUnloaded()"
  },
  {
    "label": "OnCreateFolderClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCreateFolderClicked()"
  },
  {
    "label": "RequestSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSort()"
  },
  {
    "label": "SortItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortItems(TArray<WorldHierarchy::FWorldTreeItemPtr>& Items)"
  },
  {
    "label": "MoveSelectionTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveSelectionTo(WorldHierarchy::FWorldTreeItemRef Item)"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesFilter(const WorldHierarchy::IWorldTreeItem& Item)"
  },
  {
    "label": "SetFilterText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterText(const FText& InFilterText)"
  },
  {
    "label": "GetViewButtonContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetViewButtonContent()"
  },
  {
    "label": "ToggleDisplayActorsCount_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleDisplayActorsCount_Executed()"
  },
  {
    "label": "OnWorldSaved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldSaved(UWorld* World, FObjectPostSaveContext ObjectSaveContext)"
  }
]