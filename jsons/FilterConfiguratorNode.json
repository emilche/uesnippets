[
  {
    "label": "FFilterConfiguratorNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterConfiguratorNode"
  },
  {
    "label": "FFilterConfiguratorNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterConfiguratorNode"
  },
  {
    "label": "FFilterConfiguratorNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterConfiguratorNode"
  },
  {
    "label": "FFilterConfiguratorNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterConfiguratorNode"
  },
  {
    "label": "TRACEINSIGHTSCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTSCORE_API"
  },
  {
    "label": "FFilterContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterContext"
  },
  {
    "label": "DeepCopy()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FFilterConfiguratorNode>)",
    "insertText": "DeepCopy(const FFilterConfiguratorNode& Node)"
  },
  {
    "label": "SetAvailableFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAvailableFilters(TSharedPtr<TArray<TSharedPtr<FFilter>>> InAvailableFilters)"
  },
  {
    "label": "SetSelectedFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedFilter(TSharedPtr<FFilter> InSelectedFilter)"
  },
  {
    "label": "SetSelectedFilterOperator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedFilterOperator(TSharedPtr<IFilterOperator> InSelectedFilterOperator)"
  },
  {
    "label": "SetTextBoxValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextBoxValue(const FString& InValue)"
  },
  {
    "label": "ProcessFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessFilter()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update()"
  }
]