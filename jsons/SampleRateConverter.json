[
  {
    "label": "ISampleRateConverter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISampleRateConverter"
  },
  {
    "label": "ISampleRateConverter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" namespace Audio { class ISampleRateConverter { public : ~)",
    "insertText": "ISampleRateConverter()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Init(const float InSampleRateRatio, const int32 InNumChannels)"
  },
  {
    "label": "SetSampleRateRatio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSampleRateRatio(const float InSampleRateRatio, const int32 NumInterpolationFrames = 0)"
  },
  {
    "label": "ProcessFullbuffer()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessFullbuffer(const int16* InBuffer, const int32 InNumSamples, TArray<float>& OutBuffer)"
  },
  {
    "label": "ProcessFullbuffer()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessFullbuffer(const float* InBuffer, const int32 InNumSamples, TArray<float>& OutBuffer)"
  },
  {
    "label": "ProcessChunk()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessChunk(const int16* BufferChunk, const int32 NumInputSamples, const int32 RequestedFrames, TArray<float>& OutBuffer)"
  },
  {
    "label": "ProcessChunk()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessChunk(const float* BufferChunk, const int32 NumInputSamples, const int32 RequestedFrames, TArray<float>& OutBuffer)"
  },
  {
    "label": "CreateSampleRateConverter()",
    "kind": "Method",
    "detail": "Function (ISampleRateConverter*)",
    "insertText": "CreateSampleRateConverter()"
  }
]