[
  {
    "label": "USoundWaveProcedural",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWaveProcedural"
  },
  {
    "label": "DEFAULT_PROCEDURAL_SOUNDWAVE_BUFFER_SIZE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / ThreadSafeCounter . h \" # include \" UObject / ObjectMacros . h \" # include \" HAL / ThreadSafeBool . h \" # include \" Containers / Queue . h \" # include \" Sound / SoundWave . h \" # include \" SoundWaveProcedural . generated . h \" # if PLATFORM_IOS # define)",
    "insertText": "DEFAULT_PROCEDURAL_SOUNDWAVE_BUFFER_SIZE(8 * 1024) #else #define DEFAULT_PROCEDURAL_SOUNDWAVE_BUFFER_SIZE 1024 #endif DECLARE_DELEGATE_TwoParams( FOnSoundWaveProceduralUnderflow, class USoundWaveProcedural*, int32)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "PumpQueuedAudio()",
    "kind": "Method",
    "detail": "Function (FThreadSafeCounter AvailableByteCount ; TArray<uint8> AudioBuffer ; FThreadSafeBool bReset ; void)",
    "insertText": "PumpQueuedAudio()"
  },
  {
    "label": "SerializeCuePoints()",
    "kind": "Method",
    "detail": "Function (protected : int32 NumBufferUnderrunSamples ; int32 NumSamplesToGeneratePerCallback ; void)",
    "insertText": "SerializeCuePoints(FArchive& Ar, const bool bIsLoadingFromCookedArchive)"
  },
  {
    "label": "USoundWaveProcedural()",
    "kind": "Method",
    "detail": "Function (} public :)",
    "insertText": "USoundWaveProcedural(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetRegistryTags(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "GeneratePCMData()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GeneratePCMData(uint8* PCMData, const int32 SamplesNeeded)"
  },
  {
    "label": "HasCompressedData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCompressedData(FName Format, ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "BeginGetCompressedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginGetCompressedData(FName Format, const FPlatformAudioCookOverrides* CompressionOverrides, const ITargetPlatform* InTargetPlatform)"
  },
  {
    "label": "GetCompressedData()",
    "kind": "Method",
    "detail": "Function (FByteBulkData*)",
    "insertText": "GetCompressedData(FName Format, const FPlatformAudioCookOverrides* CompressionOverrides, const ITargetPlatform* InTargetPlatform)"
  },
  {
    "label": "InitAudioResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAudioResource(FByteBulkData& CompressedData)"
  },
  {
    "label": "InitAudioResource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitAudioResource(FName Format)"
  },
  {
    "label": "GetResourceSizeForFormat()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetResourceSizeForFormat(FName Format)"
  },
  {
    "label": "IsSeekable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSeekable()"
  },
  {
    "label": "ResetAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAudio()"
  },
  {
    "label": "GetAvailableAudioByteCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAvailableAudioByteCount()"
  }
]