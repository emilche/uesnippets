[
  {
    "label": "FStaticMeshBuildVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshBuildVertex"
  },
  {
    "label": "FConstMeshBuildVertexView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstMeshBuildVertexView"
  },
  {
    "label": "FColorVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FColorVertexBuffer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexFactory"
  },
  {
    "label": "FStaticMeshDataType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshDataType"
  },
  {
    "label": "FColorVertexData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FColorVertexData"
  },
  {
    "label": "FColorVertexBuffer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RenderResource . h \" # include \" StaticMeshVertexData . h \" # include \" RHI . h \" struct FStaticMeshBuildVertex ; struct FConstMeshBuildVertexView ; class FColorVertexBuffer : public FVertexBuffer { public : enum class NullBindStride { FColorSizeForComponentOverride,ZeroForDefaultBufferBind,} ;)",
    "insertText": "FColorVertexBuffer()"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUp()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(uint32 InNumVertices, bool bNeedsCPUAccess = true)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const TArray<FStaticMeshBuildVertex>& InVertices, bool bNeedsCPUAccess = true)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FConstMeshBuildVertexView& InVertices, bool bNeedsCPUAccess = true)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FColorVertexBuffer& InVertexBuffer, bool bNeedsCPUAccess = true)"
  },
  {
    "label": "AppendVertices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AppendVertices(const FStaticMeshBuildVertex* Vertices, const uint32 NumVerticesToAppend)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, bool bNeedsCPUAccess)"
  },
  {
    "label": "SerializeMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeMetaData(FArchive& Ar)"
  },
  {
    "label": "ClearMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMetaData()"
  },
  {
    "label": "ExportText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportText(FString &ValueStr)"
  },
  {
    "label": "ImportText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportText(const TCHAR* SourceText)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const FColorVertexBuffer &Other)"
  },
  {
    "label": "VertexColor()",
    "kind": "Method",
    "detail": "Function (} const FColor&)",
    "insertText": "VertexColor(uint32 VertexIndex)"
  },
  {
    "label": "GetStride()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetStride()"
  },
  {
    "label": "GetAllocatedSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAllocatedSize()"
  },
  {
    "label": "GetVertexColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexColors(TArray<FColor>& OutColors)"
  },
  {
    "label": "InitFromColorArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromColorArray(const FColor *InColors, uint32 Count, uint32 Stride = sizeof(FColor), bool bNeedsCPUAccess = true)"
  },
  {
    "label": "InitFromColorArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromColorArray(const TArray<FColor> &InColors)"
  },
  {
    "label": "InitFromColorArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromColorArray(InColors.GetData(), InColors.Num())"
  },
  {
    "label": "InitFromSingleColor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitFromSingleColor(const FColor &InColor, uint32 Count)"
  },
  {
    "label": "InitFromColorArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromColorArray(&InColor, Count, 0)"
  },
  {
    "label": "CreateRHIBuffer()",
    "kind": "Method",
    "detail": "Function (} FBufferRHIRef)",
    "insertText": "CreateRHIBuffer(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "InitRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHIForStreaming(FRHIBuffer* IntermediateBuffer, FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "ReleaseRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHIForStreaming(FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFriendlyName()"
  },
  {
    "label": "BindColorVertexBuffer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BindColorVertexBuffer(const class FVertexFactory* VertexFactory, struct FStaticMeshDataType& StaticMeshData)"
  },
  {
    "label": "BindDefaultColorVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindDefaultColorVertexBuffer(const class FVertexFactory* VertexFactory, struct FStaticMeshDataType& StaticMeshData, NullBindStride BindStride)"
  },
  {
    "label": "FColorVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FColorVertexBuffer(const FColorVertexBuffer &rhs)"
  }
]