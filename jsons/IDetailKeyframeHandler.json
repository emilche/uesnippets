[
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IDetailKeyframeHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailKeyframeHandler"
  },
  {
    "label": "IDetailKeyframeHandler()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class IPropertyHandle ; enum class EPropertyKeyedStatus : uint8 { NotKeyed,KeyedInOtherFrame,PartiallyKeyed,KeyedInFrame,} ; class IDetailKeyframeHandler { public : ~)",
    "insertText": "IDetailKeyframeHandler()"
  },
  {
    "label": "IsPropertyKeyable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPropertyKeyable(const UClass* InObjectClass, const IPropertyHandle& PropertyHandle)"
  },
  {
    "label": "IsPropertyKeyingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyKeyingEnabled()"
  },
  {
    "label": "OnKeyPropertyClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnKeyPropertyClicked(const IPropertyHandle& KeyedPropertyHandle)"
  },
  {
    "label": "IsPropertyAnimated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyAnimated(const IPropertyHandle& PropertyHandle, UObject* ParentObject)"
  },
  {
    "label": "GetPropertyKeyedStatus()",
    "kind": "Method",
    "detail": "Function (EPropertyKeyedStatus)",
    "insertText": "GetPropertyKeyedStatus(const IPropertyHandle& PropertyHandle)"
  }
]