[
  {
    "label": "MessageFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MessageFormat"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "SelectFormat()",
    "kind": "Method",
    "detail": "Function (# ifndef SELFMT # define SELFMT # include \" unicode / messagepattern . h \" # include \" unicode / numfmt . h \" # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING U_NAMESPACE_BEGIN class MessageFormat ; class U_I18N_API SelectFormat : public Format { public :)",
    "insertText": "SelectFormat(const UnicodeString& pattern, UErrorCode& status)"
  },
  {
    "label": "SelectFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectFormat(const SelectFormat& other)"
  },
  {
    "label": "SelectFormat()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SelectFormat()"
  },
  {
    "label": "applyPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyPattern(const UnicodeString& pattern, UErrorCode& status)"
  },
  {
    "label": "format()",
    "kind": "Method",
    "detail": "Function (using Format::format ; UnicodeString&)",
    "insertText": "format(const UnicodeString& keyword, UnicodeString& appendTo, FieldPosition& pos, UErrorCode& status)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (SelectFormat&)",
    "insertText": "operator(const SelectFormat& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "operator(const Format& other)"
  },
  {
    "label": "clone()",
    "kind": "Method",
    "detail": "Function (Format*)",
    "insertText": "clone(void)"
  },
  {
    "label": "format()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "format(const Formattable& obj, UnicodeString& appendTo, FieldPosition& pos, UErrorCode& status)"
  },
  {
    "label": "toPattern()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "toPattern(UnicodeString& appendTo)"
  },
  {
    "label": "parseObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "parseObject(const UnicodeString& source, Formattable& result, ParsePosition& parse_pos)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (UClassID U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "getDynamicClassID()",
    "kind": "Method",
    "detail": "Function (UClassID)",
    "insertText": "getDynamicClassID()"
  },
  {
    "label": "findSubMessage()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "findSubMessage(const MessagePattern& pattern, int32_t partIndex, const UnicodeString& keyword, UErrorCode& ec)"
  }
]