[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SColorBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorBlock"
  },
  {
    "label": "SLATE_DECLARE_WIDGET_API()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SLeafWidget . h \" # include \" Styling / AppStyle . h \" class FPaintArgs ; class FSlateWindowElementList ; enum class EColorBlockAlphaDisplayMode : uint8 { Combined,Separate,Ignore,} ; class SColorBlock : public SLeafWidget {)",
    "insertText": "SLATE_DECLARE_WIDGET_API(SColorBlock, SLeafWidget, SLATE_API) public: SLATE_BEGIN_ARGS(SColorBlock) : _Color(FLinearColor::White) , _AlphaBackgroundBrush(FAppStyle::Get().GetBrush(\"ColorPicker.AlphaBackground\")) , _CornerRadius(0.0f) , _ColorIsHSV(false) , _ShowBackgroundForAlpha(false) , _UseSRGB(true) , _AlphaDisplayMode(EColorBlockAlphaDisplayMode::Combined) , _Size(FVector2D(16, 16)) , _OnMouseButtonDown()"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FLinearColor, Color) SLATE_ATTRIBUTE(const FSlateBrush*, AlphaBackgroundBrush) SLATE_ATTRIBUTE(FVector4, CornerRadius) SLATE_ATTRIBUTE(bool, ColorIsHSV) SLATE_ATTRIBUTE(bool, ShowBackgroundForAlpha) SLATE_ATTRIBUTE(bool, UseSRGB) SLATE_ATTRIBUTE(EColorBlockAlphaDisplayMode, AlphaDisplayMode) SLATE_ATTRIBUTE(FVector2D, Size) SLATE_EVENT(FPointerEventHandler, OnMouseButtonDown) SLATE_END_ARGS() public: SLATE_API SColorBlock()"
  },
  {
    "label": "SColorBlock()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SColorBlock()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "MakeSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeSection(TArray<FSlateGradientStop>& OutGradientStops, FVector2D StartPt, FVector2D EndPt, FLinearColor Color, const FWidgetStyle& InWidgetStyle, bool bIgnoreAlpha)"
  }
]