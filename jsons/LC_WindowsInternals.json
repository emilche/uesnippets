[
  {
    "label": "NT_SYSTEM_INFORMATION_CLASS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NT_SYSTEM_INFORMATION_CLASS"
  },
  {
    "label": "NT_CLIENT_ID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_CLIENT_ID"
  },
  {
    "label": "NT_SYSTEM_THREAD_INFORMATION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_SYSTEM_THREAD_INFORMATION"
  },
  {
    "label": "NT_UNICODE_STRING",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_UNICODE_STRING"
  },
  {
    "label": "NT_UNICODE_STRING32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_UNICODE_STRING32"
  },
  {
    "label": "NT_ANSI_STRING",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_ANSI_STRING"
  },
  {
    "label": "NT_ANSI_STRING32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_ANSI_STRING32"
  },
  {
    "label": "NT_SYSTEM_PROCESS_INFORMATION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_SYSTEM_PROCESS_INFORMATION"
  },
  {
    "label": "NT_PROCESS_INFORMATION_CLASS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NT_PROCESS_INFORMATION_CLASS"
  },
  {
    "label": "RLT_DRIVE_LETTER_CURDIR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RLT_DRIVE_LETTER_CURDIR"
  },
  {
    "label": "RLT_DRIVE_LETTER_CURDIR32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RLT_DRIVE_LETTER_CURDIR32"
  },
  {
    "label": "RTL_USER_PROCESS_PARAMETERS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTL_USER_PROCESS_PARAMETERS"
  },
  {
    "label": "RTL_USER_PROCESS_PARAMETERS32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTL_USER_PROCESS_PARAMETERS32"
  },
  {
    "label": "NT_LDR_DATA_TABLE_ENTRY",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_LDR_DATA_TABLE_ENTRY"
  },
  {
    "label": "NT_PEB_LDR_DATA",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_PEB_LDR_DATA"
  },
  {
    "label": "NT_PEB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_PEB"
  },
  {
    "label": "NT_PEB32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_PEB32"
  },
  {
    "label": "NT_PROCESS_BASIC_INFORMATION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NT_PROCESS_BASIC_INFORMATION"
  },
  {
    "label": "STATUS_INFO_LENGTH_MISMATCH()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Windows / WindowsHWrapper . h \" # define)",
    "insertText": "STATUS_INFO_LENGTH_MISMATCH((WindowsInternals::NTSTATUS)0xC0000004L) #define NT_SUCCESS(Status) ((WindowsInternals::NTSTATUS)(Status) >= 0)"
  },
  {
    "label": "VOID()",
    "kind": "Method",
    "detail": "Function (typedef LONG NTSTATUS ; enum NT_SYSTEM_INFORMATION_CLASS { SystemProcessInformation = 5 } ; struct NT_CLIENT_ID { HANDLE UniqueProcess ; HANDLE UniqueThread ; } ; struct NT_SYSTEM_THREAD_INFORMATION { LARGE_INTEGER KernelTime ; LARGE_INTEGER UserTime ; LARGE_INTEGER CreateTime ; ULONG WaitTime ; PVOID StartAddress ; NT_CLIENT_ID ClientId ; LONG Priority ; LONG BasePriority ; ULONG ContextSwitches ; ULONG ThreadState ; ULONG WaitReason ; } ; struct NT_UNICODE_STRING { USHORT Length ; USHORT MaximumLength ; PWSTR Buffer ; } ; struct NT_UNICODE_STRING32 { USHORT Length ; USHORT MaximumLength ; ULONG Buffer ; } ; struct NT_ANSI_STRING { USHORT Length ; USHORT MaximumLength ; PSTR Buffer ; } ; struct NT_ANSI_STRING32 { USHORT Length ; USHORT MaximumLength ; ULONG Buffer ; } ; struct NT_SYSTEM_PROCESS_INFORMATION { ULONG NextEntryOffset ; ULONG NumberOfThreads ; LARGE_INTEGER WorkingSetPrivateSize ; ULONG HardFaultCount ; ULONG NumberOfThreadsHighWatermark ; ULONGLONG CycleTime ; LARGE_INTEGER CreateTime ; LARGE_INTEGER UserTime ; LARGE_INTEGER KernelTime ; NT_UNICODE_STRING ImageName ; LONG BasePriority ; PVOID UniqueProcessId ; PVOID InheritedFromUniqueProcessId ; ULONG HandleCount ; ULONG SessionId ; ULONG_PTR UniqueProcessKey ; ULONG_PTR PeakVirtualSize ; ULONG_PTR VirtualSize ; ULONG PageFaultCount ; ULONG_PTR PeakWorkingSetSize ; ULONG_PTR WorkingSetSize ; ULONG_PTR QuotaPeakPagedPoolUsage ; ULONG_PTR QuotaPagedPoolUsage ; ULONG_PTR QuotaPeakNonPagedPoolUsage ; ULONG_PTR QuotaNonPagedPoolUsage ; ULONG_PTR PagefileUsage ; ULONG_PTR PeakPagefileUsage ; ULONG_PTR PrivatePageCount ; LARGE_INTEGER ReadOperationCount ; LARGE_INTEGER WriteOperationCount ; LARGE_INTEGER OtherOperationCount ; LARGE_INTEGER ReadTransferCount ; LARGE_INTEGER WriteTransferCount ; LARGE_INTEGER OtherTransferCount ; NT_SYSTEM_THREAD_INFORMATION Threads [ 1 ] ; } ; enum NT_PROCESS_INFORMATION_CLASS { ProcessBasicInformation = 0,ProcessWow64Information = 2 6 } ; struct RLT_DRIVE_LETTER_CURDIR { WORD Flags ; WORD Length ; ULONG TimeStemp ; NT_ANSI_STRING DosPath ; } ; struct RLT_DRIVE_LETTER_CURDIR32 { WORD Flags ; WORD Length ; ULONG TimeStemp ; NT_ANSI_STRING32 DosPath ; } ; struct RTL_USER_PROCESS_PARAMETERS { BYTE Reserved1 [ 1 6 ] ; PVOID Reserved2 [ 1 0 ] ; NT_UNICODE_STRING ImagePathName ; NT_UNICODE_STRING CommandLine ; PWSTR Environment ; ULONG Reserved3 [ 9 ] ; NT_UNICODE_STRING Reserved4 [ 4 ] ; RLT_DRIVE_LETTER_CURDIR CurrentDirectories [ 3 2 ] ; ULONG EnvironmentSize ; } ; struct RTL_USER_PROCESS_PARAMETERS32 { char Reserved [ 7 2 ] ; ULONG Environment ; ULONG Reserved3 [ 9 ] ; NT_UNICODE_STRING32 Reserved4 [ 4 ] ; RLT_DRIVE_LETTER_CURDIR32 CurrentDirectories [ 3 2 ] ; ULONG EnvironmentSize ; } ; struct NT_LDR_DATA_TABLE_ENTRY { LIST_ENTRY InLoadOrderLinks ; LIST_ENTRY InMemoryOrderLinks ; LIST_ENTRY InInitializationOrderLinks ; PVOID DllBase ; PVOID EntryPoint ; ULONG SizeOfImage ; NT_UNICODE_STRING FullDllName ; NT_UNICODE_STRING BaseDllName ; ULONG Flags ; USHORT LoadCount ; USHORT ObsoleteLoadCount ; USHORT TlsIndex ; LIST_ENTRY HashLinks ; } ; struct NT_PEB_LDR_DATA { ULONG Length ; BOOLEAN Initialized ; PVOID SsHandle ; LIST_ENTRY InLoadOrderModuleList ; LIST_ENTRY InMemoryOrderModuleList ; LIST_ENTRY InInitializationOrderModuleList ; PVOID EntryInProgress ; BOOLEAN ShutdownInProgress ; HANDLE ShutdownThreadId ; } ; typedef)",
    "insertText": "VOID(NTAPI *NT_PS_POST_PROCESS_INIT_ROUTINE)(VOID)"
  }
]