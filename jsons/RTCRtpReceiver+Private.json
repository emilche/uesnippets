[
  {
    "label": "RTC_OBJC_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_OBJC_TYPE"
  },
  {
    "label": "RtpReceiverDelegateAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpReceiverDelegateAdapter"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (# import \" RTCRtpReceiver . h \" # include \" api / rtp_receiver_interface . h \" NS_ASSUME_NONNULL_BEGIN @ class)",
    "insertText": "RTC_OBJC_TYPE(RTCPeerConnectionFactory)"
  },
  {
    "label": "RtpReceiverDelegateAdapter()",
    "kind": "Method",
    "detail": "Function (namespace webrtc { class RtpReceiverDelegateAdapter : public RtpReceiverObserverInterface { public :)",
    "insertText": "RtpReceiverDelegateAdapter(RTC_OBJC_TYPE(RTCRtpReceiver) * receiver)"
  },
  {
    "label": "OnFirstPacketReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFirstPacketReceived(cricket::MediaType media_type)"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (private : __weak)",
    "insertText": "RTC_OBJC_TYPE(RTCRtpReceiver)"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (} ; } @ interface)",
    "insertText": "RTC_OBJC_TYPE(RTCRtpReceiver) () @property(nonatomic, readonly)"
  }
]