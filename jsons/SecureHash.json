[
  {
    "label": "FCbFieldView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbFieldView"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "FMemoryImageWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryImageWriter"
  },
  {
    "label": "FMemoryUnfreezeContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryUnfreezeContent"
  },
  {
    "label": "FPointerTableBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPointerTableBase"
  },
  {
    "label": "FSHA1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSHA1"
  },
  {
    "label": "FMD5Hash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMD5Hash"
  },
  {
    "label": "FMD5",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMD5"
  },
  {
    "label": "FContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContext"
  },
  {
    "label": "FMD5Hash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMD5Hash"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FMD5Hash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMD5Hash"
  },
  {
    "label": "FSHAHash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSHAHash"
  },
  {
    "label": "FSHA1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSHA1"
  },
  {
    "label": "FAsyncSHAVerify",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncSHAVerify"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "delete",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "delete"
  },
  {
    "label": "FBufferReaderWithSHA",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBufferReaderWithSHA"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "or"
  },
  {
    "label": "appMD5Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appMD5Init( FMD5Context* context )"
  },
  {
    "label": "appMD5Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appMD5Update( FMD5Context* context, uint8* input, int32 inputLen )"
  },
  {
    "label": "appMD5Final()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appMD5Final( uint8* digest, FMD5Context* context )"
  },
  {
    "label": "appMD5Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appMD5Transform( uint32* state, uint8* block )"
  },
  {
    "label": "appMD5Encode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appMD5Encode( uint8* output, uint32* input, int32 len )"
  },
  {
    "label": "appMD5Decode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appMD5Decode( uint32* output, uint8* input, int32 len )"
  },
  {
    "label": "FMD5()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FMD5()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(const uint8* input, uint64 inputLen)"
  },
  {
    "label": "Final()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Final(uint8* digest)"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Transform( uint32* state, const uint8* block )"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Encode( uint8* output, const uint32* input, int32 len )"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decode( uint32* output, const uint8* input, int32 len )"
  },
  {
    "label": "HashFile()",
    "kind": "Method",
    "detail": "Function (FMD5Hash)",
    "insertText": "HashFile(const TCHAR* InFilename, TArray<uint8>* Buffer = nullptr)"
  },
  {
    "label": "HashFileFromArchive()",
    "kind": "Method",
    "detail": "Function (FMD5Hash)",
    "insertText": "HashFileFromArchive(FArchive* Ar, TArray<uint8>* ScratchPad = nullptr)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(Bytes)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FMD5Hash& OutHash)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(const FMD5Hash&)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(FMD5Hash& Hash, const TCHAR*)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(const FSHAHash&)"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexFromString(FSHAHash& Hash, const TCHAR*)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FSHAHash& OutHash)"
  },
  {
    "label": "IntrinsicToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IntrinsicToString(const FSHAHash& Object, const FTypeLayoutDesc& TypeDesc, const FPlatformTypeLayoutParameters& LayoutParams, FMemoryToStringContext& OutContext)"
  },
  {
    "label": "FSHA1()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FSHA1()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(const uint8 *data, uint64 len)"
  },
  {
    "label": "UpdateWithString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWithString(const TCHAR *data, uint32 len)"
  },
  {
    "label": "Final()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Final()"
  },
  {
    "label": "GetHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetHash(uint8 *puDest)"
  },
  {
    "label": "HashBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HashBuffer(const void* Data, uint64 DataSize, uint8* OutHash)"
  },
  {
    "label": "HMACBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HMACBuffer(const void* Key, uint32 KeySize, const void* Data, uint64 DataSize, uint8* OutHash)"
  },
  {
    "label": "InitializeFileHashesFromBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFileHashesFromBuffer(uint8* Buffer, uint64 BufferSize, bool bDuplicateKeyMemory=false)"
  },
  {
    "label": "GetFileSHAHash()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFileSHAHash(const TCHAR* Pathname, uint8 Hash[20], bool bIsFullPackageHash=true)"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Transform(const uint8* buffer, uint64 len)"
  },
  {
    "label": "DoWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoWork()"
  },
  {
    "label": "appOnFailSHAVerification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appOnFailSHAVerification(const TCHAR* FailedPathname, bool bFailedDueToMissingHash)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FBufferReaderWithSHA\")"
  }
]