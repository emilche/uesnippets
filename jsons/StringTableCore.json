[
  {
    "label": "FStringTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStringTable"
  },
  {
    "label": "UStringTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStringTable"
  },
  {
    "label": "FStringTableEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStringTableEntry"
  },
  {
    "label": "IStringTableEngineBridge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStringTableEngineBridge"
  },
  {
    "label": "FScopedDeferFindOrLoad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedDeferFindOrLoad"
  },
  {
    "label": "FStringTableRedirects",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStringTableRedirects"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" HAL / CriticalSection . h \" # include \" Internationalization / Internationalization . h \" # include \" Internationalization / LocKeyFuncs . h \" # include \" Internationalization / LocalizedTextSourceTypes . h \" # include \" Internationalization / StringTableCoreFwd . h \" # include \" Internationalization / Text . h \" # include \" Internationalization / TextKey . h \" # include \" Logging / LogMacros . h \" # include \" Misc / AssertionMacros . h \" # include \" Serialization / Archive . h \" # include \" Serialization / StructuredArchive . h \" # include \" Templates / Function . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / NameTypes . h \" # include<atomic> class FStringTable ; class UStringTable ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogStringTable, Log, All)"
  },
  {
    "label": "NewStringTableEntry()",
    "kind": "Method",
    "detail": "Function (class FStringTableEntry { public : FStringTableEntryRef)",
    "insertText": "NewStringTableEntry(FStringTableConstRef InOwnerTable, FString InSourceString, FTextId InDisplayStringId)"
  },
  {
    "label": "FStringTableEntry()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FStringTableEntry()"
  },
  {
    "label": "FStringTableEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStringTableEntry(FStringTableConstRef InOwnerTable, FString InSourceString, FTextId InDisplayStringId)"
  },
  {
    "label": "IsOwned()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOwned()"
  },
  {
    "label": "Disown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Disown()"
  },
  {
    "label": "IsOwnedBy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOwnedBy(const FStringTable& InStringTable)"
  },
  {
    "label": "GetSourceString()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetSourceString()"
  },
  {
    "label": "GetDisplayString()",
    "kind": "Method",
    "detail": "Function (FTextConstDisplayStringPtr)",
    "insertText": "GetDisplayString()"
  },
  {
    "label": "GetDisplayStringId()",
    "kind": "Method",
    "detail": "Function (FTextId)",
    "insertText": "GetDisplayStringId()"
  },
  {
    "label": "GetPlaceholderSourceString()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetPlaceholderSourceString()"
  },
  {
    "label": "NewStringTable()",
    "kind": "Method",
    "detail": "Function (private : FStringTableConstWeakPtr OwnerTable ; FString SourceString ; FTextId DisplayStringId ; } ; class FStringTable : public TSharedFromThis<FStringTable,ESPMode::ThreadSafe> { public : FStringTableRef)",
    "insertText": "NewStringTable()"
  },
  {
    "label": "FStringTable()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FStringTable()"
  },
  {
    "label": "GetOwnerAsset()",
    "kind": "Method",
    "detail": "Function (UStringTable*)",
    "insertText": "GetOwnerAsset()"
  },
  {
    "label": "SetOwnerAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwnerAsset(UStringTable* InOwnerAsset)"
  },
  {
    "label": "IsLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoaded()"
  },
  {
    "label": "IsLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IsLoaded(const bool bInIsLoaded)"
  },
  {
    "label": "IsInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInternal()"
  },
  {
    "label": "IsInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IsInternal(const bool bInIsInternal)"
  },
  {
    "label": "GetNamespace()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNamespace()"
  },
  {
    "label": "SetNamespace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNamespace(const FTextKey& InNamespace)"
  },
  {
    "label": "GetSourceString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSourceString(const FTextKey& InKey, FString& OutSourceString)"
  },
  {
    "label": "SetSourceString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceString(const FTextKey& InKey, const FString& InSourceString)"
  },
  {
    "label": "RemoveSourceString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSourceString(const FTextKey& InKey)"
  },
  {
    "label": "EnumerateSourceStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateSourceStrings(const TFunctionRef<bool(const FString&, const FString&)>& InEnumerator)"
  },
  {
    "label": "EnumerateKeysAndSourceStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateKeysAndSourceStrings(const TFunctionRef<bool(const FTextKey&, const FString&)>& InEnumerator)"
  },
  {
    "label": "ClearSourceStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSourceStrings(const int32 InSlack = 0)"
  },
  {
    "label": "FindEntry()",
    "kind": "Method",
    "detail": "Function (FStringTableEntryConstPtr)",
    "insertText": "FindEntry(const FTextKey& InKey)"
  },
  {
    "label": "FindKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindKey(const FStringTableEntryConstRef& InEntry, FString& OutKey)"
  },
  {
    "label": "FindKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindKey(const FStringTableEntryConstRef& InEntry, FTextKey& OutKey)"
  },
  {
    "label": "GetMetaData()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetMetaData(const FTextKey& InKey, const FName InMetaDataId)"
  },
  {
    "label": "SetMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMetaData(const FTextKey& InKey, const FName InMetaDataId, const FString& InMetaDataValue)"
  },
  {
    "label": "RemoveMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMetaData(const FTextKey& InKey, const FName InMetaDataId)"
  },
  {
    "label": "EnumerateMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateMetaData(const FTextKey& InKey, const TFunctionRef<bool(FName, const FString&)>& InEnumerator)"
  },
  {
    "label": "ClearMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMetaData(const FTextKey& InKey)"
  },
  {
    "label": "ClearMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMetaData(const int32 InSlack = 0)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "ExportStrings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportStrings(const FString& InFilename)"
  },
  {
    "label": "ImportStrings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportStrings(const FString& InFilename)"
  },
  {
    "label": "FScopedDeferFindOrLoad()",
    "kind": "Method",
    "detail": "Function (private : UStringTable* OwnerAsset ; bool bIsLoaded ; bool bIsInternal ; FTextKey TableNamespace ; TMap<FTextKey,FStringTableEntryPtr> KeysToEntries ; FCriticalSection KeyMappingCS ; typedef TMap<FName,FString> FMetaDataMap ; TMap<FTextKey,FMetaDataMap> KeysToMetaData ; FCriticalSection KeysToMetaDataCS ; } ; class IStringTableEngineBridge { public : struct FScopedDeferFindOrLoad {)",
    "insertText": "FScopedDeferFindOrLoad()"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (- - DeferFindOrLoad ; })",
    "insertText": "UE_NONCOPYABLE(FScopedDeferFindOrLoad)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; typedef TFunction<)",
    "insertText": "void(FName, FName)"
  },
  {
    "label": "CanFindOrLoadStringTableAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanFindOrLoadStringTableAsset()"
  },
  {
    "label": "LoadStringTableAsset()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "LoadStringTableAsset(const FName InTableId, FLoadStringTableAssetCallback InLoadedCallback = FLoadStringTableAssetCallback())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(InLoadedCallback)"
  },
  {
    "label": "InLoadedCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InLoadedCallback(InTableId, InTableId)"
  },
  {
    "label": "FullyLoadStringTableAsset()",
    "kind": "Method",
    "detail": "Function (} return INDEX_NONE ; } void)",
    "insertText": "FullyLoadStringTableAsset(FName& InOutTableId)"
  },
  {
    "label": "RedirectStringTableAsset()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "RedirectStringTableAsset(FName& InOutTableId)"
  },
  {
    "label": "RedirectStringTableAssetImpl()",
    "kind": "Method",
    "detail": "Function (InstancePtr ->)",
    "insertText": "RedirectStringTableAssetImpl(InOutTableId)"
  },
  {
    "label": "CollectStringTableAssetReferences()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "CollectStringTableAssetReferences(FName& InOutTableId, FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "CollectStringTableAssetReferencesImpl()",
    "kind": "Method",
    "detail": "Function (InstancePtr ->)",
    "insertText": "CollectStringTableAssetReferencesImpl(InOutTableId, Slot)"
  },
  {
    "label": "IsStringTableFromAsset()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "IsStringTableFromAsset(const FName InTableId)"
  },
  {
    "label": "IsStringTableAssetBeingReplaced()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsStringTableAssetBeingReplaced(const UStringTable* InStringTableAsset)"
  },
  {
    "label": "IStringTableEngineBridge()",
    "kind": "Method",
    "detail": "Function (} protected : ~)",
    "insertText": "IStringTableEngineBridge()"
  },
  {
    "label": "CanFindOrLoadStringTableAssetImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanFindOrLoadStringTableAssetImpl()"
  },
  {
    "label": "LoadStringTableAssetImpl()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "LoadStringTableAssetImpl(const FName InTableId, FLoadStringTableAssetCallback InLoadedCallback)"
  },
  {
    "label": "FullyLoadStringTableAssetImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FullyLoadStringTableAssetImpl(FName& InOutTableId)"
  },
  {
    "label": "RedirectStringTableAssetImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RedirectStringTableAssetImpl(FName& InOutTableId)"
  },
  {
    "label": "CollectStringTableAssetReferencesImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectStringTableAssetReferencesImpl(FName& InOutTableId, FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "IsStringTableFromAssetImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringTableFromAssetImpl(const FName InTableId)"
  },
  {
    "label": "IsStringTableAssetBeingReplacedImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringTableAssetBeingReplacedImpl(const UStringTable* InStringTableAsset)"
  },
  {
    "label": "InitStringTableRedirects()",
    "kind": "Method",
    "detail": "Function (IStringTableEngineBridge* InstancePtr ; std::atomic<int8> DeferFindOrLoad ; } ; struct FStringTableRedirects { void)",
    "insertText": "InitStringTableRedirects()"
  },
  {
    "label": "RedirectTableId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RedirectTableId(FName& InOutTableId)"
  },
  {
    "label": "RedirectKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RedirectKey(const FName InTableId, FTextKey& InOutKey)"
  },
  {
    "label": "RedirectTableIdAndKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RedirectTableIdAndKey(FName& InOutTableId, FTextKey& InOutKey)"
  }
]