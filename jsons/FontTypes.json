[
  {
    "label": "FSlateShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResource"
  },
  {
    "label": "FSlateFontCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateFontCache"
  },
  {
    "label": "FSlateFontKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateFontKey"
  },
  {
    "label": "FSlateFontKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateFontKeyFuncs"
  },
  {
    "label": "FCharacterRenderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCharacterRenderData"
  },
  {
    "label": "FDeferredCharacterRenderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeferredCharacterRenderData"
  },
  {
    "label": "ISlateFontTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateFontTexture"
  },
  {
    "label": "FTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureResource"
  },
  {
    "label": "FSlateFontAtlas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateFontAtlas"
  },
  {
    "label": "FAtlasedTextureSlot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAtlasedTextureSlot"
  },
  {
    "label": "ISlateFontAtlasFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateFontAtlasFactory"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Math / UnrealMathSSE . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Textures / TextureAtlas . h \" class FSlateShaderResource ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnReleaseFontResources, const class FSlateFontCache&)"
  },
  {
    "label": "FSlateFontKey()",
    "kind": "Method",
    "detail": "Function (struct FSlateFontKey { public :)",
    "insertText": "FSlateFontKey(const FSlateFontInfo& InInfo, const FFontOutlineSettings& InFontOutlineSettings, const float InScale ) : FontInfo( InInfo ) , OutlineSettings(InFontOutlineSettings) , Scale( InScale ) , KeyHash( 0)"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (KeyHash =)",
    "insertText": "HashCombine(KeyHash, GetLegacyTypeHash(FontInfo))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (KeyHash =)",
    "insertText": "HashCombine(KeyHash, GetTypeHash(OutlineSettings))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (KeyHash =)",
    "insertText": "HashCombine(KeyHash, GetTypeHash(Scale))"
  },
  {
    "label": "GetFontInfo()",
    "kind": "Method",
    "detail": "Function (} const FSlateFontInfo&)",
    "insertText": "GetFontInfo()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FSlateFontKey& Key)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetKeyHash(const FSlateFontKey& Identifier)"
  },
  {
    "label": "ISlateFontTexture()",
    "kind": "Method",
    "detail": "Function (} } ; struct FCharacterRenderData { TArray<uint8> RawPixels ; int16 SizeX = 0 ; int16 SizeY = 0 ; int16 VerticalOffset = 0 ; int16 HorizontalOffset = 0 ; ESlateFontAtlasContentType ContentType = ESlateFontAtlasContentType::Alpha ; bool bSupportsOutline = false ; } ; struct FDeferredCharacterRenderData { int16 USize = 0 ; int16 VSize = 0 ; int16 StartU = 0 ; int16 StartV = 0 ; TArray<uint8> RawPixels ; } ; class ISlateFontTexture { public : ~)",
    "insertText": "ISlateFontTexture()"
  },
  {
    "label": "GetSlateTexture()",
    "kind": "Method",
    "detail": "Function (} class FSlateShaderResource*)",
    "insertText": "GetSlateTexture()"
  },
  {
    "label": "GetEngineTexture()",
    "kind": "Method",
    "detail": "Function (class FTextureResource*)",
    "insertText": "GetEngineTexture()"
  },
  {
    "label": "GetContentType()",
    "kind": "Method",
    "detail": "Function (ESlateFontAtlasContentType)",
    "insertText": "GetContentType()"
  },
  {
    "label": "ReleaseRenderingResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRenderingResources()"
  },
  {
    "label": "FSlateFontAtlas()",
    "kind": "Method",
    "detail": "Function (} ; class FSlateFontAtlas : public ISlateFontTexture,public FSlateTextureAtlas { public :)",
    "insertText": "FSlateFontAtlas(uint32 InWidth, uint32 InHeight, ESlateFontAtlasContentType InContentType, ESlateTextureAtlasPaddingStyle InPaddingStyle)"
  },
  {
    "label": "FSlateFontAtlas()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSlateFontAtlas()"
  },
  {
    "label": "GetAtlasTexture()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResource*)",
    "insertText": "GetAtlasTexture()"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Flush()"
  },
  {
    "label": "AddCharacter()",
    "kind": "Method",
    "detail": "Function (const struct FAtlasedTextureSlot*)",
    "insertText": "AddCharacter(const FCharacterRenderData& CharInfo)"
  },
  {
    "label": "BeginDeferredAddCharacter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BeginDeferredAddCharacter(const int16 InSizeX, const int16 InSizeY, FDeferredCharacterRenderData& OutCharInfo)"
  },
  {
    "label": "EndDeferredAddCharacter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndDeferredAddCharacter(const FDeferredCharacterRenderData& CharInfo)"
  },
  {
    "label": "GetAtlasSize()",
    "kind": "Method",
    "detail": "Function (protected : ESlateFontAtlasContentType ContentType ; } ; class ISlateFontAtlasFactory { public : FIntPoint)",
    "insertText": "GetAtlasSize(ESlateFontAtlasContentType InContentType)"
  },
  {
    "label": "CreateFontAtlas()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSlateFontAtlas>)",
    "insertText": "CreateFontAtlas(ESlateFontAtlasContentType InContentType)"
  },
  {
    "label": "CreateNonAtlasedTexture()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISlateFontTexture>)",
    "insertText": "CreateNonAtlasedTexture(const uint32 InWidth, const uint32 InHeight, ESlateFontAtlasContentType InContentType, const TArray<uint8>& InRawData)"
  }
]