[
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_HASH_SHA1_H_ # define BASE_HASH_SHA1_H_ # include<stddef . h> # include<array> # include<string> # include \" base / base_export . h \" # include \" base / containers / span . h \" # include \" base / strings / string_piece . h \" # include \" build / build_config . h \" # if)",
    "insertText": "BUILDFLAG(IS_NACL)"
  },
  {
    "label": "SHA1HashSpan()",
    "kind": "Method",
    "detail": "Function (enum { kSHA1Length = 2 0 } ; using SHA1Digest = std::array<uint8_t,kSHA1Length> ; BASE_EXPORT SHA1Digest)",
    "insertText": "SHA1HashSpan(span<const uint8_t> data)"
  },
  {
    "label": "SHA1HashString()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT std::string)",
    "insertText": "SHA1HashString(StringPiece str)"
  },
  {
    "label": "SHA1HashBytes()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT void)",
    "insertText": "SHA1HashBytes(const unsigned char* data, size_t len, unsigned char* hash)"
  },
  {
    "label": "SHA1Init()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT void)",
    "insertText": "SHA1Init(SHA1Context& context)"
  },
  {
    "label": "SHA1Update()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT void)",
    "insertText": "SHA1Update(const StringPiece data, SHA1Context& context)"
  },
  {
    "label": "SHA1Final()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT void)",
    "insertText": "SHA1Final(SHA1Context& context, SHA1Digest& digest)"
  }
]