[
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnum"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "UScriptStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScriptStruct"
  },
  {
    "label": "UObjectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectBase"
  },
  {
    "label": "UObjectBaseUtility",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectBaseUtility"
  },
  {
    "label": "Z_Construct_UClass_UObject_Statics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Z_Construct_UClass_UObject_Statics"
  },
  {
    "label": "FUObjectArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUObjectArray"
  },
  {
    "label": "FUObjectAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUObjectAllocator"
  },
  {
    "label": "FInternalUObjectBaseUtilityIsValidFlagsChecker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInternalUObjectBaseUtilityIsValidFlagsChecker"
  },
  {
    "label": "FBlueprintCompileReinstancer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintCompileReinstancer"
  },
  {
    "label": "FVerseObjectClassReplacer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVerseObjectClassReplacer"
  },
  {
    "label": "FContextObjectManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContextObjectManager"
  },
  {
    "label": "FUObjectHashTables",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUObjectHashTables"
  },
  {
    "label": "TRegistrationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRegistrationInfo"
  },
  {
    "label": "FRegisterCompiledInInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegisterCompiledInInfo"
  },
  {
    "label": "FClassReloadVersionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClassReloadVersionInfo"
  },
  {
    "label": "FClassRegisterCompiledInInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClassRegisterCompiledInInfo"
  },
  {
    "label": "FStructReloadVersionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructReloadVersionInfo"
  },
  {
    "label": "FStructRegisterCompiledInInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructRegisterCompiledInInfo"
  },
  {
    "label": "FEnumReloadVersionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnumReloadVersionInfo"
  },
  {
    "label": "FEnumRegisterCompiledInInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnumRegisterCompiledInInfo"
  },
  {
    "label": "FPackageReloadVersionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageReloadVersionInfo"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" HAL / LowLevelMemTracker . h \" # include \" HAL / PlatformAtomics . h \" # include \" HAL / PlatformMath . h \" # include \" Misc / AssertionMacros . h \" # include \" Stats / Stats . h \" # include \" Stats / Stats2 . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / UnrealNames . h \" # include \" UObject / ObjectPtr . h \" # include \" AutoRTFM / AutoRTFM . h \" class UClass ; class UEnum ; class UObject ; class UPackage ; class UScriptStruct ; # if !)",
    "insertText": "defined(UE_STORE_OBJECT_LIST_INTERNAL_INDEX) # define UE_STORE_OBJECT_LIST_INTERNAL_INDEX 0 #endif DECLARE_DWORD_COUNTER_STAT_EXTERN(TEXT(\"STAT_UObjectsStatGroupTester\"), STAT_UObjectsStatGroupTester, STATGROUP_UObjects, COREUOBJECT_API)"
  },
  {
    "label": "UObjectForceRegistration()",
    "kind": "Method",
    "detail": "Function (class UObjectBase { class UObjectBaseUtility ; struct Z_Construct_UClass_UObject_Statics ; class FUObjectArray ; class FUObjectAllocator ; struct FInternalUObjectBaseUtilityIsValidFlagsChecker ; void)",
    "insertText": "UObjectForceRegistration(UObjectBase* Object, bool bCheckForModuleRelease)"
  },
  {
    "label": "InitializePrivateStaticClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializePrivateStaticClass(class UClass* TClass_Super_StaticClass, class UClass* TClass_PrivateStaticClass, class UClass* TClass_WithinClass_StaticClass, const TCHAR* PackageName, const TCHAR* Name)"
  },
  {
    "label": "UObjectBase()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "UObjectBase() : ClassPrivate(NoInit), NamePrivate(NoInit), OuterPrivate(NoInit)"
  },
  {
    "label": "UObjectBase()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UObjectBase(EObjectFlags InFlags)"
  },
  {
    "label": "UObjectBase()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UObjectBase(UClass* InClass, EObjectFlags InFlags, EInternalObjectFlags InInternalFlags, UObject *InOuter, FName InName, int32 InInternalIndex = -1, int32 InSerialNumber = 0)"
  },
  {
    "label": "UObjectBase()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UObjectBase()"
  },
  {
    "label": "LowLevelRename()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "LowLevelRename(FName NewName,UObject *NewOuter = NULL)"
  },
  {
    "label": "RegisterDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDependencies()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Register(const TCHAR* PackageName,const TCHAR* Name)"
  },
  {
    "label": "DeferredRegister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferredRegister(UClass *UClassStaticClass,const TCHAR* PackageName,const TCHAR* Name)"
  },
  {
    "label": "AddObject()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddObject(FName Name, EInternalObjectFlags InSetInternalFlags, int32 InInternalIndex = -1, int32 InSerialNumber = 0)"
  },
  {
    "label": "IsValidLowLevelForDestruction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidLowLevelForDestruction()"
  },
  {
    "label": "IsValidLowLevel()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "IsValidLowLevel()"
  },
  {
    "label": "IsValidLowLevelFast()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidLowLevelFast(bool bRecursive = true)"
  },
  {
    "label": "GetClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "GetClass()"
  },
  {
    "label": "RemoveClassPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "RemoveClassPrefix(const TCHAR* ClassName)"
  },
  {
    "label": "GetExternalPackage()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "GetExternalPackage()"
  },
  {
    "label": "SetExternalPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExternalPackage(UPackage* InPackage)"
  },
  {
    "label": "GetExternalPackageInternal()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "GetExternalPackageInternal()"
  },
  {
    "label": "MarkAsReachable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAsReachable()"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRef()"
  },
  {
    "label": "ReleaseRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRef()"
  },
  {
    "label": "GetFlags()",
    "kind": "Method",
    "detail": "Function (ObjectFlags = NewFlags ; } public : EObjectFlags)",
    "insertText": "GetFlags()"
  },
  {
    "label": "Flags()",
    "kind": "Method",
    "detail": "Function (EObjectFlags)",
    "insertText": "Flags(EObjectFlags)GetFlagsInternal()"
  },
  {
    "label": "GetFlagsInternal()",
    "kind": "Method",
    "detail": "Function (int32 OldFlags =)",
    "insertText": "GetFlagsInternal()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int32 NewFlags = OldFlags | FlagsToAdd ;)",
    "insertText": "if(NewFlags == OldFlags)"
  },
  {
    "label": "OnAbort()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "OnAbort([this, OldFlags, FlagsToAdd] { int32 MaskFlags = OldFlags; MaskFlags &= FlagsToAdd; MaskFlags |= ~FlagsToAdd; FPlatformAtomics::InterlockedAnd((int32*)&ObjectFlags, MaskFlags); })"
  },
  {
    "label": "AtomicallyClearFlags()",
    "kind": "Method",
    "detail": "Function (} FORCENOINLINE void)",
    "insertText": "AtomicallyClearFlags(EObjectFlags FlagsToClear)"
  },
  {
    "label": "OnAbort()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "OnAbort([this, OldFlags, FlagsToClear] { int32 MaskFlags = OldFlags; MaskFlags &= FlagsToClear; FPlatformAtomics::InterlockedOr((int32*)&ObjectFlags, MaskFlags); })"
  },
  {
    "label": "PrefetchClass()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PrefetchClass(UObject* Object)"
  },
  {
    "label": "Prefetch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Prefetch(Object, offsetof(UObjectBase, ClassPrivate))"
  },
  {
    "label": "PrefetchOuter()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PrefetchOuter(UObject* Object)"
  },
  {
    "label": "Prefetch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Prefetch(Object, offsetof(UObjectBase, OuterPrivate))"
  },
  {
    "label": "AtomicRead_Relaxed()",
    "kind": "Method",
    "detail": "Function (int32 Result = 0 ; UE_AUTORTFM_OPEN { Result =)",
    "insertText": "AtomicRead_Relaxed((int32*)&ObjectFlags)"
  },
  {
    "label": "AddToClassMap()",
    "kind": "Method",
    "detail": "Function (} ; return Result ; } EObjectFlags ObjectFlags ; int32 InternalIndex ; ObjectPtr_Private::TNonAccessTrackedObjectPtr<UClass> ClassPrivate ; FName NamePrivate ; # if UE_STORE_OBJECT_LIST_INTERNAL_INDEX int32 ObjectListInternalIndex ; # endif ObjectPtr_Private::TNonAccessTrackedObjectPtr<UObject> OuterPrivate ; class FBlueprintCompileReinstancer ; class FVerseObjectClassReplacer ; class FContextObjectManager ; void)",
    "insertText": "AddToClassMap(class FUObjectHashTables& ThreadHash, UObjectBase* Object)"
  },
  {
    "label": "RemoveFromClassMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromClassMap(class FUObjectHashTables& ThreadHash, UObjectBase* Object)"
  },
  {
    "label": "SetClass()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetClass(UClass* NewClass)"
  },
  {
    "label": "UObjectInitialized()",
    "kind": "Method",
    "detail": "Function (# endif } ; bool)",
    "insertText": "UObjectInitialized()"
  },
  {
    "label": "UObjectForceRegistration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UObjectForceRegistration(UObjectBase* Object, bool bCheckForModuleRelease = true)"
  },
  {
    "label": "FRegisterCompiledInInfo()",
    "kind": "Method",
    "detail": "Function (template<T,V> struct TRegistrationInfo { using TType = T ; using TVersion = V ; TType* InnerSingleton = nullptr ; TType* OuterSingleton = nullptr ; TVersion ReloadVersionInfo ; } ; struct FRegisterCompiledInInfo { template<. . . Args>)",
    "insertText": "FRegisterCompiledInInfo(Args&& ... args)"
  },
  {
    "label": "RegisterCompiledInInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCompiledInInfo(std::forward<Args>(args)...)"
  },
  {
    "label": "UClass()",
    "kind": "Method",
    "detail": "Function (} } ; struct FClassReloadVersionInfo { # if WITH_RELOAD SIZE_T Size = 0 ; uint32 Hash = 0 ; # endif } ; using FClassRegistrationInfo = TRegistrationInfo<UClass,FClassReloadVersionInfo> ; struct FClassRegisterCompiledInInfo { class)",
    "insertText": "UClass(*OuterRegister)()"
  },
  {
    "label": "UClass()",
    "kind": "Method",
    "detail": "Function (class)",
    "insertText": "UClass(*InnerRegister)()"
  },
  {
    "label": "RegisterCompiledInInfo()",
    "kind": "Method",
    "detail": "Function (const TCHAR* Name ; FClassRegistrationInfo* Info ; FClassReloadVersionInfo VersionInfo ; } ; void)",
    "insertText": "RegisterCompiledInInfo(class UClass* (*InOuterRegister)(), class UClass* (*InInnerRegister)(), const TCHAR* InPackageName, const TCHAR* InName, FClassRegistrationInfo& InInfo, const FClassReloadVersionInfo& InVersionInfo)"
  },
  {
    "label": "UScriptStruct()",
    "kind": "Method",
    "detail": "Function (struct FStructReloadVersionInfo { # if WITH_RELOAD SIZE_T Size = 0 ; uint32 Hash = 0 ; # endif } ; using FStructRegistrationInfo = TRegistrationInfo<UScriptStruct,FStructReloadVersionInfo> ; struct FStructRegisterCompiledInInfo { class)",
    "insertText": "UScriptStruct(*OuterRegister)()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(*CreateCppStructOps)()"
  },
  {
    "label": "RegisterCompiledInInfo()",
    "kind": "Method",
    "detail": "Function (const TCHAR* Name ; FStructRegistrationInfo* Info ; FStructReloadVersionInfo VersionInfo ; } ; void)",
    "insertText": "RegisterCompiledInInfo(class UScriptStruct* (*InOuterRegister)(), const TCHAR* InPackageName, const TCHAR* InName, FStructRegistrationInfo& InInfo, const FStructReloadVersionInfo& InVersionInfo)"
  },
  {
    "label": "GetStaticStruct()",
    "kind": "Method",
    "detail": "Function (class UScriptStruct*)",
    "insertText": "GetStaticStruct(class UScriptStruct* (*InRegister)(), UObject* StructOuter, const TCHAR* StructName)"
  },
  {
    "label": "UEnum()",
    "kind": "Method",
    "detail": "Function (struct FEnumReloadVersionInfo { # if WITH_RELOAD uint32 Hash = 0 ; # endif } ; using FEnumRegistrationInfo = TRegistrationInfo<UEnum,FEnumReloadVersionInfo> ; struct FEnumRegisterCompiledInInfo { class)",
    "insertText": "UEnum(*OuterRegister)()"
  },
  {
    "label": "RegisterCompiledInInfo()",
    "kind": "Method",
    "detail": "Function (const TCHAR* Name ; FEnumRegistrationInfo* Info ; FEnumReloadVersionInfo VersionInfo ; } ; void)",
    "insertText": "RegisterCompiledInInfo(class UEnum* (*InOuterRegister)(), const TCHAR* InPackageName, const TCHAR* InName, FEnumRegistrationInfo& InInfo, const FEnumReloadVersionInfo& InVersionInfo)"
  },
  {
    "label": "GetStaticEnum()",
    "kind": "Method",
    "detail": "Function (class UEnum*)",
    "insertText": "GetStaticEnum(class UEnum* (*InRegister)(), UObject* EnumOuter, const TCHAR* EnumName)"
  },
  {
    "label": "RegisterCompiledInInfo()",
    "kind": "Method",
    "detail": "Function (struct FPackageReloadVersionInfo { # if WITH_RELOAD uint32 BodyHash = 0 ; uint32 DeclarationsHash = 0 ; # endif } ; using FPackageRegistrationInfo = TRegistrationInfo<UPackage,FPackageReloadVersionInfo> ; void)",
    "insertText": "RegisterCompiledInInfo(UPackage* (*InOuterRegister)(), const TCHAR* InPackageName, FPackageRegistrationInfo& InInfo, const FPackageReloadVersionInfo& InVersionInfo)"
  },
  {
    "label": "RegisterCompiledInInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCompiledInInfo(const TCHAR* PackageName, const FClassRegisterCompiledInInfo* ClassInfo, size_t NumClassInfo, const FStructRegisterCompiledInInfo* StructInfo, size_t NumStructInfo, const FEnumRegisterCompiledInInfo* EnumInfo, size_t NumEnumInfo)"
  },
  {
    "label": "RegisterProcessNewlyLoadedUObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterProcessNewlyLoadedUObjects()"
  },
  {
    "label": "ProcessNewlyLoadedUObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessNewlyLoadedUObjects(FName Package = NAME_None, bool bCanProcessNewlyLoadedObjects = true)"
  },
  {
    "label": "UObjectBaseInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UObjectBaseInit()"
  },
  {
    "label": "UObjectBaseShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UObjectBaseShutdown()"
  }
]