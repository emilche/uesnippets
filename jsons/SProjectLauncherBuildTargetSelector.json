[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "SProjectLauncherBuildTargetSelector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectLauncherBuildTargetSelector"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Input / SComboBox . h \" # include \" Models / ProjectLauncherModel . h \" class Error ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnLauncherProfileChanged, ILauncherProfilePtr)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SProjectLauncherBuildTargetSelector : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SProjectLauncherBuildTargetSelector) : _UseProfile(false)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(bool, UseProfile) SLATE_END_ARGS() public: ~SProjectLauncherBuildTargetSelector()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<FProjectLauncherModel>& InModel)"
  },
  {
    "label": "RefreshBuildTargetList()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RefreshBuildTargetList()"
  },
  {
    "label": "IsBuildTargetVisible()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "IsBuildTargetVisible()"
  },
  {
    "label": "HandleBuildTargetComboButtonText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleBuildTargetComboButtonText()"
  },
  {
    "label": "GetBuildTargetText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBuildTargetText(FString BuildTarget)"
  },
  {
    "label": "HandleBuildTargetSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBuildTargetSelectionChanged(TSharedPtr<FString> Item, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "HandleBuildTargetGenerateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "HandleBuildTargetGenerateWidget(TSharedPtr<FString> Item)"
  },
  {
    "label": "HandleProfileManagerProfileSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProfileManagerProfileSelected(const ILauncherProfilePtr& SelectedProfile, const ILauncherProfilePtr& PreviousProfile)"
  },
  {
    "label": "HandleProfileProjectChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProfileProjectChanged()"
  },
  {
    "label": "HandleProfileBuildTargetOptionsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProfileBuildTargetOptionsChanged()"
  },
  {
    "label": "SetBuildTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBuildTarget(const FString& BuildTarget)"
  },
  {
    "label": "GetProfile()",
    "kind": "Method",
    "detail": "Function (ILauncherProfilePtr)",
    "insertText": "GetProfile()"
  }
]