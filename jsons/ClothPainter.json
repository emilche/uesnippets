[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "IMeshPaintGeometryAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMeshPaintGeometryAdapter"
  },
  {
    "label": "SClothPaintWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SClothPaintWidget"
  },
  {
    "label": "UClothPainterSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClothPainterSettings"
  },
  {
    "label": "UClothingAssetCommon",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClothingAssetCommon"
  },
  {
    "label": "UDebugSkelMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDebugSkelMeshComponent"
  },
  {
    "label": "UMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshComponent"
  },
  {
    "label": "UMeshPaintSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshPaintSettings"
  },
  {
    "label": "UPaintBrushSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPaintBrushSettings"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FClothPaintToolBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClothPaintToolBase"
  },
  {
    "label": "FClothPainter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClothPainter"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FClothPaintSettingsCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClothPaintSettingsCustomization"
  },
  {
    "label": "FClothPainter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Delegates / IDelegateInstance . h \" # include \" Engine / EngineBaseTypes . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" Engine / HitResult . h \" # endif # include \" IMeshPainter . h \" # include \" InputCoreTypes . h \" # include \" Internationalization / Text . h \" # include \" Math / UnrealMathSSE . h \" # include \" MeshPaintHelpers . h \" # include \" MeshPaintTypes . h \" # include \" Templates / SharedPointer . h \" class AActor ; class FEditorViewportClient ; class FPrimitiveDrawInterface ; class FReferenceCollector ; class FSceneView ; class FUICommandList ; class FViewport ; class IMeshPaintGeometryAdapter ; class SClothPaintWidget ; class UClothPainterSettings ; class UClothingAssetCommon ; class UDebugSkelMeshComponent ; class UMeshComponent ; class UMeshPaintSettings ; class UPaintBrushSettings ; class USkeletalMesh ; struct FHitResult ; enum class EPaintableClothProperty ; class FClothPaintToolBase ; class FClothPainter : public IMeshPainter,public TSharedFromThis<FClothPainter> { public :)",
    "insertText": "FClothPainter()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "PaintInternal()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "PaintInternal(const FVector& InCameraOrigin, const TArrayView<TPair<FVector, FVector>>& Rays, EMeshPaintAction PaintAction, float PaintStrength)"
  },
  {
    "label": "EnterPaintMode()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "EnterPaintMode()"
  },
  {
    "label": "ExitPaintMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExitPaintMode()"
  },
  {
    "label": "RecalculateAutoViewRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecalculateAutoViewRange()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(FEditorViewportClient* ViewportClient, float DeltaTime)"
  },
  {
    "label": "FinishPainting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishPainting()"
  },
  {
    "label": "ActorSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActorSelected(AActor* Actor)"
  },
  {
    "label": "ActorDeselected()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "ActorDeselected(AActor* Actor)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetMeshAdapterForComponent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IMeshPaintGeometryAdapter>)",
    "insertText": "GetMeshAdapterForComponent(const UMeshComponent* Component)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetBrushSettings()",
    "kind": "Method",
    "detail": "Function (UPaintBrushSettings*)",
    "insertText": "GetBrushSettings()"
  },
  {
    "label": "GetPainterSettings()",
    "kind": "Method",
    "detail": "Function (UMeshPaintSettings*)",
    "insertText": "GetPainterSettings()"
  },
  {
    "label": "GetWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class SWidget>)",
    "insertText": "GetWidget()"
  },
  {
    "label": "GetHitResult()",
    "kind": "Method",
    "detail": "Function (const FHitResult)",
    "insertText": "GetHitResult(const FVector& Origin, const FVector& Direction)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render(const FSceneView* View, FViewport* Viewport, FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "InputKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputKey(FEditorViewportClient* InViewportClient, FViewport* InViewport, FKey InKey, EInputEvent InEvent)"
  },
  {
    "label": "SetSkeletalMeshComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSkeletalMeshComponent(UDebugSkelMeshComponent* SkeletalMeshComponent)"
  },
  {
    "label": "GetSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (USkeletalMesh*)",
    "insertText": "GetSkeletalMesh()"
  },
  {
    "label": "CreatePaintParameters()",
    "kind": "Method",
    "detail": "Function (FMeshPaintParameters)",
    "insertText": "CreatePaintParameters(const struct FHitResult& HitResult, const FVector& InCameraOrigin, const FVector& InRayOrigin, const FVector& InRayDirection, float PaintStrength)"
  },
  {
    "label": "GetPropertyValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPropertyValue(int32 VertexIndex)"
  },
  {
    "label": "SetPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPropertyValue(int32 VertexIndex, const float Value)"
  },
  {
    "label": "SetIsPainting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsPainting(bool bInPainting)"
  },
  {
    "label": "GetSelectedTool()",
    "kind": "Method",
    "detail": "Function (bArePainting = bInPainting ; } const TSharedPtr<FClothPaintToolBase>)",
    "insertText": "GetSelectedTool()"
  },
  {
    "label": "OnAssetMaskSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetMaskSelectionChanged()"
  },
  {
    "label": "GetViewportText()",
    "kind": "Method",
    "detail": "Function (} ; FText)",
    "insertText": "GetViewportText()"
  },
  {
    "label": "GetPaintAction()",
    "kind": "Method",
    "detail": "Function (FPerVertexPaintAction)",
    "insertText": "GetPaintAction(const FMeshPaintParameters& InPaintParams)"
  },
  {
    "label": "SetTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTool(TSharedPtr<FClothPaintToolBase> InTool)"
  }
]