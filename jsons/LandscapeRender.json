[
  {
    "label": "FLandscapeComponentSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeComponentSceneProxy"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EShaderPlatform",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShaderPlatform"
  },
  {
    "label": "IShadowInvalidatingInstances",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IShadowInvalidatingInstances"
  },
  {
    "label": "FLandscapeRayTracingImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeRayTracingImpl"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FLandscapeBatchElementParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeBatchElementParams"
  },
  {
    "label": "FLandscapeElementParamArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeElementParamArray"
  },
  {
    "label": "FLandscapeVertexFactoryVertexShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeVertexFactoryVertexShaderParameters"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "FMeshMaterialShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshMaterialShader"
  },
  {
    "label": "FMeshDrawSingleShaderBindings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawSingleShaderBindings"
  },
  {
    "label": "FLandscapeVertexFactoryPixelShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeVertexFactoryPixelShaderParameters"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "FMeshMaterialShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshMaterialShader"
  },
  {
    "label": "FMeshDrawSingleShaderBindings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawSingleShaderBindings"
  },
  {
    "label": "FLandscapeVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeVertexFactory"
  },
  {
    "label": "FDataType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataType"
  },
  {
    "label": "FLandscapeXYOffsetVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeXYOffsetVertexFactory"
  },
  {
    "label": "FLandscapeFixedGridVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeFixedGridVertexFactory"
  },
  {
    "label": "FLandscapeVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeVertex"
  },
  {
    "label": "FLandscapeVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeVertexBuffer"
  },
  {
    "label": "FLandscapeSharedBuffers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeSharedBuffers"
  },
  {
    "label": "FLandscapeIndexRanges",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeIndexRanges"
  },
  {
    "label": "FLandscapeSectionInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeSectionInfo"
  },
  {
    "label": "FLandscapeRenderSystem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeRenderSystem"
  },
  {
    "label": "LODSettingsComponent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LODSettingsComponent"
  },
  {
    "label": "FLandscapeLODOverridesCustomRenderPassUserData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeLODOverridesCustomRenderPassUserData"
  },
  {
    "label": "FLandscapeSceneViewExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeSceneViewExtension"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "FLandscapeViewData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeViewData"
  },
  {
    "label": "FLandscapeVisibilityHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeVisibilityHelper"
  },
  {
    "label": "FLandscapeDebugOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeDebugOptions"
  },
  {
    "label": "FLandscapeMeshProxySceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeMeshProxySceneProxy"
  },
  {
    "label": "FLandscapeComponentSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeComponentSceneProxy"
  },
  {
    "label": "FLandscapeSharedBuffers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeSharedBuffers"
  },
  {
    "label": "FLandscapeLCI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeLCI"
  },
  {
    "label": "ArrayType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayType"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "FLandscapeVertexFactoryVertexShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeVertexFactoryVertexShaderParameters"
  },
  {
    "label": "FLandscapeXYOffsetVertexFactoryVertexShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeXYOffsetVertexFactoryVertexShaderParameters"
  },
  {
    "label": "FLandscapeVertexFactoryPixelShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeVertexFactoryPixelShaderParameters"
  },
  {
    "label": "FLandscapeBatchElementParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeBatchElementParams"
  },
  {
    "label": "FLandscapeDebugMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeDebugMaterialRenderProxy"
  },
  {
    "label": "FLandscapeSelectMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeSelectMaterialRenderProxy"
  },
  {
    "label": "FLandscapeMaskMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeMaskMaterialRenderProxy"
  },
  {
    "label": "FLandscapeLayerUsageRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeLayerUsageRenderProxy"
  },
  {
    "label": "NeedsFixedGridVertexFactory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsFixedGridVertexFactory(EShaderPlatform InShaderPlatform)"
  },
  {
    "label": "ShouldBuildGrassMapRenderingResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldBuildGrassMapRenderingResources()"
  },
  {
    "label": "FLandscapeVertexFactory()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_API)",
    "insertText": "FLandscapeVertexFactory(ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "ReleaseResource()",
    "kind": "Method",
    "detail": "Function (thread)",
    "insertText": "ReleaseResource()"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "GetPSOPrecacheVertexFetchElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPSOPrecacheVertexFetchElements(EVertexInputStreamType VertexInputStreamType, FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Copy(const FLandscapeVertexFactory& Other)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "FLandscapeSharedBuffers()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_API)",
    "insertText": "FLandscapeSharedBuffers(FRHICommandListBase& RHICmdList, int32 SharedBuffersKey, int32 SubsectionSizeQuads, int32 NumSubsections, ERHIFeatureLevel::Type FeatureLevel, const FName& OwnerName = NAME_None)"
  },
  {
    "label": "CreateIndexBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateIndexBuffers(FRHICommandListBase& RHICmdList, const FName& OwnerName)"
  },
  {
    "label": "CreateGrassIndexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGrassIndexBuffer(FRHICommandListBase& RHICmdList, const FName& InOwnerName)"
  },
  {
    "label": "FLandscapeSectionInfo()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FLandscapeSectionInfo(const UWorld* InWorld, const FGuid& InLandscapeGuid, const FIntPoint& InComponentBase, uint32 LODGroupKey, uint32 InLandscapeKey)"
  },
  {
    "label": "ComputeLODFromScreenSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ComputeLODFromScreenSize(const LODSettingsComponent& InLODSettings, float InScreenSizeSquared)"
  },
  {
    "label": "CreateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateResources(FRHICommandListBase& RHICmdList, FLandscapeSectionInfo* SectionInfo)"
  },
  {
    "label": "DestroyResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyResources(FLandscapeSectionInfo* SectionInfo)"
  },
  {
    "label": "RegisterSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterSection(FLandscapeSectionInfo* SectionInfo)"
  },
  {
    "label": "UnregisterSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSection(FLandscapeSectionInfo* SectionInfo)"
  },
  {
    "label": "ResizeAndMoveTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeAndMoveTo(FIntPoint NewMin, FIntPoint NewMax)"
  },
  {
    "label": "ResizeToInclude()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeToInclude(const FIntPoint& NewCoord)"
  },
  {
    "label": "CompactMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompactMap()"
  },
  {
    "label": "AnySectionsInRangeInclusive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnySectionsInRangeInclusive(FIntPoint RangeMin, FIntPoint RangeMax)"
  },
  {
    "label": "PerformShadowInvalidations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformShadowInvalidations(UE::Renderer::Private::IShadowInvalidatingInstances& InShadowInvalidatingInstances)"
  },
  {
    "label": "FetchHeightmapLODBiases()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FetchHeightmapLODBiases()"
  },
  {
    "label": "UpdateBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBuffers(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "CreateResources_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateResources_Internal(FRHICommandListBase& RHICmdList, FLandscapeSectionInfo* InSectionInfo)"
  },
  {
    "label": "DestroyResources_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyResources_Internal(FLandscapeSectionInfo* InSectionInfo)"
  },
  {
    "label": "IMPLEMENT_CUSTOM_RENDER_PASS_USER_DATA()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "IMPLEMENT_CUSTOM_RENDER_PASS_USER_DATA(FLandscapeLODOverridesCustomRenderPassUserData)"
  },
  {
    "label": "FLandscapeSceneViewExtension()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FLandscapeSceneViewExtension(const FAutoRegister& AutoReg)"
  },
  {
    "label": "EndFrame_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFrame_GameThread()"
  },
  {
    "label": "EndFrame_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFrame_RenderThread()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(UPrimitiveComponent* LandscapeComponent, FPrimitiveSceneProxy* ProxyIn)"
  },
  {
    "label": "OnAddedToWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnAddedToWorld()"
  },
  {
    "label": "OnRemoveFromWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnRemoveFromWorld()"
  },
  {
    "label": "FLandscapeDebugOptions()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_API)",
    "insertText": "FLandscapeDebugOptions()"
  },
  {
    "label": "Patches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Patches()"
  },
  {
    "label": "Static()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Static()"
  },
  {
    "label": "RegisterSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterSections()"
  },
  {
    "label": "UnregisterSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSections()"
  },
  {
    "label": "FLandscapeComponentSceneProxy()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_API)",
    "insertText": "FLandscapeComponentSceneProxy(ULandscapeComponent* InComponent)"
  },
  {
    "label": "ChangeComponentScreenSizeToUseSubSections_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeComponentScreenSizeToUseSubSections_RenderThread(float InComponentScreenSizeToUseSubSections)"
  }
]