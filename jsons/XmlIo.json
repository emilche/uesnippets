[
  {
    "label": "XmlReadOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "XmlReadOptions"
  },
  {
    "label": "MX_FORMAT_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_FORMAT_API"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef MATERIALX_XMLIO_H # define MATERIALX_XMLIO_H # include<MaterialXCore / Library . h> # include<MaterialXCore / Document . h> # include<MaterialXFormat / Export . h> # include<MaterialXFormat / File . h> MATERIALX_NAMESPACE_BEGIN class XmlReadOptions ; const string MTLX_EXTENSION ; using XmlReadFunction = std::function<)",
    "insertText": "void(DocumentPtr, const FilePath&, const FileSearchPath&, const XmlReadOptions*)"
  },
  {
    "label": "XmlReadOptions()",
    "kind": "Method",
    "detail": "Function (class XmlReadOptions { public :)",
    "insertText": "XmlReadOptions()"
  },
  {
    "label": "XmlWriteOptions()",
    "kind": "Method",
    "detail": "Function (} bool readComments ; bool upgradeVersion ; XmlReadFunction readXIncludeFunction ; StringVec parentXIncludes ; } ; class XmlWriteOptions { public :)",
    "insertText": "XmlWriteOptions()"
  },
  {
    "label": "readFromXmlBuffer()",
    "kind": "Method",
    "detail": "Function (} bool writeXIncludeEnable ; ElementPredicate elementPredicate ; } ; class ExceptionParseError : public Exception { public : using Exception::Exception ; } ; class ExceptionFileMissing : public Exception { public : using Exception::Exception ; } ; void)",
    "insertText": "readFromXmlBuffer(DocumentPtr doc, const char* buffer, FileSearchPath searchPath = FileSearchPath(), const XmlReadOptions* readOptions = nullptr)"
  },
  {
    "label": "readFromXmlStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readFromXmlStream(DocumentPtr doc, std::istream& stream, FileSearchPath searchPath = FileSearchPath(), const XmlReadOptions* readOptions = nullptr)"
  },
  {
    "label": "readFromXmlFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readFromXmlFile(DocumentPtr doc, FilePath filename, FileSearchPath searchPath = FileSearchPath(), const XmlReadOptions* readOptions = nullptr)"
  },
  {
    "label": "readFromXmlString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readFromXmlString(DocumentPtr doc, const string& str, FileSearchPath searchPath = FileSearchPath(), const XmlReadOptions* readOptions = nullptr)"
  },
  {
    "label": "writeToXmlStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeToXmlStream(DocumentPtr doc, std::ostream& stream, const XmlWriteOptions* writeOptions = nullptr)"
  },
  {
    "label": "writeToXmlFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeToXmlFile(DocumentPtr doc, const FilePath& filename, const XmlWriteOptions* writeOptions = nullptr)"
  },
  {
    "label": "writeToXmlString()",
    "kind": "Method",
    "detail": "Function (string)",
    "insertText": "writeToXmlString(DocumentPtr doc, const XmlWriteOptions* writeOptions = nullptr)"
  },
  {
    "label": "prependXInclude()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "prependXInclude(DocumentPtr doc, const FilePath& filename)"
  }
]