[
  {
    "label": "ClockInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClockInterface"
  },
  {
    "label": "TimestampWrapAroundHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimestampWrapAroundHandler"
  },
  {
    "label": "INT64_C()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_TIME_UTILS_H_ # define RTC_BASE_TIME_UTILS_H_ # include<stdint . h> # include<time . h> # include \" rtc_base / checks . h \" # include \" rtc_base / system / rtc_export . h \" # include \" rtc_base / system_time . h \" namespace rtc { const int64_t kNumMillisecsPerSec =)",
    "insertText": "INT64_C(1000)"
  },
  {
    "label": "INT64_C()",
    "kind": "Method",
    "detail": "Function (const int64_t kNumMicrosecsPerSec =)",
    "insertText": "INT64_C(1000000)"
  },
  {
    "label": "INT64_C()",
    "kind": "Method",
    "detail": "Function (const int64_t kNumNanosecsPerSec =)",
    "insertText": "INT64_C(1000000000)"
  },
  {
    "label": "ClockInterface()",
    "kind": "Method",
    "detail": "Function (const int64_t kNumMicrosecsPerMillisec = kNumMicrosecsPerSec / kNumMillisecsPerSec ; const int64_t kNumNanosecsPerMillisec = kNumNanosecsPerSec / kNumMillisecsPerSec ; const int64_t kNumNanosecsPerMicrosec = kNumNanosecsPerSec / kNumMicrosecsPerSec ; int64_t kNtpJan1970Millisecs = 2 ' 2 0 8 ' 9 8 8 ' 8 0 0* kNumMillisecsPerSec ; class ClockInterface { public : ~)",
    "insertText": "ClockInterface()"
  },
  {
    "label": "TimeNanos()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "TimeNanos()"
  },
  {
    "label": "SetClockForTesting()",
    "kind": "Method",
    "detail": "Function (} ; RTC_EXPORT ClockInterface*)",
    "insertText": "SetClockForTesting(ClockInterface* clock)"
  },
  {
    "label": "GetClockForTesting()",
    "kind": "Method",
    "detail": "Function (RTC_EXPORT ClockInterface*)",
    "insertText": "GetClockForTesting()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(WINUWP) void SyncWithNtp(int64_t time_from_ntp_server_ms)"
  },
  {
    "label": "WinUwpSystemTimeNanos()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "WinUwpSystemTimeNanos()"
  },
  {
    "label": "SystemTimeMillis()",
    "kind": "Method",
    "detail": "Function (# endif int64_t)",
    "insertText": "SystemTimeMillis()"
  },
  {
    "label": "Time32()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "Time32()"
  },
  {
    "label": "TimeMillis()",
    "kind": "Method",
    "detail": "Function (RTC_EXPORT int64_t)",
    "insertText": "TimeMillis()"
  },
  {
    "label": "Time()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "Time()"
  },
  {
    "label": "TimeMicros()",
    "kind": "Method",
    "detail": "Function (} RTC_EXPORT int64_t)",
    "insertText": "TimeMicros()"
  },
  {
    "label": "TimeAfter()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "TimeAfter(int64_t elapsed)"
  },
  {
    "label": "TimeDiff()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "TimeDiff(int64_t later, int64_t earlier)"
  },
  {
    "label": "TimeDiff32()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "TimeDiff32(uint32_t later, uint32_t earlier)"
  },
  {
    "label": "TimeSince()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "TimeSince(int64_t earlier)"
  },
  {
    "label": "TimeUntil()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "TimeUntil(int64_t later)"
  },
  {
    "label": "TimestampWrapAroundHandler()",
    "kind": "Method",
    "detail": "Function (} class TimestampWrapAroundHandler { public :)",
    "insertText": "TimestampWrapAroundHandler()"
  },
  {
    "label": "Unwrap()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "Unwrap(uint32_t ts)"
  },
  {
    "label": "TmToSeconds()",
    "kind": "Method",
    "detail": "Function (private : uint32_t last_ts_ ; int64_t num_wrap_ ; } ; int64_t)",
    "insertText": "TmToSeconds(const tm& tm)"
  },
  {
    "label": "TimeUTCMicros()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "TimeUTCMicros()"
  },
  {
    "label": "TimeUTCMillis()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "TimeUTCMillis()"
  }
]