[
  {
    "label": "FOpResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpResult"
  },
  {
    "label": "VMutableArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VMutableArray"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (struct FOpResult ; struct VMutableArray : VArrayBase {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VArrayBase)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; public : void)",
    "insertText": "Reset(FAllocationContext Context)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddValue(FAllocationContext Context, VValue Value)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "Append(FAllocationContext Context, VArrayBase& Array)"
  },
  {
    "label": "Concat()",
    "kind": "Method",
    "detail": "Function (VMutableArray&)",
    "insertText": "Concat(FAllocationContext Context, VArrayBase& Lhs, VArrayBase& Rhs)"
  },
  {
    "label": "InPlaceMakeImmutable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InPlaceMakeImmutable(FAllocationContext Context)"
  },
  {
    "label": "SetEmergentType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEmergentType(Context, VEmergentTypeCreator::GetOrCreate(Context, VTypeCreator::GetOrCreate<VTypeArray>(Context, Num()), &VArray::StaticCppClassInfo))"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} VMutableArray&)",
    "insertText": "New(FAllocationContext Context, uint32 NumValues, uint32 InitialCapacity, EArrayType ArrayType)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} VMutableArray&)",
    "insertText": "New(FAllocationContext Context, uint32 NumValues, EArrayType ArrayType)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} VMutableArray&)",
    "insertText": "New(FAllocationContext Context, std::initializer_list<VValue> InitList)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} template<InitIndexFunc,= std::enable_if_t<std::is_same_v<VValue,std::invoke_result_t<InitIndexFunc,uint32>>>> VMutableArray&)",
    "insertText": "New(FAllocationContext Context, uint32 InNumValues, InitIndexFunc&& InitFunc)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} VMutableArray&)",
    "insertText": "New(FAllocationContext Context, FUtf8StringView String)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} VMutableArray&)",
    "insertText": "New(FAllocationContext Context)"
  },
  {
    "label": "SerializeImpl()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SerializeImpl(VMutableArray*& This, FAllocationContext Context, FAbstractVisitor& Visitor)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(This, Context, Visitor)"
  },
  {
    "label": "FreezeImpl()",
    "kind": "Method",
    "detail": "Function (} VValue)",
    "insertText": "FreezeImpl(FAllocationContext Context)"
  },
  {
    "label": "VMutableArray()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "VMutableArray(FAllocationContext Context, uint32 NumValues, uint32 InitialCapacity, EArrayType ArrayType) : VArrayBase(Context, NumValues, InitialCapacity, ArrayType, &GlobalTrivialEmergentType.Get(Context))"
  },
  {
    "label": "V_DIE_UNLESS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "V_DIE_UNLESS(InitialCapacity >= NumValues)"
  },
  {
    "label": "VMutableArray()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "VMutableArray(FAllocationContext Context, std::initializer_list<VValue> InitList) : VArrayBase(Context, InitList, &GlobalTrivialEmergentType.Get(Context))"
  },
  {
    "label": "VMutableArray()",
    "kind": "Method",
    "detail": "Function (} template<InitIndexFunc,= std::enable_if_t<std::is_same_v<VValue,std::invoke_result_t<InitIndexFunc,uint32>>>>)",
    "insertText": "VMutableArray(FAllocationContext Context, uint32 InNumValues, InitIndexFunc&& InitFunc) : VArrayBase(Context, InNumValues, InitFunc, &GlobalTrivialEmergentType.Get(Context))"
  },
  {
    "label": "VMutableArray()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "VMutableArray(FAllocationContext Context, FUtf8StringView String) : VArrayBase(Context, String, &GlobalTrivialEmergentType.Get(Context))"
  }
]