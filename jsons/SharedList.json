[
  {
    "label": "TSharedListItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSharedListItem"
  },
  {
    "label": "TWeakListItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TWeakListItem"
  },
  {
    "label": "TSharedListItem()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / SharedPointer . h \" namespace UE { namespace Sequencer { template<T> class TSharedListItem : public TSharedFromThis<T> { public : ~)",
    "insertText": "TSharedListItem()"
  },
  {
    "label": "Unlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlink()"
  },
  {
    "label": "Next()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<T>)",
    "insertText": "Next()"
  },
  {
    "label": "AsShared()",
    "kind": "Method",
    "detail": "Function (Head -> PrevLink =& NextLink ; } NextLink = Head ; PrevLink =& Head ; Head = this ->)",
    "insertText": "AsShared()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (NextLink -> PrevLink = PrevLink ; })",
    "insertText": "if(PrevLink)"
  }
]