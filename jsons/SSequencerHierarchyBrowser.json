[
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FSequencerHierarchyNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerHierarchyNode"
  },
  {
    "label": "SSequencerHierarchyBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerHierarchyBrowser"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / STreeView . h \" class FSequencer ; class UMovieScene ; class UMovieSceneSequence ; struct FSequencerHierarchyNode ; class SSequencerHierarchyBrowser : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSequencerHierarchyBrowser)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TWeakPtr<FSequencer> InWeakSequencer)"
  },
  {
    "label": "SSequencerHierarchyBrowser()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SSequencerHierarchyBrowser()"
  },
  {
    "label": "GetSequencer()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSequencer>)",
    "insertText": "GetSequencer()"
  },
  {
    "label": "GetMovieScene()",
    "kind": "Method",
    "detail": "Function (} UMovieScene*)",
    "insertText": "GetMovieScene()"
  },
  {
    "label": "AddChildren()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddChildren(TSharedRef<FSequencerHierarchyNode> ParentNode, UMovieSceneSequence* Sequence)"
  },
  {
    "label": "UpdateTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTree()"
  },
  {
    "label": "HandleTreeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTreeSelectionChanged(TSharedPtr<FSequencerHierarchyNode> InSelectedNode, ESelectInfo::Type SelectionType)"
  }
]