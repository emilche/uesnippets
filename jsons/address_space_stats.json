[
  {
    "label": "PoolStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PoolStats"
  },
  {
    "label": "AddressSpaceStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AddressSpaceStats"
  },
  {
    "label": "PA_COMPONENT_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PA_COMPONENT_EXPORT"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_PARTITION_ALLOCATOR_ADDRESS_SPACE_STATS_H_ # define BASE_ALLOCATOR_PARTITION_ALLOCATOR_ADDRESS_SPACE_STATS_H_ # include<cstddef> # include \" base / allocator / partition_allocator / partition_alloc_base / component_export . h \" # include \" base / allocator / partition_allocator / partition_alloc_buildflags . h \" # include \" base / allocator / partition_allocator / partition_alloc_config . h \" namespace partition_alloc { struct PoolStats { size_t usage = 0 ; # if)",
    "insertText": "defined(PA_HAS_64_BITS_POINTERS)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# endif } ; struct AddressSpaceStats { PoolStats regular_pool_stats ; # if)",
    "insertText": "BUILDFLAG(ENABLE_BACKUP_REF_PTR_SUPPORT)"
  },
  {
    "label": "PA_COMPONENT_EXPORT()",
    "kind": "Method",
    "detail": "Function (size_t blocklist_hit_count ; # endif # endif } ; class)",
    "insertText": "PA_COMPONENT_EXPORT(PARTITION_ALLOC)"
  },
  {
    "label": "DumpStats()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "DumpStats(const AddressSpaceStats* address_space_stats)"
  }
]