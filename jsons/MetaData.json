[
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "ModuleSlotTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ModuleSlotTracker"
  },
  {
    "label": "SymbolTableListTraits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SymbolTableListTraits"
  },
  {
    "label": "LLVMConstants",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LLVMConstants"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "Metadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Metadata"
  },
  {
    "label": "ReplaceableMetadataImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReplaceableMetadataImpl"
  },
  {
    "label": "StorageType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StorageType"
  },
  {
    "label": "MetadataKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "MetadataKind"
  },
  {
    "label": "CLASS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CLASS"
  },
  {
    "label": "isa_impl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "isa_impl"
  },
  {
    "label": "MetadataAsValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MetadataAsValue"
  },
  {
    "label": "ReplaceableMetadataImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReplaceableMetadataImpl"
  },
  {
    "label": "LLVMContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContextImpl"
  },
  {
    "label": "ReplaceableMetadataImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReplaceableMetadataImpl"
  },
  {
    "label": "MetadataTracking",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MetadataTracking"
  },
  {
    "label": "ValueAsMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAsMetadata"
  },
  {
    "label": "ReplaceableMetadataImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReplaceableMetadataImpl"
  },
  {
    "label": "LLVMContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContextImpl"
  },
  {
    "label": "ConstantAsMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantAsMetadata"
  },
  {
    "label": "ValueAsMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAsMetadata"
  },
  {
    "label": "LocalAsMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LocalAsMetadata"
  },
  {
    "label": "ValueAsMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueAsMetadata"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Result",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Result"
  },
  {
    "label": "HasDereference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HasDereference"
  },
  {
    "label": "SFINAE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SFINAE"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "V",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "V"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "V",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "V"
  },
  {
    "label": "V",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "V"
  },
  {
    "label": "M",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "M"
  },
  {
    "label": "IsValidPointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsValidPointer"
  },
  {
    "label": "V",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "V"
  },
  {
    "label": "M",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "M"
  },
  {
    "label": "IsValidReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsValidReference"
  },
  {
    "label": "X",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "X"
  },
  {
    "label": "Y",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Y"
  },
  {
    "label": "X",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "X"
  },
  {
    "label": "Y",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Y"
  },
  {
    "label": "X",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "X"
  },
  {
    "label": "Y",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Y"
  },
  {
    "label": "X",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "X"
  },
  {
    "label": "Y",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Y"
  },
  {
    "label": "X",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "X"
  },
  {
    "label": "Y",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Y"
  },
  {
    "label": "X",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "X"
  },
  {
    "label": "Y",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Y"
  },
  {
    "label": "X",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "X"
  },
  {
    "label": "Y",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Y"
  },
  {
    "label": "MDString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDString"
  },
  {
    "label": "StringMapEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringMapEntry"
  },
  {
    "label": "AAMDNodes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AAMDNodes"
  },
  {
    "label": "DenseMapInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DenseMapInfo"
  },
  {
    "label": "MDOperand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDOperand"
  },
  {
    "label": "simplify_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "simplify_type"
  },
  {
    "label": "simplify_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "simplify_type"
  },
  {
    "label": "ContextAndReplaceableUses",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ContextAndReplaceableUses"
  },
  {
    "label": "TempMDNodeDeleter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TempMDNodeDeleter"
  },
  {
    "label": "MDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNode"
  },
  {
    "label": "ReplaceableMetadataImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReplaceableMetadataImpl"
  },
  {
    "label": "LLVMContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContextImpl"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "StoreT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StoreT"
  },
  {
    "label": "NodeTy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeTy"
  },
  {
    "label": "HasCachedHash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HasCachedHash"
  },
  {
    "label": "NodeTy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeTy"
  },
  {
    "label": "NodeTy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeTy"
  },
  {
    "label": "NodeTy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeTy"
  },
  {
    "label": "NodeTy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeTy"
  },
  {
    "label": "MDTuple",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDTuple"
  },
  {
    "label": "LLVMContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContextImpl"
  },
  {
    "label": "MDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNode"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TypedMDOperandIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TypedMDOperandIterator"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "MDTupleTypedArrayWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDTupleTypedArrayWrapper"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "NamedMDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NamedMDNode"
  },
  {
    "label": "SymbolTableListTraits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SymbolTableListTraits"
  },
  {
    "label": "ilist_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ilist_traits"
  },
  {
    "label": "LLVMContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContextImpl"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "T1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T1"
  },
  {
    "label": "T2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T2"
  },
  {
    "label": "op_iterator_impl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "op_iterator_impl"
  },
  {
    "label": "NamedMDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NamedMDNode"
  },
  {
    "label": "handleChangedMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "handleChangedMetadata(Metadata *MD)"
  },
  {
    "label": "track()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "track()"
  },
  {
    "label": "untrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "untrack()"
  },
  {
    "label": "replaceAllUsesWith()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "replaceAllUsesWith(Metadata *MD)"
  },
  {
    "label": "resolveAllUses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resolveAllUses(bool ResolveUsers = true)"
  },
  {
    "label": "addRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addRef(void *Ref, OwnerTy Owner)"
  },
  {
    "label": "dropRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dropRef(void *Ref)"
  },
  {
    "label": "moveRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "moveRef(void *Ref, void *New, const Metadata &MD)"
  },
  {
    "label": "handleDeletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "handleDeletion(Value *V)"
  },
  {
    "label": "handleRAUW()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "handleRAUW(Value *From, Value *To)"
  },
  {
    "label": "hasa()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "hasa(&MD)"
  },
  {
    "label": "extract()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "extract(&MD)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "get()"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "get()"
  },
  {
    "label": "getReplaceableUses()",
    "kind": "Method",
    "detail": "Function (delete)",
    "insertText": "getReplaceableUses()"
  },
  {
    "label": "getContext()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getContext()"
  },
  {
    "label": "getReplaceableUses()",
    "kind": "Method",
    "detail": "Function (delete)",
    "insertText": "getReplaceableUses()"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "new(size_t Size, unsigned NumOps)"
  },
  {
    "label": "delete()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "delete(void *Mem)"
  },
  {
    "label": "delete()",
    "kind": "Method",
    "detail": "Function (MDNode::operator)",
    "insertText": "delete(Mem)"
  },
  {
    "label": "dropAllReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dropAllReferences()"
  },
  {
    "label": "getTemporary()",
    "kind": "Method",
    "detail": "Function (TempMDTuple)",
    "insertText": "getTemporary(LLVMContext &Context,\n                                         ArrayRef<Metadata *> MDs)"
  },
  {
    "label": "deleteTemporary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleteTemporary(MDNode *N)"
  },
  {
    "label": "replaceOperandWith()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "replaceOperandWith(unsigned I, Metadata *New)"
  },
  {
    "label": "resolveCycles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resolveCycles()"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setOperand(unsigned I, Metadata *New)"
  },
  {
    "label": "storeDistinctInContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "storeDistinctInContext()"
  },
  {
    "label": "handleChangedOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "handleChangedOperand(void *Ref, Metadata *New)"
  },
  {
    "label": "resolve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resolve()"
  },
  {
    "label": "resolveAfterOperandChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resolveAfterOperandChange(Metadata *Old, Metadata *New)"
  },
  {
    "label": "decrementUnresolvedOperandCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decrementUnresolvedOperandCount()"
  },
  {
    "label": "countUnresolvedOperands()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "countUnresolvedOperands()"
  },
  {
    "label": "makeUniqued()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "makeUniqued()"
  },
  {
    "label": "makeDistinct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "makeDistinct()"
  },
  {
    "label": "deleteAsSubclass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleteAsSubclass()"
  },
  {
    "label": "eraseFromStore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "eraseFromStore()"
  },
  {
    "label": "recalculateHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recalculateHash()"
  },
  {
    "label": "getImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getImpl(Context, MDs, Uniqued)"
  },
  {
    "label": "getImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getImpl(Context, MDs, Uniqued, /* ShouldCreate */ false)"
  },
  {
    "label": "getImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getImpl(Context, MDs, Distinct)"
  },
  {
    "label": "cloneImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cloneImpl()"
  },
  {
    "label": "Temp()",
    "kind": "Method",
    "detail": "Function (TypedMDOperandIterator)",
    "insertText": "Temp(*this)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "get()"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "get()"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "get()"
  },
  {
    "label": "NamedMDNode()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "NamedMDNode(const Twine &N)"
  },
  {
    "label": "tmp()",
    "kind": "Method",
    "detail": "Function (op_iterator_impl)",
    "insertText": "tmp(*this)"
  },
  {
    "label": "tmp()",
    "kind": "Method",
    "detail": "Function (op_iterator_impl)",
    "insertText": "tmp(*this)"
  },
  {
    "label": "eraseFromParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "eraseFromParent()"
  },
  {
    "label": "dropAllReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dropAllReferences()"
  },
  {
    "label": "addOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addOperand(MDNode *M)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setOperand(unsigned I, MDNode *New)"
  },
  {
    "label": "op_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "op_iterator(this, 0)"
  },
  {
    "label": "const_op_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "const_op_iterator(this, 0)"
  }
]