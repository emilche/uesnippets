[
  {
    "label": "ULightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULightComponent"
  },
  {
    "label": "FInstancedStaticMeshSceneProxyDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStaticMeshSceneProxyDesc"
  },
  {
    "label": "FStaticMeshInstanceBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshInstanceBuffer"
  },
  {
    "label": "FVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexFactory"
  },
  {
    "label": "FInstancedStaticMeshDataType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStaticMeshDataType"
  },
  {
    "label": "FInstanceOriginBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceOriginBuffer"
  },
  {
    "label": "FInstanceTransformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceTransformBuffer"
  },
  {
    "label": "FInstanceLightmapBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceLightmapBuffer"
  },
  {
    "label": "FInstanceCustomDataBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceCustomDataBuffer"
  },
  {
    "label": "FInstancingUserData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancingUserData"
  },
  {
    "label": "FInstancedStaticMeshRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstancedStaticMeshRenderData"
  },
  {
    "label": "FStaticMeshRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshRenderData"
  },
  {
    "label": "FInstancedStaticMeshVertexFactory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStaticMeshVertexFactory"
  },
  {
    "label": "FInstancedStaticMeshVertexFactoryShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstancedStaticMeshVertexFactoryShaderParameters"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "FInstancedStaticMeshSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstancedStaticMeshSceneProxy"
  },
  {
    "label": "FRayTracingDynamicData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingDynamicData"
  },
  {
    "label": "FStaticLightingMesh_InstancedStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticLightingMesh_InstancedStaticMesh"
  },
  {
    "label": "FStaticLightingTextureMapping_InstancedStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticLightingTextureMapping_InstancedStaticMesh"
  },
  {
    "label": "UInstancedStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInstancedStaticMeshComponent"
  },
  {
    "label": "FComponentInstanceSharingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentInstanceSharingData"
  },
  {
    "label": "FComponentInstancedLightmapData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentInstancedLightmapData"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / IndirectArray . h \" # include \" Stats / Stats . h \" # include \" HAL / IConsoleManager . h \" # include \" RenderingThread . h \" # include \" RenderResource . h \" # include \" RayTracingGeometry . h \" # include \" PrimitiveViewRelevance . h \" # include \" ShaderParameters . h \" # include \" SceneView . h \" # include \" VertexFactory . h \" # include \" LocalVertexFactory . h \" # include \" MaterialShared . h \" # include \" Materials / Material . h \" # include \" StaticMeshResources . h \" # include \" StaticMeshSceneProxy . h \" # include \" Components / InstancedStaticMeshComponent . h \" # include \" Engine / StaticMesh . h \" # include \" StaticMeshLight . h \" # if WITH_EDITOR # include \" LightMap . h \" # include \" ShadowMap . h \" # endif class ULightComponent ; struct FInstancedStaticMeshSceneProxyDesc ; TAutoConsoleVariable<float> CVarFoliageMinimumScreenSize ; TAutoConsoleVariable<float> CVarRandomLODRange ; TAutoConsoleVariable<int32> CVarMinLOD ;)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FInstancedStaticMeshVertexFactoryUniformShaderParameters, ENGINE_API) SHADER_PARAMETER_SRV(Buffer<float4>, VertexFetch_InstanceOriginBuffer) SHADER_PARAMETER_SRV(Buffer<float4>, VertexFetch_InstanceTransformBuffer) SHADER_PARAMETER_SRV(Buffer<float4>, VertexFetch_InstanceLightmapBuffer) SHADER_PARAMETER_SRV(Buffer<float>, InstanceCustomDataBuffer) SHADER_PARAMETER(int32, NumCustomDataFloats) END_GLOBAL_SHADER_PARAMETER_STRUCT() BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FInstancedStaticMeshVFLooseUniformShaderParameters, ENGINE_API) SHADER_PARAMETER(FVector4f, InstancingViewZCompareZero) SHADER_PARAMETER(FVector4f, InstancingViewZCompareOne) SHADER_PARAMETER(FVector4f, InstancingViewZConstant) SHADER_PARAMETER(FVector4f, InstancingTranslatedWorldViewOriginZero) SHADER_PARAMETER(FVector4f, InstancingTranslatedWorldViewOriginOne) SHADER_PARAMETER(FVector4f, InstancingFadeOutParams) END_GLOBAL_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "FStaticMeshInstanceBuffer()",
    "kind": "Method",
    "detail": "Function (const int32 InstancedStaticMeshMaxTexCoord ; class FStaticMeshInstanceBuffer : public FRenderResource { public :)",
    "insertText": "FStaticMeshInstanceBuffer(ERHIFeatureLevel::Type InFeatureLevel, bool InRequireCPUAccess)"
  },
  {
    "label": "FStaticMeshInstanceBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FStaticMeshInstanceBuffer()"
  },
  {
    "label": "InitFromPreallocatedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromPreallocatedData(FStaticMeshInstanceData& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const FStaticMeshInstanceBuffer &Other)"
  },
  {
    "label": "GetInstanceTransform()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetInstanceTransform(int32 InstanceIndex, FRenderTransform& Transform)"
  },
  {
    "label": "GetInstanceTransform()",
    "kind": "Method",
    "detail": "Function (InstanceData ->)",
    "insertText": "GetInstanceTransform(InstanceIndex, Transform)"
  },
  {
    "label": "GetInstanceRandomID()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetInstanceRandomID(int32 InstanceIndex, float& RandomInstanceID)"
  },
  {
    "label": "GetInstanceRandomID()",
    "kind": "Method",
    "detail": "Function (InstanceData ->)",
    "insertText": "GetInstanceRandomID(InstanceIndex, RandomInstanceID)"
  },
  {
    "label": "GetInstanceEditorData()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR void)",
    "insertText": "GetInstanceEditorData(int32 InstanceIndex, FColor& HitProxyColorOut, bool& bSelectedOut)"
  },
  {
    "label": "GetInstanceEditorData()",
    "kind": "Method",
    "detail": "Function (InstanceData ->)",
    "insertText": "GetInstanceEditorData(InstanceIndex, HitProxyColorOut, bSelectedOut)"
  },
  {
    "label": "GetInstanceLightMapData()",
    "kind": "Method",
    "detail": "Function (} # endif void)",
    "insertText": "GetInstanceLightMapData(int32 InstanceIndex, FVector4f& InstanceLightmapAndShadowMapUVBias)"
  },
  {
    "label": "GetInstanceLightMapData()",
    "kind": "Method",
    "detail": "Function (InstanceData ->)",
    "insertText": "GetInstanceLightMapData(InstanceIndex, InstanceLightmapAndShadowMapUVBias)"
  },
  {
    "label": "GetInstanceCustomDataValues()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetInstanceCustomDataValues(int32 InstanceIndex, TArray<float>& InstanceCustomData)"
  },
  {
    "label": "GetInstanceCustomDataValues()",
    "kind": "Method",
    "detail": "Function (InstanceData ->)",
    "insertText": "GetInstanceCustomDataValues(InstanceIndex, InstanceCustomData)"
  },
  {
    "label": "GetInstanceData()",
    "kind": "Method",
    "detail": "Function (} FStaticMeshInstanceData*)",
    "insertText": "GetInstanceData()"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "InitResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResource(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResource()"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFriendlyName()"
  },
  {
    "label": "GetResourceSize()",
    "kind": "Method",
    "detail": "Function (} SIZE_T)",
    "insertText": "GetResourceSize()"
  },
  {
    "label": "BindInstanceVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindInstanceVertexBuffer(const class FVertexFactory* VertexFactory, struct FInstancedStaticMeshDataType& InstancedStaticMeshData)"
  },
  {
    "label": "FlushGPUUpload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushGPUUpload(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "GetInstanceOriginBuffer()",
    "kind": "Method",
    "detail": "Function (public : TSharedPtr<FStaticMeshInstanceData,ESPMode::ThreadSafe> InstanceData ; bool RequireCPUAccess ; FBufferRHIRef)",
    "insertText": "GetInstanceOriginBuffer()"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (} } InstanceCustomDataBuffer ; FShaderResourceViewRHIRef InstanceCustomDataSRV ; void)",
    "insertText": "CleanUp()"
  },
  {
    "label": "CreateVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateVertexBuffer(FRHICommandListBase& RHICmdList, FResourceArrayInterface* InResourceArray, EBufferUsageFlags InUsage, uint32 InStride, uint8 InFormat, FBufferRHIRef& OutVertexBufferRHI, FShaderResourceViewRHIRef& OutInstanceSRV)"
  },
  {
    "label": "DECLARE_VERTEX_FACTORY_TYPE()",
    "kind": "Method",
    "detail": "Function (} ; struct FInstancingUserData { class FInstancedStaticMeshRenderData* RenderData ; class FStaticMeshRenderData* MeshRenderData ; int32 StartCullDistance ; int32 EndCullDistance ; float LODDistanceScale ; int32 MinLOD ; bool bRenderSelected ; bool bRenderUnselected ; FVector AverageInstancesScale ; FVector InstancingOffset ; } ; struct FInstancedStaticMeshDataType { FVertexStreamComponent InstanceOriginComponent ; FVertexStreamComponent InstanceTransformComponent [ 3 ] ; FVertexStreamComponent InstanceLightmapAndShadowMapUVBiasComponent ; FRHIShaderResourceView* InstanceOriginSRV = nullptr ; FRHIShaderResourceView* InstanceTransformSRV = nullptr ; FRHIShaderResourceView* InstanceLightmapSRV = nullptr ; FRHIShaderResourceView* InstanceCustomDataSRV = nullptr ; int32 NumCustomDataFloats = 0 ; } ; struct FInstancedStaticMeshVertexFactory : public FLocalVertexFactory {)",
    "insertText": "DECLARE_VERTEX_FACTORY_TYPE(FInstancedStaticMeshVertexFactory)"
  },
  {
    "label": "FInstancedStaticMeshVertexFactory()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FInstancedStaticMeshVertexFactory(ERHIFeatureLevel::Type InFeatureLevel) : FLocalVertexFactory(InFeatureLevel, \"FInstancedStaticMeshVertexFactory\")"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "GetPSOPrecacheVertexFetchElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPSOPrecacheVertexFetchElements(EVertexInputStreamType VertexInputStreamType, FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "GetVertexElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexElements(ERHIFeatureLevel::Type FeatureLevel, EVertexInputStreamType InputStreamType, bool bSupportsManualVertexFetch, FDataType& Data, FInstancedStaticMeshDataType& InstanceData, FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetData(FRHICommandListBase& RHICmdList, const FDataType& InData, const FInstancedStaticMeshDataType* InInstanceData)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Data = InData ;)",
    "insertText": "if(InInstanceData)"
  },
  {
    "label": "UpdateRHI()",
    "kind": "Method",
    "detail": "Function (InstanceData =* InInstanceData ; })",
    "insertText": "UpdateRHI(RHICmdList)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Copy(const FInstancedStaticMeshVertexFactory& Other)"
  },
  {
    "label": "NumBitsForVisibilityMask()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "NumBitsForVisibilityMask()"
  },
  {
    "label": "GetInstanceOriginSRV()",
    "kind": "Method",
    "detail": "Function (} FRHIShaderResourceView*)",
    "insertText": "GetInstanceOriginSRV()"
  },
  {
    "label": "GetVertexElements()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "GetVertexElements(ERHIFeatureLevel::Type FeatureLevel, EVertexInputStreamType InputStreamType, bool bSupportsManualVertexFetch, FDataType& Data, FInstancedStaticMeshDataType& InstanceData, FVertexDeclarationElementList& Elements, FVertexStreamList& Streams)"
  },
  {
    "label": "DECLARE_TYPE_LAYOUT()",
    "kind": "Method",
    "detail": "Function (private : FInstancedStaticMeshDataType InstanceData ; TUniformBufferRef<FInstancedStaticMeshVertexFactoryUniformShaderParameters> UniformBuffer ; } ; class FInstancedStaticMeshVertexFactoryShaderParameters : public FLocalVertexFactoryShaderParametersBase {)",
    "insertText": "DECLARE_TYPE_LAYOUT(FInstancedStaticMeshVertexFactoryShaderParameters, NonVirtual)"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Bind(const FShaderParameterMap& ParameterMap)"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Bind(ParameterMap)"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (InstancingOffsetParameter .)",
    "insertText": "Bind(ParameterMap, TEXT(\"InstancingOffset\"))"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (VertexFetch_InstanceOriginBufferParameter .)",
    "insertText": "Bind(ParameterMap, TEXT(\"VertexFetch_InstanceOriginBuffer\"))"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (VertexFetch_InstanceTransformBufferParameter .)",
    "insertText": "Bind(ParameterMap, TEXT(\"VertexFetch_InstanceTransformBuffer\"))"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (VertexFetch_InstanceLightmapBufferParameter .)",
    "insertText": "Bind(ParameterMap, TEXT(\"VertexFetch_InstanceLightmapBuffer\"))"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (InstanceOffset .)",
    "insertText": "Bind(ParameterMap, TEXT(\"InstanceOffset\"))"
  },
  {
    "label": "GetElementShaderBindings()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetElementShaderBindings(const class FSceneInterface* Scene, const FSceneView* View, const FMeshMaterialShader* Shader, const EVertexInputStreamType InputStreamType, ERHIFeatureLevel::Type FeatureLevel, const FVertexFactory* VertexFactory, const FMeshBatchElement& BatchElement, FMeshDrawSingleShaderBindings& ShaderBindings, FVertexInputStreamArray& VertexStreams)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "LAYOUT_FIELD(FShaderParameter, InstancingOffsetParameter)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LAYOUT_FIELD(FShaderResourceParameter, VertexFetch_InstanceOriginBufferParameter) LAYOUT_FIELD(FShaderResourceParameter, VertexFetch_InstanceTransformBufferParameter) LAYOUT_FIELD(FShaderResourceParameter, VertexFetch_InstanceLightmapBufferParameter) LAYOUT_FIELD(FShaderParameter, InstanceOffset)"
  },
  {
    "label": "FInstancedStaticMeshRenderData()",
    "kind": "Method",
    "detail": "Function (class FInstancedStaticMeshRenderData { public :)",
    "insertText": "FInstancedStaticMeshRenderData(const FInstancedStaticMeshSceneProxyDesc* InDesc, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources(FSceneInterface* Scene, const UStaticMesh* StaticMesh)"
  },
  {
    "label": "BindBuffersToVertexFactories()",
    "kind": "Method",
    "detail": "Function (UInstancedStaticMeshComponent* Component ; int32 LightMapCoordinateIndex ; TIndirectArray<FInstancedStaticMeshVertexFactory> VertexFactories ; FStaticMeshLODResourcesArray& LODModels ; ERHIFeatureLevel::Type FeatureLevel ; void)",
    "insertText": "BindBuffersToVertexFactories(FRHICommandListBase& RHICmdList, FStaticMeshInstanceBuffer* InstanceBuffer)"
  },
  {
    "label": "InitVertexFactories()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InitVertexFactories()"
  },
  {
    "label": "RegisterSpeedTreeWind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterSpeedTreeWind(const FInstancedStaticMeshSceneProxyDesc* InProxyDesc)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} ; struct FInstancedStaticMeshSceneProxyDesc ; class FInstancedStaticMeshSceneProxy : public FStaticMeshSceneProxy { public : SIZE_T)",
    "insertText": "GetTypeHash()"
  },
  {
    "label": "FInstancedStaticMeshSceneProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInstancedStaticMeshSceneProxy(UInstancedStaticMeshComponent* InComponent, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "FInstancedStaticMeshSceneProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInstancedStaticMeshSceneProxy(const FInstancedStaticMeshSceneProxyDesc& InDesc, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "FInstancedStaticMeshSceneProxy()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FInstancedStaticMeshSceneProxy()"
  },
  {
    "label": "CreateRenderThreadResources()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CreateRenderThreadResources(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "DestroyRenderThreadResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRenderThreadResources()"
  },
  {
    "label": "UpdateInstances_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInstances_RenderThread(FRHICommandListBase& RHICmdList, const FBoxSphereBounds& InBounds, const FBoxSphereBounds& InLocalBounds, const FBoxSphereBounds& InStaticMeshBounds)"
  },
  {
    "label": "GetViewRelevance()",
    "kind": "Method",
    "detail": "Function (FPrimitiveViewRelevance)",
    "insertText": "GetViewRelevance(const FSceneView* View)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FPrimitiveViewRelevance Result ;)",
    "insertText": "if(View->Family->EngineShowFlags.InstancedStaticMeshes)"
  },
  {
    "label": "GetViewRelevance()",
    "kind": "Method",
    "detail": "Function (Result =)",
    "insertText": "GetViewRelevance(View)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR)",
    "insertText": "if(bHasSelectedInstances)"
  },
  {
    "label": "IsRayTracingStaticRelevant()",
    "kind": "Method",
    "detail": "Function (Result . bDynamicRelevance = true ; Result . bStaticRelevance = false ; } # endif } return Result ; } bool bAnySegmentUsesWorldPositionOffset = false ; bool bUseGpuLodSelection = false ; # if RHI_RAYTRACING bool)",
    "insertText": "IsRayTracingStaticRelevant()"
  },
  {
    "label": "GetDynamicRayTracingInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDynamicRayTracingInstances(FRayTracingInstanceCollector& Collector)"
  },
  {
    "label": "SetupRayTracingDynamicInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupRayTracingDynamicInstances(int32 NumDynamicInstances, int32 LODIndex)"
  },
  {
    "label": "GetLightRelevance()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "GetLightRelevance(const FLightSceneProxy* LightSceneProxy, bool& bDynamic, bool& bRelevant, bool& bLightMapped, bool& bShadowMapped)"
  },
  {
    "label": "GetDynamicMeshElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDynamicMeshElements(const TArray<const FSceneView*>& Views, const FSceneViewFamily& ViewFamily, uint32 VisibilityMap, FMeshElementCollector& Collector)"
  },
  {
    "label": "GetNumMeshBatches()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumMeshBatches()"
  },
  {
    "label": "GetMeshElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMeshElement(int32 LODIndex, int32 BatchIndex, int32 ElementIndex, uint8 InDepthPriorityGroup, bool bUseSelectionOutline, bool bAllowPreCulledIndices, FMeshBatch& OutMeshBatch)"
  },
  {
    "label": "GetWireframeMeshElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWireframeMeshElement(int32 LODIndex, int32 BatchIndex, const FMaterialRenderProxy* WireframeRenderProxy, uint8 InDepthPriorityGroup, bool bAllowPreCulledIndices, FMeshBatch& OutMeshBatch)"
  },
  {
    "label": "GetDistanceFieldAtlasData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDistanceFieldAtlasData(const FDistanceFieldVolumeData*& OutDistanceFieldData, float& SelfShadowBias)"
  },
  {
    "label": "GetDistanceFieldInstanceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDistanceFieldInstanceData(TArray<FRenderTransform>& InstanceLocalToPrimitiveTransforms)"
  },
  {
    "label": "CreateHitProxies()",
    "kind": "Method",
    "detail": "Function (HHitProxy*)",
    "insertText": "CreateHitProxies(IPrimitiveComponent* Component,TArray<TRefCountPtr<HHitProxy> >& OutHitProxies)"
  },
  {
    "label": "CreateHitProxies()",
    "kind": "Method",
    "detail": "Function (HHitProxy*)",
    "insertText": "CreateHitProxies(UPrimitiveComponent* Component,TArray<TRefCountPtr<HHitProxy> >& OutHitProxies)"
  },
  {
    "label": "GetInstanceDrawDistanceMinMax()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInstanceDrawDistanceMinMax(FVector2f& OutDistanceMinMax)"
  },
  {
    "label": "GetLodScreenSizeScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetLodScreenSizeScale()"
  },
  {
    "label": "GetGpuLodInstanceRadius()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetGpuLodInstanceRadius()"
  },
  {
    "label": "GetInstanceDataUpdateTaskInfo()",
    "kind": "Method",
    "detail": "Function (FInstanceDataUpdateTaskInfo*)",
    "insertText": "GetInstanceDataUpdateTaskInfo()"
  },
  {
    "label": "IsDetailMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDetailMesh()"
  },
  {
    "label": "CreateLooseUniformBuffer()",
    "kind": "Method",
    "detail": "Function (protected : FInstancedStaticMeshVFLooseUniformShaderParametersRef)",
    "insertText": "CreateLooseUniformBuffer(const FSceneView* View, const FInstancingUserData* InstancingUserData, uint32 InstancedLODRange, uint32 InstancedLODIndex, EUniformBufferUsage UniformBufferUsage)"
  },
  {
    "label": "SetupInstancedMeshBatch()",
    "kind": "Method",
    "detail": "Function (UStaticMesh* StaticMesh ; FInstancedStaticMeshRenderData InstancedRenderData ; # if WITH_EDITOR bool bHasSelectedInstances ; # else const bool bHasSelectedInstances = false ; # endif FInstancingUserData UserData_AllInstances ; FInstancingUserData UserData_SelectedInstances ; FInstancingUserData UserData_DeselectedInstances ; float InstanceLODDistanceScale ; # if RHI_RAYTRACING struct FRayTracingDynamicData { FRayTracingGeometry DynamicGeometry ; FRWBuffer DynamicGeometryVertexBuffer ; } ; TArray<FRayTracingDynamicData> RayTracingDynamicData ; int32 CachedRayTracingLODIndex ; # endif void)",
    "insertText": "SetupInstancedMeshBatch(int32 LODIndex, int32 BatchIndex, FMeshBatch& OutMeshBatch)"
  },
  {
    "label": "SetupProxy()",
    "kind": "Method",
    "detail": "Function (FBoxSphereBounds StaticMeshBounds ; private : void)",
    "insertText": "SetupProxy(const FInstancedStaticMeshSceneProxyDesc& InProxyDesc)"
  },
  {
    "label": "FStaticLightingMesh_InstancedStaticMesh()",
    "kind": "Method",
    "detail": "Function (TMap<uint32,FInstancedStaticMeshVFLooseUniformShaderParametersRef> LODLooseUniformBuffers ; TSharedPtr<FInstanceDataSceneProxy,ESPMode::ThreadSafe> InstanceDataSceneProxy ; } ; # if WITH_EDITOR class FStaticLightingMesh_InstancedStaticMesh : public FStaticMeshStaticLightingMesh { public :)",
    "insertText": "FStaticLightingMesh_InstancedStaticMesh(const UInstancedStaticMeshComponent* InPrimitive, int32 LODIndex, int32 InstanceIndex, const TArray<ULightComponent*>& InRelevantLights) : FStaticMeshStaticLightingMesh(InPrimitive, LODIndex, InRelevantLights)"
  },
  {
    "label": "SetLocalToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLocalToWorld(InPrimitive->PerInstanceSMData[InstanceIndex].Transform * InPrimitive->GetComponentTransform().ToMatrixWithScale())"
  },
  {
    "label": "FStaticLightingMesh_InstancedStaticMesh()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FStaticLightingMesh_InstancedStaticMesh()"
  },
  {
    "label": "IsInstancedMesh()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsInstancedMesh()"
  },
  {
    "label": "FStaticLightingTextureMapping_InstancedStaticMesh()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FStaticLightingTextureMapping_InstancedStaticMesh(const FArchive& Ar) : FStaticMeshStaticLightingTextureMapping(Ar) , InstanceIndex(-1) , QuantizedData(nullptr) , ShadowMapData() , bComplete(false)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Apply(FQuantizedLightmapData* InQuantizedData, const TMap<ULightComponent*, FShadowMapData2D*>& InShadowMapData, const FStaticLightingBuildContext* LightingContext)"
  },
  {
    "label": "UInstancedStaticMeshComponent()",
    "kind": "Method",
    "detail": "Function (UInstancedStaticMeshComponent* InstancedComponent = Cast<)",
    "insertText": "UInstancedStaticMeshComponent(Primitive.Get())"
  },
  {
    "label": "FQuantizedLightmapData()",
    "kind": "Method",
    "detail": "Function (QuantizedData = TUniquePtr<)",
    "insertText": "FQuantizedLightmapData(InQuantizedData)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (ShadowMapData .)",
    "insertText": "Empty(InShadowMapData.Num())"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ShadowMapData .)",
    "insertText": "Add(ShadowDataPair.Key, TUniquePtr<FShadowMapData2D>(ShadowDataPair.Value))"
  },
  {
    "label": "ApplyLightMapping()",
    "kind": "Method",
    "detail": "Function (} InstancedComponent ->)",
    "insertText": "ApplyLightMapping(this, LightingContext)"
  },
  {
    "label": "DebugThisMapping()",
    "kind": "Method",
    "detail": "Function (} bComplete = true ; } bool)",
    "insertText": "DebugThisMapping()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "FComponentInstanceSharingData()",
    "kind": "Method",
    "detail": "Function (private : class UInstancedStaticMeshComponent ; int32 InstanceIndex ; TUniquePtr<FQuantizedLightmapData> QuantizedData ; TMap<ULightComponent*,TUniquePtr<FShadowMapData2D>> ShadowMapData ; bool bComplete ; } ; # endif struct FComponentInstanceSharingData { UInstancedStaticMeshComponent* Component ; UTexture* LightMapTexture ; UTexture* ShadowMapTexture ;)",
    "insertText": "FComponentInstanceSharingData() : Component( NULL ), LightMapTexture( NULL ), ShadowMapTexture( NULL)"
  }
]