[
  {
    "label": "RenderSignalAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RenderSignalAnalyzer"
  },
  {
    "label": "RenderSignalAnalyzer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_RENDER_SIGNAL_ANALYZER_H_ # define MODULES_AUDIO_PROCESSING_AEC3_RENDER_SIGNAL_ANALYZER_H_ # include<algorithm> # include<array> # include<cstddef> # include \" absl / types / optional . h \" # include \" api / audio / echo_canceller3_config . h \" # include \" modules / audio_processing / aec3 / aec3_common . h \" # include \" modules / audio_processing / aec3 / render_buffer . h \" # include \" rtc_base / checks . h \" namespace webrtc { class RenderSignalAnalyzer { public :)",
    "insertText": "RenderSignalAnalyzer(const EchoCanceller3Config& config)"
  },
  {
    "label": "RenderSignalAnalyzer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RenderSignalAnalyzer()"
  },
  {
    "label": "RenderSignalAnalyzer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderSignalAnalyzer(const RenderSignalAnalyzer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RenderSignalAnalyzer&)",
    "insertText": "operator(const RenderSignalAnalyzer&)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(const RenderBuffer& render_buffer, const absl::optional<size_t>& delay_partitions)"
  },
  {
    "label": "PoorSignalExcitation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PoorSignalExcitation()"
  },
  {
    "label": "RTC_DCHECK_LT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_LT(2, narrow_band_counters_.size())"
  },
  {
    "label": "MaskRegionsAroundNarrowBands()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MaskRegionsAroundNarrowBands(std::array<float, kFftLengthBy2Plus1>* v)"
  },
  {
    "label": "NarrowPeakBand()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "NarrowPeakBand()"
  }
]