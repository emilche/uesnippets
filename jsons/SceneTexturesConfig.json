[
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "FMinimalSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalSceneTextures"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSceneTexturesConfigInitSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneTexturesConfigInitSettings"
  },
  {
    "label": "FSceneTexturesConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneTexturesConfig"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RenderGraphDefinitions . h \" # include \" ShaderParameterMacros . h \" # include \" GBufferInfo . h \" # include \" SceneUtils . h \" class FSceneViewFamily ; struct FMinimalSceneTextures ;)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FSceneTextureUniformParameters, ENGINE_API) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, SceneColorTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, SceneDepthTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScenePartialDepthTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferATexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferBTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferCTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferDTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferETexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferFTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferVelocityTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScreenSpaceAOTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, CustomDepthTexture) SHADER_PARAMETER_RDG_TEXTURE_SRV(Texture2D<uint2>, CustomStencilTexture) SHADER_PARAMETER_SAMPLER(SamplerState, PointClampSampler) END_GLOBAL_SHADER_PARAMETER_STRUCT() BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FMobileSceneTextureUniformParameters, ENGINE_API) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, SceneColorTexture) SHADER_PARAMETER_SAMPLER(SamplerState, SceneColorTextureSampler) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, SceneDepthTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2DArray, SceneDepthTextureArray) SHADER_PARAMETER_SAMPLER(SamplerState, SceneDepthTextureSampler) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, ScenePartialDepthTexture) SHADER_PARAMETER_SAMPLER(SamplerState, ScenePartialDepthTextureSampler) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, CustomDepthTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2DArray, CustomDepthTextureArray) SHADER_PARAMETER_SAMPLER(SamplerState, CustomDepthTextureSampler) SHADER_PARAMETER_RDG_TEXTURE_SRV(Texture2D<uint2>, CustomStencilTexture) SHADER_PARAMETER_RDG_TEXTURE_SRV(Texture2DArray<uint2>, CustomStencilTextureArray) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, SceneVelocityTexture) SHADER_PARAMETER_SAMPLER(SamplerState, SceneVelocityTextureSampler) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferATexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferBTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferCTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, GBufferDTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, SceneDepthAuxTexture) SHADER_PARAMETER_RDG_TEXTURE(Texture2DArray, SceneDepthAuxTextureArray) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, LocalLightTextureA) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, LocalLightTextureB) SHADER_PARAMETER_SAMPLER(SamplerState, GBufferATextureSampler) SHADER_PARAMETER_SAMPLER(SamplerState, GBufferBTextureSampler) SHADER_PARAMETER_SAMPLER(SamplerState, GBufferCTextureSampler) SHADER_PARAMETER_SAMPLER(SamplerState, GBufferDTextureSampler) SHADER_PARAMETER_SAMPLER(SamplerState, SceneDepthAuxTextureSampler) END_GLOBAL_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FSceneTextureShaderParameters, ENGINE_API) SHADER_PARAMETER_RDG_UNIFORM_BUFFER(FSceneTextureUniformParameters, SceneTextures) SHADER_PARAMETER_RDG_UNIFORM_BUFFER(FMobileSceneTextureUniformParameters, MobileSceneTextures) END_SHADER_PARAMETER_STRUCT() extern ENGINE_API FSceneTextureShaderParameters GetSceneTextureShaderParameters(TRDGUniformBufferRef<FSceneTextureUniformParameters> UniformBuffer)"
  },
  {
    "label": "GetSceneTextureShaderParameters()",
    "kind": "Method",
    "detail": "Function (FSceneTextureShaderParameters)",
    "insertText": "GetSceneTextureShaderParameters(TRDGUniformBufferRef<FMobileSceneTextureUniformParameters> UniformBuffer)"
  },
  {
    "label": "GetSceneColorFormatAndCreateFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSceneColorFormatAndCreateFlags(ERHIFeatureLevel::Type FeatureLevel, bool bRequiresAlphaChannel, ETextureCreateFlags ExtraSceneColorCreateFlags, uint32 NumSamples, bool bMemorylessMSAA, EPixelFormat& SceneColorFormat, ETextureCreateFlags& SceneColorCreateFlags)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (enum class ESceneTextureExtracts : uint32 { None = 0,Depth = 1<<0,CustomDepth = 1<<1,All = Depth | CustomDepth } ; struct FSceneTexturesConfigInitSettings { ERHIFeatureLevel::Type FeatureLevel = ERHIFeatureLevel::Num ; FIntPoint Extent = FIntPoint::ZeroValue ; bool bRequireMultiView = false ; bool bRequiresAlphaChannel = false ; bool bSupportsXRTargetManagerDepthAlloc = false ; ETextureCreateFlags ExtraSceneColorCreateFlags = ETextureCreateFlags::None ; ETextureCreateFlags ExtraSceneDepthCreateFlags = ETextureCreateFlags::None ; } ; struct FSceneTexturesConfig { void)",
    "insertText": "Set(const FSceneTexturesConfig& Config)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (GlobalInstance = Config ; } const FSceneTexturesConfig&)",
    "insertText": "Get()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (},bIsUsingGBuffers { },bKeepDepthContent { 1 },bRequiresDepthAux { },bPreciseDepthAux { },bCustomResolveSubpass { },bSamplesCustomStencil { },bMemorylessMSAA { },bSupportsXRTargetManagerDepthAlloc { } { } void)",
    "insertText": "Init(const FSceneTexturesConfigInitSettings& InitSettings)"
  },
  {
    "label": "BuildSceneColorAndDepthFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildSceneColorAndDepthFlags()"
  },
  {
    "label": "GetGBufferRenderTargetsInfo()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetGBufferRenderTargetsInfo(FGraphicsPipelineRenderTargetsInfo& RenderTargetsInfo, EGBufferLayout Layout = GBL_Default)"
  },
  {
    "label": "SetupMobileGBufferFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupMobileGBufferFlags(bool bRequiresMultiPass)"
  },
  {
    "label": "GetEditorPrimitiveNumSamples()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetEditorPrimitiveNumSamples(ERHIFeatureLevel::Type FeatureLevel)"
  }
]