[
  {
    "label": "FSessionBrowserOwnerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSessionBrowserOwnerFilter"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / UnrealString . h \" # include \" Delegates / Delegate . h \" # include \" Styling / SlateTypes . h \")",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnSessionBrowserOwnerFilterStateChanged, const FString&, bool)"
  },
  {
    "label": "FSessionBrowserOwnerFilter()",
    "kind": "Method",
    "detail": "Function (class FSessionBrowserOwnerFilter : public TSharedFromThis<FSessionBrowserOwnerFilter> { public :)",
    "insertText": "FSessionBrowserOwnerFilter(const FString& InOwnerName, bool InEnabled, FOnSessionBrowserOwnerFilterStateChanged InOnStateChanged ) : Enabled(InEnabled) , OwnerName(InOwnerName) , OnStateChanged(InOnStateChanged)"
  },
  {
    "label": "EnableFromCheckState()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "EnableFromCheckState(ECheckBoxState CheckState)"
  },
  {
    "label": "Enabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enabled(CheckState == ECheckBoxState::Checked)"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnStateChanged .)",
    "insertText": "ExecuteIfBound(OwnerName, Enabled)"
  },
  {
    "label": "GetOwnerName()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetOwnerName()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEnabled()"
  }
]