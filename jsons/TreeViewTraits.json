[
  {
    "label": "TListTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TListTypeTraits"
  },
  {
    "label": "SerializerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SerializerType"
  },
  {
    "label": "TIsValidListItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsValidListItem"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Framework / Views / TableViewTypeTraits . h \" # include \" MVVM / ViewModels / ViewModel . h \" template<ExtensionType> struct TListTypeTraits<UE::Sequencer::TWeakViewModelPtr<ExtensionType>> { public : using PtrType = UE::Sequencer::TWeakViewModelPtr<ExtensionType> ; using NullableType = PtrType ; using MapKeyFuncs = TDefaultMapHashableKeyFuncs<PtrType,TSharedRef<ITableRow>,false> ; using MapKeyFuncsSparse = TDefaultMapHashableKeyFuncs<PtrType,FSparseItemInfo,false> ; using SetKeyFuncs = DefaultKeyFuncs<PtrType> ; template<U> void)",
    "insertText": "AddReferencedObjects(FReferenceCollector&, TArray< PtrType >&, TSet< PtrType >&, TMap< const U*, PtrType >&)"
  },
  {
    "label": "IsPtrValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPtrValid(const PtrType& InPtr)"
  },
  {
    "label": "ResetPtr()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetPtr(PtrType& InPtr)"
  },
  {
    "label": "MakeNullPtr()",
    "kind": "Method",
    "detail": "Function (InPtr = nullptr ; } PtrType)",
    "insertText": "MakeNullPtr()"
  },
  {
    "label": "NullableItemTypeConvertToItemType()",
    "kind": "Method",
    "detail": "Function (} PtrType)",
    "insertText": "NullableItemTypeConvertToItemType(const PtrType& InPtr)"
  },
  {
    "label": "Pin()",
    "kind": "Method",
    "detail": "Function (UE::Sequencer::TViewModelPtr<ExtensionType> Pinned = InPtr .)",
    "insertText": "Pin()"
  }
]