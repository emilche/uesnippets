[
  {
    "label": "WEBRTC_SPL_MUL_16_32_RSFT16()",
    "kind": "Method",
    "detail": "Function (# ifndef COMMON_AUDIO_SIGNAL_PROCESSING_INCLUDE_SPL_INL_ARMV7_H_ # define COMMON_AUDIO_SIGNAL_PROCESSING_INCLUDE_SPL_INL_ARMV7_H_ # include<stdint . h> __inline int32_t)",
    "insertText": "WEBRTC_SPL_MUL_16_32_RSFT16(int16_t a, int32_t b)"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (int32_t tmp = 0 ; __asm)",
    "insertText": "__volatile(\"smulwb %0, %1, %2\" : \"=r\"(tmp) : \"r\"(b), \"r\"(a))"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (int32_t tmp = 0 ; __asm)",
    "insertText": "__volatile(\"smulbb %0, %1, %2\" : \"=r\"(tmp) : \"r\"(a), \"r\"(b))"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (int32_t tmp = 0 ; __asm)",
    "insertText": "__volatile(\"smlabb %0, %1, %2, %3\" : \"=r\"(tmp) : \"r\"(a), \"r\"(b), \"r\"(c))"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (int32_t s_sum = 0 ; __asm)",
    "insertText": "__volatile(\"qadd16 %0, %1, %2\" : \"=r\"(s_sum) : \"r\"(a), \"r\"(b))"
  },
  {
    "label": "WebRtcSpl_AddSatW32()",
    "kind": "Method",
    "detail": "Function (} __inline int32_t)",
    "insertText": "WebRtcSpl_AddSatW32(int32_t l_var1, int32_t l_var2)"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (int32_t l_sum = 0 ; __asm)",
    "insertText": "__volatile(\"qadd %0, %1, %2\" : \"=r\"(l_sum) : \"r\"(l_var1), \"r\"(l_var2))"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (int32_t l_sub = 0 ; __asm)",
    "insertText": "__volatile(\"qsub %0, %1, %2\" : \"=r\"(l_sub) : \"r\"(l_var1), \"r\"(l_var2))"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (int32_t s_sub = 0 ; __asm)",
    "insertText": "__volatile(\"qsub16 %0, %1, %2\" : \"=r\"(s_sub) : \"r\"(var1), \"r\"(var2))"
  },
  {
    "label": "WebRtcSpl_GetSizeInBits()",
    "kind": "Method",
    "detail": "Function (} __inline int16_t)",
    "insertText": "WebRtcSpl_GetSizeInBits(uint32_t n)"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (int32_t tmp = 0 ; __asm)",
    "insertText": "__volatile(\"clz %0, %1\" : \"=r\"(tmp) : \"r\"(n))"
  },
  {
    "label": "WebRtcSpl_NormW32()",
    "kind": "Method",
    "detail": "Function (} __inline int16_t)",
    "insertText": "WebRtcSpl_NormW32(int32_t a)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int32_t tmp = 0 ;)",
    "insertText": "if(a == 0)"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (a ^ = 0 xFFFFFFFF ; } __asm)",
    "insertText": "__volatile(\"clz %0, %1\" : \"=r\"(tmp) : \"r\"(a))"
  },
  {
    "label": "WebRtcSpl_NormU32()",
    "kind": "Method",
    "detail": "Function (} __inline int16_t)",
    "insertText": "WebRtcSpl_NormU32(uint32_t a)"
  },
  {
    "label": "WebRtcSpl_NormW16()",
    "kind": "Method",
    "detail": "Function (} __inline int16_t)",
    "insertText": "WebRtcSpl_NormW16(int16_t a)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int32_t tmp = 0 ; int32_t a_32 = a ;)",
    "insertText": "if(a_32 == 0)"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (a_32 ^ = 0 xFFFFFFFF ; } __asm)",
    "insertText": "__volatile(\"clz %0, %1\" : \"=r\"(tmp) : \"r\"(a_32))"
  },
  {
    "label": "WebRtcSpl_SatW32ToW16()",
    "kind": "Method",
    "detail": "Function (} __inline int16_t)",
    "insertText": "WebRtcSpl_SatW32ToW16(int32_t value32)"
  },
  {
    "label": "__volatile()",
    "kind": "Method",
    "detail": "Function (int32_t out = 0 ; __asm)",
    "insertText": "__volatile(\"ssat %0, #16, %1\" : \"=r\"(out) : \"r\"(value32))"
  }
]