[
  {
    "label": "FAnimInstanceProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimInstanceProxy"
  },
  {
    "label": "FAnimTickRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimTickRecord"
  },
  {
    "label": "FAnimationBaseContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationBaseContext"
  },
  {
    "label": "FAnimationUpdateContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationUpdateContext"
  },
  {
    "label": "UAnimInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimInstance"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FAnimationInitializeContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationInitializeContext"
  },
  {
    "label": "FAnimationUpdateContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationUpdateContext"
  },
  {
    "label": "FAnimationBaseContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationBaseContext"
  },
  {
    "label": "FAnimationCacheBonesContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationCacheBonesContext"
  },
  {
    "label": "FPoseContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseContext"
  },
  {
    "label": "FComponentSpacePoseContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentSpacePoseContext"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FAnimNode_SequencePlayerBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SequencePlayerBase"
  },
  {
    "label": "FAnimNotifyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyEvent"
  },
  {
    "label": "FPassedMarker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPassedMarker"
  },
  {
    "label": "FAnimSyncMarker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimSyncMarker"
  },
  {
    "label": "FAnimMontageInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimMontageInstance"
  },
  {
    "label": "UPoseWatchPoseElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatchPoseElement"
  },
  {
    "label": "FAnimTrace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimTrace"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FScopedAnimNodeTrace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedAnimNodeTrace"
  },
  {
    "label": "FScopedAnimGraphTrace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedAnimGraphTrace"
  },
  {
    "label": "FScopedAnimNodeTraceSuspend",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedAnimNodeTraceSuspend"
  },
  {
    "label": "FDebugLine",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugLine"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "OutputAnimTickRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimTickRecord(const FAnimationBaseContext& InContext, const FAnimTickRecord& InTickRecord)"
  },
  {
    "label": "OutputSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputSkeletalMesh(const USkeletalMesh* InMesh)"
  },
  {
    "label": "OutputSkeletalMeshComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputSkeletalMeshComponent(const USkeletalMeshComponent* InComponent)"
  },
  {
    "label": "OutputSkeletalMeshFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputSkeletalMeshFrame(const USkeletalMeshComponent* InComponent)"
  },
  {
    "label": "OutputAnimGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimGraph(const FAnimationBaseContext& InContext, uint64 InStartCycle, uint64 InEndCycle, uint8 InPhase)"
  },
  {
    "label": "OutputAnimNodeStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeStart(const FAnimationBaseContext& InContext, uint64 InStartCycle, int32 InPreviousNodeId, int32 InNodeId, float InBlendWeight, float InRootMotionWeight, uint8 InPhase)"
  },
  {
    "label": "OutputAnimNodeEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeEnd(const FAnimationBaseContext& InContext, uint64 InEndCycle)"
  },
  {
    "label": "OutputAnimNodeAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeAttribute(const FAnimInstanceProxy& InTargetProxy, const FAnimInstanceProxy& InSourceProxy, int32 InTargetNodeId, int32 InSourceNodeId, FName InAttribute)"
  },
  {
    "label": "OutputAnimNodeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValue(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, bool InValue)"
  },
  {
    "label": "OutputAnimNodeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValue(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, int32 InValue)"
  },
  {
    "label": "OutputAnimNodeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValue(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, float InValue)"
  },
  {
    "label": "OutputAnimNodeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValue(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, const FVector2D& InValue)"
  },
  {
    "label": "OutputAnimNodeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValue(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, const FVector& InValue)"
  },
  {
    "label": "OutputAnimNodeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValue(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, const FRotator& InValue)"
  },
  {
    "label": "OutputAnimNodeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValue(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, const FName& InValue)"
  },
  {
    "label": "OutputAnimNodeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValue(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, const TCHAR* InValue)"
  },
  {
    "label": "OutputAnimNodeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValue(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, const UClass* InValue)"
  },
  {
    "label": "OutputAnimNodeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValue(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, const UObject* InValue)"
  },
  {
    "label": "OutputAnimNodeValueAnimNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNodeValueAnimNode(const FAnimationBaseContext& InContext, uint32 NodeIndex, const TCHAR* InKey, int32 InValue, const UObject* InValueAnimInstanceId)"
  },
  {
    "label": "OutputAnimSequencePlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimSequencePlayer(const FAnimationBaseContext& InContext, const FAnimNode_SequencePlayerBase& InNode)"
  },
  {
    "label": "OutputName()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "OutputName(const FName& InName)"
  },
  {
    "label": "OutputStateMachineState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputStateMachineState(const FAnimationBaseContext& InContext, int32 InStateMachineIndex, int32 InStateIndex, float InStateWeight, float InElapsedTime)"
  },
  {
    "label": "OutputAnimNotify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimNotify(UAnimInstance* InAnimInstance, const FAnimNotifyEvent& InNotifyEvent, ENotifyEventType InEventType)"
  },
  {
    "label": "OutputAnimSyncMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputAnimSyncMarker(UAnimInstance* InAnimInstance, const FPassedMarker& InPassedSyncMarker)"
  },
  {
    "label": "OutputMontage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputMontage(UAnimInstance* InAnimInstance, const FAnimMontageInstance& InMontageInstance)"
  },
  {
    "label": "OutputSync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputSync(const FAnimInstanceProxy& InSourceProxy, int32 InSourceNodeId, FName InGroupName)"
  },
  {
    "label": "OutputPoseWatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputPoseWatch(const FAnimInstanceProxy& InSourceProxy, UPoseWatchPoseElement* InPoseWatchElement, int32 InPoseWatchId, const TArray<FTransform>& BoneTransforms, const FBlendedHeapCurve& InCurves, const TArray<FBoneIndexType>& RequiredBones, const FTransform& WorldTransform, const bool bIsEnabled)"
  },
  {
    "label": "OutputInertialization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputInertialization(const FAnimInstanceProxy& InSourceProxy, int32 InNodeId, float InWeight, EInertializationType InType)"
  },
  {
    "label": "_ScopedAnimGraphTrace()",
    "kind": "Method",
    "detail": "Function (FAnimTrace::FScopedAnimGraphTrace)",
    "insertText": "_ScopedAnimGraphTrace(Context)"
  },
  {
    "label": "_ScopedAnimNodeTrace()",
    "kind": "Method",
    "detail": "Function (FAnimTrace::FScopedAnimNodeTrace)",
    "insertText": "_ScopedAnimNodeTrace(Context)"
  }
]