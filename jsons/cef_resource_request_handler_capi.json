[
  {
    "label": "_cef_cookie_access_filter_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_cookie_access_filter_t"
  },
  {
    "label": "_cef_resource_request_handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_resource_request_handler_t"
  },
  {
    "label": "_cef_browser_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_t"
  },
  {
    "label": "_cef_frame_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_frame_t"
  },
  {
    "label": "_cef_request_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_request_t"
  },
  {
    "label": "_cef_request_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_request_callback_t"
  },
  {
    "label": "_cef_resource_handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_resource_handler_t"
  },
  {
    "label": "_cef_response_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_response_t"
  },
  {
    "label": "_cef_response_filter_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_response_filter_t"
  },
  {
    "label": "_cef_cookie_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_cookie_t"
  },
  {
    "label": "_cef_cookie_access_filter_t()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_RESOURCE_REQUEST_HANDLER_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_RESOURCE_REQUEST_HANDLER_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_browser_capi . h \" # include \" include / capi / cef_frame_capi . h \" # include \" include / capi / cef_request_callback_capi . h \" # include \" include / capi / cef_request_capi . h \" # include \" include / capi / cef_resource_handler_capi . h \" # include \" include / capi / cef_response_capi . h \" # include \" include / capi / cef_response_filter_capi . h \" # ifdef __cplusplus \" C \" { # endif struct _cef_cookie_access_filter_t ; typedef struct _cef_resource_request_handler_t { cef_base_ref_counted_t base ; struct)",
    "insertText": "_cef_cookie_access_filter_t(CEF_CALLBACK* get_cookie_access_filter)( struct _cef_resource_request_handler_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, struct _cef_request_t* request)"
  },
  {
    "label": "cef_return_value_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_return_value_t(CEF_CALLBACK* on_before_resource_load)( struct _cef_resource_request_handler_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, struct _cef_request_t* request, struct _cef_request_callback_t* callback)"
  },
  {
    "label": "_cef_resource_handler_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_resource_handler_t(CEF_CALLBACK* get_resource_handler)( struct _cef_resource_request_handler_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, struct _cef_request_t* request)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_resource_redirect)( struct _cef_resource_request_handler_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, struct _cef_request_t* request, struct _cef_response_t* response, cef_string_t* new_url)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* on_resource_response)( struct _cef_resource_request_handler_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, struct _cef_request_t* request, struct _cef_response_t* response)"
  },
  {
    "label": "_cef_response_filter_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_response_filter_t(CEF_CALLBACK* get_resource_response_filter)( struct _cef_resource_request_handler_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, struct _cef_request_t* request, struct _cef_response_t* response)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_resource_load_complete)( struct _cef_resource_request_handler_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, struct _cef_request_t* request, struct _cef_response_t* response, cef_urlrequest_status_t status, int64 received_content_length)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_protocol_execution)( struct _cef_resource_request_handler_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, struct _cef_request_t* request, int* allow_os_execution)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (} cef_resource_request_handler_t ; typedef struct _cef_cookie_access_filter_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* can_send_cookie)(struct _cef_cookie_access_filter_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, struct _cef_request_t* request, const struct _cef_cookie_t* cookie)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* can_save_cookie)(struct _cef_cookie_access_filter_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, struct _cef_request_t* request, struct _cef_response_t* response, const struct _cef_cookie_t* cookie)"
  }
]