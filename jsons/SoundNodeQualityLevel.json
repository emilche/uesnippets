[
  {
    "label": "FAudioDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDevice"
  },
  {
    "label": "FActiveSound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveSound"
  },
  {
    "label": "FSoundParseParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundParseParameters"
  },
  {
    "label": "FWaveInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWaveInstance"
  },
  {
    "label": "USoundNodeQualityLevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundNodeQualityLevel"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Sound / SoundNode . h \" # include \" SoundNodeQualityLevel . generated . h \" class FAudioDevice ; struct FActiveSound ; struct FSoundParseParameters ; struct FWaveInstance ;)",
    "insertText": "UCLASS(hidecategories=Object, editinlinenew, MinimalAPI, meta=( DisplayName=\"Quality Level\" ))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual void PostLoad()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "ParseNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseNodes(FAudioDevice* AudioDevice, const UPTRINT NodeWaveInstanceHash, FActiveSound& ActiveSound, const FSoundParseParameters& ParseParams, TArray<FWaveInstance*>& WaveInstances)"
  },
  {
    "label": "GetMaxChildNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxChildNodes()"
  },
  {
    "label": "GetMinChildNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMinChildNodes()"
  },
  {
    "label": "PrimeChildWavePlayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrimeChildWavePlayers(bool bRecurse)"
  },
  {
    "label": "RetainChildWavePlayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetainChildWavePlayers(bool bRecurse)"
  },
  {
    "label": "ReleaseRetainerOnChildWavePlayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRetainerOnChildWavePlayers(bool bRecurse)"
  },
  {
    "label": "LoadChildWavePlayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadChildWavePlayers(bool bAddToRoot, bool bRecurse)"
  },
  {
    "label": "GetInputPinName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FText)",
    "insertText": "GetInputPinName(int32 PinIndex)"
  },
  {
    "label": "ReconcileNode()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "ReconcileNode(bool bReconstructNode)"
  },
  {
    "label": "ForCurrentQualityLevel()",
    "kind": "Method",
    "detail": "Function (FCriticalSection EditorOnlyCs ; # endif private : void)",
    "insertText": "ForCurrentQualityLevel(TFunction<void(USoundNode*)>&& Lambda)"
  }
]