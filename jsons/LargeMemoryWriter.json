[
  {
    "label": "FLargeMemoryWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLargeMemoryWriter"
  },
  {
    "label": "FLargeMemoryWriter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Memory / MemoryFwd . h \" # include \" Memory / MemoryView . h \" # include \" Serialization / LargeMemoryData . h \" # include \" Serialization / MemoryArchive . h \" # include \" UObject / NameTypes . h \" class FLargeMemoryWriter : public FMemoryArchive { public :)",
    "insertText": "FLargeMemoryWriter(const int64 PreAllocateBytes = 0, bool bIsPersistent = false, const TCHAR* InFilename = nullptr)"
  },
  {
    "label": "FLargeMemoryWriter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLargeMemoryWriter()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(void* InData, int64 Num)"
  },
  {
    "label": "GetArchiveName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetArchiveName()"
  },
  {
    "label": "TotalSize()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "TotalSize()"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (} uint8*)",
    "insertText": "GetData()"
  },
  {
    "label": "GetView()",
    "kind": "Method",
    "detail": "Function (FMemoryView)",
    "insertText": "GetView()"
  },
  {
    "label": "ReleaseOwnership()",
    "kind": "Method",
    "detail": "Function (} uint8*)",
    "insertText": "ReleaseOwnership()"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reserve(int64 Size)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (Data .)",
    "insertText": "Reserve(Size)"
  },
  {
    "label": "FLargeMemoryWriter()",
    "kind": "Method",
    "detail": "Function (} private : FLargeMemoryData Data ;)",
    "insertText": "FLargeMemoryWriter(const FLargeMemoryWriter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FLargeMemoryWriter&)",
    "insertText": "operator(const FLargeMemoryWriter&)"
  }
]